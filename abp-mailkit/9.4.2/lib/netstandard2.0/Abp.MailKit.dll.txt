public class Abp.MailKit.AbpMailKitConfiguration : object {
    [CompilerGeneratedAttribute]
private Nullable`1<SecureSocketOptions> <SecureSocketOption>k__BackingField;
    public Nullable`1<SecureSocketOptions> SecureSocketOption { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SecureSocketOptions> get_SecureSocketOption();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SecureSocketOption(Nullable`1<SecureSocketOptions> value);
}
[ExtensionAttribute]
public static class Abp.MailKit.AbpMailKitConfigurationExtensions : object {
    [ExtensionAttribute]
public static IAbpMailKitConfiguration AbpMailKit(IModuleConfigurations configurations);
}
[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Abp.MailKit.AbpMailKitModule : AbpModule {
    public virtual void PreInitialize();
    public virtual void Initialize();
}
public class Abp.MailKit.DefaultMailKitSmtpBuilder : object {
    private ISmtpEmailSenderConfiguration _smtpEmailSenderConfiguration;
    private IAbpMailKitConfiguration _abpMailKitConfiguration;
    public DefaultMailKitSmtpBuilder(ISmtpEmailSenderConfiguration smtpEmailSenderConfiguration, IAbpMailKitConfiguration abpMailKitConfiguration);
    public virtual SmtpClient Build();
    protected virtual void ConfigureClient(SmtpClient client);
    protected virtual SecureSocketOptions GetSecureSocketOption();
}
[ExtensionAttribute]
public static class Abp.MailKit.EmailExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute]
public static MimeMessage ToMimeMessage(MailMessage mail);
    private static MimePart GetMimePart(AttachmentBase item);
    [ExtensionAttribute]
private static MailboxAddress ToMailboxAddress(MailAddress address);
    [ExtensionAttribute]
private static InternetAddressList ToInternetAddressList(MailAddressCollection addresses);
}
public interface Abp.MailKit.IAbpMailKitConfiguration {
    public Nullable`1<SecureSocketOptions> SecureSocketOption { get; public set; }
    public abstract virtual Nullable`1<SecureSocketOptions> get_SecureSocketOption();
    public abstract virtual void set_SecureSocketOption(Nullable`1<SecureSocketOptions> value);
}
public interface Abp.MailKit.IMailKitSmtpBuilder {
    public abstract virtual SmtpClient Build();
}
public class Abp.MailKit.MailKitEmailSender : EmailSenderBase {
    private IMailKitSmtpBuilder _smtpBuilder;
    public MailKitEmailSender(IEmailSenderConfiguration smtpEmailSenderConfiguration, IMailKitSmtpBuilder smtpBuilder);
    [AsyncStateMachineAttribute("Abp.MailKit.MailKitEmailSender/<SendAsync>d__2")]
public virtual Task SendAsync(string from, string to, string subject, string body, bool isBodyHtml);
    public virtual void Send(string from, string to, string subject, string body, bool isBodyHtml);
    [AsyncStateMachineAttribute("Abp.MailKit.MailKitEmailSender/<SendEmailAsync>d__4")]
protected virtual Task SendEmailAsync(MailMessage mail);
    protected virtual void SendEmail(MailMessage mail);
    protected virtual SmtpClient BuildSmtpClient();
    private static MimeMessage BuildMimeMessage(string from, string to, string subject, string body, bool isBodyHtml);
}
internal class AbpMailKit_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
