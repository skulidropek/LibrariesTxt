[ExtensionAttribute]
public static class Abp.Configuration.Startup.AbpWebConfigurationExtensions : object {
    [ExtensionAttribute]
public static IAbpWebCommonModuleConfiguration AbpWebCommon(IModuleConfigurations configurations);
}
public interface Abp.Dependency.IPerWebRequestDependency {
}
[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Abp.Web.AbpWebCommonModule : AbpModule {
    public virtual void PreInitialize();
    public virtual void Initialize();
}
public static class Abp.Web.AbpWebConsts : object {
    public static string LocalizationSourceName;
}
public class Abp.Web.Api.Modeling.ActionApiDescriptionModel : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ParameterApiDescriptionModel> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private ReturnValueApiDescriptionModel <ReturnValue>k__BackingField;
    public string Name { get; }
    public string HttpMethod { get; }
    public string Url { get; }
    public IList`1<ParameterApiDescriptionModel> Parameters { get; }
    public ReturnValueApiDescriptionModel ReturnValue { get; }
    public ActionApiDescriptionModel(string name, ReturnValueApiDescriptionModel returnValue, string url, string httpMethod);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_HttpMethod();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public IList`1<ParameterApiDescriptionModel> get_Parameters();
    [CompilerGeneratedAttribute]
public ReturnValueApiDescriptionModel get_ReturnValue();
    public ParameterApiDescriptionModel AddParameter(ParameterApiDescriptionModel parameter);
}
public class Abp.Web.Api.Modeling.ApplicationApiDescriptionModel : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ModuleApiDescriptionModel> <Modules>k__BackingField;
    public IDictionary`2<string, ModuleApiDescriptionModel> Modules { get; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ModuleApiDescriptionModel> get_Modules();
    public ModuleApiDescriptionModel AddModule(ModuleApiDescriptionModel module);
    public ModuleApiDescriptionModel GetOrAddModule(string name);
    public ApplicationApiDescriptionModel CreateSubModel(String[] modules, String[] controllers, String[] actions);
}
public class Abp.Web.Api.Modeling.ControllerApiDescriptionModel : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ActionApiDescriptionModel> <Actions>k__BackingField;
    public string Name { get; }
    public IDictionary`2<string, ActionApiDescriptionModel> Actions { get; }
    public ControllerApiDescriptionModel(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ActionApiDescriptionModel> get_Actions();
    public ActionApiDescriptionModel AddAction(ActionApiDescriptionModel action);
    public ControllerApiDescriptionModel CreateSubModel(String[] actions);
}
public interface Abp.Web.Api.Modeling.IApiDescriptionModelProvider {
    public abstract virtual ApplicationApiDescriptionModel CreateModel();
}
public class Abp.Web.Api.Modeling.ModuleApiDescriptionModel : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ControllerApiDescriptionModel> <Controllers>k__BackingField;
    public string Name { get; public set; }
    public IDictionary`2<string, ControllerApiDescriptionModel> Controllers { get; }
    public ModuleApiDescriptionModel(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ControllerApiDescriptionModel> get_Controllers();
    public ControllerApiDescriptionModel AddController(ControllerApiDescriptionModel controller);
    public ControllerApiDescriptionModel GetOrAddController(string name);
    public ModuleApiDescriptionModel CreateSubModel(String[] controllers, String[] actions);
}
public class Abp.Web.Api.Modeling.ParameterApiDescriptionModel : object {
    [CompilerGeneratedAttribute]
private string <NameOnMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeAsString>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    [CompilerGeneratedAttribute]
private object <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ConstraintTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BindingSourceId>k__BackingField;
    public string NameOnMethod { get; }
    public string Name { get; }
    public Type Type { get; }
    public string TypeAsString { get; }
    public bool IsOptional { get; }
    public object DefaultValue { get; }
    public String[] ConstraintTypes { get; }
    public string BindingSourceId { get; }
    public ParameterApiDescriptionModel(string name, string nameOnMethod, Type type, bool isOptional, object defaultValue, String[] constraintTypes, string bindingSourceId);
    [CompilerGeneratedAttribute]
public string get_NameOnMethod();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeAsString();
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public object get_DefaultValue();
    [CompilerGeneratedAttribute]
public String[] get_ConstraintTypes();
    [CompilerGeneratedAttribute]
public string get_BindingSourceId();
}
public class Abp.Web.Api.Modeling.ReturnValueApiDescriptionModel : object {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeAsString>k__BackingField;
    public Type Type { get; }
    public string TypeAsString { get; }
    public ReturnValueApiDescriptionModel(Type type);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeAsString();
}
public class Abp.Web.Api.ProxyScripting.ApiProxyGenerationOptions : object {
    [CompilerGeneratedAttribute]
private string <GeneratorType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseCache>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Modules>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Controllers>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Actions>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    public string GeneratorType { get; public set; }
    public bool UseCache { get; public set; }
    public String[] Modules { get; public set; }
    public String[] Controllers { get; public set; }
    public String[] Actions { get; public set; }
    public IDictionary`2<string, string> Properties { get; public set; }
    public ApiProxyGenerationOptions(string generatorType, bool useCache);
    [CompilerGeneratedAttribute]
public string get_GeneratorType();
    [CompilerGeneratedAttribute]
public void set_GeneratorType(string value);
    [CompilerGeneratedAttribute]
public bool get_UseCache();
    [CompilerGeneratedAttribute]
public void set_UseCache(bool value);
    [CompilerGeneratedAttribute]
public String[] get_Modules();
    [CompilerGeneratedAttribute]
public void set_Modules(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Controllers();
    [CompilerGeneratedAttribute]
public void set_Controllers(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_Actions();
    [CompilerGeneratedAttribute]
public void set_Actions(String[] value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, string> value);
    public bool IsPartialRequest();
}
public class Abp.Web.Api.ProxyScripting.ApiProxyScriptManager : object {
    private IApiDescriptionModelProvider _modelProvider;
    private IApiProxyScriptingConfiguration _configuration;
    private IIocResolver _iocResolver;
    private ConcurrentDictionary`2<string, string> _cache;
    public ApiProxyScriptManager(IApiDescriptionModelProvider modelProvider, IApiProxyScriptingConfiguration configuration, IIocResolver iocResolver);
    public sealed virtual string GetScript(ApiProxyGenerationOptions options);
    private string CreateScript(ApiProxyGenerationOptions options);
    private static string CreateCacheKey(ApiProxyGenerationOptions options);
}
public class Abp.Web.Api.ProxyScripting.Configuration.ApiProxyScriptingConfiguration : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, Type> <Generators>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RemoveAsyncPostfixOnProxyGeneration>k__BackingField;
    public IDictionary`2<string, Type> Generators { get; }
    public bool RemoveAsyncPostfixOnProxyGeneration { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, Type> get_Generators();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_RemoveAsyncPostfixOnProxyGeneration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RemoveAsyncPostfixOnProxyGeneration(bool value);
}
public interface Abp.Web.Api.ProxyScripting.Configuration.IApiProxyScriptingConfiguration {
    public IDictionary`2<string, Type> Generators { get; }
    public bool RemoveAsyncPostfixOnProxyGeneration { get; public set; }
    public abstract virtual IDictionary`2<string, Type> get_Generators();
    public abstract virtual bool get_RemoveAsyncPostfixOnProxyGeneration();
    public abstract virtual void set_RemoveAsyncPostfixOnProxyGeneration(bool value);
}
public interface Abp.Web.Api.ProxyScripting.Generators.IProxyScriptGenerator {
    public abstract virtual string CreateScript(ApplicationApiDescriptionModel model);
}
public class Abp.Web.Api.ProxyScripting.Generators.JQuery.JQueryProxyScriptGenerator : object {
    public static string Name;
    public sealed virtual string CreateScript(ApplicationApiDescriptionModel model);
    private static void AddModuleScript(StringBuilder script, ModuleApiDescriptionModel module);
    private static void AddControllerScript(StringBuilder script, ModuleApiDescriptionModel module, ControllerApiDescriptionModel controller);
    private static void AddActionScript(StringBuilder script, ModuleApiDescriptionModel module, ControllerApiDescriptionModel controller, ActionApiDescriptionModel action);
    private static void AddAjaxCallParameters(StringBuilder script, ControllerApiDescriptionModel controller, ActionApiDescriptionModel action);
}
public static class Abp.Web.Api.ProxyScripting.Generators.ParameterBindingSources : object {
    public static string ModelBinding;
    public static string Query;
    public static string Body;
    public static string Path;
    public static string Form;
    public static string Header;
    public static string Custom;
    public static string Services;
}
public static class Abp.Web.Api.ProxyScripting.Generators.ProxyScriptingHelper : object {
    public static string DefaultHttpVerb;
    public static string GenerateUrlWithParameters(ActionApiDescriptionModel action);
    public static string GenerateHeaders(ActionApiDescriptionModel action, int indent);
    public static string GenerateBody(ActionApiDescriptionModel action);
    public static string GenerateFormPostData(ActionApiDescriptionModel action, int indent);
    private static string ReplacePathVariables(string url, IList`1<ParameterApiDescriptionModel> actionParameters);
    private static string AddQueryStringParameters(string url, IList`1<ParameterApiDescriptionModel> actionParameters);
    public static string GetConventionalVerbForMethodName(string methodName);
}
public static class Abp.Web.Api.ProxyScripting.Generators.ProxyScriptingJsFuncHelper : object {
    private static string ValidJsVariableNameChars;
    private static HashSet`1<string> ReservedWords;
    private static ProxyScriptingJsFuncHelper();
    public static string NormalizeJsVariableName(string name, string additionalChars);
    public static string WrapWithBracketsOrWithDotPrefix(string name);
    public static string GetParamNameInJsFunc(ParameterApiDescriptionModel parameterInfo);
    public static string CreateJsObjectLiteral(ParameterApiDescriptionModel[] parameters, int indent);
    public static string GenerateJsFuncParameterList(ActionApiDescriptionModel action, string ajaxParametersName);
}
public interface Abp.Web.Api.ProxyScripting.IApiProxyScriptManager {
    public abstract virtual string GetScript(ApiProxyGenerationOptions options);
}
public class Abp.Web.Authorization.AuthorizationScriptManager : object {
    [CompilerGeneratedAttribute]
private IAbpSession <AbpSession>k__BackingField;
    private IPermissionManager _permissionManager;
    [CompilerGeneratedAttribute]
private IPermissionChecker <PermissionChecker>k__BackingField;
    public IAbpSession AbpSession { get; public set; }
    public IPermissionChecker PermissionChecker { get; public set; }
    public AuthorizationScriptManager(IPermissionManager permissionManager);
    [CompilerGeneratedAttribute]
public IAbpSession get_AbpSession();
    [CompilerGeneratedAttribute]
public void set_AbpSession(IAbpSession value);
    [CompilerGeneratedAttribute]
public IPermissionChecker get_PermissionChecker();
    [CompilerGeneratedAttribute]
public void set_PermissionChecker(IPermissionChecker value);
    [AsyncStateMachineAttribute("Abp.Web.Authorization.AuthorizationScriptManager/<GetScriptAsync>d__10")]
public sealed virtual Task`1<string> GetScriptAsync();
    private static void AppendPermissionList(StringBuilder script, string name, IReadOnlyList`1<string> permissions);
}
public interface Abp.Web.Authorization.IAuthorizationScriptManager {
    public abstract virtual Task`1<string> GetScriptAsync();
}
public class Abp.Web.Configuration.AbpUserConfigurationBuilder : object {
    private IAbpStartupConfiguration _startupConfiguration;
    [CompilerGeneratedAttribute]
private IMultiTenancyConfig <MultiTenancyConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private ILanguageManager <LanguageManager>k__BackingField;
    [CompilerGeneratedAttribute]
private ILocalizationManager <LocalizationManager>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeatureManager <FeatureManager>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeatureChecker <FeatureChecker>k__BackingField;
    [CompilerGeneratedAttribute]
private IPermissionManager <PermissionManager>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserNavigationManager <UserNavigationManager>k__BackingField;
    [CompilerGeneratedAttribute]
private ISettingDefinitionManager <SettingDefinitionManager>k__BackingField;
    [CompilerGeneratedAttribute]
private ISettingManager <SettingManager>k__BackingField;
    [CompilerGeneratedAttribute]
private IAbpAntiForgeryConfiguration <AbpAntiForgeryConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IAbpSession <AbpSession>k__BackingField;
    [CompilerGeneratedAttribute]
private IPermissionChecker <PermissionChecker>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <CustomDataConfig>k__BackingField;
    private IIocResolver _iocResolver;
    protected IMultiTenancyConfig MultiTenancyConfig { get; }
    protected ILanguageManager LanguageManager { get; }
    protected ILocalizationManager LocalizationManager { get; }
    protected IFeatureManager FeatureManager { get; }
    protected IFeatureChecker FeatureChecker { get; }
    protected IPermissionManager PermissionManager { get; }
    protected IUserNavigationManager UserNavigationManager { get; }
    protected ISettingDefinitionManager SettingDefinitionManager { get; }
    protected ISettingManager SettingManager { get; }
    protected IAbpAntiForgeryConfiguration AbpAntiForgeryConfiguration { get; }
    protected IAbpSession AbpSession { get; }
    protected IPermissionChecker PermissionChecker { get; }
    protected Dictionary`2<string, object> CustomDataConfig { get; }
    public AbpUserConfigurationBuilder(IMultiTenancyConfig multiTenancyConfig, ILanguageManager languageManager, ILocalizationManager localizationManager, IFeatureManager featureManager, IFeatureChecker featureChecker, IPermissionManager permissionManager, IUserNavigationManager userNavigationManager, ISettingDefinitionManager settingDefinitionManager, ISettingManager settingManager, IAbpAntiForgeryConfiguration abpAntiForgeryConfiguration, IAbpSession abpSession, IPermissionChecker permissionChecker, IIocResolver iocResolver, IAbpStartupConfiguration startupConfiguration);
    [CompilerGeneratedAttribute]
protected IMultiTenancyConfig get_MultiTenancyConfig();
    [CompilerGeneratedAttribute]
protected ILanguageManager get_LanguageManager();
    [CompilerGeneratedAttribute]
protected ILocalizationManager get_LocalizationManager();
    [CompilerGeneratedAttribute]
protected IFeatureManager get_FeatureManager();
    [CompilerGeneratedAttribute]
protected IFeatureChecker get_FeatureChecker();
    [CompilerGeneratedAttribute]
protected IPermissionManager get_PermissionManager();
    [CompilerGeneratedAttribute]
protected IUserNavigationManager get_UserNavigationManager();
    [CompilerGeneratedAttribute]
protected ISettingDefinitionManager get_SettingDefinitionManager();
    [CompilerGeneratedAttribute]
protected ISettingManager get_SettingManager();
    [CompilerGeneratedAttribute]
protected IAbpAntiForgeryConfiguration get_AbpAntiForgeryConfiguration();
    [CompilerGeneratedAttribute]
protected IAbpSession get_AbpSession();
    [CompilerGeneratedAttribute]
protected IPermissionChecker get_PermissionChecker();
    [CompilerGeneratedAttribute]
protected Dictionary`2<string, object> get_CustomDataConfig();
    [AsyncStateMachineAttribute("Abp.Web.Configuration.AbpUserConfigurationBuilder/<GetAll>d__42")]
public virtual Task`1<AbpUserConfigurationDto> GetAll();
    protected virtual AbpMultiTenancyConfigDto GetUserMultiTenancyConfig();
    protected virtual AbpUserSessionConfigDto GetUserSessionConfig();
    protected virtual AbpUserLocalizationConfigDto GetUserLocalizationConfig();
    [AsyncStateMachineAttribute("Abp.Web.Configuration.AbpUserConfigurationBuilder/<GetUserFeaturesConfig>d__46")]
protected virtual Task`1<AbpUserFeatureConfigDto> GetUserFeaturesConfig();
    [AsyncStateMachineAttribute("Abp.Web.Configuration.AbpUserConfigurationBuilder/<GetUserAuthConfig>d__47")]
protected virtual Task`1<AbpUserAuthConfigDto> GetUserAuthConfig();
    [AsyncStateMachineAttribute("Abp.Web.Configuration.AbpUserConfigurationBuilder/<GetUserNavConfig>d__48")]
protected virtual Task`1<AbpUserNavConfigDto> GetUserNavConfig();
    [AsyncStateMachineAttribute("Abp.Web.Configuration.AbpUserConfigurationBuilder/<GetUserSettingConfig>d__49")]
protected virtual Task`1<AbpUserSettingConfigDto> GetUserSettingConfig();
    protected virtual AbpUserClockConfigDto GetUserClockConfig();
    [AsyncStateMachineAttribute("Abp.Web.Configuration.AbpUserConfigurationBuilder/<GetUserTimingConfig>d__51")]
protected virtual Task`1<AbpUserTimingConfigDto> GetUserTimingConfig();
    protected virtual AbpUserSecurityConfigDto GetUserSecurityConfig();
}
internal class Abp.Web.Configuration.AbpWebCommonModuleConfiguration : object {
    [CompilerGeneratedAttribute]
private bool <SendAllExceptionsToClients>k__BackingField;
    [CompilerGeneratedAttribute]
private IApiProxyScriptingConfiguration <ApiProxyScripting>k__BackingField;
    [CompilerGeneratedAttribute]
private IAbpAntiForgeryConfiguration <AntiForgery>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebEmbeddedResourcesConfiguration <EmbeddedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebMultiTenancyConfiguration <MultiTenancy>k__BackingField;
    [CompilerGeneratedAttribute]
private WrapResultFilterCollection <WrapResultFilters>k__BackingField;
    public bool SendAllExceptionsToClients { get; public set; }
    public IApiProxyScriptingConfiguration ApiProxyScripting { get; }
    public IAbpAntiForgeryConfiguration AntiForgery { get; }
    public IWebEmbeddedResourcesConfiguration EmbeddedResources { get; }
    public IWebMultiTenancyConfiguration MultiTenancy { get; }
    public WrapResultFilterCollection WrapResultFilters { get; }
    public AbpWebCommonModuleConfiguration(IApiProxyScriptingConfiguration apiProxyScripting, IAbpAntiForgeryConfiguration abpAntiForgery, IWebEmbeddedResourcesConfiguration embeddedResources, IWebMultiTenancyConfiguration multiTenancy);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_SendAllExceptionsToClients();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SendAllExceptionsToClients(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual IApiProxyScriptingConfiguration get_ApiProxyScripting();
    [CompilerGeneratedAttribute]
public sealed virtual IAbpAntiForgeryConfiguration get_AntiForgery();
    [CompilerGeneratedAttribute]
public sealed virtual IWebEmbeddedResourcesConfiguration get_EmbeddedResources();
    [CompilerGeneratedAttribute]
public sealed virtual IWebMultiTenancyConfiguration get_MultiTenancy();
    [CompilerGeneratedAttribute]
public sealed virtual WrapResultFilterCollection get_WrapResultFilters();
}
public class Abp.Web.Configuration.CustomConfigScriptManager : object {
    private IAbpStartupConfiguration _abpStartupConfiguration;
    public CustomConfigScriptManager(IAbpStartupConfiguration abpStartupConfiguration);
    public sealed virtual string GetScript();
}
public interface Abp.Web.Configuration.IAbpWebCommonModuleConfiguration {
    public bool SendAllExceptionsToClients { get; public set; }
    public IApiProxyScriptingConfiguration ApiProxyScripting { get; }
    public IAbpAntiForgeryConfiguration AntiForgery { get; }
    public IWebEmbeddedResourcesConfiguration EmbeddedResources { get; }
    public IWebMultiTenancyConfiguration MultiTenancy { get; }
    public WrapResultFilterCollection WrapResultFilters { get; }
    public abstract virtual bool get_SendAllExceptionsToClients();
    public abstract virtual void set_SendAllExceptionsToClients(bool value);
    public abstract virtual IApiProxyScriptingConfiguration get_ApiProxyScripting();
    public abstract virtual IAbpAntiForgeryConfiguration get_AntiForgery();
    public abstract virtual IWebEmbeddedResourcesConfiguration get_EmbeddedResources();
    public abstract virtual IWebMultiTenancyConfiguration get_MultiTenancy();
    public abstract virtual WrapResultFilterCollection get_WrapResultFilters();
}
public interface Abp.Web.Configuration.ICustomConfigScriptManager {
    public abstract virtual string GetScript();
}
public interface Abp.Web.Configuration.IWebEmbeddedResourcesConfiguration {
    public HashSet`1<string> IgnoredFileExtensions { get; }
    public abstract virtual HashSet`1<string> get_IgnoredFileExtensions();
}
internal class Abp.Web.Configuration.WebEmbeddedResourcesConfiguration : object {
    [CompilerGeneratedAttribute]
private HashSet`1<string> <IgnoredFileExtensions>k__BackingField;
    public HashSet`1<string> IgnoredFileExtensions { get; }
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_IgnoredFileExtensions();
}
public class Abp.Web.Features.FeaturesScriptManager : object {
    [CompilerGeneratedAttribute]
private IAbpSession <AbpSession>k__BackingField;
    private IFeatureManager _featureManager;
    private IFeatureChecker _featureChecker;
    public IAbpSession AbpSession { get; public set; }
    public FeaturesScriptManager(IFeatureManager featureManager, IFeatureChecker featureChecker);
    [CompilerGeneratedAttribute]
public IAbpSession get_AbpSession();
    [CompilerGeneratedAttribute]
public void set_AbpSession(IAbpSession value);
    [AsyncStateMachineAttribute("Abp.Web.Features.FeaturesScriptManager/<GetScriptAsync>d__7")]
public sealed virtual Task`1<string> GetScriptAsync();
}
public interface Abp.Web.Features.IFeaturesScriptManager {
    public abstract virtual Task`1<string> GetScriptAsync();
}
public static class Abp.Web.Http.HttpEncode : object {
    [CompilerGeneratedAttribute]
private static bool <JavaScriptEncodeAmpersand>k__BackingField;
    public static bool JavaScriptEncodeAmpersand { get; public set; }
    [CompilerGeneratedAttribute]
public static bool get_JavaScriptEncodeAmpersand();
    [CompilerGeneratedAttribute]
public static void set_JavaScriptEncodeAmpersand(bool value);
    private static bool CharRequiresJavaScriptEncoding(char c);
    private static void AppendCharAsUnicodeJavaScript(StringBuilder builder, char c);
    public static string JavaScriptStringEncode(string value);
}
[FlagsAttribute]
public enum Abp.Web.HttpVerb : Enum {
    public int value__;
    public static HttpVerb Get;
    public static HttpVerb Post;
    public static HttpVerb Put;
    public static HttpVerb Delete;
    public static HttpVerb Options;
    public static HttpVerb Trace;
    public static HttpVerb Head;
    public static HttpVerb Patch;
}
public static class Abp.Web.HttpVerbHelper : object {
    public static HttpVerb Create(string httpMethod);
}
public interface Abp.Web.Localization.ILocalizationScriptManager {
    public abstract virtual string GetScript();
    public abstract virtual string GetScript(CultureInfo cultureInfo);
}
internal class Abp.Web.Localization.LocalizationScriptManager : object {
    private ILocalizationManager _localizationManager;
    private ILanguageManager _languageManager;
    public LocalizationScriptManager(ILocalizationManager localizationManager, ILanguageManager languageManager);
    public sealed virtual string GetScript();
    public sealed virtual string GetScript(CultureInfo cultureInfo);
    private string BuildAll(CultureInfo cultureInfo);
}
public interface Abp.Web.Minifier.IJavaScriptMinifier {
    public abstract virtual string Minify(string javaScriptCode);
}
public class Abp.Web.Minifier.NUglifyJavaScriptMinifier : object {
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    public ILogger Logger { get; public set; }
    [CompilerGeneratedAttribute]
public ILogger get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger value);
    public sealed virtual string Minify(string javaScriptCode);
    [CompilerGeneratedAttribute]
private void <Minify>b__5_0(UglifyError error);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpLocalizationSourceDto : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Name { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpMultiTenancyConfigDto : object {
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreFeatureCheckForHostUsers>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpMultiTenancySidesConfigDto <Sides>k__BackingField;
    public bool IsEnabled { get; public set; }
    public bool IgnoreFeatureCheckForHostUsers { get; public set; }
    public AbpMultiTenancySidesConfigDto Sides { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreFeatureCheckForHostUsers();
    [CompilerGeneratedAttribute]
public void set_IgnoreFeatureCheckForHostUsers(bool value);
    [CompilerGeneratedAttribute]
public AbpMultiTenancySidesConfigDto get_Sides();
    [CompilerGeneratedAttribute]
private void set_Sides(AbpMultiTenancySidesConfigDto value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpMultiTenancySidesConfigDto : object {
    [CompilerGeneratedAttribute]
private MultiTenancySides <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTenancySides <Tenant>k__BackingField;
    public MultiTenancySides Host { get; private set; }
    public MultiTenancySides Tenant { get; private set; }
    [CompilerGeneratedAttribute]
public MultiTenancySides get_Host();
    [CompilerGeneratedAttribute]
private void set_Host(MultiTenancySides value);
    [CompilerGeneratedAttribute]
public MultiTenancySides get_Tenant();
    [CompilerGeneratedAttribute]
private void set_Tenant(MultiTenancySides value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpStringValueDto : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserAntiForgeryConfigDto : object {
    [CompilerGeneratedAttribute]
private string <TokenCookieName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenHeaderName>k__BackingField;
    public string TokenCookieName { get; public set; }
    public string TokenHeaderName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TokenCookieName();
    [CompilerGeneratedAttribute]
public void set_TokenCookieName(string value);
    [CompilerGeneratedAttribute]
public string get_TokenHeaderName();
    [CompilerGeneratedAttribute]
public void set_TokenHeaderName(string value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserAuthConfigDto : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <AllPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <GrantedPermissions>k__BackingField;
    public Dictionary`2<string, string> AllPermissions { get; public set; }
    public Dictionary`2<string, string> GrantedPermissions { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_AllPermissions();
    [CompilerGeneratedAttribute]
public void set_AllPermissions(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_GrantedPermissions();
    [CompilerGeneratedAttribute]
public void set_GrantedPermissions(Dictionary`2<string, string> value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserClockConfigDto : object {
    [CompilerGeneratedAttribute]
private string <Provider>k__BackingField;
    public string Provider { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Provider();
    [CompilerGeneratedAttribute]
public void set_Provider(string value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserConfigurationDto : object {
    [CompilerGeneratedAttribute]
private AbpMultiTenancyConfigDto <MultiTenancy>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpUserSessionConfigDto <Session>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpUserLocalizationConfigDto <Localization>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpUserFeatureConfigDto <Features>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpUserAuthConfigDto <Auth>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpUserNavConfigDto <Nav>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpUserSettingConfigDto <Setting>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpUserClockConfigDto <Clock>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpUserTimingConfigDto <Timing>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpUserSecurityConfigDto <Security>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Custom>k__BackingField;
    public AbpMultiTenancyConfigDto MultiTenancy { get; public set; }
    public AbpUserSessionConfigDto Session { get; public set; }
    public AbpUserLocalizationConfigDto Localization { get; public set; }
    public AbpUserFeatureConfigDto Features { get; public set; }
    public AbpUserAuthConfigDto Auth { get; public set; }
    public AbpUserNavConfigDto Nav { get; public set; }
    public AbpUserSettingConfigDto Setting { get; public set; }
    public AbpUserClockConfigDto Clock { get; public set; }
    public AbpUserTimingConfigDto Timing { get; public set; }
    public AbpUserSecurityConfigDto Security { get; public set; }
    public Dictionary`2<string, object> Custom { get; public set; }
    [CompilerGeneratedAttribute]
public AbpMultiTenancyConfigDto get_MultiTenancy();
    [CompilerGeneratedAttribute]
public void set_MultiTenancy(AbpMultiTenancyConfigDto value);
    [CompilerGeneratedAttribute]
public AbpUserSessionConfigDto get_Session();
    [CompilerGeneratedAttribute]
public void set_Session(AbpUserSessionConfigDto value);
    [CompilerGeneratedAttribute]
public AbpUserLocalizationConfigDto get_Localization();
    [CompilerGeneratedAttribute]
public void set_Localization(AbpUserLocalizationConfigDto value);
    [CompilerGeneratedAttribute]
public AbpUserFeatureConfigDto get_Features();
    [CompilerGeneratedAttribute]
public void set_Features(AbpUserFeatureConfigDto value);
    [CompilerGeneratedAttribute]
public AbpUserAuthConfigDto get_Auth();
    [CompilerGeneratedAttribute]
public void set_Auth(AbpUserAuthConfigDto value);
    [CompilerGeneratedAttribute]
public AbpUserNavConfigDto get_Nav();
    [CompilerGeneratedAttribute]
public void set_Nav(AbpUserNavConfigDto value);
    [CompilerGeneratedAttribute]
public AbpUserSettingConfigDto get_Setting();
    [CompilerGeneratedAttribute]
public void set_Setting(AbpUserSettingConfigDto value);
    [CompilerGeneratedAttribute]
public AbpUserClockConfigDto get_Clock();
    [CompilerGeneratedAttribute]
public void set_Clock(AbpUserClockConfigDto value);
    [CompilerGeneratedAttribute]
public AbpUserTimingConfigDto get_Timing();
    [CompilerGeneratedAttribute]
public void set_Timing(AbpUserTimingConfigDto value);
    [CompilerGeneratedAttribute]
public AbpUserSecurityConfigDto get_Security();
    [CompilerGeneratedAttribute]
public void set_Security(AbpUserSecurityConfigDto value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Custom();
    [CompilerGeneratedAttribute]
public void set_Custom(Dictionary`2<string, object> value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserCurrentCultureConfigDto : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public string Name { get; public set; }
    public string DisplayName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserFeatureConfigDto : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, AbpStringValueDto> <AllFeatures>k__BackingField;
    public Dictionary`2<string, AbpStringValueDto> AllFeatures { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, AbpStringValueDto> get_AllFeatures();
    [CompilerGeneratedAttribute]
public void set_AllFeatures(Dictionary`2<string, AbpStringValueDto> value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserIanaTimeZoneConfigDto : object {
    [CompilerGeneratedAttribute]
private string <TimeZoneId>k__BackingField;
    public string TimeZoneId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TimeZoneId();
    [CompilerGeneratedAttribute]
public void set_TimeZoneId(string value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserLocalizationConfigDto : object {
    [CompilerGeneratedAttribute]
private AbpUserCurrentCultureConfigDto <CurrentCulture>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<LanguageInfo> <Languages>k__BackingField;
    [CompilerGeneratedAttribute]
private LanguageInfo <CurrentLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AbpLocalizationSourceDto> <Sources>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, string>> <Values>k__BackingField;
    public AbpUserCurrentCultureConfigDto CurrentCulture { get; public set; }
    public List`1<LanguageInfo> Languages { get; public set; }
    public LanguageInfo CurrentLanguage { get; public set; }
    public List`1<AbpLocalizationSourceDto> Sources { get; public set; }
    public Dictionary`2<string, Dictionary`2<string, string>> Values { get; public set; }
    [CompilerGeneratedAttribute]
public AbpUserCurrentCultureConfigDto get_CurrentCulture();
    [CompilerGeneratedAttribute]
public void set_CurrentCulture(AbpUserCurrentCultureConfigDto value);
    [CompilerGeneratedAttribute]
public List`1<LanguageInfo> get_Languages();
    [CompilerGeneratedAttribute]
public void set_Languages(List`1<LanguageInfo> value);
    [CompilerGeneratedAttribute]
public LanguageInfo get_CurrentLanguage();
    [CompilerGeneratedAttribute]
public void set_CurrentLanguage(LanguageInfo value);
    [CompilerGeneratedAttribute]
public List`1<AbpLocalizationSourceDto> get_Sources();
    [CompilerGeneratedAttribute]
public void set_Sources(List`1<AbpLocalizationSourceDto> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Dictionary`2<string, string>> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(Dictionary`2<string, Dictionary`2<string, string>> value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserNavConfigDto : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, UserMenu> <Menus>k__BackingField;
    public Dictionary`2<string, UserMenu> Menus { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, UserMenu> get_Menus();
    [CompilerGeneratedAttribute]
public void set_Menus(Dictionary`2<string, UserMenu> value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserSecurityConfigDto : object {
    [CompilerGeneratedAttribute]
private AbpUserAntiForgeryConfigDto <AntiForgery>k__BackingField;
    public AbpUserAntiForgeryConfigDto AntiForgery { get; public set; }
    [CompilerGeneratedAttribute]
public AbpUserAntiForgeryConfigDto get_AntiForgery();
    [CompilerGeneratedAttribute]
public void set_AntiForgery(AbpUserAntiForgeryConfigDto value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserSessionConfigDto : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ImpersonatorUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ImpersonatorTenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTenancySides <MultiTenancySide>k__BackingField;
    public Nullable`1<long> UserId { get; public set; }
    public Nullable`1<int> TenantId { get; public set; }
    public Nullable`1<long> ImpersonatorUserId { get; public set; }
    public Nullable`1<int> ImpersonatorTenantId { get; public set; }
    public MultiTenancySides MultiTenancySide { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ImpersonatorUserId();
    [CompilerGeneratedAttribute]
public void set_ImpersonatorUserId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ImpersonatorTenantId();
    [CompilerGeneratedAttribute]
public void set_ImpersonatorTenantId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public MultiTenancySides get_MultiTenancySide();
    [CompilerGeneratedAttribute]
public void set_MultiTenancySide(MultiTenancySides value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserSettingConfigDto : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Values>k__BackingField;
    public Dictionary`2<string, string> Values { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(Dictionary`2<string, string> value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserTimeZoneConfigDto : object {
    [CompilerGeneratedAttribute]
private AbpUserWindowsTimeZoneConfigDto <Windows>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpUserIanaTimeZoneConfigDto <Iana>k__BackingField;
    public AbpUserWindowsTimeZoneConfigDto Windows { get; public set; }
    public AbpUserIanaTimeZoneConfigDto Iana { get; public set; }
    [CompilerGeneratedAttribute]
public AbpUserWindowsTimeZoneConfigDto get_Windows();
    [CompilerGeneratedAttribute]
public void set_Windows(AbpUserWindowsTimeZoneConfigDto value);
    [CompilerGeneratedAttribute]
public AbpUserIanaTimeZoneConfigDto get_Iana();
    [CompilerGeneratedAttribute]
public void set_Iana(AbpUserIanaTimeZoneConfigDto value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserTimingConfigDto : object {
    [CompilerGeneratedAttribute]
private AbpUserTimeZoneConfigDto <TimeZoneInfo>k__BackingField;
    public AbpUserTimeZoneConfigDto TimeZoneInfo { get; public set; }
    [CompilerGeneratedAttribute]
public AbpUserTimeZoneConfigDto get_TimeZoneInfo();
    [CompilerGeneratedAttribute]
public void set_TimeZoneInfo(AbpUserTimeZoneConfigDto value);
}
public class Abp.Web.Models.AbpUserConfiguration.AbpUserWindowsTimeZoneConfigDto : object {
    [CompilerGeneratedAttribute]
private string <TimeZoneId>k__BackingField;
    [CompilerGeneratedAttribute]
private double <BaseUtcOffsetInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private double <CurrentUtcOffsetInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDaylightSavingTimeNow>k__BackingField;
    public string TimeZoneId { get; public set; }
    public double BaseUtcOffsetInMilliseconds { get; public set; }
    public double CurrentUtcOffsetInMilliseconds { get; public set; }
    public bool IsDaylightSavingTimeNow { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TimeZoneId();
    [CompilerGeneratedAttribute]
public void set_TimeZoneId(string value);
    [CompilerGeneratedAttribute]
public double get_BaseUtcOffsetInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_BaseUtcOffsetInMilliseconds(double value);
    [CompilerGeneratedAttribute]
public double get_CurrentUtcOffsetInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_CurrentUtcOffsetInMilliseconds(double value);
    [CompilerGeneratedAttribute]
public bool get_IsDaylightSavingTimeNow();
    [CompilerGeneratedAttribute]
public void set_IsDaylightSavingTimeNow(bool value);
}
public class Abp.Web.Models.AjaxResponse : AjaxResponse`1<object> {
    public AjaxResponse(bool success);
    public AjaxResponse(object result);
    public AjaxResponse(ErrorInfo error, bool unAuthorizedRequest);
}
public class Abp.Web.Models.AjaxResponse`1 : AjaxResponseBase {
    [CompilerGeneratedAttribute]
private TResult <Result>k__BackingField;
    public TResult Result { get; public set; }
    public AjaxResponse`1(TResult result);
    public AjaxResponse`1(bool success);
    public AjaxResponse`1(ErrorInfo error, bool unAuthorizedRequest);
    [CompilerGeneratedAttribute]
public TResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(TResult value);
}
public abstract class Abp.Web.Models.AjaxResponseBase : object {
    [CompilerGeneratedAttribute]
private string <TargetUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorInfo <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UnAuthorizedRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <__abp>k__BackingField;
    public string TargetUrl { get; public set; }
    public bool Success { get; public set; }
    public ErrorInfo Error { get; public set; }
    public bool UnAuthorizedRequest { get; public set; }
    public bool __abp { get; }
    [CompilerGeneratedAttribute]
public string get_TargetUrl();
    [CompilerGeneratedAttribute]
public void set_TargetUrl(string value);
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public void set_Success(bool value);
    [CompilerGeneratedAttribute]
public ErrorInfo get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(ErrorInfo value);
    [CompilerGeneratedAttribute]
public bool get_UnAuthorizedRequest();
    [CompilerGeneratedAttribute]
public void set_UnAuthorizedRequest(bool value);
    [CompilerGeneratedAttribute]
public bool get___abp();
}
internal class Abp.Web.Models.DefaultErrorInfoConverter : object {
    private IAbpWebCommonModuleConfiguration _configuration;
    private ILocalizationManager _localizationManager;
    [CompilerGeneratedAttribute]
private IExceptionToErrorInfoConverter <Next>k__BackingField;
    private IExceptionToErrorInfoConverter Next { get; public set; }
    private bool SendAllExceptionsToClients { get; }
    public DefaultErrorInfoConverter(IAbpWebCommonModuleConfiguration configuration, ILocalizationManager localizationManager);
    [CompilerGeneratedAttribute]
public sealed virtual void set_Next(IExceptionToErrorInfoConverter value);
    [CompilerGeneratedAttribute]
private IExceptionToErrorInfoConverter get_Next();
    private bool get_SendAllExceptionsToClients();
    public sealed virtual ErrorInfo Convert(Exception exception);
    private ErrorInfo CreateErrorInfoWithoutCode(Exception exception);
    private ErrorInfo CreateDetailedErrorInfoFromException(Exception exception);
    private void AddExceptionToDetails(Exception exception, StringBuilder detailBuilder);
    private ValidationErrorInfo[] GetValidationErrorInfos(AbpValidationException validationException);
    private string GetValidationErrorNarrative(AbpValidationException validationException);
    private string L(string name);
}
public class Abp.Web.Models.ErrorInfo : object {
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Details>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidationErrorInfo[] <ValidationErrors>k__BackingField;
    public int Code { get; public set; }
    public string Message { get; public set; }
    public string Details { get; public set; }
    public ValidationErrorInfo[] ValidationErrors { get; public set; }
    public ErrorInfo(string message);
    public ErrorInfo(int code);
    public ErrorInfo(int code, string message);
    public ErrorInfo(string message, string details);
    public ErrorInfo(int code, string message, string details);
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(int value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(string value);
    [CompilerGeneratedAttribute]
public ValidationErrorInfo[] get_ValidationErrors();
    [CompilerGeneratedAttribute]
public void set_ValidationErrors(ValidationErrorInfo[] value);
}
public class Abp.Web.Models.ErrorInfoBuilder : object {
    [CompilerGeneratedAttribute]
private IExceptionToErrorInfoConverter <Converter>k__BackingField;
    private IExceptionToErrorInfoConverter Converter { get; private set; }
    public ErrorInfoBuilder(IAbpWebCommonModuleConfiguration configuration, ILocalizationManager localizationManager);
    [CompilerGeneratedAttribute]
private IExceptionToErrorInfoConverter get_Converter();
    [CompilerGeneratedAttribute]
private void set_Converter(IExceptionToErrorInfoConverter value);
    public sealed virtual ErrorInfo BuildForException(Exception exception);
    public sealed virtual void AddExceptionConverter(IExceptionToErrorInfoConverter converter);
}
public interface Abp.Web.Models.IErrorInfoBuilder {
    public abstract virtual ErrorInfo BuildForException(Exception exception);
    public abstract virtual void AddExceptionConverter(IExceptionToErrorInfoConverter converter);
}
public interface Abp.Web.Models.IExceptionToErrorInfoConverter {
    unknown IExceptionToErrorInfoConverter Next {public set; }
    public abstract virtual void set_Next(IExceptionToErrorInfoConverter value);
    public abstract virtual ErrorInfo Convert(Exception exception);
}
public class Abp.Web.Models.ValidationErrorInfo : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public string Message { get; public set; }
    public String[] Members { get; public set; }
    public ValidationErrorInfo(string message);
    public ValidationErrorInfo(string message, String[] members);
    public ValidationErrorInfo(string message, string member);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public String[] get_Members();
    [CompilerGeneratedAttribute]
public void set_Members(String[] value);
}
public interface Abp.Web.MultiTenancy.IMultiTenancyScriptManager {
    public abstract virtual string GetScript();
}
public interface Abp.Web.MultiTenancy.IWebMultiTenancyConfiguration {
    public string DomainFormat { get; public set; }
    public abstract virtual string get_DomainFormat();
    public abstract virtual void set_DomainFormat(string value);
}
public class Abp.Web.MultiTenancy.MultiTenancyScriptManager : object {
    private IMultiTenancyConfig _multiTenancyConfig;
    public MultiTenancyScriptManager(IMultiTenancyConfig multiTenancyConfig);
    public sealed virtual string GetScript();
}
public class Abp.Web.MultiTenancy.WebMultiTenancyConfiguration : object {
    [CompilerGeneratedAttribute]
private string <DomainFormat>k__BackingField;
    public string DomainFormat { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_DomainFormat();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DomainFormat(string value);
}
public class Abp.Web.Mvc.Alerts.AlertDisplayType : object {
    public static string PageAlert;
    public static string Toastr;
    private static AlertDisplayType();
}
public class Abp.Web.Mvc.Alerts.AlertList : List`1<AlertMessage> {
    public void Add(AlertType type, string text, string title, bool dismissible, string displayType);
    public void Info(string text, string title, bool dismissible, string displayType);
    public void Warning(string text, string title, bool dismissible, string displayType);
    public void Danger(string text, string title, bool dismissible, string displayType);
    public void Success(string text, string title, bool dismissible, string displayType);
}
public class Abp.Web.Mvc.Alerts.AlertManager : object {
    [CompilerGeneratedAttribute]
private AlertList <Alerts>k__BackingField;
    public AlertList Alerts { get; }
    [CompilerGeneratedAttribute]
public sealed virtual AlertList get_Alerts();
}
public class Abp.Web.Mvc.Alerts.AlertMessage : object {
    private string _text;
    [CompilerGeneratedAttribute]
private AlertType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Dismissible>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayType>k__BackingField;
    public string Text { get; public set; }
    public AlertType Type { get; public set; }
    public string Title { get; public set; }
    public bool Dismissible { get; public set; }
    public string DisplayType { get; public set; }
    public AlertMessage(AlertType type, string text, string title, bool dismissible, string displayType);
    public string get_Text();
    public void set_Text(string value);
    [CompilerGeneratedAttribute]
public AlertType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(AlertType value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public bool get_Dismissible();
    [CompilerGeneratedAttribute]
public void set_Dismissible(bool value);
    [CompilerGeneratedAttribute]
public string get_DisplayType();
    [CompilerGeneratedAttribute]
public void set_DisplayType(string value);
}
public class Abp.Web.Mvc.Alerts.AlertMessageRendererManager : object {
    private IEnumerable`1<IAlertMessageRenderer> _alertMessageRenderers;
    private IAlertManager _alertManager;
    public AlertMessageRendererManager(IEnumerable`1<IAlertMessageRenderer> alertMessageRenderers, IAlertManager AlertManager);
    public sealed virtual string Render(string alertDisplayType);
}
public enum Abp.Web.Mvc.Alerts.AlertType : Enum {
    public int value__;
    public static AlertType Success;
    public static AlertType Danger;
    public static AlertType Warning;
    public static AlertType Info;
}
public interface Abp.Web.Mvc.Alerts.IAlertManager {
    public AlertList Alerts { get; }
    public abstract virtual AlertList get_Alerts();
}
public interface Abp.Web.Mvc.Alerts.IAlertMessageRenderer {
    public string DisplayType { get; }
    public abstract virtual string get_DisplayType();
    public abstract virtual string Render(List`1<AlertMessage> alertList);
}
public interface Abp.Web.Mvc.Alerts.IAlertMessageRendererManager {
    public abstract virtual string Render(string alertDisplayType);
}
public class Abp.Web.Mvc.Alerts.PageAlertMessageRenderer : object {
    [CompilerGeneratedAttribute]
private string <DisplayType>k__BackingField;
    public string DisplayType { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_DisplayType();
    public virtual string Render(List`1<AlertMessage> alertList);
}
public class Abp.Web.Mvc.Alerts.ToastrAlertMessageRenderer : object {
    [CompilerGeneratedAttribute]
private string <DisplayType>k__BackingField;
    public string DisplayType { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_DisplayType();
    public virtual string Render(List`1<AlertMessage> alertList);
}
public class Abp.Web.Mvc.Models.ErrorViewModel : object {
    [CompilerGeneratedAttribute]
private ErrorInfo <ErrorInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public ErrorInfo ErrorInfo { get; public set; }
    public Exception Exception { get; public set; }
    public ErrorViewModel(ErrorInfo errorInfo, Exception exception);
    [CompilerGeneratedAttribute]
public ErrorInfo get_ErrorInfo();
    [CompilerGeneratedAttribute]
public void set_ErrorInfo(ErrorInfo value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
}
public interface Abp.Web.Navigation.INavigationScriptManager {
    public abstract virtual Task`1<string> GetScriptAsync();
}
internal class Abp.Web.Navigation.NavigationScriptManager : object {
    [CompilerGeneratedAttribute]
private IAbpSession <AbpSession>k__BackingField;
    private IUserNavigationManager _userNavigationManager;
    public IAbpSession AbpSession { get; public set; }
    public NavigationScriptManager(IUserNavigationManager userNavigationManager);
    [CompilerGeneratedAttribute]
public IAbpSession get_AbpSession();
    [CompilerGeneratedAttribute]
public void set_AbpSession(IAbpSession value);
    [AsyncStateMachineAttribute("Abp.Web.Navigation.NavigationScriptManager/<GetScriptAsync>d__6")]
public sealed virtual Task`1<string> GetScriptAsync();
    private static void AppendMenu(StringBuilder script, UserMenu menu);
    private static void AppendMenuItem(int indentLength, StringBuilder sb, UserMenuItem menuItem);
}
public interface Abp.Web.Results.Filters.IWrapResultFilter {
    public abstract virtual bool HasFilterForWrapOnSuccess(string url, Boolean& wrapOnSuccess);
    public abstract virtual bool HasFilterForWrapOnError(string url, Boolean& wrapOnError);
}
public class Abp.Web.Results.Filters.WrapResultFilterCollection : Collection`1<IWrapResultFilter> {
    public bool HasFilterForWrapOnSuccess(string url, Boolean& wrapOnSuccess);
    public bool HasFilterForWrapOnError(string url, Boolean& wrapOnError);
}
public class Abp.Web.Security.AntiForgery.AbpAntiForgeryConfiguration : object {
    [CompilerGeneratedAttribute]
private string <TokenCookieName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenHeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationCookieName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationCookieApplicationScheme>k__BackingField;
    public string TokenCookieName { get; public set; }
    public string TokenHeaderName { get; public set; }
    public string AuthorizationCookieName { get; public set; }
    public string AuthorizationCookieApplicationScheme { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_TokenCookieName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TokenCookieName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TokenHeaderName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TokenHeaderName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AuthorizationCookieName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthorizationCookieName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AuthorizationCookieApplicationScheme();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthorizationCookieApplicationScheme(string value);
}
public class Abp.Web.Security.AntiForgery.AbpAntiForgeryManager : object {
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IAbpAntiForgeryConfiguration <Configuration>k__BackingField;
    protected ILogger Logger { get; public set; }
    public IAbpAntiForgeryConfiguration Configuration { get; }
    public AbpAntiForgeryManager(IAbpAntiForgeryConfiguration configuration);
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger value);
    [CompilerGeneratedAttribute]
public sealed virtual IAbpAntiForgeryConfiguration get_Configuration();
    public virtual string GenerateToken();
    public virtual bool IsValid(string cookieValue, string tokenValue);
}
public interface Abp.Web.Security.AntiForgery.IAbpAntiForgeryConfiguration {
    public string TokenCookieName { get; public set; }
    public string TokenHeaderName { get; public set; }
    public string AuthorizationCookieName { get; public set; }
    public string AuthorizationCookieApplicationScheme { get; public set; }
    public abstract virtual string get_TokenCookieName();
    public abstract virtual void set_TokenCookieName(string value);
    public abstract virtual string get_TokenHeaderName();
    public abstract virtual void set_TokenHeaderName(string value);
    public abstract virtual string get_AuthorizationCookieName();
    public abstract virtual void set_AuthorizationCookieName(string value);
    public abstract virtual string get_AuthorizationCookieApplicationScheme();
    public abstract virtual void set_AuthorizationCookieApplicationScheme(string value);
}
public interface Abp.Web.Security.AntiForgery.IAbpAntiForgeryManager {
    public IAbpAntiForgeryConfiguration Configuration { get; }
    public abstract virtual IAbpAntiForgeryConfiguration get_Configuration();
    public abstract virtual string GenerateToken();
}
public interface Abp.Web.Security.AntiForgery.IAbpAntiForgeryValidator {
    public abstract virtual bool IsValid(string cookieValue, string tokenValue);
}
public interface Abp.Web.Security.ISecurityScriptManager {
    public abstract virtual string GetScript();
}
internal class Abp.Web.Security.SecurityScriptManager : object {
    private IAbpAntiForgeryConfiguration _abpAntiForgeryConfiguration;
    public SecurityScriptManager(IAbpAntiForgeryConfiguration abpAntiForgeryConfiguration);
    public sealed virtual string GetScript();
}
public interface Abp.Web.Sessions.ISessionScriptManager {
    public abstract virtual string GetScript();
}
public class Abp.Web.Sessions.SessionScriptManager : object {
    [CompilerGeneratedAttribute]
private IAbpSession <AbpSession>k__BackingField;
    public IAbpSession AbpSession { get; public set; }
    [CompilerGeneratedAttribute]
public IAbpSession get_AbpSession();
    [CompilerGeneratedAttribute]
public void set_AbpSession(IAbpSession value);
    public sealed virtual string GetScript();
}
public interface Abp.Web.Settings.ISettingScriptManager {
    public abstract virtual Task`1<string> GetScriptAsync();
}
public class Abp.Web.Settings.SettingScriptManager : object {
    private ISettingDefinitionManager _settingDefinitionManager;
    private ISettingManager _settingManager;
    private IAbpSession _abpSession;
    private IIocResolver _iocResolver;
    public SettingScriptManager(ISettingDefinitionManager settingDefinitionManager, ISettingManager settingManager, IAbpSession abpSession, IIocResolver iocResolver);
    [AsyncStateMachineAttribute("Abp.Web.Settings.SettingScriptManager/<GetScriptAsync>d__5")]
public sealed virtual Task`1<string> GetScriptAsync();
}
public interface Abp.Web.Timing.ITimingScriptManager {
    public abstract virtual Task`1<string> GetScriptAsync();
}
public class Abp.Web.Timing.TimingScriptManager : object {
    private ISettingManager _settingManager;
    public TimingScriptManager(ISettingManager settingManager);
    [AsyncStateMachineAttribute("Abp.Web.Timing.TimingScriptManager/<GetScriptAsync>d__2")]
public sealed virtual Task`1<string> GetScriptAsync();
    [AsyncStateMachineAttribute("Abp.Web.Timing.TimingScriptManager/<GetUsersTimezoneScriptsAsync>d__3")]
private Task`1<string> GetUsersTimezoneScriptsAsync();
}
public abstract class Abp.Web.Validation.ActionInvocationValidatorBase : MethodInvocationValidator {
    [CompilerGeneratedAttribute]
private bool <IsSetDataAnnotationAttributeErrors>k__BackingField;
    private bool IsSetDataAnnotationAttributeErrors { get; private set; }
    protected IList`1<Type> ValidatorsToSkip { get; }
    protected ActionInvocationValidatorBase(IValidationConfiguration configuration, IIocResolver iocResolver);
    [CompilerGeneratedAttribute]
private bool get_IsSetDataAnnotationAttributeErrors();
    [CompilerGeneratedAttribute]
private void set_IsSetDataAnnotationAttributeErrors(bool value);
    protected IList`1<Type> get_ValidatorsToSkip();
    public void Initialize(MethodInfo method);
    protected virtual bool ShouldValidateUsingValidator(object validatingObject, Type validatorType);
    protected virtual void ValidateMethodParameter(ParameterInfo parameterInfo, object parameterValue);
    protected virtual Object[] GetParameterValues(MethodInfo method);
    protected abstract virtual void SetDataAnnotationAttributeErrors();
    protected abstract virtual object GetParameterValue(string parameterName);
}
internal class AbpWebCommon_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
