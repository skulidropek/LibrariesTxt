public class Aliyun.Acs.Core.AcsError : AcsResponse {
    [CompilerGeneratedAttribute]
private string <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    public string ErrorCode { get; public set; }
    public string ErrorMessage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ErrorCode();
    [CompilerGeneratedAttribute]
public void set_ErrorCode(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
}
public abstract class Aliyun.Acs.Core.AcsRequest`1 : HttpRequest {
    private FormatType acceptFormat;
    private Dictionary`2<string, string> bodyParameters;
    private Dictionary`2<string, string> domainParameters;
    private string productNetwork;
    private string productSuffix;
    private ProtocolType protocol;
    private Dictionary`2<string, string> queryParameters;
    private string regionId;
    public string StringToSign;
    private UserAgent userAgentConfig;
    [CompilerGeneratedAttribute]
private string <Product>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecurityToken>k__BackingField;
    [CompilerGeneratedAttribute]
private ISignatureComposer <Composer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocationProduct>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocationEndpointType>k__BackingField;
    [CompilerGeneratedAttribute]
private ProductDomain <ProductDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <ProductEndpointMap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductEndpointType>k__BackingField;
    public string Product { get; public set; }
    public string Version { get; public set; }
    public string ActionName { get; public set; }
    public string RegionId { get; public set; }
    public string SecurityToken { get; public set; }
    public ISignatureComposer Composer { get; public set; }
    public string LocationProduct { get; public set; }
    public string LocationEndpointType { get; public set; }
    public ProductDomain ProductDomain { get; public set; }
    public string ProductNetwork { get; public set; }
    public string ProductSuffix { get; public set; }
    public FormatType AcceptFormat { get; public set; }
    public ProtocolType Protocol { get; public set; }
    public Dictionary`2<string, string> QueryParameters { get; public set; }
    public Dictionary`2<string, string> DomainParameters { get; public set; }
    public Dictionary`2<string, string> BodyParameters { get; public set; }
    public Dictionary`2<string, string> ProductEndpointMap { get; public set; }
    public string ProductEndpointType { get; public set; }
    public AcsRequest`1(string product);
    [CompilerGeneratedAttribute]
public virtual string get_Product();
    [CompilerGeneratedAttribute]
public virtual void set_Product(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Version();
    [CompilerGeneratedAttribute]
public virtual void set_Version(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ActionName();
    [CompilerGeneratedAttribute]
public virtual void set_ActionName(string value);
    public virtual string get_RegionId();
    public virtual void set_RegionId(string value);
    [CompilerGeneratedAttribute]
public virtual string get_SecurityToken();
    [CompilerGeneratedAttribute]
public virtual void set_SecurityToken(string value);
    [CompilerGeneratedAttribute]
public ISignatureComposer get_Composer();
    [CompilerGeneratedAttribute]
public void set_Composer(ISignatureComposer value);
    [CompilerGeneratedAttribute]
public string get_LocationProduct();
    [CompilerGeneratedAttribute]
public void set_LocationProduct(string value);
    [CompilerGeneratedAttribute]
public string get_LocationEndpointType();
    [CompilerGeneratedAttribute]
public void set_LocationEndpointType(string value);
    [CompilerGeneratedAttribute]
public ProductDomain get_ProductDomain();
    [CompilerGeneratedAttribute]
public void set_ProductDomain(ProductDomain value);
    public string get_ProductNetwork();
    public void set_ProductNetwork(string value);
    public string get_ProductSuffix();
    public void set_ProductSuffix(string value);
    public virtual FormatType get_AcceptFormat();
    public virtual void set_AcceptFormat(FormatType value);
    public ProtocolType get_Protocol();
    public void set_Protocol(ProtocolType value);
    public Dictionary`2<string, string> get_QueryParameters();
    public void set_QueryParameters(Dictionary`2<string, string> value);
    public Dictionary`2<string, string> get_DomainParameters();
    public void set_DomainParameters(Dictionary`2<string, string> value);
    public Dictionary`2<string, string> get_BodyParameters();
    public void set_BodyParameters(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_ProductEndpointMap();
    [CompilerGeneratedAttribute]
public void set_ProductEndpointMap(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_ProductEndpointType();
    [CompilerGeneratedAttribute]
public void set_ProductEndpointType(string value);
    public void SetProductDomain(string endpoint);
    public void SetEndpoint(string endpoint);
    public string GetProductEndpoint();
    public static string ConcatQueryString(Dictionary`2<string, string> parameters);
    public HttpRequest SignRequest(Signer signer, Credential credential, Nullable`1<FormatType> format, ProductDomain domain);
    public abstract virtual HttpRequest SignRequest(Signer signer, AlibabaCloudCredentials credentials, Nullable`1<FormatType> format, ProductDomain domain);
    public abstract virtual string ComposeUrl(string endpoint, Dictionary`2<string, string> queries);
    public abstract virtual T GetResponse(UnmarshallerContext unmarshallerContext);
    public virtual bool CheckShowJsonItemName();
    public UserAgent GetSysUserAgentConfig();
    public void AppendUserAgent(string key, string value);
}
public abstract class Aliyun.Acs.Core.AcsResponse : object {
    [CompilerGeneratedAttribute]
private HttpResponse <HttpResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    public HttpResponse HttpResponse { get; public set; }
    public string RequestId { get; public set; }
    [CompilerGeneratedAttribute]
public HttpResponse get_HttpResponse();
    [CompilerGeneratedAttribute]
public void set_HttpResponse(HttpResponse value);
    [CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
public void set_RequestId(string value);
}
public class Aliyun.Acs.Core.Auth.AccessKeyCredentialProvider : object {
    private BasicCredentials accessKeyCredential;
    public AccessKeyCredentialProvider(string accessKeyId, string accessKeySecret);
    public sealed virtual AlibabaCloudCredentials GetCredentials();
}
public class Aliyun.Acs.Core.Auth.AcsURLEncoder : object {
    private static string ENCODING_UTF8;
    public static string Encode(string value);
    public static string PercentEncode(string value);
}
public interface Aliyun.Acs.Core.Auth.AlibabaCloudCredentials {
    public abstract virtual string GetAccessKeyId();
    public abstract virtual string GetAccessKeySecret();
}
public interface Aliyun.Acs.Core.Auth.AlibabaCloudCredentialsProvider {
    public abstract virtual AlibabaCloudCredentials GetCredentials();
}
public class Aliyun.Acs.Core.Auth.BasicCredentials : object {
    private string accessKeyId;
    private string accessKeySecret;
    public BasicCredentials(string accessKeyId, string accessKeySecret);
    public sealed virtual string GetAccessKeyId();
    public sealed virtual string GetAccessKeySecret();
}
public class Aliyun.Acs.Core.Auth.BasicSessionCredentials : object {
    private static double expireFact;
    private string accessKeyId;
    private string accessKeySecret;
    protected long roleSessionDurationSeconds;
    private long sessionStartedTimeInMilliSeconds;
    private string sessionToken;
    public BasicSessionCredentials(string accessKeyId, string accessKeySecret, string sessionToken, long roleSessionDurationSeconds);
    public sealed virtual string GetAccessKeyId();
    public sealed virtual string GetAccessKeySecret();
    public string GetSessionToken();
    public virtual bool WillSoonExpire();
}
public class Aliyun.Acs.Core.Auth.BearerTokenCredential : object {
    private string bearerToken;
    public BearerTokenCredential(string bearerToken);
    public sealed virtual string GetAccessKeyId();
    public sealed virtual string GetAccessKeySecret();
    public string GetBearerToken();
}
public class Aliyun.Acs.Core.Auth.BearerTokenCredentialProvider : object {
    private BearerTokenCredential bearerTokenCredential;
    public BearerTokenCredentialProvider(string bearerToken);
    public sealed virtual AlibabaCloudCredentials GetCredentials();
}
public class Aliyun.Acs.Core.Auth.BearerTokenSigner : Signer {
    public virtual string GetSignerName();
    public virtual string GetSignerType();
    public virtual string GetSignerVersion();
    public virtual string SignString(string stringToSign, AlibabaCloudCredentials credentials);
    public virtual string SignString(string stringToSign, string accessKeySecret);
}
public class Aliyun.Acs.Core.Auth.Credential : object {
    [CompilerGeneratedAttribute]
private DateTime <RefreshDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ExpiredDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessKeyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecurityToken>k__BackingField;
    public DateTime RefreshDate { get; public set; }
    public Nullable`1<DateTime> ExpiredDate { get; public set; }
    public string AccessKeyId { get; public set; }
    public string AccessSecret { get; public set; }
    public string SecurityToken { get; public set; }
    public Credential(string keyId, string secret);
    public Credential(string keyId, string secret, string securityToken);
    public Credential(string keyId, string secret, int expiredHours);
    public Credential(string keyId, string secret, string securityToken, int expiredHours);
    [CompilerGeneratedAttribute]
public DateTime get_RefreshDate();
    [CompilerGeneratedAttribute]
public void set_RefreshDate(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ExpiredDate();
    [CompilerGeneratedAttribute]
public void set_ExpiredDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_AccessKeyId();
    [CompilerGeneratedAttribute]
public void set_AccessKeyId(string value);
    [CompilerGeneratedAttribute]
public string get_AccessSecret();
    [CompilerGeneratedAttribute]
public void set_AccessSecret(string value);
    [CompilerGeneratedAttribute]
public string get_SecurityToken();
    [CompilerGeneratedAttribute]
public void set_SecurityToken(string value);
    public sealed virtual string GetAccessKeyId();
    public sealed virtual string GetAccessKeySecret();
    private void SetExpiredDate(int expiredHours);
    public bool IsExpired();
}
public class Aliyun.Acs.Core.Auth.CredentialsBackupCompatibilityAdaptor : Credential {
    private AlibabaCloudCredentialsProvider provider;
    public CredentialsBackupCompatibilityAdaptor(AlibabaCloudCredentialsProvider provider);
    private AlibabaCloudCredentials GetCredentials();
    public string GetAccessKeyId();
    public string GetAccessSecret();
    public bool IsExpired();
    public string GetSecurityToken();
}
public class Aliyun.Acs.Core.Auth.ECSMetadataServiceCredentialsFetcher : object {
    private static string URL_IN_ECS_METADATA;
    private static int DEFAULT_TIMEOUT_IN_MILLISECONDS;
    private static string ECS_METADAT_FETCH_ERROR_MSG;
    private static int DEFAULT_ECS_SESSION_TOKEN_DURATION_SECONDS;
    private int connectionTimeoutInMilliseconds;
    private string credentialUrl;
    private string metadataServiceHost;
    private string roleName;
    public sealed virtual AlibabaCloudCredentials GetCredentials();
    public void SetRoleName(string roleName);
    public string GetRoleName();
    private void SetCredentialUrl();
    public void WithECSMetadataServiceHost(string host);
    public void WithConnectionTimeout(int milliseconds);
    public string GetMetadata();
    public virtual InstanceProfileCredentials Fetch();
    public InstanceProfileCredentials Fetch(int retryTimes);
    public virtual HttpResponse GetResponse(HttpRequest request);
}
public interface Aliyun.Acs.Core.Auth.ICredentialProvider {
    public abstract virtual Credential Fresh();
}
public class Aliyun.Acs.Core.Auth.InstanceProfileCredentials : BasicSessionCredentials {
    private long expiration;
    private double expireFact;
    private long refreshIntervalInMillSeconds;
    private long lastFailedRefreshTime;
    public InstanceProfileCredentials(string accessKeyId, string accessKeySecret, string sessionToken, string expiration, long roleSessionDurationSeconds);
    public virtual bool WillSoonExpire();
    public bool IsExpired();
    public bool ShouldRefresh();
    public void SetLastFailedRefreshTime();
    public virtual long RemainTicks();
}
public class Aliyun.Acs.Core.Auth.InstanceProfileCredentialsProvider : object {
    private int maxRetryTimes;
    private string roleName;
    private InstanceProfileCredentials credentials;
    private ECSMetadataServiceCredentialsFetcher fetcher;
    public InstanceProfileCredentialsProvider(string roleName);
    public virtual AlibabaCloudCredentials GetCredentials();
    public void withFetcher(ECSMetadataServiceCredentialsFetcher fetcher);
}
public interface Aliyun.Acs.Core.Auth.ISignatureComposer {
    public abstract virtual Dictionary`2<string, string> RefreshSignParameters(Dictionary`2<string, string> parameters, Signer signer, string accessKeyId, Nullable`1<FormatType> format);
    public abstract virtual string ComposeStringToSign(Nullable`1<MethodType> method, string uriPattern, Signer signer, Dictionary`2<string, string> queries, Dictionary`2<string, string> headers, Dictionary`2<string, string> paths);
}
public abstract class Aliyun.Acs.Core.Auth.ISigner : object {
    public string SignerName { get; }
    public string SignerVersion { get; }
    public abstract virtual string get_SignerName();
    public abstract virtual string get_SignerVersion();
    public abstract virtual string SignString(string source, string accessSecret);
}
public class Aliyun.Acs.Core.Auth.KeyPairCredentials : object {
    private string privateKeySecret;
    private string publicKeyId;
    public KeyPairCredentials(string publicKeyId, string privateKeySecret);
    public sealed virtual string GetAccessKeyId();
    public sealed virtual string GetAccessKeySecret();
}
public class Aliyun.Acs.Core.Auth.LegacyCredentials : object {
    private Credential legacyCredential;
    public LegacyCredentials(Credential legacyCredential);
    public sealed virtual string GetAccessKeyId();
    public sealed virtual string GetAccessKeySecret();
}
public class Aliyun.Acs.Core.Auth.OIDCCredentialsProvider : object {
    [CompilerGeneratedAttribute]
private string <RoleArn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OIDCProviderArn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OIDCTokenFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleSessionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Policy>k__BackingField;
    private string stsEndpoint;
    private long durationSeconds;
    private BasicSessionCredentials credentials;
    public string RoleArn { get; public set; }
    public string OIDCProviderArn { get; public set; }
    public string OIDCTokenFilePath { get; public set; }
    public string RoleSessionName { get; public set; }
    public string Policy { get; public set; }
    public OIDCCredentialsProvider(string roleArn, string oidcProviderArn, string oidcTokenFilePath, string roleSessionName, string regionId);
    [CompilerGeneratedAttribute]
public string get_RoleArn();
    [CompilerGeneratedAttribute]
public void set_RoleArn(string value);
    [CompilerGeneratedAttribute]
public string get_OIDCProviderArn();
    [CompilerGeneratedAttribute]
public void set_OIDCProviderArn(string value);
    [CompilerGeneratedAttribute]
public string get_OIDCTokenFilePath();
    [CompilerGeneratedAttribute]
public void set_OIDCTokenFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_RoleSessionName();
    [CompilerGeneratedAttribute]
public void set_RoleSessionName(string value);
    [CompilerGeneratedAttribute]
public string get_Policy();
    [CompilerGeneratedAttribute]
public void set_Policy(string value);
    public string InvokeAssumeRoleWithOIDC();
    internal static BasicSessionCredentials ParseCredentials(string body, long durationSeconds);
    public sealed virtual AlibabaCloudCredentials GetCredentials();
}
public class Aliyun.Acs.Core.Auth.Provider.DefaultCredentialProvider : object {
    private static IClientProfile defaultProfile;
    private AlibabaCloudCredentialsProvider alibabaCloudCredentialProvider;
    private string accessKeyId;
    private string accessKeySecret;
    private string credentialFileLocation;
    private string privateKeyFile;
    private string publicKeyId;
    private string regionId;
    private string roleArn;
    private string roleName;
    private string oidcProviderArn;
    private string oidcTokenFile;
    [ObsoleteAttribute]
public DefaultCredentialProvider(IClientProfile profile, AlibabaCloudCredentialsProvider alibabaCloudCredentialProvider);
    [ObsoleteAttribute]
public DefaultCredentialProvider(IClientProfile profile, string publicKeyId, string privateKeyFile, AlibabaCloudCredentialsProvider alibabaCloudCredentialsProvider);
    public AlibabaCloudCredentials GetAlibabaCloudClientCredential();
    internal virtual AlibabaCloudCredentials GetOIDCAlibabaCloudCredential();
    public AlibabaCloudCredentials GetEnvironmentAlibabaCloudCredential();
    public AlibabaCloudCredentials GetCredentialFileAlibabaCloudCredential();
    public virtual AlibabaCloudCredentials GetInstanceRamRoleAlibabaCloudCredential();
    public AlibabaCloudCredentials GetAccessKeyCredential();
    public virtual AlibabaCloudCredentials GetRamRoleArnAlibabaCloudCredential();
    public virtual AlibabaCloudCredentials GetRsaKeyPairAlibabaCloudCredential();
    public virtual string GetHomePath();
    public sealed virtual AlibabaCloudCredentials GetCredentials();
}
public class Aliyun.Acs.Core.Auth.Provider.RsaKeyPairCredentialProvider : object {
    private KeyPairCredentials rsaKeyPairCredential;
    private BasicSessionCredentials basicSessionCredentials;
    private long sessionDurationSeconds;
    private IAcsClient stsClient;
    public RsaKeyPairCredentialProvider(KeyPairCredentials rsaKeyPairCredential, IClientProfile profile);
    public RsaKeyPairCredentialProvider(KeyPairCredentials rsaKeyPairCredential, IAcsClient stsClient);
    public virtual AlibabaCloudCredentials GetCredentials();
    public void WithDurationSeconds(long seconds);
    public void WithSTSClient(IAcsClient client);
    private BasicSessionCredentials GetNewSessionCredentials();
}
public class Aliyun.Acs.Core.Auth.RoaSignatureComposer : object {
    protected static string QUERY_SEPARATOR;
    protected static string HEADER_SEPARATOR;
    private static ISignatureComposer composer;
    public sealed virtual Dictionary`2<string, string> RefreshSignParameters(Dictionary`2<string, string> parameters, Signer signer, string accessKeyId, Nullable`1<FormatType> format);
    public sealed virtual string ComposeStringToSign(Nullable`1<MethodType> method, string uriPattern, Signer signer, Dictionary`2<string, string> queries, Dictionary`2<string, string> headers, Dictionary`2<string, string> paths);
    private String[] SplitSubResource(string uri);
    private string BuildQuerystring(string uri, Dictionary`2<string, string> queries);
    protected string BuildCanonicalHeaders(Dictionary`2<string, string> headers, string headerBegin);
    public static string ReplaceOccupiedParameters(string url, Dictionary`2<string, string> paths);
    public static ISignatureComposer GetComposer();
    private static IDictionary`2<string, string> SortDictionary(Dictionary`2<string, string> dic);
    public static void ClearComposer();
}
public class Aliyun.Acs.Core.Auth.RpcSignatureComposer : object {
    private static string SEPARATOR;
    private static ISignatureComposer composer;
    public sealed virtual Dictionary`2<string, string> RefreshSignParameters(Dictionary`2<string, string> parameters, Signer signer, string accessKeyId, Nullable`1<FormatType> format);
    public sealed virtual string ComposeStringToSign(Nullable`1<MethodType> method, string uriPattern, Signer signer, Dictionary`2<string, string> queries, Dictionary`2<string, string> headers, Dictionary`2<string, string> paths);
    public static ISignatureComposer GetComposer();
    private static IDictionary`2<string, string> SortDictionary(Dictionary`2<string, string> dic);
    public static void ClearComposer();
}
public class Aliyun.Acs.Core.Auth.ShaHmac1 : ISigner {
    private string signerName;
    private string signerVersion;
    public string SignerName { get; }
    public string SignerVersion { get; }
    public virtual string get_SignerName();
    public virtual string get_SignerVersion();
    public virtual string SignString(string source, string accessSecret);
}
public class Aliyun.Acs.Core.Auth.ShaHmac256 : ISigner {
    private string signerName;
    private string signerVersion;
    public string SignerName { get; }
    public string SignerVersion { get; }
    public virtual string get_SignerName();
    public virtual string get_SignerVersion();
    public virtual string SignString(string source, string accessSecret);
}
public abstract class Aliyun.Acs.Core.Auth.Signer : object {
    private static Signer hmacSHA1Signer;
    private static Signer sha256withRSASigner;
    private static Signer bearerTokenSigner;
    private static Signer();
    public abstract virtual string SignString(string stringToSign, AlibabaCloudCredentials credentials);
    public abstract virtual string SignString(string stringToSign, string accessKeySecret);
    public abstract virtual string GetSignerName();
    public abstract virtual string GetSignerVersion();
    public abstract virtual string GetSignerType();
    public static Signer GetSigner(AlibabaCloudCredentials credentials);
}
public class Aliyun.Acs.Core.Auth.StaticCredentialsProvider : object {
    private IClientProfile clientProfile;
    private AlibabaCloudCredentials credentials;
    public StaticCredentialsProvider(AlibabaCloudCredentials credentials);
    public StaticCredentialsProvider(IClientProfile clientProfile);
    public sealed virtual AlibabaCloudCredentials GetCredentials();
}
public class Aliyun.Acs.Core.Auth.Sts.AssumeRoleRequest : RpcAcsRequest`1<AssumeRoleResponse> {
    private long durationSeconds;
    private string policy;
    private string roleArn;
    private string roleSessionName;
    public long DurationSeconds { get; public set; }
    public string Policy { get; public set; }
    public string RoleArn { get; public set; }
    public string RoleSessionName { get; public set; }
    public long get_DurationSeconds();
    public void set_DurationSeconds(long value);
    public string get_Policy();
    public void set_Policy(string value);
    public string get_RoleArn();
    public void set_RoleArn(string value);
    public string get_RoleSessionName();
    public void set_RoleSessionName(string value);
    public virtual AssumeRoleResponse GetResponse(UnmarshallerContext unmarshallerContext);
}
public class Aliyun.Acs.Core.Auth.Sts.AssumeRoleResponse : AcsResponse {
    [CompilerGeneratedAttribute]
private AssumeRole_Credentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private AssumeRole_AssumedRoleUser <AssumedRoleUser>k__BackingField;
    public AssumeRole_Credentials Credentials { get; public set; }
    public AssumeRole_AssumedRoleUser AssumedRoleUser { get; public set; }
    [CompilerGeneratedAttribute]
public AssumeRole_Credentials get_Credentials();
    [CompilerGeneratedAttribute]
public void set_Credentials(AssumeRole_Credentials value);
    [CompilerGeneratedAttribute]
public AssumeRole_AssumedRoleUser get_AssumedRoleUser();
    [CompilerGeneratedAttribute]
public void set_AssumedRoleUser(AssumeRole_AssumedRoleUser value);
}
public class Aliyun.Acs.Core.Auth.Sts.AssumeRoleResponseUnmarshaller : object {
    public static AssumeRoleResponse Unmarshall(UnmarshallerContext context);
}
internal class Aliyun.Acs.Core.Auth.Sts.GetSessionAccessKeyRequest : RpcAcsRequest`1<GetSessionAccessKeyResponse> {
    private int durationSeconds;
    private string publicKeyId;
    public int DurationSeconds { get; public set; }
    public string PublicKeyId { get; public set; }
    public int get_DurationSeconds();
    public void set_DurationSeconds(int value);
    public string get_PublicKeyId();
    public void set_PublicKeyId(string value);
    public virtual GetSessionAccessKeyResponse GetResponse(UnmarshallerContext unmarshallerContext);
}
public class Aliyun.Acs.Core.Auth.Sts.GetSessionAccessKeyResponse : AcsResponse {
    [CompilerGeneratedAttribute]
private GetSessionAccessKey_SessionAccesskey <SessionAccesskey>k__BackingField;
    public GetSessionAccessKey_SessionAccesskey SessionAccesskey { get; public set; }
    [CompilerGeneratedAttribute]
public GetSessionAccessKey_SessionAccesskey get_SessionAccesskey();
    [CompilerGeneratedAttribute]
public void set_SessionAccesskey(GetSessionAccessKey_SessionAccesskey value);
}
public class Aliyun.Acs.Core.Auth.Sts.GetSessionAccessKeyResponseUnmarshaller : object {
    public static GetSessionAccessKeyResponse Unmarshall(UnmarshallerContext context);
}
public class Aliyun.Acs.Core.Auth.STSAssumeRoleSessionCredentialsProvider : object {
    private string policy;
    private string roleArn;
    private BasicSessionCredentials credentials;
    private long roleSessionDurationSeconds;
    private string roleSessionName;
    private IAcsClient stsClient;
    public STSAssumeRoleSessionCredentialsProvider(AlibabaCloudCredentials longLivedCredentials, string roleArn, IClientProfile clientProfile);
    public STSAssumeRoleSessionCredentialsProvider(AlibabaCloudCredentials longLivedCredentials, string roleArn, IAcsClient client);
    public STSAssumeRoleSessionCredentialsProvider(AlibabaCloudCredentialsProvider longLivedCredentialsProvider, string roleArn, IClientProfile clientProfile);
    public STSAssumeRoleSessionCredentialsProvider(AlibabaCloudCredentials longLivedCredentials, string roleArn, string policy, IClientProfile profile);
    public STSAssumeRoleSessionCredentialsProvider(string roleArn, string policy, IAcsClient client);
    public sealed virtual AlibabaCloudCredentials GetCredentials();
    public void WithRoleSessionName(string roleSessionName);
    public void WithRoleSessionDurationSeconds(long roleSessionDurationSeconds);
    public void WithSTSClient(IAcsClient client);
    public static string GetNewRoleSessionName();
    private BasicSessionCredentials GetNewSessionCredentials();
}
public class Aliyun.Acs.Core.Auth.StsCredentialProvider : object {
    private Credential stsCredential;
    public StsCredentialProvider(string accessKeyId, string accessKeySecret, string securityToken);
    public sealed virtual AlibabaCloudCredentials GetCredentials();
}
public class Aliyun.Acs.Core.CommonRequest : object {
    [CompilerGeneratedAttribute]
private string <Product>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocationProduct>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocationEndpointType>k__BackingField;
    [CompilerGeneratedAttribute]
private ProtocolType <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MethodType> <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FormatType> <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TimeoutInMilliSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UriPattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    private Dictionary`2<string, string> queryParameters;
    private Dictionary`2<string, string> bodyParameters;
    private Dictionary`2<string, string> headParameters;
    private Dictionary`2<string, string> pathParameters;
    public string Product { get; public set; }
    public string Version { get; public set; }
    public string Action { get; public set; }
    public string RegionId { get; public set; }
    public string LocationProduct { get; public set; }
    public string LocationEndpointType { get; public set; }
    public ProtocolType Protocol { get; public set; }
    public Nullable`1<MethodType> Method { get; public set; }
    private Nullable`1<FormatType> ContentType { get; private set; }
    private Byte[] Content { get; private set; }
    private string Encoding { get; private set; }
    public int TimeoutInMilliSeconds { get; public set; }
    public string UriPattern { get; public set; }
    public string Domain { get; public set; }
    public Dictionary`2<string, string> QueryParameters { get; }
    public Dictionary`2<string, string> BodyParameters { get; }
    public Dictionary`2<string, string> HeadParameters { get; }
    public Dictionary`2<string, string> PathParameters { get; }
    [CompilerGeneratedAttribute]
public string get_Product();
    [CompilerGeneratedAttribute]
public void set_Product(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
    [CompilerGeneratedAttribute]
public string get_RegionId();
    [CompilerGeneratedAttribute]
public void set_RegionId(string value);
    [CompilerGeneratedAttribute]
public string get_LocationProduct();
    [CompilerGeneratedAttribute]
public void set_LocationProduct(string value);
    [CompilerGeneratedAttribute]
public string get_LocationEndpointType();
    [CompilerGeneratedAttribute]
public void set_LocationEndpointType(string value);
    [CompilerGeneratedAttribute]
public ProtocolType get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(ProtocolType value);
    [CompilerGeneratedAttribute]
public Nullable`1<MethodType> get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(Nullable`1<MethodType> value);
    [CompilerGeneratedAttribute]
private Nullable`1<FormatType> get_ContentType();
    [CompilerGeneratedAttribute]
private void set_ContentType(Nullable`1<FormatType> value);
    [CompilerGeneratedAttribute]
private Byte[] get_Content();
    [CompilerGeneratedAttribute]
private void set_Content(Byte[] value);
    [CompilerGeneratedAttribute]
private string get_Encoding();
    [CompilerGeneratedAttribute]
private void set_Encoding(string value);
    [CompilerGeneratedAttribute]
public int get_TimeoutInMilliSeconds();
    [CompilerGeneratedAttribute]
public void set_TimeoutInMilliSeconds(int value);
    [CompilerGeneratedAttribute]
public string get_UriPattern();
    [CompilerGeneratedAttribute]
public void set_UriPattern(string value);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
public void set_Domain(string value);
    public Dictionary`2<string, string> get_QueryParameters();
    public Dictionary`2<string, string> get_BodyParameters();
    public Dictionary`2<string, string> get_HeadParameters();
    public Dictionary`2<string, string> get_PathParameters();
    public AcsRequest`1<CommonResponse> BuildRequest();
    private void FillParams(AcsRequest`1<T> request);
    public void AddQueryParameters(string name, string value);
    public void AddBodyParameters(string name, string value);
    public void AddHeadParameters(string name, string value);
    public void AddPathParameters(string name, string value);
    public void SetContent(Byte[] content, string encoding, Nullable`1<FormatType> format);
}
public class Aliyun.Acs.Core.CommonResponse : AcsResponse {
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private int <HttpStatus>k__BackingField;
    public string Data { get; public set; }
    public int HttpStatus { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(string value);
    [CompilerGeneratedAttribute]
public int get_HttpStatus();
    [CompilerGeneratedAttribute]
public void set_HttpStatus(int value);
}
internal class Aliyun.Acs.Core.CommonRoaRequest : RoaAcsRequest`1<CommonResponse> {
    public CommonRoaRequest(string product);
    public virtual CommonResponse GetResponse(UnmarshallerContext unmarshallerContext);
}
internal class Aliyun.Acs.Core.CommonRpcRequest : RpcAcsRequest`1<CommonResponse> {
    public CommonRpcRequest(string product);
    public virtual CommonResponse GetResponse(UnmarshallerContext unmarshallerContext);
}
public class Aliyun.Acs.Core.DefaultAcsClient : object {
    private static HttpWebProxy WebProxy;
    private IClientProfile clientProfile;
    private AlibabaCloudCredentialsProvider credentialsProvider;
    private RetryPolicy retryPolicy;
    private UserAgent userAgentConfig;
    private bool autoRetry;
    private int maxRetryNumber;
    [CompilerGeneratedAttribute]
private int <ReadTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ConnectTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCertificate>k__BackingField;
    [ObsoleteAttribute("readTimeout is deprecated as does not match Properties rule, please use readTimeout instead.")]
public int readTimeout { get; }
    public int ReadTimeout { get; private set; }
    [ObsoleteAttribute("connectTimeout is deprecated as does not match Properties rule, please use connectTimeout instead.")]
public int connectTimeout { get; }
    public int ConnectTimeout { get; private set; }
    public bool IgnoreCertificate { get; private set; }
    public int MaxRetryNumber { get; public set; }
    public bool AutoRetry { get; public set; }
    public DefaultAcsClient(IClientProfile profile);
    public DefaultAcsClient(IClientProfile profile, AlibabaCloudCredentials credentials);
    public DefaultAcsClient(IClientProfile profile, AlibabaCloudCredentialsProvider credentialsProvider);
    private static DefaultAcsClient();
    public int get_readTimeout();
    [CompilerGeneratedAttribute]
public int get_ReadTimeout();
    [CompilerGeneratedAttribute]
private void set_ReadTimeout(int value);
    public int get_connectTimeout();
    [CompilerGeneratedAttribute]
public int get_ConnectTimeout();
    [CompilerGeneratedAttribute]
private void set_ConnectTimeout(int value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreCertificate();
    [CompilerGeneratedAttribute]
private void set_IgnoreCertificate(bool value);
    public int get_MaxRetryNumber();
    public void set_MaxRetryNumber(int value);
    public bool get_AutoRetry();
    public void set_AutoRetry(bool value);
    public sealed virtual T GetAcsResponse(AcsRequest`1<T> request);
    public sealed virtual T GetAcsResponse(AcsRequest`1<T> request, bool autoRetry, int maxRetryNumber);
    public sealed virtual T GetAcsResponse(AcsRequest`1<T> request, IClientProfile profile);
    public sealed virtual T GetAcsResponse(AcsRequest`1<T> request, string regionId, Credential credential);
    public sealed virtual CommonResponse GetCommonResponse(CommonRequest request);
    public sealed virtual HttpResponse DoAction(AcsRequest`1<T> request);
    public sealed virtual HttpResponse DoAction(AcsRequest`1<T> request, bool autoRetry, int maxRetryNumber);
    public sealed virtual HttpResponse DoAction(AcsRequest`1<T> request, IClientProfile profile);
    public sealed virtual HttpResponse DoAction(AcsRequest`1<T> request, string regionId, Credential credential);
    public sealed virtual HttpResponse DoAction(AcsRequest`1<T> request, bool autoRetry, int maxRetryNumber, IClientProfile profile);
    public sealed virtual HttpResponse DoAction(AcsRequest`1<T> request, bool autoRetry, int maxRetryNumber, string regionId, Credential credential, Signer signer, Nullable`1<FormatType> format, List`1<Endpoint> endpoints);
    private T ParseAcsResponse(AcsRequest`1<T> request, HttpResponse httpResponse);
    public virtual HttpResponse DoAction(AcsRequest`1<T> request, bool autoRetry, int maxRetryNumber, string regionId, AlibabaCloudCredentials credentials, Signer signer, Nullable`1<FormatType> format, List`1<Endpoint> endpoints);
    private void PrintHttpDebugMsg(HttpRequest request, HttpResponse response);
    private T ReadResponse(AcsRequest`1<T> request, HttpResponse httpResponse, Nullable`1<FormatType> format);
    private AcsError ReadError(AcsRequest`1<T> request, HttpResponse httpResponse, Nullable`1<FormatType> format);
    public virtual HttpResponse GetResponse(HttpRequest httpRequest);
    public void AppendUserAgent(string key, string value);
    public UserAgent GetUserAgentConfig();
    public void SetConnectTimeoutInMilliSeconds(int connectTimeout);
    public void SetReadTimeoutInMilliSeconds(int readTimeout);
    private void ResolveTimeout(HttpRequest request, string product, string version, string actionName);
    public void SetHttpsInsecure(bool ignoreCertificate);
    public void SetHttpProxy(string httpProxy);
    public void SetHttpsProxy(string httpsProxy);
    public void SetNoProxy(string urls);
    public string GetHttpProxy();
    public string GetHttpsProxy();
    public string GetNoProxy();
    private void ResolveProxy(HttpRequest httpRequest, AcsRequest`1<T> request);
    public static void EnableLogger(string template);
    public static void DisableLogger();
}
public class Aliyun.Acs.Core.Exceptions.ClientException : Exception {
    [CompilerGeneratedAttribute]
private string <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorType <ErrorType>k__BackingField;
    public string ErrorCode { get; public set; }
    public string ErrorMessage { get; public set; }
    public string RequestId { get; public set; }
    public ErrorType ErrorType { get; public set; }
    public ClientException(string errCode, string errMsg, string requestId);
    public ClientException(string errCode, string errMsg);
    public ClientException(string message);
    [CompilerGeneratedAttribute]
public string get_ErrorCode();
    [CompilerGeneratedAttribute]
public void set_ErrorCode(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
public void set_RequestId(string value);
    [CompilerGeneratedAttribute]
public ErrorType get_ErrorType();
    [CompilerGeneratedAttribute]
public void set_ErrorType(ErrorType value);
}
public enum Aliyun.Acs.Core.Exceptions.ErrorType : Enum {
    public int value__;
    public static ErrorType Client;
    public static ErrorType Server;
    public static ErrorType Throttling;
    public static ErrorType Unknown;
}
public class Aliyun.Acs.Core.Exceptions.ServerException : ClientException {
    public ServerException(string errorCode, string errorMessage, string requestId);
    public ServerException(string errorCode, string errorMessage);
}
public class Aliyun.Acs.Core.HmacSHA1Signer : Signer {
    private static string ALGORITHM_NAME;
    public static string ENCODING;
    public virtual string SignString(string stringToSign, string accessKeySecret);
    public virtual string SignString(string stringToSign, AlibabaCloudCredentials credentials);
    public virtual string GetSignerName();
    public virtual string GetSignerVersion();
    public virtual string GetSignerType();
}
public enum Aliyun.Acs.Core.Http.FormatType : Enum {
    public int value__;
    public static FormatType XML;
    public static FormatType JSON;
    public static FormatType FORM;
    public static FormatType RAW;
}
public class Aliyun.Acs.Core.Http.HttpRequest : object {
    private int timeout;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MethodType> <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FormatType> <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ReadTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ConnectTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebProxy <WebProxy>k__BackingField;
    public Dictionary`2<string, string> Headers { get; public set; }
    public string Url { get; public set; }
    public Nullable`1<MethodType> Method { get; public set; }
    public Nullable`1<FormatType> ContentType { get; public set; }
    public Byte[] Content { get; public set; }
    public string Encoding { get; public set; }
    [ObsoleteAttribute("timeoutInMilliSeconds is deprecated as does not match Properties rule, please use TimeoutInMilliseconds instead.")]
public int timeoutInMilliSeconds { get; public set; }
    public int TimeoutInMilliseconds { get; public set; }
    [ObsoleteAttribute("readTimeout is deprecated as does not match Properties rule, please use ReadTimeout instead.")]
public int readTimeout { get; }
    public int ReadTimeout { get; private set; }
    [ObsoleteAttribute("connectTimeout is deprecated as does not match Properties rule, please use ConnectTimeout instead.")]
public int connectTimeout { get; }
    public int ConnectTimeout { get; private set; }
    public bool IgnoreCertificate { get; private set; }
    public IWebProxy WebProxy { get; public set; }
    public HttpRequest(string strUrl);
    public HttpRequest(string strUrl, Dictionary`2<string, string> tmpHeaders);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<MethodType> get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(Nullable`1<MethodType> value);
    [CompilerGeneratedAttribute]
public Nullable`1<FormatType> get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(Nullable`1<FormatType> value);
    [CompilerGeneratedAttribute]
public Byte[] get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_Encoding();
    [CompilerGeneratedAttribute]
public void set_Encoding(string value);
    public int get_timeoutInMilliSeconds();
    public void set_timeoutInMilliSeconds(int value);
    public int get_TimeoutInMilliseconds();
    public void set_TimeoutInMilliseconds(int value);
    public int get_readTimeout();
    [CompilerGeneratedAttribute]
public int get_ReadTimeout();
    [CompilerGeneratedAttribute]
private void set_ReadTimeout(int value);
    public int get_connectTimeout();
    [CompilerGeneratedAttribute]
public int get_ConnectTimeout();
    [CompilerGeneratedAttribute]
private void set_ConnectTimeout(int value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreCertificate();
    [CompilerGeneratedAttribute]
private void set_IgnoreCertificate(bool value);
    [CompilerGeneratedAttribute]
public IWebProxy get_WebProxy();
    [CompilerGeneratedAttribute]
public void set_WebProxy(IWebProxy value);
    public void SetContent(Byte[] content, string encoding, Nullable`1<FormatType> format);
    public void SetConnectTimeoutInMilliSeconds(int connectTimeout);
    public void SetReadTimeoutInMilliSeconds(int readTimeout);
    public void SetHttpsInsecure(bool ignoreCertificate);
}
public class Aliyun.Acs.Core.Http.HttpResponse : HttpRequest {
    private static int DEFAULT_READ_TIMEOUT_IN_MilliSeconds;
    private static int DEFAULT_CONNECT_TIMEOUT_In_MilliSeconds;
    private static int bufferLength;
    [CompilerGeneratedAttribute]
private int <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpVersion>k__BackingField;
    public int Status { get; public set; }
    public string HttpVersion { get; public set; }
    public HttpResponse(string strUrl);
    private static HttpResponse();
    [CompilerGeneratedAttribute]
public int get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(int value);
    [CompilerGeneratedAttribute]
public string get_HttpVersion();
    [CompilerGeneratedAttribute]
public void set_HttpVersion(string value);
    public void SetContent(Byte[] content, string encoding, Nullable`1<FormatType> format);
    public string GetHttpContentString();
    private static void ParseHttpResponse(HttpResponse httpResponse, HttpWebResponse httpWebResponse);
    public static Byte[] ReadContent(HttpResponse response, HttpWebResponse rsp);
    public static HttpResponse GetResponse(HttpRequest request, Nullable`1<int> timeout);
    public static HttpWebRequest GetWebRequest(HttpRequest request);
    public bool isSuccess();
}
public class Aliyun.Acs.Core.Http.HttpWebProxy : object {
    [CompilerGeneratedAttribute]
private string <HttpProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpsProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NoProxy>k__BackingField;
    public string HttpProxy { get; public set; }
    public string HttpsProxy { get; public set; }
    public string NoProxy { get; public set; }
    [CompilerGeneratedAttribute]
public string get_HttpProxy();
    [CompilerGeneratedAttribute]
public void set_HttpProxy(string value);
    [CompilerGeneratedAttribute]
public string get_HttpsProxy();
    [CompilerGeneratedAttribute]
public void set_HttpsProxy(string value);
    [CompilerGeneratedAttribute]
public string get_NoProxy();
    [CompilerGeneratedAttribute]
public void set_NoProxy(string value);
}
public enum Aliyun.Acs.Core.Http.MethodType : Enum {
    public int value__;
    public static MethodType GET;
    public static MethodType PUT;
    public static MethodType POST;
    public static MethodType DELETE;
    public static MethodType HEAD;
    public static MethodType OPTIONS;
}
public enum Aliyun.Acs.Core.Http.PositionType : Enum {
    public int value__;
    public static PositionType Host;
    public static PositionType Path;
    public static PositionType Query;
    public static PositionType Header;
    public static PositionType Body;
}
public enum Aliyun.Acs.Core.Http.ProtocolType : Enum {
    public int value__;
    public static ProtocolType HTTP;
    public static ProtocolType HTTPS;
}
public enum Aliyun.Acs.Core.Http.ProxyType : Enum {
    public int value__;
    public static ProxyType HTTP_PROXY;
    public static ProxyType HTTPS_PROXY;
    public static ProxyType NO_PROXY;
}
public class Aliyun.Acs.Core.Http.UserAgent : object {
    private static string DEFAULT_MESSAGE;
    private List`1<string> excludedList;
    private Dictionary`2<string, string> userAgent;
    private static UserAgent();
    public void SetTheValue();
    private static string GetOsVersion();
    [ObsoleteAttribute]
public string GetRuntimeRegexValue(string value);
    private static string GetClientVersion(string value);
    private static string BuildClientVersion(String[] value);
    public static string GetDefaultMessage();
    public void AppendUserAgent(string key, string value);
    public ReadOnlyDictionary`2<string, string> GetSysUserAgentDict();
    public static string Resolve(UserAgent requestConfig, UserAgent clientConfig);
}
public interface Aliyun.Acs.Core.IAcsClient {
    public abstract virtual T GetAcsResponse(AcsRequest`1<T> request);
    public abstract virtual T GetAcsResponse(AcsRequest`1<T> request, bool autoRetry, int maxRetryCounts);
    public abstract virtual T GetAcsResponse(AcsRequest`1<T> request, IClientProfile profile);
    public abstract virtual T GetAcsResponse(AcsRequest`1<T> request, string regionId, Credential credential);
    public abstract virtual CommonResponse GetCommonResponse(CommonRequest request);
    public abstract virtual HttpResponse DoAction(AcsRequest`1<T> request);
    public abstract virtual HttpResponse DoAction(AcsRequest`1<T> request, bool autoRetry, int maxRetryCounts);
    public abstract virtual HttpResponse DoAction(AcsRequest`1<T> request, IClientProfile profile);
    public abstract virtual HttpResponse DoAction(AcsRequest`1<T> request, string regionId, Credential credential);
    public abstract virtual HttpResponse DoAction(AcsRequest`1<T> request, bool autoRetry, int maxRetryCounts, IClientProfile profile);
    public abstract virtual HttpResponse DoAction(AcsRequest`1<T> request, bool autoRetry, int maxRetryNumber, string regionId, Credential credential, Signer signer, Nullable`1<FormatType> format, List`1<Endpoint> endpoints);
}
internal interface Aliyun.Acs.Core.Logging.ILog {
    public abstract virtual bool Log(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters);
}
public interface Aliyun.Acs.Core.Logging.ILogProvider {
    public abstract virtual Logger GetLogger(string name);
    public abstract virtual IDisposable OpenNestedContext(string message);
    public abstract virtual IDisposable OpenMappedContext(string key, object value, bool destructure);
}
[ExtensionAttribute]
internal static class Aliyun.Acs.Core.Logging.LogExtensions : object {
    internal static Object[] EmptyParams;
    private static LogExtensions();
    [ExtensionAttribute]
public static bool IsDebugEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsErrorEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsFatalEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsInfoEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsTraceEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsWarnEnabled(ILog logger);
    [ExtensionAttribute]
public static void Debug(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Debug(ILog logger, string message);
    [ExtensionAttribute]
public static void Debug(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void Debug(ILog logger, Exception exception, string message, Object[] args);
    [ExtensionAttribute]
public static void DebugFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void DebugException(ILog logger, string message, Exception exception);
    [ExtensionAttribute]
public static void DebugException(ILog logger, string message, Exception exception, Object[] args);
    [ExtensionAttribute]
public static void Error(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Error(ILog logger, string message);
    [ExtensionAttribute]
public static void Error(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void Error(ILog logger, Exception exception, string message, Object[] args);
    [ExtensionAttribute]
public static void ErrorFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void ErrorException(ILog logger, string message, Exception exception, Object[] args);
    [ExtensionAttribute]
public static void Fatal(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Fatal(ILog logger, string message);
    [ExtensionAttribute]
public static void Fatal(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void Fatal(ILog logger, Exception exception, string message, Object[] args);
    [ExtensionAttribute]
public static void FatalFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void FatalException(ILog logger, string message, Exception exception, Object[] args);
    [ExtensionAttribute]
public static void Info(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Info(ILog logger, string message);
    [ExtensionAttribute]
public static void Info(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void Info(ILog logger, Exception exception, string message, Object[] args);
    [ExtensionAttribute]
public static void InfoFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void InfoException(ILog logger, string message, Exception exception, Object[] args);
    [ExtensionAttribute]
public static void Trace(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Trace(ILog logger, string message);
    [ExtensionAttribute]
public static void Trace(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void Trace(ILog logger, Exception exception, string message, Object[] args);
    [ExtensionAttribute]
public static void TraceFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void TraceException(ILog logger, string message, Exception exception, Object[] args);
    [ExtensionAttribute]
public static void Warn(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Warn(ILog logger, string message);
    [ExtensionAttribute]
public static void Warn(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void Warn(ILog logger, Exception exception, string message, Object[] args);
    [ExtensionAttribute]
public static void WarnFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void WarnException(ILog logger, string message, Exception exception, Object[] args);
    private static void GuardAgainstNullLogger(ILog logger);
    [ExtensionAttribute]
private static void LogFormat(ILog logger, LogLevel logLevel, string message, Object[] args);
    [ExtensionAttribute]
private static Func`1<T> AsFunc(T value);
    [ExtensionAttribute]
private static T Return(T value);
    internal static Func`1<string> WrapLogSafeInternal(LoggerExecutionWrapper logger, Func`1<string> messageFunc);
    private static Func`1<string> WrapLogInternal(Func`1<string> messageFunc);
}
public class Aliyun.Acs.Core.Logging.Logger : MulticastDelegate {
    public Logger(object object, IntPtr method);
    public virtual bool Invoke(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters);
    public virtual IAsyncResult BeginInvoke(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class Aliyun.Acs.Core.Logging.LoggerExecutionWrapper : object {
    internal static string FailedToGenerateLogMessage;
    private ICallSiteExtension _callsiteLogger;
    private Func`1<bool> _getIsDisabled;
    private Func`1<string> _lastExtensionMethod;
    [CompilerGeneratedAttribute]
private Logger <WrappedLogger>k__BackingField;
    internal Logger WrappedLogger { get; private set; }
    internal LoggerExecutionWrapper(Logger logger, Func`1<bool> getIsDisabled);
    [CompilerGeneratedAttribute]
internal Logger get_WrappedLogger();
    [CompilerGeneratedAttribute]
private void set_WrappedLogger(Logger value);
    public sealed virtual bool Log(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters);
}
public enum Aliyun.Acs.Core.Logging.LogLevel : Enum {
    public int value__;
    public static LogLevel Trace;
    public static LogLevel Debug;
    public static LogLevel Info;
    public static LogLevel Warn;
    public static LogLevel Error;
    public static LogLevel Fatal;
}
public static class Aliyun.Acs.Core.Logging.LogProvider : object {
    private static Lazy`1<ILogProvider> ResolvedLogProvider;
    private static ILogProvider s_currentLogProvider;
    private static Action`1<ILogProvider> s_onCurrentLogProviderSet;
    [CompilerGeneratedAttribute]
private static bool <IsDisabled>k__BackingField;
    internal static List`1<Tuple`2<IsLoggerAvailable, CreateLogProvider>> LogProviderResolvers;
    public static bool IsDisabled { get; public set; }
    unknown static Action`1<ILogProvider> OnCurrentLogProviderSet {internal set; }
    internal static ILogProvider CurrentLogProvider { get; }
    private static LogProvider();
    public static void SetCurrentLogProvider(ILogProvider logProvider);
    [CompilerGeneratedAttribute]
public static bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public static void set_IsDisabled(bool value);
    internal static void set_OnCurrentLogProviderSet(Action`1<ILogProvider> value);
    internal static ILogProvider get_CurrentLogProvider();
    internal static ILog For();
    internal static ILog GetCurrentClassLogger();
    internal static ILog GetLogger(Type type, string fallbackTypeName);
    internal static ILog GetLogger(string name);
    internal static IDisposable OpenNestedContext(string message);
    internal static IDisposable OpenMappedContext(string key, object value, bool destructure);
    private static void RaiseOnCurrentLogProviderSet();
    internal static ILogProvider ResolveLogProvider();
    internal static ILogProvider ForceResolveLogProvider();
}
internal class Aliyun.Acs.Core.Logging.LogProviders.DisposableAction : object {
    private Action _onDispose;
    public DisposableAction(Action onDispose);
    public sealed virtual void Dispose();
}
public class Aliyun.Acs.Core.Logging.LogProviders.LibLogException : Exception {
    public LibLogException(string message);
    public LibLogException(string message, Exception inner);
}
internal class Aliyun.Acs.Core.Logging.LogProviders.Log4NetLogProvider : LogProviderBase {
    private Func`2<string, object> _getLoggerByNameDelegate;
    private static bool s_providerIsAvailableOverride;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static Log4NetLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    internal static bool IsLoggerAvailable();
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
    private static Type GetLogManagerType();
    private static Func`2<string, object> GetGetLoggerMethodCall();
}
internal static class Aliyun.Acs.Core.Logging.LogProviders.LogMessageFormatter : object {
    private static Regex Pattern;
    private static LogMessageFormatter();
    public static Func`1<string> SimulateStructuredLogging(Func`1<string> messageBuilder, Object[] formatParameters);
    private static string ReplaceFirst(string text, string search, string replace);
    public static string FormatStructuredMessage(string targetMessage, Object[] formatParameters, IEnumerable`1& patternMatches);
}
internal abstract class Aliyun.Acs.Core.Logging.LogProviders.LogProviderBase : object {
    private static IDisposable NoopDisposableInstance;
    private Lazy`1<OpenMdc> _lazyOpenMdcMethod;
    protected static string ErrorInitializingProvider;
    private Lazy`1<OpenNdc> _lazyOpenNdcMethod;
    private static LogProviderBase();
    public abstract virtual Logger GetLogger(string name);
    public sealed virtual IDisposable OpenNestedContext(string message);
    public sealed virtual IDisposable OpenMappedContext(string key, object value, bool destructure);
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
    protected static Type FindType(string typeName, string assemblyName);
    protected static Type FindType(string typeName, IReadOnlyList`1<string> assemblyNames);
}
internal class Aliyun.Acs.Core.Logging.LogProviders.LoupeLogProvider : LogProviderBase {
    private WriteDelegate _logWriteDelegate;
    private static string LoupeAgentNetCoreDll;
    private static string LoupeAgentNetFrameworkDll;
    private static bool s_providerIsAvaiableOverride;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static LoupeLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    public static bool IsLoggerAvailable();
    private static Type GetTypeFromCoreOrFrameworkDll(string typeName);
    private static Type GetLogManagerType();
    private static WriteDelegate GetLogWriteDelegate();
}
internal class Aliyun.Acs.Core.Logging.LogProviders.NLogLogProvider : LogProviderBase {
    private Func`2<string, object> _getLoggerByNameDelegate;
    [CompilerGeneratedAttribute]
private static bool <ProviderIsAvailableOverride>k__BackingField;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static NLogLogProvider();
    [CompilerGeneratedAttribute]
public static bool get_ProviderIsAvailableOverride();
    [CompilerGeneratedAttribute]
public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    public static bool IsLoggerAvailable();
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
    private static Type GetLogManagerType();
    private static Func`2<string, object> GetGetLoggerMethodCall();
}
internal class Aliyun.Acs.Core.Logging.LogProviders.SerilogLogProvider : LogProviderBase {
    private Func`2<string, object> _getLoggerByNameDelegate;
    private static Func`4<string, object, bool, IDisposable> s_pushProperty;
    private static bool s_providerIsAvailableOverride;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static SerilogLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    internal static bool IsLoggerAvailable();
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
    private static Func`4<string, object, bool, IDisposable> GetPushProperty();
    private static Type GetLogManagerType();
    private static Func`2<string, object> GetForContextMethodCall();
}
internal static class Aliyun.Acs.Core.Logging.LogProviders.TraceEventTypeValues : object {
    internal static Type Type;
    internal static int Verbose;
    internal static int Information;
    internal static int Warning;
    internal static int Error;
    internal static int Critical;
    private static TraceEventTypeValues();
}
[ExtensionAttribute]
internal static class Aliyun.Acs.Core.Logging.LogProviders.TypeExtensions : object {
    [ExtensionAttribute]
internal static ConstructorInfo GetConstructorPortable(Type type, Type[] types);
    [ExtensionAttribute]
internal static MethodInfo GetMethod(Type type, string name, Type[] types);
}
public class Aliyun.Acs.Core.Profile.DefaultProfile : object {
    private static DefaultProfile _profile;
    private static Credential _credential;
    private EndpointResolve endpointResolve;
    private ICredentialProvider iCredentialProvider;
    private string regionId;
    public FormatType acceptFormat;
    private LocationConfig locationConfig;
    [CompilerGeneratedAttribute]
private string <DefaultClientName>k__BackingField;
    public string DefaultClientName { get; public set; }
    private DefaultProfile(string regionId);
    private DefaultProfile(string region, Credential creden);
    private DefaultProfile(string region, ICredentialProvider icredential);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DefaultClientName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultClientName(string value);
    public sealed virtual string GetRegionId();
    public sealed virtual FormatType GetFormat();
    public sealed virtual Credential GetCredential();
    [ObsoleteAttribute]
public sealed virtual ISigner GetSigner();
    public sealed virtual void SetLocationConfig(string regionId, string product, string endpoint);
    public sealed virtual List`1<Endpoint> GetEndpoints(string product, string regionId, string serviceCode, string endpointType);
    public List`1<Endpoint> GetEndpoints(string regionId, string product);
    public sealed virtual void AddEndpoint(string endpointName, string regionId, string product, string domain, bool isNeverExpire);
    public sealed virtual void SetCredentialsProvider(AlibabaCloudCredentialsProvider credentialsProvider);
    public static DefaultProfile GetProfile();
    public static DefaultProfile GetProfile(string regionId);
    public static DefaultProfile GetProfile(string regionId, ICredentialProvider icredential);
    public static DefaultProfile GetProfile(string regionId, string accessKeyId, string secret);
    public static void ClearProfile();
}
public interface Aliyun.Acs.Core.Profile.IClientProfile {
    public string DefaultClientName { get; public set; }
    public abstract virtual string get_DefaultClientName();
    public abstract virtual void set_DefaultClientName(string value);
    public abstract virtual ISigner GetSigner();
    public abstract virtual string GetRegionId();
    public abstract virtual FormatType GetFormat();
    public abstract virtual Credential GetCredential();
    public abstract virtual List`1<Endpoint> GetEndpoints(string product, string regionId, string serviceCode, string endpointType);
    public abstract virtual void SetLocationConfig(string regionId, string product, string endpoint);
    public abstract virtual void SetCredentialsProvider(AlibabaCloudCredentialsProvider credentialsProvider);
    public abstract virtual void AddEndpoint(string endpointName, string regionId, string product, string domain, bool isNeverExpire);
}
public interface Aliyun.Acs.Core.Reader.IReader {
    public abstract virtual Dictionary`2<string, string> Read(string response, string endpoint);
    public abstract virtual Dictionary`2<string, string> ReadForHideArrayItem(string response, string endpoint);
}
public class Aliyun.Acs.Core.Reader.JsonReader : object {
    private static int FIRST_POSITION;
    private static int CURRENT_POSITION;
    private static int NEXT_POSITION;
    private static object ARRAY_END_TOKEN;
    private static object OBJECT_END_TOKEN;
    private static object COMMA_TOKEN;
    private static object COLON_TOKEN;
    private static Dictionary`2<char, char> escapes;
    private Dictionary`2<string, string> map;
    private StringBuilder sb;
    private char c;
    private CharEnumerator ct;
    private object token;
    private static JsonReader();
    public sealed virtual Dictionary`2<string, string> Read(string response, string endpoint);
    public sealed virtual Dictionary`2<string, string> ReadForHideArrayItem(string response, string endpoint);
    public Dictionary`2<string, string> Read(CharEnumerator ci, string endpoint);
    public Dictionary`2<string, string> ReadForHideArrayItem(CharEnumerator ci, string endpoint);
    private object ReadJson(string baseKey);
    private object ReadJsonForHideArrayItem(string baseKey);
    private void ProcessObject(string baseKey);
    private void ProcessObjectForHideArrayItem(string baseKey);
    private void ProcessList(string baseKey);
    private void ProcessArray(string baseKey);
    private void ProcessArrayForHideArrayItem(string baseKey);
    private object ProcessNumber(char preChar);
    private void AddDigits();
    private void SkipWhiteSpace();
    private Nullable`1<char> NextChar();
    private object ProcessString();
    private void AddChar(char ch);
    private void AddChar();
    public static string TrimFromLast(string str, string stripString);
}
public class Aliyun.Acs.Core.Reader.ReaderFactory : object {
    public static IReader CreateInstance(Nullable`1<FormatType> format);
}
public class Aliyun.Acs.Core.Reader.XmlReader : object {
    private Dictionary`2<string, string> dictionary;
    public sealed virtual Dictionary`2<string, string> Read(string xml, string endpoint);
    public sealed virtual Dictionary`2<string, string> ReadForHideArrayItem(string xml, string endpoint);
    private void Read(XmlNode element, string path, bool appendPath);
    private void ElementsAsList(XmlNodeList listElements, string path);
}
internal interface Aliyun.Acs.Core.Regions.DescribeEndpointService {
    public abstract virtual DescribeEndpointResponse DescribeEndpoint(string regionId, string serviceCode, string endpointType, Credential credential, LocationConfig locationConfig);
}
internal class Aliyun.Acs.Core.Regions.DescribeEndpointServiceImpl : object {
    private static string DEFAULT_ENDPOINT_TYPE;
    public sealed virtual DescribeEndpointResponse DescribeEndpoint(string regionId, string serviceCode, string endpointType, Credential credential, LocationConfig locationConfig);
    private DescribeEndpointResponse GetEndpointResponse(string data, string endpointType);
    private AcsError ReadError(HttpResponse httpResponse, FormatType format);
    private string GetResponseContent(HttpResponse httpResponse);
    public virtual HttpResponse GetResponse(HttpRequest httpRequest);
}
public class Aliyun.Acs.Core.Regions.Endpoint : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <RegionIds>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ProductDomain> <ProductDomains>k__BackingField;
    public string Name { get; private set; }
    public ISet`1<string> RegionIds { get; private set; }
    public List`1<ProductDomain> ProductDomains { get; private set; }
    public Endpoint(string name, ISet`1<string> regionIds, List`1<ProductDomain> productDomains);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_RegionIds();
    [CompilerGeneratedAttribute]
private void set_RegionIds(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<ProductDomain> get_ProductDomains();
    [CompilerGeneratedAttribute]
private void set_ProductDomains(List`1<ProductDomain> value);
    public static ProductDomain FindProductDomain(string regionId, string product, List`1<Endpoint> endpoints);
    private static ProductDomain FindProductDomainByProduct(List`1<ProductDomain> productDomains, string product);
}
internal static class Aliyun.Acs.Core.Regions.EndpointResource : object {
    private static IDictionary`2<string, string> GlobalEndpoints;
    private static IDictionary`2<string, string> RegionalEndpoints;
    private static IDictionary`2<string, string> RegionalEndpointPattern;
    private static IDictionary`2<string, string> LocationCodeMapping;
    private static IList`1<string> Regions;
    private static EndpointResource();
    internal static IDictionary`2<string, string> GetGlobalEndpoints();
    internal static IDictionary`2<string, string> GetRegionalEndpoints();
    internal static IList`1<string> GetRegions();
    internal static IDictionary`2<string, string> GetRegionalEndpointPattern();
    internal static IDictionary`2<string, string> GetLocationCodeMapping();
}
internal class Aliyun.Acs.Core.Regions.Endpoints.EndpointResolve : object {
    private static List`1<Endpoint> _endpoints;
    private IEndpointsProvider internalEndpointProvider;
    private IEndpointsProvider remoteEndpointProvider;
    public List`1<Endpoint> Resolve(string product, string regionId, string serviceCode, string endpointType, Credential credential, LocationConfig locationConfig);
    public void AddEndpoint(string endpointName, string regionId, string product, string domain, bool isNeverExpire);
    private static Endpoint FindEndpointByRegionId(string regionId);
    public List`1<Endpoint> GetEndpoints(string regionId, string product);
    private static void UpdateEndpoint(string regionId, string product, string domain, Endpoint endpoint);
    private static ProductDomain FindProductDomain(List`1<ProductDomain> productDomains, string product);
}
public static class Aliyun.Acs.Core.Regions.EndpointUserConfig : object {
    public static Dictionary`2<string, ProductDomain> endpoints;
    private static EndpointUserConfig();
    public static void AddEndpoint(string product, string regionId, string domain);
    public static ProductDomain GetProductDomain(string product, string regionId);
    public static void Clear();
}
internal interface Aliyun.Acs.Core.Regions.IEndpointsProvider {
    public abstract virtual Endpoint GetEndpoint(string region, string product);
    public abstract virtual Endpoint GetEndpoint(string region, string product, string serviceCode, string endpointType, Credential credential, LocationConfig locationConfig);
}
internal class Aliyun.Acs.Core.Regions.InternalEndpointsParser : object {
    private IDictionary`2<string, string> globalEndpointCollection;
    private IDictionary`2<string, string> regionIdEndpointCollection;
    public sealed virtual Endpoint GetEndpoint(string regionId, string productName);
    public sealed virtual Endpoint GetEndpoint(string region, string product, string serviceCode, string endpointType, Credential credential, LocationConfig locationConfig);
}
internal class Aliyun.Acs.Core.Regions.Location.LocationConfig : object {
    private string regionId;
    private string product;
    private string endpoint;
    public string RegionId { get; public set; }
    public string Product { get; public set; }
    public string Endpoint { get; public set; }
    public LocationConfig(string regionId, string product, string endpoint);
    public static LocationConfig createLocationConfig(string regionId, string product, string endpoint);
    public string get_RegionId();
    public void set_RegionId(string value);
    public string get_Product();
    public void set_Product(string value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Aliyun.Acs.Core.Regions.Location.Model.DescribeEndpointRequest : RpcAcsRequest`1<DescribeEndpointResponse> {
    private string endpointType;
    private string id;
    private string locationProduct;
    public string Id { get; public set; }
    public string EndpointType { get; public set; }
    public string LocationProduct { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    public string get_EndpointType();
    public void set_EndpointType(string value);
    public string get_LocationProduct();
    public void set_LocationProduct(string value);
    public virtual DescribeEndpointResponse GetResponse(UnmarshallerContext unmarshallerContext);
}
public class Aliyun.Acs.Core.Regions.Location.Model.DescribeEndpointResponse : AcsResponse {
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Product>k__BackingField;
    public string Endpoint { get; public set; }
    public string RegionId { get; public set; }
    public string Product { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_RegionId();
    [CompilerGeneratedAttribute]
public void set_RegionId(string value);
    [CompilerGeneratedAttribute]
public string get_Product();
    [CompilerGeneratedAttribute]
public void set_Product(string value);
}
public class Aliyun.Acs.Core.Regions.Location.Transform.DescribeEndpointResponseUnmarshaller : object {
}
public class Aliyun.Acs.Core.Regions.ProductDomain : object {
    [CompilerGeneratedAttribute]
private string <ProductName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DomainName>k__BackingField;
    public string ProductName { get; public set; }
    public string DomainName { get; public set; }
    public ProductDomain(string product, string domain);
    [CompilerGeneratedAttribute]
public string get_ProductName();
    [CompilerGeneratedAttribute]
public void set_ProductName(string value);
    [CompilerGeneratedAttribute]
public string get_DomainName();
    [CompilerGeneratedAttribute]
public void set_DomainName(string value);
}
internal class Aliyun.Acs.Core.Regions.RemoteEndpointsParser : object {
    private DescribeEndpointService describeEndpointService;
    public sealed virtual Endpoint GetEndpoint(string regionId, string product);
    public sealed virtual Endpoint GetEndpoint(string regionId, string product, string serviceCode, string endpointType, Credential credential, LocationConfig locationConfig);
}
public class Aliyun.Acs.Core.Retry.BackoffStrategy.BackoffStrategyHandler : object {
    private static int SdkDefaultBaseDelay;
    private static int SdkDefaultThrottledBaseDelay;
    private static int SdkDefaultMaxBackoff;
    private ExponentialBackoffStrategy exponentialBackoffStrategy;
    private JitteredExponentialBackoffStrategy jitteredExponentialBackoffStrategy;
    public sealed virtual int GetDelayTimeBeforeNextRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.BackoffStrategy.CustomDelayStrategy : object {
    private int customDelay;
    public CustomDelayStrategy(int customDelay);
    public sealed virtual int GetDelayTimeBeforeNextRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.BackoffStrategy.ExponentialBackoffStrategy : object {
    private static int MaxRetryLimit;
    private int baseDelayInMilliseconds;
    private int maxDelayInMilliseconds;
    public ExponentialBackoffStrategy(int baseDelayInMilliseconds, int maxDelayInMilliseconds);
    public sealed virtual int GetDelayTimeBeforeNextRetry(RetryPolicyContext retryPolicyContext);
}
public interface Aliyun.Acs.Core.Retry.BackoffStrategy.IAlibabaBackoffStrategy {
    public abstract virtual int GetDelayTimeBeforeNextRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.BackoffStrategy.JitteredExponentialBackoffStrategy : ExponentialBackoffStrategy {
    private static Random GenerateRandomNum;
    public JitteredExponentialBackoffStrategy(int baseDelayInMilliseconds, int maxDelayInMilliseconds);
    private static JitteredExponentialBackoffStrategy();
    public int GetDelayTimeBeforeNextRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.BackoffStrategy.NoDelayStrategy : object {
    public sealed virtual int GetDelayTimeBeforeNextRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.Condition.AndRetryCondition : object {
    private IEnumerable`1<IAlibabaRetryCondition> retryConditions;
    public AndRetryCondition(IEnumerable`1<IAlibabaRetryCondition> retryConditions);
    public sealed virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.Condition.ConditionRetryHandler : object {
    private MaxRetryTimesCondition maxRetryTimesCondition;
    private RetryOnApiCondition retryOnApiCondition;
    private RetryOnApiWithClientTokenCondition retryOnApiWithClientTokenCondition;
    private RetryOnExceptionCondition retryOnExceptionCondition;
    private RetryOnHttpStatusCondition retryOnHttpStatusCondition;
    public ConditionRetryHandler(int maxRetries, List`1<string> retryHttpCodeList);
    public sealed virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
public interface Aliyun.Acs.Core.Retry.Condition.IAlibabaRetryCondition {
    public abstract virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.Condition.MaxRetryTimesCondition : object {
    private int maxRetryTimes;
    public MaxRetryTimesCondition(int retryTimes);
    public sealed virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.Condition.NoRetryCondition : object {
    public sealed virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.Condition.OrRetryCondition : object {
    private IEnumerable`1<IAlibabaRetryCondition> retryConditions;
    public OrRetryCondition(IEnumerable`1<IAlibabaRetryCondition> retryConditions);
    public sealed virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
[FlagsAttribute]
public enum Aliyun.Acs.Core.Retry.Condition.RetryCondition : Enum {
    public int value__;
    public static RetryCondition BlankStatus;
    public static RetryCondition NoRetry;
    public static RetryCondition ShouldRetry;
    public static RetryCondition ShouldRetryWithClientToken;
    public static RetryCondition ShouldRetryWithThrottlingBackoff;
}
public class Aliyun.Acs.Core.Retry.Condition.RetryOnApiCondition : object {
    private static string ApiSectionName;
    public sealed virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.Condition.RetryOnApiWithClientTokenCondition : object {
    private static string ApiWithTokenSectionName;
    public sealed virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.Condition.RetryOnExceptionCondition : object {
    private static string SdkHttpError;
    private static string NormalErrorSectionName;
    private static string ThrottlingErrorSectionName;
    public sealed virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.Condition.RetryOnHttpStatusCondition : object {
    private List`1<string> defaultRetryHttpStatusCodeList;
    public RetryOnHttpStatusCondition(List`1<string> retryHttpCodeList);
    public sealed virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.RetryPolicy : object {
    private IAlibabaBackoffStrategy backoffStrategy;
    private IAlibabaRetryCondition retryCondition;
    public RetryPolicy(int maxRetries, bool preDefined);
    public RetryPolicy(IAlibabaRetryCondition retryCondition, IAlibabaBackoffStrategy backoffStrategy);
    public sealed virtual int GetDelayTimeBeforeNextRetry(RetryPolicyContext retryPolicyContext);
    public sealed virtual RetryCondition ShouldRetry(RetryPolicyContext retryPolicyContext);
}
public class Aliyun.Acs.Core.Retry.RetryPolicyContext : object {
    [CompilerGeneratedAttribute]
private ClientException <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RetryAttemptTimes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Product>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiName>k__BackingField;
    private RetryCondition retryable;
    public ClientException Exception { get; private set; }
    public string HttpStatusCode { get; private set; }
    public int RetryAttemptTimes { get; public set; }
    public string Product { get; private set; }
    public string Version { get; private set; }
    public string ApiName { get; private set; }
    public RetryCondition Retryable { get; public set; }
    public RetryPolicyContext(ClientException exception, string httpStatusCode, int retryAttemptTimes, string product, string version, string apiName, RetryCondition retryable);
    [CompilerGeneratedAttribute]
public ClientException get_Exception();
    [CompilerGeneratedAttribute]
private void set_Exception(ClientException value);
    [CompilerGeneratedAttribute]
public string get_HttpStatusCode();
    [CompilerGeneratedAttribute]
private void set_HttpStatusCode(string value);
    [CompilerGeneratedAttribute]
public int get_RetryAttemptTimes();
    [CompilerGeneratedAttribute]
public void set_RetryAttemptTimes(int value);
    [CompilerGeneratedAttribute]
public string get_Product();
    [CompilerGeneratedAttribute]
private void set_Product(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ApiName();
    [CompilerGeneratedAttribute]
private void set_ApiName(string value);
    public RetryCondition get_Retryable();
    public void set_Retryable(RetryCondition value);
}
public class Aliyun.Acs.Core.Retry.Util.Product : object {
    [CompilerGeneratedAttribute]
private string <ProductName>k__BackingField;
    public Dictionary`2<string, Version> versions;
    public string ProductName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProductName();
    [CompilerGeneratedAttribute]
public void set_ProductName(string value);
}
internal static class Aliyun.Acs.Core.Retry.Util.RetryConfig : object {
    private static Dictionary`2<string, Product> products;
    public static List`1<string> GetRetryableApiList(string product, string version, string sectionName);
    internal static List`1<string> Get(string productName, string versionDate, string sectionName);
}
public class Aliyun.Acs.Core.Retry.Util.Version : object {
    [CompilerGeneratedAttribute]
private string <VersionDate>k__BackingField;
    public List`1<string> RetryableAPIs;
    public List`1<string> RetryableAPIsWithClientToken;
    public List`1<string> RetryableThrottlingErrors;
    public List`1<string> RetryableNormalErrors;
    public string VersionDate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_VersionDate();
    [CompilerGeneratedAttribute]
public void set_VersionDate(string value);
}
public abstract class Aliyun.Acs.Core.RoaAcsRequest`1 : AcsRequest`1<T> {
    [CompilerGeneratedAttribute]
private string <UriPattern>k__BackingField;
    private Dictionary`2<string, string> pathParameters;
    public string UriPattern { get; public set; }
    public Dictionary`2<string, string> PathParameters { get; public set; }
    public RoaAcsRequest`1(string product);
    public RoaAcsRequest`1(string product, string version);
    public RoaAcsRequest`1(string product, string version, string action);
    public RoaAcsRequest`1(string product, string version, string action, string locationProduct);
    public RoaAcsRequest`1(string product, string version, string action, string locationProduct, string locationEndpointType);
    [CompilerGeneratedAttribute]
public string get_UriPattern();
    [CompilerGeneratedAttribute]
public void set_UriPattern(string value);
    public Dictionary`2<string, string> get_PathParameters();
    public void set_PathParameters(Dictionary`2<string, string> value);
    private void Initialize();
    public void SetVersion(string version);
    public virtual string ComposeUrl(string endpoint, Dictionary`2<string, string> queries);
    public virtual HttpRequest SignRequest(Signer signer, AlibabaCloudCredentials credentials, Nullable`1<FormatType> format, ProductDomain domain);
    public void AddPathParameters(string name, string value);
}
public abstract class Aliyun.Acs.Core.RpcAcsRequest`1 : AcsRequest`1<T> {
    private FormatType acceptFormat;
    private string actionName;
    private string version;
    public string ActionName { get; public set; }
    public string Version { get; public set; }
    public FormatType AcceptFormat { get; public set; }
    public RpcAcsRequest`1(string product);
    public RpcAcsRequest`1(string product, string version);
    public RpcAcsRequest`1(string product, string version, string action);
    public RpcAcsRequest`1(string product, string version, string action, string locationProduct);
    public RpcAcsRequest`1(string product, string version, string action, string locationProduct, string locationEndpointType);
    public virtual string get_ActionName();
    public virtual void set_ActionName(string value);
    public virtual string get_Version();
    public virtual void set_Version(string value);
    public virtual FormatType get_AcceptFormat();
    public virtual void set_AcceptFormat(FormatType value);
    private void Initialize();
    public virtual HttpRequest SignRequest(Signer signer, AlibabaCloudCredentials credentials, Nullable`1<FormatType> format, ProductDomain domain);
    public virtual string ComposeUrl(string endpoint, Dictionary`2<string, string> queries);
}
public class Aliyun.Acs.Core.SHA256withRSASigner : Signer {
    private static string ALGORITHM_NAME;
    public static string ENCODING;
    public virtual string SignString(string stringToSign, string accessKeySecret);
    public virtual string SignString(string stringToSign, AlibabaCloudCredentials credentials);
    public virtual string GetSignerName();
    public virtual string GetSignerVersion();
    public virtual string GetSignerType();
}
public class Aliyun.Acs.Core.Timeout.Util.Product : object {
    [CompilerGeneratedAttribute]
private string <ProductName>k__BackingField;
    public Dictionary`2<string, Version> versions;
    public string ProductName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProductName();
    [CompilerGeneratedAttribute]
public void set_ProductName(string value);
}
internal static class Aliyun.Acs.Core.Timeout.Util.TimeoutConfig : object {
    private static Dictionary`2<string, Product> products;
    private static TimeoutConfig();
    public static int GetSpecificApiReadTimeoutValue(string product, string version, string actionName);
    internal static int Get(string productName, string versionDate, string actionName);
}
public class Aliyun.Acs.Core.Timeout.Util.Version : object {
    [CompilerGeneratedAttribute]
private string <VersionDate>k__BackingField;
    public Dictionary`2<string, int> Apis;
    public string VersionDate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_VersionDate();
    [CompilerGeneratedAttribute]
public void set_VersionDate(string value);
}
public class Aliyun.Acs.Core.Transform.AcsErrorUnmarshaller : object {
    public static AcsError Unmarshall(UnmarshallerContext context);
}
public class Aliyun.Acs.Core.Transform.UnmarshallerContext : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <ResponseDictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponse <HttpResponse>k__BackingField;
    public Dictionary`2<string, string> ResponseDictionary { get; public set; }
    public HttpResponse HttpResponse { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_ResponseDictionary();
    [CompilerGeneratedAttribute]
public void set_ResponseDictionary(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public HttpResponse get_HttpResponse();
    [CompilerGeneratedAttribute]
public void set_HttpResponse(HttpResponse value);
    public Nullable`1<int> IntegerValue(string key);
    public string StringValue(string key);
    public Nullable`1<long> LongValue(string key);
    public Nullable`1<bool> BooleanValue(string key);
    public Nullable`1<float> FloatValue(string key);
    public Nullable`1<double> DoubleValue(string key);
    public Nullable`1<T> EnumValue(string key);
    public int Length(string key);
}
public class Aliyun.Acs.Core.Utils.AuthUtils : object {
    private static String modreq(System.Runtime.CompilerServices.IsVolatile) oidcToken;
    private static String modreq(System.Runtime.CompilerServices.IsVolatile) clientType;
    private static AuthUtils();
    public static string GetClientType();
    public static string GetOIDCToken(string OIDCTokenFilePath);
}
public class Aliyun.Acs.Core.Utils.CacheTimeHelper : object {
    private static int ENDPOINT_CACHE_TIME;
    private static ConcurrentDictionary`2<string, DateTime> lastClearTimePerProduct;
    private static CacheTimeHelper();
    public static bool CheckCacheIsExpire(string product, string regionId);
    public static void AddLastClearTimePerProduct(string product, string regionId, DateTime lastClearTime);
}
public class Aliyun.Acs.Core.Utils.CommonLog : object {
    private static string RegexPattern;
    private static ILog Logger;
    private static Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_enableLogger;
    private static IDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) LoggerMessageMap;
    internal static string DefaultTemplate;
    [CompilerGeneratedAttribute]
private static long <ExecuteTime>k__BackingField;
    private static String modreq(System.Runtime.CompilerServices.IsVolatile) template;
    internal static long ExecuteTime { get; internal set; }
    private static CommonLog();
    [CompilerGeneratedAttribute]
internal static long get_ExecuteTime();
    [CompilerGeneratedAttribute]
internal static void set_ExecuteTime(long value);
    private static void BuildKeyValueMap(AcsRequest`1<T> request, HttpResponse response, long executeTime);
    internal static void EnableLogger(string loggerTemplate);
    internal static void DisableLogger();
    internal static bool GetEnableLoggerStatus();
    internal static void LogInfo(AcsRequest`1<T> request, HttpResponse httpResponse, long executeTime);
    internal static void LogException(Exception ex, string errorCode, string errorMessage);
}
[ExtensionAttribute]
public static class Aliyun.Acs.Core.Utils.DateTimeExtensions : object {
    private static DateTime Jan1st1970;
    private static DateTimeExtensions();
    [ExtensionAttribute]
public static long currentTimeMillis(DateTime d);
}
public class Aliyun.Acs.Core.Utils.DictionaryUtil : object {
    public static void Add(Dictionary`2<string, string> dic, string key, T value);
    public static void Add(Dictionary`2<TKey, TValue> dic, TKey key, TValue value);
    public static TValue Get(Dictionary`2<TKey, TValue> dic, TKey key);
    public static string Get(Dictionary`2<string, string> dic, string key);
    public static TValue Pop(Dictionary`2<TKey, TValue> dic, TKey key);
    public static string Pop(Dictionary`2<string, string> dic, string key);
    public static void Print(Dictionary`2<TKey, TValue> dic, char str);
    public static void Print(Dictionary`2<string, string> dic, char str);
    public static string TransformDicToString(Dictionary`2<TKey, TValue> dic);
    public static string TransformDicToString(Dictionary`2<string, string> dic);
}
public class Aliyun.Acs.Core.Utils.EnvironmentUtil : object {
    private static string ENV_ACCESS_KEY_ID;
    private static string ENV_ACCESS_KEY_SECRET;
    private static string ENV_REGION_ID;
    private static string ENV_CREDENTIAL_FILE;
    private static string ENV_ROLE_NAME;
    private static string ENV_ROLE_ARN;
    private static string ENV_OIDC_PROVIDER_ARN;
    private static string ENV_OIDC_TOKEN_FILE;
    private static EnvironmentUtil();
    public static string GetHomePath();
    public static string GetOSSlash();
    public static string GetEnvironmentAccessKeyId();
    public static string GetEnvironmentAccessKeySecret();
    public static string GetEnvironmentRegionId();
    public static string GetEnvironmentCredentialFile();
    public static string GetEnvironmentRoleName();
    public static string GetEnvironmentRoleArn();
    public static string GetEnvironmentOIDCProviderArn();
    public static string GetEnvironmentOIDCTokenFile();
    public static string GetComposedPath(string homePath, string slash);
}
public class Aliyun.Acs.Core.Utils.IniReader : object {
    private Dictionary`2<string, Dictionary`2<string, string>> ini;
    public IniReader(string file);
    public string GetValue(string key);
    public string GetValue(string key, string section);
    public string GetValue(string key, string section, string default);
    public String[] GetKeys(string section);
    public String[] GetSections();
    public void SaveSettings(string newFilePath, string section, IDictionary`2<string, string> keyValuePairDic);
}
public class Aliyun.Acs.Core.Utils.ParameterHelper : object {
    private static string ISO8601_DATE_FORMAT;
    public static string FormatIso8601Date(DateTime date);
    public static string GetRFC2616Date(DateTime datetime);
    public static string Md5Sum(Byte[] buff);
    public static string Md5SumAndBase64(Byte[] buff);
    public static string FormatTypeToString(Nullable`1<FormatType> formatType);
    public static Nullable`1<FormatType> StingToFormatType(string format);
    public static Nullable`1<MethodType> StringToMethodType(string method);
    public static Byte[] GetFormData(Dictionary`2<string, string> parameters);
    public static string ValidateEnvNotNull(string obj, string envVariableName, string paramName, string message);
}
[ObsoleteAttribute("Use String.IsNullOrEmpty instead")]
public class Aliyun.Acs.Core.Utils.StringUtils : object {
    public static bool isEmpty(string s);
}
