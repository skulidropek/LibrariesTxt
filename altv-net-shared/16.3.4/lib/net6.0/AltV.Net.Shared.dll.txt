public class AltV.Net.Data.DegreeRotation : ValueType {
    public static DegreeRotation Zero;
    public float Roll;
    public float Pitch;
    public float Yaw;
    public DegreeRotation(float roll, float pitch, float yaw);
    private static DegreeRotation();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static Rotation op_Implicit(DegreeRotation rotation);
    public static DegreeRotation op_Implicit(Rotation rotation);
    private static float DegreeToRadian(float angle);
    private static float RadianToDegree(float angle);
}
public static class AltV.Net.Data.Dimension : object {
    public static int DefaultDimension;
    public static int GlobalDimension;
}
public static class AltV.Net.Data.VehicleConstants : object {
    public static byte MaxWindows;
    public static byte MaxLights;
    public static byte MaxSpecialLights;
}
public static class AltV.Net.Data.Weapons : object {
    public static UInt32 Knife;
    public static UInt32 Bat;
    public static UInt32 Bottle;
    public static UInt32 Wrench;
    public static UInt32 Pistol;
    public static UInt32 HeavyPistol;
    public static UInt32 Revolver;
    public static UInt32 MicroSmg;
    public static UInt32 Smg;
    public static UInt32 CombatPdw;
    public static UInt32 AssaultRifle;
    public static UInt32 CarbineRifle;
    public static UInt32 PumpShotgun;
    public static UInt32 Grenade;
    public static UInt32 RammedByCar;
    public static UInt32 RunOverByCar;
    public static UInt32 Fall;
    public static UInt32 Drowning;
    public static UInt32 DrowningInVehicle;
    public static UInt32 Explosion;
    public static UInt32 Fire;
    public static UInt32 Bleeding;
    public static UInt32 BarbedWire;
    public static UInt32 Exhaustion;
    public static UInt32 ElectricFence;
    private static Weapons();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class AltV.Net.Elements.Args.DefaultMValueAdapters : object {
    public static IMValueAdapter`1<List`1<T>> GetArrayAdapter(IMValueAdapter`1<T> elementAdapter);
    public static IMValueAdapter`1<IDictionary`2<string, T>> GetDictionaryAdapter(IMValueAdapter`1<T> elementAdapter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.Elements.Args.MValueBuffer2 : ValueType {
    private ISharedCore core;
    private MValueConst[] values;
    private int position;
    public int size;
    [ObsoleteAttribute("Use Alt.CreateMValueBuffer or overload with ISharedCore argument instead")]
public MValueBuffer2(MValueConst[] values);
    public MValueBuffer2(ISharedCore core, MValueConst[] values);
    public void GetNext(MValueConst& mValue);
    public void Peek(MValueConst& mValue);
    public bool GetNext(Boolean& value);
    public bool GetNext(Int32& value);
    public bool GetNext(UInt32& value);
    public bool GetNext(Int64& value);
    public bool GetNext(UInt64& value);
    public bool GetNext(Single& value);
    public bool GetNext(Double& value);
    public bool GetNext(String& value);
    public bool GetNext(Position& value);
    public bool GetNext(Rgba& value);
    public bool GetNext(Byte[]& value);
    public bool GetNext(MValueConst[]& valuesList);
    public void SkipValue();
    public bool GetNext(TEntity& value);
    public bool HasNext();
    public Type GetPreviousType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class AltV.Net.Elements.Args.MValueConst : ValueType {
    public static MValueConst Nil;
    public static MValueConst None;
    private ISharedCore core;
    public IntPtr nativePointer;
    public Type type;
    public MValueConst(ISharedCore core, IntPtr nativePointer);
    public MValueConst(ISharedCore core, Type type, IntPtr nativePointer);
    private static MValueConst();
    public static MValueConst[] CreateFrom(ISharedCore core, IntPtr[] pointers);
    public bool GetBool();
    public long GetInt();
    public ulong GetUint();
    public double GetDouble();
    public string GetString();
    public IntPtr GetEntityPointer(BaseObjectType& baseObjectType);
    public ISharedBaseObject GetBaseObject();
    public MValueConst[] GetList();
    public Dictionary`2<string, MValueConst> GetDictionary();
    public void CallFunction(MValueConst[] args, MValueConst& result);
    public void GetVector3(Position& position);
    public Position GetVector3();
    public void GetRgba(Rgba& rgba);
    public Rgba GetRgba();
    public Byte[] GetByteArray();
    public object ToObject();
    public virtual string ToString();
    public void AddRef();
    public void RemoveRef();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class AltV.Net.Elements.Args.MValueObjectReader : object {
    private bool insideObject;
    private Stack`1<IReadableMValue> currents;
    private IReadableMValue readableMValue;
    public MValueObjectReader(object obj);
    public sealed virtual void BeginObject();
    public sealed virtual void EndObject();
    public sealed virtual void BeginArray();
    public sealed virtual void EndArray();
    private void CheckObject();
    private void CheckArray();
    private void CheckObjectOrArray();
    private void CheckName();
    private void CheckValue();
    public sealed virtual bool HasNext();
    public sealed virtual string NextName();
    public sealed virtual void SkipName();
    public sealed virtual bool NextBool();
    public sealed virtual int NextInt();
    public sealed virtual long NextLong();
    public sealed virtual UInt32 NextUInt();
    public sealed virtual ulong NextULong();
    public Position NextPosition();
    public Rgba NextRgba();
    public sealed virtual double NextDouble();
    public sealed virtual string NextString();
    public sealed virtual void SkipValue();
    public sealed virtual MValueReaderToken Peek();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class AltV.Net.Elements.Args.MValueReader2 : object {
    private ISharedCore core;
    private bool insideObject;
    private Stack`1<IReadableMValue> currents;
    private IReadableMValue readableMValue;
    public MValueReader2(ISharedCore core, MValueConst& mValue);
    public sealed virtual void BeginObject();
    public sealed virtual void EndObject();
    public sealed virtual void BeginArray();
    public sealed virtual void EndArray();
    private void CheckObject();
    private void CheckArray();
    private void CheckObjectOrArray();
    private void CheckName();
    private void CheckValue();
    public sealed virtual bool HasNext();
    public sealed virtual string NextName();
    public sealed virtual void SkipName();
    public sealed virtual bool NextBool();
    public sealed virtual int NextInt();
    public sealed virtual long NextLong();
    public sealed virtual UInt32 NextUInt();
    public sealed virtual ulong NextULong();
    public sealed virtual double NextDouble();
    public sealed virtual string NextString();
    public sealed virtual void SkipValue();
    public sealed virtual MValueReaderToken Peek();
    public sealed virtual void Dispose();
}
public enum AltV.Net.Elements.Args.MValueReaderToken : Enum {
    public int value__;
    public static MValueReaderToken Object;
    public static MValueReaderToken Array;
    public static MValueReaderToken Name;
    public static MValueReaderToken Value;
    public static MValueReaderToken Nil;
    public static MValueReaderToken Unknown;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.Elements.Args.MValueWriter2 : object {
    private ISharedCore core;
    private Stack`1<IWritableMValue> currents;
    private IWritableMValue root;
    private IWritableMValue curr;
    private IWritableMValue currCurr;
    public MValueWriter2(ISharedCore core);
    public sealed virtual void BeginObject();
    public sealed virtual void EndObject();
    public sealed virtual void BeginArray();
    public sealed virtual void EndArray();
    public sealed virtual void Name(string name);
    public sealed virtual void Value(bool value);
    public sealed virtual void Value(int value);
    public sealed virtual void Value(long value);
    public sealed virtual void Value(UInt32 value);
    public sealed virtual void Value(ulong value);
    public sealed virtual void Value(float value);
    public sealed virtual void Value(double value);
    public sealed virtual void Value(string value);
    public sealed virtual void Value(ISharedBaseObject value);
    public sealed virtual void Value(ICollection value);
    public sealed virtual void Value(IWritable value);
    public sealed virtual void Value(Position value);
    public sealed virtual void Value(Rotation value);
    public sealed virtual void Value(Rgba value);
    public sealed virtual void Value(Vector3 value);
    public sealed virtual void Value(Vector2 value);
    public bool ToMValue(MValueConst& mValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.Elements.Entities.BaseObjectRemovedException : Exception {
    internal BaseObjectRemovedException(ISharedBaseObject baseObject);
    public BaseObjectRemovedException(string message);
}
public enum AltV.Net.Elements.Entities.BlipType : Enum {
    public byte value__;
    public static BlipType Vehicle;
    public static BlipType Ped;
    public static BlipType Enemy;
    public static BlipType Object;
    public static BlipType Destination;
    public static BlipType Cont;
    public static BlipType Unk;
    public static BlipType Radius;
    public static BlipType Pickup;
    public static BlipType Cop;
    public static BlipType Area;
    public static BlipType Gallery;
    public static BlipType PickupObject;
}
public enum AltV.Net.Elements.Entities.CheckpointType : Enum {
    public byte value__;
    public static CheckpointType CylinderSingleArrow;
    public static CheckpointType CylinderDoubleArrow;
    public static CheckpointType CylinderTripleArrow;
    public static CheckpointType CylinderCycleArrow;
    public static CheckpointType CylinderCheckerboard;
    public static CheckpointType CylinderWrench;
    public static CheckpointType CylinderSingleArrow2;
    public static CheckpointType CylinderDoubleArrow2;
    public static CheckpointType CylinderTripleArrow2;
    public static CheckpointType CylinderCycleArrow2;
    public static CheckpointType CylinderCheckerboard2;
    public static CheckpointType CylinderWrench2;
    public static CheckpointType RingSingleArrow;
    public static CheckpointType RingDoubleArrow;
    public static CheckpointType RingTripleArrow;
    public static CheckpointType RingCycleArrow;
    public static CheckpointType RingCheckerboard;
    public static CheckpointType SingleArrow;
    public static CheckpointType DoubleArrow;
    public static CheckpointType TripleArrow;
    public static CheckpointType CycleArrow;
    public static CheckpointType Checkerboard;
    public static CheckpointType CylinderSingleArrow3;
    public static CheckpointType CylinderDoubleArrow3;
    public static CheckpointType CylinderTripleArrow3;
    public static CheckpointType CylinderCycleArrow3;
    public static CheckpointType CylinderCheckerboard3;
    public static CheckpointType CylinderSingleArrow4;
    public static CheckpointType CylinderDoubleArrow4;
    public static CheckpointType CylinderTripleArrow4;
    public static CheckpointType CylinderCycleArrow4;
    public static CheckpointType CylinderCheckerboard4;
    public static CheckpointType CylinderSingleArrow5;
    public static CheckpointType CylinderDoubleArrow5;
    public static CheckpointType CylinderTripleArrow5;
    public static CheckpointType CylinderCycleArrow5;
    public static CheckpointType CylinderCheckerboard5;
    public static CheckpointType RingPlaneUp;
    public static CheckpointType RingPlaneLeft;
    public static CheckpointType RingPlaneRight;
    public static CheckpointType RingPlaneDown;
    public static CheckpointType Empty;
    public static CheckpointType Ring;
    public static CheckpointType Empty2;
    public static CheckpointType Cylinder;
    public static CheckpointType Cylinder1;
    public static CheckpointType Cylinder2;
    public static CheckpointType Cylinder3;
    public static CheckpointType Cylinder4;
    public static CheckpointType Cylinder5;
    public static CheckpointType Empty3;
    public static CheckpointType Empty4;
    public static CheckpointType Empty5;
    public static CheckpointType Empty6;
    public static CheckpointType RingDollar;
    public static CheckpointType RingWolf;
    public static CheckpointType RingQuestionMark;
    public static CheckpointType RingPlane;
    public static CheckpointType RingChopper;
    public static CheckpointType RingBoat;
    public static CheckpointType RingCar;
    public static CheckpointType RingBike;
    public static CheckpointType RingBicycle;
    public static CheckpointType RingTruck;
    public static CheckpointType RingParachute;
    public static CheckpointType RingJetpack;
    public static CheckpointType RingWhirl;
}
public enum AltV.Net.Elements.Entities.ColShapeType : Enum {
    public byte value__;
    public static ColShapeType Sphere;
    public static ColShapeType Cylinder;
    public static ColShapeType Circle;
    public static ColShapeType Cube;
    public static ColShapeType Rect;
    public static ColShapeType CheckpointCylinder;
    public static ColShapeType Polygon;
}
public class AltV.Net.Elements.Entities.EntityRemovedException : WorldObjectRemovedException {
    [NullableContextAttribute("1")]
internal EntityRemovedException(ISharedEntity entity);
}
internal interface AltV.Net.Elements.Entities.IInternalBaseObject {
    unknown bool Exists {public set; }
    public abstract virtual void set_Exists(bool value);
    public abstract virtual void ClearData();
    public abstract virtual void SetCached(IntPtr pointer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.Elements.Entities.WorldObjectRemovedException : BaseObjectRemovedException {
    internal WorldObjectRemovedException(ISharedWorldObject worldObject);
    public WorldObjectRemovedException(string message);
}
public enum AltV.Net.Enums.ExplosionType : Enum {
    public int value__;
    public static ExplosionType DontCare;
    public static ExplosionType Grenade;
    public static ExplosionType GrenadeLauncher;
    public static ExplosionType Stickybomb;
    public static ExplosionType Molotov;
    public static ExplosionType Rocket;
    public static ExplosionType Tankshell;
    public static ExplosionType HiOctane;
    public static ExplosionType Car;
    public static ExplosionType Plane;
    public static ExplosionType PetrolPump;
    public static ExplosionType Bike;
    public static ExplosionType DirSteam;
    public static ExplosionType DirFlame;
    public static ExplosionType DirWaterHydrant;
    public static ExplosionType DirGasCanister;
    public static ExplosionType Boat;
    public static ExplosionType ShipDestroy;
    public static ExplosionType Truck;
    public static ExplosionType Bullet;
    public static ExplosionType SmokeGrenadeLauncher;
    public static ExplosionType SmokeGrenade;
    public static ExplosionType BZGas;
    public static ExplosionType Flare;
    public static ExplosionType GasCanister;
    public static ExplosionType Extinguisher;
    public static ExplosionType ProgrammableAR;
    public static ExplosionType Train;
    public static ExplosionType Barrel;
    public static ExplosionType Propane;
    public static ExplosionType Blimp;
    public static ExplosionType DirFlameExplode;
    public static ExplosionType Tanker;
    public static ExplosionType PlaneRocket;
    public static ExplosionType VehicleBullet;
    public static ExplosionType GasTank;
    public static ExplosionType BirdCrap;
    public static ExplosionType Railgun;
    public static ExplosionType Blimp2;
    public static ExplosionType Firework;
    public static ExplosionType Snowball;
    public static ExplosionType Proxmine;
    public static ExplosionType ValkyrieCannon;
    public static ExplosionType AirDefence;
    public static ExplosionType Pipebomb;
    public static ExplosionType VehicleMine;
    public static ExplosionType ExplosiveAmmo;
    public static ExplosionType APCShell;
    public static ExplosionType BombCluster;
    public static ExplosionType BombGas;
    public static ExplosionType BombIncendiary;
    public static ExplosionType BombStandard;
    public static ExplosionType Torpedo;
    public static ExplosionType TorpedoUnderwater;
    public static ExplosionType BombushkaCannon;
    public static ExplosionType BombClusterSecondary;
    public static ExplosionType HunterBarrage;
    public static ExplosionType HunterCannon;
    public static ExplosionType RogueCannon;
    public static ExplosionType MineUnderwater;
    public static ExplosionType OrbitalCannon;
    public static ExplosionType BombStandardWide;
    public static ExplosionType ExplosiveammoShotgun;
    public static ExplosionType Oppressor2Cannon;
    public static ExplosionType MortarKinetic;
    public static ExplosionType VehicleMineKinetic;
    public static ExplosionType VehicleMineEmp;
    public static ExplosionType VehicleMineSpike;
    public static ExplosionType VehicleMineSlick;
    public static ExplosionType VehicleMineTar;
    public static ExplosionType ScriptDrone;
    public static ExplosionType Raygun;
    public static ExplosionType Buriedmine;
    public static ExplosionType ScriptMissile;
}
public enum AltV.Net.Enums.NumberPlateStyle : Enum {
    public int value__;
    public static NumberPlateStyle BlueWhite;
    public static NumberPlateStyle YellowBlack;
    public static NumberPlateStyle YellowBlue;
    public static NumberPlateStyle BlueWhite2;
    public static NumberPlateStyle BlueWhite3;
    public static NumberPlateStyle Yankton;
}
public enum AltV.Net.Enums.PedModel : Enum {
    public UInt32 value__;
    public static PedModel Skidrow01AMM;
    public static PedModel Hooker01SFY;
    public static PedModel Hooker03SFY;
    public static PedModel JimmyBostonCutscene;
    public static PedModel SalvaGoon03GMY;
    public static PedModel Autoshop01SMM;
    public static PedModel Eastsa02AFY;
    public static PedModel Car3Guy1Cutscene;
    public static PedModel Clown01SMY;
    public static PedModel TracyDisantoCutscene;
    public static PedModel FloydCutscene;
    public static PedModel Pigeon;
    public static PedModel TigerShark;
    public static PedModel Genfat01AMM;
    public static PedModel AnitaCutscene;
    public static PedModel Eastsa02AMM;
    public static PedModel Indian01AFY;
    public static PedModel MaryannCutscene;
    public static PedModel Zimbor;
    public static PedModel Baywatch01SMY;
    public static PedModel PestContGunman;
    public static PedModel Socenlat01AMM;
    public static PedModel DaleCutscene;
    public static PedModel Janet;
    public static PedModel Michael;
    public static PedModel Tanisha;
    public static PedModel Corpse02UFY;
    public static PedModel StrPunk02GMY;
    public static PedModel AmmuCountrySMM;
    public static PedModel Soucent03AMO;
    public static PedModel Jewelass;
    public static PedModel GuadalopeCutscene;
    public static PedModel Chef01SMY;
    public static PedModel ChiCold01GMM;
    public static PedModel MountainLion;
    public static PedModel Latino01AMY;
    public static PedModel Car3Guy2Cutscene;
    public static PedModel Genfat02AMM;
    public static PedModel Fitness02AFY;
    public static PedModel Hippie01AFY;
    public static PedModel Hooker02SFY;
    public static PedModel Hipster02AMY;
    public static PedModel Dockwork01SMM;
    public static PedModel Chop;
    public static PedModel Ktown01AMO;
    public static PedModel Paige;
    public static PedModel Ballas01GFY;
    public static PedModel DaveNorton;
    public static PedModel Cop01SFY;
    public static PedModel FemBarberSFM;
    public static PedModel Eastsa02AMY;
    public static PedModel PrologueHostage01AFM;
    public static PedModel Tramp01AMO;
    public static PedModel Crow;
    public static PedModel RashkovskyCutscene;
    public static PedModel GentransportSMM;
    public static PedModel Marnie;
    public static PedModel ShopKeep01;
    public static PedModel Hipster04AFY;
    public static PedModel HeliStaff01;
    public static PedModel Vinewood01AFY;
    public static PedModel Cntrybar01SMM;
    public static PedModel Snowcop01SMM;
    public static PedModel Ktown01AMY;
    public static PedModel FosRepCutscene;
    public static PedModel Strpreach01SMM;
    public static PedModel Markfost;
    public static PedModel MrsThornhill;
    public static PedModel PrologueSec02Cutscene;
    public static PedModel Tramp01AMM;
    public static PedModel OldMan1aCutscene;
    public static PedModel Business02AFM;
    public static PedModel Vinewood03AMY;
    public static PedModel Salton01AMO;
    public static PedModel Bevhills03AFY;
    public static PedModel RampHipsterCutscene;
    public static PedModel Doorman01SMY;
    public static PedModel MovPrem01SFY;
    public static PedModel Hipster01AMY;
    public static PedModel BallaOrig01GMY;
    public static PedModel BallaSout01GMY;
    public static PedModel Beach02AMY;
    public static PedModel Poppymich;
    public static PedModel Stwhi01AMY;
    public static PedModel CarDesignFemale01;
    public static PedModel Chip;
    public static PedModel Agent;
    public static PedModel Korean01GMY;
    public static PedModel Runner01AMY;
    public static PedModel Popov;
    public static PedModel Ortega;
    public static PedModel AshleyCutscene;
    public static PedModel MexGoon01GMY;
    public static PedModel FibOffice02SMM;
    public static PedModel SalvaGoon01GMY;
    public static PedModel Business01AFY;
    public static PedModel PrologueSec02;
    public static PedModel Lifeinvad02;
    public static PedModel CrisFormage;
    public static PedModel Highsec02SMM;
    public static PedModel StripperLite;
    public static PedModel Ktown02AMY;
    public static PedModel Indian01AMY;
    public static PedModel EdToh;
    public static PedModel Soucent01AMO;
    public static PedModel FilmDirector;
    public static PedModel FilmNoir;
    public static PedModel Soucent01AFY;
    public static PedModel Cyclist01;
    public static PedModel SlodSmallQuadped;
    public static PedModel Downtown01AMY;
    public static PedModel Jetski01AMY;
    public static PedModel ONeil;
    public static PedModel Corpse01UMY;
    public static PedModel ReporterCutscene;
    public static PedModel ChemSec01SMM;
    public static PedModel DevinCutscene;
    public static PedModel Genhot01AFY;
    public static PedModel PornDudesCutscene;
    public static PedModel Barry;
    public static PedModel Fish;
    public static PedModel Malibu01AMM;
    public static PedModel JanetCutscene;
    public static PedModel Beach01AFM;
    public static PedModel MexThug01AMY;
    public static PedModel Hiker01AFY;
    public static PedModel Grip01SMY;
    public static PedModel WeiChengCutscene;
    public static PedModel Sweatshop01SFM;
    public static PedModel Business02AFY;
    public static PedModel MexGoon02GMY;
    public static PedModel Vinewood04AMY;
    public static PedModel SalvaGoon02GMY;
    public static PedModel BoatStaff01F;
    public static PedModel Lost03GMY;
    public static PedModel Famdd01;
    public static PedModel FibArchitect;
    public static PedModel Imporage;
    public static PedModel Retriever;
    public static PedModel Genstreet02AMY;
    public static PedModel KorBoss01GMM;
    public static PedModel MovieStar;
    public static PedModel Stretch;
    public static PedModel Stwhi02AMY;
    public static PedModel Bevhills04AFY;
    public static PedModel Party01;
    public static PedModel WeaponExpertMale01;
    public static PedModel Vinewood03AFY;
    public static PedModel Breakdance01AMY;
    public static PedModel AviSchwartzman;
    public static PedModel Rashkovsky;
    public static PedModel SteveHains;
    public static PedModel Marston01;
    public static PedModel MrsPhillips;
    public static PedModel LazlowCutscene;
    public static PedModel FatWhite01AFM;
    public static PedModel TerryCutscene;
    public static PedModel FbiSuit01;
    public static PedModel PestContDriver;
    public static PedModel Valet01SMY;
    public static PedModel Rurmeth01AMM;
    public static PedModel Bodybuild01AFM;
    public static PedModel Maude;
    public static PedModel RsRanger01AMO;
    public static PedModel DreyfussCutscene;
    public static PedModel HammerShark;
    public static PedModel MimeSMY;
    public static PedModel RussianDrunk;
    public static PedModel Lost02GMY;
    public static PedModel Soucent01AFO;
    public static PedModel ExecutivePAMale01;
    public static PedModel ShopMidSFY;
    public static PedModel SlodHuman;
    public static PedModel Rurmeth01AFY;
    public static PedModel Bevhills02AMM;
    public static PedModel Abigail;
    public static PedModel Beach01AMM;
    public static PedModel Soucent02AMO;
    public static PedModel Ktown02AFM;
    public static PedModel Scientist01SMM;
    public static PedModel Miranda;
    public static PedModel Sheriff01SFY;
    public static PedModel Factory01SMY;
    public static PedModel WeaponWorkerMale01;
    public static PedModel Hairdress01SMM;
    public static PedModel TanishaCutscene;
    public static PedModel Poodle;
    public static PedModel Shepherd;
    public static PedModel ExecutivePAFemale01;
    public static PedModel MartinMadrazoCutscene;
    public static PedModel Xmech01SMY;
    public static PedModel JewelassCutscene;
    public static PedModel Bevhills01AFY;
    public static PedModel JackHowitzerCutscene;
    public static PedModel JoshCutscene;
    public static PedModel ExArmy01;
    public static PedModel LamarDavisCutscene;
    public static PedModel RampHic;
    public static PedModel Fitness01AFY;
    public static PedModel MollyCutscene;
    public static PedModel JosefCutscene;
    public static PedModel Glenstank01;
    public static PedModel HeadTargets;
    public static PedModel RussianDrunkCutscene;
    public static PedModel Dale;
    public static PedModel Finguru01;
    public static PedModel FabienCutscene;
    public static PedModel MilitaryBum;
    public static PedModel Humpback;
    public static PedModel DomCutscene;
    public static PedModel Ktown01AFO;
    public static PedModel Andreas;
    public static PedModel PestCont01SMY;
    public static PedModel Tramp01AFM;
    public static PedModel VagosSpeakCutscene;
    public static PedModel MexBoss02GMM;
    public static PedModel Gardener01SMM;
    public static PedModel Chef;
    public static PedModel Baywatch01SFY;
    public static PedModel Vinewood01AMY;
    public static PedModel Musclbeac01AMY;
    public static PedModel CocaineFemale01;
    public static PedModel Acult02AMO;
    public static PedModel KarenDanielsCutscene;
    public static PedModel MoviePremFemaleCutscene;
    public static PedModel SiemonYetarian;
    public static PedModel PriestCutscene;
    public static PedModel LesterCrest;
    public static PedModel Families01GFY;
    public static PedModel Hipster03AMY;
    public static PedModel Husky;
    public static PedModel NataliaCutscene;
    public static PedModel Salton01AMM;
    public static PedModel PoloGoon01GMY;
    public static PedModel Lost01GMY;
    public static PedModel MrsThornhillCutscene;
    public static PedModel Paparazzi;
    public static PedModel Tourist01AFM;
    public static PedModel FemaleAgent;
    public static PedModel Blackops03SMY;
    public static PedModel Hiker01AMY;
    public static PedModel Eastsa03AFY;
    public static PedModel Baygor;
    public static PedModel Stripper01SFY;
    public static PedModel TylerDixon;
    public static PedModel Ktown01AFM;
    public static PedModel TaosTranslatorCutscene;
    public static PedModel Lifeinvad01;
    public static PedModel TrampBeac01AMM;
    public static PedModel Acult01AMM;
    public static PedModel Tennis01AMM;
    public static PedModel Bevhills01AMM;
    public static PedModel Tennis01AFY;
    public static PedModel WinClean01SMY;
    public static PedModel Acult01AMO;
    public static PedModel Tourist01AFY;
    public static PedModel Prisguard01SMM;
    public static PedModel CocaineMale01;
    public static PedModel Cormorant;
    public static PedModel JimmyDisanto;
    public static PedModel TrafficWarden;
    public static PedModel Cat;
    public static PedModel Bestmen;
    public static PedModel MarnieCutscene;
    public static PedModel MexBoss01GMM;
    public static PedModel MagentaCutscene;
    public static PedModel FbiSuit01Cutscene;
    public static PedModel Marine02SMY;
    public static PedModel Trucker01SMM;
    public static PedModel ExecutivePAFemale02;
    public static PedModel Soucent02AFY;
    public static PedModel Vagos01GFY;
    public static PedModel PaigeCutscene;
    public static PedModel KerryMcintosh;
    public static PedModel HunterCutscene;
    public static PedModel SpyActress;
    public static PedModel StripperLiteSFY;
    public static PedModel TennisCoachCutscene;
    public static PedModel Bevhills02AFY;
    public static PedModel FibSec01;
    public static PedModel Vinewood02AMY;
    public static PedModel Airhostess01SFY;
    public static PedModel Mistress;
    public static PedModel Cop01SMY;
    public static PedModel PrisMuscl01SMY;
    public static PedModel RivalPaparazzi;
    public static PedModel Omega;
    public static PedModel Salton02AMM;
    public static PedModel MerryWeatherCutscene;
    public static PedModel ForgeryMale01;
    public static PedModel Bride;
    public static PedModel RampMarineCutscene;
    public static PedModel PopovCutscene;
    public static PedModel Genstreet01AFO;
    public static PedModel Fatlatin01AMM;
    public static PedModel Orleans;
    public static PedModel AirworkerSMY;
    public static PedModel DoaMan;
    public static PedModel Postal01SMM;
    public static PedModel CiaSec01SMM;
    public static PedModel Armymech01SMY;
    public static PedModel TonyaCutscene;
    public static PedModel Armoured02SMM;
    public static PedModel Eastsa02AFM;
    public static PedModel Priest;
    public static PedModel Coyote;
    public static PedModel MovAlien01;
    public static PedModel Motox01AMY;
    public static PedModel Downtown01AFM;
    public static PedModel Marine01SMY;
    public static PedModel Hao;
    public static PedModel LamarDavis;
    public static PedModel Bevhills02AMY;
    public static PedModel Terry;
    public static PedModel OgBoss01AMM;
    public static PedModel Soucent01AMM;
    public static PedModel Azteca01GMY;
    public static PedModel Epsilon01AFY;
    public static PedModel Xmech02SMYMP;
    public static PedModel BarryCutscene;
    public static PedModel Skater01AFY;
    public static PedModel Methhead01AMY;
    public static PedModel TomCutscene;
    public static PedModel Factory01SFY;
    public static PedModel Tramp01;
    public static PedModel SbikeAMO;
    public static PedModel Hen;
    public static PedModel PaperCutscene;
    public static PedModel Hasjew01AMM;
    public static PedModel StreetArt01;
    public static PedModel Hillbilly01AMM;
    public static PedModel MPros01;
    public static PedModel Clay;
    public static PedModel AmandaTownley;
    public static PedModel Pug;
    public static PedModel Agent14Cutscene;
    public static PedModel Stripper02SFY;
    public static PedModel ShopMaskSMY;
    public static PedModel HughCutscene;
    public static PedModel DeniseCutscene;
    public static PedModel FreemodeMale01;
    public static PedModel PrologueSec01;
    public static PedModel MichelleCutscene;
    public static PedModel OldMan1a;
    public static PedModel BradCadaverCutscene;
    public static PedModel Lifeinvad01Cutscene;
    public static PedModel Marine03SMY;
    public static PedModel Postal02SMM;
    public static PedModel Hwaycop01SMY;
    public static PedModel DeadHooker;
    public static PedModel Soucent01AFM;
    public static PedModel Devin;
    public static PedModel Car3Guy2;
    public static PedModel DwService01SMY;
    public static PedModel Bevhills01AMY;
    public static PedModel BikeHire01;
    public static PedModel Lsmetro01SMM;
    public static PedModel Motox02AMY;
    public static PedModel Epsilon01AMY;
    public static PedModel Bartender01SFY;
    public static PedModel ForgeryFemale01;
    public static PedModel Beach02AMM;
    public static PedModel NervousRonCutscene;
    public static PedModel Strperf01SMM;
    public static PedModel Josh;
    public static PedModel Blackops02SMY;
    public static PedModel JayNorris;
    public static PedModel GroomCutscene;
    public static PedModel Hillbilly02AMM;
    public static PedModel FibSec01SMM;
    public static PedModel Prisoner01;
    public static PedModel TaosTranslator;
    public static PedModel KorLieut01GMY;
    public static PedModel Hippy01AMY;
    public static PedModel Justin;
    public static PedModel Golfer01AFY;
    public static PedModel Beachvesp01AMY;
    public static PedModel ChiGoon01GMM;
    public static PedModel Business01AMM;
    public static PedModel Mariachi01SMM;
    public static PedModel Ashley;
    public static PedModel PrologueSec01Cutscene;
    public static PedModel Acult02AMY;
    public static PedModel Stripper02Cutscene;
    public static PedModel PartyTarget;
    public static PedModel Denise;
    public static PedModel Hipster01AFY;
    public static PedModel BrideCutscene;
    public static PedModel Polynesian01AMY;
    public static PedModel G;
    public static PedModel Beach01AMO;
    public static PedModel Famfor01GMY;
    public static PedModel Runner02AMY;
    public static PedModel ImportExportFemale01;
    public static PedModel Car3Guy1;
    public static PedModel Sweatshop01SFY;
    public static PedModel PrologueDriver;
    public static PedModel SlodLargeQuadped;
    public static PedModel DaveNortonCutscene;
    public static PedModel Chef2;
    public static PedModel RampHicCutscene;
    public static PedModel FibMugger01;
    public static PedModel Stlat01AMY;
    public static PedModel Dockwork01SMY;
    public static PedModel Solomon;
    public static PedModel Soucent03AFY;
    public static PedModel JohnnyKlebitz;
    public static PedModel TaoChengCutscene;
    public static PedModel StretchCutscene;
    public static PedModel AbigailCutscene;
    public static PedModel Soucent04AMY;
    public static PedModel OmegaCutscene;
    public static PedModel BurgerDrug;
    public static PedModel Dolphin;
    public static PedModel Soucent03AMM;
    public static PedModel ScreenWriterCutscene;
    public static PedModel TomEpsilonCutscene;
    public static PedModel TrampBeac01AFM;
    public static PedModel CarBuyerCutscene;
    public static PedModel BurgerDrugCutscene;
    public static PedModel MoviePremMaleCutscene;
    public static PedModel KillerWhale;
    public static PedModel Swat01SMY;
    public static PedModel Korean02GMY;
    public static PedModel SalvaBoss01GMY;
    public static PedModel WillyFist;
    public static PedModel Bankman;
    public static PedModel Tourist02AFY;
    public static PedModel WeedMale01;
    public static PedModel Staggrm01AMO;
    public static PedModel Juggalo01AMY;
    public static PedModel Strvend01SMY;
    public static PedModel Wade;
    public static PedModel Farmer01AMM;
    public static PedModel Tattoo01AMO;
    public static PedModel Rottweiler;
    public static PedModel Armoured01SMM;
    public static PedModel AmandaTownleyCutscene;
    public static PedModel Salton04AMM;
    public static PedModel MexGoon03GMY;
    public static PedModel Hotposh01;
    public static PedModel PrologueHostage01AMM;
    public static PedModel BankmanCutscene;
    public static PedModel Hipster02AFY;
    public static PedModel CounterfeitMale01;
    public static PedModel Genstreet01AMY;
    public static PedModel AviSchwartzmanCutscene;
    public static PedModel Stbla02AMY;
    public static PedModel OldMan2Cutscene;
    public static PedModel Paper;
    public static PedModel Hacker;
    public static PedModel Taphillbilly;
    public static PedModel CopCutscene;
    public static PedModel Busicas01AMY;
    public static PedModel Franklin;
    public static PedModel Devinsec01SMY;
    public static PedModel Trevor;
    public static PedModel Dom;
    public static PedModel Corpse01UFY;
    public static PedModel FreemodeFemale01;
    public static PedModel Topless01AFY;
    public static PedModel Claypain;
    public static PedModel Eastsa01AFM;
    public static PedModel Ammucity01SMY;
    public static PedModel Lathandy01SMM;
    public static PedModel Soucent02AMM;
    public static PedModel Ups01SMM;
    public static PedModel Ranger01SFY;
    public static PedModel Bouncer01SMM;
    public static PedModel Bevhills02AFM;
    public static PedModel Business03AMY;
    public static PedModel Stingray;
    public static PedModel PrologueMournFemale01;
    public static PedModel TennisCoach;
    public static PedModel GCutscene;
    public static PedModel PoloGoon02GMY;
    public static PedModel ChefCutscene;
    public static PedModel MaryAnn;
    public static PedModel DrFriedlanderCutscene;
    public static PedModel Eastsa01AMY;
    public static PedModel CustomerCutscene;
    public static PedModel SteveHainsCutscene;
    public static PedModel Soucent02AFO;
    public static PedModel Gay02AMY;
    public static PedModel Hipster03AFY;
    public static PedModel AntonCutscene;
    public static PedModel Ballasog;
    public static PedModel Chimp;
    public static PedModel ChinGoonCutscene;
    public static PedModel Gaffer01SMM;
    public static PedModel JanitorSMM;
    public static PedModel ShopLowSFY;
    public static PedModel Polynesian01AMM;
    public static PedModel Golfer01AMM;
    public static PedModel RoccoPelosiCutscene;
    public static PedModel Epsilon02AMY;
    public static PedModel ChickenHawk;
    public static PedModel WeiCheng;
    public static PedModel Yoga01AMY;
    public static PedModel Pilot01SMY;
    public static PedModel Scrubs01SFY;
    public static PedModel BallasogCutscene;
    public static PedModel SpyActor;
    public static PedModel Zombie01;
    public static PedModel Soucent02AMY;
    public static PedModel JewelSec01;
    public static PedModel OrleansCutscene;
    public static PedModel Waiter01SMY;
    public static PedModel Genstreet01AMO;
    public static PedModel Westy;
    public static PedModel Busker01SMO;
    public static PedModel ShopHighSFM;
    public static PedModel Chef2Cutscene;
    public static PedModel Business03AFY;
    public static PedModel Stripper01Cutscene;
    public static PedModel Molly;
    public static PedModel Skater02AMY;
    public static PedModel Skidrow01AFM;
    public static PedModel Pig;
    public static PedModel Sheriff01SMY;
    public static PedModel Floyd;
    public static PedModel Prisoner01SMY;
    public static PedModel Autopsy01SMY;
    public static PedModel MexLabor01AMM;
    public static PedModel WeedFemale01;
    public static PedModel Salton03AMM;
    public static PedModel GunVend01;
    public static PedModel Paramedic01SMM;
    public static PedModel Business02AMY;
    public static PedModel Blackops01SMY;
    public static PedModel BeverlyCutscene;
    public static PedModel Acult01AMY;
    public static PedModel DeniseFriendCutscene;
    public static PedModel LesterCrestCutscene;
    public static PedModel FatCult01AFM;
    public static PedModel ComJane;
    public static PedModel Fireman01SMY;
    public static PedModel Sunbathe01AMY;
    public static PedModel MiltonCutscene;
    public static PedModel CounterfeitFemale01;
    public static PedModel Business04AFY;
    public static PedModel JimmyDisantoCutscene;
    public static PedModel ChiBoss01GMM;
    public static PedModel Indian01AFO;
    public static PedModel ImportExportMale01;
    public static PedModel MaudeCutscene;
    public static PedModel NervousRon;
    public static PedModel Beverly;
    public static PedModel Brad;
    public static PedModel MexGang01GMY;
    public static PedModel Bevhills01AFM;
    public static PedModel JoeMinuteman;
    public static PedModel Xmech02SMY;
    public static PedModel Michelle;
    public static PedModel Robber01SMY;
    public static PedModel SiemonYetarianCutscene;
    public static PedModel OrtegaCutscene;
    public static PedModel Claude01;
    public static PedModel Vindouche01AMY;
    public static PedModel Skater01AMY;
    public static PedModel CrisFormageCutscene;
    public static PedModel JanitorCutscene;
    public static PedModel RampGangCutscene;
    public static PedModel Stlat02AMM;
    public static PedModel Rhesus;
    public static PedModel Soucent04AMM;
    public static PedModel Bankman01;
    public static PedModel GurkCutscene;
    public static PedModel Rat;
    public static PedModel MrKCutscene;
    public static PedModel Soucent03AMY;
    public static PedModel ClubhouseBar01;
    public static PedModel Yoga01AFY;
    public static PedModel Griff01;
    public static PedModel VagosFun01;
    public static PedModel Benny;
    public static PedModel PrologueHostage01;
    public static PedModel ArmGoon02GMY;
    public static PedModel Patricia;
    public static PedModel Construct02SMY;
    public static PedModel Guido01;
    public static PedModel Runner01AFY;
    public static PedModel Beach01AFY;
    public static PedModel BoatStaff01M;
    public static PedModel Tourist01AMM;
    public static PedModel Nigel;
    public static PedModel Mani;
    public static PedModel Musclbeac02AMY;
    public static PedModel Business01AMY;
    public static PedModel CCrew01SMM;
    public static PedModel Uscg01SMY;
    public static PedModel Beachvesp02AMY;
    public static PedModel Tonya;
    public static PedModel CletusCutscene;
    public static PedModel Milton;
    public static PedModel DrFriedlander;
    public static PedModel MrsPhillipsCutscene;
    public static PedModel Salton01AFO;
    public static PedModel SmugMech01;
    public static PedModel TomEpsilon;
    public static PedModel Soucentmc01AFM;
    public static PedModel Armoured01;
    public static PedModel Hunter;
    public static PedModel Jesus01;
    public static PedModel Boar;
    public static PedModel Strvend01SMM;
    public static PedModel PrologueMournMale01;
    public static PedModel Antonb;
    public static PedModel Stbla01AMY;
    public static PedModel Fabien;
    public static PedModel Ups02SMM;
    public static PedModel Misty01;
    public static PedModel Ktown01AMM;
    public static PedModel AfriAmer01AMM;
    public static PedModel Gay01AMY;
    public static PedModel Beach01AMY;
    public static PedModel WadeCutscene;
    public static PedModel MethFemale01;
    public static PedModel Princess;
    public static PedModel Seagull;
    public static PedModel Doctor01SMM;
    public static PedModel Migrant01SFY;
    public static PedModel RoccoPelosi;
    public static PedModel Golfer01AMY;
    public static PedModel Salton01AMY;
    public static PedModel Security01SMM;
    public static PedModel AgentCutscene;
    public static PedModel Construct01SMY;
    public static PedModel Drowned;
    public static PedModel Movprem01SMM;
    public static PedModel Deer;
    public static PedModel Busboy01SMY;
    public static PedModel Skater01AMM;
    public static PedModel Babyd;
    public static PedModel SecuroGuardMale01;
    public static PedModel Dreyfuss;
    public static PedModel Vinewood02AFY;
    public static PedModel Juggalo01AFY;
    public static PedModel Scdressy01AFY;
    public static PedModel Famdnf01GMY;
    public static PedModel LinecookSMM;
    public static PedModel ClayCutscene;
    public static PedModel Pogo01;
    public static PedModel TaoCheng;
    public static PedModel MexCntry01AMM;
    public static PedModel Indian01AMM;
    public static PedModel Lifeinvad01SMM;
    public static PedModel Salton01AFM;
    public static PedModel Natalia;
    public static PedModel TrafficWardenCutscene;
    public static PedModel TracyDisanto;
    public static PedModel RampHipster;
    public static PedModel PatriciaCutscene;
    public static PedModel Rabbit;
    public static PedModel Lazlow;
    public static PedModel Maid01SFM;
    public static PedModel Tranvest01AMM;
    public static PedModel Casey;
    public static PedModel Josef;
    public static PedModel NigelCutscene;
    public static PedModel Hasjew01AMY;
    public static PedModel ImranCutscene;
    public static PedModel Dealer01SMY;
    public static PedModel RampGang;
    public static PedModel Barman01SMY;
    public static PedModel Cletus;
    public static PedModel RampMex;
    public static PedModel JewelThief;
    public static PedModel Soucent01AMY;
    public static PedModel AndreasCutscene;
    public static PedModel Pilot01SMM;
    public static PedModel ArmLieut01GMM;
    public static PedModel Talina;
    public static PedModel Beach03AMY;
    public static PedModel Movspace01SMM;
    public static PedModel Famca01GMY;
    public static PedModel GroveStrDlrCutscene;
    public static PedModel CaseyCutscene;
    public static PedModel ZimborCutscene;
    public static PedModel Surfer01AMY;
    public static PedModel KarenDaniels;
    public static PedModel HaoCutscene;
    public static PedModel Paparazzi01AMM;
    public static PedModel DebraCutscene;
    public static PedModel Migrant01SMM;
    public static PedModel JimmyBoston;
    public static PedModel MethMale01;
    public static PedModel FibOffice01SMM;
    public static PedModel MrK;
    public static PedModel GarbageSMY;
    public static PedModel Niko01;
    public static PedModel OldMan2;
    public static PedModel Ranger01SMY;
    public static PedModel UndercoverCopCutscene;
    public static PedModel BradCutscene;
    public static PedModel PrologueDriverCutscene;
    public static PedModel Marine02SMM;
    public static PedModel Hippie01;
    public static PedModel Autoshop02SMM;
    public static PedModel JoeMinutemanCutscene;
    public static PedModel Abner;
    public static PedModel Jewelass01;
    public static PedModel AlDiNapoli;
    public static PedModel Highsec01SMM;
    public static PedModel Malc;
    public static PedModel ArmBoss01GMM;
    public static PedModel Marine01SMM;
    public static PedModel Soucent02AFM;
    public static PedModel OscarCutscene;
    public static PedModel BallaEast01GMY;
    public static PedModel Roadcyc01AMY;
    public static PedModel DwService02SMY;
    public static PedModel Eastsa01AFY;
    public static PedModel ChemWork01GMM;
    public static PedModel Pilot02SMM;
    public static PedModel RampMexCutscene;
    public static PedModel SolomonCutscene;
    public static PedModel Tranvest02AMM;
    public static PedModel WareMechMale01;
    public static PedModel Eastsa01AMM;
    public static PedModel VagosSpeak;
    public static PedModel BikerChic;
    public static PedModel JohnnyKlebitzCutscene;
    public static PedModel FatBla01AFM;
    public static PedModel Vinewood04AFY;
    public static PedModel ManuelCutscene;
    public static PedModel Agent14;
    public static PedModel Magenta;
    public static PedModel Cow;
    public static PedModel StrPunk01GMY;
    public static PedModel Manuel;
    public static PedModel Lost01GFY;
    public static PedModel ArmGoon01GMM;
    public static PedModel Cyclist01AMY;
    public static PedModel Groom;
    public static PedModel Dhill01AMY;
    public static PedModel ChiGoon02GMM;
    public static PedModel ScreenWriter;
    public static PedModel AgathaCSB;
    public static PedModel AgathaIG;
    public static PedModel AveryCSB;
    public static PedModel AveryIG;
    public static PedModel Brucie2CSB;
    public static PedModel Brucie2IG;
    public static PedModel TaoCheng2IG;
    public static PedModel TaoCheng2CS;
    public static PedModel TaosTranslator2IG;
    public static PedModel TaosTranslator2CS;
    public static PedModel ThorntonCSB;
    public static PedModel ThorntonIG;
    public static PedModel TomCasinoCSB;
    public static PedModel TomCasinoIG;
    public static PedModel VincentCSB;
    public static PedModel VincentIG;
    public static PedModel GenCasPat01AFY;
    public static PedModel SmartCasPat01AFY;
    public static PedModel MLCrisis01AMM;
    public static PedModel GenCasPat01AMY;
    public static PedModel SmartCasPat01AMY;
    public static PedModel CasRN01GMM;
    public static PedModel WestSec01SMY;
    public static PedModel Casino01SFY;
    public static PedModel Casino01SMY;
    public static PedModel CarolUFO;
    public static PedModel EileenUFO;
    public static PedModel CasinoCash01UFO;
    public static PedModel CasinoShop01UFM;
    public static PedModel Debbie01UFM;
    public static PedModel BethUFY;
    public static PedModel LaurenUFY;
    public static PedModel TaylorUFY;
    public static PedModel BlaneUMM;
    public static PedModel CurtisUMM;
    public static PedModel VinceUMM;
    public static PedModel DeanUMO;
    public static PedModel CalebUMY;
    public static PedModel CroupThief01UMY;
    public static PedModel GabrielUMY;
    public static PedModel UshiUMY;
    public static PedModel PantherAC;
    public static PedModel Beach02AFY;
    public static PedModel Clubcust04AFY;
    public static PedModel Beach02AMO;
    public static PedModel Beach04AMY;
    public static PedModel Clubcust04AMY;
    public static PedModel Patricia02CS;
    public static PedModel AryCSB;
    public static PedModel EnglishDave02CSB;
    public static PedModel GustavoCSB;
    public static PedModel HelmsmanpavelCSB;
    public static PedModel Isldj00CSB;
    public static PedModel Isldj01CSB;
    public static PedModel Isldj02CSB;
    public static PedModel Isldj03CSB;
    public static PedModel Isldj04CSB;
    public static PedModel JioCSB;
    public static PedModel JuanstricklerCSB;
    public static PedModel MiguelmadrazoCSB;
    public static PedModel MjoCSB;
    public static PedModel SssCSB;
    public static PedModel Cartelguards01GMM;
    public static PedModel Cartelguards02GMM;
    public static PedModel AryIG;
    public static PedModel EnglishDave02IG;
    public static PedModel GustavoIG;
    public static PedModel HelmsmanpavelIG;
    public static PedModel Isldj00IG;
    public static PedModel Isldj01IG;
    public static PedModel Isldj02IG;
    public static PedModel Isldj03IG;
    public static PedModel Isldj04IG;
    public static PedModel Isldj04IGD01;
    public static PedModel Isldj04IGD02;
    public static PedModel Isldj04IGE01;
    public static PedModel JackieIG;
    public static PedModel JioIG;
    public static PedModel JuanstricklerIG;
    public static PedModel KayleeIG;
    public static PedModel Miguelmadrazo;
    public static PedModel MjoIG;
    public static PedModel OldrichguyIG;
    public static PedModel Patricia02IG;
    public static PedModel PilotIG;
    public static PedModel SssIG;
    public static PedModel Beachbarstaff01SFY;
    public static PedModel Clubbar02SFY;
    public static PedModel Bouncer02SMM;
    public static PedModel Drugprocess01SMM;
    public static PedModel Fieldworker01SMM;
    public static PedModel Highsec04SMM;
    public static PedModel GenBiker01AFM;
    public static PedModel GenBiker01AMM;
    public static PedModel GenThug01GMM;
    public static PedModel Agent02IG;
    public static PedModel MasonDugganIG;
    public static PedModel WarehouseBossIG;
    public static PedModel Warehouse01SFM;
    public static PedModel Warehouse01SMM;
    public static PedModel Juggernaut02UMY;
    public static PedModel Chimp02AC;
    public static PedModel Rabbit02AC;
    public static PedModel GenStreet01AFM;
    public static PedModel BankRobber01AMM;
    public static PedModel Chef03CSB;
    public static PedModel DaxCSB;
    public static PedModel LabratCSB;
    public static PedModel LuchadoraCSB;
    public static PedModel Fooliganz01GFM;
    public static PedModel Fooliganz01GMM;
    public static PedModel FriedlanderGoons01GMM;
    public static PedModel AcidLabCookIG;
    public static PedModel Chef03IG;
    public static PedModel DaxIG;
    public static PedModel DrFriedlander02IG;
    public static PedModel Fooliganz01IG;
    public static PedModel Fooliganz02IG;
    public static PedModel FurryIG;
    public static PedModel GunVanSellerIG;
    public static PedModel HippyLeaderIG;
    public static PedModel LabratIG;
    public static PedModel LuchadoraIG;
    public static PedModel NervousRon02IG;
    public static PedModel HazmatWorker01SMM;
    public static PedModel YuleMonsterUMM;
    public static PedModel DrFriedlander02CS;
    public static PedModel NervousRon02CS;
    public static PedModel Boar02AC;
    public static PedModel Coyote02AC;
    public static PedModel Deer02AC;
    public static PedModel MtLion02AC;
    public static PedModel Pug02AC;
    public static PedModel AviSchwartzman03CSB;
    public static PedModel CharlieReedCSB;
    public static PedModel AviSchwartzman03IG;
    public static PedModel CharlieReedIG;
    public static PedModel PernellMossIG;
    public static PedModel RoosterMcCrawIG;
    public static PedModel CCrew02SMM;
    public static PedModel Juggernaut03UMM;
    public static PedModel Mechanic01IG;
    public static PedModel CallGirl02CSB;
    public static PedModel MaraGrande01GMM;
    public static PedModel CallGirl01CSB;
    public static PedModel Vincent4CSB;
    public static PedModel Cop01SMM;
    public static PedModel CallGirl02IG;
    public static PedModel CartelGoons01GMM;
    public static PedModel CCrew03SMM;
    public static PedModel Vincent4IG;
    public static PedModel CallGirl01IG;
    public static PedModel Pilot02IG;
    public static PedModel Mechanic02IG;
    public static PedModel JamalAmirCSB;
    public static PedModel JamalAmirIG;
    public static PedModel YetiUMM;
    public static PedModel YusufAmirCSB;
    public static PedModel SubCrew01SMM;
    public static PedModel SubCrewHeadIG;
    public static PedModel AhronWardIG;
    public static PedModel YusufAmirIG;
    public static PedModel JaywalkerIG;
    public static PedModel BountyTarget_04IG;
    public static PedModel Mechanic03IG;
    public static PedModel BountyTarget06IG;
    public static PedModel BountyTarget02IG;
    public static PedModel MaudeBFIG;
    public static PedModel BountyTarget01IG;
    public static PedModel Zombie02GMM;
    public static PedModel BailOffice01SMM;
    public static PedModel BountyTarget03IG;
    public static PedModel JenetteEIG;
    public static PedModel Zombie03GMM;
    public static PedModel Zombie01GMM;
    public static PedModel BountyTarget05IG;
    public static PedModel JenetteECSB;
    public static PedModel Maude02CSB;
}
public enum AltV.Net.Enums.RadioStation : Enum {
    public UInt32 value__;
    public static RadioStation LosSantosRockRadio;
    public static RadioStation NonStopPopFm;
    public static RadioStation RadioLosSantos;
    public static RadioStation ChannelX;
    public static RadioStation WestCoastTalkRadio;
    public static RadioStation RebelRadio;
    public static RadioStation SoulwaxFm;
    public static RadioStation EastLosFm;
    public static RadioStation WestCoastClassics;
    public static RadioStation BlaineCountyRadio;
    public static RadioStation TheBlueArk;
    public static RadioStation WorldWideFm;
    public static RadioStation FlyloFm;
    public static RadioStation TheLowdown;
    public static RadioStation RadioMirrorPark;
    public static RadioStation Space;
    public static RadioStation VinewoodBoulevardRadio;
    public static RadioStation SelfRadio;
    public static RadioStation TheLab;
    public static RadioStation RadioOff;
}
public enum AltV.Net.Enums.VehicleBumper : Enum {
    public byte value__;
    public static VehicleBumper Front;
    public static VehicleBumper Rear;
}
public enum AltV.Net.Enums.VehicleBumperDamage : Enum {
    public byte value__;
    public static VehicleBumperDamage NotDamaged;
    public static VehicleBumperDamage Damaged;
    public static VehicleBumperDamage None;
}
public enum AltV.Net.Enums.VehicleDoor : Enum {
    public byte value__;
    public static VehicleDoor DriverFront;
    public static VehicleDoor PassengerFront;
    public static VehicleDoor DriverRear;
    public static VehicleDoor PassengerRear;
    public static VehicleDoor Hood;
    public static VehicleDoor Trunk;
}
public enum AltV.Net.Enums.VehicleDoorState : Enum {
    public byte value__;
    public static VehicleDoorState Closed;
    public static VehicleDoorState OpenedLevel1;
    public static VehicleDoorState OpenedLevel2;
    public static VehicleDoorState OpenedLevel3;
    public static VehicleDoorState OpenedLevel4;
    public static VehicleDoorState OpenedLevel5;
    public static VehicleDoorState OpenedLevel6;
    public static VehicleDoorState OpenedLevel7;
    public static VehicleDoorState DoesNotExists;
}
public enum AltV.Net.Enums.VehicleLockState : Enum {
    public byte value__;
    public static VehicleLockState None;
    public static VehicleLockState Unlocked;
    public static VehicleLockState Locked;
    public static VehicleLockState LockoutPlayerOnly;
    public static VehicleLockState LockPlayerInside;
    public static VehicleLockState InitiallyLocked;
    public static VehicleLockState ForceDoorsShut;
    public static VehicleLockState LockedCanBeDamaged;
}
public enum AltV.Net.Enums.VehicleModel : Enum {
    public UInt32 value__;
    public static VehicleModel Chimera;
    public static VehicleModel CarbonRs;
    public static VehicleModel Hermes;
    public static VehicleModel Virgo3;
    public static VehicleModel Hotknife;
    public static VehicleModel TipTruck;
    public static VehicleModel Faggio2;
    public static VehicleModel Youga;
    public static VehicleModel Glendale;
    public static VehicleModel Dominator;
    public static VehicleModel Bf400;
    public static VehicleModel Kalahari;
    public static VehicleModel Trophytruck;
    public static VehicleModel Coquette;
    public static VehicleModel BType;
    public static VehicleModel Boxville3;
    public static VehicleModel Baller2;
    public static VehicleModel Ardent;
    public static VehicleModel Miljet;
    public static VehicleModel Phantom3;
    public static VehicleModel FreightCar;
    public static VehicleModel Elegy;
    public static VehicleModel Speedo4;
    public static VehicleModel Cheetah2;
    public static VehicleModel SabreGt2;
    public static VehicleModel Speeder;
    public static VehicleModel Reaper;
    public static VehicleModel Buffalo3;
    public static VehicleModel FreightCont2;
    public static VehicleModel Tempesta;
    public static VehicleModel Dinghy2;
    public static VehicleModel Tropic;
    public static VehicleModel GBurrito2;
    public static VehicleModel Hexer;
    public static VehicleModel Stafford;
    public static VehicleModel Crusader;
    public static VehicleModel CogCabrio;
    public static VehicleModel Vacca;
    public static VehicleModel PBus2;
    public static VehicleModel Gauntlet2;
    public static VehicleModel Chino;
    public static VehicleModel Polmav;
    public static VehicleModel PropTrailer;
    public static VehicleModel CargoPlane;
    public static VehicleModel Surano;
    public static VehicleModel Hauler2;
    public static VehicleModel Cliffhanger;
    public static VehicleModel RakeTrailer;
    public static VehicleModel Squalo;
    public static VehicleModel Turismor;
    public static VehicleModel Avenger2;
    public static VehicleModel Kuruma2;
    public static VehicleModel Infernus;
    public static VehicleModel Nightshark;
    public static VehicleModel Speeder2;
    public static VehicleModel Boxville4;
    public static VehicleModel Handler;
    public static VehicleModel Volatol;
    public static VehicleModel Cruiser;
    public static VehicleModel PoliceT;
    public static VehicleModel Tornado;
    public static VehicleModel Lguard;
    public static VehicleModel Baller5;
    public static VehicleModel Mixer2;
    public static VehicleModel Lynx;
    public static VehicleModel Huntley;
    public static VehicleModel Fusilade;
    public static VehicleModel Swinger;
    public static VehicleModel Dinghy3;
    public static VehicleModel UtilliTruck;
    public static VehicleModel Voodoo2;
    public static VehicleModel BoatTrailer;
    public static VehicleModel Moonbeam;
    public static VehicleModel Dune2;
    public static VehicleModel Khamelion;
    public static VehicleModel Apc;
    public static VehicleModel Packer;
    public static VehicleModel TankerCar;
    public static VehicleModel Hustler;
    public static VehicleModel Luxor;
    public static VehicleModel Romero;
    public static VehicleModel Fcr;
    public static VehicleModel Barracks3;
    public static VehicleModel Banshee2;
    public static VehicleModel Baller4;
    public static VehicleModel Lectro;
    public static VehicleModel FreightGrain;
    public static VehicleModel Comet5;
    public static VehicleModel Baller6;
    public static VehicleModel Boxville5;
    public static VehicleModel Contender;
    public static VehicleModel Surfer;
    public static VehicleModel Cog552;
    public static VehicleModel Supervolito;
    public static VehicleModel TrailerSmall;
    public static VehicleModel Ruston;
    public static VehicleModel Dukes;
    public static VehicleModel Speedo2;
    public static VehicleModel SlamVan;
    public static VehicleModel Sadler2;
    public static VehicleModel Buffalo2;
    public static VehicleModel Gargoyle;
    public static VehicleModel Pranger;
    public static VehicleModel Sovereign;
    public static VehicleModel Frogger;
    public static VehicleModel Buzzard2;
    public static VehicleModel Ztype;
    public static VehicleModel Alpha;
    public static VehicleModel Submersible;
    public static VehicleModel Rhino;
    public static VehicleModel Coquette3;
    public static VehicleModel Sanchez;
    public static VehicleModel Buzzard;
    public static VehicleModel Sheava;
    public static VehicleModel Defiler;
    public static VehicleModel SlamVan2;
    public static VehicleModel Annihilator;
    public static VehicleModel Z190;
    public static VehicleModel Rhapsody;
    public static VehicleModel Bjxl;
    public static VehicleModel Biff;
    public static VehicleModel Jetmax;
    public static VehicleModel Dinghy4;
    public static VehicleModel Pariah;
    public static VehicleModel Sentinel2;
    public static VehicleModel Habanero;
    public static VehicleModel Oppressor;
    public static VehicleModel Stromberg;
    public static VehicleModel Intruder;
    public static VehicleModel UtilliTruck2;
    public static VehicleModel Burrito4;
    public static VehicleModel Savestra;
    public static VehicleModel Mule;
    public static VehicleModel Cog55;
    public static VehicleModel Toro2;
    public static VehicleModel Mesa;
    public static VehicleModel Xa21;
    public static VehicleModel FreightCont1;
    public static VehicleModel Issi3;
    public static VehicleModel Ruiner2;
    public static VehicleModel Casco;
    public static VehicleModel Pony2;
    public static VehicleModel Duster;
    public static VehicleModel Hydra;
    public static VehicleModel Sultan;
    public static VehicleModel Tampa;
    public static VehicleModel Voltic2;
    public static VehicleModel Sandking2;
    public static VehicleModel Coquette2;
    public static VehicleModel GrainTrailer;
    public static VehicleModel Youga2;
    public static VehicleModel Freight;
    public static VehicleModel Tezeract;
    public static VehicleModel Ninef;
    public static VehicleModel Dinghy;
    public static VehicleModel Nero;
    public static VehicleModel Nokota;
    public static VehicleModel Blista2;
    public static VehicleModel Tula;
    public static VehicleModel Skylift;
    public static VehicleModel Michelli;
    public static VehicleModel Jb700;
    public static VehicleModel Jet;
    public static VehicleModel BobcatXl;
    public static VehicleModel Toro;
    public static VehicleModel Barracks2;
    public static VehicleModel Specter2;
    public static VehicleModel Swift2;
    public static VehicleModel Velum2;
    public static VehicleModel Pigalle;
    public static VehicleModel Nero2;
    public static VehicleModel Verlierer2;
    public static VehicleModel Sentinel3;
    public static VehicleModel Hotring;
    public static VehicleModel SlamVan3;
    public static VehicleModel Superd;
    public static VehicleModel BfInjection;
    public static VehicleModel Fbi;
    public static VehicleModel TriBike;
    public static VehicleModel Bmx;
    public static VehicleModel Burrito5;
    public static VehicleModel Caddy;
    public static VehicleModel Rumpo;
    public static VehicleModel Ambulance;
    public static VehicleModel Dubsta;
    public static VehicleModel Technical2;
    public static VehicleModel Akula;
    public static VehicleModel Xls;
    public static VehicleModel Seminole;
    public static VehicleModel Marshall;
    public static VehicleModel Gp1;
    public static VehicleModel Caracara;
    public static VehicleModel Hakuchou;
    public static VehicleModel Landstalker;
    public static VehicleModel Bestiagts;
    public static VehicleModel Airbus;
    public static VehicleModel Serrano;
    public static VehicleModel Vestra;
    public static VehicleModel Oracle;
    public static VehicleModel Sentinel;
    public static VehicleModel Sc1;
    public static VehicleModel Flatbed;
    public static VehicleModel Technical3;
    public static VehicleModel Warrener;
    public static VehicleModel Cyclone;
    public static VehicleModel Cargobob3;
    public static VehicleModel Fmj;
    public static VehicleModel Tractor3;
    public static VehicleModel Tropic2;
    public static VehicleModel Rumpo3;
    public static VehicleModel Deluxo;
    public static VehicleModel Paradise;
    public static VehicleModel Thruster;
    public static VehicleModel Schafter4;
    public static VehicleModel Sanctus;
    public static VehicleModel Forklift;
    public static VehicleModel TrailerLarge;
    public static VehicleModel Torero;
    public static VehicleModel Picador;
    public static VehicleModel Hauler;
    public static VehicleModel Tornado2;
    public static VehicleModel Valkyrie2;
    public static VehicleModel Stinger;
    public static VehicleModel Brioso;
    public static VehicleModel Airtug;
    public static VehicleModel Comet4;
    public static VehicleModel Molotok;
    public static VehicleModel Windsor;
    public static VehicleModel Fagaloa;
    public static VehicleModel Cargobob2;
    public static VehicleModel Tractor;
    public static VehicleModel RancherXl;
    public static VehicleModel Pounder2;
    public static VehicleModel T20;
    public static VehicleModel Akuma;
    public static VehicleModel Dilettante2;
    public static VehicleModel Strikeforce;
    public static VehicleModel Stratum;
    public static VehicleModel RapidGt2;
    public static VehicleModel Bison3;
    public static VehicleModel Streiter;
    public static VehicleModel Stockade;
    public static VehicleModel Enduro;
    public static VehicleModel Tornado3;
    public static VehicleModel DLoader;
    public static VehicleModel Washington;
    public static VehicleModel Mower;
    public static VehicleModel Tr3;
    public static VehicleModel Diablous2;
    public static VehicleModel Besra;
    public static VehicleModel Peyote;
    public static VehicleModel Thrust;
    public static VehicleModel Retinue;
    public static VehicleModel Yosemite;
    public static VehicleModel Ratbike;
    public static VehicleModel Camper;
    public static VehicleModel Baller3;
    public static VehicleModel Specter;
    public static VehicleModel Bulldozer;
    public static VehicleModel Tropos;
    public static VehicleModel Moonbeam2;
    public static VehicleModel Dune3;
    public static VehicleModel Fugitive;
    public static VehicleModel Gb200;
    public static VehicleModel Police3;
    public static VehicleModel Trash;
    public static VehicleModel Schafter6;
    public static VehicleModel Sheriff2;
    public static VehicleModel Stalion;
    public static VehicleModel RancherXl2;
    public static VehicleModel FireTruck;
    public static VehicleModel Vagner;
    public static VehicleModel Tourbus;
    public static VehicleModel Mule4;
    public static VehicleModel Frogger2;
    public static VehicleModel Taco;
    public static VehicleModel Tanker2;
    public static VehicleModel Titan;
    public static VehicleModel Osiris;
    public static VehicleModel Daemon;
    public static VehicleModel Voodoo;
    public static VehicleModel Cavalcade;
    public static VehicleModel TrailerLogs;
    public static VehicleModel Futo;
    public static VehicleModel Cargobob4;
    public static VehicleModel Esskey;
    public static VehicleModel Menacer;
    public static VehicleModel Police;
    public static VehicleModel RapidGt3;
    public static VehicleModel Benson;
    public static VehicleModel Tyrus;
    public static VehicleModel Lurcher;
    public static VehicleModel Oppressor2;
    public static VehicleModel Insurgent2;
    public static VehicleModel Bison2;
    public static VehicleModel Carbonizzare;
    public static VehicleModel Tr2;
    public static VehicleModel Tr4;
    public static VehicleModel Pounder;
    public static VehicleModel Prototipo;
    public static VehicleModel UtilliTruck3;
    public static VehicleModel Rocoto;
    public static VehicleModel Bagger;
    public static VehicleModel DockTrailer;
    public static VehicleModel Phantom;
    public static VehicleModel Dump;
    public static VehicleModel Blazer;
    public static VehicleModel Manana;
    public static VehicleModel Stunt;
    public static VehicleModel Entity2;
    public static VehicleModel Faction;
    public static VehicleModel Avenger;
    public static VehicleModel Avarus;
    public static VehicleModel Guardian;
    public static VehicleModel Rallytruck;
    public static VehicleModel Tug;
    public static VehicleModel StingerGt;
    public static VehicleModel Technical;
    public static VehicleModel Phoenix;
    public static VehicleModel Gt500;
    public static VehicleModel Tractor2;
    public static VehicleModel Coach;
    public static VehicleModel Mesa3;
    public static VehicleModel Trailers3;
    public static VehicleModel Mule3;
    public static VehicleModel Italigtb;
    public static VehicleModel Rebel2;
    public static VehicleModel Primo2;
    public static VehicleModel Faction3;
    public static VehicleModel Tornado4;
    public static VehicleModel Cognoscenti;
    public static VehicleModel Comet3;
    public static VehicleModel PBus;
    public static VehicleModel Feltzer2;
    public static VehicleModel Terbyte;
    public static VehicleModel Boxville;
    public static VehicleModel Havok;
    public static VehicleModel Police4;
    public static VehicleModel Stretch;
    public static VehicleModel Nightshade;
    public static VehicleModel RapidGt;
    public static VehicleModel Windsor2;
    public static VehicleModel Insurgent3;
    public static VehicleModel Wastlndr;
    public static VehicleModel Asterope;
    public static VehicleModel Surge;
    public static VehicleModel Premier;
    public static VehicleModel Emperor2;
    public static VehicleModel TrailerSmall2;
    public static VehicleModel Insurgent;
    public static VehicleModel Neon;
    public static VehicleModel Volatus;
    public static VehicleModel Faggio;
    public static VehicleModel Pfister811;
    public static VehicleModel Asea;
    public static VehicleModel Asea2;
    public static VehicleModel Gauntlet;
    public static VehicleModel Tornado5;
    public static VehicleModel Faction2;
    public static VehicleModel PoliceOld2;
    public static VehicleModel Rumpo2;
    public static VehicleModel Granger;
    public static VehicleModel TvTrailer;
    public static VehicleModel Microlight;
    public static VehicleModel Penetrator;
    public static VehicleModel Seven70;
    public static VehicleModel Mammatus;
    public static VehicleModel GBurrito;
    public static VehicleModel Burrito3;
    public static VehicleModel Rubble;
    public static VehicleModel Starling;
    public static VehicleModel Scrap;
    public static VehicleModel Bullet;
    public static VehicleModel Riot2;
    public static VehicleModel SabreGt;
    public static VehicleModel Sheriff;
    public static VehicleModel Velum;
    public static VehicleModel Supervolito2;
    public static VehicleModel Double;
    public static VehicleModel Dune;
    public static VehicleModel Mamba;
    public static VehicleModel Maverick;
    public static VehicleModel Radi;
    public static VehicleModel Phantom2;
    public static VehicleModel Fbi2;
    public static VehicleModel ArmyTrailer2;
    public static VehicleModel Police2;
    public static VehicleModel Voltic;
    public static VehicleModel Nightblade;
    public static VehicleModel Valkyrie;
    public static VehicleModel Blazer5;
    public static VehicleModel Trailers2;
    public static VehicleModel Feltzer3;
    public static VehicleModel Tornado6;
    public static VehicleModel Gresley;
    public static VehicleModel PoliceOld1;
    public static VehicleModel Riata;
    public static VehicleModel Raiden;
    public static VehicleModel AlphaZ1;
    public static VehicleModel Manchez;
    public static VehicleModel Schafter3;
    public static VehicleModel Brawler;
    public static VehicleModel Stanier;
    public static VehicleModel ArmyTrailer;
    public static VehicleModel Ninef2;
    public static VehicleModel Sanchez2;
    public static VehicleModel Prairie;
    public static VehicleModel Bodhi2;
    public static VehicleModel Khanjali;
    public static VehicleModel Infernus2;
    public static VehicleModel Daemon2;
    public static VehicleModel Zentorno;
    public static VehicleModel Pyro;
    public static VehicleModel Kuruma;
    public static VehicleModel Chino2;
    public static VehicleModel Vindicator;
    public static VehicleModel TrFlat;
    public static VehicleModel Burrito;
    public static VehicleModel TowTruck;
    public static VehicleModel Surfer2;
    public static VehicleModel Cheetah;
    public static VehicleModel Jester;
    public static VehicleModel Nimbus;
    public static VehicleModel EntityXf;
    public static VehicleModel Ingot;
    public static VehicleModel Faggio3;
    public static VehicleModel Lazer;
    public static VehicleModel Blazer3;
    public static VehicleModel Ellie;
    public static VehicleModel FlashGt;
    public static VehicleModel Trash2;
    public static VehicleModel Schafter2;
    public static VehicleModel Vigilante;
    public static VehicleModel Emperor3;
    public static VehicleModel Dubsta3;
    public static VehicleModel TriBike2;
    public static VehicleModel Le7B;
    public static VehicleModel Adder;
    public static VehicleModel Shamal;
    public static VehicleModel Luxor2;
    public static VehicleModel Tampa3;
    public static VehicleModel Rebel;
    public static VehicleModel ArmyTanker;
    public static VehicleModel Blade;
    public static VehicleModel Riot;
    public static VehicleModel Zion2;
    public static VehicleModel Sandking;
    public static VehicleModel Issi2;
    public static VehicleModel Primo;
    public static VehicleModel Fq2;
    public static VehicleModel Taipan;
    public static VehicleModel Dilettante;
    public static VehicleModel Minivan2;
    public static VehicleModel Zion;
    public static VehicleModel Jester2;
    public static VehicleModel Trailers4;
    public static VehicleModel RentalBus;
    public static VehicleModel Furoregt;
    public static VehicleModel Tampa2;
    public static VehicleModel Submersible2;
    public static VehicleModel Mule2;
    public static VehicleModel Comet2;
    public static VehicleModel Marquis;
    public static VehicleModel Banshee;
    public static VehicleModel Seashark;
    public static VehicleModel Buccaneer2;
    public static VehicleModel Zombiea;
    public static VehicleModel Tailgater;
    public static VehicleModel Howard;
    public static VehicleModel Cutter;
    public static VehicleModel Visione;
    public static VehicleModel Cheburek;
    public static VehicleModel Dominator3;
    public static VehicleModel Turismo2;
    public static VehicleModel Rogue;
    public static VehicleModel CableCar;
    public static VehicleModel Taxi;
    public static VehicleModel TipTruck2;
    public static VehicleModel Dominator2;
    public static VehicleModel Pcj;
    public static VehicleModel Burrito2;
    public static VehicleModel Dodo;
    public static VehicleModel Virgo2;
    public static VehicleModel Ruffian;
    public static VehicleModel Bati2;
    public static VehicleModel Schafter5;
    public static VehicleModel Docktug;
    public static VehicleModel Trailers;
    public static VehicleModel Ripley;
    public static VehicleModel Monster;
    public static VehicleModel Fixter;
    public static VehicleModel BType2;
    public static VehicleModel Dune4;
    public static VehicleModel Vigero;
    public static VehicleModel Barracks;
    public static VehicleModel Speedo;
    public static VehicleModel Baller;
    public static VehicleModel Patriot;
    public static VehicleModel Cavalcade2;
    public static VehicleModel Mixer;
    public static VehicleModel FreightTrailer;
    public static VehicleModel Omnis;
    public static VehicleModel Caddy3;
    public static VehicleModel Fcr2;
    public static VehicleModel Mogul;
    public static VehicleModel Mesa2;
    public static VehicleModel Schwarzer;
    public static VehicleModel Tanker;
    public static VehicleModel Seasparrow;
    public static VehicleModel Bus;
    public static VehicleModel Chernobog;
    public static VehicleModel Emperor;
    public static VehicleModel Buccaneer;
    public static VehicleModel Raptor;
    public static VehicleModel RatLoader;
    public static VehicleModel Trophytruck2;
    public static VehicleModel Cuban800;
    public static VehicleModel Scramjet;
    public static VehicleModel Nemesis;
    public static VehicleModel Massacro2;
    public static VehicleModel Jackal;
    public static VehicleModel Wolfsbane;
    public static VehicleModel Seashark2;
    public static VehicleModel Blimp2;
    public static VehicleModel Vortex;
    public static VehicleModel Cognoscenti2;
    public static VehicleModel BType3;
    public static VehicleModel Sadler;
    public static VehicleModel Blista3;
    public static VehicleModel F620;
    public static VehicleModel RatLoader2;
    public static VehicleModel Zombieb;
    public static VehicleModel Elegy2;
    public static VehicleModel Caddy2;
    public static VehicleModel Oracle2;
    public static VehicleModel Virgo;
    public static VehicleModel Predator;
    public static VehicleModel Italigtb2;
    public static VehicleModel TowTruck2;
    public static VehicleModel Blazer4;
    public static VehicleModel Monroe;
    public static VehicleModel Xls2;
    public static VehicleModel Panto;
    public static VehicleModel Patriot2;
    public static VehicleModel Revolter;
    public static VehicleModel Shotaro;
    public static VehicleModel Stalion2;
    public static VehicleModel TriBike3;
    public static VehicleModel BaleTrailer;
    public static VehicleModel Dubsta2;
    public static VehicleModel Seabreeze;
    public static VehicleModel Viseris;
    public static VehicleModel Felon;
    public static VehicleModel Penumbra;
    public static VehicleModel Tyrant;
    public static VehicleModel Bifta;
    public static VehicleModel Blista;
    public static VehicleModel Swift;
    public static VehicleModel Dukes2;
    public static VehicleModel Autarch;
    public static VehicleModel Dune5;
    public static VehicleModel Seashark3;
    public static VehicleModel Minivan;
    public static VehicleModel Blimp3;
    public static VehicleModel Brickade;
    public static VehicleModel Buffalo;
    public static VehicleModel SultanRs;
    public static VehicleModel Suntrap;
    public static VehicleModel Hakuchou2;
    public static VehicleModel Diablous;
    public static VehicleModel Boxville2;
    public static VehicleModel Ruiner;
    public static VehicleModel Jester3;
    public static VehicleModel Stockade3;
    public static VehicleModel Barrage;
    public static VehicleModel Scorcher;
    public static VehicleModel Innovation;
    public static VehicleModel Blimp;
    public static VehicleModel Massacro;
    public static VehicleModel Vader;
    public static VehicleModel Kamacho;
    public static VehicleModel Journey;
    public static VehicleModel Pony;
    public static VehicleModel Limo2;
    public static VehicleModel Bati;
    public static VehicleModel Felon2;
    public static VehicleModel Savage;
    public static VehicleModel Freecrawler;
    public static VehicleModel Cargobob;
    public static VehicleModel Blazer2;
    public static VehicleModel Hunter;
    public static VehicleModel Policeb;
    public static VehicleModel Bombushka;
    public static VehicleModel Halftrack;
    public static VehicleModel Bison;
    public static VehicleModel Regina;
    public static VehicleModel Exemplar;
    public static VehicleModel Bruiser;
    public static VehicleModel Bruiser2;
    public static VehicleModel Bruiser3;
    public static VehicleModel Brutus;
    public static VehicleModel Brutus2;
    public static VehicleModel Brutus3;
    public static VehicleModel Cerberus;
    public static VehicleModel Cerberus2;
    public static VehicleModel Cerberus3;
    public static VehicleModel Clique;
    public static VehicleModel Deathbike;
    public static VehicleModel Deathbike2;
    public static VehicleModel Deathbike3;
    public static VehicleModel Deveste;
    public static VehicleModel Deviant;
    public static VehicleModel Dominator4;
    public static VehicleModel Dominator5;
    public static VehicleModel Dominator6;
    public static VehicleModel Impaler;
    public static VehicleModel Impaler2;
    public static VehicleModel Impaler3;
    public static VehicleModel Impaler4;
    public static VehicleModel Imperator;
    public static VehicleModel Imperator2;
    public static VehicleModel Imperator3;
    public static VehicleModel Issi4;
    public static VehicleModel Issi5;
    public static VehicleModel Issi6;
    public static VehicleModel ItaliGto;
    public static VehicleModel Monster3;
    public static VehicleModel Monster4;
    public static VehicleModel Monster5;
    public static VehicleModel RcBandito;
    public static VehicleModel Scarab;
    public static VehicleModel Scarab2;
    public static VehicleModel Scarab3;
    public static VehicleModel Schlagen;
    public static VehicleModel SlamVan4;
    public static VehicleModel SlamVan5;
    public static VehicleModel SlamVan6;
    public static VehicleModel Toros;
    public static VehicleModel Tulip;
    public static VehicleModel Vamos;
    public static VehicleModel Zr380;
    public static VehicleModel Zr3802;
    public static VehicleModel Zr3803;
    public static VehicleModel Caracara2;
    public static VehicleModel Drafter;
    public static VehicleModel Dynasty;
    public static VehicleModel Emerus;
    public static VehicleModel Gauntlet3;
    public static VehicleModel Gauntlet4;
    public static VehicleModel Hellion;
    public static VehicleModel Issi7;
    public static VehicleModel Jugular;
    public static VehicleModel Krieger;
    public static VehicleModel Locust;
    public static VehicleModel Nebula;
    public static VehicleModel Neo;
    public static VehicleModel Novak;
    public static VehicleModel Paragon;
    public static VehicleModel Paragon2;
    public static VehicleModel Peyote2;
    public static VehicleModel Rrocket;
    public static VehicleModel S80;
    public static VehicleModel Thrax;
    public static VehicleModel Zion3;
    public static VehicleModel Zorrusso;
    public static VehicleModel Minitank;
    public static VehicleModel Retinue2;
    public static VehicleModel Outlaw;
    public static VehicleModel Yosemite2;
    public static VehicleModel Stryder;
    public static VehicleModel JB7002;
    public static VehicleModel Sultan2;
    public static VehicleModel Everon;
    public static VehicleModel Sugoi;
    public static VehicleModel Zhaba;
    public static VehicleModel Formula;
    public static VehicleModel Formula2;
    public static VehicleModel Rebla;
    public static VehicleModel Vagrant;
    public static VehicleModel Furia;
    public static VehicleModel Vstr;
    public static VehicleModel Komoda;
    public static VehicleModel Asbo;
    public static VehicleModel Kanjo;
    public static VehicleModel Imorgon;
    public static VehicleModel Club;
    public static VehicleModel Coquette4;
    public static VehicleModel Dukes3;
    public static VehicleModel Gauntlet5;
    public static VehicleModel Glendale2;
    public static VehicleModel Landstalker2;
    public static VehicleModel Manana2;
    public static VehicleModel Openwheel1;
    public static VehicleModel Openwheel2;
    public static VehicleModel Penumbra2;
    public static VehicleModel Peyote3;
    public static VehicleModel Seminole2;
    public static VehicleModel Tigon;
    public static VehicleModel Yosemite3;
    public static VehicleModel Youga3;
    public static VehicleModel Alkonost;
    public static VehicleModel Annihilator2;
    public static VehicleModel Avisa;
    public static VehicleModel Brioso2;
    public static VehicleModel Dinghy5;
    public static VehicleModel Italirsx;
    public static VehicleModel Kosatka;
    public static VehicleModel Longfin;
    public static VehicleModel Manchez2;
    public static VehicleModel Patrolboat;
    public static VehicleModel Seasparrow2;
    public static VehicleModel Seasparrow3;
    public static VehicleModel Slamtruck;
    public static VehicleModel Squaddie;
    public static VehicleModel Toreador;
    public static VehicleModel Verus;
    public static VehicleModel Vetir;
    public static VehicleModel Veto;
    public static VehicleModel Veto2;
    public static VehicleModel Weevil;
    public static VehicleModel Winky;
    public static VehicleModel Freightcar2;
    public static VehicleModel Calico;
    public static VehicleModel Comet6;
    public static VehicleModel Cypher;
    public static VehicleModel Dominator7;
    public static VehicleModel Dominator8;
    public static VehicleModel Euros;
    public static VehicleModel Futo2;
    public static VehicleModel Growler;
    public static VehicleModel Jester4;
    public static VehicleModel Previon;
    public static VehicleModel Remus;
    public static VehicleModel Rt3000;
    public static VehicleModel Sultan3;
    public static VehicleModel Tailgater2;
    public static VehicleModel Vectre;
    public static VehicleModel Warrener2;
    public static VehicleModel Zr350;
    public static VehicleModel Shinobi;
    public static VehicleModel Reever;
    public static VehicleModel Champion;
    public static VehicleModel Cinquemila;
    public static VehicleModel Iwagen;
    public static VehicleModel Comet7;
    public static VehicleModel Astron;
    public static VehicleModel Baller7;
    public static VehicleModel Buffalo4;
    public static VehicleModel Deity;
    public static VehicleModel Jubilee;
    public static VehicleModel Granger2;
    public static VehicleModel Ignus;
    public static VehicleModel Patriot3;
    public static VehicleModel Youga4;
    public static VehicleModel Zeno;
    public static VehicleModel Mule5;
    public static VehicleModel Omnisegt;
    public static VehicleModel Sentinel4;
    public static VehicleModel Conada;
    public static VehicleModel Ruiner4;
    public static VehicleModel Brioso3;
    public static VehicleModel Corsita;
    public static VehicleModel Draugur;
    public static VehicleModel Kanjosj;
    public static VehicleModel Postlude;
    public static VehicleModel Torero2;
    public static VehicleModel Vigero2;
    public static VehicleModel Lm87;
    public static VehicleModel Tenf;
    public static VehicleModel Tenf2;
    public static VehicleModel Rhinehart;
    public static VehicleModel Greenwood;
    public static VehicleModel Sm722;
    public static VehicleModel Weevil2;
    public static VehicleModel Tahoma;
    public static VehicleModel Broadway;
    public static VehicleModel R300;
    public static VehicleModel Tulip2;
    public static VehicleModel Everon2;
    public static VehicleModel Virtue;
    public static VehicleModel Boor;
    public static VehicleModel Issi8;
    public static VehicleModel Panthere;
    public static VehicleModel Entity3;
    public static VehicleModel Eudora;
    public static VehicleModel Powersurge;
    public static VehicleModel Journey2;
    public static VehicleModel Cargopl;
    public static VehicleModel Brickade2;
    public static VehicleModel Manchez3;
    public static VehicleModel Surfer3;
    public static VehicleModel Inductor2;
    public static VehicleModel Inductor;
    public static VehicleModel Raiju;
    public static VehicleModel MonstroCiti;
    public static VehicleModel Coureur;
    public static VehicleModel Ratel;
    public static VehicleModel Stingertt;
    public static VehicleModel Avenger3;
    public static VehicleModel Avenger4;
    public static VehicleModel Clique2;
    public static VehicleModel Streamer216;
    public static VehicleModel Brigham;
    public static VehicleModel Gauntlet6;
    public static VehicleModel Conada2;
    public static VehicleModel l35;
    public static VehicleModel Speedo5;
    public static VehicleModel Buffalo5;
    public static VehicleModel trailers5;
    public static VehicleModel aleutian;
    public static VehicleModel freight2;
    public static VehicleModel tvtrailer2;
    public static VehicleModel vivanite;
    public static VehicleModel baller8;
    public static VehicleModel benson2;
    public static VehicleModel towtruck4;
    public static VehicleModel driftremus;
    public static VehicleModel cavalcade3;
    public static VehicleModel boattrailer3;
    public static VehicleModel driftfr36;
    public static VehicleModel drifteuros;
    public static VehicleModel dorado;
    public static VehicleModel towtruck3;
    public static VehicleModel terminus;
    public static VehicleModel boattrailer2;
    public static VehicleModel driftyosemite;
    public static VehicleModel police5;
    public static VehicleModel turismo3;
    public static VehicleModel dominator9;
    public static VehicleModel fr36;
    public static VehicleModel driftjester;
    public static VehicleModel impaler6;
    public static VehicleModel impaler5;
    public static VehicleModel polgauntlet;
    public static VehicleModel boxville6;
    public static VehicleModel Phantom4;
    public static VehicleModel vigero3;
    public static VehicleModel driftfuto;
    public static VehicleModel driftzr350;
    public static VehicleModel asterope2;
    public static VehicleModel drifttampa;
    public static VehicleModel niobe;
    public static VehicleModel poldominator10;
    public static VehicleModel driftsentinel;
    public static VehicleModel policet3;
    public static VehicleModel paragon3;
    public static VehicleModel driftcypher;
    public static VehicleModel poldorado;
    public static VehicleModel vorschlaghammer;
    public static VehicleModel polgreenwood;
    public static VehicleModel envisage;
    public static VehicleModel polimpaler5;
    public static VehicleModel coquette5;
    public static VehicleModel pizzaboy;
    public static VehicleModel driftnebula;
    public static VehicleModel castigator;
    public static VehicleModel polimpaler6;
    public static VehicleModel yosemite1500;
    public static VehicleModel eurosX32;
    public static VehicleModel pipistrello;
    public static VehicleModel driftvorschlag;
    public static VehicleModel dominator10;
}
public enum AltV.Net.Enums.VehicleModType : Enum {
    public byte value__;
    public static VehicleModType Spoilers;
    public static VehicleModType FrontBumper;
    public static VehicleModType RearBumper;
    public static VehicleModType SideSkirt;
    public static VehicleModType Exhaust;
    public static VehicleModType Frame;
    public static VehicleModType Grille;
    public static VehicleModType Hood;
    public static VehicleModType Fender;
    public static VehicleModType RightFender;
    public static VehicleModType Roof;
    public static VehicleModType Engine;
    public static VehicleModType Brakes;
    public static VehicleModType Transmission;
    public static VehicleModType Horns;
    public static VehicleModType Suspension;
    public static VehicleModType Armor;
    public static VehicleModType Turbo;
    public static VehicleModType Xenon;
    public static VehicleModType FrontWheels;
    public static VehicleModType BackWheels;
    public static VehicleModType PlateHolders;
    public static VehicleModType TrimDesign;
    public static VehicleModType Ornaments;
    public static VehicleModType DialDesign;
    public static VehicleModType Seats;
    public static VehicleModType SteeringWheel;
    public static VehicleModType ShiftLever;
    public static VehicleModType Plaques;
    public static VehicleModType Hydraulics;
    public static VehicleModType Boost;
    public static VehicleModType Livery;
    public static VehicleModType Plate;
    public static VehicleModType Color1;
    public static VehicleModType Color2;
    public static VehicleModType WindowTint;
    public static VehicleModType DashboardColor;
    public static VehicleModType TrimColor;
}
public enum AltV.Net.Enums.VehiclePart : Enum {
    public byte value__;
    public static VehiclePart FrontLeft;
    public static VehiclePart FrontRight;
    public static VehiclePart MiddleLeft;
    public static VehiclePart MiddleRight;
    public static VehiclePart RearLeft;
    public static VehiclePart RearRight;
}
public enum AltV.Net.Enums.VehiclePartDamage : Enum {
    public byte value__;
    public static VehiclePartDamage NotDamaged;
    public static VehiclePartDamage DamagedLevel1;
    public static VehiclePartDamage DamagedLevel2;
    public static VehiclePartDamage DamagedLevel3;
}
public enum AltV.Net.Enums.VehicleWheel : Enum {
    public byte value__;
    public static VehicleWheel LeftFront;
    public static VehicleWheel RightFront;
    public static VehicleWheel LeftRear;
    public static VehicleWheel RightRear;
    public static VehicleWheel Unk1;
    public static VehicleWheel Unk2;
    public static VehicleWheel Unk3;
    public static VehicleWheel Unk4;
    public static VehicleWheel Unk5;
    public static VehicleWheel Unk6;
}
public enum AltV.Net.Enums.WeaponModel : Enum {
    public UInt32 value__;
    public static WeaponModel AntiqueCavalryDagger;
    public static WeaponModel BaseballBat;
    public static WeaponModel BrokenBottle;
    public static WeaponModel Crowbar;
    public static WeaponModel Fist;
    public static WeaponModel Flashlight;
    public static WeaponModel GolfClub;
    public static WeaponModel Hammer;
    public static WeaponModel Hatchet;
    public static WeaponModel BrassKnuckles;
    public static WeaponModel Knife;
    public static WeaponModel Machete;
    public static WeaponModel Switchblade;
    public static WeaponModel Nightstick;
    public static WeaponModel PipeWrench;
    public static WeaponModel BattleAxe;
    public static WeaponModel PoolCue;
    public static WeaponModel StoneHatchet;
    public static WeaponModel Pistol;
    public static WeaponModel PistolMkII;
    public static WeaponModel CombatPistol;
    public static WeaponModel APPistol;
    public static WeaponModel StunGun;
    public static WeaponModel Pistol50;
    public static WeaponModel SNSPistol;
    public static WeaponModel SNSPistolMkII;
    public static WeaponModel HeavyPistol;
    public static WeaponModel VintagePistol;
    public static WeaponModel FlareGun;
    public static WeaponModel MarksmanPistol;
    public static WeaponModel HeavyRevolver;
    public static WeaponModel HeavyRevolverMkII;
    public static WeaponModel DoubleActionRevolver;
    public static WeaponModel UpnAtomizer;
    public static WeaponModel MicroSMG;
    public static WeaponModel SMG;
    public static WeaponModel SMGMkII;
    public static WeaponModel AssaultSMG;
    public static WeaponModel CombatPDW;
    public static WeaponModel MachinePistol;
    public static WeaponModel MiniSMG;
    public static WeaponModel UnholyHellbringer;
    public static WeaponModel PumpShotgun;
    public static WeaponModel PumpShotgunMkII;
    public static WeaponModel SawedOffShotgun;
    public static WeaponModel AssaultShotgun;
    public static WeaponModel BullpupShotgun;
    public static WeaponModel Musket;
    public static WeaponModel HeavyShotgun;
    public static WeaponModel DoubleBarrelShotgun;
    public static WeaponModel SweeperShotgun;
    public static WeaponModel AssaultRifle;
    public static WeaponModel AssaultRifleMkII;
    public static WeaponModel CarbineRifle;
    public static WeaponModel CarbineRifleMkII;
    public static WeaponModel AdvancedRifle;
    public static WeaponModel SpecialCarbine;
    public static WeaponModel SpecialCarbineMkII;
    public static WeaponModel BullpupRifle;
    public static WeaponModel BullpupRifleMkII;
    public static WeaponModel CompactRifle;
    public static WeaponModel MG;
    public static WeaponModel CombatMG;
    public static WeaponModel CombatMGMkII;
    public static WeaponModel GusenbergSweeper;
    public static WeaponModel SniperRifle;
    public static WeaponModel HeavySniper;
    public static WeaponModel HeavySniperMkII;
    public static WeaponModel MarksmanRifle;
    public static WeaponModel MarksmanRifleMkII;
    public static WeaponModel RPG;
    public static WeaponModel GrenadeLauncher;
    public static WeaponModel GrenadeLauncherSmoke;
    public static WeaponModel Minigun;
    public static WeaponModel FireworkLauncher;
    public static WeaponModel Railgun;
    public static WeaponModel HomingLauncher;
    public static WeaponModel CompactGrenadeLauncher;
    public static WeaponModel Widowmaker;
    public static WeaponModel Grenade;
    public static WeaponModel BZGas;
    public static WeaponModel MolotovCocktail;
    public static WeaponModel StickyBomb;
    public static WeaponModel ProximityMines;
    public static WeaponModel Snowballs;
    public static WeaponModel PipeBombs;
    public static WeaponModel Baseball;
    public static WeaponModel TearGas;
    public static WeaponModel Flare;
    public static WeaponModel JerryCan;
    public static WeaponModel Parachute;
    public static WeaponModel FireExtinguisher;
    public static WeaponModel GadgetPistol;
    public static WeaponModel MilitaryRifle;
    public static WeaponModel CombatShotgun;
    public static WeaponModel Fertilizercan;
    public static WeaponModel HeavyRifle;
    public static WeaponModel EMPLauncher;
    public static WeaponModel CeramicPistol;
    public static WeaponModel NavyRevolver;
    public static WeaponModel HazardCan;
    public static WeaponModel TacticalRifle;
    public static WeaponModel MetalDetector;
    public static WeaponModel PrecisionRifle;
    public static WeaponModel CandyCane;
    public static WeaponModel AcidPackage;
    public static WeaponModel Wm29Pistol;
    public static WeaponModel RailgunXm3;
    public static WeaponModel TecPistol;
    public static WeaponModel BattleRifle;
    public static WeaponModel SnowLauncher;
    public static WeaponModel HackingDevice;
    public static WeaponModel Stunrod;
}
public enum AltV.Net.Enums.WeatherType : Enum {
    public UInt32 value__;
    public static WeatherType ExtraSunny;
    public static WeatherType Clear;
    public static WeatherType Clouds;
    public static WeatherType Smog;
    public static WeatherType Foggy;
    public static WeatherType Overcast;
    public static WeatherType Rain;
    public static WeatherType Thunder;
    public static WeatherType Clearing;
    public static WeatherType Neutral;
    public static WeatherType Snow;
    public static WeatherType Blizzard;
    public static WeatherType Snowlight;
    public static WeatherType Xmas;
    public static WeatherType Halloween;
}
public enum AltV.Net.Enums.WindowTint : Enum {
    public byte value__;
    public static WindowTint None;
    public static WindowTint PureBlack;
    public static WindowTint DarkSmoke;
    public static WindowTint LightSmoke;
    public static WindowTint Stock;
    public static WindowTint Limo;
    public static WindowTint Green;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.Exceptions.IllegalThreadException : Exception {
    public IllegalThreadException(ISharedBaseObject baseObject, string callerName);
    public IllegalThreadException(ISharedCore baseObject, string callerName);
    public IllegalThreadException(ISharedBaseObject baseObject);
    public IllegalThreadException(ISharedCore baseObject);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class AltV.Net.Function : object {
    [NullableAttribute("1")]
internal ISharedCore core;
    [NullableAttribute("1")]
internal Delegate delegate;
    [NullableAttribute("1")]
internal Type returnType;
    [NullableAttribute("1")]
internal Type[] args;
    [NullableAttribute("1")]
internal FunctionMValueConstParser[] constParsers;
    [NullableAttribute("1")]
internal FunctionObjectParser[] objectParsers;
    [NullableAttribute("1")]
internal FunctionStringParser[] stringParsers;
    [NullableAttribute("1")]
internal FunctionTypeInfo[] typeInfos;
    internal int requiredArgsCount;
    [NullableAttribute("1")]
private ObjectMethodExecutor objectMethodExecutor;
    [NullableAttribute("1")]
private object target;
    [NullableContextAttribute("1")]
private Function(ISharedCore core, Delegate delegate, Type returnType, Type[] args, FunctionMValueConstParser[] constParsers, FunctionObjectParser[] objectParsers, FunctionStringParser[] stringParsers, FunctionTypeInfo[] typeInfos, int requiredArgsCount);
    [NullableContextAttribute("1")]
public static Function Create(ISharedCore core, Action function);
    [NullableContextAttribute("1")]
public static Function Create(ISharedCore core, Action`1<T1> function);
    [NullableContextAttribute("1")]
public static Function Create(ISharedCore core, Action`2<T1, T2> function);
    [NullableContextAttribute("1")]
public static Function Create(ISharedCore core, Action`3<T1, T2, T3> function);
    public static Function Create(ISharedCore core, Action`4<T1, T2, T3, T4> function);
    public static Function Create(ISharedCore core, Action`5<T1, T2, T3, T4, T5> function);
    public static Function Create(ISharedCore core, Action`6<T1, T2, T3, T4, T5, T6> function);
    public static Function Create(ISharedCore core, Action`7<T1, T2, T3, T4, T5, T6, T7> function);
    public static Function Create(ISharedCore core, Action`8<T1, T2, T3, T4, T5, T6, T7, T8> function);
    public static Function Create(ISharedCore core, Action`9<T1, T2, T3, T4, T5, T6, T7, T8, T9> function);
    public static Function Create(ISharedCore core, Action`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> function);
    public static Function Create(ISharedCore core, Action`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> function);
    public static Function Create(ISharedCore core, Action`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> function);
    public static Function Create(ISharedCore core, Action`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> function);
    public static Function Create(ISharedCore core, Action`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> function);
    public static Function Create(ISharedCore core, Action`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> function);
    public static Function Create(ISharedCore core, Action`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> function);
    [NullableContextAttribute("1")]
public static Function Create(ISharedCore core, Func`1<T1> function);
    [NullableContextAttribute("1")]
public static Function Create(ISharedCore core, Func`2<T1, T2> function);
    [NullableContextAttribute("1")]
public static Function Create(ISharedCore core, Func`3<T1, T2, T3> function);
    public static Function Create(ISharedCore core, Func`4<T1, T2, T3, T4> function);
    public static Function Create(ISharedCore core, Func`5<T1, T2, T3, T4, T5> function);
    public static Function Create(ISharedCore core, Func`6<T1, T2, T3, T4, T5, T6> function);
    public static Function Create(ISharedCore core, Func`7<T1, T2, T3, T4, T5, T6, T7> function);
    public static Function Create(ISharedCore core, Func`8<T1, T2, T3, T4, T5, T6, T7, T8> function);
    public static Function Create(ISharedCore core, Func`9<T1, T2, T3, T4, T5, T6, T7, T8, T9> function);
    public static Function Create(ISharedCore core, Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> function);
    public static Function Create(ISharedCore core, Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> function);
    public static Function Create(ISharedCore core, Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> function);
    public static Function Create(ISharedCore core, Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> function);
    public static Function Create(ISharedCore core, Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> function);
    public static Function Create(ISharedCore core, Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> function);
    public static Function Create(ISharedCore core, Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> function);
    public static Function Create(ISharedCore core, Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult> function);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action function);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`1<T1> function);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`2<T1, T2> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`3<T1, T2, T3> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`4<T1, T2, T3, T4> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`5<T1, T2, T3, T4, T5> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`6<T1, T2, T3, T4, T5, T6> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`7<T1, T2, T3, T4, T5, T6, T7> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`8<T1, T2, T3, T4, T5, T6, T7, T8> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`9<T1, T2, T3, T4, T5, T6, T7, T8, T9> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Action`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> function);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`1<T1> function);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`2<T1, T2> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`3<T1, T2, T3> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`4<T1, T2, T3, T4> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`5<T1, T2, T3, T4, T5> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`6<T1, T2, T3, T4, T5, T6> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`7<T1, T2, T3, T4, T5, T6, T7> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`8<T1, T2, T3, T4, T5, T6, T7, T8> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`9<T1, T2, T3, T4, T5, T6, T7, T8, T9> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> function);
    [ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult> function);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use Alt.CreateFunction or overload with ISharedCore argument instead")]
public static Function Create(T func);
    [NullableContextAttribute("1")]
public static Function Create(ISharedCore core, T func);
    [NullableContextAttribute("1")]
internal object Call(MValueConst[] values);
    [NullableContextAttribute("1")]
internal object CallCatching(MValueConst[] values, string exceptionLocation);
    [NullableContextAttribute("1")]
internal Object[] CalculateInvokeValues(MValueConst[] values);
    [NullableContextAttribute("1")]
internal Object[] CalculateInvokeValues(Object[] values);
    [NullableContextAttribute("1")]
internal void Invoke(Object[] invokeValues, MValueConst& resultMValue);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("AltV.Net.Function/<InvokeAsync>d__88")]
internal Task`1<MValueConst> InvokeAsync(Object[] invokeValues);
    [NullableContextAttribute("1")]
public void InvokeNoResult(Object[] invokeValues);
    [NullableContextAttribute("1")]
internal Task InvokeTaskOrNull(Object[] invokeValues);
    internal IntPtr Call(IntPtr pointer, long size);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.FunctionCall : object {
    [CompilerGeneratedAttribute]
private Function <Function>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOnce>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCalled>k__BackingField;
    public Function Function { get; public set; }
    public bool IsOnce { get; public set; }
    public bool IsCalled { get; public set; }
    [CompilerGeneratedAttribute]
public Function get_Function();
    [CompilerGeneratedAttribute]
public void set_Function(Function value);
    [CompilerGeneratedAttribute]
public bool get_IsOnce();
    [CompilerGeneratedAttribute]
public void set_IsOnce(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCalled();
    [CompilerGeneratedAttribute]
public void set_IsCalled(bool value);
}
[ExtensionAttribute]
internal static class AltV.Net.FunctionParser.DelegateUtils : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static Delegate CreateDelegate(MethodInfo methodInfo, object target);
}
internal class AltV.Net.FunctionParser.FunctionMValueConstParser : MulticastDelegate {
    public FunctionMValueConstParser(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual object Invoke(ISharedCore core, MValueConst& modreq(System.Runtime.InteropServices.InAttribute) mValue, Type type, FunctionTypeInfo typeInfo);
    public virtual IAsyncResult BeginInvoke(ISharedCore core, MValueConst& modreq(System.Runtime.InteropServices.InAttribute) mValue, Type type, FunctionTypeInfo typeInfo, AsyncCallback callback, object object);
    public virtual object EndInvoke(MValueConst& modreq(System.Runtime.InteropServices.InAttribute) mValue, IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class AltV.Net.FunctionParser.FunctionMValueConstParsers : object {
    private static object CreateArray(ISharedCore core, Type type, MValueConst[] mValues, FunctionTypeInfo typeInfo);
    public static object ParseBool(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseSByte(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseShort(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseInt(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseLong(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseByte(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseUShort(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseUInt(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseULong(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseFloat(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseDouble(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseString(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseObject(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static bool TryParseObject(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo, Object& obj);
    public static object ParseArray(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseBaseObject(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseDictionary(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    private static object CreateDictionary(ISharedCore core, FunctionTypeInfo typeInfo, Type keyType, Type valueType, ulong length, String[] strings, MValueConst[] valueArray);
    public static object ParseFunction(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParsePosition(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseRotation(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseVector3(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseRgba(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseByteArray(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    private static object GetDefault(Type type, FunctionTypeInfo typeInfo);
    public static object ParseConvertible(ISharedCore core, MValueConst& mValue, Type type, FunctionTypeInfo typeInfo);
    public static object ParseEnum(ISharedCore core, MValueConst& value, Type type, FunctionTypeInfo typeInfo);
}
internal class AltV.Net.FunctionParser.FunctionObjectParser : MulticastDelegate {
    public FunctionObjectParser(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual object Invoke(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    [NullableContextAttribute("1")]
public virtual IAsyncResult BeginInvoke(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo, AsyncCallback callback, object object);
    public virtual object EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class AltV.Net.FunctionParser.FunctionObjectParsers : object {
    public static object ParseObject(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseFunction(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseBool(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseSByte(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseShort(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseInt(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseLong(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseByte(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseUShort(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseUInt(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseULong(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseFloat(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseDouble(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseString(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseBaseObject(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseArray(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseDictionary(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseConvertible(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseEnum(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParsePosition(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseRotation(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseVector3(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseRgba(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseByteArray(ISharedCore core, object value, Type type, FunctionTypeInfo typeInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.FunctionParser.FunctionParserMethodInfo : object {
    [CompilerGeneratedAttribute]
private ReturnValueDelegate <Delegate>k__BackingField;
    private ReturnValueDelegate Delegate { get; }
    public FunctionParserMethodInfo(MethodInfo methodInfo);
    [CompilerGeneratedAttribute]
private ReturnValueDelegate get_Delegate();
    public object Invoke(object instance, Object[] arguments);
}
internal class AltV.Net.FunctionParser.FunctionStringParser : MulticastDelegate {
    public FunctionStringParser(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual object Invoke(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    [NullableContextAttribute("1")]
public virtual IAsyncResult BeginInvoke(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo, AsyncCallback callback, object object);
    public virtual object EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class AltV.Net.FunctionParser.FunctionStringParsers : object {
    public static object ParseObject(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseFunction(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseBool(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseSByte(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseShort(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseInt(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseLong(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseByte(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseUShort(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseUInt(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseULong(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseFloat(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseDouble(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseString(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseBaseObject(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseArray(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseDictionary(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseConvertible(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParsePosition(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseRotation(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseVector3(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseRgba(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseByteArray(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
    public static object ParseEnum(ISharedCore core, string value, Type type, FunctionTypeInfo typeInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class AltV.Net.FunctionParser.FunctionTypeInfo : object {
    public bool IsBaseObject;
    public bool IsVehicle;
    public bool IsPlayer;
    public bool IsDict;
    public bool IsList;
    public bool IsMValueConvertible;
    public bool IsPosition;
    public bool IsRotation;
    public bool IsRgba;
    public bool IsVector3;
    public bool IsByteArray;
    public FunctionTypeInfo Element;
    public Type ElementType;
    public FunctionTypeInfo DictionaryValue;
    public Type[] GenericArguments;
    public Type DictType;
    public Func`1<IDictionary> CreateDictionary;
    public Func`2<int, Array> CreateArrayOfElementType;
    public Func`2<int, Array> CreateArrayOfTypeExp;
    public object EmptyArrayOfType;
    public object DefaultValue;
    public bool IsParamArray;
    public bool IsNullable;
    public Type NullableType;
    public bool IsEnum;
    public FunctionMValueConstParser ConstParser;
    public FunctionStringParser StringParser;
    public FunctionObjectParser ObjectParser;
    public FunctionTypeInfo(Type paramType, ParameterInfo paramInfo);
    public Array CreateArrayOfType(int size, Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class AltV.Net.FunctionParser.FunctionTypes : object {
    public static Type Void;
    public static Type Bool;
    public static Type SByte;
    public static Type Short;
    public static Type Int;
    public static Type Long;
    public static Type Byte;
    public static Type UShort;
    public static Type UInt;
    public static Type ULong;
    public static Type Float;
    public static Type Double;
    public static Type String;
    public static Type Player;
    public static Type Vehicle;
    public static Type Array;
    public static Type Entity;
    public static Type BaseObject;
    public static Type Obj;
    public static Type Position;
    public static Type Rotation;
    public static Type Rgba;
    public static Type Vector3;
    public static Type ByteArray;
    public static Type FunctionType;
    public static Type MValueConvertible;
    private static FunctionTypes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class AltV.Net.FunctionParser.FunctionWrapper : object {
    private ISharedCore core;
    private MValueFunctionCallback function;
    public FunctionWrapper(ISharedCore core, MValueFunctionCallback function);
    public object Call(Object[] args);
}
[NullableContextAttribute("1")]
internal interface AltV.Net.FunctionParser.IParserServerEventHandler {
    public abstract virtual void Call(MValueConst[] mValueArray);
}
public static class AltV.Net.FunctionParser.ModuleScriptMethodIndexer : object {
    [NullableContextAttribute("1")]
public static void Index(object target, Type[] customAttributes, Action`3<object, MethodInfo, Delegate> found);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class AltV.Net.FunctionParser.MValueConstFunctionWrapper : object {
    private ISharedCore core;
    private IntPtr nativePointer;
    public MValueConstFunctionWrapper(ISharedCore core, IntPtr nativePointer);
    public object Call(Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class AltV.Net.FunctionParser.ParserServerEventHandler`1 : object {
    private TFunc delegate;
    private ServerEventParser`1<TFunc> serverEventParser;
    public ParserServerEventHandler`1(TFunc delegate, ServerEventParser`1<TFunc> serverEventParser);
    public sealed virtual void Call(MValueConst[] mValueArray);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.FunctionParser.ScriptFunction : object {
    private Object[] args;
    private Delegate delegate;
    private FunctionParserMethodInfo functionParserMethodInfo;
    private ScriptFunctionParameter[] scriptFunctionParameters;
    private object target;
    private bool valid;
    private int currentIndex;
    private ScriptFunction(Delegate delegate, ScriptFunctionParameter[] scriptFunctionParameters);
    private ScriptFunction(Delegate delegate, ScriptFunctionParameter[] scriptFunctionParameters, FunctionParserMethodInfo functionParserMethodInfo);
    private static void WrongReturnType(MethodInfo methodInfo, Type expected, Type got);
    private static void WrongReturnTypes(MethodInfo methodInfo, Type[] expected, Type got);
    private static void WrongType(MethodInfo methodInfo, Type expected, Type got);
    private static void WrongLength(MethodInfo methodInfo, int expected, int got);
    public static ScriptFunction Create(Delegate delegate, Type[] types, Type[] returnTypes, bool isAsync);
    public ScriptFunction Clone();
    public void Set(object value);
    public object Call();
    [AsyncStateMachineAttribute("AltV.Net.FunctionParser.ScriptFunction/<CallAsync>d__18")]
public Task CallAsync();
}
public class AltV.Net.FunctionParser.ServerEventParser`1 : MulticastDelegate {
    public ServerEventParser`1(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(MValueConst[] mValueArray, TFunc func);
    public virtual IAsyncResult BeginInvoke(MValueConst[] mValueArray, TFunc func, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
public interface AltV.Net.IMValueAdapter`1 {
    public abstract virtual T FromMValue(IMValueReader reader);
    public abstract virtual void ToMValue(T value, IMValueWriter writer);
}
[NullableContextAttribute("1")]
public interface AltV.Net.IMValueBaseAdapter {
    public abstract virtual object FromMValue(IMValueReader reader);
    public abstract virtual void ToMValue(object obj, IMValueWriter writer);
}
[NullableContextAttribute("1")]
public interface AltV.Net.IMValueConvertible {
    public abstract virtual IMValueBaseAdapter GetAdapter();
}
[NullableContextAttribute("1")]
public interface AltV.Net.IMValueDeserializer`1 {
    public abstract virtual T FromMValue(IMValueReader reader);
}
[NullableContextAttribute("1")]
public interface AltV.Net.IMValueReader {
    public abstract virtual void BeginObject();
    public abstract virtual void EndObject();
    public abstract virtual void BeginArray();
    public abstract virtual void EndArray();
    public abstract virtual bool HasNext();
    public abstract virtual string NextName();
    public abstract virtual void SkipName();
    public abstract virtual bool NextBool();
    public abstract virtual int NextInt();
    public abstract virtual long NextLong();
    public abstract virtual UInt32 NextUInt();
    public abstract virtual ulong NextULong();
    public abstract virtual double NextDouble();
    public abstract virtual string NextString();
    public abstract virtual void SkipValue();
    public abstract virtual MValueReaderToken Peek();
}
[NullableContextAttribute("1")]
public interface AltV.Net.IMValueSerializer`1 {
    public abstract virtual void ToMValue(T value, IMValueWriter writer);
}
[NullableContextAttribute("1")]
public interface AltV.Net.IMValueWriter {
    public abstract virtual void BeginObject();
    public abstract virtual void EndObject();
    public abstract virtual void BeginArray();
    public abstract virtual void EndArray();
    public abstract virtual void Name(string name);
    public abstract virtual void Value(bool value);
    public abstract virtual void Value(int value);
    public abstract virtual void Value(long value);
    public abstract virtual void Value(UInt32 value);
    public abstract virtual void Value(ulong value);
    public abstract virtual void Value(float value);
    public abstract virtual void Value(double value);
    public abstract virtual void Value(string value);
    public abstract virtual void Value(ISharedBaseObject value);
    public abstract virtual void Value(ICollection value);
    public abstract virtual void Value(IWritable value);
    public abstract virtual void Value(Position value);
    public abstract virtual void Value(Rotation value);
    public abstract virtual void Value(Rgba value);
    public abstract virtual void Value(Vector3 value);
    public abstract virtual void Value(Vector2 value);
}
[NullableContextAttribute("1")]
public interface AltV.Net.IReadOnlyBaseObjectPool`1 {
    public abstract virtual TBaseObject Get(IntPtr entityPointer);
    public abstract virtual IReadOnlyCollection`1<TBaseObject> GetAllObjects();
}
[NullableContextAttribute("1")]
public interface AltV.Net.IReadOnlyEntityPool`1 {
    public abstract virtual TEntity Get(IntPtr entityPointer);
    public abstract virtual IReadOnlyCollection`1<TEntity> GetAllEntities();
}
public interface AltV.Net.IScript {
}
[NullableContextAttribute("1")]
public interface AltV.Net.IWritable {
    public abstract virtual void OnWrite(IMValueWriter writer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class AltV.Net.ObjectMethodExecutors.AwaitableInfo : ValueType {
    [CompilerGeneratedAttribute]
private Type <AwaiterType>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyInfo <AwaiterIsCompletedProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodInfo <AwaiterGetResultMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodInfo <AwaiterOnCompletedMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodInfo <AwaiterUnsafeOnCompletedMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ResultType>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodInfo <GetAwaiterMethod>k__BackingField;
    public Type AwaiterType { get; }
    public PropertyInfo AwaiterIsCompletedProperty { get; }
    public MethodInfo AwaiterGetResultMethod { get; }
    public MethodInfo AwaiterOnCompletedMethod { get; }
    public MethodInfo AwaiterUnsafeOnCompletedMethod { get; }
    public Type ResultType { get; }
    public MethodInfo GetAwaiterMethod { get; }
    public AwaitableInfo(Type awaiterType, PropertyInfo awaiterIsCompletedProperty, MethodInfo awaiterGetResultMethod, MethodInfo awaiterOnCompletedMethod, MethodInfo awaiterUnsafeOnCompletedMethod, Type resultType, MethodInfo getAwaiterMethod);
    [CompilerGeneratedAttribute]
public Type get_AwaiterType();
    [CompilerGeneratedAttribute]
public PropertyInfo get_AwaiterIsCompletedProperty();
    [CompilerGeneratedAttribute]
public MethodInfo get_AwaiterGetResultMethod();
    [CompilerGeneratedAttribute]
public MethodInfo get_AwaiterOnCompletedMethod();
    [CompilerGeneratedAttribute]
public MethodInfo get_AwaiterUnsafeOnCompletedMethod();
    [CompilerGeneratedAttribute]
public Type get_ResultType();
    [CompilerGeneratedAttribute]
public MethodInfo get_GetAwaiterMethod();
    public static bool IsTypeAwaitable(Type type, AwaitableInfo& awaitableInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class AltV.Net.ObjectMethodExecutors.CoercedAwaitableInfo : ValueType {
    [CompilerGeneratedAttribute]
private AwaitableInfo <AwaitableInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <CoercerExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <CoercerResultType>k__BackingField;
    public AwaitableInfo AwaitableInfo { get; }
    public Expression CoercerExpression { get; }
    public Type CoercerResultType { get; }
    public bool RequiresCoercion { get; }
    public CoercedAwaitableInfo(AwaitableInfo awaitableInfo);
    public CoercedAwaitableInfo(Expression coercerExpression, Type coercerResultType, AwaitableInfo coercedAwaitableInfo);
    [CompilerGeneratedAttribute]
public AwaitableInfo get_AwaitableInfo();
    [CompilerGeneratedAttribute]
public Expression get_CoercerExpression();
    [CompilerGeneratedAttribute]
public Type get_CoercerResultType();
    public bool get_RequiresCoercion();
    public static bool IsTypeAwaitable(Type type, CoercedAwaitableInfo& info);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class AltV.Net.ObjectMethodExecutors.ObjectMethodExecutor : object {
    private Object[] _parameterDefaultValues;
    private MethodExecutorAsync _executorAsync;
    private MethodExecutor _executor;
    private static ConstructorInfo _objectMethodExecutorAwaitableConstructor;
    [CompilerGeneratedAttribute]
private MethodInfo <MethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterInfo[] <MethodParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeInfo <TargetTypeInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <AsyncResultType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <MethodReturnType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMethodAsync>k__BackingField;
    public MethodInfo MethodInfo { get; }
    public ParameterInfo[] MethodParameters { get; }
    public TypeInfo TargetTypeInfo { get; }
    public Type AsyncResultType { get; }
    public Type MethodReturnType { get; internal set; }
    public bool IsMethodAsync { get; }
    private ObjectMethodExecutor(MethodInfo methodInfo, TypeInfo targetTypeInfo, Object[] parameterDefaultValues);
    private static ObjectMethodExecutor();
    [CompilerGeneratedAttribute]
public MethodInfo get_MethodInfo();
    [CompilerGeneratedAttribute]
public ParameterInfo[] get_MethodParameters();
    [CompilerGeneratedAttribute]
public TypeInfo get_TargetTypeInfo();
    [CompilerGeneratedAttribute]
public Type get_AsyncResultType();
    [CompilerGeneratedAttribute]
public Type get_MethodReturnType();
    [CompilerGeneratedAttribute]
internal void set_MethodReturnType(Type value);
    [CompilerGeneratedAttribute]
public bool get_IsMethodAsync();
    public static ObjectMethodExecutor Create(MethodInfo methodInfo, TypeInfo targetTypeInfo);
    public static ObjectMethodExecutor Create(MethodInfo methodInfo, TypeInfo targetTypeInfo, Object[] parameterDefaultValues);
    public object Execute(object target, Object[] parameters);
    public ObjectMethodExecutorAwaitable ExecuteAsync(object target, Object[] parameters);
    public object GetDefaultValueForParameter(int index);
    private static MethodExecutor GetExecutor(MethodInfo methodInfo, TypeInfo targetTypeInfo);
    private static MethodExecutor WrapVoidMethod(VoidMethodExecutor executor);
    private static MethodExecutorAsync GetExecutorAsync(MethodInfo methodInfo, TypeInfo targetTypeInfo, CoercedAwaitableInfo coercedAwaitableInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class AltV.Net.ObjectMethodExecutors.ObjectMethodExecutorAwaitable : ValueType {
    private object _customAwaitable;
    private Func`2<object, object> _getAwaiterMethod;
    private Func`2<object, bool> _isCompletedMethod;
    private Func`2<object, object> _getResultMethod;
    private Action`2<object, Action> _onCompletedMethod;
    private Action`2<object, Action> _unsafeOnCompletedMethod;
    public ObjectMethodExecutorAwaitable(object customAwaitable, Func`2<object, object> getAwaiterMethod, Func`2<object, bool> isCompletedMethod, Func`2<object, object> getResultMethod, Action`2<object, Action> onCompletedMethod, Action`2<object, Action> unsafeOnCompletedMethod);
    public Awaiter GetAwaiter();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class AltV.Net.ObjectMethodExecutors.ObjectMethodExecutorFSharpSupport : object {
    private static object _fsharpValuesCacheLock;
    private static Assembly _fsharpCoreAssembly;
    private static MethodInfo _fsharpAsyncStartAsTaskGenericMethod;
    private static PropertyInfo _fsharpOptionOfTaskCreationOptionsNoneProperty;
    private static PropertyInfo _fsharpOptionOfCancellationTokenNoneProperty;
    private static ObjectMethodExecutorFSharpSupport();
    public static bool TryBuildCoercerFromFSharpAsyncToAwaitable(Type possibleFSharpAsyncType, Expression& coerceToAwaitableExpression, Type& awaitableType);
    private static bool IsFSharpAsyncOpenGenericType(Type possibleFSharpAsyncGenericType);
    private static bool TryPopulateFSharpValueCaches(Type possibleFSharpAsyncGenericType);
    private static bool TypesHaveSameIdentity(Type type1, Type type2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class AltV.Net.ObjectMethodExecutors.ParameterValues.ParameterDefaultValue : object {
    private static Type _nullable;
    private static ParameterDefaultValue();
    public static bool TryGetDefaultValue(ParameterInfo parameter, Object& defaultValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class AltV.Net.ObjectMethodExecutors.ParameterValues.ParameterDefaultValues : object {
    public static Object[] GetParameterDefaultValues(MethodInfo methodInfo);
    private static object GetParameterDefaultValue(ParameterInfo parameterInfo);
    public static bool TryGetDeclaredParameterDefaultValue(ParameterInfo parameterInfo, Object& defaultValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class AltV.Net.Shared.AltShared : object {
    [CompilerGeneratedAttribute]
private static ISharedCore <CoreImpl>k__BackingField;
    public static bool CacheEntities;
    internal static ISharedCore CoreImpl { get; internal set; }
    public static string SdkVersion { get; }
    public static string CApiVersion { get; }
    public static string Version { get; }
    public static string Branch { get; }
    public static bool IsDebug { get; }
    public static int NetTime { get; }
    private static AltShared();
    [CompilerGeneratedAttribute]
internal static ISharedCore get_CoreImpl();
    [CompilerGeneratedAttribute]
internal static void set_CoreImpl(ISharedCore value);
    public static UInt32 Hash(string key);
    public static void EmitLocal(string eventName, Object[] args);
    public static void RegisterMValueAdapter(IMValueAdapter`1<T> adapter);
    public static string get_SdkVersion();
    public static string get_CApiVersion();
    public static string get_Version();
    public static string get_Branch();
    public static bool get_IsDebug();
    public static void LogInfo(string message);
    public static void LogDebug(string message);
    public static void LogWarning(string message);
    public static void LogError(string message);
    public static void LogColored(string message);
    public static bool IsMainThread();
    public static int get_NetTime();
}
public class AltV.Net.Shared.Elements.Data.Config : ConfigNode {
    private IntPtr pointer;
    [NullableContextAttribute("1")]
public Config(ISharedCore core, IntPtr pointer);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class AltV.Net.Shared.Elements.Data.ConfigNode : object {
    protected ISharedCore core;
    private ConfigNodeData data;
    public Type ElementType { get; }
    public ConfigNode Item { get; }
    public ConfigNode Item { get; }
    internal ConfigNode(ISharedCore core, ConfigNodeData data);
    public sealed virtual Type get_ElementType();
    public sealed virtual bool GetString(String& value);
    [NullableContextAttribute("2")]
public sealed virtual string GetString();
    public bool GetBoolean(Boolean& value);
    public Nullable`1<bool> GetBoolean();
    public sealed virtual bool GetInt(Int32& value);
    public sealed virtual Nullable`1<int> GetInt();
    public sealed virtual bool GetUInt(UInt32& value);
    public sealed virtual Nullable`1<UInt32> GetUInt();
    public sealed virtual bool GetLong(Int64& value);
    public sealed virtual Nullable`1<long> GetLong();
    public sealed virtual bool GetULong(UInt64& value);
    public sealed virtual Nullable`1<ulong> GetULong();
    public sealed virtual bool GetFloat(Single& value);
    public sealed virtual Nullable`1<float> GetFloat();
    public sealed virtual bool GetDouble(Double& value);
    public sealed virtual Nullable`1<double> GetDouble();
    public sealed virtual bool GetList(ConfigNode[]& value);
    public sealed virtual ConfigNode[] GetList();
    public sealed virtual bool GetDict(Dictionary`2& value);
    public sealed virtual Dictionary`2<string, ConfigNode> GetDict();
    public sealed virtual ConfigNode Get(int index);
    public sealed virtual ConfigNode Get(string key);
    public sealed virtual ConfigNode get_Item(int index);
    public sealed virtual ConfigNode get_Item(string key);
}
public interface AltV.Net.Shared.Elements.Data.IConfig {
}
[NullableContextAttribute("1")]
[DefaultMemberAttribute("Item")]
public interface AltV.Net.Shared.Elements.Data.IConfigNode {
    public Type ElementType { get; }
    public ConfigNode Item { get; }
    public ConfigNode Item { get; }
    public abstract virtual bool GetString(String& value);
    [NullableContextAttribute("2")]
public abstract virtual string GetString();
    public abstract virtual bool GetInt(Int32& value);
    public abstract virtual Nullable`1<int> GetInt();
    public abstract virtual bool GetUInt(UInt32& value);
    public abstract virtual Nullable`1<UInt32> GetUInt();
    public abstract virtual bool GetLong(Int64& value);
    public abstract virtual Nullable`1<long> GetLong();
    public abstract virtual bool GetULong(UInt64& value);
    public abstract virtual Nullable`1<ulong> GetULong();
    public abstract virtual bool GetFloat(Single& value);
    public abstract virtual Nullable`1<float> GetFloat();
    public abstract virtual bool GetDouble(Double& value);
    public abstract virtual Nullable`1<double> GetDouble();
    public abstract virtual bool GetList(ConfigNode[]& value);
    public abstract virtual ConfigNode[] GetList();
    public abstract virtual bool GetDict(Dictionary`2& value);
    public abstract virtual Dictionary`2<string, ConfigNode> GetDict();
    public abstract virtual Type get_ElementType();
    public abstract virtual ConfigNode Get(string key);
    public abstract virtual ConfigNode Get(int index);
    public abstract virtual ConfigNode get_Item(string key);
    public abstract virtual ConfigNode get_Item(int index);
}
[NullableContextAttribute("1")]
public interface AltV.Net.Shared.Elements.Entities.IScriptRPCEvent {
    public IntPtr ScriptRPCNativePointer { get; }
    public abstract virtual IntPtr get_ScriptRPCNativePointer();
    public abstract virtual bool WillAnswer();
    public abstract virtual bool Answer(object answer);
    public abstract virtual bool AnswerWithError(string error);
}
[NullableContextAttribute("1")]
public interface AltV.Net.Shared.Elements.Entities.ISharedBaseObject {
    public IntPtr BaseObjectNativePointer { get; }
    public BaseObjectType Type { get; }
    public UInt32 Id { get; }
    public ISharedCore Core { get; }
    public bool Cached { get; }
    public abstract virtual IntPtr get_BaseObjectNativePointer();
    public abstract virtual BaseObjectType get_Type();
    public abstract virtual UInt32 get_Id();
    public abstract virtual ISharedCore get_Core();
    public abstract virtual bool get_Cached();
    public abstract virtual void SetMetaData(string key, object value);
    public abstract virtual void SetMetaData(Dictionary`2<string, object> metaData);
    public abstract virtual bool GetMetaData(string key, T& result);
    public abstract virtual void SetMetaData(string key, MValueConst& modreq(System.Runtime.InteropServices.InAttribute) value);
    public abstract virtual void GetMetaData(string key, MValueConst& result);
    public abstract virtual bool HasMetaData(string key);
    public abstract virtual void DeleteMetaData(string key);
    public abstract virtual void SetData(string key, object value);
    public abstract virtual bool GetData(string key, T& result);
    public abstract virtual bool HasData(string key);
    public abstract virtual IEnumerable`1<string> GetAllDataKeys();
    public abstract virtual void DeleteData(string key);
    public abstract virtual void ClearData();
    public abstract virtual void OnDestroy();
    public abstract virtual void CheckIfEntityExists();
    public abstract virtual void CheckIfEntityExistsOrCached();
    public abstract virtual void Destroy();
    [ObsoleteAttribute]
public abstract virtual bool HasSyncedMetaData(string key);
    [ObsoleteAttribute]
public abstract virtual void GetSyncedMetaData(string key, MValueConst& value);
    [ObsoleteAttribute]
public abstract virtual bool GetSyncedMetaData(string key, T& result);
}
[NullableContextAttribute("1")]
public interface AltV.Net.Shared.Elements.Entities.ISharedBlip {
    public IntPtr BlipNativePointer { get; }
    public bool IsGlobal { get; }
    public byte BlipType { get; }
    public UInt32 Sprite { get; public set; }
    public UInt32 Color { get; public set; }
    public bool Route { get; public set; }
    public Rgba RouteColor { get; public set; }
    public Vector2 ScaleXY { get; public set; }
    public UInt32 Display { get; public set; }
    public Rgba SecondaryColor { get; public set; }
    public UInt32 Alpha { get; public set; }
    public ushort FlashTimer { get; public set; }
    public ushort FlashInterval { get; public set; }
    public bool Friendly { get; public set; }
    public bool Bright { get; public set; }
    public ushort Number { get; public set; }
    public bool ShowCone { get; public set; }
    public bool Flashes { get; public set; }
    public bool FlashesAlternate { get; public set; }
    public bool ShortRange { get; public set; }
    public UInt32 Priority { get; public set; }
    public float Rotation { get; public set; }
    public string GxtName { get; public set; }
    public string Name { get; public set; }
    public bool Pulse { get; public set; }
    public bool MissionCreator { get; public set; }
    public bool TickVisible { get; public set; }
    public bool HeadingIndicatorVisible { get; public set; }
    public bool OutlineIndicatorVisible { get; public set; }
    public bool CrewIndicatorVisible { get; public set; }
    public UInt32 Category { get; public set; }
    public bool HighDetail { get; public set; }
    public bool Shrinked { get; public set; }
    public bool Visible { get; public set; }
    public bool IsHiddenOnLegend { get; public set; }
    public bool IsMinimalOnEdge { get; public set; }
    public bool IsUseHeightIndicatorOnEdge { get; public set; }
    public bool IsShortHeightThreshold { get; public set; }
    public abstract virtual IntPtr get_BlipNativePointer();
    public abstract virtual bool get_IsGlobal();
    public abstract virtual byte get_BlipType();
    public abstract virtual void set_Sprite(UInt32 value);
    public abstract virtual UInt32 get_Sprite();
    public abstract virtual void set_Color(UInt32 value);
    public abstract virtual UInt32 get_Color();
    public abstract virtual void set_Route(bool value);
    public abstract virtual bool get_Route();
    public abstract virtual void set_RouteColor(Rgba value);
    public abstract virtual Rgba get_RouteColor();
    public abstract virtual Vector2 get_ScaleXY();
    public abstract virtual void set_ScaleXY(Vector2 value);
    public abstract virtual UInt32 get_Display();
    public abstract virtual void set_Display(UInt32 value);
    public abstract virtual Rgba get_SecondaryColor();
    public abstract virtual void set_SecondaryColor(Rgba value);
    public abstract virtual UInt32 get_Alpha();
    public abstract virtual void set_Alpha(UInt32 value);
    public abstract virtual ushort get_FlashTimer();
    public abstract virtual void set_FlashTimer(ushort value);
    public abstract virtual ushort get_FlashInterval();
    public abstract virtual void set_FlashInterval(ushort value);
    public abstract virtual bool get_Friendly();
    public abstract virtual void set_Friendly(bool value);
    public abstract virtual bool get_Bright();
    public abstract virtual void set_Bright(bool value);
    public abstract virtual ushort get_Number();
    public abstract virtual void set_Number(ushort value);
    public abstract virtual bool get_ShowCone();
    public abstract virtual void set_ShowCone(bool value);
    public abstract virtual bool get_Flashes();
    public abstract virtual void set_Flashes(bool value);
    public abstract virtual bool get_FlashesAlternate();
    public abstract virtual void set_FlashesAlternate(bool value);
    public abstract virtual bool get_ShortRange();
    public abstract virtual void set_ShortRange(bool value);
    public abstract virtual UInt32 get_Priority();
    public abstract virtual void set_Priority(UInt32 value);
    public abstract virtual float get_Rotation();
    public abstract virtual void set_Rotation(float value);
    public abstract virtual string get_GxtName();
    public abstract virtual void set_GxtName(string value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual bool get_Pulse();
    public abstract virtual void set_Pulse(bool value);
    public abstract virtual bool get_MissionCreator();
    public abstract virtual void set_MissionCreator(bool value);
    public abstract virtual bool get_TickVisible();
    public abstract virtual void set_TickVisible(bool value);
    public abstract virtual bool get_HeadingIndicatorVisible();
    public abstract virtual void set_HeadingIndicatorVisible(bool value);
    public abstract virtual bool get_OutlineIndicatorVisible();
    public abstract virtual void set_OutlineIndicatorVisible(bool value);
    public abstract virtual bool get_CrewIndicatorVisible();
    public abstract virtual void set_CrewIndicatorVisible(bool value);
    public abstract virtual UInt32 get_Category();
    public abstract virtual void set_Category(UInt32 value);
    public abstract virtual bool get_HighDetail();
    public abstract virtual void set_HighDetail(bool value);
    public abstract virtual bool get_Shrinked();
    public abstract virtual void set_Shrinked(bool value);
    public abstract virtual void Fade(UInt32 opacity, UInt32 duration);
    public abstract virtual bool get_Visible();
    public abstract virtual void set_Visible(bool value);
    public abstract virtual bool get_IsHiddenOnLegend();
    public abstract virtual void set_IsHiddenOnLegend(bool value);
    public abstract virtual bool get_IsMinimalOnEdge();
    public abstract virtual void set_IsMinimalOnEdge(bool value);
    public abstract virtual bool get_IsUseHeightIndicatorOnEdge();
    public abstract virtual void set_IsUseHeightIndicatorOnEdge(bool value);
    public abstract virtual bool get_IsShortHeightThreshold();
    public abstract virtual void set_IsShortHeightThreshold(bool value);
}
public interface AltV.Net.Shared.Elements.Entities.ISharedCheckpoint {
    public IntPtr CheckpointNativePointer { get; }
    public byte CheckpointType { get; public set; }
    public float Height { get; public set; }
    public float Radius { get; public set; }
    public Rgba Color { get; public set; }
    public Position NextPosition { get; public set; }
    public UInt32 StreamingDistance { get; }
    public bool Visible { get; public set; }
    public abstract virtual IntPtr get_CheckpointNativePointer();
    public abstract virtual byte get_CheckpointType();
    public abstract virtual void set_CheckpointType(byte value);
    public abstract virtual float get_Height();
    public abstract virtual void set_Height(float value);
    public abstract virtual float get_Radius();
    public abstract virtual void set_Radius(float value);
    public abstract virtual Rgba get_Color();
    public abstract virtual void set_Color(Rgba value);
    public abstract virtual Position get_NextPosition();
    public abstract virtual void set_NextPosition(Position value);
    public abstract virtual UInt32 get_StreamingDistance();
    public abstract virtual bool get_Visible();
    public abstract virtual void set_Visible(bool value);
}
public interface AltV.Net.Shared.Elements.Entities.ISharedColShape {
    public IntPtr ColShapeNativePointer { get; }
    public abstract virtual IntPtr get_ColShapeNativePointer();
    [NullableContextAttribute("1")]
public abstract virtual bool IsEntityIn(ISharedEntity entity);
    public abstract virtual bool IsEntityIdIn(UInt32 id);
    public abstract virtual bool IsPointIn(Vector3 point);
}
[NullableContextAttribute("1")]
public interface AltV.Net.Shared.Elements.Entities.ISharedEntity {
    public IntPtr EntityNativePointer { get; }
    public bool Exists { get; }
    public UInt32 Model { get; }
    public ISharedPlayer NetworkOwner { get; }
    public Rotation Rotation { get; }
    public bool Frozen { get; public set; }
    public abstract virtual IntPtr get_EntityNativePointer();
    public abstract virtual bool get_Exists();
    public abstract virtual UInt32 get_Model();
    public abstract virtual ISharedPlayer get_NetworkOwner();
    public abstract virtual Rotation get_Rotation();
    public abstract virtual bool HasStreamSyncedMetaData(string key);
    public abstract virtual void GetStreamSyncedMetaData(string key, MValueConst& value);
    public abstract virtual bool GetStreamSyncedMetaData(string key, T& result);
    public abstract virtual bool get_Frozen();
    public abstract virtual void set_Frozen(bool value);
}
public interface AltV.Net.Shared.Elements.Entities.ISharedMarker {
    public IntPtr MarkerNativePointer { get; }
    public bool IsGlobal { get; }
    [NullableAttribute("1")]
public ISharedPlayer Target { get; }
    public Rgba Color { get; public set; }
    public bool Visible { get; public set; }
    public MarkerType MarkerType { get; public set; }
    public Position Scale { get; public set; }
    public Rotation Rotation { get; public set; }
    public Position Direction { get; public set; }
    public UInt32 StreamingDistance { get; }
    public bool IsFaceCamera { get; public set; }
    public bool IsRotating { get; public set; }
    public bool IsBobUpDown { get; public set; }
    public abstract virtual IntPtr get_MarkerNativePointer();
    public abstract virtual bool get_IsGlobal();
    [NullableContextAttribute("1")]
public abstract virtual ISharedPlayer get_Target();
    public abstract virtual Rgba get_Color();
    public abstract virtual void set_Color(Rgba value);
    public abstract virtual bool get_Visible();
    public abstract virtual void set_Visible(bool value);
    public abstract virtual MarkerType get_MarkerType();
    public abstract virtual void set_MarkerType(MarkerType value);
    public abstract virtual Position get_Scale();
    public abstract virtual void set_Scale(Position value);
    public abstract virtual Rotation get_Rotation();
    public abstract virtual void set_Rotation(Rotation value);
    public abstract virtual Position get_Direction();
    public abstract virtual void set_Direction(Position value);
    public abstract virtual UInt32 get_StreamingDistance();
    public abstract virtual bool get_IsFaceCamera();
    public abstract virtual void set_IsFaceCamera(bool value);
    public abstract virtual bool get_IsRotating();
    public abstract virtual void set_IsRotating(bool value);
    public abstract virtual bool get_IsBobUpDown();
    public abstract virtual void set_IsBobUpDown(bool value);
}
public interface AltV.Net.Shared.Elements.Entities.ISharedObject {
    public IntPtr ObjectNativePointer { get; }
    public byte Alpha { get; }
    public byte TextureVariation { get; }
    public ushort LodDistance { get; }
    public abstract virtual IntPtr get_ObjectNativePointer();
    public abstract virtual byte get_Alpha();
    public abstract virtual byte get_TextureVariation();
    public abstract virtual ushort get_LodDistance();
}
public interface AltV.Net.Shared.Elements.Entities.ISharedPed {
    public IntPtr PedNativePointer { get; }
    public ushort Armour { get; }
    public ushort Health { get; }
    public ushort MaxHealth { get; }
    public UInt32 CurrentWeapon { get; }
    public abstract virtual IntPtr get_PedNativePointer();
    public abstract virtual ushort get_Armour();
    public abstract virtual ushort get_Health();
    public abstract virtual ushort get_MaxHealth();
    public abstract virtual UInt32 get_CurrentWeapon();
}
[NullableContextAttribute("1")]
public interface AltV.Net.Shared.Elements.Entities.ISharedPlayer {
    public IntPtr PlayerNativePointer { get; }
    public ISharedVehicle Vehicle { get; }
    public string Name { get; }
    public Position AimPosition { get; }
    public ushort Armor { get; }
    public UInt32 CurrentWeapon { get; }
    public Position EntityAimOffset { get; }
    public bool IsFlashlightActive { get; }
    public Rotation HeadRotation { get; }
    public ushort Health { get; }
    public bool IsAiming { get; }
    public bool IsDead { get; }
    public bool IsInRagdoll { get; }
    public bool IsInVehicle { get; }
    public bool IsReloading { get; }
    public bool IsEnteringVehicle { get; }
    public bool IsLeavingVehicle { get; }
    public bool IsOnLadder { get; }
    public bool IsInMelee { get; }
    public bool IsInCover { get; }
    public ushort MaxArmor { get; }
    public ushort MaxHealth { get; }
    public float MoveSpeed { get; }
    public float ForwardSpeed { get; }
    public float StrafeSpeed { get; }
    public byte Seat { get; }
    public bool IsSpawned { get; }
    public UInt32 CurrentAnimationDict { get; }
    public UInt32 CurrentAnimationName { get; }
    public ISharedEntity EntityAimingAt { get; }
    public bool IsParachuting { get; }
    public abstract virtual IntPtr get_PlayerNativePointer();
    public abstract virtual ISharedVehicle get_Vehicle();
    public abstract virtual string get_Name();
    public abstract virtual Position get_AimPosition();
    public abstract virtual ushort get_Armor();
    public abstract virtual UInt32 get_CurrentWeapon();
    public abstract virtual Position get_EntityAimOffset();
    public abstract virtual bool get_IsFlashlightActive();
    public abstract virtual Rotation get_HeadRotation();
    public abstract virtual ushort get_Health();
    public abstract virtual bool get_IsAiming();
    public abstract virtual bool get_IsDead();
    public abstract virtual bool get_IsInRagdoll();
    public abstract virtual bool get_IsInVehicle();
    public abstract virtual bool get_IsReloading();
    public abstract virtual bool get_IsEnteringVehicle();
    public abstract virtual bool get_IsLeavingVehicle();
    public abstract virtual bool get_IsOnLadder();
    public abstract virtual bool get_IsInMelee();
    public abstract virtual bool get_IsInCover();
    public abstract virtual ushort get_MaxArmor();
    public abstract virtual ushort get_MaxHealth();
    public abstract virtual float get_MoveSpeed();
    public abstract virtual float get_ForwardSpeed();
    public abstract virtual float get_StrafeSpeed();
    public abstract virtual byte get_Seat();
    public abstract virtual bool get_IsSpawned();
    public abstract virtual UInt32 get_CurrentAnimationDict();
    public abstract virtual UInt32 get_CurrentAnimationName();
    public abstract virtual ISharedEntity get_EntityAimingAt();
    public abstract virtual void GetCurrentWeaponComponents(UInt32[]& weaponComponents);
    public abstract virtual bool get_IsParachuting();
}
public interface AltV.Net.Shared.Elements.Entities.ISharedVehicle {
    public IntPtr VehicleNativePointer { get; }
    public byte WheelsCount { get; }
    public int PetrolTankHealth { get; }
    public float SteeringAngle { get; }
    public abstract virtual IntPtr get_VehicleNativePointer();
    public abstract virtual byte get_WheelsCount();
    public abstract virtual int get_PetrolTankHealth();
    public abstract virtual float get_SteeringAngle();
}
[NullableContextAttribute("1")]
public interface AltV.Net.Shared.Elements.Entities.ISharedVirtualEntity {
    public IntPtr VirtualEntityNativePointer { get; }
    public ISharedVirtualEntityGroup Group { get; }
    public UInt32 StreamingDistance { get; }
    public bool Visible { get; public set; }
    public abstract virtual IntPtr get_VirtualEntityNativePointer();
    public abstract virtual ISharedVirtualEntityGroup get_Group();
    public abstract virtual bool HasStreamSyncedMetaData(string key);
    public abstract virtual void GetStreamSyncedMetaData(string key, MValueConst& value);
    public abstract virtual bool GetStreamSyncedMetaData(string key, T& result);
    public abstract virtual UInt32 get_StreamingDistance();
    public abstract virtual bool get_Visible();
    public abstract virtual void set_Visible(bool value);
}
public interface AltV.Net.Shared.Elements.Entities.ISharedVirtualEntityGroup {
    public IntPtr VirtualEntityGroupNativePointer { get; }
    public UInt32 MaxEntitiesInStream { get; }
    public abstract virtual IntPtr get_VirtualEntityGroupNativePointer();
    public abstract virtual UInt32 get_MaxEntitiesInStream();
}
public interface AltV.Net.Shared.Elements.Entities.ISharedWorldObject {
    public IntPtr WorldObjectNativePointer { get; }
    public Position Position { get; public set; }
    public int Dimension { get; public set; }
    public abstract virtual IntPtr get_WorldObjectNativePointer();
    public abstract virtual Position get_Position();
    public abstract virtual void set_Position(Position value);
    public abstract virtual int get_Dimension();
    public abstract virtual void set_Dimension(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.Shared.Elements.Entities.ScriptRpcEvent : object {
    private ushort _answerId;
    private bool _clientSide;
    [CompilerGeneratedAttribute]
private IntPtr <ScriptRPCNativePointer>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharedCore <Core>k__BackingField;
    public IntPtr ScriptRPCNativePointer { get; }
    public ISharedCore Core { get; }
    public ScriptRpcEvent(ISharedCore core, IntPtr clientScriptRPCNativePointer, ushort answerId, bool clientSide);
    [CompilerGeneratedAttribute]
public sealed virtual IntPtr get_ScriptRPCNativePointer();
    [CompilerGeneratedAttribute]
public ISharedCore get_Core();
    public sealed virtual bool WillAnswer();
    public sealed virtual bool Answer(object answer);
    public sealed virtual bool AnswerWithError(string error);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class AltV.Net.Shared.Elements.Entities.SharedBaseObject : object {
    private ConcurrentDictionary`2<string, object> data;
    [CompilerGeneratedAttribute]
private bool <Exists>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Cached>k__BackingField;
    public IntPtr BaseObjectNativePointer { get; protected set; }
    public UInt32 Id { get; }
    public ISharedCore Core { get; }
    public IntPtr NativePointer { get; }
    public BaseObjectType Type { get; }
    public bool Exists { get; public set; }
    public bool Cached { get; internal set; }
    public abstract virtual IntPtr get_BaseObjectNativePointer();
    protected abstract virtual void set_BaseObjectNativePointer(IntPtr value);
    public abstract virtual UInt32 get_Id();
    public abstract virtual ISharedCore get_Core();
    public virtual IntPtr get_NativePointer();
    protected virtual override void Finalize();
    public abstract virtual BaseObjectType get_Type();
    public sealed virtual void SetData(string key, object value);
    public sealed virtual bool GetData(string key, T& result);
    public sealed virtual IEnumerable`1<string> GetAllDataKeys();
    public sealed virtual bool HasData(string key);
    public sealed virtual void DeleteData(string key);
    public sealed virtual void ClearData();
    public sealed virtual void OnDestroy();
    public sealed virtual void GetMetaData(string key, MValueConst& value);
    public void SetMetaData(string key, MValueConst& value);
    public sealed virtual bool HasMetaData(string key);
    public sealed virtual void DeleteMetaData(string key);
    public sealed virtual void SetMetaData(string key, object value);
    public sealed virtual void SetMetaData(Dictionary`2<string, object> metaData);
    public bool GetMetaData(string key, Int32& result);
    public bool GetMetaData(string key, UInt32& result);
    public bool GetMetaData(string key, Single& result);
    public sealed virtual bool GetMetaData(string key, T& result);
    public virtual void CheckIfEntityExists();
    public sealed virtual void CheckIfEntityExistsOrCached();
    [ConditionalAttribute("DEBUG")]
public virtual void CheckIfCallIsValid();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Exists();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Exists(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Cached();
    [CompilerGeneratedAttribute]
internal void set_Cached(bool value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual void Destroy();
    public virtual void SetCached(IntPtr cachedBaseObject);
    [ObsoleteAttribute]
public sealed virtual void GetSyncedMetaData(string key, MValueConst& value);
    [ObsoleteAttribute]
public sealed virtual bool GetSyncedMetaData(string key, T& result);
    [ObsoleteAttribute]
public sealed virtual bool HasSyncedMetaData(string key);
    private sealed virtual override void AltV.Net.Shared.Elements.Entities.ISharedBaseObject.SetMetaData(string key, MValueConst& modreq(System.Runtime.InteropServices.InAttribute) value);
}
public enum AltV.Net.Shared.Enums.AmmoType : Enum {
    public UInt32 value__;
    public static AmmoType Null;
    public static AmmoType Shotgun;
    public static AmmoType Sniper;
    public static AmmoType FireExtinguisher;
    public static AmmoType GrenadeLauncher;
    public static AmmoType Snowball;
    public static AmmoType Pistol;
    public static AmmoType Smg;
    public static AmmoType FertilizerCan;
    public static AmmoType Ball;
    public static AmmoType Molotov;
    public static AmmoType StickyBomb;
    public static AmmoType PetrolCan;
    public static AmmoType StunGun;
    public static AmmoType Rifle;
    public static AmmoType Minigun;
    public static AmmoType MG;
    public static AmmoType FlareGun;
    public static AmmoType Flare;
    public static AmmoType GrenadeLauncherSmoke;
    public static AmmoType HomingLauncher;
    public static AmmoType Railgun;
    public static AmmoType Firework;
    public static AmmoType Grenade;
    public static AmmoType BZGas;
    public static AmmoType ProximityMine;
    public static AmmoType RayPistol;
    public static AmmoType Rpg;
    public static AmmoType PipeBomb;
    public static AmmoType HazardCan;
    public static AmmoType EMPLauncher;
    public static AmmoType AcidPackage;
    public static AmmoType SmokeGrenade;
    public static AmmoType RailgunXm3;
}
public enum AltV.Net.Shared.Enums.MarkerType : Enum {
    public int value__;
    public static MarkerType MarkerCone;
    public static MarkerType MarkerCylinder;
    public static MarkerType MarkerArrow;
    public static MarkerType MarkerArrowFlat;
    public static MarkerType MarkerFlag;
    public static MarkerType MarkerRingFlag;
    public static MarkerType MarkerRing;
    public static MarkerType MarkerPlane;
    public static MarkerType MarkerBikeLogo1;
    public static MarkerType MarkerBikeLogo2;
    public static MarkerType MarkerNum0;
    public static MarkerType MarkerNum1;
    public static MarkerType MarkerNum2;
    public static MarkerType MarkerNum3;
    public static MarkerType MarkerNum4;
    public static MarkerType MarkerNum5;
    public static MarkerType MarkerNum6;
    public static MarkerType MarkerNum7;
    public static MarkerType MarkerNum8;
    public static MarkerType MarkerNum9;
    public static MarkerType MarkerChevron1;
    public static MarkerType MarkerChevron2;
    public static MarkerType MarkerChevron3;
    public static MarkerType MarkerRingFlat;
    public static MarkerType MarkerLap;
    public static MarkerType MarkerHalo;
    public static MarkerType MarkerHaloPoint;
    public static MarkerType MarkerHaloRotate;
    public static MarkerType MarkerSphere;
    public static MarkerType MarkerMoney;
    public static MarkerType MarkerLines;
    public static MarkerType MarkerBeast;
    public static MarkerType MarkerQuestionMark;
    public static MarkerType MarkerTransformPlane;
    public static MarkerType MarkerTransformHelicopter;
    public static MarkerType MarkerTransformBoat;
    public static MarkerType MarkerTransformCar;
    public static MarkerType MarkerTransformBike;
    public static MarkerType MarkerTransformPushBike;
    public static MarkerType MarkerTransformTruck;
    public static MarkerType MarkerTransformParachute;
    public static MarkerType MarkerTransformThruster;
    public static MarkerType MarkerWarp;
    public static MarkerType MarkerBoxes;
    public static MarkerType MarkerPitLane;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.Shared.Events.EventStateManager : object {
    private ISharedCore core;
    public Dictionary`2<EventType, int> HandlerCount;
    private static EventType[] InternalEvents;
    public EventStateManager(ISharedCore core);
    private static EventStateManager();
    private static bool IsEventIgnored(EventType type);
    public void AddHandler(EventType type);
    public void RemoveHandler(EventType type);
}
public enum AltV.Net.Shared.Events.EventType : Enum {
    public byte value__;
    public static EventType NONE;
    public static EventType SERVER_STARTED;
    public static EventType CLIENT_REQUEST_OBJECT_EVENT;
    public static EventType CLIENT_DELETE_OBJECT_EVENT;
    public static EventType PLAYER_CONNECT;
    public static EventType PLAYER_DISCONNECT;
    public static EventType PLAYER_CONNECT_DENIED;
    public static EventType PLAYER_SPAWN;
    public static EventType CONNECTION_QUEUE_ADD;
    public static EventType CONNECTION_QUEUE_REMOVE;
    public static EventType RESOURCE_START;
    public static EventType RESOURCE_STOP;
    public static EventType RESOURCE_ERROR;
    public static EventType SERVER_SCRIPT_EVENT;
    public static EventType CLIENT_SCRIPT_EVENT;
    public static EventType META_CHANGE;
    public static EventType SYNCED_META_CHANGE;
    public static EventType STREAM_SYNCED_META_CHANGE;
    public static EventType GLOBAL_META_CHANGE;
    public static EventType GLOBAL_SYNCED_META_CHANGE;
    public static EventType LOCAL_SYNCED_META_CHANGE;
    public static EventType PLAYER_DAMAGE;
    public static EventType PLAYER_DEATH;
    public static EventType PLAYER_HEAL;
    public static EventType FIRE_EVENT;
    public static EventType EXPLOSION_EVENT;
    public static EventType START_PROJECTILE_EVENT;
    public static EventType WEAPON_DAMAGE_EVENT;
    public static EventType VEHICLE_DESTROY;
    public static EventType VEHICLE_DAMAGE;
    public static EventType REQUEST_SYNCED_SCENE;
    public static EventType START_SYNCED_SCENE;
    public static EventType STOP_SYNCED_SCENE;
    public static EventType UPDATE_SYNCED_SCENE;
    public static EventType COLSHAPE_EVENT;
    public static EventType PLAYER_ENTER_VEHICLE;
    public static EventType PLAYER_START_ENTER_VEHICLE;
    public static EventType PLAYER_ENTERING_VEHICLE;
    public static EventType PLAYER_LEAVE_VEHICLE;
    public static EventType PLAYER_START_LEAVE_VEHICLE;
    public static EventType PLAYER_CHANGE_VEHICLE_SEAT;
    public static EventType PLAYER_WEAPON_CHANGE;
    public static EventType PLAYER_REQUEST_CONTROL;
    public static EventType PLAYER_START_TALKING;
    public static EventType PLAYER_STOP_TALKING;
    public static EventType VEHICLE_ATTACH;
    public static EventType VEHICLE_DETACH;
    public static EventType VEHICLE_HORN;
    public static EventType VEHICLE_SIREN;
    public static EventType NETOWNER_CHANGE;
    public static EventType CREATE_BASE_OBJECT_EVENT;
    public static EventType REMOVE_BASE_OBJECT_EVENT;
    public static EventType CONSOLE_COMMAND_EVENT;
    public static EventType PLAYER_CHANGE_ANIMATION_EVENT;
    public static EventType PLAYER_CHANGE_INTERIOR_EVENT;
    public static EventType PLAYER_WEAPON_SHOOT_EVENT;
    public static EventType PLAYER_BULLET_HIT_EVENT;
    public static EventType PLAYER_DIMENSION_CHANGE;
    public static EventType GIVE_PED_SCRIPTED_TASK;
    public static EventType SCRIPT_RPC_EVENT;
    public static EventType SCRIPT_RPC_ANSWER_EVENT;
    public static EventType CONNECTION_COMPLETE;
    public static EventType DISCONNECT_EVENT;
    public static EventType WEB_VIEW_EVENT;
    public static EventType KEYBOARD_EVENT;
    public static EventType GAME_ENTITY_CREATE;
    public static EventType GAME_ENTITY_DESTROY;
    public static EventType WEB_SOCKET_CLIENT_EVENT;
    public static EventType AUDIO_EVENT;
    public static EventType TASK_CHANGE;
    public static EventType SPAWNED;
    public static EventType RMLUI_EVENT;
    public static EventType WINDOW_FOCUS_CHANGE;
    public static EventType WINDOW_RESOLUTION_CHANGE;
    public static EventType ENTITY_HIT_ENTITY;
    public static EventType WORLD_OBJECT_POSITION_CHANGE;
    public static EventType WORLD_OBJECT_STREAM_IN;
    public static EventType WORLD_OBJECT_STREAM_OUT;
    public static EventType VOICE_CONNECTION_EVENT;
    public static EventType PED_DAMAGE;
    public static EventType PED_DEATH;
    public static EventType PED_HEAL;
    public static EventType ALL;
    public static EventType SIZE;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class AltV.Net.Shared.Events.HashSetEventHandler`1 : object {
    private Nullable`1<EventType> type;
    private HashSet`1<TEvent> events;
    private ISharedCore core { get; }
    public HashSetEventHandler`1(EventType type);
    private ISharedCore get_core();
    public sealed virtual void Add(TEvent value);
    public sealed virtual void Remove(TEvent value);
    public sealed virtual HashSet`1<TEvent> GetEvents();
    public sealed virtual bool HasEvents();
}
[NullableContextAttribute("1")]
internal interface AltV.Net.Shared.Events.IEventHandler`1 {
    public abstract virtual void Add(TEvent value);
    public abstract virtual void Remove(TEvent value);
    public abstract virtual HashSet`1<TEvent> GetEvents();
    public abstract virtual bool HasEvents();
}
[NullableContextAttribute("1")]
public interface AltV.Net.Shared.ISharedCore {
    public IList`1<ushort> UnansweredServerRpcRequest { get; }
    public IList`1<ushort> UnansweredClientRpcRequest { get; }
    public ISharedPoolManager PoolManager { get; }
    public EventStateManager EventStateManager { get; }
    public ISharedNativeResource Resource { get; }
    public IntPtr NativePointer { get; }
    public string SdkVersion { get; }
    public string CApiVersion { get; }
    public string Version { get; }
    public string Branch { get; }
    public bool IsDebug { get; }
    public int NetTime { get; }
    public abstract virtual IList`1<ushort> get_UnansweredServerRpcRequest();
    public abstract virtual IList`1<ushort> get_UnansweredClientRpcRequest();
    public abstract virtual ISharedPoolManager get_PoolManager();
    public abstract virtual EventStateManager get_EventStateManager();
    public abstract virtual ISharedNativeResource get_Resource();
    public abstract virtual ISharedBaseObject GetBaseObjectById(BaseObjectType type, UInt32 id);
    public abstract virtual IntPtr get_NativePointer();
    public abstract virtual string get_SdkVersion();
    public abstract virtual string get_CApiVersion();
    public abstract virtual string get_Version();
    public abstract virtual string get_Branch();
    public abstract virtual bool get_IsDebug();
    public abstract virtual void LogInfo(string message);
    public abstract virtual UInt32 Hash(string hash);
    public abstract virtual void LogDebug(string message);
    public abstract virtual void LogWarning(string message);
    public abstract virtual void LogError(string message);
    public abstract virtual void LogColored(string message);
    public abstract virtual void LogInfo(IntPtr message);
    public abstract virtual void LogDebug(IntPtr message);
    public abstract virtual void LogWarning(IntPtr message);
    public abstract virtual void LogError(IntPtr message);
    public abstract virtual void LogColored(IntPtr message);
    public abstract virtual bool IsMainThread();
    public abstract virtual string PtrToStringUtf8AndFree(IntPtr str, int size);
    public abstract virtual void RegisterMValueAdapter(IMValueAdapter`1<T> adapter);
    public abstract virtual bool ToMValue(object obj, Type type, MValueConst& mValue);
    public abstract virtual bool FromMValue(MValueConst& modreq(System.Runtime.InteropServices.InAttribute) mValue, Type type, Object& obj);
    public abstract virtual bool MValueFromObject(object obj, Type type, Object& result);
    public abstract virtual bool IsMValueConvertible(Type type);
    public abstract virtual void CreateMValueNil(MValueConst& mValue);
    public abstract virtual void CreateMValueBool(MValueConst& mValue, bool value);
    public abstract virtual void CreateMValueInt(MValueConst& mValue, long value);
    public abstract virtual void CreateMValueUInt(MValueConst& mValue, ulong value);
    public abstract virtual void CreateMValueDouble(MValueConst& mValue, double value);
    public abstract virtual void CreateMValueString(MValueConst& mValue, string value);
    public abstract virtual void CreateMValueList(MValueConst& mValue, MValueConst[] val, ulong size);
    public abstract virtual void CreateMValueDict(MValueConst& mValue, String[] keys, MValueConst[] val, ulong size);
    public abstract virtual void CreateMValueBaseObject(MValueConst& mValue, ISharedBaseObject value);
    public abstract virtual void CreateMValueFunction(MValueConst& mValue, IntPtr value);
    public abstract virtual void CreateMValueVector3(MValueConst& mValue, Position value);
    public abstract virtual void CreateMValueVector2(MValueConst& mValue, Vector2 value);
    public abstract virtual void CreateMValueRgba(MValueConst& mValue, Rgba value);
    public abstract virtual void CreateMValueByteArray(MValueConst& mValue, Byte[] value);
    public abstract virtual void CreateMValue(MValueConst& mValue, object obj);
    public abstract virtual void CreateMValues(MValueConst[] mValues, Object[] objects);
    public abstract virtual void SetMetaData(string key, object value);
    public abstract virtual bool HasMetaData(string key);
    public abstract virtual void DeleteMetaData(string key);
    public abstract virtual void GetMetaData(string key, MValueConst& value);
    public abstract virtual bool HasSyncedMetaData(string key);
    public abstract virtual void GetSyncedMetaData(string key, MValueConst& value);
    public abstract virtual void TriggerLocalEvent(string eventName, MValueConst[] args);
    public abstract virtual void TriggerLocalEvent(IntPtr eventNamePtr, MValueConst[] args);
    public abstract virtual void TriggerLocalEvent(string eventName, IntPtr[] args);
    public abstract virtual void TriggerLocalEvent(IntPtr eventNamePtr, IntPtr[] args);
    public abstract virtual void TriggerLocalEvent(IntPtr eventNamePtr, Object[] args);
    public abstract virtual void TriggerLocalEvent(string eventName, Object[] args);
    public abstract virtual VoiceConnectionState GetVoiceConnectionState();
    public abstract virtual int get_NetTime();
}
[NullableContextAttribute("1")]
public interface AltV.Net.Shared.ISharedCSharpResourceImpl {
    public abstract virtual IntPtr CreateInvoker(MValueFunctionCallback function);
    public abstract virtual void DestroyInvoker(IntPtr invoker);
}
[NullableContextAttribute("1")]
public interface AltV.Net.Shared.ISharedNativeResource {
    public ISharedCSharpResourceImpl CSharpResourceImpl { get; }
    public IntPtr NativePointer { get; }
    public IntPtr ResourceImplPtr { get; }
    public string Name { get; }
    public string Type { get; }
    public bool IsStarted { get; }
    public String[] Dependencies { get; }
    public String[] Dependants { get; }
    public abstract virtual ISharedCSharpResourceImpl get_CSharpResourceImpl();
    public abstract virtual IntPtr get_NativePointer();
    public abstract virtual IntPtr get_ResourceImplPtr();
    public abstract virtual string get_Name();
    public abstract virtual string get_Type();
    public abstract virtual bool get_IsStarted();
    public abstract virtual String[] get_Dependencies();
    public abstract virtual String[] get_Dependants();
    public abstract virtual void SetExport(string key, object value);
    public abstract virtual void SetExport(string key, MValueConst& modreq(System.Runtime.InteropServices.InAttribute) value);
    public abstract virtual object GetExport(string key);
    public abstract virtual bool GetExport(string key, MValueConst& mValue);
    public abstract virtual IConfig GetConfig();
}
[NullableContextAttribute("1")]
public interface AltV.Net.Shared.ISharedPoolManager {
    public IReadOnlyEntityPool`1<ISharedPlayer> Player { get; }
    public IReadOnlyEntityPool`1<ISharedVehicle> Vehicle { get; }
    public IReadOnlyEntityPool`1<ISharedPed> Ped { get; }
    public IReadOnlyEntityPool`1<ISharedObject> Object { get; }
    public IReadOnlyBaseObjectPool`1<ISharedBlip> Blip { get; }
    public IReadOnlyBaseObjectPool`1<ISharedCheckpoint> Checkpoint { get; }
    public IReadOnlyBaseObjectPool`1<ISharedColShape> ColShape { get; }
    public IReadOnlyBaseObjectPool`1<ISharedVirtualEntity> VirtualEntity { get; }
    public IReadOnlyBaseObjectPool`1<ISharedVirtualEntityGroup> VirtualEntityGroup { get; }
    public IReadOnlyBaseObjectPool`1<ISharedMarker> Marker { get; }
    public abstract virtual IReadOnlyEntityPool`1<ISharedPlayer> get_Player();
    public abstract virtual IReadOnlyEntityPool`1<ISharedVehicle> get_Vehicle();
    public abstract virtual IReadOnlyEntityPool`1<ISharedPed> get_Ped();
    public abstract virtual IReadOnlyEntityPool`1<ISharedObject> get_Object();
    public abstract virtual IReadOnlyBaseObjectPool`1<ISharedBlip> get_Blip();
    public abstract virtual IReadOnlyBaseObjectPool`1<ISharedCheckpoint> get_Checkpoint();
    public abstract virtual IReadOnlyBaseObjectPool`1<ISharedColShape> get_ColShape();
    public abstract virtual IReadOnlyBaseObjectPool`1<ISharedVirtualEntity> get_VirtualEntity();
    public abstract virtual IReadOnlyBaseObjectPool`1<ISharedVirtualEntityGroup> get_VirtualEntityGroup();
    public abstract virtual IReadOnlyBaseObjectPool`1<ISharedMarker> get_Marker();
    public abstract virtual ISharedBaseObject GetOrCreate(ISharedCore core, IntPtr entityPointer, BaseObjectType baseObjectType, UInt32 entityId);
    public abstract virtual ISharedBaseObject GetOrCreate(ISharedCore core, IntPtr entityPointer, BaseObjectType baseObjectType);
    public abstract virtual ISharedBaseObject Get(IntPtr entityPointer, BaseObjectType baseObjectType);
    public abstract virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class AltV.Net.Shared.SharedCore : object {
    [CompilerGeneratedAttribute]
private IntPtr <NativePointer>k__BackingField;
    [CompilerGeneratedAttribute]
private ILibrary <Library>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ushort> <UnansweredServerRpcRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ushort> <UnansweredClientRpcRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private EventStateManager <EventStateManager>k__BackingField;
    [NullableAttribute("2")]
private string sdkVersion;
    [NullableAttribute("2")]
private string cApiVersion;
    [NullableAttribute("2")]
private string version;
    [NullableAttribute("2")]
private string branch;
    private Nullable`1<bool> isDebug;
    protected Thread MainThread;
    private Dictionary`2<Type, IMValueBaseAdapter> adapters;
    public IntPtr NativePointer { get; }
    public ILibrary Library { get; }
    public ISharedNativeResource Resource { get; }
    public IList`1<ushort> UnansweredServerRpcRequest { get; }
    public IList`1<ushort> UnansweredClientRpcRequest { get; }
    public ISharedPoolManager PoolManager { get; }
    public EventStateManager EventStateManager { get; }
    public string SdkVersion { get; }
    public string CApiVersion { get; }
    public string Version { get; }
    public string Branch { get; }
    public int NetTime { get; }
    public bool IsDebug { get; }
    public SharedCore(IntPtr nativePointer, ILibrary library);
    [CompilerGeneratedAttribute]
public sealed virtual IntPtr get_NativePointer();
    [CompilerGeneratedAttribute]
public sealed virtual ILibrary get_Library();
    public abstract virtual ISharedNativeResource get_Resource();
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<ushort> get_UnansweredServerRpcRequest();
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<ushort> get_UnansweredClientRpcRequest();
    public abstract virtual ISharedPoolManager get_PoolManager();
    [CompilerGeneratedAttribute]
public sealed virtual EventStateManager get_EventStateManager();
    public sealed virtual string get_SdkVersion();
    public sealed virtual string get_CApiVersion();
    public sealed virtual string get_Version();
    public sealed virtual string get_Branch();
    public sealed virtual int get_NetTime();
    public sealed virtual bool get_IsDebug();
    public sealed virtual UInt32 Hash(string stringToHash);
    public sealed virtual void LogInfo(IntPtr messagePtr);
    public sealed virtual void LogDebug(IntPtr messagePtr);
    public sealed virtual void LogWarning(IntPtr messagePtr);
    public sealed virtual void LogError(IntPtr messagePtr);
    public sealed virtual void LogColored(IntPtr messagePtr);
    public sealed virtual void LogInfo(string message);
    public sealed virtual void LogDebug(string message);
    public sealed virtual void LogWarning(string message);
    public sealed virtual void LogError(string message);
    public sealed virtual void LogColored(string message);
    public sealed virtual string PtrToStringUtf8AndFree(IntPtr str, int size);
    public virtual void Dispose();
    public virtual bool IsMainThread();
    [ConditionalAttribute("DEBUG")]
public virtual void CheckIfCallIsValid(string callerName);
    public sealed virtual ISharedBaseObject GetBaseObjectById(BaseObjectType type, UInt32 id);
    public sealed virtual void CreateMValueNil(MValueConst& mValue);
    public sealed virtual void CreateMValueBool(MValueConst& mValue, bool value);
    public sealed virtual void CreateMValueInt(MValueConst& mValue, long value);
    public sealed virtual void CreateMValueUInt(MValueConst& mValue, ulong value);
    public sealed virtual void CreateMValueDouble(MValueConst& mValue, double value);
    public sealed virtual void CreateMValueString(MValueConst& mValue, string value);
    public sealed virtual void CreateMValueList(MValueConst& mValue, MValueConst[] val, ulong size);
    public sealed virtual void CreateMValueDict(MValueConst& mValue, String[] keys, MValueConst[] val, ulong size);
    public sealed virtual void CreateMValueBaseObject(MValueConst& mValue, ISharedBaseObject value);
    public sealed virtual void CreateMValueFunction(MValueConst& mValue, IntPtr value);
    public sealed virtual void CreateMValueVector3(MValueConst& mValue, Position value);
    public sealed virtual void CreateMValueVector2(MValueConst& mValue, Vector2 value);
    public sealed virtual void CreateMValueRgba(MValueConst& mValue, Rgba value);
    public sealed virtual void CreateMValueByteArray(MValueConst& mValue, Byte[] value);
    public sealed virtual void CreateMValue(MValueConst& mValue, object obj);
    public sealed virtual void CreateMValues(MValueConst[] mValues, Object[] objects);
    public sealed virtual void RegisterMValueAdapter(IMValueAdapter`1<T> adapter);
    public sealed virtual bool ToMValue(object obj, Type type, MValueConst& mValue);
    public bool FromMValue(MValueConst& mValue, Type type, Object& obj);
    public sealed virtual bool MValueFromObject(object obj, Type type, Object& result);
    public sealed virtual bool IsMValueConvertible(Type type);
    public sealed virtual void GetMetaData(string key, MValueConst& value);
    public sealed virtual void SetMetaData(string key, object value);
    public sealed virtual bool HasMetaData(string key);
    public sealed virtual void DeleteMetaData(string key);
    public sealed virtual void GetSyncedMetaData(string key, MValueConst& value);
    public sealed virtual bool HasSyncedMetaData(string key);
    public sealed virtual void TriggerLocalEvent(string eventName, MValueConst[] args);
    public sealed virtual void TriggerLocalEvent(IntPtr eventNamePtr, MValueConst[] args);
    public sealed virtual void TriggerLocalEvent(string eventName, IntPtr[] args);
    public sealed virtual void TriggerLocalEvent(IntPtr eventNamePtr, IntPtr[] args);
    public sealed virtual void TriggerLocalEvent(IntPtr eventNamePtr, Object[] args);
    public sealed virtual void TriggerLocalEvent(string eventName, Object[] args);
    public sealed virtual VoiceConnectionState GetVoiceConnectionState();
    private sealed virtual override bool AltV.Net.Shared.ISharedCore.FromMValue(MValueConst& modreq(System.Runtime.InteropServices.InAttribute) mValue, Type type, Object& obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.Shared.SharedCSharpResourceImpl : object {
    internal IntPtr NativePointer;
    protected ISharedCore core;
    private Dictionary`2<IntPtr, GCHandle> invokers;
    public SharedCSharpResourceImpl(ISharedCore core, IntPtr nativePointer);
    public sealed virtual IntPtr CreateInvoker(MValueFunctionCallback function);
    public sealed virtual void DestroyInvoker(IntPtr invoker);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class AltV.Net.Shared.SharedNativeResource : object {
    protected ISharedCore core;
    [CompilerGeneratedAttribute]
private IntPtr <NativePointer>k__BackingField;
    [NullableAttribute("2")]
private string name;
    [NullableAttribute("2")]
private string type;
    private String[] dependencies;
    private String[] dependants;
    public IntPtr NativePointer { get; }
    public ISharedCSharpResourceImpl CSharpResourceImpl { get; }
    public IntPtr ResourceImplPtr { get; }
    public string Name { get; }
    public string Type { get; }
    public bool IsStarted { get; }
    public String[] Dependencies { get; }
    public String[] Dependants { get; }
    internal SharedNativeResource(ISharedCore core, IntPtr nativePointer);
    [CompilerGeneratedAttribute]
public sealed virtual IntPtr get_NativePointer();
    public abstract virtual ISharedCSharpResourceImpl get_CSharpResourceImpl();
    public sealed virtual IntPtr get_ResourceImplPtr();
    public sealed virtual string get_Name();
    public sealed virtual string get_Type();
    public sealed virtual bool get_IsStarted();
    public sealed virtual String[] get_Dependencies();
    public sealed virtual String[] get_Dependants();
    public sealed virtual void SetExport(string key, object value);
    public void SetExport(string key, MValueConst& value);
    public sealed virtual object GetExport(string key);
    public sealed virtual bool GetExport(string key, MValueConst& mValue);
    public sealed virtual IConfig GetConfig();
    private sealed virtual override void AltV.Net.Shared.ISharedNativeResource.SetExport(string key, MValueConst& modreq(System.Runtime.InteropServices.InAttribute) value);
}
[IsReadOnlyAttribute]
public class AltV.Net.Shared.Utils.FunctionTable : ValueType {
    private UInt32 Size;
    private IntPtr Hashes;
    private IntPtr Pointers;
    [NullableContextAttribute("1")]
public Dictionary`2<ulong, IntPtr> GetTable();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AltV.Net.Shared.Utils.MemoryUtils : object {
    public static IntPtr StringToHGlobalUtf8(string str);
    public static IntPtr ByteArrayToHGlobal(Byte[] bytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class AltV.Net.Shared.Utils.Utils : object {
    public static UInt32 Hash(string stringToHash);
    public static T GetCastedMValue(MValueConst mValue);
}
public interface AltV.Net.Types.INative {
    public IntPtr NativePointer { get; }
    public bool Exists { get; }
    public abstract virtual IntPtr get_NativePointer();
    public abstract virtual bool get_Exists();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NativeIntegerAttribute : Attribute {
    public Boolean[] TransformFlags;
    public NativeIntegerAttribute(Boolean[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
