[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Amazon.CDK.AWS.CertificateManager.Certificate", "@aws-cdk/aws-certificatemanager.Certificate", "[{"name":"scope","type":{"fqn":"constructs.Construct"}},{"name":"id","type":{"primitive":"string"}},{"name":"props","type":{"fqn":"@aws-cdk/aws-certificatemanager.CertificateProps"}}]")]
public class Amazon.CDK.AWS.CertificateManager.Certificate : Resource {
    [JsiiPropertyAttribute("certificateArn", "{"primitive":"string"}", "False", "False")]
public string CertificateArn { get; }
    [NullableAttribute("2")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("region", "{"primitive":"string"}", "True", "False")]
protected string Region { get; }
    public Certificate(Construct scope, string id, ICertificateProps props);
    [EditorBrowsableAttribute("1")]
protected Certificate(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected Certificate(DeputyProps props);
    private static DeputyProps _MakeDeputyProps(Construct scope, string id, ICertificateProps props);
    [JsiiMethodAttribute("fromCertificateArn", "{"type":{"fqn":"@aws-cdk/aws-certificatemanager.ICertificate"}}", "[{"name":"scope","type":{"fqn":"constructs.Construct"}},{"name":"id","type":{"primitive":"string"}},{"name":"certificateArn","type":{"primitive":"string"}}]", "False", "False")]
public static ICertificate FromCertificateArn(Construct scope, string id, string certificateArn);
    [JsiiMethodAttribute("metricDaysToExpiry", "{"type":{"fqn":"@aws-cdk/aws-cloudwatch.Metric"}}", "[{"name":"props","optional":true,"type":{"fqn":"@aws-cdk/aws-cloudwatch.MetricOptions"}}]", "False", "False")]
public virtual Metric MetricDaysToExpiry(IMetricOptions props);
    public virtual string get_CertificateArn();
    [NullableContextAttribute("2")]
protected virtual string get_Region();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiByValueAttribute("@aws-cdk/aws-certificatemanager.CertificateProps")]
public class Amazon.CDK.AWS.CertificateManager.CertificateProps : object {
    [CompilerGeneratedAttribute]
private string <DomainName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SubjectAlternativeNames>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private CertificateValidation <Validation>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ValidationDomains>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ValidationMethod> <ValidationMethod>k__BackingField;
    [JsiiPropertyAttribute("domainName", "{"primitive":"string"}", "False", "False")]
public string DomainName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("subjectAlternativeNames", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "True", "False")]
public String[] SubjectAlternativeNames { get; public set; }
    [NullableAttribute("2")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("validation", "{"fqn":"@aws-cdk/aws-certificatemanager.CertificateValidation"}", "True", "False")]
public CertificateValidation Validation { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("validationDomains", "{"collection":{"elementtype":{"primitive":"string"},"kind":"map"}}", "True", "False")]
[ObsoleteAttribute("use `validation` instead.")]
public IDictionary`2<string, string> ValidationDomains { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("validationMethod", "{"fqn":"@aws-cdk/aws-certificatemanager.ValidationMethod"}", "True", "False")]
[ObsoleteAttribute("use `validation` instead.")]
public Nullable`1<ValidationMethod> ValidationMethod { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_DomainName();
    [CompilerGeneratedAttribute]
public void set_DomainName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_SubjectAlternativeNames();
    [CompilerGeneratedAttribute]
public void set_SubjectAlternativeNames(String[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual CertificateValidation get_Validation();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Validation(CertificateValidation value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_ValidationDomains();
    [CompilerGeneratedAttribute]
public void set_ValidationDomains(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ValidationMethod> get_ValidationMethod();
    [CompilerGeneratedAttribute]
public void set_ValidationMethod(Nullable`1<ValidationMethod> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Amazon.CDK.AWS.CertificateManager.CertificateValidation", "@aws-cdk/aws-certificatemanager.CertificateValidation", "")]
public class Amazon.CDK.AWS.CertificateManager.CertificateValidation : DeputyBase {
    [JsiiPropertyAttribute("method", "{"fqn":"@aws-cdk/aws-certificatemanager.ValidationMethod"}", "False", "False")]
public ValidationMethod Method { get; }
    [JsiiPropertyAttribute("props", "{"fqn":"@aws-cdk/aws-certificatemanager.CertificationValidationProps"}", "False", "False")]
public ICertificationValidationProps Props { get; }
    [EditorBrowsableAttribute("1")]
protected CertificateValidation(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected CertificateValidation(DeputyProps props);
    [JsiiMethodAttribute("fromDns", "{"type":{"fqn":"@aws-cdk/aws-certificatemanager.CertificateValidation"}}", "[{"docs":{"summary":"the hosted zone where DNS records must be created."},"name":"hostedZone","optional":true,"type":{"fqn":"@aws-cdk/aws-route53.IHostedZone"}}]", "False", "False")]
public static CertificateValidation FromDns(IHostedZone hostedZone);
    [JsiiMethodAttribute("fromDnsMultiZone", "{"type":{"fqn":"@aws-cdk/aws-certificatemanager.CertificateValidation"}}", "[{"docs":{"summary":"a map of hosted zones where DNS records must be created for the domains in the certificate."},"name":"hostedZones","type":{"collection":{"elementtype":{"fqn":"@aws-cdk/aws-route53.IHostedZone"},"kind":"map"}}}]", "False", "False")]
public static CertificateValidation FromDnsMultiZone(IDictionary`2<string, IHostedZone> hostedZones);
    [JsiiMethodAttribute("fromEmail", "{"type":{"fqn":"@aws-cdk/aws-certificatemanager.CertificateValidation"}}", "[{"docs":{"summary":"a map of validation domains to use for domains in the certificate."},"name":"validationDomains","optional":true,"type":{"collection":{"elementtype":{"primitive":"string"},"kind":"map"}}}]", "False", "False")]
public static CertificateValidation FromEmail(IDictionary`2<string, string> validationDomains);
    public virtual ValidationMethod get_Method();
    public virtual ICertificationValidationProps get_Props();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsiiByValueAttribute("@aws-cdk/aws-certificatemanager.CertificationValidationProps")]
public class Amazon.CDK.AWS.CertificateManager.CertificationValidationProps : object {
    [CompilerGeneratedAttribute]
private IHostedZone <HostedZone>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, IHostedZone> <HostedZones>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ValidationMethod> <Method>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ValidationDomains>k__BackingField;
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("hostedZone", "{"fqn":"@aws-cdk/aws-route53.IHostedZone"}", "True", "False")]
public IHostedZone HostedZone { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("hostedZones", "{"collection":{"elementtype":{"fqn":"@aws-cdk/aws-route53.IHostedZone"},"kind":"map"}}", "True", "False")]
public IDictionary`2<string, IHostedZone> HostedZones { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("method", "{"fqn":"@aws-cdk/aws-certificatemanager.ValidationMethod"}", "True", "False")]
public Nullable`1<ValidationMethod> Method { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("validationDomains", "{"collection":{"elementtype":{"primitive":"string"},"kind":"map"}}", "True", "False")]
public IDictionary`2<string, string> ValidationDomains { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IHostedZone get_HostedZone();
    [CompilerGeneratedAttribute]
public void set_HostedZone(IHostedZone value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, IHostedZone> get_HostedZones();
    [CompilerGeneratedAttribute]
public void set_HostedZones(IDictionary`2<string, IHostedZone> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ValidationMethod> get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(Nullable`1<ValidationMethod> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_ValidationDomains();
    [CompilerGeneratedAttribute]
public void set_ValidationDomains(IDictionary`2<string, string> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Amazon.CDK.AWS.CertificateManager.CfnAccount", "@aws-cdk/aws-certificatemanager.CfnAccount", "[{"docs":{"summary":"- scope in which this resource is defined."},"name":"scope","type":{"fqn":"@aws-cdk/core.Construct"}},{"docs":{"summary":"- scoped id of the resource."},"name":"id","type":{"primitive":"string"}},{"docs":{"summary":"- resource properties."},"name":"props","type":{"fqn":"@aws-cdk/aws-certificatemanager.CfnAccountProps"}}]")]
public class Amazon.CDK.AWS.CertificateManager.CfnAccount : CfnResource {
    [CompilerGeneratedAttribute]
private static string <CFN_RESOURCE_TYPE_NAME>k__BackingField;
    [JsiiPropertyAttribute("CFN_RESOURCE_TYPE_NAME", "{"primitive":"string"}", "False", "False")]
public static string CFN_RESOURCE_TYPE_NAME { get; }
    [JsiiPropertyAttribute("attrAccountId", "{"primitive":"string"}", "False", "False")]
public string AttrAccountId { get; }
    [JsiiPropertyAttribute("cfnProperties", "{"collection":{"elementtype":{"primitive":"any"},"kind":"map"}}", "False", "False")]
protected IDictionary`2<string, object> CfnProperties { get; }
    [JsiiPropertyAttribute("expiryEventsConfiguration", "{"union":{"types":[{"fqn":"@aws-cdk/aws-certificatemanager.CfnAccount.ExpiryEventsConfigurationProperty"},{"fqn":"@aws-cdk/core.IResolvable"}]}}", "False", "False")]
public object ExpiryEventsConfiguration { get; public set; }
    public CfnAccount(Construct scope, string id, ICfnAccountProps props);
    [EditorBrowsableAttribute("1")]
protected CfnAccount(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected CfnAccount(DeputyProps props);
    private static CfnAccount();
    private static DeputyProps _MakeDeputyProps(Construct scope, string id, ICfnAccountProps props);
    [JsiiMethodAttribute("inspect", "", "[{"docs":{"summary":"- tree inspector to collect and process attributes."},"name":"inspector","type":{"fqn":"@aws-cdk/core.TreeInspector"}}]", "False", "False")]
public virtual void Inspect(TreeInspector inspector);
    [JsiiMethodAttribute("renderProperties", "{"type":{"collection":{"elementtype":{"primitive":"any"},"kind":"map"}}}", "[{"name":"props","type":{"collection":{"elementtype":{"primitive":"any"},"kind":"map"}}}]", "False", "False")]
protected virtual IDictionary`2<string, object> RenderProperties(IDictionary`2<string, object> props);
    [CompilerGeneratedAttribute]
public static string get_CFN_RESOURCE_TYPE_NAME();
    public virtual string get_AttrAccountId();
    protected virtual IDictionary`2<string, object> get_CfnProperties();
    public virtual object get_ExpiryEventsConfiguration();
    public virtual void set_ExpiryEventsConfiguration(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiByValueAttribute("@aws-cdk/aws-certificatemanager.CfnAccountProps")]
public class Amazon.CDK.AWS.CertificateManager.CfnAccountProps : object {
    private object _expiryEventsConfiguration;
    [JsiiPropertyAttribute("expiryEventsConfiguration", "{"union":{"types":[{"fqn":"@aws-cdk/aws-certificatemanager.CfnAccount.ExpiryEventsConfigurationProperty"},{"fqn":"@aws-cdk/core.IResolvable"}]}}", "False", "False")]
public object ExpiryEventsConfiguration { get; public set; }
    public sealed virtual object get_ExpiryEventsConfiguration();
    public void set_ExpiryEventsConfiguration(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Amazon.CDK.AWS.CertificateManager.CfnCertificate", "@aws-cdk/aws-certificatemanager.CfnCertificate", "[{"docs":{"summary":"- scope in which this resource is defined."},"name":"scope","type":{"fqn":"@aws-cdk/core.Construct"}},{"docs":{"summary":"- scoped id of the resource."},"name":"id","type":{"primitive":"string"}},{"docs":{"summary":"- resource properties."},"name":"props","type":{"fqn":"@aws-cdk/aws-certificatemanager.CfnCertificateProps"}}]")]
public class Amazon.CDK.AWS.CertificateManager.CfnCertificate : CfnResource {
    [CompilerGeneratedAttribute]
private static string <CFN_RESOURCE_TYPE_NAME>k__BackingField;
    [JsiiPropertyAttribute("CFN_RESOURCE_TYPE_NAME", "{"primitive":"string"}", "False", "False")]
public static string CFN_RESOURCE_TYPE_NAME { get; }
    [JsiiPropertyAttribute("cfnProperties", "{"collection":{"elementtype":{"primitive":"any"},"kind":"map"}}", "False", "False")]
protected IDictionary`2<string, object> CfnProperties { get; }
    [JsiiPropertyAttribute("tags", "{"fqn":"@aws-cdk/core.TagManager"}", "False", "False")]
public TagManager Tags { get; }
    [JsiiPropertyAttribute("domainName", "{"primitive":"string"}", "False", "False")]
public string DomainName { get; public set; }
    [NullableAttribute("2")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("certificateAuthorityArn", "{"primitive":"string"}", "True", "False")]
public string CertificateAuthorityArn { get; public set; }
    [NullableAttribute("2")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("certificateTransparencyLoggingPreference", "{"primitive":"string"}", "True", "False")]
public string CertificateTransparencyLoggingPreference { get; public set; }
    [NullableAttribute("2")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("domainValidationOptions", "{"union":{"types":[{"fqn":"@aws-cdk/core.IResolvable"},{"collection":{"elementtype":{"union":{"types":[{"fqn":"@aws-cdk/core.IResolvable"},{"fqn":"@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty"}]}},"kind":"array"}}]}}", "True", "False")]
public object DomainValidationOptions { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("subjectAlternativeNames", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "True", "False")]
public String[] SubjectAlternativeNames { get; public set; }
    [NullableAttribute("2")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("validationMethod", "{"primitive":"string"}", "True", "False")]
public string ValidationMethod { get; public set; }
    public CfnCertificate(Construct scope, string id, ICfnCertificateProps props);
    [EditorBrowsableAttribute("1")]
protected CfnCertificate(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected CfnCertificate(DeputyProps props);
    private static CfnCertificate();
    private static DeputyProps _MakeDeputyProps(Construct scope, string id, ICfnCertificateProps props);
    [JsiiMethodAttribute("inspect", "", "[{"docs":{"summary":"- tree inspector to collect and process attributes."},"name":"inspector","type":{"fqn":"@aws-cdk/core.TreeInspector"}}]", "False", "False")]
public virtual void Inspect(TreeInspector inspector);
    [JsiiMethodAttribute("renderProperties", "{"type":{"collection":{"elementtype":{"primitive":"any"},"kind":"map"}}}", "[{"name":"props","type":{"collection":{"elementtype":{"primitive":"any"},"kind":"map"}}}]", "False", "False")]
protected virtual IDictionary`2<string, object> RenderProperties(IDictionary`2<string, object> props);
    [CompilerGeneratedAttribute]
public static string get_CFN_RESOURCE_TYPE_NAME();
    protected virtual IDictionary`2<string, object> get_CfnProperties();
    public virtual TagManager get_Tags();
    public virtual string get_DomainName();
    public virtual void set_DomainName(string value);
    [NullableContextAttribute("2")]
public virtual string get_CertificateAuthorityArn();
    [NullableContextAttribute("2")]
public virtual void set_CertificateAuthorityArn(string value);
    [NullableContextAttribute("2")]
public virtual string get_CertificateTransparencyLoggingPreference();
    [NullableContextAttribute("2")]
public virtual void set_CertificateTransparencyLoggingPreference(string value);
    [NullableContextAttribute("2")]
public virtual object get_DomainValidationOptions();
    [NullableContextAttribute("2")]
public virtual void set_DomainValidationOptions(object value);
    public virtual String[] get_SubjectAlternativeNames();
    public virtual void set_SubjectAlternativeNames(String[] value);
    [NullableContextAttribute("2")]
public virtual string get_ValidationMethod();
    [NullableContextAttribute("2")]
public virtual void set_ValidationMethod(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsiiByValueAttribute("@aws-cdk/aws-certificatemanager.CfnCertificateProps")]
public class Amazon.CDK.AWS.CertificateManager.CfnCertificateProps : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <DomainName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateAuthorityArn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateTransparencyLoggingPreference>k__BackingField;
    private object _domainValidationOptions;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SubjectAlternativeNames>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ICfnTag[] <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationMethod>k__BackingField;
    [NullableAttribute("1")]
[JsiiPropertyAttribute("domainName", "{"primitive":"string"}", "False", "False")]
public string DomainName { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("certificateAuthorityArn", "{"primitive":"string"}", "True", "False")]
public string CertificateAuthorityArn { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("certificateTransparencyLoggingPreference", "{"primitive":"string"}", "True", "False")]
public string CertificateTransparencyLoggingPreference { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("domainValidationOptions", "{"union":{"types":[{"fqn":"@aws-cdk/core.IResolvable"},{"collection":{"elementtype":{"union":{"types":[{"fqn":"@aws-cdk/core.IResolvable"},{"fqn":"@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty"}]}},"kind":"array"}}]}}", "True", "False")]
public object DomainValidationOptions { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("subjectAlternativeNames", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "True", "False")]
public String[] SubjectAlternativeNames { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("tags", "{"collection":{"elementtype":{"fqn":"@aws-cdk/core.CfnTag"},"kind":"array"}}", "True", "False")]
public ICfnTag[] Tags { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("validationMethod", "{"primitive":"string"}", "True", "False")]
public string ValidationMethod { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_DomainName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_DomainName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CertificateAuthorityArn();
    [CompilerGeneratedAttribute]
public void set_CertificateAuthorityArn(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CertificateTransparencyLoggingPreference();
    [CompilerGeneratedAttribute]
public void set_CertificateTransparencyLoggingPreference(string value);
    public sealed virtual object get_DomainValidationOptions();
    public void set_DomainValidationOptions(object value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_SubjectAlternativeNames();
    [CompilerGeneratedAttribute]
public void set_SubjectAlternativeNames(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual ICfnTag[] get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(ICfnTag[] value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ValidationMethod();
    [CompilerGeneratedAttribute]
public void set_ValidationMethod(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Amazon.CDK.AWS.CertificateManager.DnsValidatedCertificate", "@aws-cdk/aws-certificatemanager.DnsValidatedCertificate", "[{"name":"scope","type":{"fqn":"constructs.Construct"}},{"name":"id","type":{"primitive":"string"}},{"name":"props","type":{"fqn":"@aws-cdk/aws-certificatemanager.DnsValidatedCertificateProps"}}]")]
public class Amazon.CDK.AWS.CertificateManager.DnsValidatedCertificate : Resource {
    [JsiiPropertyAttribute("certificateArn", "{"primitive":"string"}", "False", "False")]
public string CertificateArn { get; }
    [JsiiPropertyAttribute("tags", "{"fqn":"@aws-cdk/core.TagManager"}", "False", "False")]
public TagManager Tags { get; }
    [NullableAttribute("2")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("region", "{"primitive":"string"}", "True", "False")]
protected string Region { get; }
    public DnsValidatedCertificate(Construct scope, string id, IDnsValidatedCertificateProps props);
    [EditorBrowsableAttribute("1")]
protected DnsValidatedCertificate(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected DnsValidatedCertificate(DeputyProps props);
    private static DeputyProps _MakeDeputyProps(Construct scope, string id, IDnsValidatedCertificateProps props);
    [JsiiMethodAttribute("metricDaysToExpiry", "{"type":{"fqn":"@aws-cdk/aws-cloudwatch.Metric"}}", "[{"name":"props","optional":true,"type":{"fqn":"@aws-cdk/aws-cloudwatch.MetricOptions"}}]", "False", "False")]
public virtual Metric MetricDaysToExpiry(IMetricOptions props);
    [JsiiMethodAttribute("validate", "{"type":{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}}", "", "False", "False")]
protected virtual String[] Validate();
    public virtual string get_CertificateArn();
    public virtual TagManager get_Tags();
    [NullableContextAttribute("2")]
protected virtual string get_Region();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsiiByValueAttribute("@aws-cdk/aws-certificatemanager.DnsValidatedCertificateProps")]
public class Amazon.CDK.AWS.CertificateManager.DnsValidatedCertificateProps : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IHostedZone <HostedZone>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CleanupRoute53Records>k__BackingField;
    [CompilerGeneratedAttribute]
private IRole <CustomResourceRole>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Route53Endpoint>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <DomainName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SubjectAlternativeNames>k__BackingField;
    [CompilerGeneratedAttribute]
private CertificateValidation <Validation>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ValidationDomains>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ValidationMethod> <ValidationMethod>k__BackingField;
    [NullableAttribute("1")]
[JsiiPropertyAttribute("hostedZone", "{"fqn":"@aws-cdk/aws-route53.IHostedZone"}", "False", "False")]
public IHostedZone HostedZone { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("cleanupRoute53Records", "{"primitive":"boolean"}", "True", "False")]
public Nullable`1<bool> CleanupRoute53Records { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("customResourceRole", "{"fqn":"@aws-cdk/aws-iam.IRole"}", "True", "False")]
public IRole CustomResourceRole { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("region", "{"primitive":"string"}", "True", "False")]
public string Region { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("route53Endpoint", "{"primitive":"string"}", "True", "False")]
public string Route53Endpoint { get; public set; }
    [NullableAttribute("1")]
[JsiiPropertyAttribute("domainName", "{"primitive":"string"}", "False", "False")]
public string DomainName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("subjectAlternativeNames", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "True", "False")]
public String[] SubjectAlternativeNames { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("validation", "{"fqn":"@aws-cdk/aws-certificatemanager.CertificateValidation"}", "True", "False")]
public CertificateValidation Validation { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("validationDomains", "{"collection":{"elementtype":{"primitive":"string"},"kind":"map"}}", "True", "False")]
[ObsoleteAttribute("use `validation` instead.")]
public IDictionary`2<string, string> ValidationDomains { get; public set; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("validationMethod", "{"fqn":"@aws-cdk/aws-certificatemanager.ValidationMethod"}", "True", "False")]
[ObsoleteAttribute("use `validation` instead.")]
public Nullable`1<ValidationMethod> ValidationMethod { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual IHostedZone get_HostedZone();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_HostedZone(IHostedZone value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CleanupRoute53Records();
    [CompilerGeneratedAttribute]
public void set_CleanupRoute53Records(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IRole get_CustomResourceRole();
    [CompilerGeneratedAttribute]
public void set_CustomResourceRole(IRole value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Route53Endpoint();
    [CompilerGeneratedAttribute]
public void set_Route53Endpoint(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_DomainName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_DomainName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_SubjectAlternativeNames();
    [CompilerGeneratedAttribute]
public void set_SubjectAlternativeNames(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual CertificateValidation get_Validation();
    [CompilerGeneratedAttribute]
public void set_Validation(CertificateValidation value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_ValidationDomains();
    [CompilerGeneratedAttribute]
public void set_ValidationDomains(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ValidationMethod> get_ValidationMethod();
    [CompilerGeneratedAttribute]
public void set_ValidationMethod(Nullable`1<ValidationMethod> value);
}
[JsiiInterfaceAttribute("Amazon.CDK.AWS.CertificateManager.ICertificate", "@aws-cdk/aws-certificatemanager.ICertificate")]
public interface Amazon.CDK.AWS.CertificateManager.ICertificate {
    [NullableAttribute("1")]
[JsiiPropertyAttribute("certificateArn", "{"primitive":"string"}", "False", "False")]
public string CertificateArn { get; }
    [NullableContextAttribute("1")]
public abstract virtual string get_CertificateArn();
    [NullableContextAttribute("1")]
[JsiiMethodAttribute("metricDaysToExpiry", "{"type":{"fqn":"@aws-cdk/aws-cloudwatch.Metric"}}", "[{"name":"props","optional":true,"type":{"fqn":"@aws-cdk/aws-cloudwatch.MetricOptions"}}]", "False", "False")]
public abstract virtual Metric MetricDaysToExpiry(IMetricOptions props);
}
[NullableContextAttribute("1")]
[JsiiInterfaceAttribute("Amazon.CDK.AWS.CertificateManager.ICertificateProps", "@aws-cdk/aws-certificatemanager.CertificateProps")]
public interface Amazon.CDK.AWS.CertificateManager.ICertificateProps {
    [JsiiPropertyAttribute("domainName", "{"primitive":"string"}", "False", "False")]
public string DomainName { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiPropertyAttribute("subjectAlternativeNames", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "True", "False")]
[JsiiOptionalAttribute]
public String[] SubjectAlternativeNames { get; }
    [NullableAttribute("2")]
[JsiiPropertyAttribute("validation", "{"fqn":"@aws-cdk/aws-certificatemanager.CertificateValidation"}", "True", "False")]
[JsiiOptionalAttribute]
public CertificateValidation Validation { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiPropertyAttribute("validationDomains", "{"collection":{"elementtype":{"primitive":"string"},"kind":"map"}}", "True", "False")]
[ObsoleteAttribute("use `validation` instead.")]
[JsiiOptionalAttribute]
public IDictionary`2<string, string> ValidationDomains { get; }
    [JsiiPropertyAttribute("validationMethod", "{"fqn":"@aws-cdk/aws-certificatemanager.ValidationMethod"}", "True", "False")]
[ObsoleteAttribute("use `validation` instead.")]
[JsiiOptionalAttribute]
public Nullable`1<ValidationMethod> ValidationMethod { get; }
    public abstract virtual string get_DomainName();
    public virtual String[] get_SubjectAlternativeNames();
    [NullableContextAttribute("2")]
public virtual CertificateValidation get_Validation();
    public virtual IDictionary`2<string, string> get_ValidationDomains();
    public virtual Nullable`1<ValidationMethod> get_ValidationMethod();
}
[NullableContextAttribute("2")]
[JsiiInterfaceAttribute("Amazon.CDK.AWS.CertificateManager.ICertificationValidationProps", "@aws-cdk/aws-certificatemanager.CertificationValidationProps")]
public interface Amazon.CDK.AWS.CertificateManager.ICertificationValidationProps {
    [JsiiPropertyAttribute("hostedZone", "{"fqn":"@aws-cdk/aws-route53.IHostedZone"}", "True", "False")]
[JsiiOptionalAttribute]
public IHostedZone HostedZone { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiPropertyAttribute("hostedZones", "{"collection":{"elementtype":{"fqn":"@aws-cdk/aws-route53.IHostedZone"},"kind":"map"}}", "True", "False")]
[JsiiOptionalAttribute]
public IDictionary`2<string, IHostedZone> HostedZones { get; }
    [JsiiPropertyAttribute("method", "{"fqn":"@aws-cdk/aws-certificatemanager.ValidationMethod"}", "True", "False")]
[JsiiOptionalAttribute]
public Nullable`1<ValidationMethod> Method { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiPropertyAttribute("validationDomains", "{"collection":{"elementtype":{"primitive":"string"},"kind":"map"}}", "True", "False")]
[JsiiOptionalAttribute]
public IDictionary`2<string, string> ValidationDomains { get; }
    public virtual IHostedZone get_HostedZone();
    public virtual IDictionary`2<string, IHostedZone> get_HostedZones();
    public virtual Nullable`1<ValidationMethod> get_Method();
    public virtual IDictionary`2<string, string> get_ValidationDomains();
}
[NullableContextAttribute("1")]
[JsiiInterfaceAttribute("Amazon.CDK.AWS.CertificateManager.ICfnAccountProps", "@aws-cdk/aws-certificatemanager.CfnAccountProps")]
public interface Amazon.CDK.AWS.CertificateManager.ICfnAccountProps {
    [JsiiPropertyAttribute("expiryEventsConfiguration", "{"union":{"types":[{"fqn":"@aws-cdk/aws-certificatemanager.CfnAccount.ExpiryEventsConfigurationProperty"},{"fqn":"@aws-cdk/core.IResolvable"}]}}", "False", "False")]
public object ExpiryEventsConfiguration { get; }
    public abstract virtual object get_ExpiryEventsConfiguration();
}
[NullableContextAttribute("2")]
[JsiiInterfaceAttribute("Amazon.CDK.AWS.CertificateManager.ICfnCertificateProps", "@aws-cdk/aws-certificatemanager.CfnCertificateProps")]
public interface Amazon.CDK.AWS.CertificateManager.ICfnCertificateProps {
    [NullableAttribute("1")]
[JsiiPropertyAttribute("domainName", "{"primitive":"string"}", "False", "False")]
public string DomainName { get; }
    [JsiiPropertyAttribute("certificateAuthorityArn", "{"primitive":"string"}", "True", "False")]
[JsiiOptionalAttribute]
public string CertificateAuthorityArn { get; }
    [JsiiPropertyAttribute("certificateTransparencyLoggingPreference", "{"primitive":"string"}", "True", "False")]
[JsiiOptionalAttribute]
public string CertificateTransparencyLoggingPreference { get; }
    [JsiiPropertyAttribute("domainValidationOptions", "{"union":{"types":[{"fqn":"@aws-cdk/core.IResolvable"},{"collection":{"elementtype":{"union":{"types":[{"fqn":"@aws-cdk/core.IResolvable"},{"fqn":"@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty"}]}},"kind":"array"}}]}}", "True", "False")]
[JsiiOptionalAttribute]
public object DomainValidationOptions { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiPropertyAttribute("subjectAlternativeNames", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "True", "False")]
[JsiiOptionalAttribute]
public String[] SubjectAlternativeNames { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiPropertyAttribute("tags", "{"collection":{"elementtype":{"fqn":"@aws-cdk/core.CfnTag"},"kind":"array"}}", "True", "False")]
[JsiiOptionalAttribute]
public ICfnTag[] Tags { get; }
    [JsiiPropertyAttribute("validationMethod", "{"primitive":"string"}", "True", "False")]
[JsiiOptionalAttribute]
public string ValidationMethod { get; }
    [NullableContextAttribute("1")]
public abstract virtual string get_DomainName();
    public virtual string get_CertificateAuthorityArn();
    public virtual string get_CertificateTransparencyLoggingPreference();
    public virtual object get_DomainValidationOptions();
    public virtual String[] get_SubjectAlternativeNames();
    public virtual ICfnTag[] get_Tags();
    public virtual string get_ValidationMethod();
}
[NullableContextAttribute("2")]
[JsiiInterfaceAttribute("Amazon.CDK.AWS.CertificateManager.IDnsValidatedCertificateProps", "@aws-cdk/aws-certificatemanager.DnsValidatedCertificateProps")]
public interface Amazon.CDK.AWS.CertificateManager.IDnsValidatedCertificateProps {
    [NullableAttribute("1")]
[JsiiPropertyAttribute("hostedZone", "{"fqn":"@aws-cdk/aws-route53.IHostedZone"}", "False", "False")]
public IHostedZone HostedZone { get; }
    [JsiiPropertyAttribute("cleanupRoute53Records", "{"primitive":"boolean"}", "True", "False")]
[JsiiOptionalAttribute]
public Nullable`1<bool> CleanupRoute53Records { get; }
    [JsiiPropertyAttribute("customResourceRole", "{"fqn":"@aws-cdk/aws-iam.IRole"}", "True", "False")]
[JsiiOptionalAttribute]
public IRole CustomResourceRole { get; }
    [JsiiPropertyAttribute("region", "{"primitive":"string"}", "True", "False")]
[JsiiOptionalAttribute]
public string Region { get; }
    [JsiiPropertyAttribute("route53Endpoint", "{"primitive":"string"}", "True", "False")]
[JsiiOptionalAttribute]
public string Route53Endpoint { get; }
    [NullableContextAttribute("1")]
public abstract virtual IHostedZone get_HostedZone();
    public virtual Nullable`1<bool> get_CleanupRoute53Records();
    public virtual IRole get_CustomResourceRole();
    public virtual string get_Region();
    public virtual string get_Route53Endpoint();
}
public class Amazon.CDK.AWS.CertificateManager.Internal.DependencyResolution.Anchor : object {
}
[NullableContextAttribute("1")]
[JsiiInterfaceAttribute("Amazon.CDK.AWS.CertificateManager.IPrivateCertificateProps", "@aws-cdk/aws-certificatemanager.PrivateCertificateProps")]
public interface Amazon.CDK.AWS.CertificateManager.IPrivateCertificateProps {
    [JsiiPropertyAttribute("certificateAuthority", "{"fqn":"@aws-cdk/aws-acmpca.ICertificateAuthority"}", "False", "False")]
public ICertificateAuthority CertificateAuthority { get; }
    [JsiiPropertyAttribute("domainName", "{"primitive":"string"}", "False", "False")]
public string DomainName { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiPropertyAttribute("subjectAlternativeNames", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "True", "False")]
[JsiiOptionalAttribute]
public String[] SubjectAlternativeNames { get; }
    public abstract virtual ICertificateAuthority get_CertificateAuthority();
    public abstract virtual string get_DomainName();
    public virtual String[] get_SubjectAlternativeNames();
}
[EditorBrowsableAttribute("1")]
public class Amazon.CDK.AWS.CertificateManager.NamespaceDoc : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Amazon.CDK.AWS.CertificateManager.PrivateCertificate", "@aws-cdk/aws-certificatemanager.PrivateCertificate", "[{"name":"scope","type":{"fqn":"constructs.Construct"}},{"name":"id","type":{"primitive":"string"}},{"name":"props","type":{"fqn":"@aws-cdk/aws-certificatemanager.PrivateCertificateProps"}}]")]
public class Amazon.CDK.AWS.CertificateManager.PrivateCertificate : Resource {
    [JsiiPropertyAttribute("certificateArn", "{"primitive":"string"}", "False", "False")]
public string CertificateArn { get; }
    [NullableAttribute("2")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("region", "{"primitive":"string"}", "True", "False")]
protected string Region { get; }
    public PrivateCertificate(Construct scope, string id, IPrivateCertificateProps props);
    [EditorBrowsableAttribute("1")]
protected PrivateCertificate(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected PrivateCertificate(DeputyProps props);
    private static DeputyProps _MakeDeputyProps(Construct scope, string id, IPrivateCertificateProps props);
    [JsiiMethodAttribute("fromCertificateArn", "{"type":{"fqn":"@aws-cdk/aws-certificatemanager.ICertificate"}}", "[{"name":"scope","type":{"fqn":"constructs.Construct"}},{"name":"id","type":{"primitive":"string"}},{"name":"certificateArn","type":{"primitive":"string"}}]", "False", "False")]
public static ICertificate FromCertificateArn(Construct scope, string id, string certificateArn);
    [JsiiMethodAttribute("metricDaysToExpiry", "{"type":{"fqn":"@aws-cdk/aws-cloudwatch.Metric"}}", "[{"name":"props","optional":true,"type":{"fqn":"@aws-cdk/aws-cloudwatch.MetricOptions"}}]", "False", "False")]
public virtual Metric MetricDaysToExpiry(IMetricOptions props);
    public virtual string get_CertificateArn();
    [NullableContextAttribute("2")]
protected virtual string get_Region();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiByValueAttribute("@aws-cdk/aws-certificatemanager.PrivateCertificateProps")]
public class Amazon.CDK.AWS.CertificateManager.PrivateCertificateProps : object {
    [CompilerGeneratedAttribute]
private ICertificateAuthority <CertificateAuthority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DomainName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SubjectAlternativeNames>k__BackingField;
    [JsiiPropertyAttribute("certificateAuthority", "{"fqn":"@aws-cdk/aws-acmpca.ICertificateAuthority"}", "False", "False")]
public ICertificateAuthority CertificateAuthority { get; public set; }
    [JsiiPropertyAttribute("domainName", "{"primitive":"string"}", "False", "False")]
public string DomainName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsiiOptionalAttribute]
[JsiiPropertyAttribute("subjectAlternativeNames", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "True", "False")]
public String[] SubjectAlternativeNames { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ICertificateAuthority get_CertificateAuthority();
    [CompilerGeneratedAttribute]
public void set_CertificateAuthority(ICertificateAuthority value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DomainName();
    [CompilerGeneratedAttribute]
public void set_DomainName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_SubjectAlternativeNames();
    [CompilerGeneratedAttribute]
public void set_SubjectAlternativeNames(String[] value);
}
[JsiiEnumAttribute("Amazon.CDK.AWS.CertificateManager.ValidationMethod", "@aws-cdk/aws-certificatemanager.ValidationMethod")]
public enum Amazon.CDK.AWS.CertificateManager.ValidationMethod : Enum {
    public int value__;
    [JsiiEnumMemberAttribute("EMAIL")]
public static ValidationMethod EMAIL;
    [JsiiEnumMemberAttribute("DNS")]
public static ValidationMethod DNS;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
