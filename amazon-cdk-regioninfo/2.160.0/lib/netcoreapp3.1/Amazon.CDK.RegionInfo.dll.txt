[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Amazon.CDK.RegionInfo.Default", "@aws-cdk/region-info.Default", "")]
[ObsoleteAttribute("- Service principals are now globally `<SERVICE>.amazonaws.com`, use iam.ServicePrincipal instead.")]
public class Amazon.CDK.RegionInfo.Default : DeputyBase {
    [CompilerGeneratedAttribute]
private static string <VPC_ENDPOINT_SERVICE_NAME_PREFIX>k__BackingField;
    [JsiiPropertyAttribute("VPC_ENDPOINT_SERVICE_NAME_PREFIX", "{"primitive":"string"}", "False", "False")]
[ObsoleteAttribute("- Use VpceEndpointService.DEFAULT_PREFIX instead")]
public static string VPC_ENDPOINT_SERVICE_NAME_PREFIX { get; }
    [EditorBrowsableAttribute("1")]
protected Default(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected Default(DeputyProps props);
    private static Default();
    [JsiiMethodAttribute("servicePrincipal", "{"type":{"primitive":"string"}}", "[{"docs":{"summary":"the name of the service (s3, s3.amazonaws.com, ...)."},"name":"serviceFqn","type":{"primitive":"string"}},{"docs":{"summary":"the region in which the service principal is needed."},"name":"region","type":{"primitive":"string"}},{"docs":{"summary":"deprecated and ignored."},"name":"urlSuffix","type":{"primitive":"string"}}]", "False", "False")]
[ObsoleteAttribute("- Service principals are now globally `<SERVICE>.amazonaws.com`, use iam.ServicePrincipal instead.")]
public static string ServicePrincipal(string serviceFqn, string region, string urlSuffix);
    [CompilerGeneratedAttribute]
public static string get_VPC_ENDPOINT_SERVICE_NAME_PREFIX();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Amazon.CDK.RegionInfo.Fact", "@aws-cdk/region-info.Fact", "")]
public class Amazon.CDK.RegionInfo.Fact : DeputyBase {
    [JsiiPropertyAttribute("names", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "False", "False")]
public static String[] Names { get; }
    [JsiiPropertyAttribute("regions", "{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}", "False", "False")]
public static String[] Regions { get; }
    [EditorBrowsableAttribute("1")]
protected Fact(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected Fact(DeputyProps props);
    [JsiiMethodAttribute("definedFacts", "{"type":{"collection":{"elementtype":{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}},"kind":"array"}}}", "", "False", "False")]
public static String[][] DefinedFacts();
    [JsiiMethodAttribute("find", "{"optional":true,"type":{"primitive":"string"}}", "[{"docs":{"summary":"the name of the region (e.g: `us-east-1`)."},"name":"region","type":{"primitive":"string"}},{"docs":{"summary":"the name of the fact being looked up (see the `FactName` class for details)."},"name":"name","type":{"primitive":"string"}}]", "False", "False")]
public static string Find(string region, string name);
    [JsiiMethodAttribute("register", "", "[{"docs":{"summary":"the new fact to be registered."},"name":"fact","type":{"fqn":"@aws-cdk/region-info.IFact"}},{"docs":{"summary":"whether new facts can replace existing facts or not."},"name":"allowReplacing","optional":true,"type":{"primitive":"boolean"}}]", "False", "False")]
public static void Register(IFact fact, Nullable`1<bool> allowReplacing);
    [JsiiMethodAttribute("requireFact", "{"type":{"primitive":"string"}}", "[{"docs":{"summary":"the name of the region (e.g: `us-east-1`)."},"name":"region","type":{"primitive":"string"}},{"docs":{"summary":"the name of the fact being looked up (see the `FactName` class for details)."},"name":"name","type":{"primitive":"string"}}]", "False", "False")]
public static string RequireFact(string region, string name);
    [JsiiMethodAttribute("unregister", "", "[{"docs":{"summary":"the region for which the fact is to be removed."},"name":"region","type":{"primitive":"string"}},{"docs":{"summary":"the name of the fact to remove."},"name":"name","type":{"primitive":"string"}},{"docs":{"summary":"the value that should be removed (removal will fail if the value is specified, but does not match the current stored value)."},"name":"value","optional":true,"type":{"primitive":"string"}}]", "False", "False")]
public static void Unregister(string region, string name, string value);
    public static String[] get_Names();
    public static String[] get_Regions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsiiClassAttribute("Amazon.CDK.RegionInfo.FactName", "@aws-cdk/region-info.FactName", "")]
public class Amazon.CDK.RegionInfo.FactName : DeputyBase {
    [CompilerGeneratedAttribute]
private static string <APPMESH_ECR_ACCOUNT>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <CDK_METADATA_RESOURCE_AVAILABLE>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <DLC_REPOSITORY_ACCOUNT>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <DOMAIN_SUFFIX>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <EBS_ENV_ENDPOINT_HOSTED_ZONE_ID>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <ELBV2_ACCOUNT>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <FIREHOSE_CIDR_BLOCK>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <IS_OPT_IN_REGION>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <LATEST_NODE_RUNTIME>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <PARTITION>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <S3_STATIC_WEBSITE_ENDPOINT>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <S3_STATIC_WEBSITE_ZONE_53_HOSTED_ZONE_ID>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <SAML_SIGN_ON_URL>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <VPC_ENDPOINT_SERVICE_NAME_PREFIX>k__BackingField;
    [JsiiPropertyAttribute("APPMESH_ECR_ACCOUNT", "{"primitive":"string"}", "False", "False")]
public static string APPMESH_ECR_ACCOUNT { get; }
    [JsiiPropertyAttribute("CDK_METADATA_RESOURCE_AVAILABLE", "{"primitive":"string"}", "False", "False")]
public static string CDK_METADATA_RESOURCE_AVAILABLE { get; }
    [JsiiPropertyAttribute("DLC_REPOSITORY_ACCOUNT", "{"primitive":"string"}", "False", "False")]
public static string DLC_REPOSITORY_ACCOUNT { get; }
    [JsiiPropertyAttribute("DOMAIN_SUFFIX", "{"primitive":"string"}", "False", "False")]
public static string DOMAIN_SUFFIX { get; }
    [JsiiPropertyAttribute("EBS_ENV_ENDPOINT_HOSTED_ZONE_ID", "{"primitive":"string"}", "False", "False")]
public static string EBS_ENV_ENDPOINT_HOSTED_ZONE_ID { get; }
    [JsiiPropertyAttribute("ELBV2_ACCOUNT", "{"primitive":"string"}", "False", "False")]
public static string ELBV2_ACCOUNT { get; }
    [JsiiPropertyAttribute("FIREHOSE_CIDR_BLOCK", "{"primitive":"string"}", "False", "False")]
public static string FIREHOSE_CIDR_BLOCK { get; }
    [JsiiPropertyAttribute("IS_OPT_IN_REGION", "{"primitive":"string"}", "False", "False")]
public static string IS_OPT_IN_REGION { get; }
    [JsiiPropertyAttribute("LATEST_NODE_RUNTIME", "{"primitive":"string"}", "False", "False")]
public static string LATEST_NODE_RUNTIME { get; }
    [JsiiPropertyAttribute("PARTITION", "{"primitive":"string"}", "False", "False")]
public static string PARTITION { get; }
    [JsiiPropertyAttribute("S3_STATIC_WEBSITE_ENDPOINT", "{"primitive":"string"}", "False", "False")]
public static string S3_STATIC_WEBSITE_ENDPOINT { get; }
    [JsiiPropertyAttribute("S3_STATIC_WEBSITE_ZONE_53_HOSTED_ZONE_ID", "{"primitive":"string"}", "False", "False")]
public static string S3_STATIC_WEBSITE_ZONE_53_HOSTED_ZONE_ID { get; }
    [JsiiPropertyAttribute("SAML_SIGN_ON_URL", "{"primitive":"string"}", "False", "False")]
public static string SAML_SIGN_ON_URL { get; }
    [JsiiPropertyAttribute("VPC_ENDPOINT_SERVICE_NAME_PREFIX", "{"primitive":"string"}", "False", "False")]
public static string VPC_ENDPOINT_SERVICE_NAME_PREFIX { get; }
    [EditorBrowsableAttribute("1")]
protected FactName(ByRefValue reference);
    [EditorBrowsableAttribute("1")]
protected FactName(DeputyProps props);
    private static FactName();
    private static DeputyProps _MakeDeputyProps();
    [JsiiMethodAttribute("adotLambdaLayer", "{"type":{"primitive":"string"}}", "[{"docs":{"summary":"the type of the ADOT lambda layer."},"name":"type","type":{"primitive":"string"}},{"docs":{"summary":"the layer version."},"name":"version","type":{"primitive":"string"}},{"docs":{"summary":"the Lambda Function architecture (e.g. 'x86_64' or 'arm64')."},"name":"architecture","type":{"primitive":"string"}}]", "False", "False")]
public static string AdotLambdaLayer(string type, string version, string architecture);
    [JsiiMethodAttribute("appConfigLambdaLayerVersion", "{"type":{"primitive":"string"}}", "[{"docs":{"summary":"The layer version."},"name":"version","type":{"primitive":"string"}},{"docs":{"summary":"The architecture (optional), defaults to x86_64."},"name":"arch","optional":true,"type":{"primitive":"string"}}]", "False", "False")]
public static string AppConfigLambdaLayerVersion(string version, string arch);
    [JsiiMethodAttribute("cloudwatchLambdaInsightsVersion", "{"type":{"primitive":"string"}}", "[{"name":"version","type":{"primitive":"string"}},{"name":"arch","optional":true,"type":{"primitive":"string"}}]", "False", "False")]
public static string CloudwatchLambdaInsightsVersion(string version, string arch);
    [JsiiMethodAttribute("paramsAndSecretsLambdaLayer", "{"type":{"primitive":"string"}}", "[{"docs":{"summary":"the layer version."},"name":"version","type":{"primitive":"string"}},{"docs":{"summary":"the Lambda Function architecture (e.g. 'x86_64' or 'arm64')."},"name":"architecture","type":{"primitive":"string"}}]", "False", "False")]
public static string ParamsAndSecretsLambdaLayer(string version, string architecture);
    [JsiiMethodAttribute("servicePrincipal", "{"type":{"primitive":"string"}}", "[{"docs":{"summary":"the service name, either simple (e.g: `s3`, `codedeploy`) or qualified (e.g: `s3.amazonaws.com`). The `.amazonaws.com` and `.amazonaws.com.cn` domains are stripped from service names, so they are canonicalized in that respect."},"name":"service","type":{"primitive":"string"}}]", "False", "False")]
[ObsoleteAttribute("- Use `iam.ServicePrincipal.servicePrincipalName()` instead.")]
public static string ServicePrincipal(string service);
    [CompilerGeneratedAttribute]
public static string get_APPMESH_ECR_ACCOUNT();
    [CompilerGeneratedAttribute]
public static string get_CDK_METADATA_RESOURCE_AVAILABLE();
    [CompilerGeneratedAttribute]
public static string get_DLC_REPOSITORY_ACCOUNT();
    [CompilerGeneratedAttribute]
public static string get_DOMAIN_SUFFIX();
    [CompilerGeneratedAttribute]
public static string get_EBS_ENV_ENDPOINT_HOSTED_ZONE_ID();
    [CompilerGeneratedAttribute]
public static string get_ELBV2_ACCOUNT();
    [CompilerGeneratedAttribute]
public static string get_FIREHOSE_CIDR_BLOCK();
    [CompilerGeneratedAttribute]
public static string get_IS_OPT_IN_REGION();
    [CompilerGeneratedAttribute]
public static string get_LATEST_NODE_RUNTIME();
    [CompilerGeneratedAttribute]
public static string get_PARTITION();
    [CompilerGeneratedAttribute]
public static string get_S3_STATIC_WEBSITE_ENDPOINT();
    [CompilerGeneratedAttribute]
public static string get_S3_STATIC_WEBSITE_ZONE_53_HOSTED_ZONE_ID();
    [CompilerGeneratedAttribute]
public static string get_SAML_SIGN_ON_URL();
    [CompilerGeneratedAttribute]
public static string get_VPC_ENDPOINT_SERVICE_NAME_PREFIX();
}
[NullableContextAttribute("1")]
[JsiiInterfaceAttribute("Amazon.CDK.RegionInfo.IFact", "@aws-cdk/region-info.IFact")]
public interface Amazon.CDK.RegionInfo.IFact {
    [JsiiPropertyAttribute("name", "{"primitive":"string"}", "False", "False")]
public string Name { get; }
    [JsiiPropertyAttribute("region", "{"primitive":"string"}", "False", "False")]
public string Region { get; }
    [NullableAttribute("2")]
[JsiiPropertyAttribute("value", "{"primitive":"string"}", "True", "False")]
[JsiiOptionalAttribute]
public string Value { get; }
    public abstract virtual string get_Name();
    public abstract virtual string get_Region();
    [NullableContextAttribute("2")]
public virtual string get_Value();
}
public class Amazon.CDK.RegionInfo.Internal.DependencyResolution.Anchor : object {
}
[EditorBrowsableAttribute("1")]
public class Amazon.CDK.RegionInfo.NamespaceDoc : object {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsiiClassAttribute("Amazon.CDK.RegionInfo.RegionInfo", "@aws-cdk/region-info.RegionInfo", "")]
public class Amazon.CDK.RegionInfo.RegionInfo : DeputyBase {
    [NullableAttribute("1")]
[JsiiPropertyAttribute("regions", "{"collection":{"elementtype":{"fqn":"@aws-cdk/region-info.RegionInfo"},"kind":"array"}}", "False", "False")]
public static RegionInfo[] Regions { get; }
    [JsiiPropertyAttribute("cdkMetadataResourceAvailable", "{"primitive":"boolean"}", "False", "False")]
public bool CdkMetadataResourceAvailable { get; }
    [JsiiPropertyAttribute("isOptInRegion", "{"primitive":"boolean"}", "False", "False")]
public bool IsOptInRegion { get; }
    [NullableAttribute("1")]
[JsiiPropertyAttribute("name", "{"primitive":"string"}", "False", "False")]
public string Name { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("appMeshRepositoryAccount", "{"primitive":"string"}", "True", "False")]
public string AppMeshRepositoryAccount { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("dlcRepositoryAccount", "{"primitive":"string"}", "True", "False")]
public string DlcRepositoryAccount { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("domainSuffix", "{"primitive":"string"}", "True", "False")]
public string DomainSuffix { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("ebsEnvEndpointHostedZoneId", "{"primitive":"string"}", "True", "False")]
public string EbsEnvEndpointHostedZoneId { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("elbv2Account", "{"primitive":"string"}", "True", "False")]
public string Elbv2Account { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("firehoseCidrBlock", "{"primitive":"string"}", "True", "False")]
public string FirehoseCidrBlock { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("partition", "{"primitive":"string"}", "True", "False")]
public string Partition { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("s3StaticWebsiteEndpoint", "{"primitive":"string"}", "True", "False")]
public string S3StaticWebsiteEndpoint { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("s3StaticWebsiteHostedZoneId", "{"primitive":"string"}", "True", "False")]
public string S3StaticWebsiteHostedZoneId { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("samlSignOnUrl", "{"primitive":"string"}", "True", "False")]
public string SamlSignOnUrl { get; }
    [JsiiOptionalAttribute]
[JsiiPropertyAttribute("vpcEndpointServiceNamePrefix", "{"primitive":"string"}", "True", "False")]
public string VpcEndpointServiceNamePrefix { get; }
    [NullableContextAttribute("1")]
[EditorBrowsableAttribute("1")]
protected RegionInfo(ByRefValue reference);
    [NullableContextAttribute("1")]
[EditorBrowsableAttribute("1")]
protected RegionInfo(DeputyProps props);
    [NullableContextAttribute("1")]
[JsiiMethodAttribute("get", "{"type":{"fqn":"@aws-cdk/region-info.RegionInfo"}}", "[{"docs":{"summary":"the name of the region (e.g: us-east-1)."},"name":"name","type":{"primitive":"string"}}]", "False", "False")]
public static RegionInfo Get(string name);
    [NullableContextAttribute("1")]
[JsiiMethodAttribute("limitedRegionMap", "{"type":{"collection":{"elementtype":{"primitive":"string"},"kind":"map"}}}", "[{"docs":{"remarks":"For a list of common fact names, see the FactName class","summary":"the name of the fact to retrieve values for."},"name":"factName","type":{"primitive":"string"}},{"docs":{"remarks":"Defaults
to `['aws', 'aws-cn']`.","summary":"list of partitions to retrieve facts for."},"name":"partitions","type":{"collection":{"elementtype":{"primitive":"string"},"kind":"array"}}}]", "False", "False")]
public static IDictionary`2<string, string> LimitedRegionMap(string factName, String[] partitions);
    [NullableContextAttribute("1")]
[JsiiMethodAttribute("regionMap", "{"type":{"collection":{"elementtype":{"primitive":"string"},"kind":"map"}}}", "[{"docs":{"remarks":"For a list of common fact names, see the FactName class","summary":"the name of the fact to retrieve values for."},"name":"factName","type":{"primitive":"string"}}]", "False", "False")]
public static IDictionary`2<string, string> RegionMap(string factName);
    [NullableContextAttribute("1")]
[JsiiMethodAttribute("adotLambdaLayerArn", "{"optional":true,"type":{"primitive":"string"}}", "[{"docs":{"summary":"the type of the ADOT lambda layer."},"name":"type","type":{"primitive":"string"}},{"docs":{"summary":"the layer version."},"name":"version","type":{"primitive":"string"}},{"docs":{"summary":"the Lambda Function architecture (e.g. 'x86_64' or 'arm64')."},"name":"architecture","type":{"primitive":"string"}}]", "False", "False")]
public virtual string AdotLambdaLayerArn(string type, string version, string architecture);
    [JsiiMethodAttribute("appConfigLambdaArn", "{"optional":true,"type":{"primitive":"string"}}", "[{"docs":{"summary":"The layer version (e.g. 2.0.181)."},"name":"layerVersion","type":{"primitive":"string"}},{"docs":{"summary":"The Lambda Function architecture (e.g. 'x86_64' or 'arm64'), defaults to x86_64."},"name":"architecture","optional":true,"type":{"primitive":"string"}}]", "False", "False")]
public virtual string AppConfigLambdaArn(string layerVersion, string architecture);
    [JsiiMethodAttribute("cloudwatchLambdaInsightsArn", "{"optional":true,"type":{"primitive":"string"}}", "[{"docs":{"summary":"the version (e.g. 1.0.98.0)."},"name":"insightsVersion","type":{"primitive":"string"}},{"docs":{"summary":"the Lambda Function architecture (e.g. 'x86_64' or 'arm64')."},"name":"architecture","optional":true,"type":{"primitive":"string"}}]", "False", "False")]
public virtual string CloudwatchLambdaInsightsArn(string insightsVersion, string architecture);
    [NullableContextAttribute("1")]
[JsiiMethodAttribute("paramsAndSecretsLambdaLayerArn", "{"optional":true,"type":{"primitive":"string"}}", "[{"docs":{"summary":"the layer version."},"name":"version","type":{"primitive":"string"}},{"docs":{"summary":"the Lambda Function architecture (e.g. 'x86_64' or 'arm64')."},"name":"architecture","type":{"primitive":"string"}}]", "False", "False")]
public virtual string ParamsAndSecretsLambdaLayerArn(string version, string architecture);
    [NullableContextAttribute("1")]
[JsiiMethodAttribute("servicePrincipal", "{"optional":true,"type":{"primitive":"string"}}", "[{"docs":{"summary":"the service name (e.g: s3.amazonaws.com)."},"name":"service","type":{"primitive":"string"}}]", "False", "False")]
[ObsoleteAttribute("- Use `iam.ServicePrincipal.servicePrincipalName()` instead.")]
public virtual string ServicePrincipal(string service);
    [NullableContextAttribute("1")]
public static RegionInfo[] get_Regions();
    public virtual bool get_CdkMetadataResourceAvailable();
    public virtual bool get_IsOptInRegion();
    [NullableContextAttribute("1")]
public virtual string get_Name();
    public virtual string get_AppMeshRepositoryAccount();
    public virtual string get_DlcRepositoryAccount();
    public virtual string get_DomainSuffix();
    public virtual string get_EbsEnvEndpointHostedZoneId();
    public virtual string get_Elbv2Account();
    public virtual string get_FirehoseCidrBlock();
    public virtual string get_Partition();
    public virtual string get_S3StaticWebsiteEndpoint();
    public virtual string get_S3StaticWebsiteHostedZoneId();
    public virtual string get_SamlSignOnUrl();
    public virtual string get_VpcEndpointServiceNamePrefix();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
