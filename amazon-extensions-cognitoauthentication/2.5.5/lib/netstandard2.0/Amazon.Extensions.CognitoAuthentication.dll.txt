public class Amazon.Extensions.CognitoAuthentication.AuthFlowResponse : object {
    [CompilerGeneratedAttribute]
private string <SessionID>k__BackingField;
    [CompilerGeneratedAttribute]
private ChallengeNameType <ChallengeName>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationResultType <AuthenticationResult>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ChallengeParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ClientMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyticsMetadataType <AnalyticsMetadata>k__BackingField;
    public string SessionID { get; }
    public ChallengeNameType ChallengeName { get; }
    public AuthenticationResultType AuthenticationResult { get; }
    public IDictionary`2<string, string> ChallengeParameters { get; }
    public IDictionary`2<string, string> ClientMetadata { get; }
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    public AuthFlowResponse(string sessionId, AuthenticationResultType authenticationResult, ChallengeNameType challengeName, IDictionary`2<string, string> challengeParameters, IDictionary`2<string, string> clientMetadata);
    [CompilerGeneratedAttribute]
public string get_SessionID();
    [CompilerGeneratedAttribute]
public ChallengeNameType get_ChallengeName();
    [CompilerGeneratedAttribute]
public AuthenticationResultType get_AuthenticationResult();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ChallengeParameters();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ClientMetadata();
    [CompilerGeneratedAttribute]
public AnalyticsMetadataType get_AnalyticsMetadata();
    [CompilerGeneratedAttribute]
public void set_AnalyticsMetadata(AnalyticsMetadataType value);
}
public class Amazon.Extensions.CognitoAuthentication.CognitoDevice : object {
    [CompilerGeneratedAttribute]
private string <DeviceKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <DeviceAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastAuthenticated>k__BackingField;
    [CompilerGeneratedAttribute]
private CognitoUser <User>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupDeviceKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceSecret>k__BackingField;
    public string DeviceKey { get; private set; }
    public Dictionary`2<string, string> DeviceAttributes { get; private set; }
    public DateTime CreateDate { get; private set; }
    public DateTime LastModified { get; private set; }
    public DateTime LastAuthenticated { get; private set; }
    public CognitoUser User { get; private set; }
    public string GroupDeviceKey { get; public set; }
    public string DeviceSecret { get; public set; }
    public CognitoDevice(string deviceKey, IDictionary`2<string, string> deviceAttributes, DateTime createDate, DateTime lastModified, DateTime lastAuthenticated, CognitoUser user);
    public CognitoDevice(DeviceType device, CognitoUser user);
    [CompilerGeneratedAttribute]
public string get_DeviceKey();
    [CompilerGeneratedAttribute]
private void set_DeviceKey(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_DeviceAttributes();
    [CompilerGeneratedAttribute]
private void set_DeviceAttributes(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
private void set_CreateDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastModified();
    [CompilerGeneratedAttribute]
private void set_LastModified(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastAuthenticated();
    [CompilerGeneratedAttribute]
private void set_LastAuthenticated(DateTime value);
    [CompilerGeneratedAttribute]
public CognitoUser get_User();
    [CompilerGeneratedAttribute]
private void set_User(CognitoUser value);
    [CompilerGeneratedAttribute]
public string get_GroupDeviceKey();
    [CompilerGeneratedAttribute]
public void set_GroupDeviceKey(string value);
    [CompilerGeneratedAttribute]
public string get_DeviceSecret();
    [CompilerGeneratedAttribute]
public void set_DeviceSecret(string value);
    public string GetDeviceAttribute(string attributeName);
    public string GetDeviceName();
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoDevice/<GetDeviceAsync>d__36")]
public Task GetDeviceAsync();
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoDevice/<GetDeviceAsync>d__37")]
public Task GetDeviceAsync(CancellationToken cancellationToken);
    public Task ForgetDeviceAsync();
    public Task ForgetDeviceAsync(CancellationToken cancellationToken);
    public Task RememberThisDeviceAsync();
    public Task RememberThisDeviceAsync(CancellationToken cancellationToken);
    public Task DoNotRememberThisDeviceAsync();
    public Task DoNotRememberThisDeviceAsync(CancellationToken cancellationToken);
    private GetDeviceRequest CreateGetDeviceRequest();
    private void UpdateThisDevice(DeviceType device);
    private ForgetDeviceRequest CreateForgetDeviceRequest();
    private UpdateDeviceStatusRequest CreateUpdateDeviceStatusRequest(DeviceRememberedStatusType deviceRememberedStatus);
    private Dictionary`2<string, string> CreateDictionaryFromAttributeList(IList`1<AttributeType> attributes);
}
public class Amazon.Extensions.CognitoAuthentication.CognitoUser : object {
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretHash>k__BackingField;
    [CompilerGeneratedAttribute]
private CognitoUserSession <SessionTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private CognitoDevice <Device>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private CognitoUserPool <UserPool>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private IAmazonCognitoIdentityProvider <Provider>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PoolName>k__BackingField;
    private string ClientSecret { get; private set; }
    internal string SecretHash { get; internal set; }
    public CognitoUserSession SessionTokens { get; public set; }
    public CognitoDevice Device { get; public set; }
    public string UserID { get; private set; }
    public string Username { get; private set; }
    public CognitoUserPool UserPool { get; private set; }
    public string ClientID { get; private set; }
    public string Status { get; private set; }
    internal IAmazonCognitoIdentityProvider Provider { get; private set; }
    public Dictionary`2<string, string> Attributes { get; private set; }
    public Dictionary`2<string, string> Settings { get; public set; }
    private string PoolName { get; private set; }
    public CognitoUser(string userID, string clientID, CognitoUserPool pool, IAmazonCognitoIdentityProvider provider, string clientSecret, string status, string username, Dictionary`2<string, string> attributes);
    [CompilerGeneratedAttribute]
private string get_ClientSecret();
    [CompilerGeneratedAttribute]
private void set_ClientSecret(string value);
    [CompilerGeneratedAttribute]
internal string get_SecretHash();
    [CompilerGeneratedAttribute]
internal void set_SecretHash(string value);
    [CompilerGeneratedAttribute]
public CognitoUserSession get_SessionTokens();
    [CompilerGeneratedAttribute]
public void set_SessionTokens(CognitoUserSession value);
    [CompilerGeneratedAttribute]
public CognitoDevice get_Device();
    [CompilerGeneratedAttribute]
public void set_Device(CognitoDevice value);
    [CompilerGeneratedAttribute]
public string get_UserID();
    [CompilerGeneratedAttribute]
private void set_UserID(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
private void set_Username(string value);
    [CompilerGeneratedAttribute]
public CognitoUserPool get_UserPool();
    [CompilerGeneratedAttribute]
private void set_UserPool(CognitoUserPool value);
    [CompilerGeneratedAttribute]
public string get_ClientID();
    [CompilerGeneratedAttribute]
private void set_ClientID(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
private void set_Status(string value);
    [CompilerGeneratedAttribute]
internal IAmazonCognitoIdentityProvider get_Provider();
    [CompilerGeneratedAttribute]
private void set_Provider(IAmazonCognitoIdentityProvider value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Attributes();
    [CompilerGeneratedAttribute]
private void set_Attributes(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Settings();
    [CompilerGeneratedAttribute]
public void set_Settings(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
private string get_PoolName();
    [CompilerGeneratedAttribute]
private void set_PoolName(string value);
    public virtual Task ConfirmSignUpAsync(string confirmationCode, bool forcedAliasCreation);
    public virtual Task ConfirmSignUpAsync(string confirmationCode, bool forcedAliasCreation, CancellationToken cancellationToken);
    public virtual Task ResendConfirmationCodeAsync();
    public virtual Task ResendConfirmationCodeAsync(CancellationToken cancellationToken);
    public virtual Task ForgotPasswordAsync();
    public virtual Task ForgotPasswordAsync(CancellationToken cancellationToken);
    public virtual Task ConfirmForgotPasswordAsync(string confirmationCode, string newPassword);
    public virtual Task ConfirmForgotPasswordAsync(string confirmationCode, string newPassword, CancellationToken cancellationToken);
    public virtual Task ChangePasswordAsync(string oldPass, string newPass);
    public virtual Task ChangePasswordAsync(string oldPass, string newPass, CancellationToken cancellationToken);
    public virtual Task`1<GetUserResponse> GetUserDetailsAsync();
    public virtual Task`1<GetUserResponse> GetUserDetailsAsync(CancellationToken cancellationToken);
    public virtual Task GetAttributeVerificationCodeAsync(string medium);
    public virtual Task GetAttributeVerificationCodeAsync(string medium, CancellationToken cancellationToken);
    public virtual Task GlobalSignOutAsync();
    public virtual Task GlobalSignOutAsync(CancellationToken cancellationToken);
    public virtual Task DeleteUserAsync();
    public virtual Task DeleteUserAsync(CancellationToken cancellationToken);
    public virtual Task VerifyAttributeAsync(string attributeName, string verificationCode);
    public virtual Task VerifyAttributeAsync(string attributeName, string verificationCode, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<UpdateAttributesAsync>d__73")]
public virtual Task UpdateAttributesAsync(IDictionary`2<string, string> attributes);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<UpdateAttributesAsync>d__74")]
public virtual Task UpdateAttributesAsync(IDictionary`2<string, string> attributes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<DeleteAttributesAsync>d__75")]
public virtual Task DeleteAttributesAsync(IList`1<string> attributeNamesToDelete);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<DeleteAttributesAsync>d__76")]
public virtual Task DeleteAttributesAsync(IList`1<string> attributeNamesToDelete, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<SetUserSettingsAsync>d__77")]
public virtual Task SetUserSettingsAsync(IDictionary`2<string, string> userSettings);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<SetUserSettingsAsync>d__78")]
public virtual Task SetUserSettingsAsync(IDictionary`2<string, string> userSettings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<ListDevicesAsync>d__79")]
[ObsoleteAttribute("This method is deprecated since it only lists the first page of devices. The method ListDevicesV2Async should be used instead which allows listing additional pages of devices.")]
public virtual Task`1<List`1<CognitoDevice>> ListDevicesAsync(int limit, string paginationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<ListDevicesAsync>d__80")]
[ObsoleteAttribute("This method is deprecated since it only lists the first page of devices. The method ListDevicesV2Async should be used instead which allows listing additional pages of devices.")]
public virtual Task`1<List`1<CognitoDevice>> ListDevicesAsync(int limit, string paginationToken, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<ListDevicesV2Async>d__81")]
public virtual Task`1<ListDevicesResponse> ListDevicesV2Async(int limit, string paginationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<ListDevicesV2Async>d__82")]
public virtual Task`1<ListDevicesResponse> ListDevicesV2Async(int limit, string paginationToken, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<AssociateSoftwareTokenAsync>d__83")]
public virtual Task`1<AssociateSoftwareTokenResponse> AssociateSoftwareTokenAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<VerifySoftwareTokenAsync>d__84")]
public virtual Task`1<VerifySoftwareTokenResponse> VerifySoftwareTokenAsync(string code, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<UpdateSoftwareMfaSettingsAsync>d__85")]
public Task UpdateSoftwareMfaSettingsAsync(bool isPreferred, bool isEnabled, CancellationToken cancellationToken);
    private ConfirmSignUpRequest CreateConfirmSignUpRequest(string confirmationCode, bool forcedAliasCreation);
    private ResendConfirmationCodeRequest CreateResendConfirmationCodeRequest();
    private ForgotPasswordRequest CreateForgotPasswordRequest();
    private ConfirmForgotPasswordRequest CreateConfirmPasswordRequest(string confirmationCode, string newPassword);
    private ChangePasswordRequest CreateChangePasswordRequest(string oldPass, string newPass);
    private GetUserAttributeVerificationCodeRequest CreateGetUserAttributeVerificationCodeRequest(string attributeName);
    private CognitoUserSession GetCognitoUserSession(AuthenticationResultType authResult, string refreshTokenOverride);
    public void SignOut();
    private VerifyUserAttributeRequest CreateVerifyUserAttributeRequest(string attributeName, string verificationCode);
    private UpdateUserAttributesRequest CreateUpdateUserAttributesRequest(IDictionary`2<string, string> attributes);
    private DeleteUserAttributesRequest CreateDeleteUserAttributesRequest(IList`1<string> attributeNamesToDelete);
    private SetUserSettingsRequest CreateSetUserSettingsRequest(IDictionary`2<string, string> userSettings);
    private ListDevicesRequest CreateListDevicesRequest(int limit, string paginationToken);
    private void EnsureUserAuthenticated();
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<StartWithSrpAuthAsync>d__100")]
public virtual Task`1<AuthFlowResponse> StartWithSrpAuthAsync(InitiateSrpAuthRequest srpRequest);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<StartWithSrpAuthAsync>d__101")]
public virtual Task`1<AuthFlowResponse> StartWithSrpAuthAsync(InitiateSrpAuthRequest srpRequest, CancellationToken cancellationToken);
    private RespondToAuthChallengeRequest CreateDeviceSrpAuthRequest(RespondToAuthChallengeResponse challenge, Tuple`2<BigInteger, BigInteger> tupleAa);
    private RespondToAuthChallengeRequest CreateDevicePasswordVerifierAuthRequest(RespondToAuthChallengeResponse challenge, string deviceKeyGroup, string devicePassword, Tuple`2<BigInteger, BigInteger> tupleAa);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<StartWithCustomAuthAsync>d__104")]
public virtual Task`1<AuthFlowResponse> StartWithCustomAuthAsync(InitiateCustomAuthRequest customRequest);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<StartWithCustomAuthAsync>d__105")]
public virtual Task`1<AuthFlowResponse> StartWithCustomAuthAsync(InitiateCustomAuthRequest customRequest, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<RespondToCustomAuthAsync>d__106")]
public virtual Task`1<AuthFlowResponse> RespondToCustomAuthAsync(RespondToCustomChallengeRequest customRequest);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<RespondToCustomAuthAsync>d__107")]
public virtual Task`1<AuthFlowResponse> RespondToCustomAuthAsync(RespondToCustomChallengeRequest customRequest, CancellationToken cancellationToken);
    public DeviceSecretVerifierConfigType GenerateDeviceVerifier(string deviceGroupKey, string devicePass, string username);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<ConfirmDeviceAsync>d__109")]
public Task`1<ConfirmDeviceResponse> ConfirmDeviceAsync(string accessToken, string deviceKey, string deviceName, string passwordVerifier, string salt);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<ConfirmDeviceAsync>d__110")]
public Task`1<ConfirmDeviceResponse> ConfirmDeviceAsync(string accessToken, string deviceKey, string deviceName, string passwordVerifier, string salt, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<UpdateDeviceStatusAsync>d__111")]
public Task`1<UpdateDeviceStatusResponse> UpdateDeviceStatusAsync(string accessToken, string deviceKey, string deviceRememberedStatus);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<UpdateDeviceStatusAsync>d__112")]
public Task`1<UpdateDeviceStatusResponse> UpdateDeviceStatusAsync(string accessToken, string deviceKey, string deviceRememberedStatus, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<RespondToSmsMfaAuthAsync>d__113")]
public virtual Task`1<AuthFlowResponse> RespondToSmsMfaAuthAsync(RespondToSmsMfaRequest smsMfaRequest);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<RespondToSmsMfaAuthAsync>d__114")]
public virtual Task`1<AuthFlowResponse> RespondToSmsMfaAuthAsync(RespondToSmsMfaRequest smsMfaRequest, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<RespondToMfaAuthAsync>d__115")]
public Task`1<AuthFlowResponse> RespondToMfaAuthAsync(RespondToMfaRequest mfaRequest);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<RespondToMfaAuthAsync>d__116")]
public Task`1<AuthFlowResponse> RespondToMfaAuthAsync(RespondToMfaRequest mfaRequest, CancellationToken cancellationToken);
    private string GetChallengeParamCodeName(ChallengeNameType challengeNameType);
    public virtual Task`1<AuthFlowResponse> RespondToNewPasswordRequiredAsync(RespondToNewPasswordRequiredRequest newPasswordRequest);
    public virtual Task`1<AuthFlowResponse> RespondToNewPasswordRequiredAsync(RespondToNewPasswordRequiredRequest newPasswordRequest, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<RespondToNewPasswordRequiredAsync>d__120")]
public virtual Task`1<AuthFlowResponse> RespondToNewPasswordRequiredAsync(RespondToNewPasswordRequiredRequest newPasswordRequest, Dictionary`2<string, string> requiredAttributes);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<RespondToNewPasswordRequiredAsync>d__121")]
public virtual Task`1<AuthFlowResponse> RespondToNewPasswordRequiredAsync(RespondToNewPasswordRequiredRequest newPasswordRequest, Dictionary`2<string, string> requiredAttributes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<StartWithRefreshTokenAuthAsync>d__122")]
public virtual Task`1<AuthFlowResponse> StartWithRefreshTokenAuthAsync(InitiateRefreshTokenAuthRequest refreshTokenRequest);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<StartWithRefreshTokenAuthAsync>d__123")]
public virtual Task`1<AuthFlowResponse> StartWithRefreshTokenAuthAsync(InitiateRefreshTokenAuthRequest refreshTokenRequest, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<StartWithAdminNoSrpAuthAsync>d__124")]
public virtual Task`1<AuthFlowResponse> StartWithAdminNoSrpAuthAsync(InitiateAdminNoSrpAuthRequest adminAuthRequest);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUser/<StartWithAdminNoSrpAuthAsync>d__125")]
public virtual Task`1<AuthFlowResponse> StartWithAdminNoSrpAuthAsync(InitiateAdminNoSrpAuthRequest adminAuthRequest, CancellationToken cancellationToken);
    private void UpdateSessionIfAuthenticationComplete(ChallengeNameType challengeName, AuthenticationResultType authResult);
    private InitiateAuthRequest CreateSrpAuthRequest(Tuple`2<BigInteger, BigInteger> tupleAa);
    private void UpdateUsernameAndSecretHash(IDictionary`2<string, string> challengeParameters);
    private AdminInitiateAuthRequest CreateAdminAuthRequest(InitiateAdminNoSrpAuthRequest adminRequest);
    private InitiateAuthRequest CreateRefreshTokenAuthRequest(AuthFlowType authFlowType);
    private RespondToAuthChallengeRequest CreateSrpPasswordVerifierAuthRequest(InitiateAuthResponse challenge, string password, Tuple`2<BigInteger, BigInteger> tupleAa);
    public CognitoAWSCredentials GetCognitoAWSCredentials(string identityPoolID, RegionEndpoint identityPoolRegion);
}
public class Amazon.Extensions.CognitoAuthentication.CognitoUserPool : object {
    [CompilerGeneratedAttribute]
private string <PoolID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientID>k__BackingField;
    [CompilerGeneratedAttribute]
private CognitoUserPoolClientConfiguration <ClientConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IAmazonCognitoIdentityProvider <Provider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    public string PoolID { get; private set; }
    public string ClientID { get; private set; }
    private CognitoUserPoolClientConfiguration ClientConfiguration { get; private set; }
    internal IAmazonCognitoIdentityProvider Provider { get; internal set; }
    private string ClientSecret { get; private set; }
    public CognitoUserPool(string poolID, string clientID, IAmazonCognitoIdentityProvider provider, string clientSecret);
    [CompilerGeneratedAttribute]
public string get_PoolID();
    [CompilerGeneratedAttribute]
private void set_PoolID(string value);
    [CompilerGeneratedAttribute]
public string get_ClientID();
    [CompilerGeneratedAttribute]
private void set_ClientID(string value);
    [CompilerGeneratedAttribute]
private CognitoUserPoolClientConfiguration get_ClientConfiguration();
    [CompilerGeneratedAttribute]
private void set_ClientConfiguration(CognitoUserPoolClientConfiguration value);
    [CompilerGeneratedAttribute]
internal IAmazonCognitoIdentityProvider get_Provider();
    [CompilerGeneratedAttribute]
internal void set_Provider(IAmazonCognitoIdentityProvider value);
    [CompilerGeneratedAttribute]
private string get_ClientSecret();
    [CompilerGeneratedAttribute]
private void set_ClientSecret(string value);
    public Task SignUpAsync(string userID, string password, IDictionary`2<string, string> userAttributes, IDictionary`2<string, string> validationData);
    public Task SignUpAsync(string userID, string password, IDictionary`2<string, string> userAttributes, IDictionary`2<string, string> validationData, CancellationToken cancellationToken);
    private SignUpRequest CreateSignUpRequest(string userID, string password, IDictionary`2<string, string> userAttributes, IDictionary`2<string, string> validationData);
    public virtual CognitoUser GetUser();
    public virtual CognitoUser GetUser(string userID);
    public virtual CognitoUser GetUser(string userID, string status, Dictionary`2<string, string> attributes);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUserPool/<FindByIdAsync>d__27")]
public virtual Task`1<CognitoUser> FindByIdAsync(string userID);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUserPool/<FindByIdAsync>d__28")]
public virtual Task`1<CognitoUser> FindByIdAsync(string userID, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUserPool/<GetPasswordPolicyTypeAsync>d__29")]
public Task`1<PasswordPolicyType> GetPasswordPolicyTypeAsync();
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUserPool/<GetPasswordPolicyTypeAsync>d__30")]
public Task`1<PasswordPolicyType> GetPasswordPolicyTypeAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUserPool/<GetUserPoolClientConfiguration>d__31")]
public Task`1<CognitoUserPoolClientConfiguration> GetUserPoolClientConfiguration();
    [AsyncStateMachineAttribute("Amazon.Extensions.CognitoAuthentication.CognitoUserPool/<GetUserPoolClientConfiguration>d__32")]
public Task`1<CognitoUserPoolClientConfiguration> GetUserPoolClientConfiguration(CancellationToken cancellationToken);
    public Task AdminSignupAsync(string userID, IDictionary`2<string, string> userAttributes, IDictionary`2<string, string> validationData);
    public Task AdminSignupAsync(string userID, IDictionary`2<string, string> userAttributes, IDictionary`2<string, string> validationData, CancellationToken cancellationToken);
    private AdminCreateUserRequest CreateAdminSignUpRequest(string userID, IDictionary`2<string, string> userAttributes, IDictionary`2<string, string> validationData);
    public Task ConfirmForgotPassword(string userID, string token, string newPassword, CancellationToken cancellationToken);
}
public class Amazon.Extensions.CognitoAuthentication.CognitoUserPoolClientConfiguration : object {
    [CompilerGeneratedAttribute]
private List`1<string> <ReadAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <WriteAttributes>k__BackingField;
    public List`1<string> ReadAttributes { get; private set; }
    public List`1<string> WriteAttributes { get; private set; }
    public CognitoUserPoolClientConfiguration(List`1<string> readAttributes, List`1<string> writeAttributes);
    [CompilerGeneratedAttribute]
public List`1<string> get_ReadAttributes();
    [CompilerGeneratedAttribute]
private void set_ReadAttributes(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_WriteAttributes();
    [CompilerGeneratedAttribute]
private void set_WriteAttributes(List`1<string> value);
}
public class Amazon.Extensions.CognitoAuthentication.CognitoUserSession : object {
    [CompilerGeneratedAttribute]
private string <IdToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ExpirationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <IssuedTime>k__BackingField;
    public string IdToken { get; public set; }
    public string AccessToken { get; public set; }
    public string RefreshToken { get; public set; }
    public DateTime ExpirationTime { get; private set; }
    public DateTime IssuedTime { get; private set; }
    public CognitoUserSession(string idToken, string accessToken, string refreshToken, DateTime issuedTime, DateTime expirationTime);
    [CompilerGeneratedAttribute]
public string get_IdToken();
    [CompilerGeneratedAttribute]
public void set_IdToken(string value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public string get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(string value);
    [CompilerGeneratedAttribute]
public DateTime get_ExpirationTime();
    [CompilerGeneratedAttribute]
private void set_ExpirationTime(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_IssuedTime();
    [CompilerGeneratedAttribute]
private void set_IssuedTime(DateTime value);
    public bool IsValid();
}
internal class Amazon.Extensions.CognitoAuthentication.HkdfSha256 : object {
    internal static int HLen;
    [CompilerGeneratedAttribute]
private Byte[] <Prk>k__BackingField;
    [CompilerGeneratedAttribute]
private HMACSHA256 <HmacSha256>k__BackingField;
    internal Byte[] Prk { get; private set; }
    private HMACSHA256 HmacSha256 { get; private set; }
    internal HkdfSha256(Byte[] salt, Byte[] ikm);
    [CompilerGeneratedAttribute]
internal Byte[] get_Prk();
    [CompilerGeneratedAttribute]
private void set_Prk(Byte[] value);
    [CompilerGeneratedAttribute]
private HMACSHA256 get_HmacSha256();
    [CompilerGeneratedAttribute]
private void set_HmacSha256(HMACSHA256 value);
    internal Byte[] Expand(Byte[] info, int length);
}
public class Amazon.Extensions.CognitoAuthentication.InitiateAdminNoSrpAuthRequest : object {
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ClientMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyticsMetadataType <AnalyticsMetadata>k__BackingField;
    public string Password { get; public set; }
    public IDictionary`2<string, string> ClientMetadata { get; public set; }
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ClientMetadata();
    [CompilerGeneratedAttribute]
public void set_ClientMetadata(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public AnalyticsMetadataType get_AnalyticsMetadata();
    [CompilerGeneratedAttribute]
public void set_AnalyticsMetadata(AnalyticsMetadataType value);
}
public class Amazon.Extensions.CognitoAuthentication.InitiateCustomAuthRequest : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <AuthParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ClientMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyticsMetadataType <AnalyticsMetadata>k__BackingField;
    public IDictionary`2<string, string> AuthParameters { get; public set; }
    public IDictionary`2<string, string> ClientMetadata { get; public set; }
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_AuthParameters();
    [CompilerGeneratedAttribute]
public void set_AuthParameters(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ClientMetadata();
    [CompilerGeneratedAttribute]
public void set_ClientMetadata(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public AnalyticsMetadataType get_AnalyticsMetadata();
    [CompilerGeneratedAttribute]
public void set_AnalyticsMetadata(AnalyticsMetadataType value);
}
public class Amazon.Extensions.CognitoAuthentication.InitiateRefreshTokenAuthRequest : object {
    [CompilerGeneratedAttribute]
private AuthFlowType <AuthFlowType>k__BackingField;
    public AuthFlowType AuthFlowType { get; public set; }
    [CompilerGeneratedAttribute]
public AuthFlowType get_AuthFlowType();
    [CompilerGeneratedAttribute]
public void set_AuthFlowType(AuthFlowType value);
}
public class Amazon.Extensions.CognitoAuthentication.InitiateSrpAuthRequest : object {
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DevicePass>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceVerifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceGroupKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ClientMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyticsMetadataType <AnalyticsMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCustomAuthFlow>k__BackingField;
    public string Password { get; public set; }
    public string DevicePass { get; public set; }
    public string DeviceVerifier { get; public set; }
    public string DeviceGroupKey { get; public set; }
    public IDictionary`2<string, string> ClientMetadata { get; public set; }
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    public bool IsCustomAuthFlow { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public string get_DevicePass();
    [CompilerGeneratedAttribute]
public void set_DevicePass(string value);
    [CompilerGeneratedAttribute]
public string get_DeviceVerifier();
    [CompilerGeneratedAttribute]
public void set_DeviceVerifier(string value);
    [CompilerGeneratedAttribute]
public string get_DeviceGroupKey();
    [CompilerGeneratedAttribute]
public void set_DeviceGroupKey(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ClientMetadata();
    [CompilerGeneratedAttribute]
public void set_ClientMetadata(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public AnalyticsMetadataType get_AnalyticsMetadata();
    [CompilerGeneratedAttribute]
public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    [CompilerGeneratedAttribute]
public bool get_IsCustomAuthFlow();
    [CompilerGeneratedAttribute]
public void set_IsCustomAuthFlow(bool value);
}
public class Amazon.Extensions.CognitoAuthentication.RespondToCustomChallengeRequest : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ChallengeParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ClientMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyticsMetadataType <AnalyticsMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionID>k__BackingField;
    public IDictionary`2<string, string> ChallengeParameters { get; public set; }
    public IDictionary`2<string, string> ClientMetadata { get; public set; }
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    public string SessionID { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ChallengeParameters();
    [CompilerGeneratedAttribute]
public void set_ChallengeParameters(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ClientMetadata();
    [CompilerGeneratedAttribute]
public void set_ClientMetadata(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public AnalyticsMetadataType get_AnalyticsMetadata();
    [CompilerGeneratedAttribute]
public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    [CompilerGeneratedAttribute]
public string get_SessionID();
    [CompilerGeneratedAttribute]
public void set_SessionID(string value);
}
public class Amazon.Extensions.CognitoAuthentication.RespondToMfaRequest : object {
    [CompilerGeneratedAttribute]
private string <SessionID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MfaCode>k__BackingField;
    [CompilerGeneratedAttribute]
private ChallengeNameType <ChallengeNameType>k__BackingField;
    public string SessionID { get; public set; }
    public string MfaCode { get; public set; }
    public ChallengeNameType ChallengeNameType { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SessionID();
    [CompilerGeneratedAttribute]
public virtual void set_SessionID(string value);
    [CompilerGeneratedAttribute]
public virtual string get_MfaCode();
    [CompilerGeneratedAttribute]
public virtual void set_MfaCode(string value);
    [CompilerGeneratedAttribute]
public virtual ChallengeNameType get_ChallengeNameType();
    [CompilerGeneratedAttribute]
public virtual void set_ChallengeNameType(ChallengeNameType value);
}
public class Amazon.Extensions.CognitoAuthentication.RespondToNewPasswordRequiredRequest : object {
    [CompilerGeneratedAttribute]
private string <SessionID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewPassword>k__BackingField;
    public string SessionID { get; public set; }
    public string NewPassword { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SessionID();
    [CompilerGeneratedAttribute]
public void set_SessionID(string value);
    [CompilerGeneratedAttribute]
public string get_NewPassword();
    [CompilerGeneratedAttribute]
public void set_NewPassword(string value);
}
public class Amazon.Extensions.CognitoAuthentication.RespondToSmsMfaRequest : RespondToMfaRequest {
    public ChallengeNameType ChallengeNameType { get; public set; }
    public virtual ChallengeNameType get_ChallengeNameType();
    public virtual void set_ChallengeNameType(ChallengeNameType value);
}
internal static class Amazon.Extensions.CognitoAuthentication.Util.AuthenticationHelper : object {
    private static string Srp_hexN;
    private static int Srp_g;
    public static BigInteger N;
    public static BigInteger g;
    public static BigInteger k;
    public static int SecretKeySizeBytes;
    public static int DerivedKeySizeBytes;
    public static string DerivedKeyInfo;
    private static AuthenticationHelper();
    public static Tuple`2<BigInteger, BigInteger> CreateAaTuple();
    public static Byte[] AuthenticateUser(string username, string password, string poolName, Tuple`2<BigInteger, BigInteger> tupleAa, string saltString, string srpbString, string secretBlockBase64, string formattedTimestamp);
    public static Byte[] GetPasswordAuthenticationKey(string userID, string userPassword, string poolName, Tuple`2<BigInteger, BigInteger> Aa, BigInteger B, BigInteger salt);
    public static DeviceSecretVerifierConfigType GenerateDeviceVerifier(string deviceGroupKey, string devicePass, string username);
    public static Byte[] AuthenticateDevice(string username, string deviceKey, string devicePassword, string deviceGroupKey, string saltString, string srpbString, string secretBlockBase64, string formattedTimestamp, Tuple`2<BigInteger, BigInteger> tupleAa);
    public static Byte[] GetDeviceAuthenticationKey(string username, string devicePass, string deviceGroup, Tuple`2<BigInteger, BigInteger> Aa, BigInteger B, BigInteger salt);
    public static BigInteger CreateBigIntegerRandom();
}
[ExtensionAttribute]
internal static class Amazon.Extensions.CognitoAuthentication.Util.BigIntegerExtensions : object {
    public static BigInteger FromUnsignedLittleEndianHex(string hex);
    [ExtensionAttribute]
public static BigInteger TrueMod(BigInteger self, BigInteger other);
    [ExtensionAttribute]
public static Byte[] ToBigEndianByteArray(BigInteger self);
    public static BigInteger FromUnsignedBigEndian(Byte[] bytes);
    [ExtensionAttribute]
private static T[] Reverse(T[] array);
}
internal static class Amazon.Extensions.CognitoAuthentication.Util.CognitoAuthHelper : object {
    [ThreadStaticAttribute]
private static SHA256 sha256;
    private static string _assemblyVersion;
    private static string _userAgentSuffix;
    private static string UserAgentHeader;
    internal static SHA256 Sha256 { get; }
    private static CognitoAuthHelper();
    internal static SHA256 get_Sha256();
    public static string GetUserPoolSecretHash(string userID, string clientID, string clientSecret);
    internal static Byte[] CombineBytes(Byte[][] values);
    internal static Byte[] StringToByteArray(string hexString);
    internal static List`1<AttributeType> CreateAttributeList(IDictionary`2<string, string> attributeDict);
    internal static void ServiceClientBeforeRequestEvent(object sender, RequestEventArgs e);
    private static string GetAssemblyFileVersion();
}
internal class Amazon.Extensions.CognitoAuthentication.Util.CognitoConstants : object {
    public static string ChlgParamSrpA;
    public static string ChlgParamSrpB;
    public static string ChlgParamSecretHash;
    public static string ChlgParamUsername;
    public static string ChlgParamChallengeName;
    public static string ChlgParamSalt;
    public static string ChlgParamSecretBlock;
    public static string ChlgParamUserIDSrp;
    public static string ChlgParamRefreshToken;
    public static string ChlgParamPassSecretBlock;
    public static string ChlgParamPassSignature;
    public static string ChlgParamTimestamp;
    public static string ChlgParamDeliveryDest;
    public static string ChlgParamDeliveryMed;
    public static string ChlgParamSmsMfaCode;
    public static string ChlgParamSoftwareTokenMfaCode;
    public static string ChlgParamDeviceKey;
    public static string ChlgParamUserAttrs;
    public static string ChlgParamRequiredAttrs;
    public static string ChlgParamUserAttrPrefix;
    public static string ChlgParamNewPassword;
    public static string ChlgParamPassword;
    public static string UserAttrEmail;
    public static string UserAttrPhoneNumber;
    public static string DeviceAttrName;
    public static string DeviceAttrRemembered;
    public static string DeviceAttrNotRemembered;
    public static string DeviceChlgParamSalt;
    public static string DeviceChlgParamVerifier;
    private static CognitoConstants();
}
internal static class Amazon.Extensions.CognitoAuthentication.Util.CognitoDeviceHelper : object {
    [CompilerGeneratedAttribute]
private static Byte[] <Salt>k__BackingField;
    [CompilerGeneratedAttribute]
private static BigInteger <Verifier>k__BackingField;
    public static Byte[] Salt { get; public set; }
    public static BigInteger Verifier { get; public set; }
    [CompilerGeneratedAttribute]
public static Byte[] get_Salt();
    [CompilerGeneratedAttribute]
public static void set_Salt(Byte[] value);
    [CompilerGeneratedAttribute]
public static BigInteger get_Verifier();
    [CompilerGeneratedAttribute]
public static void set_Verifier(BigInteger value);
    public static IDictionary`2<string, string> GenerateVerificationParameters(string deviceKey, string deviceGroup);
    public static void GenerateDeviceSaltAndVerifier(string deviceGroupKey, string deviceKey, string password);
    public static BigInteger CalculateVerifier(Byte[] salt, Byte[] deviceKeyHash);
    public static Byte[] GetDeviceKeyHash(string deviceGroupKey, string deviceKey, string password);
    public static string GenerateRandomString();
}
