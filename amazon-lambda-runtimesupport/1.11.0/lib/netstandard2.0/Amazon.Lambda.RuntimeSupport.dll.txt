internal class Amazon.Lambda.RuntimeSupport.Bootstrap.Constants : object {
    internal static string ENVIRONMENT_VARIABLE_AWS_LAMBDA_DOTNET_DEBUG_RUN_ONCE;
    internal static string ENVIRONMENT_VARIABLE_DISABLE_HEAP_MEMORY_LIMIT;
    internal static string ENVIRONMENT_VARIABLE_AWS_LAMBDA_DOTNET_PREJIT;
    internal static string ENVIRONMENT_VARIABLE_AWS_LAMBDA_INITIALIZATION_TYPE;
    internal static string ENVIRONMENT_VARIABLE_LANG;
    internal static string ENVIRONMENT_VARIABLE_TELEMETRY_LOG_FD;
    internal static string AWS_LAMBDA_INITIALIZATION_TYPE_PC;
    internal static string AWS_LAMBDA_INITIALIZATION_TYPE_ON_DEMAND;
    internal static string NET_RIC_LOG_LEVEL_ENVIRONMENT_VARIABLE;
    internal static string NET_RIC_LOG_FORMAT_ENVIRONMENT_VARIABLE;
    internal static string LAMBDA_LOG_LEVEL_ENVIRONMENT_VARIABLE;
    internal static string LAMBDA_LOG_FORMAT_ENVIRONMENT_VARIABLE;
    internal static string LAMBDA_LOG_FORMAT_JSON;
    internal static BindingFlags DefaultFlags;
}
internal class Amazon.Lambda.RuntimeSupport.Bootstrap.InvokeDelegateBuilder : object {
    private InternalLogger _logger;
    private HandlerInfo _handler;
    private MethodInfo _customerMethodInfo;
    [CompilerGeneratedAttribute]
private Type <CustomerOutputType>k__BackingField;
    private Type CustomerOutputType { get; private set; }
    public InvokeDelegateBuilder(InternalLogger logger, HandlerInfo handler, MethodInfo customerMethodInfo);
    [CompilerGeneratedAttribute]
private Type get_CustomerOutputType();
    [CompilerGeneratedAttribute]
private void set_CustomerOutputType(Type value);
    public Action`3<Stream, ILambdaContext, Stream> ConstructInvokeDelegate(object customerObject, object customerSerializerInstance, bool isPreJit);
    private Expression BuildInputExpressionOrNull(object customerSerializerInstance, Expression inStreamParameter, Type& iLambdaContextType);
    private static Expression BuildContextExpressionOrNull(Type iLambdaContextType, Expression contextParameter);
    private Expression CreateHandlerCallExpression(object customerObject, Expression inputExpression, Expression contextExpression);
    private Expression CreateOutputExpression(object customerSerializerInstance, Expression outStreamParameter, Expression handlerCallExpression);
    private static Type GetTaskTSubclassOrNull(Type type);
    private Expression CreateSerializeExpression(object customerSerializerInstance, Type dataType, Expression customerObject, Expression outStreamParameter);
    private Expression CreateDeserializeExpression(object customerSerializerInstance, Type dataType, Expression inStream);
}
internal class Amazon.Lambda.RuntimeSupport.Bootstrap.UserCodeInit : object {
    public static bool IsCallPreJit();
    private static bool IsPreJitAll(AwsLambdaDotNetPreJit awsLambdaDotNetPreJit);
    private static bool IsPCInvoke(string awsLambdaInitTypeStr);
    private static bool IsPreJitPC(AwsLambdaDotNetPreJit awsLambdaDotNetPreJit);
    public static void InitDeserializationAssembly(Expression inputExpression, ParameterExpression inStreamParameter);
    public static void InitSerializationAssembly(Expression outputExpression, ParameterExpression outStreamParameter, Type customerOutputType);
    public static void LoadStringCultureInfo();
    public static void PreJitAssembly(Assembly a);
    [CompilerGeneratedAttribute]
internal static bool <PreJitAssembly>g__NotNetFramework|7_1(string assemblyName);
    [CompilerGeneratedAttribute]
internal static void <PreJitAssembly>g__PrepareAssembly|7_2(Assembly assembly);
}
internal class Amazon.Lambda.RuntimeSupport.Bootstrap.UserCodeInitializer : object {
    private UserCodeLoader _userCodeLoader;
    private InternalLogger _logger;
    public UserCodeInitializer(UserCodeLoader userCodeLoader, InternalLogger logger);
    public Task`1<bool> InitializeAsync();
}
internal class Amazon.Lambda.RuntimeSupport.Bootstrap.UserCodeLoader : object {
    private static string UserInvokeException;
    private static string LambdaLoggingActionFieldName;
    internal static string LambdaCoreAssemblyName;
    private InternalLogger _logger;
    private string _handlerString;
    private bool _customerLoggerSetUpComplete;
    private HandlerInfo _handler;
    private Action`3<Stream, ILambdaContext, Stream> _invokeDelegate;
    [CompilerGeneratedAttribute]
private MethodInfo <CustomerMethodInfo>k__BackingField;
    internal MethodInfo CustomerMethodInfo { get; private set; }
    public UserCodeLoader(string handler, InternalLogger logger);
    [CompilerGeneratedAttribute]
internal MethodInfo get_CustomerMethodInfo();
    [CompilerGeneratedAttribute]
private void set_CustomerMethodInfo(MethodInfo value);
    public void Init(Action`1<string> customerLoggingAction);
    public void Invoke(Stream lambdaData, ILambdaContext lambdaContext, Stream outStream);
    internal static void SetCustomerLoggerLogAction(Assembly coreAssembly, Action`1<string> customerLoggingAction, InternalLogger internalLogger);
    private object GetSerializerObject(Assembly customerAssembly);
    private MethodInfo FindCustomerMethod(Type type);
    private MethodInfo FindCustomerMethodByName(TypeInfo typeInfo);
    private MethodInfo FindCustomerMethodBySignature(TypeInfo typeInfo);
    private static bool SignatureMatches(string methodSignature, MethodInfo method);
    private static bool NameMatches(string methodName, MethodInfo method);
    private Exception GetMultipleMethodsValidationException(TypeInfo typeInfo);
    private object ConstructCustomSerializer(Attribute serializerAttribute);
    private object GetCustomerObject(Type customerType);
    [CompilerGeneratedAttribute]
private bool <FindCustomerMethodBySignature>b__19_0(MethodInfo mi);
    [CompilerGeneratedAttribute]
private bool <GetMultipleMethodsValidationException>b__22_0(MethodInfo mi);
}
internal static class Amazon.Lambda.RuntimeSupport.Bootstrap.UserCodeValidator : object {
    internal static void ValidateCustomerType(Type type, MethodInfo method);
    internal static void ValidateCustomerMethod(MethodInfo method);
    internal static void ValidateILambdaSerializerType(Type type);
    private static string CheckILambdaSerializerType(TypeInfo typeInfo);
    internal static void ValidateILambdaContextType(Type iLambdaContextType);
    private static void ValidateInterfaceStringProperty(Type type, string propName);
    private static void ValidateInterfaceProperty(Type type, string propName);
    private static PropertyInfo ValidateInterfaceProperty(Type type, string propName, string propTypeName);
}
internal class Amazon.Lambda.RuntimeSupport.CognitoClientApplication : object {
    [CompilerGeneratedAttribute]
private string <AppPackageName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppVersionCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppVersionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstallationId>k__BackingField;
    public string AppPackageName { get; internal set; }
    public string AppTitle { get; internal set; }
    public string AppVersionCode { get; internal set; }
    public string AppVersionName { get; internal set; }
    public string InstallationId { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_AppPackageName();
    [CompilerGeneratedAttribute]
internal void set_AppPackageName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AppTitle();
    [CompilerGeneratedAttribute]
internal void set_AppTitle(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AppVersionCode();
    [CompilerGeneratedAttribute]
internal void set_AppVersionCode(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AppVersionName();
    [CompilerGeneratedAttribute]
internal void set_AppVersionName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_InstallationId();
    [CompilerGeneratedAttribute]
internal void set_InstallationId(string value);
    internal static CognitoClientApplication FromJsonData(JsonElement jsonData);
}
internal class Amazon.Lambda.RuntimeSupport.CognitoClientContext : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private IClientApplication <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Custom>k__BackingField;
    public IDictionary`2<string, string> Environment { get; internal set; }
    public IClientApplication Client { get; internal set; }
    public IDictionary`2<string, string> Custom { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_Environment();
    [CompilerGeneratedAttribute]
internal void set_Environment(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IClientApplication get_Client();
    [CompilerGeneratedAttribute]
internal void set_Client(IClientApplication value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_Custom();
    [CompilerGeneratedAttribute]
internal void set_Custom(IDictionary`2<string, string> value);
    internal static CognitoClientContext FromJson(string json);
    private static IDictionary`2<string, string> GetDictionaryFromJsonData(JsonElement jsonData);
}
internal class Amazon.Lambda.RuntimeSupport.CognitoIdentity : object {
    [CompilerGeneratedAttribute]
private string <IdentityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityPoolId>k__BackingField;
    public string IdentityId { get; internal set; }
    public string IdentityPoolId { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdentityId();
    [CompilerGeneratedAttribute]
internal void set_IdentityId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdentityPoolId();
    [CompilerGeneratedAttribute]
internal void set_IdentityPoolId(string value);
    internal static CognitoIdentity FromJson(string json);
}
internal class Amazon.Lambda.RuntimeSupport.ErrorResponse : object {
    [CompilerGeneratedAttribute]
private string <errorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <errorType>k__BackingField;
    public string errorMessage { get; public set; }
    public string errorType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_errorMessage();
    [CompilerGeneratedAttribute]
public void set_errorMessage(string value);
    [CompilerGeneratedAttribute]
public string get_errorType();
    [CompilerGeneratedAttribute]
public void set_errorType(string value);
}
internal static class Amazon.Lambda.RuntimeSupport.ExceptionHandling.Errors : object {
}
internal static class Amazon.Lambda.RuntimeSupport.ExceptionHandling.LambdaExceptions : object {
    public static LambdaValidationException ValidationException(string messageFormat, Object[] args);
    public static LambdaValidationException ValidationException(Exception innerException, string messageFormat, Object[] args);
    public static string FormatMessage(string messageFormat, Object[] args);
}
internal class Amazon.Lambda.RuntimeSupport.ExceptionHandling.LambdaValidationException : Exception {
    public LambdaValidationException(string message);
    public LambdaValidationException(string message, Exception innerException);
}
internal class Amazon.Lambda.RuntimeSupport.ExceptionInfo : object {
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorType>k__BackingField;
    [CompilerGeneratedAttribute]
private StackFrameInfo[] <StackFrames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private ExceptionInfo <InnerException>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ExceptionInfo> <InnerExceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <OriginalException>k__BackingField;
    public string ErrorMessage { get; public set; }
    public string ErrorType { get; public set; }
    public StackFrameInfo[] StackFrames { get; public set; }
    public string StackTrace { get; public set; }
    public ExceptionInfo InnerException { get; public set; }
    public List`1<ExceptionInfo> InnerExceptions { get; internal set; }
    public Exception OriginalException { get; public set; }
    public ExceptionInfo(Exception exception, bool isNestedException);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorType();
    [CompilerGeneratedAttribute]
public void set_ErrorType(string value);
    [CompilerGeneratedAttribute]
public StackFrameInfo[] get_StackFrames();
    [CompilerGeneratedAttribute]
public void set_StackFrames(StackFrameInfo[] value);
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(string value);
    [CompilerGeneratedAttribute]
public ExceptionInfo get_InnerException();
    [CompilerGeneratedAttribute]
public void set_InnerException(ExceptionInfo value);
    [CompilerGeneratedAttribute]
public List`1<ExceptionInfo> get_InnerExceptions();
    [CompilerGeneratedAttribute]
internal void set_InnerExceptions(List`1<ExceptionInfo> value);
    [CompilerGeneratedAttribute]
public Exception get_OriginalException();
    [CompilerGeneratedAttribute]
public void set_OriginalException(Exception value);
    public static ExceptionInfo GetExceptionInfo(Exception exception);
}
public class Amazon.Lambda.RuntimeSupport.HandlerWrapper : object {
    private static InvocationResponse EmptyInvocationResponse;
    private MemoryStream OutputStream;
    [CompilerGeneratedAttribute]
private LambdaBootstrapHandler <Handler>k__BackingField;
    private bool disposedValue;
    public LambdaBootstrapHandler Handler { get; private set; }
    private HandlerWrapper(LambdaBootstrapHandler handler);
    private static HandlerWrapper();
    [CompilerGeneratedAttribute]
public LambdaBootstrapHandler get_Handler();
    [CompilerGeneratedAttribute]
private void set_Handler(LambdaBootstrapHandler value);
    public static HandlerWrapper GetHandlerWrapper(Action`3<Stream, ILambdaContext, MemoryStream> invokeDelegate);
    public static HandlerWrapper GetHandlerWrapper(Func`1<Task> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`2<Stream, Task> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`2<TInput, Task> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`2<ILambdaContext, Task> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`3<Stream, ILambdaContext, Task> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`3<TInput, ILambdaContext, Task> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`1<Task`1<Stream>> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`2<Stream, Task`1<Stream>> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`2<TInput, Task`1<Stream>> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`2<ILambdaContext, Task`1<Stream>> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`3<Stream, ILambdaContext, Task`1<Stream>> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`3<TInput, ILambdaContext, Task`1<Stream>> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`1<Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`2<Stream, Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`2<TInput, Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`2<ILambdaContext, Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`3<Stream, ILambdaContext, Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`3<TInput, ILambdaContext, Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Action handler);
    public static HandlerWrapper GetHandlerWrapper(Action`1<Stream> handler);
    public static HandlerWrapper GetHandlerWrapper(Action`1<TInput> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Action`1<ILambdaContext> handler);
    public static HandlerWrapper GetHandlerWrapper(Action`2<Stream, ILambdaContext> handler);
    public static HandlerWrapper GetHandlerWrapper(Action`2<TInput, ILambdaContext> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`1<Stream> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`2<Stream, Stream> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`2<TInput, Stream> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`2<ILambdaContext, Stream> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`3<Stream, ILambdaContext, Stream> handler);
    public static HandlerWrapper GetHandlerWrapper(Func`3<TInput, ILambdaContext, Stream> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`1<TOutput> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`2<Stream, TOutput> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`2<TInput, TOutput> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`2<ILambdaContext, TOutput> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`3<Stream, ILambdaContext, TOutput> handler, ILambdaSerializer serializer);
    public static HandlerWrapper GetHandlerWrapper(Func`3<TInput, ILambdaContext, TOutput> handler, ILambdaSerializer serializer);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
internal class Amazon.Lambda.RuntimeSupport.Helpers.DateTimeHelper : object {
    public DateTime UtcNow { get; }
    public sealed virtual DateTime get_UtcNow();
}
public static class Amazon.Lambda.RuntimeSupport.Helpers.FileDescriptorLogFactory : object {
    private static ConcurrentDictionary`2<string, StreamWriter> _writers;
    internal static int MaxCloudWatchLogEventSize;
    internal static int LambdaTelemetryLogHeaderLength;
    internal static UInt32 LambdaTelemetryLogHeaderFrameTypeText;
    internal static UInt32 LambdaTelemetryLogHeaderFrameTypeJson;
    internal static DateTimeOffset UnixEpoch;
    private static FileDescriptorLogFactory();
    public static StreamWriter GetWriter(string fileDescriptorId);
    internal static StreamWriter InitializeWriter(Stream fileDescriptorStream);
}
internal class Amazon.Lambda.RuntimeSupport.Helpers.HandlerInfo : object {
    public static string HandlerSeparator;
    [CompilerGeneratedAttribute]
private AssemblyName <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public AssemblyName AssemblyName { get; }
    public string TypeName { get; }
    public string MethodName { get; }
    public HandlerInfo(string handler);
    [CompilerGeneratedAttribute]
public AssemblyName get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_MethodName();
}
public interface Amazon.Lambda.RuntimeSupport.Helpers.IConsoleLoggerWriter {
    public abstract virtual void SetCurrentAwsRequestId(string awsRequestId);
    public abstract virtual void FormattedWriteLine(string message);
    public abstract virtual void FormattedWriteLine(string level, string message, Object[] args);
    public abstract virtual void FormattedWriteLine(string level, Exception exception, string message, Object[] args);
}
internal interface Amazon.Lambda.RuntimeSupport.Helpers.IDateTimeHelper {
    public DateTime UtcNow { get; }
    public abstract virtual DateTime get_UtcNow();
}
internal class Amazon.Lambda.RuntimeSupport.Helpers.InternalLogger : object {
    private static string DebuggingEnvironmentVariable;
    public static InternalLogger ConsoleLogger;
    public static InternalLogger NoOpLogger;
    private Action`1<string> _internalLoggingAction;
    private InternalLogger(Action`1<string> internalLoggingAction);
    private static InternalLogger();
    public void LogDebug(string message);
    public void LogError(Exception exception, string message);
    public void LogInformation(string message);
    public static InternalLogger GetCustomInternalLogger(Action`1<string> loggingAction);
    public static InternalLogger GetDefaultLogger();
}
internal static class Amazon.Lambda.RuntimeSupport.Helpers.NativeAotHelper : object {
    public static bool IsRunningNativeAot();
}
public class Amazon.Lambda.RuntimeSupport.Helpers.RuntimeSupportDebugAttacher : object {
    private InternalLogger _internalLogger;
    private static string DebuggingEnvironmentVariable;
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.Helpers.RuntimeSupportDebugAttacher/<TryAttachDebugger>d__3")]
public Task TryAttachDebugger();
}
public class Amazon.Lambda.RuntimeSupport.Helpers.SimpleLoggerWriter : object {
    private TextWriter _writer;
    public sealed virtual void SetCurrentAwsRequestId(string awsRequestId);
    public sealed virtual void FormattedWriteLine(string message);
    public sealed virtual void FormattedWriteLine(string level, string message, Object[] args);
    public sealed virtual void FormattedWriteLine(string level, Exception exception, string message, Object[] args);
}
internal static class Amazon.Lambda.RuntimeSupport.Helpers.Types : object {
    public static string IClientContextTypeName;
    public static string IClientApplicationTypeName;
    public static string ICognitoIdentityTypeName;
    public static string ILambdaContextTypeName;
    public static string ILambdaLoggerTypeName;
    public static string ILambdaSerializerTypeName;
    public static string LambdaLoggerTypeName;
    public static string LambdaSerializerAttributeTypeName;
    private static Lazy`1<Type> AsyncStateMachineAttributeTypeLazy;
    private static Lazy`1<Type> ParamArrayAttributeTypeLazy;
    private static Lazy`1<Type> StreamTypeLazy;
    private static Lazy`1<Type> StringTypeLazy;
    private static Lazy`1<Type> TaskTTypeLazy;
    private static Lazy`1<Type> TaskTypeLazy;
    private static Lazy`1<Type> TypeTypeLazy;
    private static Lazy`1<Type> VoidTypeLazy;
    public static Type AsyncStateMachineAttributeType { get; }
    public static Type ParamArrayAttributeType { get; }
    public static Type StreamType { get; }
    public static Type StringType { get; }
    public static Type TaskTType { get; }
    public static Type TaskType { get; }
    public static Type TypeType { get; }
    public static Type VoidType { get; }
    private static Types();
    public static Type get_AsyncStateMachineAttributeType();
    public static Type get_ParamArrayAttributeType();
    public static Type get_StreamType();
    public static Type get_StringType();
    public static Type get_TaskTType();
    public static Type get_TaskType();
    public static Type get_TypeType();
    public static Type get_VoidType();
    public static bool IsILambdaContext(Type type);
    public static bool IsLambdaSerializerAttribute(Type type);
}
internal interface Amazon.Lambda.RuntimeSupport.IEnvironmentVariables {
    public abstract virtual void SetEnvironmentVariable(string variable, string value);
    public abstract virtual string GetEnvironmentVariable(string variable);
    public abstract virtual IDictionary GetEnvironmentVariables();
}
internal interface Amazon.Lambda.RuntimeSupport.IInternalRuntimeApiClient {
    public abstract virtual Task`1<SwaggerResponse`1<StatusResponse>> ErrorAsync(string lambda_Runtime_Function_Error_Type, string errorJson);
    public abstract virtual Task`1<SwaggerResponse`1<StatusResponse>> ErrorAsync(string lambda_Runtime_Function_Error_Type, string errorJson, CancellationToken cancellationToken);
    public abstract virtual Task`1<SwaggerResponse`1<Stream>> NextAsync();
    public abstract virtual Task`1<SwaggerResponse`1<Stream>> NextAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<SwaggerResponse`1<StatusResponse>> ResponseAsync(string awsRequestId, Stream outputStream);
    public abstract virtual Task`1<SwaggerResponse`1<StatusResponse>> ResponseAsync(string awsRequestId, Stream outputStream, CancellationToken cancellationToken);
    public abstract virtual Task`1<SwaggerResponse`1<StatusResponse>> ErrorWithXRayCauseAsync(string awsRequestId, string lambda_Runtime_Function_Error_Type, string errorJson, string xrayCause, CancellationToken cancellationToken);
}
internal class Amazon.Lambda.RuntimeSupport.InternalRuntimeApiClient : object {
    private static int MAX_HEADER_SIZE_BYTES;
    private static string ErrorContentType;
    private string _baseUrl;
    private HttpClient _httpClient;
    private InternalLogger _logger;
    public string BaseUrl { get; public set; }
    public InternalRuntimeApiClient(HttpClient httpClient);
    public string get_BaseUrl();
    public void set_BaseUrl(string value);
    public sealed virtual Task`1<SwaggerResponse`1<StatusResponse>> ErrorAsync(string lambda_Runtime_Function_Error_Type, string errorJson);
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.InternalRuntimeApiClient/<ErrorAsync>d__10")]
public sealed virtual Task`1<SwaggerResponse`1<StatusResponse>> ErrorAsync(string lambda_Runtime_Function_Error_Type, string errorJson, CancellationToken cancellationToken);
    public sealed virtual Task`1<SwaggerResponse`1<Stream>> NextAsync();
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.InternalRuntimeApiClient/<NextAsync>d__12")]
public sealed virtual Task`1<SwaggerResponse`1<Stream>> NextAsync(CancellationToken cancellationToken);
    public sealed virtual Task`1<SwaggerResponse`1<StatusResponse>> ResponseAsync(string awsRequestId, Stream outputStream);
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.InternalRuntimeApiClient/<ResponseAsync>d__14")]
public sealed virtual Task`1<SwaggerResponse`1<StatusResponse>> ResponseAsync(string awsRequestId, Stream outputStream, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.InternalRuntimeApiClient/<ErrorWithXRayCauseAsync>d__15")]
public sealed virtual Task`1<SwaggerResponse`1<StatusResponse>> ErrorWithXRayCauseAsync(string awsRequestId, string lambda_Runtime_Function_Error_Type, string errorJson, string xrayCause, CancellationToken cancellationToken);
    private string ConvertToString(string value, CultureInfo cultureInfo);
}
public class Amazon.Lambda.RuntimeSupport.InvocationRequest : object {
    [CompilerGeneratedAttribute]
private Stream <InputStream>k__BackingField;
    [CompilerGeneratedAttribute]
private ILambdaContext <LambdaContext>k__BackingField;
    public Stream InputStream { get; internal set; }
    public ILambdaContext LambdaContext { get; internal set; }
    [CompilerGeneratedAttribute]
public Stream get_InputStream();
    [CompilerGeneratedAttribute]
internal void set_InputStream(Stream value);
    [CompilerGeneratedAttribute]
public ILambdaContext get_LambdaContext();
    [CompilerGeneratedAttribute]
internal void set_LambdaContext(ILambdaContext value);
    public sealed virtual void Dispose();
}
public class Amazon.Lambda.RuntimeSupport.InvocationResponse : object {
    [CompilerGeneratedAttribute]
private Stream <OutputStream>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisposeOutputStream>k__BackingField;
    public Stream OutputStream { get; public set; }
    public bool DisposeOutputStream { get; private set; }
    public InvocationResponse(Stream outputStream);
    public InvocationResponse(Stream outputStream, bool disposeOutputStream);
    [CompilerGeneratedAttribute]
public Stream get_OutputStream();
    [CompilerGeneratedAttribute]
public void set_OutputStream(Stream value);
    [CompilerGeneratedAttribute]
public bool get_DisposeOutputStream();
    [CompilerGeneratedAttribute]
private void set_DisposeOutputStream(bool value);
}
public interface Amazon.Lambda.RuntimeSupport.IRuntimeApiClient {
    public IConsoleLoggerWriter ConsoleLogger { get; }
    public abstract virtual IConsoleLoggerWriter get_ConsoleLogger();
    public abstract virtual Task ReportInitializationErrorAsync(Exception exception, CancellationToken cancellationToken);
    public abstract virtual Task ReportInitializationErrorAsync(string errorType, CancellationToken cancellationToken);
    public abstract virtual Task`1<InvocationRequest> GetNextInvocationAsync(CancellationToken cancellationToken);
    public abstract virtual Task ReportInvocationErrorAsync(string awsRequestId, Exception exception, CancellationToken cancellationToken);
    public abstract virtual Task SendResponseAsync(string awsRequestId, Stream outputStream, CancellationToken cancellationToken);
}
internal class Amazon.Lambda.RuntimeSupport.JsonExceptionWriterHelpers : object {
    public static string EscapeStringForJson(string str);
    private static Char[] IntToHex(int n);
}
public class Amazon.Lambda.RuntimeSupport.LambdaBootstrap : object {
    private static TimeSpan RuntimeApiHttpTimeout;
    private LambdaBootstrapInitializer _initializer;
    private LambdaBootstrapHandler _handler;
    private bool _ownsHttpClient;
    private InternalLogger _logger;
    private HttpClient _httpClient;
    [CompilerGeneratedAttribute]
private IRuntimeApiClient <Client>k__BackingField;
    private bool disposedValue;
    internal IRuntimeApiClient Client { get; internal set; }
    public LambdaBootstrap(HttpClient httpClient, LambdaBootstrapHandler handler, LambdaBootstrapInitializer initializer);
    public LambdaBootstrap(LambdaBootstrapHandler handler, LambdaBootstrapInitializer initializer);
    public LambdaBootstrap(HandlerWrapper handlerWrapper, LambdaBootstrapInitializer initializer);
    public LambdaBootstrap(HttpClient httpClient, HandlerWrapper handlerWrapper, LambdaBootstrapInitializer initializer);
    private LambdaBootstrap(HttpClient httpClient, LambdaBootstrapHandler handler, LambdaBootstrapInitializer initializer, bool ownsHttpClient);
    private static LambdaBootstrap();
    [CompilerGeneratedAttribute]
internal IRuntimeApiClient get_Client();
    [CompilerGeneratedAttribute]
internal void set_Client(IRuntimeApiClient value);
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.LambdaBootstrap/<RunAsync>d__15")]
public Task RunAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.LambdaBootstrap/<InitializeAsync>d__16")]
internal Task`1<bool> InitializeAsync();
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.LambdaBootstrap/<InvokeOnceAsync>d__17")]
internal Task InvokeOnceAsync(CancellationToken cancellationToken);
    public static HttpClient ConstructHttpClient();
    private void WriteUnhandledExceptionToLog(Exception exception);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
public class Amazon.Lambda.RuntimeSupport.LambdaBootstrapBuilder : object {
    private HandlerWrapper _handlerWrapper;
    private HttpClient _httpClient;
    private LambdaBootstrapInitializer _lambdaBootstrapInitializer;
    private LambdaBootstrapBuilder(HandlerWrapper handlerWrapper);
    public static LambdaBootstrapBuilder Create(Action`3<Stream, ILambdaContext, MemoryStream> handler);
    public static LambdaBootstrapBuilder Create(Func`1<Task> handler);
    public static LambdaBootstrapBuilder Create(Func`2<Stream, Task> handler);
    public static LambdaBootstrapBuilder Create(Func`2<TInput, Task> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`2<ILambdaContext, Task> handler);
    public static LambdaBootstrapBuilder Create(Func`3<Stream, ILambdaContext, Task> handler);
    public static LambdaBootstrapBuilder Create(Func`3<TInput, ILambdaContext, Task> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`1<Task`1<Stream>> handler);
    public static LambdaBootstrapBuilder Create(Func`2<Stream, Task`1<Stream>> handler);
    public static LambdaBootstrapBuilder Create(Func`2<TInput, Task`1<Stream>> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`2<ILambdaContext, Task`1<Stream>> handler);
    public static LambdaBootstrapBuilder Create(Func`3<Stream, ILambdaContext, Task`1<Stream>> handler);
    public static LambdaBootstrapBuilder Create(Func`3<TInput, ILambdaContext, Task`1<Stream>> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`1<Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`2<Stream, Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`2<TInput, Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`2<ILambdaContext, Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`3<Stream, ILambdaContext, Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`3<TInput, ILambdaContext, Task`1<TOutput>> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Action handler);
    public static LambdaBootstrapBuilder Create(Action`1<Stream> handler);
    public static LambdaBootstrapBuilder Create(Action`1<TInput> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Action`1<ILambdaContext> handler);
    public static LambdaBootstrapBuilder Create(Action`2<Stream, ILambdaContext> handler);
    public static LambdaBootstrapBuilder Create(Action`2<TInput, ILambdaContext> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`1<Stream> handler);
    public static LambdaBootstrapBuilder Create(Func`2<Stream, Stream> handler);
    public static LambdaBootstrapBuilder Create(Func`2<TInput, Stream> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`2<ILambdaContext, Stream> handler);
    public static LambdaBootstrapBuilder Create(Func`3<Stream, ILambdaContext, Stream> handler);
    public static LambdaBootstrapBuilder Create(Func`3<TInput, ILambdaContext, Stream> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`1<TOutput> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`2<Stream, TOutput> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`2<TInput, TOutput> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`2<ILambdaContext, TOutput> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`3<Stream, ILambdaContext, TOutput> handler, ILambdaSerializer serializer);
    public static LambdaBootstrapBuilder Create(Func`3<TInput, ILambdaContext, TOutput> handler, ILambdaSerializer serializer);
    public LambdaBootstrapBuilder UseHttpClient(HttpClient httpClient);
    public LambdaBootstrapBuilder UseBootstrapHandler(LambdaBootstrapInitializer lambdaBootstrapInitializer);
    public LambdaBootstrap Build();
}
public class Amazon.Lambda.RuntimeSupport.LambdaBootstrapHandler : MulticastDelegate {
    public LambdaBootstrapHandler(object object, IntPtr method);
    public virtual Task`1<InvocationResponse> Invoke(InvocationRequest invocation);
    public virtual IAsyncResult BeginInvoke(InvocationRequest invocation, AsyncCallback callback, object object);
    public virtual Task`1<InvocationResponse> EndInvoke(IAsyncResult result);
}
public class Amazon.Lambda.RuntimeSupport.LambdaBootstrapInitializer : MulticastDelegate {
    public LambdaBootstrapInitializer(object object, IntPtr method);
    public virtual Task`1<bool> Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual Task`1<bool> EndInvoke(IAsyncResult result);
}
internal class Amazon.Lambda.RuntimeSupport.LambdaConsoleLogger : object {
    private IConsoleLoggerWriter _consoleLoggerRedirector;
    [CompilerGeneratedAttribute]
private string <CurrentAwsRequestId>k__BackingField;
    public string CurrentAwsRequestId { get; public set; }
    public LambdaConsoleLogger(IConsoleLoggerWriter consoleLoggerRedirector);
    public sealed virtual void Log(string message);
    public sealed virtual void LogLine(string message);
    [CompilerGeneratedAttribute]
public string get_CurrentAwsRequestId();
    [CompilerGeneratedAttribute]
public void set_CurrentAwsRequestId(string value);
}
internal class Amazon.Lambda.RuntimeSupport.LambdaContext : object {
    internal static DateTime UnixEpoch;
    private LambdaEnvironment _lambdaEnvironment;
    private RuntimeApiHeaders _runtimeApiHeaders;
    private IDateTimeHelper _dateTimeHelper;
    private long _deadlineMs;
    private int _memoryLimitInMB;
    private Lazy`1<CognitoIdentity> _cognitoIdentityLazy;
    private Lazy`1<CognitoClientContext> _cognitoClientContextLazy;
    private IConsoleLoggerWriter _consoleLogger;
    public string TraceId { get; }
    public string AwsRequestId { get; }
    public IClientContext ClientContext { get; }
    public string FunctionName { get; }
    public string FunctionVersion { get; }
    public ICognitoIdentity Identity { get; }
    public string InvokedFunctionArn { get; }
    public ILambdaLogger Logger { get; }
    public string LogGroupName { get; }
    public string LogStreamName { get; }
    public int MemoryLimitInMB { get; }
    public TimeSpan RemainingTime { get; }
    public LambdaContext(RuntimeApiHeaders runtimeApiHeaders, LambdaEnvironment lambdaEnvironment, IConsoleLoggerWriter consoleLogger);
    public LambdaContext(RuntimeApiHeaders runtimeApiHeaders, LambdaEnvironment lambdaEnvironment, IDateTimeHelper dateTimeHelper, IConsoleLoggerWriter consoleLogger);
    private static LambdaContext();
    public string get_TraceId();
    public sealed virtual string get_AwsRequestId();
    public sealed virtual IClientContext get_ClientContext();
    public sealed virtual string get_FunctionName();
    public sealed virtual string get_FunctionVersion();
    public sealed virtual ICognitoIdentity get_Identity();
    public sealed virtual string get_InvokedFunctionArn();
    public sealed virtual ILambdaLogger get_Logger();
    public sealed virtual string get_LogGroupName();
    public sealed virtual string get_LogStreamName();
    public sealed virtual int get_MemoryLimitInMB();
    public sealed virtual TimeSpan get_RemainingTime();
}
public class Amazon.Lambda.RuntimeSupport.LambdaEnvironment : object {
    internal static string EnvVarExecutionEnvironment;
    internal static string EnvVarFunctionMemorySize;
    internal static string EnvVarFunctionName;
    internal static string EnvVarFunctionVersion;
    internal static string EnvVarHandler;
    internal static string EnvVarLogGroupName;
    internal static string EnvVarLogStreamName;
    internal static string EnvVarServerHostAndPort;
    internal static string EnvVarTraceId;
    internal static string EnvVarFunctionSize;
    internal static string AwsLambdaDotnetCustomRuntime;
    internal static string AmazonLambdaRuntimeSupportMarker;
    private IEnvironmentVariables _environmentVariables;
    internal static int OneMegabyte;
    [CompilerGeneratedAttribute]
private string <FunctionMemorySize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FunctionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FunctionVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogGroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogStreamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RuntimeServerHostAndPort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Handler>k__BackingField;
    public string FunctionMemorySize { get; private set; }
    public string FunctionName { get; private set; }
    public string FunctionVersion { get; private set; }
    public string LogGroupName { get; private set; }
    public string LogStreamName { get; private set; }
    public string RuntimeServerHostAndPort { get; private set; }
    public string Handler { get; private set; }
    public string XAmznTraceId { get; }
    public string ExecutionEnvironment { get; }
    internal LambdaEnvironment(IEnvironmentVariables environmentVariables);
    private void SetExecutionEnvironment();
    internal void SetXAmznTraceId(string xAmznTraceId);
    [CompilerGeneratedAttribute]
public string get_FunctionMemorySize();
    [CompilerGeneratedAttribute]
private void set_FunctionMemorySize(string value);
    [CompilerGeneratedAttribute]
public string get_FunctionName();
    [CompilerGeneratedAttribute]
private void set_FunctionName(string value);
    [CompilerGeneratedAttribute]
public string get_FunctionVersion();
    [CompilerGeneratedAttribute]
private void set_FunctionVersion(string value);
    [CompilerGeneratedAttribute]
public string get_LogGroupName();
    [CompilerGeneratedAttribute]
private void set_LogGroupName(string value);
    [CompilerGeneratedAttribute]
public string get_LogStreamName();
    [CompilerGeneratedAttribute]
private void set_LogStreamName(string value);
    [CompilerGeneratedAttribute]
public string get_RuntimeServerHostAndPort();
    [CompilerGeneratedAttribute]
private void set_RuntimeServerHostAndPort(string value);
    [CompilerGeneratedAttribute]
public string get_Handler();
    [CompilerGeneratedAttribute]
private void set_Handler(string value);
    public string get_XAmznTraceId();
    public string get_ExecutionEnvironment();
}
internal class Amazon.Lambda.RuntimeSupport.LambdaJsonExceptionWriter : object {
    private static Encoding TEXT_ENCODING;
    private static int INDENT_SIZE;
    private static int MAX_PAYLOAD_SIZE;
    private static string ERROR_MESSAGE;
    private static string ERROR_TYPE;
    private static string STACK_TRACE;
    private static string INNER_EXCEPTION;
    private static string INNER_EXCEPTIONS;
    private static string TRUNCATED_MESSAGE;
    private static LambdaJsonExceptionWriter();
    public static string WriteJson(ExceptionInfo ex);
    private static string AppendJson(ExceptionInfo ex, int tab, bool appendComma, int remainingRoom);
    private static string GetStackTraceJson(string stackTrace, int tab);
    private static string TabString(string str, int tabDepth);
}
internal class Amazon.Lambda.RuntimeSupport.LambdaXRayExceptionWriter : object {
    private static int INDENT_SIZE;
    private static string EXCEPTION;
    private static string WORKING_DIR;
    private static string PATHS;
    private static string ERROR_MESSAGE;
    private static string ERROR_TYPE;
    private static string STACK_TRACE;
    private static string STACK_FRAME_METHOD;
    private static string STACK_FRAME_FILE;
    private static string STACK_FRAME_LINE;
    public static string WriteJson(ExceptionInfo ex);
    private static string CreateExceptionJson(ExceptionInfo ex, int tab);
    private static string GetStackTraceJson(StackFrameInfo[] stackTrace, int tab);
    private static string CreateStackFrameJson(StackFrameInfo stackFrame, int tab);
    private static string TabString(string str, int tabDepth);
    private static string CombinePartsIntoJsonObject(int tab, char openChar, char closeChar, String[] parts);
    private static String[] GetNonNullElements(String[] elements);
}
internal class Amazon.Lambda.RuntimeSupport.MeteredStringBuilder : object {
    private int _maxSize;
    private Encoding _encoding;
    private StringBuilder _stringBuilder;
    [CompilerGeneratedAttribute]
private int <SizeInBytes>k__BackingField;
    public int SizeInBytes { get; private set; }
    public MeteredStringBuilder(Encoding encoding, int maxSize);
    [CompilerGeneratedAttribute]
public int get_SizeInBytes();
    [CompilerGeneratedAttribute]
private void set_SizeInBytes(int value);
    public void Append(string str);
    public void AppendLine(string str);
    public void AppendLine();
    public bool HasRoomForString(string str);
    public virtual string ToString();
}
internal class Amazon.Lambda.RuntimeSupport.NonDisposingStreamWrapper : Stream {
    private Stream _wrappedStream;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public NonDisposingStreamWrapper(Stream wrappedStream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
}
internal class Amazon.Lambda.RuntimeSupport.Program : object {
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.Program/<Main>d__0")]
private static Task Main(String[] args);
}
public class Amazon.Lambda.RuntimeSupport.RuntimeApiClient : object {
    private HttpClient _httpClient;
    private IInternalRuntimeApiClient _internalClient;
    private IConsoleLoggerWriter _consoleLoggerRedirector;
    [CompilerGeneratedAttribute]
private Func`2<Exception, ExceptionInfo> <ExceptionConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private LambdaEnvironment <LambdaEnvironment>k__BackingField;
    internal Func`2<Exception, ExceptionInfo> ExceptionConverter { get; internal set; }
    internal LambdaEnvironment LambdaEnvironment { get; internal set; }
    public IConsoleLoggerWriter ConsoleLogger { get; }
    public RuntimeApiClient(HttpClient httpClient);
    internal RuntimeApiClient(IEnvironmentVariables environmentVariables, HttpClient httpClient);
    internal RuntimeApiClient(IEnvironmentVariables environmentVariables, IInternalRuntimeApiClient internalClient);
    [CompilerGeneratedAttribute]
internal Func`2<Exception, ExceptionInfo> get_ExceptionConverter();
    [CompilerGeneratedAttribute]
internal void set_ExceptionConverter(Func`2<Exception, ExceptionInfo> value);
    [CompilerGeneratedAttribute]
internal LambdaEnvironment get_LambdaEnvironment();
    [CompilerGeneratedAttribute]
internal void set_LambdaEnvironment(LambdaEnvironment value);
    public sealed virtual IConsoleLoggerWriter get_ConsoleLogger();
    public sealed virtual Task ReportInitializationErrorAsync(Exception exception, CancellationToken cancellationToken);
    public sealed virtual Task ReportInitializationErrorAsync(string errorType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.RuntimeApiClient/<GetNextInvocationAsync>d__18")]
public sealed virtual Task`1<InvocationRequest> GetNextInvocationAsync(CancellationToken cancellationToken);
    public sealed virtual Task ReportInvocationErrorAsync(string awsRequestId, Exception exception, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.RuntimeApiClient/<SendResponseAsync>d__20")]
public sealed virtual Task SendResponseAsync(string awsRequestId, Stream outputStream, CancellationToken cancellationToken);
}
public class Amazon.Lambda.RuntimeSupport.RuntimeApiClientException : Exception {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IEnumerable`1<string>> <Headers>k__BackingField;
    public int StatusCode { get; private set; }
    public string Response { get; private set; }
    public Dictionary`2<string, IEnumerable`1<string>> Headers { get; private set; }
    public RuntimeApiClientException(string message, int statusCode, string response, Dictionary`2<string, IEnumerable`1<string>> headers, Exception innerException);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    [CompilerGeneratedAttribute]
private void set_StatusCode(int value);
    [CompilerGeneratedAttribute]
public string get_Response();
    [CompilerGeneratedAttribute]
private void set_Response(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, IEnumerable`1<string>> get_Headers();
    [CompilerGeneratedAttribute]
private void set_Headers(Dictionary`2<string, IEnumerable`1<string>> value);
    public virtual string ToString();
}
public class Amazon.Lambda.RuntimeSupport.RuntimeApiClientException`1 : RuntimeApiClientException {
    [CompilerGeneratedAttribute]
private TResult <Result>k__BackingField;
    public TResult Result { get; private set; }
    public RuntimeApiClientException`1(string message, int statusCode, string response, Dictionary`2<string, IEnumerable`1<string>> headers, TResult result, Exception innerException);
    [CompilerGeneratedAttribute]
public TResult get_Result();
    [CompilerGeneratedAttribute]
private void set_Result(TResult value);
}
internal class Amazon.Lambda.RuntimeSupport.RuntimeApiHeaders : object {
    internal static string HeaderAwsRequestId;
    internal static string HeaderTraceId;
    internal static string HeaderClientContext;
    internal static string HeaderCognitoIdentity;
    internal static string HeaderDeadlineMs;
    internal static string HeaderInvokedFunctionArn;
    [CompilerGeneratedAttribute]
private string <AwsRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InvokedFunctionArn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientContextJson>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CognitoIdentityJson>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeadlineMs>k__BackingField;
    public string AwsRequestId { get; private set; }
    public string InvokedFunctionArn { get; private set; }
    public string TraceId { get; private set; }
    public string ClientContextJson { get; private set; }
    public string CognitoIdentityJson { get; private set; }
    public string DeadlineMs { get; private set; }
    public RuntimeApiHeaders(Dictionary`2<string, IEnumerable`1<string>> headers);
    [CompilerGeneratedAttribute]
public string get_AwsRequestId();
    [CompilerGeneratedAttribute]
private void set_AwsRequestId(string value);
    [CompilerGeneratedAttribute]
public string get_InvokedFunctionArn();
    [CompilerGeneratedAttribute]
private void set_InvokedFunctionArn(string value);
    [CompilerGeneratedAttribute]
public string get_TraceId();
    [CompilerGeneratedAttribute]
private void set_TraceId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientContextJson();
    [CompilerGeneratedAttribute]
private void set_ClientContextJson(string value);
    [CompilerGeneratedAttribute]
public string get_CognitoIdentityJson();
    [CompilerGeneratedAttribute]
private void set_CognitoIdentityJson(string value);
    [CompilerGeneratedAttribute]
public string get_DeadlineMs();
    [CompilerGeneratedAttribute]
private void set_DeadlineMs(string value);
    private string GetHeaderValueRequired(Dictionary`2<string, IEnumerable`1<string>> headers, string header);
    private string GetHeaderValueOrNull(Dictionary`2<string, IEnumerable`1<string>> headers, string header);
}
public class Amazon.Lambda.RuntimeSupport.RuntimeSupportInitializer : object {
    private string _handler;
    private InternalLogger _logger;
    private RuntimeSupportDebugAttacher _debugAttacher;
    public RuntimeSupportInitializer(string handler);
    [AsyncStateMachineAttribute("Amazon.Lambda.RuntimeSupport.RuntimeSupportInitializer/<RunLambdaBootstrap>d__4")]
public Task RunLambdaBootstrap();
}
internal class Amazon.Lambda.RuntimeSupport.Serializers.StreamSerializer : object {
    [CompilerGeneratedAttribute]
private static StreamSerializer <Instance>k__BackingField;
    public static StreamSerializer Instance { get; }
    private static StreamSerializer();
    [CompilerGeneratedAttribute]
public static StreamSerializer get_Instance();
    public Stream Deserialize(Stream lambdaData);
    public void Serialize(Stream customerData, Stream outStream);
}
internal class Amazon.Lambda.RuntimeSupport.StackFrameInfo : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Line>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    public string Path { get; }
    public int Line { get; }
    public string Label { get; }
    public StackFrameInfo(string path, int line, string label);
    public StackFrameInfo(StackFrame stackFrame);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public int get_Line();
    [CompilerGeneratedAttribute]
public string get_Label();
}
internal class Amazon.Lambda.RuntimeSupport.StatusResponse : object {
    [CompilerGeneratedAttribute]
private string <status>k__BackingField;
    public string status { get; public set; }
    [CompilerGeneratedAttribute]
public string get_status();
    [CompilerGeneratedAttribute]
public void set_status(string value);
}
internal class Amazon.Lambda.RuntimeSupport.SwaggerResponse : object {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IEnumerable`1<string>> <Headers>k__BackingField;
    public int StatusCode { get; private set; }
    public Dictionary`2<string, IEnumerable`1<string>> Headers { get; private set; }
    public SwaggerResponse(int statusCode, Dictionary`2<string, IEnumerable`1<string>> headers);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    [CompilerGeneratedAttribute]
private void set_StatusCode(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, IEnumerable`1<string>> get_Headers();
    [CompilerGeneratedAttribute]
private void set_Headers(Dictionary`2<string, IEnumerable`1<string>> value);
}
internal class Amazon.Lambda.RuntimeSupport.SwaggerResponse`1 : SwaggerResponse {
    [CompilerGeneratedAttribute]
private TResult <Result>k__BackingField;
    public TResult Result { get; private set; }
    public SwaggerResponse`1(int statusCode, Dictionary`2<string, IEnumerable`1<string>> headers, TResult result);
    [CompilerGeneratedAttribute]
public TResult get_Result();
    [CompilerGeneratedAttribute]
private void set_Result(TResult value);
}
internal class Amazon.Lambda.RuntimeSupport.SystemEnvironmentVariables : object {
    public sealed virtual string GetEnvironmentVariable(string variable);
    public sealed virtual IDictionary GetEnvironmentVariables();
    public sealed virtual void SetEnvironmentVariable(string variable, string value);
}
