[ExtensionAttribute]
public static class App.Metrics.AspNetCore.DefaultMetricsAspNetHostBuilderExtensions : object {
    [ExtensionAttribute]
public static IHostBuilder UseMetrics(IHostBuilder hostBuilder);
    [ExtensionAttribute]
public static IHostBuilder UseMetrics(IHostBuilder hostBuilder, Action`1<MetricsWebHostOptions> optionsDelegate);
    [ExtensionAttribute]
public static IHostBuilder UseMetrics(IHostBuilder hostBuilder, Action`2<HostBuilderContext, MetricsWebHostOptions> optionsDelegate);
    [ExtensionAttribute]
public static IHostBuilder UseMetrics(IHostBuilder hostBuilder, Action`1<MetricsWebHostOptions> optionsDelegate);
    [ExtensionAttribute]
public static IHostBuilder UseMetrics(IHostBuilder hostBuilder);
}
[ExtensionAttribute]
public static class App.Metrics.AspNetCore.DefaultMetricsAspNetWebHostBuilderExtensions : object {
    [ExtensionAttribute]
public static IWebHostBuilder UseMetrics(IWebHostBuilder hostBuilder);
    [ExtensionAttribute]
public static IWebHostBuilder UseMetrics(IWebHostBuilder hostBuilder, Action`1<MetricsWebHostOptions> optionsDelegate);
    [ExtensionAttribute]
public static IWebHostBuilder UseMetrics(IWebHostBuilder hostBuilder, Action`2<WebHostBuilderContext, MetricsWebHostOptions> optionsDelegate);
    [ExtensionAttribute]
public static IWebHostBuilder UseMetrics(IWebHostBuilder hostBuilder, Action`1<MetricsWebHostOptions> optionsDelegate);
    [ExtensionAttribute]
public static IWebHostBuilder UseMetrics(IWebHostBuilder hostBuilder);
}
public class App.Metrics.AspNetCore.DefaultMetricsStartupFilter : object {
    public sealed virtual Action`1<IApplicationBuilder> Configure(Action`1<IApplicationBuilder> next);
}
public class App.Metrics.AspNetCore.MetricsWebHostOptions : object {
    [CompilerGeneratedAttribute]
private Action`1<MetricEndpointsOptions> <EndpointOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<MetricsWebTrackingOptions> <TrackingMiddlewareOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHandler`1<UnobservedTaskExceptionEventArgs> <UnobservedTaskExceptionHandler>k__BackingField;
    public Action`1<MetricEndpointsOptions> EndpointOptions { get; public set; }
    public Action`1<MetricsWebTrackingOptions> TrackingMiddlewareOptions { get; public set; }
    public EventHandler`1<UnobservedTaskExceptionEventArgs> UnobservedTaskExceptionHandler { get; public set; }
    [CompilerGeneratedAttribute]
public Action`1<MetricEndpointsOptions> get_EndpointOptions();
    [CompilerGeneratedAttribute]
public void set_EndpointOptions(Action`1<MetricEndpointsOptions> value);
    [CompilerGeneratedAttribute]
public Action`1<MetricsWebTrackingOptions> get_TrackingMiddlewareOptions();
    [CompilerGeneratedAttribute]
public void set_TrackingMiddlewareOptions(Action`1<MetricsWebTrackingOptions> value);
    [CompilerGeneratedAttribute]
public EventHandler`1<UnobservedTaskExceptionEventArgs> get_UnobservedTaskExceptionHandler();
    [CompilerGeneratedAttribute]
public void set_UnobservedTaskExceptionHandler(EventHandler`1<UnobservedTaskExceptionEventArgs> value);
}
