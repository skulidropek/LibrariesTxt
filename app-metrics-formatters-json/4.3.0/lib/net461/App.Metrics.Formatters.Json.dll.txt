[ExtensionAttribute]
public static class App.Metrics.Apdex.ApdexValueSourceSerializationExtensions : object {
    [ExtensionAttribute]
public static ApdexValueSource FromSerializableMetric(ApdexMetric source);
    [ExtensionAttribute]
public static IEnumerable`1<ApdexValueSource> FromSerializableMetric(IEnumerable`1<ApdexMetric> source);
    [ExtensionAttribute]
public static IEnumerable`1<ApdexMetric> ToSerializableMetric(IEnumerable`1<ApdexValueSource> source);
    [ExtensionAttribute]
public static ApdexMetric ToSerializableMetric(ApdexValueSource source);
}
[ExtensionAttribute]
public static class App.Metrics.Counter.CounterValueSourceSerializationExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<CounterMetric> ToSerializableMetric(IEnumerable`1<CounterValueSource> source);
    [ExtensionAttribute]
public static CounterMetric ToSerializableMetric(CounterValueSource source);
    [ExtensionAttribute]
public static CounterValueSource FromSerializableMetric(CounterMetric source);
    [ExtensionAttribute]
public static IEnumerable`1<CounterValueSource> FromSerializableMetric(IEnumerable`1<CounterMetric> source);
}
[ExtensionAttribute]
public static class App.Metrics.EnvJsonOutputFormatterBuilder : object {
    [ExtensionAttribute]
public static IMetricsBuilder AsJson(IEnvOutputFormattingBuilder envFormattingBuilder, Action`1<MetricsJsonOptions> setupAction);
}
public class App.Metrics.Formatters.Json.ApdexMetric : MetricBase {
    [CompilerGeneratedAttribute]
private int <Frustrating>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SampleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Satisfied>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Score>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Tolerating>k__BackingField;
    public int Frustrating { get; public set; }
    public int SampleSize { get; public set; }
    public int Satisfied { get; public set; }
    public double Score { get; public set; }
    public int Tolerating { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Frustrating();
    [CompilerGeneratedAttribute]
public void set_Frustrating(int value);
    [CompilerGeneratedAttribute]
public int get_SampleSize();
    [CompilerGeneratedAttribute]
public void set_SampleSize(int value);
    [CompilerGeneratedAttribute]
public int get_Satisfied();
    [CompilerGeneratedAttribute]
public void set_Satisfied(int value);
    [CompilerGeneratedAttribute]
public double get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(double value);
    [CompilerGeneratedAttribute]
public int get_Tolerating();
    [CompilerGeneratedAttribute]
public void set_Tolerating(int value);
}
public class App.Metrics.Formatters.Json.BucketHistogramMetric : MetricBase {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Sum>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<double, double> <Buckets>k__BackingField;
    public long Count { get; public set; }
    public double Sum { get; public set; }
    public IDictionary`2<double, double> Buckets { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public double get_Sum();
    [CompilerGeneratedAttribute]
public void set_Sum(double value);
    [CompilerGeneratedAttribute]
public IDictionary`2<double, double> get_Buckets();
    [CompilerGeneratedAttribute]
public void set_Buckets(IDictionary`2<double, double> value);
}
public class App.Metrics.Formatters.Json.BucketTimerMetric : MetricBase {
    [CompilerGeneratedAttribute]
private long <ActiveSessions>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DurationUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private BucketHistogramData <Histogram>k__BackingField;
    [CompilerGeneratedAttribute]
private RateData <Rate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RateUnit>k__BackingField;
    public long ActiveSessions { get; public set; }
    public long Count { get; public set; }
    public string DurationUnit { get; public set; }
    public BucketHistogramData Histogram { get; public set; }
    public RateData Rate { get; public set; }
    public string RateUnit { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ActiveSessions();
    [CompilerGeneratedAttribute]
public void set_ActiveSessions(long value);
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public string get_DurationUnit();
    [CompilerGeneratedAttribute]
public void set_DurationUnit(string value);
    [CompilerGeneratedAttribute]
public BucketHistogramData get_Histogram();
    [CompilerGeneratedAttribute]
public void set_Histogram(BucketHistogramData value);
    [CompilerGeneratedAttribute]
public RateData get_Rate();
    [CompilerGeneratedAttribute]
public void set_Rate(RateData value);
    [CompilerGeneratedAttribute]
public string get_RateUnit();
    [CompilerGeneratedAttribute]
public void set_RateUnit(string value);
}
public class App.Metrics.Formatters.Json.Converters.ApdexConverter : JsonConverter`1<ApdexValueSource> {
    public virtual bool CanConvert(Type objectType);
    public virtual ApdexValueSource Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, ApdexValueSource value, JsonSerializerOptions options);
}
public class App.Metrics.Formatters.Json.Converters.CounterConverter : JsonConverter`1<CounterValueSource> {
    public virtual bool CanConvert(Type objectType);
    public virtual CounterValueSource Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, CounterValueSource value, JsonSerializerOptions options);
}
public class App.Metrics.Formatters.Json.Converters.DictionaryConverter : JsonConverterFactory {
    public virtual bool CanConvert(Type typeToConvert);
    public virtual JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions options);
}
public class App.Metrics.Formatters.Json.Converters.DictionaryConverter`2 : JsonConverter`1<Dictionary`2<TKey, TValue>> {
    public virtual Dictionary`2<TKey, TValue> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, Dictionary`2<TKey, TValue> value, JsonSerializerOptions options);
    private static bool IsInvalidJsonDouble(double value);
    private ValueTuple`2<TKey, TValue> ReadEntry(Utf8JsonReader& reader, JsonSerializerOptions options);
    private static string ToJsonDoubleString(double value);
}
public class App.Metrics.Formatters.Json.Converters.EnvironmentInfoConverter : JsonConverter`1<EnvironmentInfo> {
    public virtual bool CanConvert(Type objectType);
    public virtual EnvironmentInfo Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, EnvironmentInfo value, JsonSerializerOptions options);
}
public class App.Metrics.Formatters.Json.Converters.GaugeConverter : JsonConverter`1<GaugeValueSource> {
    public virtual bool CanConvert(Type objectType);
    public virtual GaugeValueSource Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, GaugeValueSource value, JsonSerializerOptions options);
}
public class App.Metrics.Formatters.Json.Converters.HistogramConverter : JsonConverter`1<HistogramValueSource> {
    public virtual bool CanConvert(Type objectType);
    public virtual HistogramValueSource Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, HistogramValueSource value, JsonSerializerOptions options);
}
public class App.Metrics.Formatters.Json.Converters.MeterConverter : JsonConverter`1<MeterValueSource> {
    public virtual bool CanConvert(Type objectType);
    public virtual MeterValueSource Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, MeterValueSource value, JsonSerializerOptions options);
}
public class App.Metrics.Formatters.Json.Converters.MetricDataConverter : JsonConverter`1<MetricsDataValueSource> {
    public virtual bool CanConvert(Type objectType);
    public virtual MetricsDataValueSource Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, MetricsDataValueSource value, JsonSerializerOptions options);
}
public class App.Metrics.Formatters.Json.Converters.TimerConverter : JsonConverter`1<TimerValueSource> {
    public virtual bool CanConvert(Type objectType);
    public virtual TimerValueSource Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, TimerValueSource value, JsonSerializerOptions options);
}
public class App.Metrics.Formatters.Json.CounterMetric : MetricBase {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<SetItem> <Items>k__BackingField;
    public long Count { get; public set; }
    public IEnumerable`1<SetItem> Items { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<SetItem> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IEnumerable`1<SetItem> value);
}
public static class App.Metrics.Formatters.Json.DefaultJsonSerializerSettings : object {
    private static int DefaultMaxDepth;
    public static JsonSerializerOptions CreateSerializerOptions();
}
public class App.Metrics.Formatters.Json.EnvInfoJsonOutputFormatter : object {
    private JsonSerializerOptions _serializerSettings;
    public MetricsMediaTypeValue MediaType { get; }
    public EnvInfoJsonOutputFormatter(JsonSerializerOptions serializerSettings);
    public sealed virtual MetricsMediaTypeValue get_MediaType();
    public sealed virtual Task WriteAsync(Stream output, EnvironmentInfo environmentInfo, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class App.Metrics.Formatters.Json.Extensions.MetricDataSerializationExtensions : object {
    [ExtensionAttribute]
public static MetricData ToMetric(MetricsDataValueSource source);
    [ExtensionAttribute]
public static MetricsDataValueSource ToMetricValueSource(MetricData source);
}
public class App.Metrics.Formatters.Json.GaugeMetric : MetricBase {
    private double _value;
    public Nullable`1<double> Value { get; public set; }
    public Nullable`1<double> get_Value();
    public void set_Value(Nullable`1<double> value);
    public static GaugeMetric FromGauge(MetricValueSourceBase`1<double> gauge);
}
public class App.Metrics.Formatters.Json.HistogramMetric : MetricBase {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Sum>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastUserValue>k__BackingField;
    [CompilerGeneratedAttribute]
private double <LastValue>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxUserValue>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Mean>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Median>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MinUserValue>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Percentile75>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Percentile95>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Percentile98>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Percentile99>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Percentile999>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SampleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private double <StdDev>k__BackingField;
    public long Count { get; public set; }
    public double Sum { get; public set; }
    public string LastUserValue { get; public set; }
    public double LastValue { get; public set; }
    public double Max { get; public set; }
    public string MaxUserValue { get; public set; }
    public double Mean { get; public set; }
    public double Median { get; public set; }
    public double Min { get; public set; }
    public string MinUserValue { get; public set; }
    public double Percentile75 { get; public set; }
    public double Percentile95 { get; public set; }
    public double Percentile98 { get; public set; }
    public double Percentile99 { get; public set; }
    public double Percentile999 { get; public set; }
    public int SampleSize { get; public set; }
    public double StdDev { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public double get_Sum();
    [CompilerGeneratedAttribute]
public void set_Sum(double value);
    [CompilerGeneratedAttribute]
public string get_LastUserValue();
    [CompilerGeneratedAttribute]
public void set_LastUserValue(string value);
    [CompilerGeneratedAttribute]
public double get_LastValue();
    [CompilerGeneratedAttribute]
public void set_LastValue(double value);
    [CompilerGeneratedAttribute]
public double get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(double value);
    [CompilerGeneratedAttribute]
public string get_MaxUserValue();
    [CompilerGeneratedAttribute]
public void set_MaxUserValue(string value);
    [CompilerGeneratedAttribute]
public double get_Mean();
    [CompilerGeneratedAttribute]
public void set_Mean(double value);
    [CompilerGeneratedAttribute]
public double get_Median();
    [CompilerGeneratedAttribute]
public void set_Median(double value);
    [CompilerGeneratedAttribute]
public double get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(double value);
    [CompilerGeneratedAttribute]
public string get_MinUserValue();
    [CompilerGeneratedAttribute]
public void set_MinUserValue(string value);
    [CompilerGeneratedAttribute]
public double get_Percentile75();
    [CompilerGeneratedAttribute]
public void set_Percentile75(double value);
    [CompilerGeneratedAttribute]
public double get_Percentile95();
    [CompilerGeneratedAttribute]
public void set_Percentile95(double value);
    [CompilerGeneratedAttribute]
public double get_Percentile98();
    [CompilerGeneratedAttribute]
public void set_Percentile98(double value);
    [CompilerGeneratedAttribute]
public double get_Percentile99();
    [CompilerGeneratedAttribute]
public void set_Percentile99(double value);
    [CompilerGeneratedAttribute]
public double get_Percentile999();
    [CompilerGeneratedAttribute]
public void set_Percentile999(double value);
    [CompilerGeneratedAttribute]
public int get_SampleSize();
    [CompilerGeneratedAttribute]
public void set_SampleSize(int value);
    [CompilerGeneratedAttribute]
public double get_StdDev();
    [CompilerGeneratedAttribute]
public void set_StdDev(double value);
}
public class App.Metrics.Formatters.Json.MeterMetric : MetricBase {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private double <FifteenMinuteRate>k__BackingField;
    [CompilerGeneratedAttribute]
private double <FiveMinuteRate>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<SetItem> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private double <MeanRate>k__BackingField;
    [CompilerGeneratedAttribute]
private double <OneMinuteRate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RateUnit>k__BackingField;
    public long Count { get; public set; }
    public double FifteenMinuteRate { get; public set; }
    public double FiveMinuteRate { get; public set; }
    public IEnumerable`1<SetItem> Items { get; public set; }
    public double MeanRate { get; public set; }
    public double OneMinuteRate { get; public set; }
    public string RateUnit { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public double get_FifteenMinuteRate();
    [CompilerGeneratedAttribute]
public void set_FifteenMinuteRate(double value);
    [CompilerGeneratedAttribute]
public double get_FiveMinuteRate();
    [CompilerGeneratedAttribute]
public void set_FiveMinuteRate(double value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<SetItem> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IEnumerable`1<SetItem> value);
    [CompilerGeneratedAttribute]
public double get_MeanRate();
    [CompilerGeneratedAttribute]
public void set_MeanRate(double value);
    [CompilerGeneratedAttribute]
public double get_OneMinuteRate();
    [CompilerGeneratedAttribute]
public void set_OneMinuteRate(double value);
    [CompilerGeneratedAttribute]
public string get_RateUnit();
    [CompilerGeneratedAttribute]
public void set_RateUnit(string value);
}
public abstract class App.Metrics.Formatters.Json.MetricBase : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Unit>k__BackingField;
    public string Name { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string Unit { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Unit();
    [CompilerGeneratedAttribute]
public void set_Unit(string value);
}
[ExtensionAttribute]
public static class App.Metrics.Formatters.Json.MetricContextSerializationExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<MetricsContextValueSource> FromSerializableMetric(IEnumerable`1<MetricsContext> source);
    [ExtensionAttribute]
public static IEnumerable`1<MetricsContext> ToSerializableMetric(IEnumerable`1<MetricsContextValueSource> source);
    [ExtensionAttribute]
private static MetricsContextValueSource FromSerializableMetric(MetricsContext source);
    [ExtensionAttribute]
private static MetricsContext ToSerializableMetric(MetricsContextValueSource source);
}
public class App.Metrics.Formatters.Json.MetricData : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<MetricsContext> <Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Timestamp>k__BackingField;
    public IEnumerable`1<MetricsContext> Contexts { get; public set; }
    public DateTime Timestamp { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<MetricsContext> get_Contexts();
    [CompilerGeneratedAttribute]
public void set_Contexts(IEnumerable`1<MetricsContext> value);
    [CompilerGeneratedAttribute]
public DateTime get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(DateTime value);
}
public class App.Metrics.Formatters.Json.MetricsContext : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ApdexMetric> <ApdexScores>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<CounterMetric> <Counters>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<GaugeMetric> <Gauges>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<HistogramMetric> <Histograms>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<BucketHistogramMetric> <BucketHistograms>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<MeterMetric> <Meters>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<TimerMetric> <Timers>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<BucketTimerMetric> <BucketTimers>k__BackingField;
    public IEnumerable`1<ApdexMetric> ApdexScores { get; public set; }
    public string Context { get; public set; }
    public IEnumerable`1<CounterMetric> Counters { get; public set; }
    public IEnumerable`1<GaugeMetric> Gauges { get; public set; }
    public IEnumerable`1<HistogramMetric> Histograms { get; public set; }
    public IEnumerable`1<BucketHistogramMetric> BucketHistograms { get; public set; }
    public IEnumerable`1<MeterMetric> Meters { get; public set; }
    public IEnumerable`1<TimerMetric> Timers { get; public set; }
    public IEnumerable`1<BucketTimerMetric> BucketTimers { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<ApdexMetric> get_ApdexScores();
    [CompilerGeneratedAttribute]
public void set_ApdexScores(IEnumerable`1<ApdexMetric> value);
    [CompilerGeneratedAttribute]
public string get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<CounterMetric> get_Counters();
    [CompilerGeneratedAttribute]
public void set_Counters(IEnumerable`1<CounterMetric> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<GaugeMetric> get_Gauges();
    [CompilerGeneratedAttribute]
public void set_Gauges(IEnumerable`1<GaugeMetric> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<HistogramMetric> get_Histograms();
    [CompilerGeneratedAttribute]
public void set_Histograms(IEnumerable`1<HistogramMetric> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<BucketHistogramMetric> get_BucketHistograms();
    [CompilerGeneratedAttribute]
public void set_BucketHistograms(IEnumerable`1<BucketHistogramMetric> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<MeterMetric> get_Meters();
    [CompilerGeneratedAttribute]
public void set_Meters(IEnumerable`1<MeterMetric> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<TimerMetric> get_Timers();
    [CompilerGeneratedAttribute]
public void set_Timers(IEnumerable`1<TimerMetric> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<BucketTimerMetric> get_BucketTimers();
    [CompilerGeneratedAttribute]
public void set_BucketTimers(IEnumerable`1<BucketTimerMetric> value);
}
public class App.Metrics.Formatters.Json.MetricsJsonOptions : object {
    [CompilerGeneratedAttribute]
private JsonSerializerOptions <SerializerSettings>k__BackingField;
    public JsonSerializerOptions SerializerSettings { get; }
    [CompilerGeneratedAttribute]
public JsonSerializerOptions get_SerializerSettings();
}
public class App.Metrics.Formatters.Json.MetricsJsonOutputFormatter : object {
    private JsonSerializerOptions _serializerSettings;
    [CompilerGeneratedAttribute]
private MetricFields <MetricFields>k__BackingField;
    public MetricsMediaTypeValue MediaType { get; }
    public MetricFields MetricFields { get; public set; }
    public MetricsJsonOutputFormatter(JsonSerializerOptions serializerSettings);
    public sealed virtual MetricsMediaTypeValue get_MediaType();
    [CompilerGeneratedAttribute]
public sealed virtual MetricFields get_MetricFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MetricFields(MetricFields value);
    public sealed virtual Task WriteAsync(Stream output, MetricsDataValueSource metricData, CancellationToken cancellationToken);
}
public class App.Metrics.Formatters.Json.TimerMetric : MetricBase {
    [CompilerGeneratedAttribute]
private long <ActiveSessions>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DurationUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private HistogramData <Histogram>k__BackingField;
    [CompilerGeneratedAttribute]
private RateData <Rate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RateUnit>k__BackingField;
    public long ActiveSessions { get; public set; }
    public long Count { get; public set; }
    public string DurationUnit { get; public set; }
    public HistogramData Histogram { get; public set; }
    public RateData Rate { get; public set; }
    public string RateUnit { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ActiveSessions();
    [CompilerGeneratedAttribute]
public void set_ActiveSessions(long value);
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public string get_DurationUnit();
    [CompilerGeneratedAttribute]
public void set_DurationUnit(string value);
    [CompilerGeneratedAttribute]
public HistogramData get_Histogram();
    [CompilerGeneratedAttribute]
public void set_Histogram(HistogramData value);
    [CompilerGeneratedAttribute]
public RateData get_Rate();
    [CompilerGeneratedAttribute]
public void set_Rate(RateData value);
    [CompilerGeneratedAttribute]
public string get_RateUnit();
    [CompilerGeneratedAttribute]
public void set_RateUnit(string value);
}
[ExtensionAttribute]
public static class App.Metrics.Gauge.GaugeValueSourceSerializationExtensions : object {
    [ExtensionAttribute]
public static GaugeValueSource FromSerializableMetric(GaugeMetric source);
    [ExtensionAttribute]
public static IEnumerable`1<GaugeValueSource> FromSerializableMetric(IEnumerable`1<GaugeMetric> source);
    [ExtensionAttribute]
public static IEnumerable`1<GaugeMetric> ToSerializableMetric(IEnumerable`1<GaugeValueSource> source);
    [ExtensionAttribute]
public static GaugeMetric ToSerializableMetric(GaugeValueSource source);
}
[ExtensionAttribute]
public static class App.Metrics.Histogram.HistogramValueSourceSerializationExtensions : object {
    [ExtensionAttribute]
public static HistogramValueSource FromSerializableMetric(HistogramMetric source);
    [ExtensionAttribute]
public static BucketHistogramValueSource FromSerializableMetric(BucketHistogramMetric source);
    [ExtensionAttribute]
public static IEnumerable`1<HistogramValueSource> FromSerializableMetric(IEnumerable`1<HistogramMetric> source);
    [ExtensionAttribute]
public static IEnumerable`1<BucketHistogramValueSource> FromSerializableMetric(IEnumerable`1<BucketHistogramMetric> source);
    [ExtensionAttribute]
public static IEnumerable`1<HistogramMetric> ToSerializableMetric(IEnumerable`1<HistogramValueSource> source);
    [ExtensionAttribute]
public static IEnumerable`1<BucketHistogramMetric> ToSerializableMetric(IEnumerable`1<BucketHistogramValueSource> source);
    [ExtensionAttribute]
public static HistogramMetric ToSerializableMetric(HistogramValueSource source);
    [ExtensionAttribute]
public static BucketHistogramMetric ToSerializableMetric(BucketHistogramValueSource source);
}
[ExtensionAttribute]
public static class App.Metrics.Meter.MeterValueSourceSerializationExtensions : object {
    [ExtensionAttribute]
public static MeterValueSource FromSerializableMetric(MeterMetric source);
    [ExtensionAttribute]
public static IEnumerable`1<MeterValueSource> FromSerializableMetric(IEnumerable`1<MeterMetric> source);
    [ExtensionAttribute]
public static IEnumerable`1<MeterMetric> ToSerializableMetric(IEnumerable`1<MeterValueSource> source);
    [ExtensionAttribute]
public static MeterMetric ToSerializableMetric(MeterValueSource source);
}
[ExtensionAttribute]
public static class App.Metrics.MetricsJsonOutputFormatterBuilder : object {
    [ExtensionAttribute]
public static IMetricsBuilder AsJson(IMetricsOutputFormattingBuilder metricFormattingBuilder, Action`1<MetricsJsonOptions> setupAction);
}
[ExtensionAttribute]
public static class App.Metrics.Timer.TimerValueSourceSerializationExtensions : object {
    [ExtensionAttribute]
public static TimerValueSource FromSerializableMetric(TimerMetric source);
    [ExtensionAttribute]
public static BucketTimerValueSource FromSerializableMetric(BucketTimerMetric source);
    [ExtensionAttribute]
public static IEnumerable`1<TimerValueSource> FromSerializableMetric(IEnumerable`1<TimerMetric> source);
    [ExtensionAttribute]
public static IEnumerable`1<BucketTimerValueSource> FromSerializableMetric(IEnumerable`1<BucketTimerMetric> source);
    [ExtensionAttribute]
public static IEnumerable`1<TimerMetric> ToSerializableMetric(IEnumerable`1<TimerValueSource> source);
    [ExtensionAttribute]
public static IEnumerable`1<BucketTimerMetric> ToSerializableMetric(IEnumerable`1<BucketTimerValueSource> source);
    [ExtensionAttribute]
public static TimerMetric ToSerializableMetric(TimerValueSource source);
    [ExtensionAttribute]
public static BucketTimerMetric ToSerializableMetric(BucketTimerValueSource source);
}
