[ProtoContractAttribute]
public class App.Metrics.Formatters.Prometheus.Bucket : object {
    private ulong _cumulative_count;
    private double _upper_bound;
    private IExtension extensionObject;
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public ulong cumulative_count { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public double upper_bound { get; public set; }
    public ulong get_cumulative_count();
    public void set_cumulative_count(ulong value);
    public double get_upper_bound();
    public void set_upper_bound(double value);
    private sealed virtual override IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing);
}
[ProtoContractAttribute]
public class App.Metrics.Formatters.Prometheus.Counter : object {
    private double _value;
    private IExtension extensionObject;
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public double value { get; public set; }
    public double get_value();
    public void set_value(double value);
    private sealed virtual override IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing);
}
[ProtoContractAttribute]
public class App.Metrics.Formatters.Prometheus.Gauge : object {
    private double _value;
    private IExtension extensionObject;
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public double value { get; public set; }
    public double get_value();
    public void set_value(double value);
    private sealed virtual override IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing);
}
[ProtoContractAttribute]
public class App.Metrics.Formatters.Prometheus.Histogram : object {
    private ulong _sample_count;
    private double _sample_sum;
    private List`1<Bucket> _bucket;
    private IExtension extensionObject;
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public ulong sample_count { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public double sample_sum { get; public set; }
    [ProtoMemberAttribute]
public List`1<Bucket> bucket { get; }
    public ulong get_sample_count();
    public void set_sample_count(ulong value);
    public double get_sample_sum();
    public void set_sample_sum(double value);
    public List`1<Bucket> get_bucket();
    private sealed virtual override IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing);
}
internal static class App.Metrics.Formatters.Prometheus.Internal.AsciiFormatter : object {
    private static UTF8Encoding Encoding;
    private static AsciiFormatter();
    [AsyncStateMachineAttribute("App.Metrics.Formatters.Prometheus.Internal.AsciiFormatter/<Format>d__1")]
public static Task`1<string> Format(IEnumerable`1<MetricFamily> metrics, NewLineFormat newLine);
    [AsyncStateMachineAttribute("App.Metrics.Formatters.Prometheus.Internal.AsciiFormatter/<Write>d__2")]
public static Task Write(Stream destination, IEnumerable`1<MetricFamily> metrics, NewLineFormat newLine);
    [AsyncStateMachineAttribute("App.Metrics.Formatters.Prometheus.Internal.AsciiFormatter/<WriteFamily>d__3")]
private static Task WriteFamily(StreamWriter streamWriter, MetricFamily metricFamily);
    [AsyncStateMachineAttribute("App.Metrics.Formatters.Prometheus.Internal.AsciiFormatter/<WriteMetric>d__4")]
private static Task WriteMetric(StreamWriter streamWriter, MetricFamily family, Metric metric);
    [AsyncStateMachineAttribute("App.Metrics.Formatters.Prometheus.Internal.AsciiFormatter/<WriteSimpleValue>d__5")]
private static Task WriteSimpleValue(StreamWriter writer, string family, double value, IEnumerable`1<LabelPair> labels, string namePostfix);
    private static string GetNewLineChar(NewLineFormat newLine);
    private static string ToString(MetricType type);
}
[ExtensionAttribute]
public static class App.Metrics.Formatters.Prometheus.Internal.Extensions.MetricDataValueSourceExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<MetricFamily> GetPrometheusMetricsSnapshot(MetricsDataValueSource snapshot, Func`3<string, string, string> metricNameFormatter, Func`2<string, string> labelNameFormatter);
}
[ExtensionAttribute]
public static class App.Metrics.Formatters.Prometheus.Internal.Extensions.MetricSetItemExtensions : object {
    [ExtensionAttribute]
public static Metric ToPrometheusMetric(SetItem item, List`1<LabelPair> parentTags, Func`2<string, string> labelNameFormatter);
    [ExtensionAttribute]
public static Metric ToPrometheusMetric(SetItem item, List`1<LabelPair> parentTags, Func`2<string, string> labelNameFormatter);
}
[ExtensionAttribute]
public static class App.Metrics.Formatters.Prometheus.Internal.Extensions.MetricTagExtensions : object {
    [ExtensionAttribute]
public static List`1<LabelPair> ToLabelPairs(MetricTags tags, Func`2<string, string> labelNameFormatter);
}
[ExtensionAttribute]
public static class App.Metrics.Formatters.Prometheus.Internal.Extensions.MetricValueSourceExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<Metric> ToPrometheusMetrics(ApdexValueSource metric, Func`2<string, string> labelNameFormatter);
    [ExtensionAttribute]
public static IEnumerable`1<Metric> ToPrometheusMetrics(GaugeValueSource metric, Func`2<string, string> labelNameFormatter);
    [ExtensionAttribute]
public static IEnumerable`1<Metric> ToPrometheusMetrics(CounterValueSource metric, Func`2<string, string> labelNameFormatter);
    [ExtensionAttribute]
public static IEnumerable`1<Metric> ToPrometheusMetrics(MeterValueSource metric, Func`2<string, string> labelNameFormatter);
    [ExtensionAttribute]
public static IEnumerable`1<Metric> ToPrometheusMetrics(HistogramValueSource metric, Func`2<string, string> labelNameFormatter);
    [ExtensionAttribute]
public static IEnumerable`1<Metric> ToPrometheusMetrics(BucketHistogramValueSource metric, Func`2<string, string> labelNameFormatter);
    private static IEnumerable`1<Metric> BucketHistogramValueToHistogram(BucketHistogramValue value, MetricTags tags, Func`2<string, string> labelNameFormatter);
    [ExtensionAttribute]
public static IEnumerable`1<Metric> ToPrometheusMetrics(BucketTimerValueSource metric, Func`2<string, string> labelNameFormatter);
    [ExtensionAttribute]
public static IEnumerable`1<Metric> ToPrometheusMetrics(TimerValueSource metric, Func`2<string, string> labelNameFormatter);
}
public static class App.Metrics.Formatters.Prometheus.Internal.PrometheusFormatterConstants : object {
    public static Func`3<string, string, string> MetricNameFormatter;
    public static Func`2<string, string> LabelNameFormatter;
    private static Regex MetricNameRegex;
    private static PrometheusFormatterConstants();
}
internal static class App.Metrics.Formatters.Prometheus.Internal.ProtoFormatter : object {
    public static Byte[] Format(IEnumerable`1<MetricFamily> metrics);
    public static void Format(Stream destination, IEnumerable`1<MetricFamily> metrics);
}
[ProtoContractAttribute]
public class App.Metrics.Formatters.Prometheus.LabelPair : object {
    private string _name;
    private string _value;
    private IExtension extensionObject;
    [ProtoMemberAttribute]
[DefaultValueAttribute("")]
public string name { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("")]
public string value { get; public set; }
    public string get_name();
    public void set_name(string value);
    public string get_value();
    public void set_value(string value);
    private sealed virtual override IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing);
}
[ProtoContractAttribute]
public class App.Metrics.Formatters.Prometheus.Metric : object {
    private List`1<LabelPair> _label;
    private Gauge _gauge;
    private Counter _counter;
    private Summary _summary;
    private Untyped _untyped;
    private Histogram _histogram;
    private long _timestamp_ms;
    private IExtension extensionObject;
    [ProtoMemberAttribute]
public List`1<LabelPair> label { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("")]
public Gauge gauge { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("")]
public Counter counter { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("")]
public Summary summary { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("")]
public Untyped untyped { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("")]
public Histogram histogram { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public long timestamp_ms { get; public set; }
    public List`1<LabelPair> get_label();
    public void set_label(List`1<LabelPair> value);
    public Gauge get_gauge();
    public void set_gauge(Gauge value);
    public Counter get_counter();
    public void set_counter(Counter value);
    public Summary get_summary();
    public void set_summary(Summary value);
    public Untyped get_untyped();
    public void set_untyped(Untyped value);
    public Histogram get_histogram();
    public void set_histogram(Histogram value);
    public long get_timestamp_ms();
    public void set_timestamp_ms(long value);
    private sealed virtual override IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing);
}
[ProtoContractAttribute]
public class App.Metrics.Formatters.Prometheus.MetricFamily : object {
    private string _name;
    private string _help;
    private MetricType _type;
    private List`1<Metric> _metric;
    private IExtension extensionObject;
    [ProtoMemberAttribute]
[DefaultValueAttribute("")]
public string name { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("")]
public string help { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public MetricType type { get; public set; }
    [ProtoMemberAttribute]
public List`1<Metric> metric { get; }
    public string get_name();
    public void set_name(string value);
    public string get_help();
    public void set_help(string value);
    public MetricType get_type();
    public void set_type(MetricType value);
    public List`1<Metric> get_metric();
    private sealed virtual override IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing);
}
public class App.Metrics.Formatters.Prometheus.MetricsPrometheusOptions : object {
    [CompilerGeneratedAttribute]
private Func`3<string, string, string> <MetricNameFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, string> <LabelNameFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private NewLineFormat <NewLineFormat>k__BackingField;
    public Func`3<string, string, string> MetricNameFormatter { get; public set; }
    public Func`2<string, string> LabelNameFormatter { get; public set; }
    public NewLineFormat NewLineFormat { get; public set; }
    [CompilerGeneratedAttribute]
public Func`3<string, string, string> get_MetricNameFormatter();
    [CompilerGeneratedAttribute]
public void set_MetricNameFormatter(Func`3<string, string, string> value);
    [CompilerGeneratedAttribute]
public Func`2<string, string> get_LabelNameFormatter();
    [CompilerGeneratedAttribute]
public void set_LabelNameFormatter(Func`2<string, string> value);
    [CompilerGeneratedAttribute]
public NewLineFormat get_NewLineFormat();
    [CompilerGeneratedAttribute]
public void set_NewLineFormat(NewLineFormat value);
}
public class App.Metrics.Formatters.Prometheus.MetricsPrometheusProtobufOutputFormatter : object {
    private MetricsPrometheusOptions _options;
    [CompilerGeneratedAttribute]
private MetricFields <MetricFields>k__BackingField;
    public MetricsMediaTypeValue MediaType { get; }
    public MetricFields MetricFields { get; public set; }
    public MetricsPrometheusProtobufOutputFormatter(MetricsPrometheusOptions options);
    public sealed virtual MetricsMediaTypeValue get_MediaType();
    [CompilerGeneratedAttribute]
public sealed virtual MetricFields get_MetricFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MetricFields(MetricFields value);
    public sealed virtual Task WriteAsync(Stream output, MetricsDataValueSource metricsData, CancellationToken cancellationToken);
}
public class App.Metrics.Formatters.Prometheus.MetricsPrometheusTextOutputFormatter : object {
    private MetricsPrometheusOptions _options;
    [CompilerGeneratedAttribute]
private MetricFields <MetricFields>k__BackingField;
    public MetricsMediaTypeValue MediaType { get; }
    public MetricFields MetricFields { get; public set; }
    public MetricsPrometheusTextOutputFormatter(MetricsPrometheusOptions options);
    public sealed virtual MetricsMediaTypeValue get_MediaType();
    [CompilerGeneratedAttribute]
public sealed virtual MetricFields get_MetricFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MetricFields(MetricFields value);
    [AsyncStateMachineAttribute("App.Metrics.Formatters.Prometheus.MetricsPrometheusTextOutputFormatter/<WriteAsync>d__9")]
public sealed virtual Task WriteAsync(Stream output, MetricsDataValueSource metricsData, CancellationToken cancellationToken);
}
[ProtoContractAttribute]
public enum App.Metrics.Formatters.Prometheus.MetricType : Enum {
    public int value__;
    [ProtoEnumAttribute]
public static MetricType COUNTER;
    [ProtoEnumAttribute]
public static MetricType GAUGE;
    [ProtoEnumAttribute]
public static MetricType SUMMARY;
    [ProtoEnumAttribute]
public static MetricType UNTYPED;
    [ProtoEnumAttribute]
public static MetricType HISTOGRAM;
}
public enum App.Metrics.Formatters.Prometheus.NewLineFormat : Enum {
    public int value__;
    public static NewLineFormat Default;
    public static NewLineFormat Auto;
    public static NewLineFormat Windows;
    public static NewLineFormat Unix;
}
[ProtoContractAttribute]
public class App.Metrics.Formatters.Prometheus.Quantile : object {
    private double _quantile;
    private double _value;
    private IExtension extensionObject;
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public double quantile { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public double value { get; public set; }
    public double get_quantile();
    public void set_quantile(double value);
    public double get_value();
    public void set_value(double value);
    private sealed virtual override IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing);
}
[ProtoContractAttribute]
public class App.Metrics.Formatters.Prometheus.Summary : object {
    private ulong _sample_count;
    private double _sample_sum;
    private List`1<Quantile> _quantile;
    private IExtension extensionObject;
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public ulong sample_count { get; public set; }
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public double sample_sum { get; public set; }
    [ProtoMemberAttribute]
public List`1<Quantile> quantile { get; }
    public ulong get_sample_count();
    public void set_sample_count(ulong value);
    public double get_sample_sum();
    public void set_sample_sum(double value);
    public List`1<Quantile> get_quantile();
    private sealed virtual override IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing);
}
[ProtoContractAttribute]
public class App.Metrics.Formatters.Prometheus.Untyped : object {
    private double _value;
    private IExtension extensionObject;
    [ProtoMemberAttribute]
[DefaultValueAttribute("0")]
public double value { get; public set; }
    public double get_value();
    public void set_value(double value);
    private sealed virtual override IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing);
}
[ExtensionAttribute]
public static class App.Metrics.MetricsPrometheusFormatterBuilder : object {
    [ExtensionAttribute]
public static IMetricsBuilder AsPrometheusPlainText(IMetricsOutputFormattingBuilder metricFormattingBuilder, MetricsPrometheusOptions options);
    [ExtensionAttribute]
public static IMetricsBuilder AsPrometheusPlainText(IMetricsOutputFormattingBuilder metricFormattingBuilder, Action`1<MetricsPrometheusOptions> setupAction);
    [ExtensionAttribute]
public static IMetricsBuilder AsPrometheusPlainText(IMetricsOutputFormattingBuilder metricFormattingBuilder);
    [ExtensionAttribute]
public static IMetricsBuilder AsPrometheusProtobuf(IMetricsOutputFormattingBuilder metricFormattingBuilder, MetricsPrometheusOptions options);
    [ExtensionAttribute]
public static IMetricsBuilder AsPrometheusProtobuf(IMetricsOutputFormattingBuilder metricFormattingBuilder, Action`1<MetricsPrometheusOptions> setupAction);
    [ExtensionAttribute]
public static IMetricsBuilder AsPrometheusProtobuf(IMetricsOutputFormattingBuilder metricFormattingBuilder);
}
