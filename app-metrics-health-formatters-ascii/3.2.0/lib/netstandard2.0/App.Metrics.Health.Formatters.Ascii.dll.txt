public class App.Metrics.Health.Formatters.Ascii.HealthStatusTextOutputFormatter : object {
    private HealthTextOptions _options;
    public HealthMediaTypeValue MediaType { get; }
    public HealthStatusTextOutputFormatter(HealthTextOptions options);
    public sealed virtual HealthMediaTypeValue get_MediaType();
    public sealed virtual Task WriteAsync(Stream output, HealthStatus healthStatus, CancellationToken cancellationToken);
}
public class App.Metrics.Health.Formatters.Ascii.HealthStatusTextWriter : object {
    private int _padding;
    private string _separator;
    private TextWriter _textWriter;
    public HealthStatusTextWriter(TextWriter textWriter, string separator, int padding);
    public sealed virtual void Dispose();
    public sealed virtual void Write(HealthStatus healthStatus);
    protected virtual void Dispose(bool disposing);
    private string FormatReadable(string label, string value);
    private string GetOverallStatus(IEnumerable`1<Result> results);
    private void WriteCheckResult(Result checkResult);
}
public class App.Metrics.Health.Formatters.Ascii.HealthTextOptions : object {
    [CompilerGeneratedAttribute]
private int <Padding>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private Encoding <Encoding>k__BackingField;
    public int Padding { get; public set; }
    public string Separator { get; public set; }
    public Encoding Encoding { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Padding();
    [CompilerGeneratedAttribute]
public void set_Padding(int value);
    [CompilerGeneratedAttribute]
public string get_Separator();
    [CompilerGeneratedAttribute]
public void set_Separator(string value);
    [CompilerGeneratedAttribute]
public Encoding get_Encoding();
    [CompilerGeneratedAttribute]
public void set_Encoding(Encoding value);
}
public class App.Metrics.Health.Formatters.Ascii.Internal.HealthStatusFormatterConstants : object {
}
[ExtensionAttribute]
public static class App.Metrics.Health.HealthTextOutputFormatterBuilder : object {
    [ExtensionAttribute]
public static IHealthBuilder AsPlainText(IHealthOutputFormattingBuilder healthFormattingBuilder, Action`1<HealthTextOptions> setupAction);
}
