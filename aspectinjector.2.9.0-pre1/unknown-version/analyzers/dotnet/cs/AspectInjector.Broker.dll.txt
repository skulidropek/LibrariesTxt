[AttributeUsageAttribute("64")]
public class AspectInjector.Broker.Advice : Attribute {
    [CompilerGeneratedAttribute]
private Target <Targets>k__BackingField;
    [CompilerGeneratedAttribute]
private Kind <Kind>k__BackingField;
    public Target Targets { get; public set; }
    public Kind Kind { get; }
    public Advice(Kind kind);
    [CompilerGeneratedAttribute]
public Target get_Targets();
    [CompilerGeneratedAttribute]
public void set_Targets(Target value);
    [CompilerGeneratedAttribute]
public Kind get_Kind();
}
[AttributeUsageAttribute("2048")]
public class AspectInjector.Broker.Argument : Attribute {
    [CompilerGeneratedAttribute]
private Source <Source>k__BackingField;
    public Source Source { get; }
    public Argument(Source source);
    [CompilerGeneratedAttribute]
public Source get_Source();
}
[AttributeUsageAttribute("4")]
public class AspectInjector.Broker.Aspect : Attribute {
    [CompilerGeneratedAttribute]
private Type <Factory>k__BackingField;
    [CompilerGeneratedAttribute]
private Scope <Scope>k__BackingField;
    public Type Factory { get; public set; }
    public Scope Scope { get; }
    public Aspect(Scope scope);
    [CompilerGeneratedAttribute]
public Type get_Factory();
    [CompilerGeneratedAttribute]
public void set_Factory(Type value);
    [CompilerGeneratedAttribute]
public Scope get_Scope();
}
[AttributeUsageAttribute("1028")]
public class AspectInjector.Broker.Injection : Attribute {
    [CompilerGeneratedAttribute]
private ushort <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Aspect>k__BackingField;
    [CompilerGeneratedAttribute]
private PropagateTo <Propagation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropagationFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Inherited>k__BackingField;
    public ushort Priority { get; public set; }
    public Type Aspect { get; }
    public PropagateTo Propagation { get; public set; }
    public string PropagationFilter { get; public set; }
    public bool Inherited { get; public set; }
    public Injection(Type aspect);
    [CompilerGeneratedAttribute]
public ushort get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(ushort value);
    [CompilerGeneratedAttribute]
public Type get_Aspect();
    [CompilerGeneratedAttribute]
public PropagateTo get_Propagation();
    [CompilerGeneratedAttribute]
public void set_Propagation(PropagateTo value);
    [CompilerGeneratedAttribute]
public string get_PropagationFilter();
    [CompilerGeneratedAttribute]
public void set_PropagationFilter(string value);
    [CompilerGeneratedAttribute]
public bool get_Inherited();
    [CompilerGeneratedAttribute]
public void set_Inherited(bool value);
}
public enum AspectInjector.Broker.Kind : Enum {
    public byte value__;
    public static Kind Before;
    public static Kind After;
    public static Kind Around;
}
[AttributeUsageAttribute("4")]
public class AspectInjector.Broker.Mixin : Attribute {
    [CompilerGeneratedAttribute]
private Type <Interface>k__BackingField;
    public Type Interface { get; }
    public Mixin(Type interface);
    [CompilerGeneratedAttribute]
public Type get_Interface();
}
[FlagsAttribute]
public enum AspectInjector.Broker.PropagateTo : Enum {
    public int value__;
    public static PropagateTo None;
    public static PropagateTo Methods;
    public static PropagateTo Properties;
    public static PropagateTo Events;
    public static PropagateTo Members;
    public static PropagateTo Types;
    public static PropagateTo IncludeCompilerGenerated;
    public static PropagateTo Everything;
}
public enum AspectInjector.Broker.Scope : Enum {
    public byte value__;
    public static Scope Global;
    public static Scope PerInstance;
}
[AttributeUsageAttribute("740")]
public class AspectInjector.Broker.SkipInjection : Attribute {
}
public enum AspectInjector.Broker.Source : Enum {
    public byte value__;
    public static Source Instance;
    public static Source Type;
    [ObsoleteAttribute("Use Source.Metadata instead.")]
[EditorBrowsableAttribute("1")]
public static Source Method;
    public static Source Metadata;
    public static Source Target;
    public static Source Name;
    public static Source Arguments;
    public static Source ReturnValue;
    public static Source ReturnType;
    [ObsoleteAttribute("Use Source.Triggers instead")]
[EditorBrowsableAttribute("1")]
public static Source Injections;
    public static Source Triggers;
}
[FlagsAttribute]
public enum AspectInjector.Broker.Target : Enum {
    public ushort value__;
    public static Target Private;
    public static Target Internal;
    public static Target Protected;
    public static Target ProtectedInternal;
    public static Target ProtectedPrivate;
    public static Target Public;
    public static Target AnyAccess;
    public static Target Static;
    public static Target Instance;
    public static Target AnyScope;
    public static Target Constructor;
    public static Target Method;
    public static Target Getter;
    public static Target Setter;
    public static Target EventAdd;
    public static Target EventRemove;
    public static Target AnyMember;
    public static Target Any;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
internal class System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute : Attribute {
    [NullableContextAttribute("1")]
public CompilerFeatureRequiredAttribute(string feature);
}
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
internal class System.Runtime.CompilerServices.RequiredMemberAttribute : Attribute {
}
