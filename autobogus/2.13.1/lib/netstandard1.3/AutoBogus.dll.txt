public class AutoBogus.AutoBinder : Binder {
    public virtual TType CreateInstance(AutoGenerateContext context);
    public virtual void PopulateInstance(object instance, AutoGenerateContext context, IEnumerable`1<MemberInfo> members);
    private bool ShouldSkip(Type type, string path, AutoGenerateContext context);
    private ConstructorInfo GetConstructor();
    private ConstructorInfo ResolveTypedConstructor(Type type, IEnumerable`1<ConstructorInfo> constructors);
    private IAutoGenerator GetParameterGenerator(Type type, ParameterInfo parameter, AutoGenerateContext context);
    private IEnumerable`1<AutoMember> GetMembersToPopulate(Type type, IEnumerable`1<MemberInfo> members);
    private void PopulateDictionary(object value, object parent, AutoMember member);
    private void PopulateCollection(object value, object parent, AutoMember member);
    private MethodInfo GetAddMethod(Type type, Type[] argTypes);
    private Type[] GetAddMethodArgumentTypes(Type type);
}
internal class AutoBogus.AutoConfig : object {
    internal static string DefaultLocale;
    internal static int GenerateAttemptsThreshold;
    internal static Func`2<AutoGenerateContext, int> DefaultRepeatCount;
    internal static Func`2<AutoGenerateContext, int> DefaultDataTableRowCount;
    internal static Func`2<AutoGenerateContext, int> DefaultRecursiveDepth;
    internal static Func`2<AutoGenerateContext, Nullable`1<int>> DefaultTreeDepth;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<AutoGenerateContext, int> <RepeatCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<AutoGenerateContext, int> <DataTableRowCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<AutoGenerateContext, int> <RecursiveDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private IAutoBinder <Binder>k__BackingField;
    [CompilerGeneratedAttribute]
private Faker <FakerHub>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Type> <SkipTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <SkipPaths>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<AutoGeneratorOverride> <Overrides>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<AutoGenerateContext, Nullable`1<int>> <TreeDepth>k__BackingField;
    internal string Locale { get; internal set; }
    internal Func`2<AutoGenerateContext, int> RepeatCount { get; internal set; }
    internal Func`2<AutoGenerateContext, int> DataTableRowCount { get; internal set; }
    internal Func`2<AutoGenerateContext, int> RecursiveDepth { get; internal set; }
    internal IAutoBinder Binder { get; internal set; }
    internal Faker FakerHub { get; internal set; }
    internal IList`1<Type> SkipTypes { get; internal set; }
    internal IList`1<string> SkipPaths { get; internal set; }
    internal IList`1<AutoGeneratorOverride> Overrides { get; internal set; }
    public Func`2<AutoGenerateContext, Nullable`1<int>> TreeDepth { get; public set; }
    internal AutoConfig(AutoConfig config);
    private static AutoConfig();
    [CompilerGeneratedAttribute]
internal string get_Locale();
    [CompilerGeneratedAttribute]
internal void set_Locale(string value);
    [CompilerGeneratedAttribute]
internal Func`2<AutoGenerateContext, int> get_RepeatCount();
    [CompilerGeneratedAttribute]
internal void set_RepeatCount(Func`2<AutoGenerateContext, int> value);
    [CompilerGeneratedAttribute]
internal Func`2<AutoGenerateContext, int> get_DataTableRowCount();
    [CompilerGeneratedAttribute]
internal void set_DataTableRowCount(Func`2<AutoGenerateContext, int> value);
    [CompilerGeneratedAttribute]
internal Func`2<AutoGenerateContext, int> get_RecursiveDepth();
    [CompilerGeneratedAttribute]
internal void set_RecursiveDepth(Func`2<AutoGenerateContext, int> value);
    [CompilerGeneratedAttribute]
internal IAutoBinder get_Binder();
    [CompilerGeneratedAttribute]
internal void set_Binder(IAutoBinder value);
    [CompilerGeneratedAttribute]
internal Faker get_FakerHub();
    [CompilerGeneratedAttribute]
internal void set_FakerHub(Faker value);
    [CompilerGeneratedAttribute]
internal IList`1<Type> get_SkipTypes();
    [CompilerGeneratedAttribute]
internal void set_SkipTypes(IList`1<Type> value);
    [CompilerGeneratedAttribute]
internal IList`1<string> get_SkipPaths();
    [CompilerGeneratedAttribute]
internal void set_SkipPaths(IList`1<string> value);
    [CompilerGeneratedAttribute]
internal IList`1<AutoGeneratorOverride> get_Overrides();
    [CompilerGeneratedAttribute]
internal void set_Overrides(IList`1<AutoGeneratorOverride> value);
    [CompilerGeneratedAttribute]
public Func`2<AutoGenerateContext, Nullable`1<int>> get_TreeDepth();
    [CompilerGeneratedAttribute]
public void set_TreeDepth(Func`2<AutoGenerateContext, Nullable`1<int>> value);
}
internal class AutoBogus.AutoConfigBuilder : object {
    [CompilerGeneratedAttribute]
private AutoConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <Args>k__BackingField;
    internal AutoConfig Config { get; }
    internal Object[] Args { get; private set; }
    internal AutoConfigBuilder(AutoConfig config);
    [CompilerGeneratedAttribute]
internal AutoConfig get_Config();
    [CompilerGeneratedAttribute]
internal Object[] get_Args();
    [CompilerGeneratedAttribute]
private void set_Args(Object[] value);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithLocale(string locale);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithRepeatCount(int count);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithRepeatCount(Func`2<AutoGenerateContext, int> count);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithDataTableRowCount(int count);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithDataTableRowCount(Func`2<AutoGenerateContext, int> count);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithRecursiveDepth(int depth);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithRecursiveDepth(Func`2<AutoGenerateContext, int> depth);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithTreeDepth(Nullable`1<int> depth);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithTreeDepth(Func`2<AutoGenerateContext, Nullable`1<int>> depth);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithBinder(IAutoBinder binder);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithFakerHub(Faker fakerHub);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithSkip(Type type);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithSkip(Type type, string memberName);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithSkip(string memberName);
    private sealed virtual override IAutoFakerDefaultConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerDefaultConfigBuilder>.WithOverride(AutoGeneratorOverride generatorOverride);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithLocale(string locale);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithRepeatCount(int count);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithRepeatCount(Func`2<AutoGenerateContext, int> count);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithDataTableRowCount(int count);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithDataTableRowCount(Func`2<AutoGenerateContext, int> count);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithRecursiveDepth(int depth);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithRecursiveDepth(Func`2<AutoGenerateContext, int> depth);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithTreeDepth(Nullable`1<int> depth);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithTreeDepth(Func`2<AutoGenerateContext, Nullable`1<int>> depth);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithBinder(IAutoBinder binder);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithFakerHub(Faker fakerHub);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithSkip(Type type);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithSkip(Type type, string memberName);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithSkip(string memberName);
    private sealed virtual override IAutoGenerateConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoGenerateConfigBuilder>.WithOverride(AutoGeneratorOverride generatorOverride);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithLocale(string locale);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithRepeatCount(int count);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithRepeatCount(Func`2<AutoGenerateContext, int> count);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithDataTableRowCount(int count);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithDataTableRowCount(Func`2<AutoGenerateContext, int> count);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithRecursiveDepth(int depth);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithRecursiveDepth(Func`2<AutoGenerateContext, int> depth);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithTreeDepth(Nullable`1<int> depth);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithTreeDepth(Func`2<AutoGenerateContext, Nullable`1<int>> depth);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithBinder(IAutoBinder binder);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithFakerHub(Faker fakerHub);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithSkip(Type type);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithSkip(Type type, string memberName);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithSkip(string memberName);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoConfigBuilder<AutoBogus.IAutoFakerConfigBuilder>.WithOverride(AutoGeneratorOverride generatorOverride);
    private sealed virtual override IAutoFakerConfigBuilder AutoBogus.IAutoFakerConfigBuilder.WithArgs(Object[] args);
    internal TBuilder WithLocale(string locale, TBuilder builder);
    internal TBuilder WithRepeatCount(Func`2<AutoGenerateContext, int> count, TBuilder builder);
    internal TBuilder WithDataTableRowCount(Func`2<AutoGenerateContext, int> count, TBuilder builder);
    internal TBuilder WithRecursiveDepth(Func`2<AutoGenerateContext, int> depth, TBuilder builder);
    internal TBuilder WithTreeDepth(Func`2<AutoGenerateContext, Nullable`1<int>> depth, TBuilder builder);
    internal TBuilder WithBinder(IAutoBinder binder, TBuilder builder);
    internal TBuilder WithFakerHub(Faker fakerHub, TBuilder builder);
    internal TBuilder WithSkip(Type type, TBuilder builder);
    internal TBuilder WithSkip(Type type, string memberName, TBuilder builder);
    internal TBuilder WithSkip(string memberName, TBuilder builder);
    internal TBuilder WithOverride(AutoGeneratorOverride generatorOverride, TBuilder builder);
    internal TBuilder WithArgs(Object[] args, TBuilder builder);
}
[ExtensionAttribute]
public static class AutoBogus.AutoConfigBuilderExtensions : object {
    [ExtensionAttribute]
public static IAutoFakerDefaultConfigBuilder WithBinder(IAutoFakerDefaultConfigBuilder builder);
    [ExtensionAttribute]
public static IAutoGenerateConfigBuilder WithBinder(IAutoGenerateConfigBuilder builder);
    [ExtensionAttribute]
public static IAutoFakerConfigBuilder WithBinder(IAutoFakerConfigBuilder builder);
    [ExtensionAttribute]
public static IAutoFakerDefaultConfigBuilder WithSkip(IAutoFakerDefaultConfigBuilder builder);
    [ExtensionAttribute]
public static IAutoGenerateConfigBuilder WithSkip(IAutoGenerateConfigBuilder builder);
    [ExtensionAttribute]
public static IAutoFakerConfigBuilder WithSkip(IAutoFakerConfigBuilder builder);
    [ExtensionAttribute]
public static IAutoFakerDefaultConfigBuilder WithSkip(IAutoFakerDefaultConfigBuilder builder, Expression`1<Func`2<TType, object>> member);
    [ExtensionAttribute]
public static IAutoGenerateConfigBuilder WithSkip(IAutoGenerateConfigBuilder builder, Expression`1<Func`2<TType, object>> member);
    [ExtensionAttribute]
public static IAutoFakerConfigBuilder WithSkip(IAutoFakerConfigBuilder builder, Expression`1<Func`2<TType, object>> member);
    [ExtensionAttribute]
public static IAutoFakerDefaultConfigBuilder WithOverride(IAutoFakerDefaultConfigBuilder builder, Func`2<AutoGenerateOverrideContext, TType> generator);
    [ExtensionAttribute]
public static IAutoGenerateConfigBuilder WithOverride(IAutoGenerateConfigBuilder builder, Func`2<AutoGenerateOverrideContext, TType> generator);
    [ExtensionAttribute]
public static IAutoFakerConfigBuilder WithOverride(IAutoFakerConfigBuilder builder, Func`2<AutoGenerateOverrideContext, TType> generator);
    [ExtensionAttribute]
public static IAutoFakerDefaultConfigBuilder WithOverride(IAutoFakerDefaultConfigBuilder builder, Expression`1<Func`2<TType, object>> member, Func`2<AutoGenerateOverrideContext, TValue> generator);
    [ExtensionAttribute]
public static IAutoGenerateConfigBuilder WithOverride(IAutoGenerateConfigBuilder builder, Expression`1<Func`2<TType, object>> member, Func`2<AutoGenerateOverrideContext, TValue> generator);
    [ExtensionAttribute]
public static IAutoFakerConfigBuilder WithOverride(IAutoFakerConfigBuilder builder, Expression`1<Func`2<TType, object>> member, Func`2<AutoGenerateOverrideContext, TValue> generator);
    private static string GetMemberName(Expression`1<Func`2<TType, object>> member);
}
public class AutoBogus.AutoFaker : object {
    internal static AutoConfig DefaultConfig;
    [CompilerGeneratedAttribute]
private AutoConfig <Config>k__BackingField;
    internal AutoConfig Config { get; }
    private AutoFaker(AutoConfig config);
    private static AutoFaker();
    [CompilerGeneratedAttribute]
internal AutoConfig get_Config();
    private sealed virtual override TType AutoBogus.IAutoFaker.Generate(Action`1<IAutoGenerateConfigBuilder> configure);
    private sealed virtual override List`1<TType> AutoBogus.IAutoFaker.Generate(int count, Action`1<IAutoGenerateConfigBuilder> configure);
    private sealed virtual override TType AutoBogus.IAutoFaker.Generate(Action`1<IAutoFakerConfigBuilder> configure);
    private sealed virtual override List`1<TType> AutoBogus.IAutoFaker.Generate(int count, Action`1<IAutoFakerConfigBuilder> configure);
    public static void Configure(Action`1<IAutoFakerDefaultConfigBuilder> configure);
    public static IAutoFaker Create(Action`1<IAutoGenerateConfigBuilder> configure);
    public static TType Generate(Action`1<IAutoGenerateConfigBuilder> configure);
    public static List`1<TType> Generate(int count, Action`1<IAutoGenerateConfigBuilder> configure);
    public static TType Generate(Action`1<IAutoFakerConfigBuilder> configure);
    public static List`1<TType> Generate(int count, Action`1<IAutoFakerConfigBuilder> configure);
    private AutoGenerateContext CreateContext(Action`1<IAutoGenerateConfigBuilder> configure);
    private AutoFaker`1<TType> CreateFaker(Action`1<IAutoFakerConfigBuilder> configure);
    private sealed virtual override TType AutoBogus.IAutoFaker.Generate(Object[] args);
    private sealed virtual override List`1<TType> AutoBogus.IAutoFaker.Generate(int count, Object[] args);
    [ObsoleteAttribute("Use AutoFaker.Create(builder => builder.WithLocale()) instead.")]
public static IAutoFaker Create(string locale);
    [ObsoleteAttribute("Use AutoFaker.Create(builder => builder.WithBinder()) instead.")]
public static IAutoFaker Create(IAutoBinder binder);
    [ObsoleteAttribute("Use AutoFaker.Create(builder => builder.WithLocale().WithBinder()) instead.")]
public static IAutoFaker Create(string locale);
    [ObsoleteAttribute("Use AutoFaker.Create(builder => builder.WithLocale().WithBinder()) instead.")]
public static IAutoFaker Create(string locale, IAutoBinder binder);
    [ObsoleteAttribute("Use AutoFaker.Configure(builder => builder.WithBinder()) instead.")]
public static void SetBinder();
    [ObsoleteAttribute("Use AutoFaker.Configure(builder => builder.WithBinder()) instead.")]
public static void SetBinder(IAutoBinder binder);
    [ObsoleteAttribute("Use AutoFaker.Generate<TType>(builder => builder.WithLocale()) instead.")]
public static TType Generate(string locale);
    [ObsoleteAttribute("Use AutoFaker.Generate<TType>(count, builder => builder.WithLocale()) instead.")]
public static List`1<TType> Generate(int count, string locale);
    [ObsoleteAttribute("Use AutoFaker.Generate<TType, TFaker>(builder => builder.WithArgs()) instead.")]
public static TType Generate(Object[] args);
    [ObsoleteAttribute("Use AutoFaker.Generate<TType, TFaker>(count, builder => builder.WithArgs()) instead.")]
public static List`1<TType> Generate(int count, Object[] args);
}
public class AutoBogus.AutoFaker`1 : Faker`1<TType> {
    private AutoConfig _config;
    [CompilerGeneratedAttribute]
private IAutoBinder <Binder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CreateInitialized>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FinishInitialized>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<Faker, TType> <DefaultCreateAction>k__BackingField;
    public IAutoBinder Binder { get; public set; }
    unknown AutoConfig Config {internal set; }
    private bool CreateInitialized { get; private set; }
    private bool FinishInitialized { get; private set; }
    private Func`2<Faker, TType> DefaultCreateAction { get; private set; }
    public AutoFaker`1(string locale);
    public AutoFaker`1(IAutoBinder binder);
    public AutoFaker`1(string locale, IAutoBinder binder);
    [CompilerGeneratedAttribute]
public IAutoBinder get_Binder();
    [CompilerGeneratedAttribute]
public void set_Binder(IAutoBinder value);
    internal void set_Config(AutoConfig value);
    [CompilerGeneratedAttribute]
private bool get_CreateInitialized();
    [CompilerGeneratedAttribute]
private void set_CreateInitialized(bool value);
    [CompilerGeneratedAttribute]
private bool get_FinishInitialized();
    [CompilerGeneratedAttribute]
private void set_FinishInitialized(bool value);
    [CompilerGeneratedAttribute]
private Func`2<Faker, TType> get_DefaultCreateAction();
    [CompilerGeneratedAttribute]
private void set_DefaultCreateAction(Func`2<Faker, TType> value);
    public AutoFaker`1<TType> Configure(Action`1<IAutoGenerateConfigBuilder> configure);
    public virtual TType Generate(string ruleSets);
    public virtual List`1<TType> Generate(int count, string ruleSets);
    public virtual void Populate(TType instance, string ruleSets);
    private AutoGenerateContext CreateContext(string ruleSets);
    private IEnumerable`1<string> ParseRuleSets(string ruleSets);
    private void PrepareCreate(AutoGenerateContext context);
    private void PrepareFinish(AutoGenerateContext context);
    private IEnumerable`1<string> GetRuleSetsMemberNames(AutoGenerateContext context);
}
public class AutoBogus.AutoGenerateContext : object {
    [CompilerGeneratedAttribute]
private AutoConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private Stack`1<Type> <TypesStack>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Instance>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ParentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <GenerateType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GenerateName>k__BackingField;
    [CompilerGeneratedAttribute]
private Faker <Faker>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RuleSets>k__BackingField;
    internal AutoConfig Config { get; }
    internal Stack`1<Type> TypesStack { get; }
    internal object Instance { get; internal set; }
    public Type ParentType { get; public set; }
    public Type GenerateType { get; internal set; }
    public string GenerateName { get; internal set; }
    public Faker Faker { get; }
    public IEnumerable`1<string> RuleSets { get; internal set; }
    internal IAutoBinder Binder { get; }
    internal IEnumerable`1<AutoGeneratorOverride> Overrides { get; }
    internal AutoGenerateContext(AutoConfig config);
    internal AutoGenerateContext(Faker faker, AutoConfig config);
    [CompilerGeneratedAttribute]
internal AutoConfig get_Config();
    [CompilerGeneratedAttribute]
internal Stack`1<Type> get_TypesStack();
    [CompilerGeneratedAttribute]
internal object get_Instance();
    [CompilerGeneratedAttribute]
internal void set_Instance(object value);
    [CompilerGeneratedAttribute]
public Type get_ParentType();
    [CompilerGeneratedAttribute]
public void set_ParentType(Type value);
    [CompilerGeneratedAttribute]
public Type get_GenerateType();
    [CompilerGeneratedAttribute]
internal void set_GenerateType(Type value);
    [CompilerGeneratedAttribute]
public string get_GenerateName();
    [CompilerGeneratedAttribute]
internal void set_GenerateName(string value);
    [CompilerGeneratedAttribute]
public Faker get_Faker();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RuleSets();
    [CompilerGeneratedAttribute]
internal void set_RuleSets(IEnumerable`1<string> value);
    internal IAutoBinder get_Binder();
    internal IEnumerable`1<AutoGeneratorOverride> get_Overrides();
}
[ExtensionAttribute]
public static class AutoBogus.AutoGenerateContextExtensions : object {
    [ExtensionAttribute]
public static TType Generate(AutoGenerateContext context);
    [ExtensionAttribute]
public static List`1<TType> GenerateMany(AutoGenerateContext context, Nullable`1<int> count);
    [ExtensionAttribute]
public static List`1<TType> GenerateUniqueMany(AutoGenerateContext context, Nullable`1<int> count);
    [ExtensionAttribute]
public static void Populate(AutoGenerateContext context, TType instance);
    internal static void GenerateMany(AutoGenerateContext context, Nullable`1<int> count, List`1<TType> items, bool unique, int attempt, Func`1<TType> generate);
}
public class AutoBogus.AutoGenerateOverrideContext : object {
    [CompilerGeneratedAttribute]
private object <Instance>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <GenerateType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GenerateName>k__BackingField;
    [CompilerGeneratedAttribute]
private Faker <Faker>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RuleSets>k__BackingField;
    [CompilerGeneratedAttribute]
private AutoGenerateContext <GenerateContext>k__BackingField;
    public object Instance { get; public set; }
    public Type GenerateType { get; }
    public string GenerateName { get; }
    public Faker Faker { get; }
    public IEnumerable`1<string> RuleSets { get; }
    internal AutoGenerateContext GenerateContext { get; }
    internal AutoGenerateOverrideContext(AutoGenerateContext generateContext);
    [CompilerGeneratedAttribute]
public object get_Instance();
    [CompilerGeneratedAttribute]
public void set_Instance(object value);
    [CompilerGeneratedAttribute]
public Type get_GenerateType();
    [CompilerGeneratedAttribute]
public string get_GenerateName();
    [CompilerGeneratedAttribute]
public Faker get_Faker();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RuleSets();
    [CompilerGeneratedAttribute]
internal AutoGenerateContext get_GenerateContext();
}
[ExtensionAttribute]
public static class AutoBogus.AutoGenerateOverrideContextExtensions : object {
    [ExtensionAttribute]
public static TType Generate(AutoGenerateOverrideContext context);
    [ExtensionAttribute]
public static List`1<TType> GenerateMany(AutoGenerateOverrideContext context, Nullable`1<int> count);
    [ExtensionAttribute]
public static List`1<TType> GenerateUniqueMany(AutoGenerateOverrideContext context, Nullable`1<int> count);
    [ExtensionAttribute]
public static void Populate(AutoGenerateOverrideContext context, TType instance);
}
internal static class AutoBogus.AutoGeneratorFactory : object {
    internal static IDictionary`2<Type, IAutoGenerator> Generators;
    private static AutoGeneratorFactory();
    internal static IAutoGenerator GetGenerator(AutoGenerateContext context);
    internal static IAutoGenerator ResolveGenerator(AutoGenerateContext context);
    private static IAutoGenerator CreateDictionaryGenerator(IEnumerable`1<Type> generics);
    private static IAutoGenerator CreateGenericGenerator(Type generatorType, Type[] genericTypes);
}
internal class AutoBogus.AutoGeneratorMemberOverride`2 : AutoGeneratorOverride {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemberName>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<AutoGenerateOverrideContext, TValue> <Generator>k__BackingField;
    private Type Type { get; }
    private string MemberName { get; }
    private Func`2<AutoGenerateOverrideContext, TValue> Generator { get; }
    internal AutoGeneratorMemberOverride`2(string memberName, Func`2<AutoGenerateOverrideContext, TValue> generator);
    [CompilerGeneratedAttribute]
private Type get_Type();
    [CompilerGeneratedAttribute]
private string get_MemberName();
    [CompilerGeneratedAttribute]
private Func`2<AutoGenerateOverrideContext, TValue> get_Generator();
    public virtual bool CanOverride(AutoGenerateContext context);
    public virtual void Generate(AutoGenerateOverrideContext context);
}
public abstract class AutoBogus.AutoGeneratorOverride : object {
    public bool Preinitialize { get; }
    public virtual bool get_Preinitialize();
    public abstract virtual bool CanOverride(AutoGenerateContext context);
    public abstract virtual void Generate(AutoGenerateOverrideContext context);
}
internal class AutoBogus.AutoGeneratorOverrideInvoker : object {
    [CompilerGeneratedAttribute]
private IAutoGenerator <Generator>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AutoGeneratorOverride> <Overrides>k__BackingField;
    internal IAutoGenerator Generator { get; }
    internal IEnumerable`1<AutoGeneratorOverride> Overrides { get; }
    internal AutoGeneratorOverrideInvoker(IAutoGenerator generator, IEnumerable`1<AutoGeneratorOverride> overrides);
    [CompilerGeneratedAttribute]
internal IAutoGenerator get_Generator();
    [CompilerGeneratedAttribute]
internal IEnumerable`1<AutoGeneratorOverride> get_Overrides();
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.AutoGeneratorTypeOverride`1 : AutoGeneratorOverride {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<AutoGenerateOverrideContext, TType> <Generator>k__BackingField;
    private Type Type { get; }
    private Func`2<AutoGenerateOverrideContext, TType> Generator { get; }
    internal AutoGeneratorTypeOverride`1(Func`2<AutoGenerateOverrideContext, TType> generator);
    [CompilerGeneratedAttribute]
private Type get_Type();
    [CompilerGeneratedAttribute]
private Func`2<AutoGenerateOverrideContext, TType> get_Generator();
    public virtual bool CanOverride(AutoGenerateContext context);
    public virtual void Generate(AutoGenerateOverrideContext context);
}
internal class AutoBogus.AutoMember : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<object, object> <Getter>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<object, object> <Setter>k__BackingField;
    internal string Name { get; }
    internal Type Type { get; }
    internal bool IsReadOnly { get; }
    internal Func`2<object, object> Getter { get; }
    internal Action`2<object, object> Setter { get; }
    internal AutoMember(MemberInfo memberInfo);
    [CompilerGeneratedAttribute]
internal string get_Name();
    [CompilerGeneratedAttribute]
internal Type get_Type();
    [CompilerGeneratedAttribute]
internal bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
internal Func`2<object, object> get_Getter();
    [CompilerGeneratedAttribute]
internal Action`2<object, object> get_Setter();
}
internal class AutoBogus.Generators.ArrayGenerator`1 : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.BoolGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.ByteGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.CharGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.DateTimeGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.DateTimeOffsetGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.DecimalGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.DictionaryGenerator`2 : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.DoubleGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.EnumerableGenerator`1 : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.EnumGenerator`1 : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.ExpandoObjectGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.FloatGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.GuidGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.IntGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.IPAddressGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.ListGenerator`1 : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.LongGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.NullableGenerator`1 : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.ReadOnlyDictionaryGenerator`2 : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.SByteGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.SetGenerator`1 : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.ShortGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.StringGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.TypeGenerator`1 : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.UIntGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.ULongGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.UriGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
internal class AutoBogus.Generators.UShortGenerator : object {
    private sealed virtual override object AutoBogus.IAutoGenerator.Generate(AutoGenerateContext context);
}
public interface AutoBogus.IAutoBinder {
    public abstract virtual TType CreateInstance(AutoGenerateContext context);
    public abstract virtual void PopulateInstance(object instance, AutoGenerateContext context, IEnumerable`1<MemberInfo> members);
}
public interface AutoBogus.IAutoConfigBuilder`1 {
    public abstract virtual TBuilder WithLocale(string locale);
    public abstract virtual TBuilder WithRepeatCount(int count);
    public abstract virtual TBuilder WithRepeatCount(Func`2<AutoGenerateContext, int> count);
    public abstract virtual TBuilder WithDataTableRowCount(int count);
    public abstract virtual TBuilder WithDataTableRowCount(Func`2<AutoGenerateContext, int> count);
    public abstract virtual TBuilder WithRecursiveDepth(int depth);
    public abstract virtual TBuilder WithTreeDepth(Nullable`1<int> depth);
    public abstract virtual TBuilder WithRecursiveDepth(Func`2<AutoGenerateContext, int> depth);
    public abstract virtual TBuilder WithTreeDepth(Func`2<AutoGenerateContext, Nullable`1<int>> depth);
    public abstract virtual TBuilder WithBinder(IAutoBinder binder);
    public abstract virtual TBuilder WithFakerHub(Faker fakerHub);
    public abstract virtual TBuilder WithSkip(Type type);
    public abstract virtual TBuilder WithSkip(string memberName);
    public abstract virtual TBuilder WithSkip(Type type, string memberName);
    public abstract virtual TBuilder WithOverride(AutoGeneratorOverride generatorOverride);
}
public interface AutoBogus.IAutoFaker {
    public abstract virtual TType Generate(Action`1<IAutoGenerateConfigBuilder> configure);
    public abstract virtual List`1<TType> Generate(int count, Action`1<IAutoGenerateConfigBuilder> configure);
    public abstract virtual TType Generate(Action`1<IAutoFakerConfigBuilder> configure);
    public abstract virtual List`1<TType> Generate(int count, Action`1<IAutoFakerConfigBuilder> configure);
    [ObsoleteAttribute("Use IAutoFaker.Generate<TType, TFaker>(builder => builder.WithArgs()) instead.")]
public abstract virtual TType Generate(Object[] args);
    [ObsoleteAttribute("Use IAutoFaker.Generate<TType, TFaker>(count, builder => builder.WithArgs()) instead.")]
public abstract virtual List`1<TType> Generate(int count, Object[] args);
}
public interface AutoBogus.IAutoFakerConfigBuilder {
    public abstract virtual IAutoFakerConfigBuilder WithArgs(Object[] args);
}
public interface AutoBogus.IAutoFakerDefaultConfigBuilder {
}
public interface AutoBogus.IAutoGenerateConfigBuilder {
}
internal interface AutoBogus.IAutoGenerator {
    public abstract virtual object Generate(AutoGenerateContext context);
}
internal static class AutoBogus.Util.ReflectionHelper : object {
    internal static bool IsEnum(Type type);
    internal static bool IsAbstract(Type type);
    internal static bool IsInterface(Type type);
    internal static bool IsGenericType(Type type);
    internal static bool IsExpandoObject(Type type);
    internal static bool IsAssignableFrom(Type baseType, Type type);
    internal static bool IsField(MemberInfo member);
    internal static bool IsProperty(MemberInfo member);
    internal static IEnumerable`1<Type> GetGenericArguments(Type type);
    internal static Type GetGenericTypeDefinition(Type type);
    internal static Type GetGenericCollectionType(Type type);
    internal static bool IsDictionary(Type type);
    internal static bool IsReadOnlyDictionary(Type type);
    internal static bool IsSet(Type type);
    internal static bool IsList(Type type);
    internal static bool IsCollection(Type type);
    internal static bool IsEnumerable(Type type);
    internal static bool IsNullable(Type type);
    private static bool IsGenericTypeDefinition(Type baseType, Type type);
}
