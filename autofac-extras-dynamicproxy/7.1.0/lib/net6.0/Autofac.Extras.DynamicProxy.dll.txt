[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
[AttributeUsageAttribute("1028")]
public class Autofac.Extras.DynamicProxy.InterceptAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Service <InterceptorService>k__BackingField;
    public Service InterceptorService { get; private set; }
    public InterceptAttribute(Service interceptorService);
    public InterceptAttribute(string interceptorServiceName);
    public InterceptAttribute(Type interceptorServiceType);
    [CompilerGeneratedAttribute]
public Service get_InterceptorService();
    [CompilerGeneratedAttribute]
private void set_InterceptorService(Service value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Autofac.Extras.DynamicProxy.RegistrationExtensions : object {
    private static string InterceptorsPropertyName;
    private static string AttributeInterceptorsPropertyName;
    private static IEnumerable`1<Service> EmptyServices;
    private static ProxyGenerator ProxyGenerator;
    private static RegistrationExtensions();
    [ExtensionAttribute]
public static IRegistrationBuilder`3<TLimit, ScanningActivatorData, TRegistrationStyle> EnableClassInterceptors(IRegistrationBuilder`3<TLimit, ScanningActivatorData, TRegistrationStyle> registration);
    [ExtensionAttribute]
public static IRegistrationBuilder`3<TLimit, TConcreteReflectionActivatorData, TRegistrationStyle> EnableClassInterceptors(IRegistrationBuilder`3<TLimit, TConcreteReflectionActivatorData, TRegistrationStyle> registration);
    [ExtensionAttribute]
public static IRegistrationBuilder`3<TLimit, ScanningActivatorData, TRegistrationStyle> EnableClassInterceptors(IRegistrationBuilder`3<TLimit, ScanningActivatorData, TRegistrationStyle> registration, ProxyGenerationOptions options, Type[] additionalInterfaces);
    [ExtensionAttribute]
public static IRegistrationBuilder`3<TLimit, TConcreteReflectionActivatorData, TRegistrationStyle> EnableClassInterceptors(IRegistrationBuilder`3<TLimit, TConcreteReflectionActivatorData, TRegistrationStyle> registration, ProxyGenerationOptions options, Type[] additionalInterfaces);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IRegistrationBuilder`3<TLimit, TActivatorData, TSingleRegistrationStyle> EnableInterfaceInterceptors(IRegistrationBuilder`3<TLimit, TActivatorData, TSingleRegistrationStyle> registration, ProxyGenerationOptions options);
    [ExtensionAttribute]
public static IRegistrationBuilder`3<TLimit, TActivatorData, TStyle> InterceptedBy(IRegistrationBuilder`3<TLimit, TActivatorData, TStyle> builder, Service[] interceptorServices);
    [ExtensionAttribute]
public static IRegistrationBuilder`3<TLimit, TActivatorData, TStyle> InterceptedBy(IRegistrationBuilder`3<TLimit, TActivatorData, TStyle> builder, String[] interceptorServiceNames);
    [ExtensionAttribute]
public static IRegistrationBuilder`3<TLimit, TActivatorData, TStyle> InterceptedBy(IRegistrationBuilder`3<TLimit, TActivatorData, TStyle> builder, Type[] interceptorServiceTypes);
    private static void EnsureInterfaceInterceptionApplies(IComponentRegistration componentRegistration);
    private static void AddInterceptorServicesToMetadata(IRegistrationBuilder`3<TLimit, TActivatorData, TStyle> builder, IEnumerable`1<Service> interceptorServices, string metadataKey);
    private static IEnumerable`1<Service> GetInterceptorServices(IComponentRegistration registration, Type implType);
    private static IEnumerable`1<Service> GetInterceptorServicesFromAttributes(Type implType);
}
[GeneratedCodeAttribute("Microsoft.Build.Tasks.StronglyTypedResourceBuilder", "15.1.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Autofac.Extras.DynamicProxy.RegistrationExtensionsResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string InterfaceNotSupportedByTransparentProxy { get; }
    internal static string InterfaceProxyingOnlySupportsInterfaceServices { get; }
    internal static string TransparentProxyIsNotInterface { get; }
    internal static string TypeIsNotTransparentProxy { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_InterfaceNotSupportedByTransparentProxy();
    internal static string get_InterfaceProxyingOnlySupportsInterfaceServices();
    internal static string get_TransparentProxyIsNotInterface();
    internal static string get_TypeIsNotTransparentProxy();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
