[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Autofac.Integration.Wcf.AutofacDependencyInjectionServiceBehavior : object {
    private ILifetimeScope _rootLifetimeScope;
    private ServiceImplementationData _serviceData;
    public AutofacDependencyInjectionServiceBehavior(ILifetimeScope rootLifetimeScope, ServiceImplementationData serviceData);
    public sealed virtual void Validate(ServiceDescription serviceDescription, ServiceHostBase serviceHostBase);
    public sealed virtual void AddBindingParameters(ServiceDescription serviceDescription, ServiceHostBase serviceHostBase, Collection`1<ServiceEndpoint> endpoints, BindingParameterCollection bindingParameters);
    public sealed virtual void ApplyDispatchBehavior(ServiceDescription serviceDescription, ServiceHostBase serviceHostBase);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Autofac.Integration.Wcf.AutofacHostFactory : ServiceHostFactory {
    [CompilerGeneratedAttribute]
private static ILifetimeScope <Container>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Action`1<ServiceHostBase> <HostConfigurationAction>k__BackingField;
    [CompilerGeneratedAttribute]
private static IServiceImplementationDataProvider <ServiceImplementationDataProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private static Features <Features>k__BackingField;
    public static ILifetimeScope Container { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Action`1<ServiceHostBase> HostConfigurationAction { get; public set; }
    public static IServiceImplementationDataProvider ServiceImplementationDataProvider { get; public set; }
    public static Features Features { get; public set; }
    [CompilerGeneratedAttribute]
public static ILifetimeScope get_Container();
    [CompilerGeneratedAttribute]
public static void set_Container(ILifetimeScope value);
    [CompilerGeneratedAttribute]
public static Action`1<ServiceHostBase> get_HostConfigurationAction();
    [CompilerGeneratedAttribute]
public static void set_HostConfigurationAction(Action`1<ServiceHostBase> value);
    [CompilerGeneratedAttribute]
public static IServiceImplementationDataProvider get_ServiceImplementationDataProvider();
    [CompilerGeneratedAttribute]
public static void set_ServiceImplementationDataProvider(IServiceImplementationDataProvider value);
    [CompilerGeneratedAttribute]
public static Features get_Features();
    [CompilerGeneratedAttribute]
public static void set_Features(Features value);
    [NullableContextAttribute("1")]
public virtual ServiceHostBase CreateServiceHost(string constructorString, Uri[] baseAddresses);
    [NullableContextAttribute("1")]
protected abstract virtual ServiceHost CreateSingletonServiceHost(object singletonInstance, Uri[] baseAddresses);
    [NullableContextAttribute("1")]
private static void ApplyHostConfigurationAction(ServiceHostBase host);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Autofac.Integration.Wcf.AutofacHostFactoryResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ContainerIsNull { get; }
    internal static string ImplementationTypeUnknown { get; }
    internal static string NoServiceTypeToHost { get; }
    internal static string ServiceMustBeSingleInstance { get; }
    internal static string ServiceMustNotBeSingleInstance { get; }
    internal static string ServiceNotRegistered { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ContainerIsNull();
    internal static string get_ImplementationTypeUnknown();
    internal static string get_NoServiceTypeToHost();
    internal static string get_ServiceMustBeSingleInstance();
    internal static string get_ServiceMustNotBeSingleInstance();
    internal static string get_ServiceNotRegistered();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Autofac.Integration.Wcf.AutofacInstanceContext : object {
    private bool _disposed;
    [CompilerGeneratedAttribute]
private ILifetimeScope <OperationLifetime>k__BackingField;
    [NullableAttribute("2")]
public static AutofacInstanceContext Current { get; }
    public ILifetimeScope OperationLifetime { get; }
    public IComponentRegistry ComponentRegistry { get; }
    public AutofacInstanceContext(ILifetimeScope container);
    [NullableContextAttribute("2")]
public static AutofacInstanceContext get_Current();
    [CompilerGeneratedAttribute]
public ILifetimeScope get_OperationLifetime();
    protected virtual override void Finalize();
    public sealed virtual void Attach(InstanceContext owner);
    public sealed virtual void Detach(InstanceContext owner);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    public sealed virtual IComponentRegistry get_ComponentRegistry();
    public object ResolveComponent(ResolveRequest& request);
    public object Resolve(ServiceImplementationData serviceData);
    private sealed virtual override object Autofac.IComponentContext.ResolveComponent(ResolveRequest& modreq(System.Runtime.InteropServices.InAttribute) request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Autofac.Integration.Wcf.AutofacInstanceProvider : object {
    private ILifetimeScope _rootLifetimeScope;
    private ServiceImplementationData _serviceData;
    public AutofacInstanceProvider(ILifetimeScope rootLifetimeScope, ServiceImplementationData serviceData);
    public sealed virtual object GetInstance(InstanceContext instanceContext);
    public sealed virtual object GetInstance(InstanceContext instanceContext, Message message);
    public sealed virtual void ReleaseInstance(InstanceContext instanceContext, object instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Autofac.Integration.Wcf.AutofacServiceHostFactory : AutofacHostFactory {
    protected virtual ServiceHost CreateServiceHost(Type serviceType, Uri[] baseAddresses);
    protected virtual ServiceHost CreateSingletonServiceHost(object singletonInstance, Uri[] baseAddresses);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Autofac.Integration.Wcf.AutofacServiceHostFactoryResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ContainerIsNull { get; }
    internal static string ImplementationTypeUnknown { get; }
    internal static string ServiceNotRegistered { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ContainerIsNull();
    internal static string get_ImplementationTypeUnknown();
    internal static string get_ServiceNotRegistered();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Autofac.Integration.Wcf.AutofacWebServiceHostFactory : AutofacHostFactory {
    protected virtual ServiceHost CreateServiceHost(Type serviceType, Uri[] baseAddresses);
    protected virtual ServiceHost CreateSingletonServiceHost(object singletonInstance, Uri[] baseAddresses);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Autofac.Integration.Wcf.DefaultServiceImplementationDataProvider : object {
    public virtual ServiceImplementationData GetServiceImplementationData(string value);
    private static bool IsRegistrationSingleInstance(IComponentRegistration registration);
    private static bool IsSingletonWcfService(Type implementationType);
}
[FlagsAttribute]
public enum Autofac.Integration.Wcf.Features : Enum {
    public int value__;
    public static Features None;
    public static Features InstancePerContextModules;
}
[NullableContextAttribute("1")]
public interface Autofac.Integration.Wcf.IPerInstanceContextModuleAccessor {
    public IEnumerable`1<IModule> Modules { get; }
    public abstract virtual IEnumerable`1<IModule> get_Modules();
}
[NullableContextAttribute("1")]
public interface Autofac.Integration.Wcf.IServiceImplementationDataProvider {
    public abstract virtual ServiceImplementationData GetServiceImplementationData(string value);
}
[ExtensionAttribute]
public static class Autofac.Integration.Wcf.RegistrationExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IRegistrationBuilder`3<TLimit, TActivatorData, TRegistrationStyle> UseWcfSafeRelease(IRegistrationBuilder`3<TLimit, TActivatorData, TRegistrationStyle> registration);
    [NullableContextAttribute("1")]
private static void CloseChannel(T channel);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Autofac.Integration.Wcf.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ArgumentException_StringEmpty { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ArgumentException_StringEmpty();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Autofac.Integration.Wcf.ServiceHostExtensions : object {
    [ExtensionAttribute]
public static void AddDependencyInjectionBehavior(ServiceHostBase serviceHost, ILifetimeScope container);
    [ExtensionAttribute]
public static void AddDependencyInjectionBehavior(ServiceHostBase serviceHost, Type contractType, ILifetimeScope container);
    [ExtensionAttribute]
public static void AddDependencyInjectionBehavior(ServiceHostBase serviceHost, ILifetimeScope container, IEnumerable`1<Parameter> parameters);
    [ExtensionAttribute]
public static void AddDependencyInjectionBehavior(ServiceHostBase serviceHost, Type contractType, ILifetimeScope container, IEnumerable`1<Parameter> parameters);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Autofac.Integration.Wcf.ServiceHostExtensionsResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ContractTypeNotRegistered { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ContractTypeNotRegistered();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Autofac.Integration.Wcf.ServiceImplementationData : object {
    [CompilerGeneratedAttribute]
private string <ConstructorString>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HostAsSingleton>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ServiceTypeToHost>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<ILifetimeScope, object> <ImplementationResolver>k__BackingField;
    public string ConstructorString { get; public set; }
    public bool HostAsSingleton { get; public set; }
    public Type ServiceTypeToHost { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<ILifetimeScope, object> ImplementationResolver { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ConstructorString();
    [CompilerGeneratedAttribute]
public void set_ConstructorString(string value);
    [CompilerGeneratedAttribute]
public bool get_HostAsSingleton();
    [CompilerGeneratedAttribute]
public void set_HostAsSingleton(bool value);
    [CompilerGeneratedAttribute]
public Type get_ServiceTypeToHost();
    [CompilerGeneratedAttribute]
public void set_ServiceTypeToHost(Type value);
    [CompilerGeneratedAttribute]
public Func`2<ILifetimeScope, object> get_ImplementationResolver();
    [CompilerGeneratedAttribute]
public void set_ImplementationResolver(Func`2<ILifetimeScope, object> value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
