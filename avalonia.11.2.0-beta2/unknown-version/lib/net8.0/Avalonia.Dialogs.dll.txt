[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CompilerGeneratedAttribute]
public class Avalonia.Dialogs.AboutAvaloniaDialog : Window {
    private static Version s_version;
    [CompilerGeneratedAttribute]
private static string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <IsDevelopmentBuild>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <Copyright>k__BackingField;
    private static Action`1<object> !XamlIlPopulateOverride;
    public static string Version { get; }
    public static bool IsDevelopmentBuild { get; }
    public static string Copyright { get; }
    private static AboutAvaloniaDialog();
    [CompilerGeneratedAttribute]
public static string get_Version();
    [CompilerGeneratedAttribute]
public static bool get_IsDevelopmentBuild();
    [CompilerGeneratedAttribute]
public static string get_Copyright();
    [AsyncStateMachineAttribute("Avalonia.Dialogs.AboutAvaloniaDialog/<Button_OnClick>d__11")]
private void Button_OnClick(object sender, RoutedEventArgs e);
    private static void !XamlIlPopulate(IServiceProvider , AboutAvaloniaDialog );
    private static void !XamlIlPopulateTrampoline(AboutAvaloniaDialog );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Avalonia.Dialogs.Internal.AvaloniaDialogsInternalViewModelBase : object {
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    [NullableContextAttribute("1")]
protected internal bool RaiseAndSetIfChanged(T& field, T value, string propertyName);
    protected internal void RaisePropertyChanged(string propertyName);
}
internal class Avalonia.Dialogs.Internal.BclMountedVolumeInfoProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual IDisposable Listen(ObservableCollection`1<MountedVolumeInfo> mountedDrives);
}
public class Avalonia.Dialogs.Internal.ChildFitter : Decorator {
    protected virtual Size MeasureOverride(Size availableSize);
    protected virtual Size ArrangeOverride(Size finalSize);
}
public class Avalonia.Dialogs.Internal.FileSizeStringConverter : object {
    [NullableContextAttribute("1")]
public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    [NullableContextAttribute("1")]
public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Avalonia.Dialogs.Internal.ManagedFileChooserFilterViewModel : AvaloniaDialogsInternalViewModelBase {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Regex[] _patterns;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public ManagedFileChooserFilterViewModel(FilePickerFileType filter);
    [CompilerGeneratedAttribute]
public string get_Name();
    public bool Match(string filename);
    public virtual string ToString();
}
public enum Avalonia.Dialogs.Internal.ManagedFileChooserItemType : Enum {
    public int value__;
    public static ManagedFileChooserItemType File;
    public static ManagedFileChooserItemType Folder;
    public static ManagedFileChooserItemType Volume;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Avalonia.Dialogs.Internal.ManagedFileChooserItemViewModel : AvaloniaDialogsInternalViewModelBase {
    private string _displayName;
    private string _path;
    private DateTime _modified;
    private string _type;
    private long _size;
    private ManagedFileChooserItemType _itemType;
    public string DisplayName { get; public set; }
    public string Path { get; public set; }
    public DateTime Modified { get; public set; }
    public string Type { get; public set; }
    public long Size { get; public set; }
    public ManagedFileChooserItemType ItemType { get; public set; }
    [NullableAttribute("1")]
public string IconKey { get; }
    [NullableContextAttribute("1")]
public ManagedFileChooserItemViewModel(ManagedFileChooserNavigationItem item);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public string get_Path();
    public void set_Path(string value);
    public DateTime get_Modified();
    public void set_Modified(DateTime value);
    public string get_Type();
    public void set_Type(string value);
    public long get_Size();
    public void set_Size(long value);
    public ManagedFileChooserItemType get_ItemType();
    public void set_ItemType(ManagedFileChooserItemType value);
    [NullableContextAttribute("1")]
public string get_IconKey();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Avalonia.Dialogs.Internal.ManagedFileChooserNavigationItem : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private ManagedFileChooserItemType <ItemType>k__BackingField;
    public string DisplayName { get; public set; }
    public string Path { get; public set; }
    public ManagedFileChooserItemType ItemType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public ManagedFileChooserItemType get_ItemType();
    [CompilerGeneratedAttribute]
public void set_ItemType(ManagedFileChooserItemType value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Avalonia.Dialogs.Internal.ManagedFileChooserSources : object {
    [CompilerGeneratedAttribute]
private Func`1<ManagedFileChooserNavigationItem[]> <GetUserDirectories>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<ManagedFileChooserNavigationItem[]> <GetFileSystemRoots>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<ManagedFileChooserSources, ManagedFileChooserNavigationItem[]> <GetAllItemsDelegate>k__BackingField;
    public static ObservableCollection`1<MountedVolumeInfo> MountedVolumes;
    private static SpecialFolder[] s_folders;
    public Func`1<ManagedFileChooserNavigationItem[]> GetUserDirectories { get; public set; }
    public Func`1<ManagedFileChooserNavigationItem[]> GetFileSystemRoots { get; public set; }
    public Func`2<ManagedFileChooserSources, ManagedFileChooserNavigationItem[]> GetAllItemsDelegate { get; public set; }
    private static ManagedFileChooserSources();
    [CompilerGeneratedAttribute]
public Func`1<ManagedFileChooserNavigationItem[]> get_GetUserDirectories();
    [CompilerGeneratedAttribute]
public void set_GetUserDirectories(Func`1<ManagedFileChooserNavigationItem[]> value);
    [CompilerGeneratedAttribute]
public Func`1<ManagedFileChooserNavigationItem[]> get_GetFileSystemRoots();
    [CompilerGeneratedAttribute]
public void set_GetFileSystemRoots(Func`1<ManagedFileChooserNavigationItem[]> value);
    [CompilerGeneratedAttribute]
public Func`2<ManagedFileChooserSources, ManagedFileChooserNavigationItem[]> get_GetAllItemsDelegate();
    [CompilerGeneratedAttribute]
public void set_GetAllItemsDelegate(Func`2<ManagedFileChooserSources, ManagedFileChooserNavigationItem[]> value);
    public ManagedFileChooserNavigationItem[] GetAllItems();
    public static ManagedFileChooserNavigationItem[] DefaultGetAllItems(ManagedFileChooserSources sources);
    public static ManagedFileChooserNavigationItem[] DefaultGetUserDirectories();
    public static ManagedFileChooserNavigationItem[] DefaultGetFileSystemRoots();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Avalonia.Dialogs.Internal.ManagedFileChooserViewModel : AvaloniaDialogsInternalViewModelBase {
    private ManagedFileDialogOptions _options;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Action CancelRequested;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<String[]> CompleteRequested;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<string> OverwritePrompt;
    [CompilerGeneratedAttribute]
private AvaloniaList`1<ManagedFileChooserItemViewModel> <QuickLinks>k__BackingField;
    [CompilerGeneratedAttribute]
private AvaloniaList`1<ManagedFileChooserItemViewModel> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private AvaloniaList`1<ManagedFileChooserFilterViewModel> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private AvaloniaList`1<ManagedFileChooserItemViewModel> <SelectedItems>k__BackingField;
    [NullableAttribute("2")]
private string _location;
    [NullableAttribute("2")]
private string _fileName;
    private bool _showHiddenFiles;
    [NullableAttribute("2")]
private ManagedFileChooserFilterViewModel _selectedFilter;
    private bool _selectingDirectory;
    private bool _savingFile;
    private bool _scheduledSelectionValidation;
    private bool _alreadyCancelled;
    [NullableAttribute("2")]
private string _defaultExtension;
    private bool _overwritePrompt;
    private CompositeDisposable _disposables;
    [CompilerGeneratedAttribute]
private bool <ShowFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectionMode <SelectionMode>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    public AvaloniaList`1<ManagedFileChooserItemViewModel> QuickLinks { get; }
    public AvaloniaList`1<ManagedFileChooserItemViewModel> Items { get; }
    public AvaloniaList`1<ManagedFileChooserFilterViewModel> Filters { get; }
    public AvaloniaList`1<ManagedFileChooserItemViewModel> SelectedItems { get; }
    [NullableAttribute("2")]
public string Location { get; public set; }
    [NullableAttribute("2")]
public string FileName { get; public set; }
    public bool SelectingFolder { get; }
    public bool ShowFilters { get; }
    public SelectionMode SelectionMode { get; }
    [NullableAttribute("2")]
public string Title { get; }
    public int QuickLinksSelectedIndex { get; public set; }
    [NullableAttribute("2")]
public ManagedFileChooserFilterViewModel SelectedFilter { get; public set; }
    public bool ShowHiddenFiles { get; public set; }
    public ManagedFileChooserViewModel(ManagedFileDialogOptions options);
    public ManagedFileChooserViewModel(FilePickerOpenOptions filePickerOpen, ManagedFileDialogOptions options);
    public ManagedFileChooserViewModel(FilePickerSaveOptions filePickerSave, ManagedFileDialogOptions options);
    public ManagedFileChooserViewModel(FolderPickerOpenOptions folderPickerOpen, ManagedFileDialogOptions options);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_CancelRequested(Action value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_CancelRequested(Action value);
    [CompilerGeneratedAttribute]
public void add_CompleteRequested(Action`1<String[]> value);
    [CompilerGeneratedAttribute]
public void remove_CompleteRequested(Action`1<String[]> value);
    [CompilerGeneratedAttribute]
public void add_OverwritePrompt(Action`1<string> value);
    [CompilerGeneratedAttribute]
public void remove_OverwritePrompt(Action`1<string> value);
    [CompilerGeneratedAttribute]
public AvaloniaList`1<ManagedFileChooserItemViewModel> get_QuickLinks();
    [CompilerGeneratedAttribute]
public AvaloniaList`1<ManagedFileChooserItemViewModel> get_Items();
    [CompilerGeneratedAttribute]
public AvaloniaList`1<ManagedFileChooserFilterViewModel> get_Filters();
    [CompilerGeneratedAttribute]
public AvaloniaList`1<ManagedFileChooserItemViewModel> get_SelectedItems();
    [NullableContextAttribute("2")]
public string get_Location();
    [NullableContextAttribute("2")]
public void set_Location(string value);
    [NullableContextAttribute("2")]
public string get_FileName();
    [NullableContextAttribute("2")]
public void set_FileName(string value);
    public bool get_SelectingFolder();
    [CompilerGeneratedAttribute]
public bool get_ShowFilters();
    [CompilerGeneratedAttribute]
public SelectionMode get_SelectionMode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Title();
    public int get_QuickLinksSelectedIndex();
    public void set_QuickLinksSelectedIndex(int value);
    [NullableContextAttribute("2")]
public ManagedFileChooserFilterViewModel get_SelectedFilter();
    [NullableContextAttribute("2")]
public void set_SelectedFilter(ManagedFileChooserFilterViewModel value);
    public bool get_ShowHiddenFiles();
    public void set_ShowHiddenFiles(bool value);
    private void RefreshQuickLinks(ManagedFileChooserSources quickSources);
    public void EnterPressed();
    [AsyncStateMachineAttribute("Avalonia.Dialogs.Internal.ManagedFileChooserViewModel/<OnSelectionChangedAsync>d__65")]
private void OnSelectionChangedAsync(object sender, NotifyCollectionChangedEventArgs e);
    [NullableContextAttribute("2")]
private void NavigateRoot(string initialSelectionName);
    public void Refresh();
    [NullableContextAttribute("2")]
public void Navigate(IStorageFolder path, string initialSelectionName);
    [NullableContextAttribute("2")]
public void Navigate(string path, string initialSelectionName);
    public void GoUp();
    public void Cancel();
    [DependsOnAttribute("FileName")]
[DependsOnAttribute("Location")]
[DependsOnAttribute("SelectedItems")]
public bool CanOk(object _);
    public void Ok();
    public void SelectSingleFile(ManagedFileChooserItemViewModel item);
    [CompilerGeneratedAttribute]
private void <.ctor>b__60_1(String[] <p0>);
    [CompilerGeneratedAttribute]
private void <.ctor>b__60_2();
    [CompilerGeneratedAttribute]
private void <OnSelectionChangedAsync>b__65_0();
}
public class Avalonia.Dialogs.Internal.ResourceSelectorConverter : ResourceDictionary {
    [NullableContextAttribute("2")]
public sealed virtual object Convert(object key, Type targetType, object parameter, CultureInfo culture);
    [NullableContextAttribute("1")]
public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TemplatePartAttribute("PART_QuickLinks", "Avalonia.Controls.Control")]
[TemplatePartAttribute("PART_Files", "Avalonia.Controls.ListBox")]
public class Avalonia.Dialogs.ManagedFileChooser : TemplatedControl {
    private Control _quickLinksRoot;
    private ListBox _filesView;
    private ManagedFileChooserViewModel Model { get; }
    private ManagedFileChooserViewModel get_Model();
    [NullableContextAttribute("1")]
private void OnPointerPressed(object sender, PointerPressedEventArgs e);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Avalonia.Dialogs.ManagedFileChooser/<OnDataContextChanged>d__6")]
protected virtual void OnDataContextChanged(EventArgs e);
    [NullableContextAttribute("1")]
protected virtual void OnApplyTemplate(TemplateAppliedEventArgs e);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private void <>n__0(EventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Avalonia.Dialogs.ManagedFileChooserOverwritePrompt : TemplatedControl {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Action`1<bool> Result;
    private string _fileName;
    public static DirectProperty`2<ManagedFileChooserOverwritePrompt, string> FileNameProperty;
    public string FileName { get; public set; }
    private static ManagedFileChooserOverwritePrompt();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void add_Result(Action`1<bool> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void remove_Result(Action`1<bool> value);
    public string get_FileName();
    public void set_FileName(string value);
    public void Confirm();
    public void Cancel();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[SupportedOSPlatformAttribute("windows")]
[SupportedOSPlatformAttribute("macos")]
[SupportedOSPlatformAttribute("linux")]
public static class Avalonia.Dialogs.ManagedFileDialogExtensions : object {
    [ExtensionAttribute]
public static AppBuilder UseManagedSystemDialogs(AppBuilder builder);
    [ExtensionAttribute]
public static AppBuilder UseManagedSystemDialogs(AppBuilder builder);
    [ExtensionAttribute]
[ObsoleteAttribute("Use Window.StorageProvider API or TopLevel.StorageProvider API")]
[EditorBrowsableAttribute("1")]
public static Task`1<String[]> ShowManagedAsync(OpenFileDialog dialog, Window parent, ManagedFileDialogOptions options);
    [AsyncStateMachineAttribute("Avalonia.Dialogs.ManagedFileDialogExtensions/<ShowManagedAsync>d__4`1")]
[ExtensionAttribute]
[ObsoleteAttribute("Use Window.StorageProvider API or TopLevel.StorageProvider API")]
[EditorBrowsableAttribute("1")]
public static Task`1<String[]> ShowManagedAsync(OpenFileDialog dialog, Window parent, ManagedFileDialogOptions options);
    [NullableContextAttribute("2")]
private static ManagedFileDialogOptions PrepareOptions(ManagedFileDialogOptions optionsOverride, Func`1<ContentControl> customRootFactory);
    [ExtensionAttribute]
private static AppBuilder UseManagedSystemDialogs(AppBuilder builder, Func`1<ContentControl> customFactory);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Avalonia.Dialogs.ManagedFileDialogOptions : object {
    [CompilerGeneratedAttribute]
private bool <AllowDirectorySelection>k__BackingField;
    [CompilerGeneratedAttribute]
private IMountedVolumeInfoProvider <CustomVolumeInfoProvider>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`1<ContentControl> <ContentRootFactory>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public bool AllowDirectorySelection { get; public set; }
    public IMountedVolumeInfoProvider CustomVolumeInfoProvider { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`1<ContentControl> ContentRootFactory { get; public set; }
    [CompilerGeneratedAttribute]
protected ManagedFileDialogOptions(ManagedFileDialogOptions original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_AllowDirectorySelection();
    [CompilerGeneratedAttribute]
public void set_AllowDirectorySelection(bool value);
    [CompilerGeneratedAttribute]
public IMountedVolumeInfoProvider get_CustomVolumeInfoProvider();
    [CompilerGeneratedAttribute]
public void set_CustomVolumeInfoProvider(IMountedVolumeInfoProvider value);
    [CompilerGeneratedAttribute]
public Func`1<ContentControl> get_ContentRootFactory();
    [CompilerGeneratedAttribute]
public void set_ContentRootFactory(Func`1<ContentControl> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ManagedFileDialogOptions left, ManagedFileDialogOptions right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ManagedFileDialogOptions left, ManagedFileDialogOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(ManagedFileDialogOptions other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual ManagedFileDialogOptions <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Avalonia.Dialogs.ManagedStorageProvider : BclStorageProvider {
    [NullableAttribute("2")]
private TopLevel _parent;
    private ManagedFileDialogOptions _managedOptions;
    public bool CanSave { get; }
    public bool CanOpen { get; }
    public bool CanPickFolder { get; }
    [NullableContextAttribute("2")]
public ManagedStorageProvider(TopLevel parent, ManagedFileDialogOptions managedOptions);
    public virtual bool get_CanSave();
    public virtual bool get_CanOpen();
    public virtual bool get_CanPickFolder();
    [AsyncStateMachineAttribute("Avalonia.Dialogs.ManagedStorageProvider/<OpenFilePickerAsync>d__9")]
public virtual Task`1<IReadOnlyList`1<IStorageFile>> OpenFilePickerAsync(FilePickerOpenOptions options);
    [AsyncStateMachineAttribute("Avalonia.Dialogs.ManagedStorageProvider/<SaveFilePickerAsync>d__10")]
public virtual Task`1<IStorageFile> SaveFilePickerAsync(FilePickerSaveOptions options);
    [AsyncStateMachineAttribute("Avalonia.Dialogs.ManagedStorageProvider/<OpenFolderPickerAsync>d__11")]
public virtual Task`1<IReadOnlyList`1<IStorageFolder>> OpenFolderPickerAsync(FolderPickerOpenOptions options);
    private ContentControl PrepareRoot(ManagedFileChooserViewModel model);
    private Task`1<String[]> Show(ManagedFileChooserViewModel model);
    [AsyncStateMachineAttribute("Avalonia.Dialogs.ManagedStorageProvider/<ShowAsWindow>d__14")]
private Task`1<String[]> ShowAsWindow(Window window, ManagedFileChooserViewModel model);
    [AsyncStateMachineAttribute("Avalonia.Dialogs.ManagedStorageProvider/<ShowAsPopup>d__15")]
private Task`1<String[]> ShowAsPopup(ContentControl root, ManagedFileChooserViewModel model);
    [AsyncStateMachineAttribute("Avalonia.Dialogs.ManagedStorageProvider/<ShowOverwritePrompt>d__16")]
private static Task`1<bool> ShowOverwritePrompt(string filename, ContentControl root);
}
[EditorBrowsableAttribute("1")]
[CompilerGeneratedAttribute]
public class CompiledAvaloniaXaml.!AvaloniaResources : object {
}
[CompilerGeneratedAttribute]
internal class CompiledAvaloniaXaml.!IndexerAccessorFactoryClosure : object {
}
[EditorBrowsableAttribute("1")]
public class CompiledAvaloniaXaml.!XamlLoader : object {
    public static object TryLoad(IServiceProvider , string );
    public static object TryLoad(string );
}
[CompilerGeneratedAttribute]
internal class CompiledAvaloniaXaml.XamlDynamicSetters : object {
}
[CompilerGeneratedAttribute]
internal class CompiledAvaloniaXaml.XamlIlContext : object {
}
[CompilerGeneratedAttribute]
internal class CompiledAvaloniaXaml.XamlIlHelpers : object {
    private static IPropertyInfo Avalonia.Dialogs.AboutAvaloniaDialog,Avalonia.Dialogs.Version!Field;
    private static IPropertyInfo Avalonia.Dialogs.AboutAvaloniaDialog,Avalonia.Dialogs.Copyright!Field;
    private static object Avalonia.Dialogs.AboutAvaloniaDialog,Avalonia.Dialogs.Version!Getter(object );
    public static IPropertyInfo Avalonia.Dialogs.AboutAvaloniaDialog,Avalonia.Dialogs.Version!Property();
    private static object Avalonia.Dialogs.AboutAvaloniaDialog,Avalonia.Dialogs.Copyright!Getter(object );
    public static IPropertyInfo Avalonia.Dialogs.AboutAvaloniaDialog,Avalonia.Dialogs.Copyright!Property();
}
[CompilerGeneratedAttribute]
internal class CompiledAvaloniaXaml.XamlIlTrampolines : object {
}
