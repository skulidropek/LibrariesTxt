public class AWS.Logger.AWSLoggerConfig : object {
    private int batchSizeInBytes;
    [CompilerGeneratedAttribute]
private string <LogGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableLogGroupCreation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NewLogGroupRetentionInDays>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfilesLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private AWSCredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <BatchPushInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxQueuedMessages>k__BackingField;
    internal TimeSpan MonitorSleepTime;
    [CompilerGeneratedAttribute]
private string <LogStreamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogStreamNameSuffix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogStreamNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LibraryLogErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LibraryLogFileName>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <FlushTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationRegion>k__BackingField;
    public string LogGroup { get; public set; }
    public bool DisableLogGroupCreation { get; public set; }
    public Nullable`1<int> NewLogGroupRetentionInDays { get; public set; }
    public string Profile { get; public set; }
    public string ProfilesLocation { get; public set; }
    public AWSCredentials Credentials { get; public set; }
    public string Region { get; public set; }
    public string ServiceUrl { get; public set; }
    public TimeSpan BatchPushInterval { get; public set; }
    public int BatchSizeInBytes { get; public set; }
    public int MaxQueuedMessages { get; public set; }
    public string LogStreamName { get; public set; }
    public string LogStreamNameSuffix { get; public set; }
    public string LogStreamNamePrefix { get; public set; }
    public bool LibraryLogErrors { get; public set; }
    public string LibraryLogFileName { get; public set; }
    public TimeSpan FlushTimeout { get; public set; }
    public string AuthenticationRegion { get; public set; }
    public AWSLoggerConfig(string logGroup);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LogGroup();
    [CompilerGeneratedAttribute]
public void set_LogGroup(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DisableLogGroupCreation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableLogGroupCreation(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NewLogGroupRetentionInDays();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NewLogGroupRetentionInDays(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Profile();
    [CompilerGeneratedAttribute]
public void set_Profile(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfilesLocation();
    [CompilerGeneratedAttribute]
public void set_ProfilesLocation(string value);
    [CompilerGeneratedAttribute]
public sealed virtual AWSCredentials get_Credentials();
    [CompilerGeneratedAttribute]
public void set_Credentials(AWSCredentials value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ServiceUrl();
    [CompilerGeneratedAttribute]
public void set_ServiceUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_BatchPushInterval();
    [CompilerGeneratedAttribute]
public void set_BatchPushInterval(TimeSpan value);
    public sealed virtual int get_BatchSizeInBytes();
    public void set_BatchSizeInBytes(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaxQueuedMessages();
    [CompilerGeneratedAttribute]
public void set_MaxQueuedMessages(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LogStreamName();
    [CompilerGeneratedAttribute]
public void set_LogStreamName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LogStreamNameSuffix();
    [CompilerGeneratedAttribute]
public void set_LogStreamNameSuffix(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LogStreamNamePrefix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LogStreamNamePrefix(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_LibraryLogErrors();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LibraryLogErrors(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LibraryLogFileName();
    [CompilerGeneratedAttribute]
public void set_LibraryLogFileName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_FlushTimeout();
    [CompilerGeneratedAttribute]
public void set_FlushTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AuthenticationRegion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthenticationRegion(string value);
}
public class AWS.Logger.Core.AWSLoggerCore : object {
    private static int MAX_MESSAGE_SIZE_IN_BYTES;
    private static string EMPTY_MESSAGE;
    private ConcurrentQueue`1<InputLogEvent> _pendingMessageQueue;
    private string _currentStreamName;
    private LogEventBatch _repo;
    private CancellationTokenSource _cancelStartSource;
    private SemaphoreSlim _flushTriggerEvent;
    private ManualResetEventSlim _flushCompletedEvent;
    private AWSLoggerConfig _config;
    private DateTime _maxBufferTimeStamp;
    private string _logType;
    private Lazy`1<IAmazonCloudWatchLogs> _client;
    private static string _assemblyVersion;
    private static string _baseUserAgentString;
    private static double MAX_BUFFER_TIMEDIFF;
    [CompilerGeneratedAttribute]
private EventHandler`1<LogLibraryEventArgs> LogLibraryAlert;
    private static string UserAgentHeader;
    public AWSLoggerCore(AWSLoggerConfig config, string logType);
    private static AWSLoggerCore();
    [CompilerGeneratedAttribute]
public void add_LogLibraryAlert(EventHandler`1<LogLibraryEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_LogLibraryAlert(EventHandler`1<LogLibraryEventArgs> value);
    private void RegisterShutdownHook();
    private void ProcessExit(object sender, EventArgs e);
    private static AWSCredentials DetermineCredentials(AWSLoggerConfig config);
    private static AWSCredentials LookupCredentialsFromProfileStore(AWSLoggerConfig config);
    public sealed virtual void Close();
    public sealed virtual void Flush();
    private string GetServiceUrl();
    private void AddSingleMessage(string message);
    public sealed virtual void AddMessage(string rawMessage);
    protected virtual override void Finalize();
    public sealed virtual void StartMonitor();
    [AsyncStateMachineAttribute("AWS.Logger.Core.AWSLoggerCore/<Monitor>d__31")]
private Task Monitor(CancellationToken token);
    [AsyncStateMachineAttribute("AWS.Logger.Core.AWSLoggerCore/<SendMessages>d__32")]
private Task SendMessages(CancellationToken token);
    [AsyncStateMachineAttribute("AWS.Logger.Core.AWSLoggerCore/<LogEventTransmissionSetup>d__33")]
private Task`1<string> LogEventTransmissionSetup(CancellationToken token);
    private void PutRetentionPolicy(int logGroupRetentionInDays, string logGroup, string serviceURL, CancellationToken token);
    public static string GenerateStreamName(IAWSLoggerConfig config);
    private static bool IsSuccessStatusCode(AmazonWebServiceResponse serviceResponse);
    public static IList`1<string> BreakupMessage(string message);
    private void ServiceClientBeforeRequestEvent(object sender, RequestEventArgs e);
    private void ServiceClienExceptionEvent(object sender, ExceptionEventArgs e);
    private void LogLibraryServiceError(Exception ex, string serviceUrl);
    public static void LogLibraryError(Exception ex, string LibraryLogFileName);
    [AsyncStateMachineAttribute("AWS.Logger.Core.AWSLoggerCore/<<StartMonitor>b__30_0>d")]
[CompilerGeneratedAttribute]
private Task <StartMonitor>b__30_0();
    [CompilerGeneratedAttribute]
private bool <LogEventTransmissionSetup>b__33_0(LogGroup x);
}
public interface AWS.Logger.Core.IAWSLoggerCore {
    public abstract virtual void Flush();
    public abstract virtual void Close();
    public abstract virtual void AddMessage(string message);
    public abstract virtual void StartMonitor();
}
public interface AWS.Logger.IAWSLoggerConfig {
    public string LogGroup { get; }
    public bool DisableLogGroupCreation { get; public set; }
    public Nullable`1<int> NewLogGroupRetentionInDays { get; public set; }
    public string Profile { get; }
    public string ProfilesLocation { get; }
    public AWSCredentials Credentials { get; }
    public string Region { get; }
    public string ServiceUrl { get; }
    public TimeSpan BatchPushInterval { get; }
    public int BatchSizeInBytes { get; }
    public int MaxQueuedMessages { get; }
    public string LogStreamName { get; }
    public string LogStreamNameSuffix { get; }
    public string LogStreamNamePrefix { get; public set; }
    public bool LibraryLogErrors { get; public set; }
    public string LibraryLogFileName { get; }
    public TimeSpan FlushTimeout { get; }
    public string AuthenticationRegion { get; public set; }
    public abstract virtual string get_LogGroup();
    public abstract virtual bool get_DisableLogGroupCreation();
    public abstract virtual void set_DisableLogGroupCreation(bool value);
    public abstract virtual Nullable`1<int> get_NewLogGroupRetentionInDays();
    public abstract virtual void set_NewLogGroupRetentionInDays(Nullable`1<int> value);
    public abstract virtual string get_Profile();
    public abstract virtual string get_ProfilesLocation();
    public abstract virtual AWSCredentials get_Credentials();
    public abstract virtual string get_Region();
    public abstract virtual string get_ServiceUrl();
    public abstract virtual TimeSpan get_BatchPushInterval();
    public abstract virtual int get_BatchSizeInBytes();
    public abstract virtual int get_MaxQueuedMessages();
    public abstract virtual string get_LogStreamName();
    public abstract virtual string get_LogStreamNameSuffix();
    public abstract virtual string get_LogStreamNamePrefix();
    public abstract virtual void set_LogStreamNamePrefix(string value);
    public abstract virtual bool get_LibraryLogErrors();
    public abstract virtual void set_LibraryLogErrors(bool value);
    public abstract virtual string get_LibraryLogFileName();
    public abstract virtual TimeSpan get_FlushTimeout();
    public abstract virtual string get_AuthenticationRegion();
    public abstract virtual void set_AuthenticationRegion(string value);
}
