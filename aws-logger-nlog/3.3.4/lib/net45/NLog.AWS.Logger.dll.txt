[TargetAttribute("AWSTarget")]
public class NLog.AWS.Logger.AWSTarget : TargetWithLayout {
    private AWSLoggerConfig _config;
    private AWSLoggerCore _core;
    private static string _assemblyVersion;
    private static string _userAgentString;
    [RequiredParameterAttribute]
public string LogGroup { get; public set; }
    public bool DisableLogGroupCreation { get; public set; }
    public Nullable`1<int> NewLogGroupRetentionInDays { get; public set; }
    public string Profile { get; public set; }
    public string ProfilesLocation { get; public set; }
    public AWSCredentials Credentials { get; public set; }
    public string Region { get; public set; }
    public string ServiceUrl { get; public set; }
    public TimeSpan BatchPushInterval { get; public set; }
    public int BatchSizeInBytes { get; public set; }
    public int MaxQueuedMessages { get; public set; }
    public string LogStreamName { get; public set; }
    public string LogStreamNameSuffix { get; public set; }
    public string LogStreamNamePrefix { get; public set; }
    public bool LibraryLogErrors { get; public set; }
    public string LibraryLogFileName { get; public set; }
    public TimeSpan FlushTimeout { get; public set; }
    public string AuthenticationRegion { get; public set; }
    private static AWSTarget();
    public sealed virtual string get_LogGroup();
    public void set_LogGroup(string value);
    public sealed virtual bool get_DisableLogGroupCreation();
    public sealed virtual void set_DisableLogGroupCreation(bool value);
    public sealed virtual Nullable`1<int> get_NewLogGroupRetentionInDays();
    public sealed virtual void set_NewLogGroupRetentionInDays(Nullable`1<int> value);
    public sealed virtual string get_Profile();
    public void set_Profile(string value);
    public sealed virtual string get_ProfilesLocation();
    public void set_ProfilesLocation(string value);
    public sealed virtual AWSCredentials get_Credentials();
    public void set_Credentials(AWSCredentials value);
    public sealed virtual string get_Region();
    public void set_Region(string value);
    public sealed virtual string get_ServiceUrl();
    public void set_ServiceUrl(string value);
    public sealed virtual TimeSpan get_BatchPushInterval();
    public void set_BatchPushInterval(TimeSpan value);
    public sealed virtual int get_BatchSizeInBytes();
    public void set_BatchSizeInBytes(int value);
    public sealed virtual int get_MaxQueuedMessages();
    public void set_MaxQueuedMessages(int value);
    public sealed virtual string get_LogStreamName();
    public void set_LogStreamName(string value);
    public sealed virtual string get_LogStreamNameSuffix();
    public void set_LogStreamNameSuffix(string value);
    public sealed virtual string get_LogStreamNamePrefix();
    public sealed virtual void set_LogStreamNamePrefix(string value);
    public sealed virtual bool get_LibraryLogErrors();
    public sealed virtual void set_LibraryLogErrors(bool value);
    public sealed virtual string get_LibraryLogFileName();
    public void set_LibraryLogFileName(string value);
    public sealed virtual TimeSpan get_FlushTimeout();
    public void set_FlushTimeout(TimeSpan value);
    public sealed virtual string get_AuthenticationRegion();
    public sealed virtual void set_AuthenticationRegion(string value);
    protected virtual void InitializeTarget();
    private string RenderSimpleLayout(string simpleLayout, string propertyName);
    private void AwsLogLibraryAlert(object sender, LogLibraryEventArgs e);
    protected virtual void Write(LogEventInfo logEvent);
    protected virtual void FlushAsync(AsyncContinuation asyncContinuation);
}
