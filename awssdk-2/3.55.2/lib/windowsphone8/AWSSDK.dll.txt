public class Amazon.AutoScaling.AmazonAutoScalingClient : AmazonServiceClient {
    public AmazonAutoScalingClient(AWSCredentials credentials);
    public AmazonAutoScalingClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonAutoScalingClient(AWSCredentials credentials, AmazonAutoScalingConfig clientConfig);
    public AmazonAutoScalingClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonAutoScalingClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonAutoScalingClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonAutoScalingConfig clientConfig);
    public AmazonAutoScalingClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonAutoScalingClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonAutoScalingClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonAutoScalingConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void Dispose(bool disposing);
    internal AttachInstancesResponse AttachInstances(AttachInstancesRequest request);
    public sealed virtual Task`1<AttachInstancesResponse> AttachInstancesAsync(AttachInstancesRequest request, CancellationToken cancellationToken);
    internal AttachLoadBalancersResponse AttachLoadBalancers(AttachLoadBalancersRequest request);
    public sealed virtual Task`1<AttachLoadBalancersResponse> AttachLoadBalancersAsync(AttachLoadBalancersRequest request, CancellationToken cancellationToken);
    internal CompleteLifecycleActionResponse CompleteLifecycleAction(CompleteLifecycleActionRequest request);
    public sealed virtual Task`1<CompleteLifecycleActionResponse> CompleteLifecycleActionAsync(CompleteLifecycleActionRequest request, CancellationToken cancellationToken);
    internal CreateAutoScalingGroupResponse CreateAutoScalingGroup(CreateAutoScalingGroupRequest request);
    public sealed virtual Task`1<CreateAutoScalingGroupResponse> CreateAutoScalingGroupAsync(CreateAutoScalingGroupRequest request, CancellationToken cancellationToken);
    internal CreateLaunchConfigurationResponse CreateLaunchConfiguration(CreateLaunchConfigurationRequest request);
    public sealed virtual Task`1<CreateLaunchConfigurationResponse> CreateLaunchConfigurationAsync(CreateLaunchConfigurationRequest request, CancellationToken cancellationToken);
    internal CreateOrUpdateTagsResponse CreateOrUpdateTags(CreateOrUpdateTagsRequest request);
    public sealed virtual Task`1<CreateOrUpdateTagsResponse> CreateOrUpdateTagsAsync(CreateOrUpdateTagsRequest request, CancellationToken cancellationToken);
    internal DeleteAutoScalingGroupResponse DeleteAutoScalingGroup(DeleteAutoScalingGroupRequest request);
    public sealed virtual Task`1<DeleteAutoScalingGroupResponse> DeleteAutoScalingGroupAsync(DeleteAutoScalingGroupRequest request, CancellationToken cancellationToken);
    internal DeleteLaunchConfigurationResponse DeleteLaunchConfiguration(DeleteLaunchConfigurationRequest request);
    public sealed virtual Task`1<DeleteLaunchConfigurationResponse> DeleteLaunchConfigurationAsync(DeleteLaunchConfigurationRequest request, CancellationToken cancellationToken);
    internal DeleteLifecycleHookResponse DeleteLifecycleHook(DeleteLifecycleHookRequest request);
    public sealed virtual Task`1<DeleteLifecycleHookResponse> DeleteLifecycleHookAsync(DeleteLifecycleHookRequest request, CancellationToken cancellationToken);
    internal DeleteNotificationConfigurationResponse DeleteNotificationConfiguration(DeleteNotificationConfigurationRequest request);
    public sealed virtual Task`1<DeleteNotificationConfigurationResponse> DeleteNotificationConfigurationAsync(DeleteNotificationConfigurationRequest request, CancellationToken cancellationToken);
    internal DeletePolicyResponse DeletePolicy(DeletePolicyRequest request);
    public sealed virtual Task`1<DeletePolicyResponse> DeletePolicyAsync(DeletePolicyRequest request, CancellationToken cancellationToken);
    internal DeleteScheduledActionResponse DeleteScheduledAction(DeleteScheduledActionRequest request);
    public sealed virtual Task`1<DeleteScheduledActionResponse> DeleteScheduledActionAsync(DeleteScheduledActionRequest request, CancellationToken cancellationToken);
    internal DeleteTagsResponse DeleteTags(DeleteTagsRequest request);
    public sealed virtual Task`1<DeleteTagsResponse> DeleteTagsAsync(DeleteTagsRequest request, CancellationToken cancellationToken);
    internal DescribeAccountLimitsResponse DescribeAccountLimits();
    internal DescribeAccountLimitsResponse DescribeAccountLimits(DescribeAccountLimitsRequest request);
    public sealed virtual Task`1<DescribeAccountLimitsResponse> DescribeAccountLimitsAsync(DescribeAccountLimitsRequest request, CancellationToken cancellationToken);
    internal DescribeAdjustmentTypesResponse DescribeAdjustmentTypes();
    internal DescribeAdjustmentTypesResponse DescribeAdjustmentTypes(DescribeAdjustmentTypesRequest request);
    public sealed virtual Task`1<DescribeAdjustmentTypesResponse> DescribeAdjustmentTypesAsync(DescribeAdjustmentTypesRequest request, CancellationToken cancellationToken);
    internal DescribeAutoScalingGroupsResponse DescribeAutoScalingGroups();
    internal DescribeAutoScalingGroupsResponse DescribeAutoScalingGroups(DescribeAutoScalingGroupsRequest request);
    public sealed virtual Task`1<DescribeAutoScalingGroupsResponse> DescribeAutoScalingGroupsAsync(DescribeAutoScalingGroupsRequest request, CancellationToken cancellationToken);
    internal DescribeAutoScalingInstancesResponse DescribeAutoScalingInstances();
    internal DescribeAutoScalingInstancesResponse DescribeAutoScalingInstances(DescribeAutoScalingInstancesRequest request);
    public sealed virtual Task`1<DescribeAutoScalingInstancesResponse> DescribeAutoScalingInstancesAsync(DescribeAutoScalingInstancesRequest request, CancellationToken cancellationToken);
    internal DescribeAutoScalingNotificationTypesResponse DescribeAutoScalingNotificationTypes();
    internal DescribeAutoScalingNotificationTypesResponse DescribeAutoScalingNotificationTypes(DescribeAutoScalingNotificationTypesRequest request);
    public sealed virtual Task`1<DescribeAutoScalingNotificationTypesResponse> DescribeAutoScalingNotificationTypesAsync(DescribeAutoScalingNotificationTypesRequest request, CancellationToken cancellationToken);
    internal DescribeLaunchConfigurationsResponse DescribeLaunchConfigurations();
    internal DescribeLaunchConfigurationsResponse DescribeLaunchConfigurations(DescribeLaunchConfigurationsRequest request);
    public sealed virtual Task`1<DescribeLaunchConfigurationsResponse> DescribeLaunchConfigurationsAsync(DescribeLaunchConfigurationsRequest request, CancellationToken cancellationToken);
    internal DescribeLifecycleHooksResponse DescribeLifecycleHooks(DescribeLifecycleHooksRequest request);
    public sealed virtual Task`1<DescribeLifecycleHooksResponse> DescribeLifecycleHooksAsync(DescribeLifecycleHooksRequest request, CancellationToken cancellationToken);
    internal DescribeLifecycleHookTypesResponse DescribeLifecycleHookTypes(DescribeLifecycleHookTypesRequest request);
    public sealed virtual Task`1<DescribeLifecycleHookTypesResponse> DescribeLifecycleHookTypesAsync(DescribeLifecycleHookTypesRequest request, CancellationToken cancellationToken);
    internal DescribeLoadBalancersResponse DescribeLoadBalancers(DescribeLoadBalancersRequest request);
    public sealed virtual Task`1<DescribeLoadBalancersResponse> DescribeLoadBalancersAsync(DescribeLoadBalancersRequest request, CancellationToken cancellationToken);
    internal DescribeMetricCollectionTypesResponse DescribeMetricCollectionTypes();
    internal DescribeMetricCollectionTypesResponse DescribeMetricCollectionTypes(DescribeMetricCollectionTypesRequest request);
    public sealed virtual Task`1<DescribeMetricCollectionTypesResponse> DescribeMetricCollectionTypesAsync(DescribeMetricCollectionTypesRequest request, CancellationToken cancellationToken);
    internal DescribeNotificationConfigurationsResponse DescribeNotificationConfigurations();
    internal DescribeNotificationConfigurationsResponse DescribeNotificationConfigurations(DescribeNotificationConfigurationsRequest request);
    public sealed virtual Task`1<DescribeNotificationConfigurationsResponse> DescribeNotificationConfigurationsAsync(DescribeNotificationConfigurationsRequest request, CancellationToken cancellationToken);
    internal DescribePoliciesResponse DescribePolicies();
    internal DescribePoliciesResponse DescribePolicies(DescribePoliciesRequest request);
    public sealed virtual Task`1<DescribePoliciesResponse> DescribePoliciesAsync(DescribePoliciesRequest request, CancellationToken cancellationToken);
    internal DescribeScalingActivitiesResponse DescribeScalingActivities();
    internal DescribeScalingActivitiesResponse DescribeScalingActivities(DescribeScalingActivitiesRequest request);
    public sealed virtual Task`1<DescribeScalingActivitiesResponse> DescribeScalingActivitiesAsync(DescribeScalingActivitiesRequest request, CancellationToken cancellationToken);
    internal DescribeScalingProcessTypesResponse DescribeScalingProcessTypes();
    internal DescribeScalingProcessTypesResponse DescribeScalingProcessTypes(DescribeScalingProcessTypesRequest request);
    public sealed virtual Task`1<DescribeScalingProcessTypesResponse> DescribeScalingProcessTypesAsync(DescribeScalingProcessTypesRequest request, CancellationToken cancellationToken);
    internal DescribeScheduledActionsResponse DescribeScheduledActions();
    internal DescribeScheduledActionsResponse DescribeScheduledActions(DescribeScheduledActionsRequest request);
    public sealed virtual Task`1<DescribeScheduledActionsResponse> DescribeScheduledActionsAsync(DescribeScheduledActionsRequest request, CancellationToken cancellationToken);
    internal DescribeTagsResponse DescribeTags();
    internal DescribeTagsResponse DescribeTags(DescribeTagsRequest request);
    public sealed virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    internal DescribeTerminationPolicyTypesResponse DescribeTerminationPolicyTypes();
    internal DescribeTerminationPolicyTypesResponse DescribeTerminationPolicyTypes(DescribeTerminationPolicyTypesRequest request);
    public sealed virtual Task`1<DescribeTerminationPolicyTypesResponse> DescribeTerminationPolicyTypesAsync(DescribeTerminationPolicyTypesRequest request, CancellationToken cancellationToken);
    internal DetachInstancesResponse DetachInstances(DetachInstancesRequest request);
    public sealed virtual Task`1<DetachInstancesResponse> DetachInstancesAsync(DetachInstancesRequest request, CancellationToken cancellationToken);
    internal DetachLoadBalancersResponse DetachLoadBalancers(DetachLoadBalancersRequest request);
    public sealed virtual Task`1<DetachLoadBalancersResponse> DetachLoadBalancersAsync(DetachLoadBalancersRequest request, CancellationToken cancellationToken);
    internal DisableMetricsCollectionResponse DisableMetricsCollection(DisableMetricsCollectionRequest request);
    public sealed virtual Task`1<DisableMetricsCollectionResponse> DisableMetricsCollectionAsync(DisableMetricsCollectionRequest request, CancellationToken cancellationToken);
    internal EnableMetricsCollectionResponse EnableMetricsCollection(EnableMetricsCollectionRequest request);
    public sealed virtual Task`1<EnableMetricsCollectionResponse> EnableMetricsCollectionAsync(EnableMetricsCollectionRequest request, CancellationToken cancellationToken);
    internal EnterStandbyResponse EnterStandby(EnterStandbyRequest request);
    public sealed virtual Task`1<EnterStandbyResponse> EnterStandbyAsync(EnterStandbyRequest request, CancellationToken cancellationToken);
    internal ExecutePolicyResponse ExecutePolicy(ExecutePolicyRequest request);
    public sealed virtual Task`1<ExecutePolicyResponse> ExecutePolicyAsync(ExecutePolicyRequest request, CancellationToken cancellationToken);
    internal ExitStandbyResponse ExitStandby(ExitStandbyRequest request);
    public sealed virtual Task`1<ExitStandbyResponse> ExitStandbyAsync(ExitStandbyRequest request, CancellationToken cancellationToken);
    internal PutLifecycleHookResponse PutLifecycleHook(PutLifecycleHookRequest request);
    public sealed virtual Task`1<PutLifecycleHookResponse> PutLifecycleHookAsync(PutLifecycleHookRequest request, CancellationToken cancellationToken);
    internal PutNotificationConfigurationResponse PutNotificationConfiguration(PutNotificationConfigurationRequest request);
    public sealed virtual Task`1<PutNotificationConfigurationResponse> PutNotificationConfigurationAsync(PutNotificationConfigurationRequest request, CancellationToken cancellationToken);
    internal PutScalingPolicyResponse PutScalingPolicy(PutScalingPolicyRequest request);
    public sealed virtual Task`1<PutScalingPolicyResponse> PutScalingPolicyAsync(PutScalingPolicyRequest request, CancellationToken cancellationToken);
    internal PutScheduledUpdateGroupActionResponse PutScheduledUpdateGroupAction(PutScheduledUpdateGroupActionRequest request);
    public sealed virtual Task`1<PutScheduledUpdateGroupActionResponse> PutScheduledUpdateGroupActionAsync(PutScheduledUpdateGroupActionRequest request, CancellationToken cancellationToken);
    internal RecordLifecycleActionHeartbeatResponse RecordLifecycleActionHeartbeat(RecordLifecycleActionHeartbeatRequest request);
    public sealed virtual Task`1<RecordLifecycleActionHeartbeatResponse> RecordLifecycleActionHeartbeatAsync(RecordLifecycleActionHeartbeatRequest request, CancellationToken cancellationToken);
    internal ResumeProcessesResponse ResumeProcesses(ResumeProcessesRequest request);
    public sealed virtual Task`1<ResumeProcessesResponse> ResumeProcessesAsync(ResumeProcessesRequest request, CancellationToken cancellationToken);
    internal SetDesiredCapacityResponse SetDesiredCapacity(SetDesiredCapacityRequest request);
    public sealed virtual Task`1<SetDesiredCapacityResponse> SetDesiredCapacityAsync(SetDesiredCapacityRequest request, CancellationToken cancellationToken);
    internal SetInstanceHealthResponse SetInstanceHealth(SetInstanceHealthRequest request);
    public sealed virtual Task`1<SetInstanceHealthResponse> SetInstanceHealthAsync(SetInstanceHealthRequest request, CancellationToken cancellationToken);
    internal SetInstanceProtectionResponse SetInstanceProtection(SetInstanceProtectionRequest request);
    public sealed virtual Task`1<SetInstanceProtectionResponse> SetInstanceProtectionAsync(SetInstanceProtectionRequest request, CancellationToken cancellationToken);
    internal SuspendProcessesResponse SuspendProcesses(SuspendProcessesRequest request);
    public sealed virtual Task`1<SuspendProcessesResponse> SuspendProcessesAsync(SuspendProcessesRequest request, CancellationToken cancellationToken);
    internal TerminateInstanceInAutoScalingGroupResponse TerminateInstanceInAutoScalingGroup(TerminateInstanceInAutoScalingGroupRequest request);
    public sealed virtual Task`1<TerminateInstanceInAutoScalingGroupResponse> TerminateInstanceInAutoScalingGroupAsync(TerminateInstanceInAutoScalingGroupRequest request, CancellationToken cancellationToken);
    internal UpdateAutoScalingGroupResponse UpdateAutoScalingGroup(UpdateAutoScalingGroupRequest request);
    public sealed virtual Task`1<UpdateAutoScalingGroupResponse> UpdateAutoScalingGroupAsync(UpdateAutoScalingGroupRequest request, CancellationToken cancellationToken);
}
public class Amazon.AutoScaling.AmazonAutoScalingConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.AutoScaling.AmazonAutoScalingException : AmazonServiceException {
    public AmazonAutoScalingException(string message);
    public AmazonAutoScalingException(string message, Exception innerException);
    public AmazonAutoScalingException(Exception innerException);
    public AmazonAutoScalingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonAutoScalingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.AutoScaling.AmazonAutoScalingRequest : AmazonWebServiceRequest {
}
public interface Amazon.AutoScaling.IAmazonAutoScaling {
    public abstract virtual Task`1<AttachInstancesResponse> AttachInstancesAsync(AttachInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachLoadBalancersResponse> AttachLoadBalancersAsync(AttachLoadBalancersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CompleteLifecycleActionResponse> CompleteLifecycleActionAsync(CompleteLifecycleActionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAutoScalingGroupResponse> CreateAutoScalingGroupAsync(CreateAutoScalingGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLaunchConfigurationResponse> CreateLaunchConfigurationAsync(CreateLaunchConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateOrUpdateTagsResponse> CreateOrUpdateTagsAsync(CreateOrUpdateTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAutoScalingGroupResponse> DeleteAutoScalingGroupAsync(DeleteAutoScalingGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLaunchConfigurationResponse> DeleteLaunchConfigurationAsync(DeleteLaunchConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLifecycleHookResponse> DeleteLifecycleHookAsync(DeleteLifecycleHookRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNotificationConfigurationResponse> DeleteNotificationConfigurationAsync(DeleteNotificationConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePolicyResponse> DeletePolicyAsync(DeletePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteScheduledActionResponse> DeleteScheduledActionAsync(DeleteScheduledActionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTagsResponse> DeleteTagsAsync(DeleteTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAccountLimitsResponse> DescribeAccountLimitsAsync(DescribeAccountLimitsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAdjustmentTypesResponse> DescribeAdjustmentTypesAsync(DescribeAdjustmentTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAutoScalingGroupsResponse> DescribeAutoScalingGroupsAsync(DescribeAutoScalingGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAutoScalingInstancesResponse> DescribeAutoScalingInstancesAsync(DescribeAutoScalingInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAutoScalingNotificationTypesResponse> DescribeAutoScalingNotificationTypesAsync(DescribeAutoScalingNotificationTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLaunchConfigurationsResponse> DescribeLaunchConfigurationsAsync(DescribeLaunchConfigurationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLifecycleHooksResponse> DescribeLifecycleHooksAsync(DescribeLifecycleHooksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLifecycleHookTypesResponse> DescribeLifecycleHookTypesAsync(DescribeLifecycleHookTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLoadBalancersResponse> DescribeLoadBalancersAsync(DescribeLoadBalancersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMetricCollectionTypesResponse> DescribeMetricCollectionTypesAsync(DescribeMetricCollectionTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNotificationConfigurationsResponse> DescribeNotificationConfigurationsAsync(DescribeNotificationConfigurationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePoliciesResponse> DescribePoliciesAsync(DescribePoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeScalingActivitiesResponse> DescribeScalingActivitiesAsync(DescribeScalingActivitiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeScalingProcessTypesResponse> DescribeScalingProcessTypesAsync(DescribeScalingProcessTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeScheduledActionsResponse> DescribeScheduledActionsAsync(DescribeScheduledActionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTerminationPolicyTypesResponse> DescribeTerminationPolicyTypesAsync(DescribeTerminationPolicyTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachInstancesResponse> DetachInstancesAsync(DetachInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachLoadBalancersResponse> DetachLoadBalancersAsync(DetachLoadBalancersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableMetricsCollectionResponse> DisableMetricsCollectionAsync(DisableMetricsCollectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableMetricsCollectionResponse> EnableMetricsCollectionAsync(EnableMetricsCollectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnterStandbyResponse> EnterStandbyAsync(EnterStandbyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExecutePolicyResponse> ExecutePolicyAsync(ExecutePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExitStandbyResponse> ExitStandbyAsync(ExitStandbyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutLifecycleHookResponse> PutLifecycleHookAsync(PutLifecycleHookRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutNotificationConfigurationResponse> PutNotificationConfigurationAsync(PutNotificationConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutScalingPolicyResponse> PutScalingPolicyAsync(PutScalingPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutScheduledUpdateGroupActionResponse> PutScheduledUpdateGroupActionAsync(PutScheduledUpdateGroupActionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RecordLifecycleActionHeartbeatResponse> RecordLifecycleActionHeartbeatAsync(RecordLifecycleActionHeartbeatRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResumeProcessesResponse> ResumeProcessesAsync(ResumeProcessesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetDesiredCapacityResponse> SetDesiredCapacityAsync(SetDesiredCapacityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetInstanceHealthResponse> SetInstanceHealthAsync(SetInstanceHealthRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetInstanceProtectionResponse> SetInstanceProtectionAsync(SetInstanceProtectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SuspendProcessesResponse> SuspendProcessesAsync(SuspendProcessesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TerminateInstanceInAutoScalingGroupResponse> TerminateInstanceInAutoScalingGroupAsync(TerminateInstanceInAutoScalingGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateAutoScalingGroupResponse> UpdateAutoScalingGroupAsync(UpdateAutoScalingGroupRequest request, CancellationToken cancellationToken);
}
public class Amazon.AutoScaling.LifecycleState : ConstantClass {
    public static LifecycleState Detached;
    public static LifecycleState Detaching;
    public static LifecycleState EnteringStandby;
    public static LifecycleState InService;
    public static LifecycleState Pending;
    public static LifecycleState PendingProceed;
    public static LifecycleState PendingWait;
    public static LifecycleState Quarantined;
    public static LifecycleState Standby;
    public static LifecycleState Terminated;
    public static LifecycleState Terminating;
    public static LifecycleState TerminatingProceed;
    public static LifecycleState TerminatingWait;
    public LifecycleState(string value);
    private static LifecycleState();
    public static LifecycleState FindValue(string value);
    public static LifecycleState op_Implicit(string value);
}
public class Amazon.AutoScaling.Model.Activity : object {
    private string _activityId;
    private string _autoScalingGroupName;
    private string _cause;
    private string _description;
    private string _details;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<int> _progress;
    private Nullable`1<DateTime> _startTime;
    private ScalingActivityStatusCode _statusCode;
    private string _statusMessage;
    public string ActivityId { get; public set; }
    public string AutoScalingGroupName { get; public set; }
    public string Cause { get; public set; }
    public string Description { get; public set; }
    public string Details { get; public set; }
    public DateTime EndTime { get; public set; }
    public int Progress { get; public set; }
    public DateTime StartTime { get; public set; }
    public ScalingActivityStatusCode StatusCode { get; public set; }
    public string StatusMessage { get; public set; }
    public string get_ActivityId();
    public void set_ActivityId(string value);
    internal bool IsSetActivityId();
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_Cause();
    public void set_Cause(string value);
    internal bool IsSetCause();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Details();
    public void set_Details(string value);
    internal bool IsSetDetails();
    public DateTime get_EndTime();
    public void set_EndTime(DateTime value);
    internal bool IsSetEndTime();
    public int get_Progress();
    public void set_Progress(int value);
    internal bool IsSetProgress();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
    public ScalingActivityStatusCode get_StatusCode();
    public void set_StatusCode(ScalingActivityStatusCode value);
    internal bool IsSetStatusCode();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.AutoScaling.Model.AdjustmentType : object {
    private string _type;
    public string Type { get; public set; }
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.AutoScaling.Model.Alarm : object {
    private string _alarmARN;
    private string _alarmName;
    public string AlarmARN { get; public set; }
    public string AlarmName { get; public set; }
    public string get_AlarmARN();
    public void set_AlarmARN(string value);
    internal bool IsSetAlarmARN();
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
}
public class Amazon.AutoScaling.Model.AlreadyExistsException : AmazonAutoScalingException {
    public AlreadyExistsException(string message);
    public AlreadyExistsException(string message, Exception innerException);
    public AlreadyExistsException(Exception innerException);
    public AlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public AlreadyExistsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.AutoScaling.Model.AttachInstancesRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _instanceIds;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.AutoScaling.Model.AttachInstancesResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.AttachLoadBalancersRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _loadBalancerNames;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> LoadBalancerNames { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_LoadBalancerNames();
    public void set_LoadBalancerNames(List`1<string> value);
    internal bool IsSetLoadBalancerNames();
}
public class Amazon.AutoScaling.Model.AttachLoadBalancersResponse : AttachLoadBalancersResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AttachLoadBalancersResult class are now available on the AttachLoadBalancersResponse class. You should use the properties on AttachLoadBalancersResponse instead of accessing them through AttachLoadBalancersResult.")]
public AttachLoadBalancersResult AttachLoadBalancersResult { get; }
    public AttachLoadBalancersResult get_AttachLoadBalancersResult();
}
public class Amazon.AutoScaling.Model.AttachLoadBalancersResult : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.AutoScalingGroup : object {
    private string _autoScalingGroupARN;
    private string _autoScalingGroupName;
    private List`1<string> _availabilityZones;
    private Nullable`1<DateTime> _createdTime;
    private Nullable`1<int> _defaultCooldown;
    private Nullable`1<int> _desiredCapacity;
    private List`1<EnabledMetric> _enabledMetrics;
    private Nullable`1<int> _healthCheckGracePeriod;
    private string _healthCheckType;
    private List`1<Instance> _instances;
    private string _launchConfigurationName;
    private List`1<string> _loadBalancerNames;
    private Nullable`1<int> _maxSize;
    private Nullable`1<int> _minSize;
    private Nullable`1<bool> _newInstancesProtectedFromScaleIn;
    private string _placementGroup;
    private string _status;
    private List`1<SuspendedProcess> _suspendedProcesses;
    private List`1<TagDescription> _tags;
    private List`1<string> _terminationPolicies;
    private string _vpcZoneIdentifier;
    public string AutoScalingGroupARN { get; public set; }
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> AvailabilityZones { get; public set; }
    public DateTime CreatedTime { get; public set; }
    public int DefaultCooldown { get; public set; }
    public int DesiredCapacity { get; public set; }
    public List`1<EnabledMetric> EnabledMetrics { get; public set; }
    public int HealthCheckGracePeriod { get; public set; }
    public string HealthCheckType { get; public set; }
    public List`1<Instance> Instances { get; public set; }
    public string LaunchConfigurationName { get; public set; }
    public List`1<string> LoadBalancerNames { get; public set; }
    public int MaxSize { get; public set; }
    public int MinSize { get; public set; }
    public bool NewInstancesProtectedFromScaleIn { get; public set; }
    public string PlacementGroup { get; public set; }
    public string Status { get; public set; }
    public List`1<SuspendedProcess> SuspendedProcesses { get; public set; }
    public List`1<TagDescription> Tags { get; public set; }
    public List`1<string> TerminationPolicies { get; public set; }
    public string VPCZoneIdentifier { get; public set; }
    public string get_AutoScalingGroupARN();
    public void set_AutoScalingGroupARN(string value);
    internal bool IsSetAutoScalingGroupARN();
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public DateTime get_CreatedTime();
    public void set_CreatedTime(DateTime value);
    internal bool IsSetCreatedTime();
    public int get_DefaultCooldown();
    public void set_DefaultCooldown(int value);
    internal bool IsSetDefaultCooldown();
    public int get_DesiredCapacity();
    public void set_DesiredCapacity(int value);
    internal bool IsSetDesiredCapacity();
    public List`1<EnabledMetric> get_EnabledMetrics();
    public void set_EnabledMetrics(List`1<EnabledMetric> value);
    internal bool IsSetEnabledMetrics();
    public int get_HealthCheckGracePeriod();
    public void set_HealthCheckGracePeriod(int value);
    internal bool IsSetHealthCheckGracePeriod();
    public string get_HealthCheckType();
    public void set_HealthCheckType(string value);
    internal bool IsSetHealthCheckType();
    public List`1<Instance> get_Instances();
    public void set_Instances(List`1<Instance> value);
    internal bool IsSetInstances();
    public string get_LaunchConfigurationName();
    public void set_LaunchConfigurationName(string value);
    internal bool IsSetLaunchConfigurationName();
    public List`1<string> get_LoadBalancerNames();
    public void set_LoadBalancerNames(List`1<string> value);
    internal bool IsSetLoadBalancerNames();
    public int get_MaxSize();
    public void set_MaxSize(int value);
    internal bool IsSetMaxSize();
    public int get_MinSize();
    public void set_MinSize(int value);
    internal bool IsSetMinSize();
    public bool get_NewInstancesProtectedFromScaleIn();
    public void set_NewInstancesProtectedFromScaleIn(bool value);
    internal bool IsSetNewInstancesProtectedFromScaleIn();
    public string get_PlacementGroup();
    public void set_PlacementGroup(string value);
    internal bool IsSetPlacementGroup();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public List`1<SuspendedProcess> get_SuspendedProcesses();
    public void set_SuspendedProcesses(List`1<SuspendedProcess> value);
    internal bool IsSetSuspendedProcesses();
    public List`1<TagDescription> get_Tags();
    public void set_Tags(List`1<TagDescription> value);
    internal bool IsSetTags();
    public List`1<string> get_TerminationPolicies();
    public void set_TerminationPolicies(List`1<string> value);
    internal bool IsSetTerminationPolicies();
    public string get_VPCZoneIdentifier();
    public void set_VPCZoneIdentifier(string value);
    internal bool IsSetVPCZoneIdentifier();
}
public class Amazon.AutoScaling.Model.AutoScalingInstanceDetails : object {
    private string _autoScalingGroupName;
    private string _availabilityZone;
    private string _healthStatus;
    private string _instanceId;
    private string _launchConfigurationName;
    private string _lifecycleState;
    private Nullable`1<bool> _protectedFromScaleIn;
    public string AutoScalingGroupName { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string HealthStatus { get; public set; }
    public string InstanceId { get; public set; }
    public string LaunchConfigurationName { get; public set; }
    public string LifecycleState { get; public set; }
    public bool ProtectedFromScaleIn { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_HealthStatus();
    public void set_HealthStatus(string value);
    internal bool IsSetHealthStatus();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_LaunchConfigurationName();
    public void set_LaunchConfigurationName(string value);
    internal bool IsSetLaunchConfigurationName();
    public string get_LifecycleState();
    public void set_LifecycleState(string value);
    internal bool IsSetLifecycleState();
    public bool get_ProtectedFromScaleIn();
    public void set_ProtectedFromScaleIn(bool value);
    internal bool IsSetProtectedFromScaleIn();
}
public class Amazon.AutoScaling.Model.BlockDeviceMapping : object {
    private string _deviceName;
    private Ebs _ebs;
    private Nullable`1<bool> _noDevice;
    private string _virtualName;
    public string DeviceName { get; public set; }
    public Ebs Ebs { get; public set; }
    public bool NoDevice { get; public set; }
    public string VirtualName { get; public set; }
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public Ebs get_Ebs();
    public void set_Ebs(Ebs value);
    internal bool IsSetEbs();
    public bool get_NoDevice();
    public void set_NoDevice(bool value);
    internal bool IsSetNoDevice();
    public string get_VirtualName();
    public void set_VirtualName(string value);
    internal bool IsSetVirtualName();
}
public class Amazon.AutoScaling.Model.CompleteLifecycleActionRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private string _instanceId;
    private string _lifecycleActionResult;
    private string _lifecycleActionToken;
    private string _lifecycleHookName;
    public string AutoScalingGroupName { get; public set; }
    public string InstanceId { get; public set; }
    public string LifecycleActionResult { get; public set; }
    public string LifecycleActionToken { get; public set; }
    public string LifecycleHookName { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_LifecycleActionResult();
    public void set_LifecycleActionResult(string value);
    internal bool IsSetLifecycleActionResult();
    public string get_LifecycleActionToken();
    public void set_LifecycleActionToken(string value);
    internal bool IsSetLifecycleActionToken();
    public string get_LifecycleHookName();
    public void set_LifecycleHookName(string value);
    internal bool IsSetLifecycleHookName();
}
public class Amazon.AutoScaling.Model.CompleteLifecycleActionResponse : CompleteLifecycleActionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CompleteLifecycleActionResult class are now available on the CompleteLifecycleActionResponse class. You should use the properties on CompleteLifecycleActionResponse instead of accessing them through CompleteLifecycleActionResult.")]
public CompleteLifecycleActionResult CompleteLifecycleActionResult { get; }
    public CompleteLifecycleActionResult get_CompleteLifecycleActionResult();
}
public class Amazon.AutoScaling.Model.CompleteLifecycleActionResult : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _availabilityZones;
    private Nullable`1<int> _defaultCooldown;
    private Nullable`1<int> _desiredCapacity;
    private Nullable`1<int> _healthCheckGracePeriod;
    private string _healthCheckType;
    private string _instanceId;
    private string _launchConfigurationName;
    private List`1<string> _loadBalancerNames;
    private Nullable`1<int> _maxSize;
    private Nullable`1<int> _minSize;
    private Nullable`1<bool> _newInstancesProtectedFromScaleIn;
    private string _placementGroup;
    private List`1<Tag> _tags;
    private List`1<string> _terminationPolicies;
    private string _vpcZoneIdentifier;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> AvailabilityZones { get; public set; }
    public int DefaultCooldown { get; public set; }
    public int DesiredCapacity { get; public set; }
    public int HealthCheckGracePeriod { get; public set; }
    public string HealthCheckType { get; public set; }
    public string InstanceId { get; public set; }
    public string LaunchConfigurationName { get; public set; }
    public List`1<string> LoadBalancerNames { get; public set; }
    public int MaxSize { get; public set; }
    public int MinSize { get; public set; }
    public bool NewInstancesProtectedFromScaleIn { get; public set; }
    public string PlacementGroup { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<string> TerminationPolicies { get; public set; }
    public string VPCZoneIdentifier { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public int get_DefaultCooldown();
    public void set_DefaultCooldown(int value);
    internal bool IsSetDefaultCooldown();
    public int get_DesiredCapacity();
    public void set_DesiredCapacity(int value);
    internal bool IsSetDesiredCapacity();
    public int get_HealthCheckGracePeriod();
    public void set_HealthCheckGracePeriod(int value);
    internal bool IsSetHealthCheckGracePeriod();
    public string get_HealthCheckType();
    public void set_HealthCheckType(string value);
    internal bool IsSetHealthCheckType();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_LaunchConfigurationName();
    public void set_LaunchConfigurationName(string value);
    internal bool IsSetLaunchConfigurationName();
    public List`1<string> get_LoadBalancerNames();
    public void set_LoadBalancerNames(List`1<string> value);
    internal bool IsSetLoadBalancerNames();
    public int get_MaxSize();
    public void set_MaxSize(int value);
    internal bool IsSetMaxSize();
    public int get_MinSize();
    public void set_MinSize(int value);
    internal bool IsSetMinSize();
    public bool get_NewInstancesProtectedFromScaleIn();
    public void set_NewInstancesProtectedFromScaleIn(bool value);
    internal bool IsSetNewInstancesProtectedFromScaleIn();
    public string get_PlacementGroup();
    public void set_PlacementGroup(string value);
    internal bool IsSetPlacementGroup();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<string> get_TerminationPolicies();
    public void set_TerminationPolicies(List`1<string> value);
    internal bool IsSetTerminationPolicies();
    public string get_VPCZoneIdentifier();
    public void set_VPCZoneIdentifier(string value);
    internal bool IsSetVPCZoneIdentifier();
}
public class Amazon.AutoScaling.Model.CreateAutoScalingGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest : AmazonAutoScalingRequest {
    private Nullable`1<bool> _associatePublicIpAddress;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private string _classicLinkVPCId;
    private List`1<string> _classicLinkVPCSecurityGroups;
    private Nullable`1<bool> _ebsOptimized;
    private string _iamInstanceProfile;
    private string _imageId;
    private string _instanceId;
    private InstanceMonitoring _instanceMonitoring;
    private string _instanceType;
    private string _kernelId;
    private string _keyName;
    private string _launchConfigurationName;
    private string _placementTenancy;
    private string _ramdiskId;
    private List`1<string> _securityGroups;
    private string _spotPrice;
    private string _userData;
    public bool AssociatePublicIpAddress { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public string ClassicLinkVPCId { get; public set; }
    public List`1<string> ClassicLinkVPCSecurityGroups { get; public set; }
    public bool EbsOptimized { get; public set; }
    public string IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public string InstanceId { get; public set; }
    public InstanceMonitoring InstanceMonitoring { get; public set; }
    public string InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public string LaunchConfigurationName { get; public set; }
    public string PlacementTenancy { get; public set; }
    public string RamdiskId { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public string SpotPrice { get; public set; }
    public string UserData { get; public set; }
    public bool get_AssociatePublicIpAddress();
    public void set_AssociatePublicIpAddress(bool value);
    internal bool IsSetAssociatePublicIpAddress();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public string get_ClassicLinkVPCId();
    public void set_ClassicLinkVPCId(string value);
    internal bool IsSetClassicLinkVPCId();
    public List`1<string> get_ClassicLinkVPCSecurityGroups();
    public void set_ClassicLinkVPCSecurityGroups(List`1<string> value);
    internal bool IsSetClassicLinkVPCSecurityGroups();
    public bool get_EbsOptimized();
    public void set_EbsOptimized(bool value);
    internal bool IsSetEbsOptimized();
    public string get_IamInstanceProfile();
    public void set_IamInstanceProfile(string value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public InstanceMonitoring get_InstanceMonitoring();
    public void set_InstanceMonitoring(InstanceMonitoring value);
    internal bool IsSetInstanceMonitoring();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public string get_LaunchConfigurationName();
    public void set_LaunchConfigurationName(string value);
    internal bool IsSetLaunchConfigurationName();
    public string get_PlacementTenancy();
    public void set_PlacementTenancy(string value);
    internal bool IsSetPlacementTenancy();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.AutoScaling.Model.CreateLaunchConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.CreateOrUpdateTagsRequest : AmazonAutoScalingRequest {
    private List`1<Tag> _tags;
    public List`1<Tag> Tags { get; public set; }
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.AutoScaling.Model.CreateOrUpdateTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.DeleteAutoScalingGroupRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private Nullable`1<bool> _forceDelete;
    public string AutoScalingGroupName { get; public set; }
    public bool ForceDelete { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public bool get_ForceDelete();
    public void set_ForceDelete(bool value);
    internal bool IsSetForceDelete();
}
public class Amazon.AutoScaling.Model.DeleteAutoScalingGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.DeleteLaunchConfigurationRequest : AmazonAutoScalingRequest {
    private string _launchConfigurationName;
    public string LaunchConfigurationName { get; public set; }
    public string get_LaunchConfigurationName();
    public void set_LaunchConfigurationName(string value);
    internal bool IsSetLaunchConfigurationName();
}
public class Amazon.AutoScaling.Model.DeleteLaunchConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.DeleteLifecycleHookRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private string _lifecycleHookName;
    public string AutoScalingGroupName { get; public set; }
    public string LifecycleHookName { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_LifecycleHookName();
    public void set_LifecycleHookName(string value);
    internal bool IsSetLifecycleHookName();
}
public class Amazon.AutoScaling.Model.DeleteLifecycleHookResponse : DeleteLifecycleHookResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteLifecycleHookResult class are now available on the DeleteLifecycleHookResponse class. You should use the properties on DeleteLifecycleHookResponse instead of accessing them through DeleteLifecycleHookResult.")]
public DeleteLifecycleHookResult DeleteLifecycleHookResult { get; }
    public DeleteLifecycleHookResult get_DeleteLifecycleHookResult();
}
public class Amazon.AutoScaling.Model.DeleteLifecycleHookResult : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.DeleteNotificationConfigurationRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private string _topicARN;
    public string AutoScalingGroupName { get; public set; }
    public string TopicARN { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_TopicARN();
    public void set_TopicARN(string value);
    internal bool IsSetTopicARN();
}
public class Amazon.AutoScaling.Model.DeleteNotificationConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.DeletePolicyRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private string _policyName;
    public string AutoScalingGroupName { get; public set; }
    public string PolicyName { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.AutoScaling.Model.DeletePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.DeleteScheduledActionRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private string _scheduledActionName;
    public string AutoScalingGroupName { get; public set; }
    public string ScheduledActionName { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_ScheduledActionName();
    public void set_ScheduledActionName(string value);
    internal bool IsSetScheduledActionName();
}
public class Amazon.AutoScaling.Model.DeleteScheduledActionResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.DeleteTagsRequest : AmazonAutoScalingRequest {
    private List`1<Tag> _tags;
    public List`1<Tag> Tags { get; public set; }
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.AutoScaling.Model.DeleteTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.DescribeAccountLimitsRequest : AmazonAutoScalingRequest {
}
public class Amazon.AutoScaling.Model.DescribeAccountLimitsResponse : DescribeAccountLimitsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAccountLimitsResult class are now available on the DescribeAccountLimitsResponse class. You should use the properties on DescribeAccountLimitsResponse instead of accessing them through DescribeAccountLimitsResult.")]
public DescribeAccountLimitsResult DescribeAccountLimitsResult { get; }
    public DescribeAccountLimitsResult get_DescribeAccountLimitsResult();
}
public class Amazon.AutoScaling.Model.DescribeAccountLimitsResult : AmazonWebServiceResponse {
    private Nullable`1<int> _maxNumberOfAutoScalingGroups;
    private Nullable`1<int> _maxNumberOfLaunchConfigurations;
    private Nullable`1<int> _numberOfAutoScalingGroups;
    private Nullable`1<int> _numberOfLaunchConfigurations;
    public int MaxNumberOfAutoScalingGroups { get; public set; }
    public int MaxNumberOfLaunchConfigurations { get; public set; }
    public int NumberOfAutoScalingGroups { get; public set; }
    public int NumberOfLaunchConfigurations { get; public set; }
    public int get_MaxNumberOfAutoScalingGroups();
    public void set_MaxNumberOfAutoScalingGroups(int value);
    internal bool IsSetMaxNumberOfAutoScalingGroups();
    public int get_MaxNumberOfLaunchConfigurations();
    public void set_MaxNumberOfLaunchConfigurations(int value);
    internal bool IsSetMaxNumberOfLaunchConfigurations();
    public int get_NumberOfAutoScalingGroups();
    public void set_NumberOfAutoScalingGroups(int value);
    internal bool IsSetNumberOfAutoScalingGroups();
    public int get_NumberOfLaunchConfigurations();
    public void set_NumberOfLaunchConfigurations(int value);
    internal bool IsSetNumberOfLaunchConfigurations();
}
public class Amazon.AutoScaling.Model.DescribeAdjustmentTypesRequest : AmazonAutoScalingRequest {
}
public class Amazon.AutoScaling.Model.DescribeAdjustmentTypesResponse : DescribeAdjustmentTypesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAdjustmentTypesResult class are now available on the DescribeAdjustmentTypesResponse class. You should use the properties on DescribeAdjustmentTypesResponse instead of accessing them through DescribeAdjustmentTypesResult.")]
public DescribeAdjustmentTypesResult DescribeAdjustmentTypesResult { get; }
    public DescribeAdjustmentTypesResult get_DescribeAdjustmentTypesResult();
}
public class Amazon.AutoScaling.Model.DescribeAdjustmentTypesResult : AmazonWebServiceResponse {
    private List`1<AdjustmentType> _adjustmentTypes;
    public List`1<AdjustmentType> AdjustmentTypes { get; public set; }
    public List`1<AdjustmentType> get_AdjustmentTypes();
    public void set_AdjustmentTypes(List`1<AdjustmentType> value);
    internal bool IsSetAdjustmentTypes();
}
public class Amazon.AutoScaling.Model.DescribeAutoScalingGroupsRequest : AmazonAutoScalingRequest {
    private List`1<string> _autoScalingGroupNames;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<string> AutoScalingGroupNames { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_AutoScalingGroupNames();
    public void set_AutoScalingGroupNames(List`1<string> value);
    internal bool IsSetAutoScalingGroupNames();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResponse : DescribeAutoScalingGroupsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAutoScalingGroupsResult class are now available on the DescribeAutoScalingGroupsResponse class. You should use the properties on DescribeAutoScalingGroupsResponse instead of accessing them through DescribeAutoScalingGroupsResult.")]
public DescribeAutoScalingGroupsResult DescribeAutoScalingGroupsResult { get; }
    public DescribeAutoScalingGroupsResult get_DescribeAutoScalingGroupsResult();
}
public class Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResult : AmazonWebServiceResponse {
    private List`1<AutoScalingGroup> _autoScalingGroups;
    private string _nextToken;
    public List`1<AutoScalingGroup> AutoScalingGroups { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AutoScalingGroup> get_AutoScalingGroups();
    public void set_AutoScalingGroups(List`1<AutoScalingGroup> value);
    internal bool IsSetAutoScalingGroups();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeAutoScalingInstancesRequest : AmazonAutoScalingRequest {
    private List`1<string> _instanceIds;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<string> InstanceIds { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResponse : DescribeAutoScalingInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAutoScalingInstancesResult class are now available on the DescribeAutoScalingInstancesResponse class. You should use the properties on DescribeAutoScalingInstancesResponse instead of accessing them through DescribeAutoScalingInstancesResult.")]
public DescribeAutoScalingInstancesResult DescribeAutoScalingInstancesResult { get; }
    public DescribeAutoScalingInstancesResult get_DescribeAutoScalingInstancesResult();
}
public class Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResult : AmazonWebServiceResponse {
    private List`1<AutoScalingInstanceDetails> _autoScalingInstances;
    private string _nextToken;
    public List`1<AutoScalingInstanceDetails> AutoScalingInstances { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AutoScalingInstanceDetails> get_AutoScalingInstances();
    public void set_AutoScalingInstances(List`1<AutoScalingInstanceDetails> value);
    internal bool IsSetAutoScalingInstances();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesRequest : AmazonAutoScalingRequest {
}
public class Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesResponse : DescribeAutoScalingNotificationTypesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAutoScalingNotificationTypesResult class are now available on the DescribeAutoScalingNotificationTypesResponse class. You should use the properties on DescribeAutoScalingNotificationTypesResponse instead of accessing them through DescribeAutoScalingNotificationTypesResult.")]
public DescribeAutoScalingNotificationTypesResult DescribeAutoScalingNotificationTypesResult { get; }
    public DescribeAutoScalingNotificationTypesResult get_DescribeAutoScalingNotificationTypesResult();
}
public class Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesResult : AmazonWebServiceResponse {
    private List`1<string> _autoScalingNotificationTypes;
    public List`1<string> AutoScalingNotificationTypes { get; public set; }
    public List`1<string> get_AutoScalingNotificationTypes();
    public void set_AutoScalingNotificationTypes(List`1<string> value);
    internal bool IsSetAutoScalingNotificationTypes();
}
public class Amazon.AutoScaling.Model.DescribeLaunchConfigurationsRequest : AmazonAutoScalingRequest {
    private List`1<string> _launchConfigurationNames;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<string> LaunchConfigurationNames { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_LaunchConfigurationNames();
    public void set_LaunchConfigurationNames(List`1<string> value);
    internal bool IsSetLaunchConfigurationNames();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResponse : DescribeLaunchConfigurationsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeLaunchConfigurationsResult class are now available on the DescribeLaunchConfigurationsResponse class. You should use the properties on DescribeLaunchConfigurationsResponse instead of accessing them through DescribeLaunchConfigurationsResult.")]
public DescribeLaunchConfigurationsResult DescribeLaunchConfigurationsResult { get; }
    public DescribeLaunchConfigurationsResult get_DescribeLaunchConfigurationsResult();
}
public class Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResult : AmazonWebServiceResponse {
    private List`1<LaunchConfiguration> _launchConfigurations;
    private string _nextToken;
    public List`1<LaunchConfiguration> LaunchConfigurations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<LaunchConfiguration> get_LaunchConfigurations();
    public void set_LaunchConfigurations(List`1<LaunchConfiguration> value);
    internal bool IsSetLaunchConfigurations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeLifecycleHooksRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _lifecycleHookNames;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> LifecycleHookNames { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_LifecycleHookNames();
    public void set_LifecycleHookNames(List`1<string> value);
    internal bool IsSetLifecycleHookNames();
}
public class Amazon.AutoScaling.Model.DescribeLifecycleHooksResponse : DescribeLifecycleHooksResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeLifecycleHooksResult class are now available on the DescribeLifecycleHooksResponse class. You should use the properties on DescribeLifecycleHooksResponse instead of accessing them through DescribeLifecycleHooksResult.")]
public DescribeLifecycleHooksResult DescribeLifecycleHooksResult { get; }
    public DescribeLifecycleHooksResult get_DescribeLifecycleHooksResult();
}
public class Amazon.AutoScaling.Model.DescribeLifecycleHooksResult : AmazonWebServiceResponse {
    private List`1<LifecycleHook> _lifecycleHooks;
    public List`1<LifecycleHook> LifecycleHooks { get; public set; }
    public List`1<LifecycleHook> get_LifecycleHooks();
    public void set_LifecycleHooks(List`1<LifecycleHook> value);
    internal bool IsSetLifecycleHooks();
}
public class Amazon.AutoScaling.Model.DescribeLifecycleHookTypesRequest : AmazonAutoScalingRequest {
}
public class Amazon.AutoScaling.Model.DescribeLifecycleHookTypesResponse : DescribeLifecycleHookTypesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeLifecycleHookTypesResult class are now available on the DescribeLifecycleHookTypesResponse class. You should use the properties on DescribeLifecycleHookTypesResponse instead of accessing them through DescribeLifecycleHookTypesResult.")]
public DescribeLifecycleHookTypesResult DescribeLifecycleHookTypesResult { get; }
    public DescribeLifecycleHookTypesResult get_DescribeLifecycleHookTypesResult();
}
public class Amazon.AutoScaling.Model.DescribeLifecycleHookTypesResult : AmazonWebServiceResponse {
    private List`1<string> _lifecycleHookTypes;
    public List`1<string> LifecycleHookTypes { get; public set; }
    public List`1<string> get_LifecycleHookTypes();
    public void set_LifecycleHookTypes(List`1<string> value);
    internal bool IsSetLifecycleHookTypes();
}
public class Amazon.AutoScaling.Model.DescribeLoadBalancersRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public string AutoScalingGroupName { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeLoadBalancersResponse : DescribeLoadBalancersResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeLoadBalancersResult class are now available on the DescribeLoadBalancersResponse class. You should use the properties on DescribeLoadBalancersResponse instead of accessing them through DescribeLoadBalancersResult.")]
public DescribeLoadBalancersResult DescribeLoadBalancersResult { get; }
    public DescribeLoadBalancersResult get_DescribeLoadBalancersResult();
}
public class Amazon.AutoScaling.Model.DescribeLoadBalancersResult : AmazonWebServiceResponse {
    private List`1<LoadBalancerState> _loadBalancers;
    private string _nextToken;
    public List`1<LoadBalancerState> LoadBalancers { get; public set; }
    public string NextToken { get; public set; }
    public List`1<LoadBalancerState> get_LoadBalancers();
    public void set_LoadBalancers(List`1<LoadBalancerState> value);
    internal bool IsSetLoadBalancers();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeMetricCollectionTypesRequest : AmazonAutoScalingRequest {
}
public class Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResponse : DescribeMetricCollectionTypesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeMetricCollectionTypesResult class are now available on the DescribeMetricCollectionTypesResponse class. You should use the properties on DescribeMetricCollectionTypesResponse instead of accessing them through DescribeMetricCollectionTypesResult.")]
public DescribeMetricCollectionTypesResult DescribeMetricCollectionTypesResult { get; }
    public DescribeMetricCollectionTypesResult get_DescribeMetricCollectionTypesResult();
}
public class Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResult : AmazonWebServiceResponse {
    private List`1<MetricGranularityType> _granularities;
    private List`1<MetricCollectionType> _metrics;
    public List`1<MetricGranularityType> Granularities { get; public set; }
    public List`1<MetricCollectionType> Metrics { get; public set; }
    public List`1<MetricGranularityType> get_Granularities();
    public void set_Granularities(List`1<MetricGranularityType> value);
    internal bool IsSetGranularities();
    public List`1<MetricCollectionType> get_Metrics();
    public void set_Metrics(List`1<MetricCollectionType> value);
    internal bool IsSetMetrics();
}
public class Amazon.AutoScaling.Model.DescribeNotificationConfigurationsRequest : AmazonAutoScalingRequest {
    private List`1<string> _autoScalingGroupNames;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<string> AutoScalingGroupNames { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_AutoScalingGroupNames();
    public void set_AutoScalingGroupNames(List`1<string> value);
    internal bool IsSetAutoScalingGroupNames();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResponse : DescribeNotificationConfigurationsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeNotificationConfigurationsResult class are now available on the DescribeNotificationConfigurationsResponse class. You should use the properties on DescribeNotificationConfigurationsResponse instead of accessing them through DescribeNotificationConfigurationsResult.")]
public DescribeNotificationConfigurationsResult DescribeNotificationConfigurationsResult { get; }
    public DescribeNotificationConfigurationsResult get_DescribeNotificationConfigurationsResult();
}
public class Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<NotificationConfiguration> _notificationConfigurations;
    public string NextToken { get; public set; }
    public List`1<NotificationConfiguration> NotificationConfigurations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<NotificationConfiguration> get_NotificationConfigurations();
    public void set_NotificationConfigurations(List`1<NotificationConfiguration> value);
    internal bool IsSetNotificationConfigurations();
}
public class Amazon.AutoScaling.Model.DescribePoliciesRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    private List`1<string> _policyNames;
    private List`1<string> _policyTypes;
    public string AutoScalingGroupName { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> PolicyNames { get; public set; }
    public List`1<string> PolicyTypes { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
    public List`1<string> get_PolicyTypes();
    public void set_PolicyTypes(List`1<string> value);
    internal bool IsSetPolicyTypes();
}
public class Amazon.AutoScaling.Model.DescribePoliciesResponse : DescribePoliciesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribePoliciesResult class are now available on the DescribePoliciesResponse class. You should use the properties on DescribePoliciesResponse instead of accessing them through DescribePoliciesResult.")]
public DescribePoliciesResult DescribePoliciesResult { get; }
    public DescribePoliciesResult get_DescribePoliciesResult();
}
public class Amazon.AutoScaling.Model.DescribePoliciesResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ScalingPolicy> _scalingPolicies;
    public string NextToken { get; public set; }
    public List`1<ScalingPolicy> ScalingPolicies { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ScalingPolicy> get_ScalingPolicies();
    public void set_ScalingPolicies(List`1<ScalingPolicy> value);
    internal bool IsSetScalingPolicies();
}
public class Amazon.AutoScaling.Model.DescribeScalingActivitiesRequest : AmazonAutoScalingRequest {
    private List`1<string> _activityIds;
    private string _autoScalingGroupName;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<string> ActivityIds { get; public set; }
    public string AutoScalingGroupName { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_ActivityIds();
    public void set_ActivityIds(List`1<string> value);
    internal bool IsSetActivityIds();
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeScalingActivitiesResponse : DescribeScalingActivitiesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeScalingActivitiesResult class are now available on the DescribeScalingActivitiesResponse class. You should use the properties on DescribeScalingActivitiesResponse instead of accessing them through DescribeScalingActivitiesResult.")]
public DescribeScalingActivitiesResult DescribeScalingActivitiesResult { get; }
    public DescribeScalingActivitiesResult get_DescribeScalingActivitiesResult();
}
public class Amazon.AutoScaling.Model.DescribeScalingActivitiesResult : AmazonWebServiceResponse {
    private List`1<Activity> _activities;
    private string _nextToken;
    public List`1<Activity> Activities { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Activity> get_Activities();
    public void set_Activities(List`1<Activity> value);
    internal bool IsSetActivities();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeScalingProcessTypesRequest : AmazonAutoScalingRequest {
}
public class Amazon.AutoScaling.Model.DescribeScalingProcessTypesResponse : DescribeScalingProcessTypesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeScalingProcessTypesResult class are now available on the DescribeScalingProcessTypesResponse class. You should use the properties on DescribeScalingProcessTypesResponse instead of accessing them through DescribeScalingProcessTypesResult.")]
public DescribeScalingProcessTypesResult DescribeScalingProcessTypesResult { get; }
    public DescribeScalingProcessTypesResult get_DescribeScalingProcessTypesResult();
}
public class Amazon.AutoScaling.Model.DescribeScalingProcessTypesResult : AmazonWebServiceResponse {
    private List`1<ProcessType> _processes;
    public List`1<ProcessType> Processes { get; public set; }
    public List`1<ProcessType> get_Processes();
    public void set_Processes(List`1<ProcessType> value);
    internal bool IsSetProcesses();
}
public class Amazon.AutoScaling.Model.DescribeScheduledActionsRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    private List`1<string> _scheduledActionNames;
    private Nullable`1<DateTime> _startTime;
    public string AutoScalingGroupName { get; public set; }
    public DateTime EndTime { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> ScheduledActionNames { get; public set; }
    public DateTime StartTime { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public DateTime get_EndTime();
    public void set_EndTime(DateTime value);
    internal bool IsSetEndTime();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ScheduledActionNames();
    public void set_ScheduledActionNames(List`1<string> value);
    internal bool IsSetScheduledActionNames();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
}
public class Amazon.AutoScaling.Model.DescribeScheduledActionsResponse : DescribeScheduledActionsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeScheduledActionsResult class are now available on the DescribeScheduledActionsResponse class. You should use the properties on DescribeScheduledActionsResponse instead of accessing them through DescribeScheduledActionsResult.")]
public DescribeScheduledActionsResult DescribeScheduledActionsResult { get; }
    public DescribeScheduledActionsResult get_DescribeScheduledActionsResult();
}
public class Amazon.AutoScaling.Model.DescribeScheduledActionsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ScheduledUpdateGroupAction> _scheduledUpdateGroupActions;
    public string NextToken { get; public set; }
    public List`1<ScheduledUpdateGroupAction> ScheduledUpdateGroupActions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ScheduledUpdateGroupAction> get_ScheduledUpdateGroupActions();
    public void set_ScheduledUpdateGroupActions(List`1<ScheduledUpdateGroupAction> value);
    internal bool IsSetScheduledUpdateGroupActions();
}
public class Amazon.AutoScaling.Model.DescribeTagsRequest : AmazonAutoScalingRequest {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AutoScaling.Model.DescribeTagsResponse : DescribeTagsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeTagsResult class are now available on the DescribeTagsResponse class. You should use the properties on DescribeTagsResponse instead of accessing them through DescribeTagsResult.")]
public DescribeTagsResult DescribeTagsResult { get; }
    public DescribeTagsResult get_DescribeTagsResult();
}
public class Amazon.AutoScaling.Model.DescribeTagsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TagDescription> _tags;
    public string NextToken { get; public set; }
    public List`1<TagDescription> Tags { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TagDescription> get_Tags();
    public void set_Tags(List`1<TagDescription> value);
    internal bool IsSetTags();
}
public class Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesRequest : AmazonAutoScalingRequest {
}
public class Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesResponse : DescribeTerminationPolicyTypesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeTerminationPolicyTypesResult class are now available on the DescribeTerminationPolicyTypesResponse class. You should use the properties on DescribeTerminationPolicyTypesResponse instead of accessing them through DescribeTerminationPolicyTypesResult.")]
public DescribeTerminationPolicyTypesResult DescribeTerminationPolicyTypesResult { get; }
    public DescribeTerminationPolicyTypesResult get_DescribeTerminationPolicyTypesResult();
}
public class Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesResult : AmazonWebServiceResponse {
    private List`1<string> _terminationPolicyTypes;
    public List`1<string> TerminationPolicyTypes { get; public set; }
    public List`1<string> get_TerminationPolicyTypes();
    public void set_TerminationPolicyTypes(List`1<string> value);
    internal bool IsSetTerminationPolicyTypes();
}
public class Amazon.AutoScaling.Model.DetachInstancesRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _instanceIds;
    private Nullable`1<bool> _shouldDecrementDesiredCapacity;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public bool ShouldDecrementDesiredCapacity { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public bool get_ShouldDecrementDesiredCapacity();
    public void set_ShouldDecrementDesiredCapacity(bool value);
    internal bool IsSetShouldDecrementDesiredCapacity();
}
public class Amazon.AutoScaling.Model.DetachInstancesResponse : DetachInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DetachInstancesResult class are now available on the DetachInstancesResponse class. You should use the properties on DetachInstancesResponse instead of accessing them through DetachInstancesResult.")]
public DetachInstancesResult DetachInstancesResult { get; }
    public DetachInstancesResult get_DetachInstancesResult();
}
public class Amazon.AutoScaling.Model.DetachInstancesResult : AmazonWebServiceResponse {
    private List`1<Activity> _activities;
    public List`1<Activity> Activities { get; public set; }
    public List`1<Activity> get_Activities();
    public void set_Activities(List`1<Activity> value);
    internal bool IsSetActivities();
}
public class Amazon.AutoScaling.Model.DetachLoadBalancersRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _loadBalancerNames;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> LoadBalancerNames { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_LoadBalancerNames();
    public void set_LoadBalancerNames(List`1<string> value);
    internal bool IsSetLoadBalancerNames();
}
public class Amazon.AutoScaling.Model.DetachLoadBalancersResponse : DetachLoadBalancersResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DetachLoadBalancersResult class are now available on the DetachLoadBalancersResponse class. You should use the properties on DetachLoadBalancersResponse instead of accessing them through DetachLoadBalancersResult.")]
public DetachLoadBalancersResult DetachLoadBalancersResult { get; }
    public DetachLoadBalancersResult get_DetachLoadBalancersResult();
}
public class Amazon.AutoScaling.Model.DetachLoadBalancersResult : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.DisableMetricsCollectionRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _metrics;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> Metrics { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_Metrics();
    public void set_Metrics(List`1<string> value);
    internal bool IsSetMetrics();
}
public class Amazon.AutoScaling.Model.DisableMetricsCollectionResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.Ebs : object {
    private Nullable`1<bool> _deleteOnTermination;
    private Nullable`1<bool> _encrypted;
    private Nullable`1<int> _iops;
    private string _snapshotId;
    private Nullable`1<int> _volumeSize;
    private string _volumeType;
    public bool DeleteOnTermination { get; public set; }
    public bool Encrypted { get; public set; }
    public int Iops { get; public set; }
    public string SnapshotId { get; public set; }
    public int VolumeSize { get; public set; }
    public string VolumeType { get; public set; }
    public bool get_DeleteOnTermination();
    public void set_DeleteOnTermination(bool value);
    internal bool IsSetDeleteOnTermination();
    public bool get_Encrypted();
    public void set_Encrypted(bool value);
    internal bool IsSetEncrypted();
    public int get_Iops();
    public void set_Iops(int value);
    internal bool IsSetIops();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public int get_VolumeSize();
    public void set_VolumeSize(int value);
    internal bool IsSetVolumeSize();
    public string get_VolumeType();
    public void set_VolumeType(string value);
    internal bool IsSetVolumeType();
}
public class Amazon.AutoScaling.Model.EnabledMetric : object {
    private string _granularity;
    private string _metric;
    public string Granularity { get; public set; }
    public string Metric { get; public set; }
    public string get_Granularity();
    public void set_Granularity(string value);
    internal bool IsSetGranularity();
    public string get_Metric();
    public void set_Metric(string value);
    internal bool IsSetMetric();
}
public class Amazon.AutoScaling.Model.EnableMetricsCollectionRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private string _granularity;
    private List`1<string> _metrics;
    public string AutoScalingGroupName { get; public set; }
    public string Granularity { get; public set; }
    public List`1<string> Metrics { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_Granularity();
    public void set_Granularity(string value);
    internal bool IsSetGranularity();
    public List`1<string> get_Metrics();
    public void set_Metrics(List`1<string> value);
    internal bool IsSetMetrics();
}
public class Amazon.AutoScaling.Model.EnableMetricsCollectionResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.EnterStandbyRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _instanceIds;
    private Nullable`1<bool> _shouldDecrementDesiredCapacity;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public bool ShouldDecrementDesiredCapacity { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public bool get_ShouldDecrementDesiredCapacity();
    public void set_ShouldDecrementDesiredCapacity(bool value);
    internal bool IsSetShouldDecrementDesiredCapacity();
}
public class Amazon.AutoScaling.Model.EnterStandbyResponse : EnterStandbyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the EnterStandbyResult class are now available on the EnterStandbyResponse class. You should use the properties on EnterStandbyResponse instead of accessing them through EnterStandbyResult.")]
public EnterStandbyResult EnterStandbyResult { get; }
    public EnterStandbyResult get_EnterStandbyResult();
}
public class Amazon.AutoScaling.Model.EnterStandbyResult : AmazonWebServiceResponse {
    private List`1<Activity> _activities;
    public List`1<Activity> Activities { get; public set; }
    public List`1<Activity> get_Activities();
    public void set_Activities(List`1<Activity> value);
    internal bool IsSetActivities();
}
public class Amazon.AutoScaling.Model.ExecutePolicyRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private Nullable`1<double> _breachThreshold;
    private Nullable`1<bool> _honorCooldown;
    private Nullable`1<double> _metricValue;
    private string _policyName;
    public string AutoScalingGroupName { get; public set; }
    public double BreachThreshold { get; public set; }
    public bool HonorCooldown { get; public set; }
    public double MetricValue { get; public set; }
    public string PolicyName { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public double get_BreachThreshold();
    public void set_BreachThreshold(double value);
    internal bool IsSetBreachThreshold();
    public bool get_HonorCooldown();
    public void set_HonorCooldown(bool value);
    internal bool IsSetHonorCooldown();
    public double get_MetricValue();
    public void set_MetricValue(double value);
    internal bool IsSetMetricValue();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.AutoScaling.Model.ExecutePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.ExitStandbyRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _instanceIds;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.AutoScaling.Model.ExitStandbyResponse : ExitStandbyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ExitStandbyResult class are now available on the ExitStandbyResponse class. You should use the properties on ExitStandbyResponse instead of accessing them through ExitStandbyResult.")]
public ExitStandbyResult ExitStandbyResult { get; }
    public ExitStandbyResult get_ExitStandbyResult();
}
public class Amazon.AutoScaling.Model.ExitStandbyResult : AmazonWebServiceResponse {
    private List`1<Activity> _activities;
    public List`1<Activity> Activities { get; public set; }
    public List`1<Activity> get_Activities();
    public void set_Activities(List`1<Activity> value);
    internal bool IsSetActivities();
}
public class Amazon.AutoScaling.Model.Filter : object {
    private string _name;
    private List`1<string> _values;
    public string Name { get; public set; }
    public List`1<string> Values { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.AutoScaling.Model.Instance : object {
    private string _availabilityZone;
    private string _healthStatus;
    private string _instanceId;
    private string _launchConfigurationName;
    private LifecycleState _lifecycleState;
    private Nullable`1<bool> _protectedFromScaleIn;
    public string AvailabilityZone { get; public set; }
    public string HealthStatus { get; public set; }
    public string InstanceId { get; public set; }
    public string LaunchConfigurationName { get; public set; }
    public LifecycleState LifecycleState { get; public set; }
    public bool ProtectedFromScaleIn { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_HealthStatus();
    public void set_HealthStatus(string value);
    internal bool IsSetHealthStatus();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_LaunchConfigurationName();
    public void set_LaunchConfigurationName(string value);
    internal bool IsSetLaunchConfigurationName();
    public LifecycleState get_LifecycleState();
    public void set_LifecycleState(LifecycleState value);
    internal bool IsSetLifecycleState();
    public bool get_ProtectedFromScaleIn();
    public void set_ProtectedFromScaleIn(bool value);
    internal bool IsSetProtectedFromScaleIn();
}
public class Amazon.AutoScaling.Model.InstanceMonitoring : object {
    private Nullable`1<bool> _enabled;
    public bool Enabled { get; public set; }
    public bool get_Enabled();
    public void set_Enabled(bool value);
    internal bool IsSetEnabled();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.ActivityUnmarshaller : object {
    private static ActivityUnmarshaller _instance;
    public static ActivityUnmarshaller Instance { get; }
    private static ActivityUnmarshaller();
    public sealed virtual Activity Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Activity Unmarshall(JsonUnmarshallerContext context);
    public static ActivityUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.AdjustmentTypeUnmarshaller : object {
    private static AdjustmentTypeUnmarshaller _instance;
    public static AdjustmentTypeUnmarshaller Instance { get; }
    private static AdjustmentTypeUnmarshaller();
    public sealed virtual AdjustmentType Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AdjustmentType Unmarshall(JsonUnmarshallerContext context);
    public static AdjustmentTypeUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.AlarmUnmarshaller : object {
    private static AlarmUnmarshaller _instance;
    public static AlarmUnmarshaller Instance { get; }
    private static AlarmUnmarshaller();
    public sealed virtual Alarm Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Alarm Unmarshall(JsonUnmarshallerContext context);
    public static AlarmUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.AttachInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachInstancesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.AttachInstancesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AttachInstancesResponseUnmarshaller _instance;
    public static AttachInstancesResponseUnmarshaller Instance { get; }
    private static AttachInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AttachInstancesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachInstancesResponseUnmarshaller GetInstance();
    public static AttachInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.AttachLoadBalancersRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachLoadBalancersRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.AttachLoadBalancersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AttachLoadBalancersResponseUnmarshaller _instance;
    public static AttachLoadBalancersResponseUnmarshaller Instance { get; }
    private static AttachLoadBalancersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AttachLoadBalancersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachLoadBalancersResponseUnmarshaller GetInstance();
    public static AttachLoadBalancersResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.AutoScalingGroupUnmarshaller : object {
    private static AutoScalingGroupUnmarshaller _instance;
    public static AutoScalingGroupUnmarshaller Instance { get; }
    private static AutoScalingGroupUnmarshaller();
    public sealed virtual AutoScalingGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AutoScalingGroup Unmarshall(JsonUnmarshallerContext context);
    public static AutoScalingGroupUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.AutoScalingInstanceDetailsUnmarshaller : object {
    private static AutoScalingInstanceDetailsUnmarshaller _instance;
    public static AutoScalingInstanceDetailsUnmarshaller Instance { get; }
    private static AutoScalingInstanceDetailsUnmarshaller();
    public sealed virtual AutoScalingInstanceDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AutoScalingInstanceDetails Unmarshall(JsonUnmarshallerContext context);
    public static AutoScalingInstanceDetailsUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.BlockDeviceMappingUnmarshaller : object {
    private static BlockDeviceMappingUnmarshaller _instance;
    public static BlockDeviceMappingUnmarshaller Instance { get; }
    private static BlockDeviceMappingUnmarshaller();
    public sealed virtual BlockDeviceMapping Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BlockDeviceMapping Unmarshall(JsonUnmarshallerContext context);
    public static BlockDeviceMappingUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.CompleteLifecycleActionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CompleteLifecycleActionRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.CompleteLifecycleActionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CompleteLifecycleActionResponseUnmarshaller _instance;
    public static CompleteLifecycleActionResponseUnmarshaller Instance { get; }
    private static CompleteLifecycleActionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CompleteLifecycleActionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CompleteLifecycleActionResponseUnmarshaller GetInstance();
    public static CompleteLifecycleActionResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateAutoScalingGroupRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAutoScalingGroupRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateAutoScalingGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateAutoScalingGroupResponseUnmarshaller _instance;
    public static CreateAutoScalingGroupResponseUnmarshaller Instance { get; }
    private static CreateAutoScalingGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateAutoScalingGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAutoScalingGroupResponseUnmarshaller GetInstance();
    public static CreateAutoScalingGroupResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateLaunchConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLaunchConfigurationRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateLaunchConfigurationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateLaunchConfigurationResponseUnmarshaller _instance;
    public static CreateLaunchConfigurationResponseUnmarshaller Instance { get; }
    private static CreateLaunchConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateLaunchConfigurationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLaunchConfigurationResponseUnmarshaller GetInstance();
    public static CreateLaunchConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateOrUpdateTagsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateOrUpdateTagsRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateOrUpdateTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateOrUpdateTagsResponseUnmarshaller _instance;
    public static CreateOrUpdateTagsResponseUnmarshaller Instance { get; }
    private static CreateOrUpdateTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateOrUpdateTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateOrUpdateTagsResponseUnmarshaller GetInstance();
    public static CreateOrUpdateTagsResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteAutoScalingGroupRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAutoScalingGroupRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteAutoScalingGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAutoScalingGroupResponseUnmarshaller _instance;
    public static DeleteAutoScalingGroupResponseUnmarshaller Instance { get; }
    private static DeleteAutoScalingGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteAutoScalingGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAutoScalingGroupResponseUnmarshaller GetInstance();
    public static DeleteAutoScalingGroupResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteLaunchConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLaunchConfigurationRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteLaunchConfigurationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteLaunchConfigurationResponseUnmarshaller _instance;
    public static DeleteLaunchConfigurationResponseUnmarshaller Instance { get; }
    private static DeleteLaunchConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteLaunchConfigurationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLaunchConfigurationResponseUnmarshaller GetInstance();
    public static DeleteLaunchConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteLifecycleHookRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLifecycleHookRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteLifecycleHookResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteLifecycleHookResponseUnmarshaller _instance;
    public static DeleteLifecycleHookResponseUnmarshaller Instance { get; }
    private static DeleteLifecycleHookResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteLifecycleHookResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLifecycleHookResponseUnmarshaller GetInstance();
    public static DeleteLifecycleHookResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNotificationConfigurationRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteNotificationConfigurationResponseUnmarshaller _instance;
    public static DeleteNotificationConfigurationResponseUnmarshaller Instance { get; }
    private static DeleteNotificationConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteNotificationConfigurationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNotificationConfigurationResponseUnmarshaller GetInstance();
    public static DeleteNotificationConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeletePolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePolicyRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeletePolicyResponseUnmarshaller _instance;
    public static DeletePolicyResponseUnmarshaller Instance { get; }
    private static DeletePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeletePolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePolicyResponseUnmarshaller GetInstance();
    public static DeletePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteScheduledActionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteScheduledActionRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteScheduledActionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteScheduledActionResponseUnmarshaller _instance;
    public static DeleteScheduledActionResponseUnmarshaller Instance { get; }
    private static DeleteScheduledActionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteScheduledActionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteScheduledActionResponseUnmarshaller GetInstance();
    public static DeleteScheduledActionResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTagsRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteTagsResponseUnmarshaller _instance;
    public static DeleteTagsResponseUnmarshaller Instance { get; }
    private static DeleteTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTagsResponseUnmarshaller GetInstance();
    public static DeleteTagsResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAccountLimitsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAccountLimitsRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAccountLimitsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAccountLimitsResponseUnmarshaller _instance;
    public static DescribeAccountLimitsResponseUnmarshaller Instance { get; }
    private static DescribeAccountLimitsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAccountLimitsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAccountLimitsResponseUnmarshaller GetInstance();
    public static DescribeAccountLimitsResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAdjustmentTypesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAdjustmentTypesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAdjustmentTypesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAdjustmentTypesResponseUnmarshaller _instance;
    public static DescribeAdjustmentTypesResponseUnmarshaller Instance { get; }
    private static DescribeAdjustmentTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAdjustmentTypesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAdjustmentTypesResponseUnmarshaller GetInstance();
    public static DescribeAdjustmentTypesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingGroupsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAutoScalingGroupsRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAutoScalingGroupsResponseUnmarshaller _instance;
    public static DescribeAutoScalingGroupsResponseUnmarshaller Instance { get; }
    private static DescribeAutoScalingGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAutoScalingGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAutoScalingGroupsResponseUnmarshaller GetInstance();
    public static DescribeAutoScalingGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAutoScalingInstancesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingInstancesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAutoScalingInstancesResponseUnmarshaller _instance;
    public static DescribeAutoScalingInstancesResponseUnmarshaller Instance { get; }
    private static DescribeAutoScalingInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAutoScalingInstancesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAutoScalingInstancesResponseUnmarshaller GetInstance();
    public static DescribeAutoScalingInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingNotificationTypesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAutoScalingNotificationTypesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingNotificationTypesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAutoScalingNotificationTypesResponseUnmarshaller _instance;
    public static DescribeAutoScalingNotificationTypesResponseUnmarshaller Instance { get; }
    private static DescribeAutoScalingNotificationTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAutoScalingNotificationTypesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAutoScalingNotificationTypesResponseUnmarshaller GetInstance();
    public static DescribeAutoScalingNotificationTypesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLaunchConfigurationsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLaunchConfigurationsRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLaunchConfigurationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeLaunchConfigurationsResponseUnmarshaller _instance;
    public static DescribeLaunchConfigurationsResponseUnmarshaller Instance { get; }
    private static DescribeLaunchConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeLaunchConfigurationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLaunchConfigurationsResponseUnmarshaller GetInstance();
    public static DescribeLaunchConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLifecycleHooksRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLifecycleHooksRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLifecycleHooksResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeLifecycleHooksResponseUnmarshaller _instance;
    public static DescribeLifecycleHooksResponseUnmarshaller Instance { get; }
    private static DescribeLifecycleHooksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeLifecycleHooksResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLifecycleHooksResponseUnmarshaller GetInstance();
    public static DescribeLifecycleHooksResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLifecycleHookTypesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLifecycleHookTypesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLifecycleHookTypesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeLifecycleHookTypesResponseUnmarshaller _instance;
    public static DescribeLifecycleHookTypesResponseUnmarshaller Instance { get; }
    private static DescribeLifecycleHookTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeLifecycleHookTypesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLifecycleHookTypesResponseUnmarshaller GetInstance();
    public static DescribeLifecycleHookTypesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLoadBalancersRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLoadBalancersRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLoadBalancersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeLoadBalancersResponseUnmarshaller _instance;
    public static DescribeLoadBalancersResponseUnmarshaller Instance { get; }
    private static DescribeLoadBalancersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeLoadBalancersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLoadBalancersResponseUnmarshaller GetInstance();
    public static DescribeLoadBalancersResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeMetricCollectionTypesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMetricCollectionTypesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeMetricCollectionTypesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeMetricCollectionTypesResponseUnmarshaller _instance;
    public static DescribeMetricCollectionTypesResponseUnmarshaller Instance { get; }
    private static DescribeMetricCollectionTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeMetricCollectionTypesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMetricCollectionTypesResponseUnmarshaller GetInstance();
    public static DescribeMetricCollectionTypesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNotificationConfigurationsRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeNotificationConfigurationsResponseUnmarshaller _instance;
    public static DescribeNotificationConfigurationsResponseUnmarshaller Instance { get; }
    private static DescribeNotificationConfigurationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeNotificationConfigurationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNotificationConfigurationsResponseUnmarshaller GetInstance();
    public static DescribeNotificationConfigurationsResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribePoliciesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePoliciesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribePoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribePoliciesResponseUnmarshaller _instance;
    public static DescribePoliciesResponseUnmarshaller Instance { get; }
    private static DescribePoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribePoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePoliciesResponseUnmarshaller GetInstance();
    public static DescribePoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScalingActivitiesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeScalingActivitiesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScalingActivitiesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeScalingActivitiesResponseUnmarshaller _instance;
    public static DescribeScalingActivitiesResponseUnmarshaller Instance { get; }
    private static DescribeScalingActivitiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeScalingActivitiesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeScalingActivitiesResponseUnmarshaller GetInstance();
    public static DescribeScalingActivitiesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScalingProcessTypesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeScalingProcessTypesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScalingProcessTypesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeScalingProcessTypesResponseUnmarshaller _instance;
    public static DescribeScalingProcessTypesResponseUnmarshaller Instance { get; }
    private static DescribeScalingProcessTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeScalingProcessTypesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeScalingProcessTypesResponseUnmarshaller GetInstance();
    public static DescribeScalingProcessTypesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScheduledActionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeScheduledActionsRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScheduledActionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeScheduledActionsResponseUnmarshaller _instance;
    public static DescribeScheduledActionsResponseUnmarshaller Instance { get; }
    private static DescribeScheduledActionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeScheduledActionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeScheduledActionsResponseUnmarshaller GetInstance();
    public static DescribeScheduledActionsResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTagsRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTagsResponseUnmarshaller _instance;
    public static DescribeTagsResponseUnmarshaller Instance { get; }
    private static DescribeTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTagsResponseUnmarshaller GetInstance();
    public static DescribeTagsResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeTerminationPolicyTypesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTerminationPolicyTypesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeTerminationPolicyTypesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTerminationPolicyTypesResponseUnmarshaller _instance;
    public static DescribeTerminationPolicyTypesResponseUnmarshaller Instance { get; }
    private static DescribeTerminationPolicyTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTerminationPolicyTypesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTerminationPolicyTypesResponseUnmarshaller GetInstance();
    public static DescribeTerminationPolicyTypesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DetachInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachInstancesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DetachInstancesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DetachInstancesResponseUnmarshaller _instance;
    public static DetachInstancesResponseUnmarshaller Instance { get; }
    private static DetachInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DetachInstancesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachInstancesResponseUnmarshaller GetInstance();
    public static DetachInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DetachLoadBalancersRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachLoadBalancersRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DetachLoadBalancersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DetachLoadBalancersResponseUnmarshaller _instance;
    public static DetachLoadBalancersResponseUnmarshaller Instance { get; }
    private static DetachLoadBalancersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DetachLoadBalancersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachLoadBalancersResponseUnmarshaller GetInstance();
    public static DetachLoadBalancersResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DisableMetricsCollectionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableMetricsCollectionRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.DisableMetricsCollectionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DisableMetricsCollectionResponseUnmarshaller _instance;
    public static DisableMetricsCollectionResponseUnmarshaller Instance { get; }
    private static DisableMetricsCollectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DisableMetricsCollectionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableMetricsCollectionResponseUnmarshaller GetInstance();
    public static DisableMetricsCollectionResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.EbsUnmarshaller : object {
    private static EbsUnmarshaller _instance;
    public static EbsUnmarshaller Instance { get; }
    private static EbsUnmarshaller();
    public sealed virtual Ebs Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Ebs Unmarshall(JsonUnmarshallerContext context);
    public static EbsUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.EnabledMetricUnmarshaller : object {
    private static EnabledMetricUnmarshaller _instance;
    public static EnabledMetricUnmarshaller Instance { get; }
    private static EnabledMetricUnmarshaller();
    public sealed virtual EnabledMetric Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnabledMetric Unmarshall(JsonUnmarshallerContext context);
    public static EnabledMetricUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.EnableMetricsCollectionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableMetricsCollectionRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.EnableMetricsCollectionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static EnableMetricsCollectionResponseUnmarshaller _instance;
    public static EnableMetricsCollectionResponseUnmarshaller Instance { get; }
    private static EnableMetricsCollectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, EnableMetricsCollectionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableMetricsCollectionResponseUnmarshaller GetInstance();
    public static EnableMetricsCollectionResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.EnterStandbyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnterStandbyRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.EnterStandbyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static EnterStandbyResponseUnmarshaller _instance;
    public static EnterStandbyResponseUnmarshaller Instance { get; }
    private static EnterStandbyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, EnterStandbyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnterStandbyResponseUnmarshaller GetInstance();
    public static EnterStandbyResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.ExecutePolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExecutePolicyRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.ExecutePolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ExecutePolicyResponseUnmarshaller _instance;
    public static ExecutePolicyResponseUnmarshaller Instance { get; }
    private static ExecutePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ExecutePolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExecutePolicyResponseUnmarshaller GetInstance();
    public static ExecutePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.ExitStandbyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExitStandbyRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.ExitStandbyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ExitStandbyResponseUnmarshaller _instance;
    public static ExitStandbyResponseUnmarshaller Instance { get; }
    private static ExitStandbyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ExitStandbyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExitStandbyResponseUnmarshaller GetInstance();
    public static ExitStandbyResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.InstanceMonitoringUnmarshaller : object {
    private static InstanceMonitoringUnmarshaller _instance;
    public static InstanceMonitoringUnmarshaller Instance { get; }
    private static InstanceMonitoringUnmarshaller();
    public sealed virtual InstanceMonitoring Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceMonitoring Unmarshall(JsonUnmarshallerContext context);
    public static InstanceMonitoringUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.InstanceUnmarshaller : object {
    private static InstanceUnmarshaller _instance;
    public static InstanceUnmarshaller Instance { get; }
    private static InstanceUnmarshaller();
    public sealed virtual Instance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Instance Unmarshall(JsonUnmarshallerContext context);
    public static InstanceUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.LaunchConfigurationUnmarshaller : object {
    private static LaunchConfigurationUnmarshaller _instance;
    public static LaunchConfigurationUnmarshaller Instance { get; }
    private static LaunchConfigurationUnmarshaller();
    public sealed virtual LaunchConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static LaunchConfigurationUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.LifecycleHookUnmarshaller : object {
    private static LifecycleHookUnmarshaller _instance;
    public static LifecycleHookUnmarshaller Instance { get; }
    private static LifecycleHookUnmarshaller();
    public sealed virtual LifecycleHook Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecycleHook Unmarshall(JsonUnmarshallerContext context);
    public static LifecycleHookUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.LoadBalancerStateUnmarshaller : object {
    private static LoadBalancerStateUnmarshaller _instance;
    public static LoadBalancerStateUnmarshaller Instance { get; }
    private static LoadBalancerStateUnmarshaller();
    public sealed virtual LoadBalancerState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoadBalancerState Unmarshall(JsonUnmarshallerContext context);
    public static LoadBalancerStateUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.MetricCollectionTypeUnmarshaller : object {
    private static MetricCollectionTypeUnmarshaller _instance;
    public static MetricCollectionTypeUnmarshaller Instance { get; }
    private static MetricCollectionTypeUnmarshaller();
    public sealed virtual MetricCollectionType Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricCollectionType Unmarshall(JsonUnmarshallerContext context);
    public static MetricCollectionTypeUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.MetricGranularityTypeUnmarshaller : object {
    private static MetricGranularityTypeUnmarshaller _instance;
    public static MetricGranularityTypeUnmarshaller Instance { get; }
    private static MetricGranularityTypeUnmarshaller();
    public sealed virtual MetricGranularityType Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricGranularityType Unmarshall(JsonUnmarshallerContext context);
    public static MetricGranularityTypeUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.NotificationConfigurationUnmarshaller : object {
    private static NotificationConfigurationUnmarshaller _instance;
    public static NotificationConfigurationUnmarshaller Instance { get; }
    private static NotificationConfigurationUnmarshaller();
    public sealed virtual NotificationConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NotificationConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static NotificationConfigurationUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.ProcessTypeUnmarshaller : object {
    private static ProcessTypeUnmarshaller _instance;
    public static ProcessTypeUnmarshaller Instance { get; }
    private static ProcessTypeUnmarshaller();
    public sealed virtual ProcessType Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProcessType Unmarshall(JsonUnmarshallerContext context);
    public static ProcessTypeUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutLifecycleHookRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutLifecycleHookRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutLifecycleHookResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutLifecycleHookResponseUnmarshaller _instance;
    public static PutLifecycleHookResponseUnmarshaller Instance { get; }
    private static PutLifecycleHookResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutLifecycleHookResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutLifecycleHookResponseUnmarshaller GetInstance();
    public static PutLifecycleHookResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutNotificationConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutNotificationConfigurationRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutNotificationConfigurationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutNotificationConfigurationResponseUnmarshaller _instance;
    public static PutNotificationConfigurationResponseUnmarshaller Instance { get; }
    private static PutNotificationConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutNotificationConfigurationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutNotificationConfigurationResponseUnmarshaller GetInstance();
    public static PutNotificationConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutScalingPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutScalingPolicyRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutScalingPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutScalingPolicyResponseUnmarshaller _instance;
    public static PutScalingPolicyResponseUnmarshaller Instance { get; }
    private static PutScalingPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutScalingPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutScalingPolicyResponseUnmarshaller GetInstance();
    public static PutScalingPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutScheduledUpdateGroupActionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutScheduledUpdateGroupActionRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutScheduledUpdateGroupActionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutScheduledUpdateGroupActionResponseUnmarshaller _instance;
    public static PutScheduledUpdateGroupActionResponseUnmarshaller Instance { get; }
    private static PutScheduledUpdateGroupActionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutScheduledUpdateGroupActionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutScheduledUpdateGroupActionResponseUnmarshaller GetInstance();
    public static PutScheduledUpdateGroupActionResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.RecordLifecycleActionHeartbeatRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RecordLifecycleActionHeartbeatRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.RecordLifecycleActionHeartbeatResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RecordLifecycleActionHeartbeatResponseUnmarshaller _instance;
    public static RecordLifecycleActionHeartbeatResponseUnmarshaller Instance { get; }
    private static RecordLifecycleActionHeartbeatResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RecordLifecycleActionHeartbeatResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RecordLifecycleActionHeartbeatResponseUnmarshaller GetInstance();
    public static RecordLifecycleActionHeartbeatResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.ResumeProcessesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResumeProcessesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.ResumeProcessesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ResumeProcessesResponseUnmarshaller _instance;
    public static ResumeProcessesResponseUnmarshaller Instance { get; }
    private static ResumeProcessesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ResumeProcessesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResumeProcessesResponseUnmarshaller GetInstance();
    public static ResumeProcessesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.ScalingPolicyUnmarshaller : object {
    private static ScalingPolicyUnmarshaller _instance;
    public static ScalingPolicyUnmarshaller Instance { get; }
    private static ScalingPolicyUnmarshaller();
    public sealed virtual ScalingPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ScalingPolicy Unmarshall(JsonUnmarshallerContext context);
    public static ScalingPolicyUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.ScheduledUpdateGroupActionUnmarshaller : object {
    private static ScheduledUpdateGroupActionUnmarshaller _instance;
    public static ScheduledUpdateGroupActionUnmarshaller Instance { get; }
    private static ScheduledUpdateGroupActionUnmarshaller();
    public sealed virtual ScheduledUpdateGroupAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ScheduledUpdateGroupAction Unmarshall(JsonUnmarshallerContext context);
    public static ScheduledUpdateGroupActionUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.SetDesiredCapacityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetDesiredCapacityRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.SetDesiredCapacityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetDesiredCapacityResponseUnmarshaller _instance;
    public static SetDesiredCapacityResponseUnmarshaller Instance { get; }
    private static SetDesiredCapacityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetDesiredCapacityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetDesiredCapacityResponseUnmarshaller GetInstance();
    public static SetDesiredCapacityResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.SetInstanceHealthRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetInstanceHealthRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.SetInstanceHealthResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetInstanceHealthResponseUnmarshaller _instance;
    public static SetInstanceHealthResponseUnmarshaller Instance { get; }
    private static SetInstanceHealthResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetInstanceHealthResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetInstanceHealthResponseUnmarshaller GetInstance();
    public static SetInstanceHealthResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.SetInstanceProtectionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetInstanceProtectionRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.SetInstanceProtectionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetInstanceProtectionResponseUnmarshaller _instance;
    public static SetInstanceProtectionResponseUnmarshaller Instance { get; }
    private static SetInstanceProtectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetInstanceProtectionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetInstanceProtectionResponseUnmarshaller GetInstance();
    public static SetInstanceProtectionResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.StepAdjustmentUnmarshaller : object {
    private static StepAdjustmentUnmarshaller _instance;
    public static StepAdjustmentUnmarshaller Instance { get; }
    private static StepAdjustmentUnmarshaller();
    public sealed virtual StepAdjustment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StepAdjustment Unmarshall(JsonUnmarshallerContext context);
    public static StepAdjustmentUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.SuspendedProcessUnmarshaller : object {
    private static SuspendedProcessUnmarshaller _instance;
    public static SuspendedProcessUnmarshaller Instance { get; }
    private static SuspendedProcessUnmarshaller();
    public sealed virtual SuspendedProcess Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SuspendedProcess Unmarshall(JsonUnmarshallerContext context);
    public static SuspendedProcessUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.SuspendProcessesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SuspendProcessesRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.SuspendProcessesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SuspendProcessesResponseUnmarshaller _instance;
    public static SuspendProcessesResponseUnmarshaller Instance { get; }
    private static SuspendProcessesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SuspendProcessesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SuspendProcessesResponseUnmarshaller GetInstance();
    public static SuspendProcessesResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller : object {
    private static TagDescriptionUnmarshaller _instance;
    public static TagDescriptionUnmarshaller Instance { get; }
    private static TagDescriptionUnmarshaller();
    public sealed virtual TagDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TagDescription Unmarshall(JsonUnmarshallerContext context);
    public static TagDescriptionUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.TerminateInstanceInAutoScalingGroupRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TerminateInstanceInAutoScalingGroupRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.TerminateInstanceInAutoScalingGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static TerminateInstanceInAutoScalingGroupResponseUnmarshaller _instance;
    public static TerminateInstanceInAutoScalingGroupResponseUnmarshaller Instance { get; }
    private static TerminateInstanceInAutoScalingGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, TerminateInstanceInAutoScalingGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TerminateInstanceInAutoScalingGroupResponseUnmarshaller GetInstance();
    public static TerminateInstanceInAutoScalingGroupResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.UpdateAutoScalingGroupRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAutoScalingGroupRequest publicRequest);
}
public class Amazon.AutoScaling.Model.Internal.MarshallTransformations.UpdateAutoScalingGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateAutoScalingGroupResponseUnmarshaller _instance;
    public static UpdateAutoScalingGroupResponseUnmarshaller Instance { get; }
    private static UpdateAutoScalingGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateAutoScalingGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAutoScalingGroupResponseUnmarshaller GetInstance();
    public static UpdateAutoScalingGroupResponseUnmarshaller get_Instance();
}
public class Amazon.AutoScaling.Model.InvalidNextTokenException : AmazonAutoScalingException {
    public InvalidNextTokenException(string message);
    public InvalidNextTokenException(string message, Exception innerException);
    public InvalidNextTokenException(Exception innerException);
    public InvalidNextTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidNextTokenException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.AutoScaling.Model.LaunchConfiguration : object {
    private Nullable`1<bool> _associatePublicIpAddress;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private string _classicLinkVPCId;
    private List`1<string> _classicLinkVPCSecurityGroups;
    private Nullable`1<DateTime> _createdTime;
    private Nullable`1<bool> _ebsOptimized;
    private string _iamInstanceProfile;
    private string _imageId;
    private InstanceMonitoring _instanceMonitoring;
    private string _instanceType;
    private string _kernelId;
    private string _keyName;
    private string _launchConfigurationARN;
    private string _launchConfigurationName;
    private string _placementTenancy;
    private string _ramdiskId;
    private List`1<string> _securityGroups;
    private string _spotPrice;
    private string _userData;
    public bool AssociatePublicIpAddress { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public string ClassicLinkVPCId { get; public set; }
    public List`1<string> ClassicLinkVPCSecurityGroups { get; public set; }
    public DateTime CreatedTime { get; public set; }
    public bool EbsOptimized { get; public set; }
    public string IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public InstanceMonitoring InstanceMonitoring { get; public set; }
    public string InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public string LaunchConfigurationARN { get; public set; }
    public string LaunchConfigurationName { get; public set; }
    public string PlacementTenancy { get; public set; }
    public string RamdiskId { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public string SpotPrice { get; public set; }
    public string UserData { get; public set; }
    public bool get_AssociatePublicIpAddress();
    public void set_AssociatePublicIpAddress(bool value);
    internal bool IsSetAssociatePublicIpAddress();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public string get_ClassicLinkVPCId();
    public void set_ClassicLinkVPCId(string value);
    internal bool IsSetClassicLinkVPCId();
    public List`1<string> get_ClassicLinkVPCSecurityGroups();
    public void set_ClassicLinkVPCSecurityGroups(List`1<string> value);
    internal bool IsSetClassicLinkVPCSecurityGroups();
    public DateTime get_CreatedTime();
    public void set_CreatedTime(DateTime value);
    internal bool IsSetCreatedTime();
    public bool get_EbsOptimized();
    public void set_EbsOptimized(bool value);
    internal bool IsSetEbsOptimized();
    public string get_IamInstanceProfile();
    public void set_IamInstanceProfile(string value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public InstanceMonitoring get_InstanceMonitoring();
    public void set_InstanceMonitoring(InstanceMonitoring value);
    internal bool IsSetInstanceMonitoring();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public string get_LaunchConfigurationARN();
    public void set_LaunchConfigurationARN(string value);
    internal bool IsSetLaunchConfigurationARN();
    public string get_LaunchConfigurationName();
    public void set_LaunchConfigurationName(string value);
    internal bool IsSetLaunchConfigurationName();
    public string get_PlacementTenancy();
    public void set_PlacementTenancy(string value);
    internal bool IsSetPlacementTenancy();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.AutoScaling.Model.LifecycleHook : object {
    private string _autoScalingGroupName;
    private string _defaultResult;
    private Nullable`1<int> _globalTimeout;
    private Nullable`1<int> _heartbeatTimeout;
    private string _lifecycleHookName;
    private string _lifecycleTransition;
    private string _notificationMetadata;
    private string _notificationTargetARN;
    private string _roleARN;
    public string AutoScalingGroupName { get; public set; }
    public string DefaultResult { get; public set; }
    public int GlobalTimeout { get; public set; }
    public int HeartbeatTimeout { get; public set; }
    public string LifecycleHookName { get; public set; }
    public string LifecycleTransition { get; public set; }
    public string NotificationMetadata { get; public set; }
    public string NotificationTargetARN { get; public set; }
    public string RoleARN { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_DefaultResult();
    public void set_DefaultResult(string value);
    internal bool IsSetDefaultResult();
    public int get_GlobalTimeout();
    public void set_GlobalTimeout(int value);
    internal bool IsSetGlobalTimeout();
    public int get_HeartbeatTimeout();
    public void set_HeartbeatTimeout(int value);
    internal bool IsSetHeartbeatTimeout();
    public string get_LifecycleHookName();
    public void set_LifecycleHookName(string value);
    internal bool IsSetLifecycleHookName();
    public string get_LifecycleTransition();
    public void set_LifecycleTransition(string value);
    internal bool IsSetLifecycleTransition();
    public string get_NotificationMetadata();
    public void set_NotificationMetadata(string value);
    internal bool IsSetNotificationMetadata();
    public string get_NotificationTargetARN();
    public void set_NotificationTargetARN(string value);
    internal bool IsSetNotificationTargetARN();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
}
public class Amazon.AutoScaling.Model.LimitExceededException : AmazonAutoScalingException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.AutoScaling.Model.LoadBalancerState : object {
    private string _loadBalancerName;
    private string _state;
    public string LoadBalancerName { get; public set; }
    public string State { get; public set; }
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
}
public class Amazon.AutoScaling.Model.MetricCollectionType : object {
    private string _metric;
    public string Metric { get; public set; }
    public string get_Metric();
    public void set_Metric(string value);
    internal bool IsSetMetric();
}
public class Amazon.AutoScaling.Model.MetricGranularityType : object {
    private string _granularity;
    public string Granularity { get; public set; }
    public string get_Granularity();
    public void set_Granularity(string value);
    internal bool IsSetGranularity();
}
public class Amazon.AutoScaling.Model.NotificationConfiguration : object {
    private string _autoScalingGroupName;
    private string _notificationType;
    private string _topicARN;
    public string AutoScalingGroupName { get; public set; }
    public string NotificationType { get; public set; }
    public string TopicARN { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_NotificationType();
    public void set_NotificationType(string value);
    internal bool IsSetNotificationType();
    public string get_TopicARN();
    public void set_TopicARN(string value);
    internal bool IsSetTopicARN();
}
public class Amazon.AutoScaling.Model.ProcessType : object {
    private string _processName;
    public string ProcessName { get; public set; }
    public string get_ProcessName();
    public void set_ProcessName(string value);
    internal bool IsSetProcessName();
}
public class Amazon.AutoScaling.Model.PutLifecycleHookRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private string _defaultResult;
    private Nullable`1<int> _heartbeatTimeout;
    private string _lifecycleHookName;
    private string _lifecycleTransition;
    private string _notificationMetadata;
    private string _notificationTargetARN;
    private string _roleARN;
    public string AutoScalingGroupName { get; public set; }
    public string DefaultResult { get; public set; }
    public int HeartbeatTimeout { get; public set; }
    public string LifecycleHookName { get; public set; }
    public string LifecycleTransition { get; public set; }
    public string NotificationMetadata { get; public set; }
    public string NotificationTargetARN { get; public set; }
    public string RoleARN { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_DefaultResult();
    public void set_DefaultResult(string value);
    internal bool IsSetDefaultResult();
    public int get_HeartbeatTimeout();
    public void set_HeartbeatTimeout(int value);
    internal bool IsSetHeartbeatTimeout();
    public string get_LifecycleHookName();
    public void set_LifecycleHookName(string value);
    internal bool IsSetLifecycleHookName();
    public string get_LifecycleTransition();
    public void set_LifecycleTransition(string value);
    internal bool IsSetLifecycleTransition();
    public string get_NotificationMetadata();
    public void set_NotificationMetadata(string value);
    internal bool IsSetNotificationMetadata();
    public string get_NotificationTargetARN();
    public void set_NotificationTargetARN(string value);
    internal bool IsSetNotificationTargetARN();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
}
public class Amazon.AutoScaling.Model.PutLifecycleHookResponse : PutLifecycleHookResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the PutLifecycleHookResult class are now available on the PutLifecycleHookResponse class. You should use the properties on PutLifecycleHookResponse instead of accessing them through PutLifecycleHookResult.")]
public PutLifecycleHookResult PutLifecycleHookResult { get; }
    public PutLifecycleHookResult get_PutLifecycleHookResult();
}
public class Amazon.AutoScaling.Model.PutLifecycleHookResult : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.PutNotificationConfigurationRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _notificationTypes;
    private string _topicARN;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> NotificationTypes { get; public set; }
    public string TopicARN { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_NotificationTypes();
    public void set_NotificationTypes(List`1<string> value);
    internal bool IsSetNotificationTypes();
    public string get_TopicARN();
    public void set_TopicARN(string value);
    internal bool IsSetTopicARN();
}
public class Amazon.AutoScaling.Model.PutNotificationConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.PutScalingPolicyRequest : AmazonAutoScalingRequest {
    private string _adjustmentType;
    private string _autoScalingGroupName;
    private Nullable`1<int> _cooldown;
    private Nullable`1<int> _estimatedInstanceWarmup;
    private string _metricAggregationType;
    private Nullable`1<int> _minAdjustmentMagnitude;
    private Nullable`1<int> _minAdjustmentStep;
    private string _policyName;
    private string _policyType;
    private Nullable`1<int> _scalingAdjustment;
    private List`1<StepAdjustment> _stepAdjustments;
    public string AdjustmentType { get; public set; }
    public string AutoScalingGroupName { get; public set; }
    public int Cooldown { get; public set; }
    public int EstimatedInstanceWarmup { get; public set; }
    public string MetricAggregationType { get; public set; }
    public int MinAdjustmentMagnitude { get; public set; }
    public int MinAdjustmentStep { get; public set; }
    public string PolicyName { get; public set; }
    public string PolicyType { get; public set; }
    public int ScalingAdjustment { get; public set; }
    public List`1<StepAdjustment> StepAdjustments { get; public set; }
    public string get_AdjustmentType();
    public void set_AdjustmentType(string value);
    internal bool IsSetAdjustmentType();
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public int get_Cooldown();
    public void set_Cooldown(int value);
    internal bool IsSetCooldown();
    public int get_EstimatedInstanceWarmup();
    public void set_EstimatedInstanceWarmup(int value);
    internal bool IsSetEstimatedInstanceWarmup();
    public string get_MetricAggregationType();
    public void set_MetricAggregationType(string value);
    internal bool IsSetMetricAggregationType();
    public int get_MinAdjustmentMagnitude();
    public void set_MinAdjustmentMagnitude(int value);
    internal bool IsSetMinAdjustmentMagnitude();
    public int get_MinAdjustmentStep();
    public void set_MinAdjustmentStep(int value);
    internal bool IsSetMinAdjustmentStep();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public string get_PolicyType();
    public void set_PolicyType(string value);
    internal bool IsSetPolicyType();
    public int get_ScalingAdjustment();
    public void set_ScalingAdjustment(int value);
    internal bool IsSetScalingAdjustment();
    public List`1<StepAdjustment> get_StepAdjustments();
    public void set_StepAdjustments(List`1<StepAdjustment> value);
    internal bool IsSetStepAdjustments();
}
public class Amazon.AutoScaling.Model.PutScalingPolicyResponse : PutScalingPolicyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the PutScalingPolicyResult class are now available on the PutScalingPolicyResponse class. You should use the properties on PutScalingPolicyResponse instead of accessing them through PutScalingPolicyResult.")]
public PutScalingPolicyResult PutScalingPolicyResult { get; }
    public PutScalingPolicyResult get_PutScalingPolicyResult();
}
public class Amazon.AutoScaling.Model.PutScalingPolicyResult : AmazonWebServiceResponse {
    private string _policyARN;
    public string PolicyARN { get; public set; }
    public string get_PolicyARN();
    public void set_PolicyARN(string value);
    internal bool IsSetPolicyARN();
}
public class Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private Nullable`1<int> _desiredCapacity;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<int> _maxSize;
    private Nullable`1<int> _minSize;
    private string _recurrence;
    private string _scheduledActionName;
    private Nullable`1<DateTime> _startTime;
    private Nullable`1<DateTime> _time;
    public string AutoScalingGroupName { get; public set; }
    public int DesiredCapacity { get; public set; }
    public DateTime EndTime { get; public set; }
    public int MaxSize { get; public set; }
    public int MinSize { get; public set; }
    public string Recurrence { get; public set; }
    public string ScheduledActionName { get; public set; }
    public DateTime StartTime { get; public set; }
    public DateTime Time { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public int get_DesiredCapacity();
    public void set_DesiredCapacity(int value);
    internal bool IsSetDesiredCapacity();
    public DateTime get_EndTime();
    public void set_EndTime(DateTime value);
    internal bool IsSetEndTime();
    public int get_MaxSize();
    public void set_MaxSize(int value);
    internal bool IsSetMaxSize();
    public int get_MinSize();
    public void set_MinSize(int value);
    internal bool IsSetMinSize();
    public string get_Recurrence();
    public void set_Recurrence(string value);
    internal bool IsSetRecurrence();
    public string get_ScheduledActionName();
    public void set_ScheduledActionName(string value);
    internal bool IsSetScheduledActionName();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
    public DateTime get_Time();
    public void set_Time(DateTime value);
    internal bool IsSetTime();
}
public class Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private string _instanceId;
    private string _lifecycleActionToken;
    private string _lifecycleHookName;
    public string AutoScalingGroupName { get; public set; }
    public string InstanceId { get; public set; }
    public string LifecycleActionToken { get; public set; }
    public string LifecycleHookName { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_LifecycleActionToken();
    public void set_LifecycleActionToken(string value);
    internal bool IsSetLifecycleActionToken();
    public string get_LifecycleHookName();
    public void set_LifecycleHookName(string value);
    internal bool IsSetLifecycleHookName();
}
public class Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatResponse : RecordLifecycleActionHeartbeatResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the RecordLifecycleActionHeartbeatResult class are now available on the RecordLifecycleActionHeartbeatResponse class. You should use the properties on RecordLifecycleActionHeartbeatResponse instead of accessing them through RecordLifecycleActionHeartbeatResult.")]
public RecordLifecycleActionHeartbeatResult RecordLifecycleActionHeartbeatResult { get; }
    public RecordLifecycleActionHeartbeatResult get_RecordLifecycleActionHeartbeatResult();
}
public class Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatResult : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.ResourceContentionException : AmazonAutoScalingException {
    public ResourceContentionException(string message);
    public ResourceContentionException(string message, Exception innerException);
    public ResourceContentionException(Exception innerException);
    public ResourceContentionException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceContentionException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.AutoScaling.Model.ResourceInUseException : AmazonAutoScalingException {
    public ResourceInUseException(string message);
    public ResourceInUseException(string message, Exception innerException);
    public ResourceInUseException(Exception innerException);
    public ResourceInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceInUseException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.AutoScaling.Model.ResumeProcessesRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _scalingProcesses;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> ScalingProcesses { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_ScalingProcesses();
    public void set_ScalingProcesses(List`1<string> value);
    internal bool IsSetScalingProcesses();
}
public class Amazon.AutoScaling.Model.ResumeProcessesResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.ScalingActivityInProgressException : AmazonAutoScalingException {
    public ScalingActivityInProgressException(string message);
    public ScalingActivityInProgressException(string message, Exception innerException);
    public ScalingActivityInProgressException(Exception innerException);
    public ScalingActivityInProgressException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ScalingActivityInProgressException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.AutoScaling.Model.ScalingPolicy : object {
    private string _adjustmentType;
    private List`1<Alarm> _alarms;
    private string _autoScalingGroupName;
    private Nullable`1<int> _cooldown;
    private Nullable`1<int> _estimatedInstanceWarmup;
    private string _metricAggregationType;
    private Nullable`1<int> _minAdjustmentMagnitude;
    private Nullable`1<int> _minAdjustmentStep;
    private string _policyARN;
    private string _policyName;
    private string _policyType;
    private Nullable`1<int> _scalingAdjustment;
    private List`1<StepAdjustment> _stepAdjustments;
    public string AdjustmentType { get; public set; }
    public List`1<Alarm> Alarms { get; public set; }
    public string AutoScalingGroupName { get; public set; }
    public int Cooldown { get; public set; }
    public int EstimatedInstanceWarmup { get; public set; }
    public string MetricAggregationType { get; public set; }
    public int MinAdjustmentMagnitude { get; public set; }
    public int MinAdjustmentStep { get; public set; }
    public string PolicyARN { get; public set; }
    public string PolicyName { get; public set; }
    public string PolicyType { get; public set; }
    public int ScalingAdjustment { get; public set; }
    public List`1<StepAdjustment> StepAdjustments { get; public set; }
    public string get_AdjustmentType();
    public void set_AdjustmentType(string value);
    internal bool IsSetAdjustmentType();
    public List`1<Alarm> get_Alarms();
    public void set_Alarms(List`1<Alarm> value);
    internal bool IsSetAlarms();
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public int get_Cooldown();
    public void set_Cooldown(int value);
    internal bool IsSetCooldown();
    public int get_EstimatedInstanceWarmup();
    public void set_EstimatedInstanceWarmup(int value);
    internal bool IsSetEstimatedInstanceWarmup();
    public string get_MetricAggregationType();
    public void set_MetricAggregationType(string value);
    internal bool IsSetMetricAggregationType();
    public int get_MinAdjustmentMagnitude();
    public void set_MinAdjustmentMagnitude(int value);
    internal bool IsSetMinAdjustmentMagnitude();
    public int get_MinAdjustmentStep();
    public void set_MinAdjustmentStep(int value);
    internal bool IsSetMinAdjustmentStep();
    public string get_PolicyARN();
    public void set_PolicyARN(string value);
    internal bool IsSetPolicyARN();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public string get_PolicyType();
    public void set_PolicyType(string value);
    internal bool IsSetPolicyType();
    public int get_ScalingAdjustment();
    public void set_ScalingAdjustment(int value);
    internal bool IsSetScalingAdjustment();
    public List`1<StepAdjustment> get_StepAdjustments();
    public void set_StepAdjustments(List`1<StepAdjustment> value);
    internal bool IsSetStepAdjustments();
}
public class Amazon.AutoScaling.Model.ScheduledUpdateGroupAction : object {
    private string _autoScalingGroupName;
    private Nullable`1<int> _desiredCapacity;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<int> _maxSize;
    private Nullable`1<int> _minSize;
    private string _recurrence;
    private string _scheduledActionARN;
    private string _scheduledActionName;
    private Nullable`1<DateTime> _startTime;
    private Nullable`1<DateTime> _time;
    public string AutoScalingGroupName { get; public set; }
    public int DesiredCapacity { get; public set; }
    public DateTime EndTime { get; public set; }
    public int MaxSize { get; public set; }
    public int MinSize { get; public set; }
    public string Recurrence { get; public set; }
    public string ScheduledActionARN { get; public set; }
    public string ScheduledActionName { get; public set; }
    public DateTime StartTime { get; public set; }
    public DateTime Time { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public int get_DesiredCapacity();
    public void set_DesiredCapacity(int value);
    internal bool IsSetDesiredCapacity();
    public DateTime get_EndTime();
    public void set_EndTime(DateTime value);
    internal bool IsSetEndTime();
    public int get_MaxSize();
    public void set_MaxSize(int value);
    internal bool IsSetMaxSize();
    public int get_MinSize();
    public void set_MinSize(int value);
    internal bool IsSetMinSize();
    public string get_Recurrence();
    public void set_Recurrence(string value);
    internal bool IsSetRecurrence();
    public string get_ScheduledActionARN();
    public void set_ScheduledActionARN(string value);
    internal bool IsSetScheduledActionARN();
    public string get_ScheduledActionName();
    public void set_ScheduledActionName(string value);
    internal bool IsSetScheduledActionName();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
    public DateTime get_Time();
    public void set_Time(DateTime value);
    internal bool IsSetTime();
}
public class Amazon.AutoScaling.Model.SetDesiredCapacityRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private Nullable`1<int> _desiredCapacity;
    private Nullable`1<bool> _honorCooldown;
    public string AutoScalingGroupName { get; public set; }
    public int DesiredCapacity { get; public set; }
    public bool HonorCooldown { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public int get_DesiredCapacity();
    public void set_DesiredCapacity(int value);
    internal bool IsSetDesiredCapacity();
    public bool get_HonorCooldown();
    public void set_HonorCooldown(bool value);
    internal bool IsSetHonorCooldown();
}
public class Amazon.AutoScaling.Model.SetDesiredCapacityResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.SetInstanceHealthRequest : AmazonAutoScalingRequest {
    private string _healthStatus;
    private string _instanceId;
    private Nullable`1<bool> _shouldRespectGracePeriod;
    public string HealthStatus { get; public set; }
    public string InstanceId { get; public set; }
    public bool ShouldRespectGracePeriod { get; public set; }
    public string get_HealthStatus();
    public void set_HealthStatus(string value);
    internal bool IsSetHealthStatus();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public bool get_ShouldRespectGracePeriod();
    public void set_ShouldRespectGracePeriod(bool value);
    internal bool IsSetShouldRespectGracePeriod();
}
public class Amazon.AutoScaling.Model.SetInstanceHealthResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.SetInstanceProtectionRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _instanceIds;
    private Nullable`1<bool> _protectedFromScaleIn;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public bool ProtectedFromScaleIn { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public bool get_ProtectedFromScaleIn();
    public void set_ProtectedFromScaleIn(bool value);
    internal bool IsSetProtectedFromScaleIn();
}
public class Amazon.AutoScaling.Model.SetInstanceProtectionResponse : SetInstanceProtectionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SetInstanceProtectionResult class are now available on the SetInstanceProtectionResponse class. You should use the properties on SetInstanceProtectionResponse instead of accessing them through SetInstanceProtectionResult.")]
public SetInstanceProtectionResult SetInstanceProtectionResult { get; }
    public SetInstanceProtectionResult get_SetInstanceProtectionResult();
}
public class Amazon.AutoScaling.Model.SetInstanceProtectionResult : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.StepAdjustment : object {
    private Nullable`1<double> _metricIntervalLowerBound;
    private Nullable`1<double> _metricIntervalUpperBound;
    private Nullable`1<int> _scalingAdjustment;
    public double MetricIntervalLowerBound { get; public set; }
    public double MetricIntervalUpperBound { get; public set; }
    public int ScalingAdjustment { get; public set; }
    public double get_MetricIntervalLowerBound();
    public void set_MetricIntervalLowerBound(double value);
    internal bool IsSetMetricIntervalLowerBound();
    public double get_MetricIntervalUpperBound();
    public void set_MetricIntervalUpperBound(double value);
    internal bool IsSetMetricIntervalUpperBound();
    public int get_ScalingAdjustment();
    public void set_ScalingAdjustment(int value);
    internal bool IsSetScalingAdjustment();
}
public class Amazon.AutoScaling.Model.SuspendedProcess : object {
    private string _processName;
    private string _suspensionReason;
    public string ProcessName { get; public set; }
    public string SuspensionReason { get; public set; }
    public string get_ProcessName();
    public void set_ProcessName(string value);
    internal bool IsSetProcessName();
    public string get_SuspensionReason();
    public void set_SuspensionReason(string value);
    internal bool IsSetSuspensionReason();
}
public class Amazon.AutoScaling.Model.SuspendProcessesRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _scalingProcesses;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> ScalingProcesses { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_ScalingProcesses();
    public void set_ScalingProcesses(List`1<string> value);
    internal bool IsSetScalingProcesses();
}
public class Amazon.AutoScaling.Model.SuspendProcessesResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.Model.Tag : object {
    private string _key;
    private Nullable`1<bool> _propagateAtLaunch;
    private string _resourceId;
    private string _resourceType;
    private string _value;
    public string Key { get; public set; }
    public bool PropagateAtLaunch { get; public set; }
    public string ResourceId { get; public set; }
    public string ResourceType { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public bool get_PropagateAtLaunch();
    public void set_PropagateAtLaunch(bool value);
    internal bool IsSetPropagateAtLaunch();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.AutoScaling.Model.TagDescription : object {
    private string _key;
    private Nullable`1<bool> _propagateAtLaunch;
    private string _resourceId;
    private string _resourceType;
    private string _value;
    public string Key { get; public set; }
    public bool PropagateAtLaunch { get; public set; }
    public string ResourceId { get; public set; }
    public string ResourceType { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public bool get_PropagateAtLaunch();
    public void set_PropagateAtLaunch(bool value);
    internal bool IsSetPropagateAtLaunch();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupRequest : AmazonAutoScalingRequest {
    private string _instanceId;
    private Nullable`1<bool> _shouldDecrementDesiredCapacity;
    public string InstanceId { get; public set; }
    public bool ShouldDecrementDesiredCapacity { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public bool get_ShouldDecrementDesiredCapacity();
    public void set_ShouldDecrementDesiredCapacity(bool value);
    internal bool IsSetShouldDecrementDesiredCapacity();
}
public class Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupResponse : TerminateInstanceInAutoScalingGroupResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the TerminateInstanceInAutoScalingGroupResult class are now available on the TerminateInstanceInAutoScalingGroupResponse class. You should use the properties on TerminateInstanceInAutoScalingGroupResponse instead of accessing them through TerminateInstanceInAutoScalingGroupResult.")]
public TerminateInstanceInAutoScalingGroupResult TerminateInstanceInAutoScalingGroupResult { get; }
    public TerminateInstanceInAutoScalingGroupResult get_TerminateInstanceInAutoScalingGroupResult();
}
public class Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupResult : AmazonWebServiceResponse {
    private Activity _activity;
    public Activity Activity { get; public set; }
    public Activity get_Activity();
    public void set_Activity(Activity value);
    internal bool IsSetActivity();
}
public class Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest : AmazonAutoScalingRequest {
    private string _autoScalingGroupName;
    private List`1<string> _availabilityZones;
    private Nullable`1<int> _defaultCooldown;
    private Nullable`1<int> _desiredCapacity;
    private Nullable`1<int> _healthCheckGracePeriod;
    private string _healthCheckType;
    private string _launchConfigurationName;
    private Nullable`1<int> _maxSize;
    private Nullable`1<int> _minSize;
    private Nullable`1<bool> _newInstancesProtectedFromScaleIn;
    private string _placementGroup;
    private List`1<string> _terminationPolicies;
    private string _vpcZoneIdentifier;
    public string AutoScalingGroupName { get; public set; }
    public List`1<string> AvailabilityZones { get; public set; }
    public int DefaultCooldown { get; public set; }
    public int DesiredCapacity { get; public set; }
    public int HealthCheckGracePeriod { get; public set; }
    public string HealthCheckType { get; public set; }
    public string LaunchConfigurationName { get; public set; }
    public int MaxSize { get; public set; }
    public int MinSize { get; public set; }
    public bool NewInstancesProtectedFromScaleIn { get; public set; }
    public string PlacementGroup { get; public set; }
    public List`1<string> TerminationPolicies { get; public set; }
    public string VPCZoneIdentifier { get; public set; }
    public string get_AutoScalingGroupName();
    public void set_AutoScalingGroupName(string value);
    internal bool IsSetAutoScalingGroupName();
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public int get_DefaultCooldown();
    public void set_DefaultCooldown(int value);
    internal bool IsSetDefaultCooldown();
    public int get_DesiredCapacity();
    public void set_DesiredCapacity(int value);
    internal bool IsSetDesiredCapacity();
    public int get_HealthCheckGracePeriod();
    public void set_HealthCheckGracePeriod(int value);
    internal bool IsSetHealthCheckGracePeriod();
    public string get_HealthCheckType();
    public void set_HealthCheckType(string value);
    internal bool IsSetHealthCheckType();
    public string get_LaunchConfigurationName();
    public void set_LaunchConfigurationName(string value);
    internal bool IsSetLaunchConfigurationName();
    public int get_MaxSize();
    public void set_MaxSize(int value);
    internal bool IsSetMaxSize();
    public int get_MinSize();
    public void set_MinSize(int value);
    internal bool IsSetMinSize();
    public bool get_NewInstancesProtectedFromScaleIn();
    public void set_NewInstancesProtectedFromScaleIn(bool value);
    internal bool IsSetNewInstancesProtectedFromScaleIn();
    public string get_PlacementGroup();
    public void set_PlacementGroup(string value);
    internal bool IsSetPlacementGroup();
    public List`1<string> get_TerminationPolicies();
    public void set_TerminationPolicies(List`1<string> value);
    internal bool IsSetTerminationPolicies();
    public string get_VPCZoneIdentifier();
    public void set_VPCZoneIdentifier(string value);
    internal bool IsSetVPCZoneIdentifier();
}
public class Amazon.AutoScaling.Model.UpdateAutoScalingGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.AutoScaling.ScalingActivityStatusCode : ConstantClass {
    public static ScalingActivityStatusCode Cancelled;
    public static ScalingActivityStatusCode Failed;
    public static ScalingActivityStatusCode InProgress;
    public static ScalingActivityStatusCode MidLifecycleAction;
    public static ScalingActivityStatusCode PendingSpotBidPlacement;
    public static ScalingActivityStatusCode PreInService;
    public static ScalingActivityStatusCode Successful;
    public static ScalingActivityStatusCode WaitingForELBConnectionDraining;
    public static ScalingActivityStatusCode WaitingForInstanceId;
    public static ScalingActivityStatusCode WaitingForInstanceWarmup;
    public static ScalingActivityStatusCode WaitingForSpotInstanceId;
    public static ScalingActivityStatusCode WaitingForSpotInstanceRequestId;
    public ScalingActivityStatusCode(string value);
    private static ScalingActivityStatusCode();
    public static ScalingActivityStatusCode FindValue(string value);
    public static ScalingActivityStatusCode op_Implicit(string value);
}
public static class Amazon.AWSClientFactory : object {
    public static IAmazonAutoScaling CreateAmazonAutoScalingClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonAutoScaling CreateAmazonAutoScalingClient(string awsAccessKey, string awsSecretAccessKey, AmazonAutoScalingConfig config);
    public static IAmazonAutoScaling CreateAmazonAutoScalingClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonAutoScaling CreateAmazonAutoScalingClient(AWSCredentials credentials);
    public static IAmazonAutoScaling CreateAmazonAutoScalingClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonAutoScaling CreateAmazonAutoScalingClient(AWSCredentials credentials, AmazonAutoScalingConfig config);
    public static IAmazonCloudWatch CreateAmazonCloudWatchClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonCloudWatch CreateAmazonCloudWatchClient(string awsAccessKey, string awsSecretAccessKey, AmazonCloudWatchConfig config);
    public static IAmazonCloudWatch CreateAmazonCloudWatchClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonCloudWatch CreateAmazonCloudWatchClient(AWSCredentials credentials);
    public static IAmazonCloudWatch CreateAmazonCloudWatchClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonCloudWatch CreateAmazonCloudWatchClient(AWSCredentials credentials, AmazonCloudWatchConfig config);
    public static IAmazonDynamoDB CreateAmazonDynamoDBClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonDynamoDB CreateAmazonDynamoDBClient(string awsAccessKey, string awsSecretAccessKey, AmazonDynamoDBConfig config);
    public static IAmazonDynamoDB CreateAmazonDynamoDBClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonDynamoDB CreateAmazonDynamoDBClient(AWSCredentials credentials);
    public static IAmazonDynamoDB CreateAmazonDynamoDBClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonDynamoDB CreateAmazonDynamoDBClient(AWSCredentials credentials, AmazonDynamoDBConfig config);
    public static IAmazonEC2 CreateAmazonEC2Client(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonEC2 CreateAmazonEC2Client(string awsAccessKey, string awsSecretAccessKey, AmazonEC2Config config);
    public static IAmazonEC2 CreateAmazonEC2Client(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonEC2 CreateAmazonEC2Client(AWSCredentials credentials);
    public static IAmazonEC2 CreateAmazonEC2Client(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonEC2 CreateAmazonEC2Client(AWSCredentials credentials, AmazonEC2Config config);
    public static IAmazonElasticLoadBalancing CreateAmazonElasticLoadBalancingClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonElasticLoadBalancing CreateAmazonElasticLoadBalancingClient(string awsAccessKey, string awsSecretAccessKey, AmazonElasticLoadBalancingConfig config);
    public static IAmazonElasticLoadBalancing CreateAmazonElasticLoadBalancingClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonElasticLoadBalancing CreateAmazonElasticLoadBalancingClient(AWSCredentials credentials);
    public static IAmazonElasticLoadBalancing CreateAmazonElasticLoadBalancingClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonElasticLoadBalancing CreateAmazonElasticLoadBalancingClient(AWSCredentials credentials, AmazonElasticLoadBalancingConfig config);
    public static IAmazonKinesis CreateAmazonKinesisClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonKinesis CreateAmazonKinesisClient(string awsAccessKey, string awsSecretAccessKey, AmazonKinesisConfig config);
    public static IAmazonKinesis CreateAmazonKinesisClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonKinesis CreateAmazonKinesisClient(AWSCredentials credentials);
    public static IAmazonKinesis CreateAmazonKinesisClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonKinesis CreateAmazonKinesisClient(AWSCredentials credentials, AmazonKinesisConfig config);
    public static IAmazonS3 CreateAmazonS3Client(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonS3 CreateAmazonS3Client(string awsAccessKey, string awsSecretAccessKey, AmazonS3Config config);
    public static IAmazonS3 CreateAmazonS3Client(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonS3 CreateAmazonS3Client(AWSCredentials credentials);
    public static IAmazonS3 CreateAmazonS3Client(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonS3 CreateAmazonS3Client(AWSCredentials credentials, AmazonS3Config config);
    public static IAmazonSecurityTokenService CreateAmazonSecurityTokenServiceClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonSecurityTokenService CreateAmazonSecurityTokenServiceClient(string awsAccessKey, string awsSecretAccessKey, AmazonSecurityTokenServiceConfig config);
    public static IAmazonSecurityTokenService CreateAmazonSecurityTokenServiceClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonSecurityTokenService CreateAmazonSecurityTokenServiceClient(AWSCredentials credentials);
    public static IAmazonSecurityTokenService CreateAmazonSecurityTokenServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonSecurityTokenService CreateAmazonSecurityTokenServiceClient(AWSCredentials credentials, AmazonSecurityTokenServiceConfig config);
    public static IAmazonSimpleDB CreateAmazonSimpleDBClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonSimpleDB CreateAmazonSimpleDBClient(string awsAccessKey, string awsSecretAccessKey, AmazonSimpleDBConfig config);
    public static IAmazonSimpleDB CreateAmazonSimpleDBClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonSimpleDB CreateAmazonSimpleDBClient(AWSCredentials credentials);
    public static IAmazonSimpleDB CreateAmazonSimpleDBClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonSimpleDB CreateAmazonSimpleDBClient(AWSCredentials credentials, AmazonSimpleDBConfig config);
    public static IAmazonSimpleEmailService CreateAmazonSimpleEmailServiceClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonSimpleEmailService CreateAmazonSimpleEmailServiceClient(string awsAccessKey, string awsSecretAccessKey, AmazonSimpleEmailServiceConfig config);
    public static IAmazonSimpleEmailService CreateAmazonSimpleEmailServiceClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonSimpleEmailService CreateAmazonSimpleEmailServiceClient(AWSCredentials credentials);
    public static IAmazonSimpleEmailService CreateAmazonSimpleEmailServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonSimpleEmailService CreateAmazonSimpleEmailServiceClient(AWSCredentials credentials, AmazonSimpleEmailServiceConfig config);
    public static IAmazonSimpleNotificationService CreateAmazonSimpleNotificationServiceClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonSimpleNotificationService CreateAmazonSimpleNotificationServiceClient(string awsAccessKey, string awsSecretAccessKey, AmazonSimpleNotificationServiceConfig config);
    public static IAmazonSimpleNotificationService CreateAmazonSimpleNotificationServiceClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonSimpleNotificationService CreateAmazonSimpleNotificationServiceClient(AWSCredentials credentials);
    public static IAmazonSimpleNotificationService CreateAmazonSimpleNotificationServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonSimpleNotificationService CreateAmazonSimpleNotificationServiceClient(AWSCredentials credentials, AmazonSimpleNotificationServiceConfig config);
    public static IAmazonSQS CreateAmazonSQSClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonSQS CreateAmazonSQSClient(string awsAccessKey, string awsSecretAccessKey, AmazonSQSConfig config);
    public static IAmazonSQS CreateAmazonSQSClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonSQS CreateAmazonSQSClient(AWSCredentials credentials);
    public static IAmazonSQS CreateAmazonSQSClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonSQS CreateAmazonSQSClient(AWSCredentials credentials, AmazonSQSConfig config);
    public static IAmazonCognitoSync CreateAmazonCognitoSyncClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonCognitoSync CreateAmazonCognitoSyncClient(string awsAccessKey, string awsSecretAccessKey, AmazonCognitoSyncConfig config);
    public static IAmazonCognitoSync CreateAmazonCognitoSyncClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonCognitoSync CreateAmazonCognitoSyncClient(AWSCredentials credentials);
    public static IAmazonCognitoSync CreateAmazonCognitoSyncClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonCognitoSync CreateAmazonCognitoSyncClient(AWSCredentials credentials, AmazonCognitoSyncConfig config);
    public static IAmazonKeyManagementService CreateAmazonKeyManagementServiceClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonKeyManagementService CreateAmazonKeyManagementServiceClient(string awsAccessKey, string awsSecretAccessKey, AmazonKeyManagementServiceConfig config);
    public static IAmazonKeyManagementService CreateAmazonKeyManagementServiceClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonKeyManagementService CreateAmazonKeyManagementServiceClient(AWSCredentials credentials);
    public static IAmazonKeyManagementService CreateAmazonKeyManagementServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonKeyManagementService CreateAmazonKeyManagementServiceClient(AWSCredentials credentials, AmazonKeyManagementServiceConfig config);
    public static IAmazonLambda CreateAmazonLambdaClient(string awsAccessKey, string awsSecretAccessKey);
    public static IAmazonLambda CreateAmazonLambdaClient(string awsAccessKey, string awsSecretAccessKey, AmazonLambdaConfig config);
    public static IAmazonLambda CreateAmazonLambdaClient(string awsAccessKey, string awsSecretAccessKey, RegionEndpoint region);
    public static IAmazonLambda CreateAmazonLambdaClient(AWSCredentials credentials);
    public static IAmazonLambda CreateAmazonLambdaClient(AWSCredentials credentials, RegionEndpoint region);
    public static IAmazonLambda CreateAmazonLambdaClient(AWSCredentials credentials, AmazonLambdaConfig config);
}
public static class Amazon.AWSConfigs : object {
    public static string AWSRegionKey;
    public static string AWSProfileNameKey;
    public static string AWSProfilesLocationKey;
    public static string LoggingKey;
    public static string ResponseLoggingKey;
    public static string LogMetricsKey;
    public static string EndpointDefinitionKey;
    public static string DynamoDBContextTableNamePrefixKey;
    public static string S3UseSignatureVersion4Key;
    public static string EC2UseSignatureVersion4Key;
    internal static string LoggingDestinationProperty;
    private static Char[] validSeparators;
    internal static string _awsRegion;
    internal static LoggingOptions _logging;
    internal static ResponseLoggingOption _responseLogging;
    internal static bool _logMetrics;
    internal static string _endpointDefinition;
    internal static string _dynamoDBContextTableNamePrefix;
    internal static bool _s3UseSignatureVersion4;
    internal static bool _ec2UseSignatureVersion4;
    internal static string _awsProfileName;
    internal static string _awsAccountsLocation;
    private static RootConfig _rootConfig;
    private static PropertyChangedEventHandler PropertyChanged;
    [CompilerGeneratedAttribute]
private static TimeSpan <ClockOffset>k__BackingField;
    public static bool CorrectForClockSkew { get; public set; }
    public static TimeSpan ClockOffset { get; internal set; }
    public static string AWSRegion { get; public set; }
    public static string AWSProfileName { get; public set; }
    public static string AWSProfilesLocation { get; public set; }
    [ObsoleteAttribute("This property is obsolete. Use LoggingConfig.LogTo instead.")]
public static LoggingOptions Logging { get; public set; }
    [ObsoleteAttribute("This property is obsolete. Use LoggingConfig.LogResponses instead.")]
public static ResponseLoggingOption ResponseLogging { get; public set; }
    [ObsoleteAttribute("This property is obsolete. Use LoggingConfig.LogMetrics instead.")]
public static bool LogMetrics { get; public set; }
    public static string EndpointDefinition { get; public set; }
    [ObsoleteAttribute("This property is obsolete. Use DynamoDBConfig.Context.TableNamePrefix instead.")]
public static string DynamoDBContextTableNamePrefix { get; public set; }
    [ObsoleteAttribute("This property is obsolete. Use S3Config.UseSignatureVersion4 instead.")]
public static bool S3UseSignatureVersion4 { get; public set; }
    [ObsoleteAttribute("This property is obsolete. Use EC2Config.UseSignatureVersion4 instead.")]
public static bool EC2UseSignatureVersion4 { get; public set; }
    public static LoggingConfig LoggingConfig { get; }
    public static DynamoDBConfig DynamoDBConfig { get; }
    public static S3Config S3Config { get; }
    public static EC2Config EC2Config { get; }
    public static ProxyConfig ProxyConfig { get; }
    public static RegionEndpoint RegionEndpoint { get; public set; }
    private static AWSConfigs();
    private static string GetConfig(string name);
    internal static bool XmlSectionExists(string sectionName);
    public static bool get_CorrectForClockSkew();
    public static void set_CorrectForClockSkew(bool value);
    [CompilerGeneratedAttribute]
public static TimeSpan get_ClockOffset();
    [CompilerGeneratedAttribute]
internal static void set_ClockOffset(TimeSpan value);
    public static string get_AWSRegion();
    public static void set_AWSRegion(string value);
    public static string get_AWSProfileName();
    public static void set_AWSProfileName(string value);
    public static string get_AWSProfilesLocation();
    public static void set_AWSProfilesLocation(string value);
    public static LoggingOptions get_Logging();
    public static void set_Logging(LoggingOptions value);
    private static LoggingOptions GetLoggingSetting();
    public static ResponseLoggingOption get_ResponseLogging();
    public static void set_ResponseLogging(ResponseLoggingOption value);
    public static bool get_LogMetrics();
    public static void set_LogMetrics(bool value);
    public static string get_EndpointDefinition();
    public static void set_EndpointDefinition(string value);
    public static string get_DynamoDBContextTableNamePrefix();
    public static void set_DynamoDBContextTableNamePrefix(string value);
    public static bool get_S3UseSignatureVersion4();
    public static void set_S3UseSignatureVersion4(bool value);
    public static bool get_EC2UseSignatureVersion4();
    public static void set_EC2UseSignatureVersion4(bool value);
    public static LoggingConfig get_LoggingConfig();
    public static DynamoDBConfig get_DynamoDBConfig();
    public static S3Config get_S3Config();
    public static EC2Config get_EC2Config();
    public static ProxyConfig get_ProxyConfig();
    public static RegionEndpoint get_RegionEndpoint();
    public static void set_RegionEndpoint(RegionEndpoint value);
    internal static void add_PropertyChanged(PropertyChangedEventHandler value);
    internal static void remove_PropertyChanged(PropertyChangedEventHandler value);
    internal static void OnPropertyChanged(string name);
    private static bool GetConfigBool(string name);
    private static T GetConfigEnum(string name);
    private static T ParseEnum(string value);
    private static bool TryParseEnum(string value, T& result);
}
public class Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient : AmazonServiceClient {
    public AmazonCloudSearchDomainClient(string serviceUrl);
    public AmazonCloudSearchDomainClient(AmazonCloudSearchDomainConfig config);
    public AmazonCloudSearchDomainClient(string serviceUrl, AWSCredentials credentials);
    public AmazonCloudSearchDomainClient(AWSCredentials credentials, AmazonCloudSearchDomainConfig clientConfig);
    public AmazonCloudSearchDomainClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonCloudSearchDomainClient(string awsAccessKeyId, string awsSecretAccessKey, string serviceUrl);
    public AmazonCloudSearchDomainClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonCloudSearchDomainConfig clientConfig);
    public AmazonCloudSearchDomainClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, string serviceUrl);
    public AmazonCloudSearchDomainClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonCloudSearchDomainConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual void Dispose(bool disposing);
    internal SearchResponse Search(SearchRequest request);
    public sealed virtual Task`1<SearchResponse> SearchAsync(SearchRequest request, CancellationToken cancellationToken);
    internal SuggestResponse Suggest(SuggestRequest request);
    public sealed virtual Task`1<SuggestResponse> SuggestAsync(SuggestRequest request, CancellationToken cancellationToken);
    internal UploadDocumentsResponse UploadDocuments(UploadDocumentsRequest request);
    public sealed virtual Task`1<UploadDocumentsResponse> UploadDocumentsAsync(UploadDocumentsRequest request, CancellationToken cancellationToken);
}
public class Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    internal virtual void Validate();
}
public class Amazon.CloudSearchDomain.AmazonCloudSearchDomainException : AmazonServiceException {
    public AmazonCloudSearchDomainException(string message);
    public AmazonCloudSearchDomainException(string message, Exception innerException);
    public AmazonCloudSearchDomainException(Exception innerException);
    public AmazonCloudSearchDomainException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonCloudSearchDomainException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudSearchDomain.AmazonCloudSearchDomainRequest : AmazonWebServiceRequest {
}
public class Amazon.CloudSearchDomain.ContentType : ConstantClass {
    public static ContentType ApplicationJson;
    public static ContentType ApplicationXml;
    public ContentType(string value);
    private static ContentType();
    public static ContentType FindValue(string value);
    public static ContentType op_Implicit(string value);
}
public interface Amazon.CloudSearchDomain.IAmazonCloudSearchDomain {
    public abstract virtual Task`1<SearchResponse> SearchAsync(SearchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SuggestResponse> SuggestAsync(SuggestRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UploadDocumentsResponse> UploadDocumentsAsync(UploadDocumentsRequest request, CancellationToken cancellationToken);
}
public class Amazon.CloudSearchDomain.Internal.ProcessExceptionHandler : PipelineHandler {
}
public class Amazon.CloudSearchDomain.Internal.ProcessRequestHandler : PipelineHandler {
}
public class Amazon.CloudSearchDomain.Internal.ValidationResponseHandler : PipelineHandler {
}
public class Amazon.CloudSearchDomain.Model.Bucket : object {
    private Nullable`1<long> _count;
    private string _value;
    public long Count { get; public set; }
    public string Value { get; public set; }
    public long get_Count();
    public void set_Count(long value);
    internal bool IsSetCount();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudSearchDomain.Model.BucketInfo : object {
    private List`1<Bucket> _buckets;
    public List`1<Bucket> Buckets { get; public set; }
    public List`1<Bucket> get_Buckets();
    public void set_Buckets(List`1<Bucket> value);
    internal bool IsSetBuckets();
}
public class Amazon.CloudSearchDomain.Model.DocumentServiceException : AmazonCloudSearchDomainException {
    public DocumentServiceException(string message);
    public DocumentServiceException(string message, Exception innerException);
    public DocumentServiceException(Exception innerException);
    public DocumentServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DocumentServiceException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CloudSearchDomain.Model.DocumentServiceWarning : object {
    private string _message;
    public string Message { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.CloudSearchDomain.Model.FieldStats : object {
    private Nullable`1<long> _count;
    private string _max;
    private string _mean;
    private string _min;
    private Nullable`1<long> _missing;
    private Nullable`1<double> _stddev;
    private Nullable`1<double> _sum;
    private Nullable`1<double> _sumOfSquares;
    public long Count { get; public set; }
    public string Max { get; public set; }
    public string Mean { get; public set; }
    public string Min { get; public set; }
    public long Missing { get; public set; }
    public double Stddev { get; public set; }
    public double Sum { get; public set; }
    public double SumOfSquares { get; public set; }
    public long get_Count();
    public void set_Count(long value);
    internal bool IsSetCount();
    public string get_Max();
    public void set_Max(string value);
    internal bool IsSetMax();
    public string get_Mean();
    public void set_Mean(string value);
    internal bool IsSetMean();
    public string get_Min();
    public void set_Min(string value);
    internal bool IsSetMin();
    public long get_Missing();
    public void set_Missing(long value);
    internal bool IsSetMissing();
    public double get_Stddev();
    public void set_Stddev(double value);
    internal bool IsSetStddev();
    public double get_Sum();
    public void set_Sum(double value);
    internal bool IsSetSum();
    public double get_SumOfSquares();
    public void set_SumOfSquares(double value);
    internal bool IsSetSumOfSquares();
}
public class Amazon.CloudSearchDomain.Model.Hit : object {
    private Dictionary`2<string, string> _exprs;
    private Dictionary`2<string, List`1<string>> _fields;
    private Dictionary`2<string, string> _highlights;
    private string _id;
    public Dictionary`2<string, string> Exprs { get; public set; }
    public Dictionary`2<string, List`1<string>> Fields { get; public set; }
    public Dictionary`2<string, string> Highlights { get; public set; }
    public string Id { get; public set; }
    public Dictionary`2<string, string> get_Exprs();
    public void set_Exprs(Dictionary`2<string, string> value);
    internal bool IsSetExprs();
    public Dictionary`2<string, List`1<string>> get_Fields();
    public void set_Fields(Dictionary`2<string, List`1<string>> value);
    internal bool IsSetFields();
    public Dictionary`2<string, string> get_Highlights();
    public void set_Highlights(Dictionary`2<string, string> value);
    internal bool IsSetHighlights();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudSearchDomain.Model.Hits : object {
    private string _cursor;
    private Nullable`1<long> _found;
    private List`1<Hit> _hit;
    private Nullable`1<long> _start;
    public string Cursor { get; public set; }
    public long Found { get; public set; }
    public List`1<Hit> Hit { get; public set; }
    public long Start { get; public set; }
    public string get_Cursor();
    public void set_Cursor(string value);
    internal bool IsSetCursor();
    public long get_Found();
    public void set_Found(long value);
    internal bool IsSetFound();
    public List`1<Hit> get_Hit();
    public void set_Hit(List`1<Hit> value);
    internal bool IsSetHit();
    public long get_Start();
    public void set_Start(long value);
    internal bool IsSetStart();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketInfoUnmarshaller : object {
    private static BucketInfoUnmarshaller _instance;
    public static BucketInfoUnmarshaller Instance { get; }
    private static BucketInfoUnmarshaller();
    private sealed virtual override BucketInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudSearchDomain.Model.BucketInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BucketInfo Unmarshall(JsonUnmarshallerContext context);
    public static BucketInfoUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketUnmarshaller : object {
    private static BucketUnmarshaller _instance;
    public static BucketUnmarshaller Instance { get; }
    private static BucketUnmarshaller();
    private sealed virtual override Bucket Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudSearchDomain.Model.Bucket,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Bucket Unmarshall(JsonUnmarshallerContext context);
    public static BucketUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.DocumentServiceWarningUnmarshaller : object {
    private static DocumentServiceWarningUnmarshaller _instance;
    public static DocumentServiceWarningUnmarshaller Instance { get; }
    private static DocumentServiceWarningUnmarshaller();
    private sealed virtual override DocumentServiceWarning Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudSearchDomain.Model.DocumentServiceWarning,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocumentServiceWarning Unmarshall(JsonUnmarshallerContext context);
    public static DocumentServiceWarningUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.FieldStatsUnmarshaller : object {
    private static FieldStatsUnmarshaller _instance;
    public static FieldStatsUnmarshaller Instance { get; }
    private static FieldStatsUnmarshaller();
    private sealed virtual override FieldStats Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudSearchDomain.Model.FieldStats,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldStats Unmarshall(JsonUnmarshallerContext context);
    public static FieldStatsUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitsUnmarshaller : object {
    private static HitsUnmarshaller _instance;
    public static HitsUnmarshaller Instance { get; }
    private static HitsUnmarshaller();
    private sealed virtual override Hits Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudSearchDomain.Model.Hits,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Hits Unmarshall(JsonUnmarshallerContext context);
    public static HitsUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitUnmarshaller : object {
    private static HitUnmarshaller _instance;
    public static HitUnmarshaller Instance { get; }
    private static HitUnmarshaller();
    private sealed virtual override Hit Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudSearchDomain.Model.Hit,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Hit Unmarshall(JsonUnmarshallerContext context);
    public static HitUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SearchRequest publicRequest);
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SearchResponseUnmarshaller _instance;
    public static SearchResponseUnmarshaller Instance { get; }
    private static SearchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SearchResponseUnmarshaller GetInstance();
    public static SearchResponseUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchStatusUnmarshaller : object {
    private static SearchStatusUnmarshaller _instance;
    public static SearchStatusUnmarshaller Instance { get; }
    private static SearchStatusUnmarshaller();
    private sealed virtual override SearchStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudSearchDomain.Model.SearchStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SearchStatus Unmarshall(JsonUnmarshallerContext context);
    public static SearchStatusUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestionMatchUnmarshaller : object {
    private static SuggestionMatchUnmarshaller _instance;
    public static SuggestionMatchUnmarshaller Instance { get; }
    private static SuggestionMatchUnmarshaller();
    private sealed virtual override SuggestionMatch Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudSearchDomain.Model.SuggestionMatch,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SuggestionMatch Unmarshall(JsonUnmarshallerContext context);
    public static SuggestionMatchUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestModelUnmarshaller : object {
    private static SuggestModelUnmarshaller _instance;
    public static SuggestModelUnmarshaller Instance { get; }
    private static SuggestModelUnmarshaller();
    private sealed virtual override SuggestModel Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudSearchDomain.Model.SuggestModel,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SuggestModel Unmarshall(JsonUnmarshallerContext context);
    public static SuggestModelUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SuggestRequest publicRequest);
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SuggestResponseUnmarshaller _instance;
    public static SuggestResponseUnmarshaller Instance { get; }
    private static SuggestResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SuggestResponseUnmarshaller GetInstance();
    public static SuggestResponseUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestStatusUnmarshaller : object {
    private static SuggestStatusUnmarshaller _instance;
    public static SuggestStatusUnmarshaller Instance { get; }
    private static SuggestStatusUnmarshaller();
    private sealed virtual override SuggestStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudSearchDomain.Model.SuggestStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SuggestStatus Unmarshall(JsonUnmarshallerContext context);
    public static SuggestStatusUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UploadDocumentsRequest publicRequest);
}
public class Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UploadDocumentsResponseUnmarshaller _instance;
    public static UploadDocumentsResponseUnmarshaller Instance { get; }
    private static UploadDocumentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UploadDocumentsResponseUnmarshaller GetInstance();
    public static UploadDocumentsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudSearchDomain.Model.SearchException : AmazonCloudSearchDomainException {
    public SearchException(string message);
    public SearchException(string message, Exception innerException);
    public SearchException(Exception innerException);
    public SearchException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public SearchException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CloudSearchDomain.Model.SearchRequest : AmazonCloudSearchDomainRequest {
    private string _cursor;
    private string _expr;
    private string _facet;
    private string _filterQuery;
    private string _highlight;
    private Nullable`1<bool> _partial;
    private string _query;
    private string _queryOptions;
    private QueryParser _queryParser;
    private string _return;
    private Nullable`1<long> _size;
    private string _sort;
    private Nullable`1<long> _start;
    private string _stats;
    public string Cursor { get; public set; }
    public string Expr { get; public set; }
    public string Facet { get; public set; }
    public string FilterQuery { get; public set; }
    public string Highlight { get; public set; }
    public bool Partial { get; public set; }
    public string Query { get; public set; }
    public string QueryOptions { get; public set; }
    public QueryParser QueryParser { get; public set; }
    public string Return { get; public set; }
    public long Size { get; public set; }
    public string Sort { get; public set; }
    public long Start { get; public set; }
    public string Stats { get; public set; }
    public string get_Cursor();
    public void set_Cursor(string value);
    internal bool IsSetCursor();
    public string get_Expr();
    public void set_Expr(string value);
    internal bool IsSetExpr();
    public string get_Facet();
    public void set_Facet(string value);
    internal bool IsSetFacet();
    public string get_FilterQuery();
    public void set_FilterQuery(string value);
    internal bool IsSetFilterQuery();
    public string get_Highlight();
    public void set_Highlight(string value);
    internal bool IsSetHighlight();
    public bool get_Partial();
    public void set_Partial(bool value);
    internal bool IsSetPartial();
    public string get_Query();
    public void set_Query(string value);
    internal bool IsSetQuery();
    public string get_QueryOptions();
    public void set_QueryOptions(string value);
    internal bool IsSetQueryOptions();
    public QueryParser get_QueryParser();
    public void set_QueryParser(QueryParser value);
    internal bool IsSetQueryParser();
    public string get_Return();
    public void set_Return(string value);
    internal bool IsSetReturn();
    public long get_Size();
    public void set_Size(long value);
    internal bool IsSetSize();
    public string get_Sort();
    public void set_Sort(string value);
    internal bool IsSetSort();
    public long get_Start();
    public void set_Start(long value);
    internal bool IsSetStart();
    public string get_Stats();
    public void set_Stats(string value);
    internal bool IsSetStats();
}
public class Amazon.CloudSearchDomain.Model.SearchResponse : SearchResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SearchResult class are now available on the SearchResponse class. You should use the properties on SearchResponse instead of accessing them through SearchResult.")]
public SearchResult SearchResult { get; }
    public SearchResult get_SearchResult();
}
public class Amazon.CloudSearchDomain.Model.SearchResult : AmazonWebServiceResponse {
    private Dictionary`2<string, BucketInfo> _facets;
    private Hits _hits;
    private Dictionary`2<string, FieldStats> _stats;
    private SearchStatus _status;
    public Dictionary`2<string, BucketInfo> Facets { get; public set; }
    public Hits Hits { get; public set; }
    public Dictionary`2<string, FieldStats> Stats { get; public set; }
    public SearchStatus Status { get; public set; }
    public Dictionary`2<string, BucketInfo> get_Facets();
    public void set_Facets(Dictionary`2<string, BucketInfo> value);
    internal bool IsSetFacets();
    public Hits get_Hits();
    public void set_Hits(Hits value);
    internal bool IsSetHits();
    public Dictionary`2<string, FieldStats> get_Stats();
    public void set_Stats(Dictionary`2<string, FieldStats> value);
    internal bool IsSetStats();
    public SearchStatus get_Status();
    public void set_Status(SearchStatus value);
    internal bool IsSetStatus();
}
public class Amazon.CloudSearchDomain.Model.SearchStatus : object {
    private string _rid;
    private Nullable`1<long> _timems;
    public string Rid { get; public set; }
    public long Timems { get; public set; }
    public string get_Rid();
    public void set_Rid(string value);
    internal bool IsSetRid();
    public long get_Timems();
    public void set_Timems(long value);
    internal bool IsSetTimems();
}
public class Amazon.CloudSearchDomain.Model.SuggestionMatch : object {
    private string _id;
    private Nullable`1<long> _score;
    private string _suggestion;
    public string Id { get; public set; }
    public long Score { get; public set; }
    public string Suggestion { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public long get_Score();
    public void set_Score(long value);
    internal bool IsSetScore();
    public string get_Suggestion();
    public void set_Suggestion(string value);
    internal bool IsSetSuggestion();
}
public class Amazon.CloudSearchDomain.Model.SuggestModel : object {
    private Nullable`1<long> _found;
    private string _query;
    private List`1<SuggestionMatch> _suggestions;
    public long Found { get; public set; }
    public string Query { get; public set; }
    public List`1<SuggestionMatch> Suggestions { get; public set; }
    public long get_Found();
    public void set_Found(long value);
    internal bool IsSetFound();
    public string get_Query();
    public void set_Query(string value);
    internal bool IsSetQuery();
    public List`1<SuggestionMatch> get_Suggestions();
    public void set_Suggestions(List`1<SuggestionMatch> value);
    internal bool IsSetSuggestions();
}
public class Amazon.CloudSearchDomain.Model.SuggestRequest : AmazonCloudSearchDomainRequest {
    private string _query;
    private Nullable`1<long> _size;
    private string _suggester;
    public string Query { get; public set; }
    public long Size { get; public set; }
    public string Suggester { get; public set; }
    public string get_Query();
    public void set_Query(string value);
    internal bool IsSetQuery();
    public long get_Size();
    public void set_Size(long value);
    internal bool IsSetSize();
    public string get_Suggester();
    public void set_Suggester(string value);
    internal bool IsSetSuggester();
}
public class Amazon.CloudSearchDomain.Model.SuggestResponse : SuggestResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SuggestResult class are now available on the SuggestResponse class. You should use the properties on SuggestResponse instead of accessing them through SuggestResult.")]
public SuggestResult SuggestResult { get; }
    public SuggestResult get_SuggestResult();
}
public class Amazon.CloudSearchDomain.Model.SuggestResult : AmazonWebServiceResponse {
    private SuggestStatus _status;
    private SuggestModel _suggest;
    public SuggestStatus Status { get; public set; }
    public SuggestModel Suggest { get; public set; }
    public SuggestStatus get_Status();
    public void set_Status(SuggestStatus value);
    internal bool IsSetStatus();
    public SuggestModel get_Suggest();
    public void set_Suggest(SuggestModel value);
    internal bool IsSetSuggest();
}
public class Amazon.CloudSearchDomain.Model.SuggestStatus : object {
    private string _rid;
    private Nullable`1<long> _timems;
    public string Rid { get; public set; }
    public long Timems { get; public set; }
    public string get_Rid();
    public void set_Rid(string value);
    internal bool IsSetRid();
    public long get_Timems();
    public void set_Timems(long value);
    internal bool IsSetTimems();
}
public class Amazon.CloudSearchDomain.Model.UploadDocumentsRequest : AmazonCloudSearchDomainRequest {
    private ContentType _contentType;
    private Stream _documents;
    public ContentType ContentType { get; public set; }
    public Stream Documents { get; public set; }
    public ContentType get_ContentType();
    public void set_ContentType(ContentType value);
    internal bool IsSetContentType();
    public Stream get_Documents();
    public void set_Documents(Stream value);
    internal bool IsSetDocuments();
}
public class Amazon.CloudSearchDomain.Model.UploadDocumentsResponse : UploadDocumentsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UploadDocumentsResult class are now available on the UploadDocumentsResponse class. You should use the properties on UploadDocumentsResponse instead of accessing them through UploadDocumentsResult.")]
public UploadDocumentsResult UploadDocumentsResult { get; }
    public UploadDocumentsResult get_UploadDocumentsResult();
}
public class Amazon.CloudSearchDomain.Model.UploadDocumentsResult : AmazonWebServiceResponse {
    private Nullable`1<long> _adds;
    private Nullable`1<long> _deletes;
    private string _status;
    private List`1<DocumentServiceWarning> _warnings;
    public long Adds { get; public set; }
    public long Deletes { get; public set; }
    public string Status { get; public set; }
    public List`1<DocumentServiceWarning> Warnings { get; public set; }
    public long get_Adds();
    public void set_Adds(long value);
    internal bool IsSetAdds();
    public long get_Deletes();
    public void set_Deletes(long value);
    internal bool IsSetDeletes();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public List`1<DocumentServiceWarning> get_Warnings();
    public void set_Warnings(List`1<DocumentServiceWarning> value);
    internal bool IsSetWarnings();
}
public class Amazon.CloudSearchDomain.QueryParser : ConstantClass {
    public static QueryParser Dismax;
    public static QueryParser Lucene;
    public static QueryParser Simple;
    public static QueryParser Structured;
    public QueryParser(string value);
    private static QueryParser();
    public static QueryParser FindValue(string value);
    public static QueryParser op_Implicit(string value);
}
public class Amazon.CloudWatch.AmazonCloudWatchClient : AmazonServiceClient {
    public AmazonCloudWatchClient(AWSCredentials credentials);
    public AmazonCloudWatchClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonCloudWatchClient(AWSCredentials credentials, AmazonCloudWatchConfig clientConfig);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonCloudWatchConfig clientConfig);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonCloudWatchConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void Dispose(bool disposing);
    internal DeleteAlarmsResponse DeleteAlarms(DeleteAlarmsRequest request);
    public sealed virtual Task`1<DeleteAlarmsResponse> DeleteAlarmsAsync(DeleteAlarmsRequest request, CancellationToken cancellationToken);
    internal DescribeAlarmHistoryResponse DescribeAlarmHistory();
    internal DescribeAlarmHistoryResponse DescribeAlarmHistory(DescribeAlarmHistoryRequest request);
    public sealed virtual Task`1<DescribeAlarmHistoryResponse> DescribeAlarmHistoryAsync(DescribeAlarmHistoryRequest request, CancellationToken cancellationToken);
    internal DescribeAlarmsResponse DescribeAlarms();
    internal DescribeAlarmsResponse DescribeAlarms(DescribeAlarmsRequest request);
    public sealed virtual Task`1<DescribeAlarmsResponse> DescribeAlarmsAsync(DescribeAlarmsRequest request, CancellationToken cancellationToken);
    internal DescribeAlarmsForMetricResponse DescribeAlarmsForMetric(DescribeAlarmsForMetricRequest request);
    public sealed virtual Task`1<DescribeAlarmsForMetricResponse> DescribeAlarmsForMetricAsync(DescribeAlarmsForMetricRequest request, CancellationToken cancellationToken);
    internal DisableAlarmActionsResponse DisableAlarmActions(DisableAlarmActionsRequest request);
    public sealed virtual Task`1<DisableAlarmActionsResponse> DisableAlarmActionsAsync(DisableAlarmActionsRequest request, CancellationToken cancellationToken);
    internal EnableAlarmActionsResponse EnableAlarmActions(EnableAlarmActionsRequest request);
    public sealed virtual Task`1<EnableAlarmActionsResponse> EnableAlarmActionsAsync(EnableAlarmActionsRequest request, CancellationToken cancellationToken);
    internal GetMetricStatisticsResponse GetMetricStatistics(GetMetricStatisticsRequest request);
    public sealed virtual Task`1<GetMetricStatisticsResponse> GetMetricStatisticsAsync(GetMetricStatisticsRequest request, CancellationToken cancellationToken);
    internal ListMetricsResponse ListMetrics();
    internal ListMetricsResponse ListMetrics(ListMetricsRequest request);
    public sealed virtual Task`1<ListMetricsResponse> ListMetricsAsync(ListMetricsRequest request, CancellationToken cancellationToken);
    internal PutMetricAlarmResponse PutMetricAlarm(PutMetricAlarmRequest request);
    public sealed virtual Task`1<PutMetricAlarmResponse> PutMetricAlarmAsync(PutMetricAlarmRequest request, CancellationToken cancellationToken);
    internal PutMetricDataResponse PutMetricData(PutMetricDataRequest request);
    public sealed virtual Task`1<PutMetricDataResponse> PutMetricDataAsync(PutMetricDataRequest request, CancellationToken cancellationToken);
    internal SetAlarmStateResponse SetAlarmState(SetAlarmStateRequest request);
    public sealed virtual Task`1<SetAlarmStateResponse> SetAlarmStateAsync(SetAlarmStateRequest request, CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.AmazonCloudWatchConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.CloudWatch.AmazonCloudWatchException : AmazonServiceException {
    public AmazonCloudWatchException(string message);
    public AmazonCloudWatchException(string message, Exception innerException);
    public AmazonCloudWatchException(Exception innerException);
    public AmazonCloudWatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonCloudWatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.AmazonCloudWatchRequest : AmazonWebServiceRequest {
}
public class Amazon.CloudWatch.ComparisonOperator : ConstantClass {
    public static ComparisonOperator GreaterThanOrEqualToThreshold;
    public static ComparisonOperator GreaterThanThreshold;
    public static ComparisonOperator LessThanOrEqualToThreshold;
    public static ComparisonOperator LessThanThreshold;
    public ComparisonOperator(string value);
    private static ComparisonOperator();
    public static ComparisonOperator FindValue(string value);
    public static ComparisonOperator op_Implicit(string value);
}
public class Amazon.CloudWatch.HistoryItemType : ConstantClass {
    public static HistoryItemType Action;
    public static HistoryItemType ConfigurationUpdate;
    public static HistoryItemType StateUpdate;
    public HistoryItemType(string value);
    private static HistoryItemType();
    public static HistoryItemType FindValue(string value);
    public static HistoryItemType op_Implicit(string value);
}
public interface Amazon.CloudWatch.IAmazonCloudWatch {
    public abstract virtual Task`1<DeleteAlarmsResponse> DeleteAlarmsAsync(DeleteAlarmsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAlarmHistoryResponse> DescribeAlarmHistoryAsync(DescribeAlarmHistoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAlarmsResponse> DescribeAlarmsAsync(DescribeAlarmsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAlarmsForMetricResponse> DescribeAlarmsForMetricAsync(DescribeAlarmsForMetricRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableAlarmActionsResponse> DisableAlarmActionsAsync(DisableAlarmActionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableAlarmActionsResponse> EnableAlarmActionsAsync(EnableAlarmActionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMetricStatisticsResponse> GetMetricStatisticsAsync(GetMetricStatisticsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListMetricsResponse> ListMetricsAsync(ListMetricsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutMetricAlarmResponse> PutMetricAlarmAsync(PutMetricAlarmRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutMetricDataResponse> PutMetricDataAsync(PutMetricDataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetAlarmStateResponse> SetAlarmStateAsync(SetAlarmStateRequest request, CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.Model.AlarmHistoryItem : object {
    private string _alarmName;
    private string _historyData;
    private HistoryItemType _historyItemType;
    private string _historySummary;
    private Nullable`1<DateTime> _timestamp;
    public string AlarmName { get; public set; }
    public string HistoryData { get; public set; }
    public HistoryItemType HistoryItemType { get; public set; }
    public string HistorySummary { get; public set; }
    public DateTime Timestamp { get; public set; }
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public string get_HistoryData();
    public void set_HistoryData(string value);
    internal bool IsSetHistoryData();
    public HistoryItemType get_HistoryItemType();
    public void set_HistoryItemType(HistoryItemType value);
    internal bool IsSetHistoryItemType();
    public string get_HistorySummary();
    public void set_HistorySummary(string value);
    internal bool IsSetHistorySummary();
    public DateTime get_Timestamp();
    public void set_Timestamp(DateTime value);
    internal bool IsSetTimestamp();
}
public class Amazon.CloudWatch.Model.Datapoint : object {
    private Nullable`1<double> _average;
    private Nullable`1<double> _maximum;
    private Nullable`1<double> _minimum;
    private Nullable`1<double> _sampleCount;
    private Nullable`1<double> _sum;
    private Nullable`1<DateTime> _timestamp;
    private StandardUnit _unit;
    public double Average { get; public set; }
    public double Maximum { get; public set; }
    public double Minimum { get; public set; }
    public double SampleCount { get; public set; }
    public double Sum { get; public set; }
    public DateTime Timestamp { get; public set; }
    public StandardUnit Unit { get; public set; }
    public double get_Average();
    public void set_Average(double value);
    internal bool IsSetAverage();
    public double get_Maximum();
    public void set_Maximum(double value);
    internal bool IsSetMaximum();
    public double get_Minimum();
    public void set_Minimum(double value);
    internal bool IsSetMinimum();
    public double get_SampleCount();
    public void set_SampleCount(double value);
    internal bool IsSetSampleCount();
    public double get_Sum();
    public void set_Sum(double value);
    internal bool IsSetSum();
    public DateTime get_Timestamp();
    public void set_Timestamp(DateTime value);
    internal bool IsSetTimestamp();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatch.Model.DeleteAlarmsRequest : AmazonCloudWatchRequest {
    private List`1<string> _alarmNames;
    public List`1<string> AlarmNames { get; public set; }
    public List`1<string> get_AlarmNames();
    public void set_AlarmNames(List`1<string> value);
    internal bool IsSetAlarmNames();
}
public class Amazon.CloudWatch.Model.DeleteAlarmsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest : AmazonCloudWatchRequest {
    private string _alarmName;
    private Nullable`1<DateTime> _endDate;
    private HistoryItemType _historyItemType;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    private Nullable`1<DateTime> _startDate;
    public string AlarmName { get; public set; }
    public DateTime EndDate { get; public set; }
    public HistoryItemType HistoryItemType { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public DateTime StartDate { get; public set; }
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public DateTime get_EndDate();
    public void set_EndDate(DateTime value);
    internal bool IsSetEndDate();
    public HistoryItemType get_HistoryItemType();
    public void set_HistoryItemType(HistoryItemType value);
    internal bool IsSetHistoryItemType();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public DateTime get_StartDate();
    public void set_StartDate(DateTime value);
    internal bool IsSetStartDate();
}
public class Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse : DescribeAlarmHistoryResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAlarmHistoryResult class are now available on the DescribeAlarmHistoryResponse class. You should use the properties on DescribeAlarmHistoryResponse instead of accessing them through DescribeAlarmHistoryResult.")]
public DescribeAlarmHistoryResult DescribeAlarmHistoryResult { get; }
    public DescribeAlarmHistoryResult get_DescribeAlarmHistoryResult();
}
public class Amazon.CloudWatch.Model.DescribeAlarmHistoryResult : AmazonWebServiceResponse {
    private List`1<AlarmHistoryItem> _alarmHistoryItems;
    private string _nextToken;
    public List`1<AlarmHistoryItem> AlarmHistoryItems { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AlarmHistoryItem> get_AlarmHistoryItems();
    public void set_AlarmHistoryItems(List`1<AlarmHistoryItem> value);
    internal bool IsSetAlarmHistoryItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest : AmazonCloudWatchRequest {
    private List`1<Dimension> _dimensions;
    private string _metricName;
    private string _awsNamespace;
    private Nullable`1<int> _period;
    private Statistic _statistic;
    private StandardUnit _unit;
    public List`1<Dimension> Dimensions { get; public set; }
    public string MetricName { get; public set; }
    public string Namespace { get; public set; }
    public int Period { get; public set; }
    public Statistic Statistic { get; public set; }
    public StandardUnit Unit { get; public set; }
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public int get_Period();
    public void set_Period(int value);
    internal bool IsSetPeriod();
    public Statistic get_Statistic();
    public void set_Statistic(Statistic value);
    internal bool IsSetStatistic();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatch.Model.DescribeAlarmsForMetricResponse : DescribeAlarmsForMetricResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAlarmsForMetricResult class are now available on the DescribeAlarmsForMetricResponse class. You should use the properties on DescribeAlarmsForMetricResponse instead of accessing them through DescribeAlarmsForMetricResult.")]
public DescribeAlarmsForMetricResult DescribeAlarmsForMetricResult { get; }
    public DescribeAlarmsForMetricResult get_DescribeAlarmsForMetricResult();
}
public class Amazon.CloudWatch.Model.DescribeAlarmsForMetricResult : AmazonWebServiceResponse {
    private List`1<MetricAlarm> _metricAlarms;
    public List`1<MetricAlarm> MetricAlarms { get; public set; }
    public List`1<MetricAlarm> get_MetricAlarms();
    public void set_MetricAlarms(List`1<MetricAlarm> value);
    internal bool IsSetMetricAlarms();
}
public class Amazon.CloudWatch.Model.DescribeAlarmsRequest : AmazonCloudWatchRequest {
    private string _actionPrefix;
    private string _alarmNamePrefix;
    private List`1<string> _alarmNames;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    private StateValue _stateValue;
    public string ActionPrefix { get; public set; }
    public string AlarmNamePrefix { get; public set; }
    public List`1<string> AlarmNames { get; public set; }
    public int MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public StateValue StateValue { get; public set; }
    public string get_ActionPrefix();
    public void set_ActionPrefix(string value);
    internal bool IsSetActionPrefix();
    public string get_AlarmNamePrefix();
    public void set_AlarmNamePrefix(string value);
    internal bool IsSetAlarmNamePrefix();
    public List`1<string> get_AlarmNames();
    public void set_AlarmNames(List`1<string> value);
    internal bool IsSetAlarmNames();
    public int get_MaxRecords();
    public void set_MaxRecords(int value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public StateValue get_StateValue();
    public void set_StateValue(StateValue value);
    internal bool IsSetStateValue();
}
public class Amazon.CloudWatch.Model.DescribeAlarmsResponse : DescribeAlarmsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAlarmsResult class are now available on the DescribeAlarmsResponse class. You should use the properties on DescribeAlarmsResponse instead of accessing them through DescribeAlarmsResult.")]
public DescribeAlarmsResult DescribeAlarmsResult { get; }
    public DescribeAlarmsResult get_DescribeAlarmsResult();
}
public class Amazon.CloudWatch.Model.DescribeAlarmsResult : AmazonWebServiceResponse {
    private List`1<MetricAlarm> _metricAlarms;
    private string _nextToken;
    public List`1<MetricAlarm> MetricAlarms { get; public set; }
    public string NextToken { get; public set; }
    public List`1<MetricAlarm> get_MetricAlarms();
    public void set_MetricAlarms(List`1<MetricAlarm> value);
    internal bool IsSetMetricAlarms();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.Dimension : object {
    private string _name;
    private string _value;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudWatch.Model.DimensionFilter : object {
    private string _name;
    private string _value;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudWatch.Model.DisableAlarmActionsRequest : AmazonCloudWatchRequest {
    private List`1<string> _alarmNames;
    public List`1<string> AlarmNames { get; public set; }
    public List`1<string> get_AlarmNames();
    public void set_AlarmNames(List`1<string> value);
    internal bool IsSetAlarmNames();
}
public class Amazon.CloudWatch.Model.DisableAlarmActionsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.EnableAlarmActionsRequest : AmazonCloudWatchRequest {
    private List`1<string> _alarmNames;
    public List`1<string> AlarmNames { get; public set; }
    public List`1<string> get_AlarmNames();
    public void set_AlarmNames(List`1<string> value);
    internal bool IsSetAlarmNames();
}
public class Amazon.CloudWatch.Model.EnableAlarmActionsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.GetMetricStatisticsRequest : AmazonCloudWatchRequest {
    private List`1<Dimension> _dimensions;
    private Nullable`1<DateTime> _endTime;
    private string _metricName;
    private string _awsNamespace;
    private Nullable`1<int> _period;
    private Nullable`1<DateTime> _startTime;
    private List`1<string> _statistics;
    private StandardUnit _unit;
    public List`1<Dimension> Dimensions { get; public set; }
    public DateTime EndTime { get; public set; }
    public string MetricName { get; public set; }
    public string Namespace { get; public set; }
    public int Period { get; public set; }
    public DateTime StartTime { get; public set; }
    public List`1<string> Statistics { get; public set; }
    public StandardUnit Unit { get; public set; }
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public DateTime get_EndTime();
    public void set_EndTime(DateTime value);
    internal bool IsSetEndTime();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public int get_Period();
    public void set_Period(int value);
    internal bool IsSetPeriod();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
    public List`1<string> get_Statistics();
    public void set_Statistics(List`1<string> value);
    internal bool IsSetStatistics();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatch.Model.GetMetricStatisticsResponse : GetMetricStatisticsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetMetricStatisticsResult class are now available on the GetMetricStatisticsResponse class. You should use the properties on GetMetricStatisticsResponse instead of accessing them through GetMetricStatisticsResult.")]
public GetMetricStatisticsResult GetMetricStatisticsResult { get; }
    public GetMetricStatisticsResult get_GetMetricStatisticsResult();
}
public class Amazon.CloudWatch.Model.GetMetricStatisticsResult : AmazonWebServiceResponse {
    private List`1<Datapoint> _datapoints;
    private string _label;
    public List`1<Datapoint> Datapoints { get; public set; }
    public string Label { get; public set; }
    public List`1<Datapoint> get_Datapoints();
    public void set_Datapoints(List`1<Datapoint> value);
    internal bool IsSetDatapoints();
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller : object {
    private static AlarmHistoryItemUnmarshaller _instance;
    public static AlarmHistoryItemUnmarshaller Instance { get; }
    private static AlarmHistoryItemUnmarshaller();
    public sealed virtual AlarmHistoryItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AlarmHistoryItem Unmarshall(JsonUnmarshallerContext context);
    public static AlarmHistoryItemUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller : object {
    private static DatapointUnmarshaller _instance;
    public static DatapointUnmarshaller Instance { get; }
    private static DatapointUnmarshaller();
    public sealed virtual Datapoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Datapoint Unmarshall(JsonUnmarshallerContext context);
    public static DatapointUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAlarmsRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAlarmsResponseUnmarshaller _instance;
    public static DeleteAlarmsResponseUnmarshaller Instance { get; }
    private static DeleteAlarmsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteAlarmsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAlarmsResponseUnmarshaller GetInstance();
    public static DeleteAlarmsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAlarmHistoryRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAlarmHistoryResponseUnmarshaller _instance;
    public static DescribeAlarmHistoryResponseUnmarshaller Instance { get; }
    private static DescribeAlarmHistoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAlarmHistoryResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAlarmHistoryResponseUnmarshaller GetInstance();
    public static DescribeAlarmHistoryResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAlarmsForMetricRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAlarmsForMetricResponseUnmarshaller _instance;
    public static DescribeAlarmsForMetricResponseUnmarshaller Instance { get; }
    private static DescribeAlarmsForMetricResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAlarmsForMetricResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAlarmsForMetricResponseUnmarshaller GetInstance();
    public static DescribeAlarmsForMetricResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAlarmsRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAlarmsResponseUnmarshaller _instance;
    public static DescribeAlarmsResponseUnmarshaller Instance { get; }
    private static DescribeAlarmsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAlarmsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAlarmsResponseUnmarshaller GetInstance();
    public static DescribeAlarmsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller : object {
    private static DimensionUnmarshaller _instance;
    public static DimensionUnmarshaller Instance { get; }
    private static DimensionUnmarshaller();
    public sealed virtual Dimension Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Dimension Unmarshall(JsonUnmarshallerContext context);
    public static DimensionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableAlarmActionsRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DisableAlarmActionsResponseUnmarshaller _instance;
    public static DisableAlarmActionsResponseUnmarshaller Instance { get; }
    private static DisableAlarmActionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DisableAlarmActionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableAlarmActionsResponseUnmarshaller GetInstance();
    public static DisableAlarmActionsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableAlarmActionsRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static EnableAlarmActionsResponseUnmarshaller _instance;
    public static EnableAlarmActionsResponseUnmarshaller Instance { get; }
    private static EnableAlarmActionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, EnableAlarmActionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableAlarmActionsResponseUnmarshaller GetInstance();
    public static EnableAlarmActionsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMetricStatisticsRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetMetricStatisticsResponseUnmarshaller _instance;
    public static GetMetricStatisticsResponseUnmarshaller Instance { get; }
    private static GetMetricStatisticsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetMetricStatisticsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMetricStatisticsResponseUnmarshaller GetInstance();
    public static GetMetricStatisticsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMetricsRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListMetricsResponseUnmarshaller _instance;
    public static ListMetricsResponseUnmarshaller Instance { get; }
    private static ListMetricsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListMetricsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListMetricsResponseUnmarshaller GetInstance();
    public static ListMetricsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller : object {
    private static MetricAlarmUnmarshaller _instance;
    public static MetricAlarmUnmarshaller Instance { get; }
    private static MetricAlarmUnmarshaller();
    public sealed virtual MetricAlarm Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricAlarm Unmarshall(JsonUnmarshallerContext context);
    public static MetricAlarmUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller : object {
    private static MetricUnmarshaller _instance;
    public static MetricUnmarshaller Instance { get; }
    private static MetricUnmarshaller();
    public sealed virtual Metric Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Metric Unmarshall(JsonUnmarshallerContext context);
    public static MetricUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutMetricAlarmRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutMetricAlarmResponseUnmarshaller _instance;
    public static PutMetricAlarmResponseUnmarshaller Instance { get; }
    private static PutMetricAlarmResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutMetricAlarmResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutMetricAlarmResponseUnmarshaller GetInstance();
    public static PutMetricAlarmResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutMetricDataRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutMetricDataResponseUnmarshaller _instance;
    public static PutMetricDataResponseUnmarshaller Instance { get; }
    private static PutMetricDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutMetricDataResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutMetricDataResponseUnmarshaller GetInstance();
    public static PutMetricDataResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetAlarmStateRequest publicRequest);
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetAlarmStateResponseUnmarshaller _instance;
    public static SetAlarmStateResponseUnmarshaller Instance { get; }
    private static SetAlarmStateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetAlarmStateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetAlarmStateResponseUnmarshaller GetInstance();
    public static SetAlarmStateResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.InternalServiceException : AmazonCloudWatchException {
    public InternalServiceException(string message);
    public InternalServiceException(string message, Exception innerException);
    public InternalServiceException(Exception innerException);
    public InternalServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InternalServiceException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.InvalidFormatException : AmazonCloudWatchException {
    public InvalidFormatException(string message);
    public InvalidFormatException(string message, Exception innerException);
    public InvalidFormatException(Exception innerException);
    public InvalidFormatException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidFormatException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.InvalidNextTokenException : AmazonCloudWatchException {
    public InvalidNextTokenException(string message);
    public InvalidNextTokenException(string message, Exception innerException);
    public InvalidNextTokenException(Exception innerException);
    public InvalidNextTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidNextTokenException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.InvalidParameterCombinationException : AmazonCloudWatchException {
    public InvalidParameterCombinationException(string message);
    public InvalidParameterCombinationException(string message, Exception innerException);
    public InvalidParameterCombinationException(Exception innerException);
    public InvalidParameterCombinationException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidParameterCombinationException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.InvalidParameterValueException : AmazonCloudWatchException {
    public InvalidParameterValueException(string message);
    public InvalidParameterValueException(string message, Exception innerException);
    public InvalidParameterValueException(Exception innerException);
    public InvalidParameterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidParameterValueException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.LimitExceededException : AmazonCloudWatchException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.ListMetricsRequest : AmazonCloudWatchRequest {
    private List`1<DimensionFilter> _dimensions;
    private string _metricName;
    private string _awsNamespace;
    private string _nextToken;
    public List`1<DimensionFilter> Dimensions { get; public set; }
    public string MetricName { get; public set; }
    public string Namespace { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DimensionFilter> get_Dimensions();
    public void set_Dimensions(List`1<DimensionFilter> value);
    internal bool IsSetDimensions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.ListMetricsResponse : ListMetricsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListMetricsResult class are now available on the ListMetricsResponse class. You should use the properties on ListMetricsResponse instead of accessing them through ListMetricsResult.")]
public ListMetricsResult ListMetricsResult { get; }
    public ListMetricsResult get_ListMetricsResult();
}
public class Amazon.CloudWatch.Model.ListMetricsResult : AmazonWebServiceResponse {
    private List`1<Metric> _metrics;
    private string _nextToken;
    public List`1<Metric> Metrics { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Metric> get_Metrics();
    public void set_Metrics(List`1<Metric> value);
    internal bool IsSetMetrics();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.Metric : object {
    private List`1<Dimension> _dimensions;
    private string _metricName;
    private string _awsNamespace;
    public List`1<Dimension> Dimensions { get; public set; }
    public string MetricName { get; public set; }
    public string Namespace { get; public set; }
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
}
public class Amazon.CloudWatch.Model.MetricAlarm : object {
    private Nullable`1<bool> _actionsEnabled;
    private List`1<string> _alarmActions;
    private string _alarmArn;
    private Nullable`1<DateTime> _alarmConfigurationUpdatedTimestamp;
    private string _alarmDescription;
    private string _alarmName;
    private ComparisonOperator _comparisonOperator;
    private List`1<Dimension> _dimensions;
    private Nullable`1<int> _evaluationPeriods;
    private List`1<string> _insufficientDataActions;
    private string _metricName;
    private string _awsNamespace;
    private List`1<string> _okActions;
    private Nullable`1<int> _period;
    private string _stateReason;
    private string _stateReasonData;
    private Nullable`1<DateTime> _stateUpdatedTimestamp;
    private StateValue _stateValue;
    private Statistic _statistic;
    private Nullable`1<double> _threshold;
    private StandardUnit _unit;
    public bool ActionsEnabled { get; public set; }
    public List`1<string> AlarmActions { get; public set; }
    public string AlarmArn { get; public set; }
    public DateTime AlarmConfigurationUpdatedTimestamp { get; public set; }
    public string AlarmDescription { get; public set; }
    public string AlarmName { get; public set; }
    public ComparisonOperator ComparisonOperator { get; public set; }
    public List`1<Dimension> Dimensions { get; public set; }
    public int EvaluationPeriods { get; public set; }
    public List`1<string> InsufficientDataActions { get; public set; }
    public string MetricName { get; public set; }
    public string Namespace { get; public set; }
    public List`1<string> OKActions { get; public set; }
    public int Period { get; public set; }
    public string StateReason { get; public set; }
    public string StateReasonData { get; public set; }
    public DateTime StateUpdatedTimestamp { get; public set; }
    public StateValue StateValue { get; public set; }
    public Statistic Statistic { get; public set; }
    public double Threshold { get; public set; }
    public StandardUnit Unit { get; public set; }
    public bool get_ActionsEnabled();
    public void set_ActionsEnabled(bool value);
    internal bool IsSetActionsEnabled();
    public List`1<string> get_AlarmActions();
    public void set_AlarmActions(List`1<string> value);
    internal bool IsSetAlarmActions();
    public string get_AlarmArn();
    public void set_AlarmArn(string value);
    internal bool IsSetAlarmArn();
    public DateTime get_AlarmConfigurationUpdatedTimestamp();
    public void set_AlarmConfigurationUpdatedTimestamp(DateTime value);
    internal bool IsSetAlarmConfigurationUpdatedTimestamp();
    public string get_AlarmDescription();
    public void set_AlarmDescription(string value);
    internal bool IsSetAlarmDescription();
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public ComparisonOperator get_ComparisonOperator();
    public void set_ComparisonOperator(ComparisonOperator value);
    internal bool IsSetComparisonOperator();
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public int get_EvaluationPeriods();
    public void set_EvaluationPeriods(int value);
    internal bool IsSetEvaluationPeriods();
    public List`1<string> get_InsufficientDataActions();
    public void set_InsufficientDataActions(List`1<string> value);
    internal bool IsSetInsufficientDataActions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public List`1<string> get_OKActions();
    public void set_OKActions(List`1<string> value);
    internal bool IsSetOKActions();
    public int get_Period();
    public void set_Period(int value);
    internal bool IsSetPeriod();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public string get_StateReasonData();
    public void set_StateReasonData(string value);
    internal bool IsSetStateReasonData();
    public DateTime get_StateUpdatedTimestamp();
    public void set_StateUpdatedTimestamp(DateTime value);
    internal bool IsSetStateUpdatedTimestamp();
    public StateValue get_StateValue();
    public void set_StateValue(StateValue value);
    internal bool IsSetStateValue();
    public Statistic get_Statistic();
    public void set_Statistic(Statistic value);
    internal bool IsSetStatistic();
    public double get_Threshold();
    public void set_Threshold(double value);
    internal bool IsSetThreshold();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatch.Model.MetricDatum : object {
    private List`1<Dimension> _dimensions;
    private string _metricName;
    private StatisticSet _statisticValues;
    private Nullable`1<DateTime> _timestamp;
    private StandardUnit _unit;
    private Nullable`1<double> _value;
    public List`1<Dimension> Dimensions { get; public set; }
    public string MetricName { get; public set; }
    public StatisticSet StatisticValues { get; public set; }
    public DateTime Timestamp { get; public set; }
    public StandardUnit Unit { get; public set; }
    public double Value { get; public set; }
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public StatisticSet get_StatisticValues();
    public void set_StatisticValues(StatisticSet value);
    internal bool IsSetStatisticValues();
    public DateTime get_Timestamp();
    public void set_Timestamp(DateTime value);
    internal bool IsSetTimestamp();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
    public double get_Value();
    public void set_Value(double value);
    internal bool IsSetValue();
}
public class Amazon.CloudWatch.Model.MissingRequiredParameterException : AmazonCloudWatchException {
    public MissingRequiredParameterException(string message);
    public MissingRequiredParameterException(string message, Exception innerException);
    public MissingRequiredParameterException(Exception innerException);
    public MissingRequiredParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public MissingRequiredParameterException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.PutMetricAlarmRequest : AmazonCloudWatchRequest {
    private Nullable`1<bool> _actionsEnabled;
    private List`1<string> _alarmActions;
    private string _alarmDescription;
    private string _alarmName;
    private ComparisonOperator _comparisonOperator;
    private List`1<Dimension> _dimensions;
    private Nullable`1<int> _evaluationPeriods;
    private List`1<string> _insufficientDataActions;
    private string _metricName;
    private string _awsNamespace;
    private List`1<string> _okActions;
    private Nullable`1<int> _period;
    private Statistic _statistic;
    private Nullable`1<double> _threshold;
    private StandardUnit _unit;
    public bool ActionsEnabled { get; public set; }
    public List`1<string> AlarmActions { get; public set; }
    public string AlarmDescription { get; public set; }
    public string AlarmName { get; public set; }
    public ComparisonOperator ComparisonOperator { get; public set; }
    public List`1<Dimension> Dimensions { get; public set; }
    public int EvaluationPeriods { get; public set; }
    public List`1<string> InsufficientDataActions { get; public set; }
    public string MetricName { get; public set; }
    public string Namespace { get; public set; }
    public List`1<string> OKActions { get; public set; }
    public int Period { get; public set; }
    public Statistic Statistic { get; public set; }
    public double Threshold { get; public set; }
    public StandardUnit Unit { get; public set; }
    public bool get_ActionsEnabled();
    public void set_ActionsEnabled(bool value);
    internal bool IsSetActionsEnabled();
    public List`1<string> get_AlarmActions();
    public void set_AlarmActions(List`1<string> value);
    internal bool IsSetAlarmActions();
    public string get_AlarmDescription();
    public void set_AlarmDescription(string value);
    internal bool IsSetAlarmDescription();
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public ComparisonOperator get_ComparisonOperator();
    public void set_ComparisonOperator(ComparisonOperator value);
    internal bool IsSetComparisonOperator();
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public int get_EvaluationPeriods();
    public void set_EvaluationPeriods(int value);
    internal bool IsSetEvaluationPeriods();
    public List`1<string> get_InsufficientDataActions();
    public void set_InsufficientDataActions(List`1<string> value);
    internal bool IsSetInsufficientDataActions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public List`1<string> get_OKActions();
    public void set_OKActions(List`1<string> value);
    internal bool IsSetOKActions();
    public int get_Period();
    public void set_Period(int value);
    internal bool IsSetPeriod();
    public Statistic get_Statistic();
    public void set_Statistic(Statistic value);
    internal bool IsSetStatistic();
    public double get_Threshold();
    public void set_Threshold(double value);
    internal bool IsSetThreshold();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatch.Model.PutMetricAlarmResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.PutMetricDataRequest : AmazonCloudWatchRequest {
    private List`1<MetricDatum> _metricData;
    private string _awsNamespace;
    public List`1<MetricDatum> MetricData { get; public set; }
    public string Namespace { get; public set; }
    public List`1<MetricDatum> get_MetricData();
    public void set_MetricData(List`1<MetricDatum> value);
    internal bool IsSetMetricData();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
}
public class Amazon.CloudWatch.Model.PutMetricDataResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.ResourceNotFoundException : AmazonCloudWatchException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.SetAlarmStateRequest : AmazonCloudWatchRequest {
    private string _alarmName;
    private string _stateReason;
    private string _stateReasonData;
    private StateValue _stateValue;
    public string AlarmName { get; public set; }
    public string StateReason { get; public set; }
    public string StateReasonData { get; public set; }
    public StateValue StateValue { get; public set; }
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public string get_StateReasonData();
    public void set_StateReasonData(string value);
    internal bool IsSetStateReasonData();
    public StateValue get_StateValue();
    public void set_StateValue(StateValue value);
    internal bool IsSetStateValue();
}
public class Amazon.CloudWatch.Model.SetAlarmStateResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.StatisticSet : object {
    private Nullable`1<double> _maximum;
    private Nullable`1<double> _minimum;
    private Nullable`1<double> _sampleCount;
    private Nullable`1<double> _sum;
    public double Maximum { get; public set; }
    public double Minimum { get; public set; }
    public double SampleCount { get; public set; }
    public double Sum { get; public set; }
    public double get_Maximum();
    public void set_Maximum(double value);
    internal bool IsSetMaximum();
    public double get_Minimum();
    public void set_Minimum(double value);
    internal bool IsSetMinimum();
    public double get_SampleCount();
    public void set_SampleCount(double value);
    internal bool IsSetSampleCount();
    public double get_Sum();
    public void set_Sum(double value);
    internal bool IsSetSum();
}
public class Amazon.CloudWatch.StandardUnit : ConstantClass {
    public static StandardUnit Bits;
    public static StandardUnit BitsSecond;
    public static StandardUnit Bytes;
    public static StandardUnit BytesSecond;
    public static StandardUnit Count;
    public static StandardUnit CountSecond;
    public static StandardUnit Gigabits;
    public static StandardUnit GigabitsSecond;
    public static StandardUnit Gigabytes;
    public static StandardUnit GigabytesSecond;
    public static StandardUnit Kilobits;
    public static StandardUnit KilobitsSecond;
    public static StandardUnit Kilobytes;
    public static StandardUnit KilobytesSecond;
    public static StandardUnit Megabits;
    public static StandardUnit MegabitsSecond;
    public static StandardUnit Megabytes;
    public static StandardUnit MegabytesSecond;
    public static StandardUnit Microseconds;
    public static StandardUnit Milliseconds;
    public static StandardUnit None;
    public static StandardUnit Percent;
    public static StandardUnit Seconds;
    public static StandardUnit Terabits;
    public static StandardUnit TerabitsSecond;
    public static StandardUnit Terabytes;
    public static StandardUnit TerabytesSecond;
    public StandardUnit(string value);
    private static StandardUnit();
    public static StandardUnit FindValue(string value);
    public static StandardUnit op_Implicit(string value);
}
public class Amazon.CloudWatch.StateValue : ConstantClass {
    public static StateValue ALARM;
    public static StateValue INSUFFICIENT_DATA;
    public static StateValue OK;
    public StateValue(string value);
    private static StateValue();
    public static StateValue FindValue(string value);
    public static StateValue op_Implicit(string value);
}
public class Amazon.CloudWatch.Statistic : ConstantClass {
    public static Statistic Average;
    public static Statistic Maximum;
    public static Statistic Minimum;
    public static Statistic SampleCount;
    public static Statistic Sum;
    public Statistic(string value);
    private static Statistic();
    public static Statistic FindValue(string value);
    public static Statistic op_Implicit(string value);
}
public class Amazon.CognitoIdentity.AmazonCognitoIdentityClient : AmazonServiceClient {
    public AmazonCognitoIdentityClient(AWSCredentials credentials);
    public AmazonCognitoIdentityClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonCognitoIdentityClient(AWSCredentials credentials, AmazonCognitoIdentityConfig clientConfig);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonCognitoIdentityConfig clientConfig);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonCognitoIdentityConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void Dispose(bool disposing);
    internal CreateIdentityPoolResponse CreateIdentityPool(CreateIdentityPoolRequest request);
    public sealed virtual Task`1<CreateIdentityPoolResponse> CreateIdentityPoolAsync(CreateIdentityPoolRequest request, CancellationToken cancellationToken);
    internal DeleteIdentitiesResponse DeleteIdentities(DeleteIdentitiesRequest request);
    public sealed virtual Task`1<DeleteIdentitiesResponse> DeleteIdentitiesAsync(DeleteIdentitiesRequest request, CancellationToken cancellationToken);
    internal DeleteIdentityPoolResponse DeleteIdentityPool(DeleteIdentityPoolRequest request);
    public sealed virtual Task`1<DeleteIdentityPoolResponse> DeleteIdentityPoolAsync(DeleteIdentityPoolRequest request, CancellationToken cancellationToken);
    internal DescribeIdentityResponse DescribeIdentity(DescribeIdentityRequest request);
    public sealed virtual Task`1<DescribeIdentityResponse> DescribeIdentityAsync(DescribeIdentityRequest request, CancellationToken cancellationToken);
    internal DescribeIdentityPoolResponse DescribeIdentityPool(DescribeIdentityPoolRequest request);
    public sealed virtual Task`1<DescribeIdentityPoolResponse> DescribeIdentityPoolAsync(DescribeIdentityPoolRequest request, CancellationToken cancellationToken);
    internal GetCredentialsForIdentityResponse GetCredentialsForIdentity(GetCredentialsForIdentityRequest request);
    public sealed virtual Task`1<GetCredentialsForIdentityResponse> GetCredentialsForIdentityAsync(GetCredentialsForIdentityRequest request, CancellationToken cancellationToken);
    internal GetIdResponse GetId(GetIdRequest request);
    public sealed virtual Task`1<GetIdResponse> GetIdAsync(GetIdRequest request, CancellationToken cancellationToken);
    internal GetIdentityPoolRolesResponse GetIdentityPoolRoles(GetIdentityPoolRolesRequest request);
    public sealed virtual Task`1<GetIdentityPoolRolesResponse> GetIdentityPoolRolesAsync(GetIdentityPoolRolesRequest request, CancellationToken cancellationToken);
    internal GetOpenIdTokenResponse GetOpenIdToken(GetOpenIdTokenRequest request);
    public sealed virtual Task`1<GetOpenIdTokenResponse> GetOpenIdTokenAsync(GetOpenIdTokenRequest request, CancellationToken cancellationToken);
    internal GetOpenIdTokenForDeveloperIdentityResponse GetOpenIdTokenForDeveloperIdentity(GetOpenIdTokenForDeveloperIdentityRequest request);
    public sealed virtual Task`1<GetOpenIdTokenForDeveloperIdentityResponse> GetOpenIdTokenForDeveloperIdentityAsync(GetOpenIdTokenForDeveloperIdentityRequest request, CancellationToken cancellationToken);
    internal ListIdentitiesResponse ListIdentities(ListIdentitiesRequest request);
    public sealed virtual Task`1<ListIdentitiesResponse> ListIdentitiesAsync(ListIdentitiesRequest request, CancellationToken cancellationToken);
    internal ListIdentityPoolsResponse ListIdentityPools(ListIdentityPoolsRequest request);
    public sealed virtual Task`1<ListIdentityPoolsResponse> ListIdentityPoolsAsync(ListIdentityPoolsRequest request, CancellationToken cancellationToken);
    internal LookupDeveloperIdentityResponse LookupDeveloperIdentity(LookupDeveloperIdentityRequest request);
    public sealed virtual Task`1<LookupDeveloperIdentityResponse> LookupDeveloperIdentityAsync(LookupDeveloperIdentityRequest request, CancellationToken cancellationToken);
    internal MergeDeveloperIdentitiesResponse MergeDeveloperIdentities(MergeDeveloperIdentitiesRequest request);
    public sealed virtual Task`1<MergeDeveloperIdentitiesResponse> MergeDeveloperIdentitiesAsync(MergeDeveloperIdentitiesRequest request, CancellationToken cancellationToken);
    internal SetIdentityPoolRolesResponse SetIdentityPoolRoles(SetIdentityPoolRolesRequest request);
    public sealed virtual Task`1<SetIdentityPoolRolesResponse> SetIdentityPoolRolesAsync(SetIdentityPoolRolesRequest request, CancellationToken cancellationToken);
    internal UnlinkDeveloperIdentityResponse UnlinkDeveloperIdentity(UnlinkDeveloperIdentityRequest request);
    public sealed virtual Task`1<UnlinkDeveloperIdentityResponse> UnlinkDeveloperIdentityAsync(UnlinkDeveloperIdentityRequest request, CancellationToken cancellationToken);
    internal UnlinkIdentityResponse UnlinkIdentity(UnlinkIdentityRequest request);
    public sealed virtual Task`1<UnlinkIdentityResponse> UnlinkIdentityAsync(UnlinkIdentityRequest request, CancellationToken cancellationToken);
    internal UpdateIdentityPoolResponse UpdateIdentityPool(UpdateIdentityPoolRequest request);
    public sealed virtual Task`1<UpdateIdentityPoolResponse> UpdateIdentityPoolAsync(UpdateIdentityPoolRequest request, CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentity.AmazonCognitoIdentityConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.CognitoIdentity.AmazonCognitoIdentityException : AmazonServiceException {
    public AmazonCognitoIdentityException(string message);
    public AmazonCognitoIdentityException(string message, Exception innerException);
    public AmazonCognitoIdentityException(Exception innerException);
    public AmazonCognitoIdentityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonCognitoIdentityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.AmazonCognitoIdentityRequest : AmazonWebServiceRequest {
}
public class Amazon.CognitoIdentity.CognitoAWSCredentials : RefreshingAWSCredentials {
    private static string IDENTITY_ID_CACHE_KEY;
    private string identityId;
    private static int DefaultDurationSeconds;
    private IAmazonCognitoIdentity cib;
    private IAmazonSecurityTokenService sts;
    private EventHandler`1<IdentityChangedArgs> IdentityChangedEvent;
    private CacheMode _identityIdCacheMode;
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityPoolId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnAuthRoleArn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthRoleArn>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Logins>k__BackingField;
    private bool IsIdentitySet { get; }
    public string AccountId { get; private set; }
    public string IdentityPoolId { get; private set; }
    public string UnAuthRoleArn { get; private set; }
    public string AuthRoleArn { get; private set; }
    private Dictionary`2<string, string> Logins { get; private set; }
    public String[] CurrentLoginProviders { get; }
    public CacheMode IdentityIdCacheMode { get; public set; }
    public CognitoAWSCredentials(string identityPoolId, RegionEndpoint region);
    public CognitoAWSCredentials(string accountId, string identityPoolId, string unAuthRoleArn, string authRoleArn, RegionEndpoint region);
    public CognitoAWSCredentials(string accountId, string identityPoolId, string unAuthRoleArn, string authRoleArn, IAmazonCognitoIdentity cibClient, IAmazonSecurityTokenService stsClient);
    private static CognitoAWSCredentials();
    private bool get_IsIdentitySet();
    private void UpdateIdentity(string newIdentityId, bool updateCache);
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
private void set_AccountId(string value);
    [CompilerGeneratedAttribute]
public string get_IdentityPoolId();
    [CompilerGeneratedAttribute]
private void set_IdentityPoolId(string value);
    [CompilerGeneratedAttribute]
public string get_UnAuthRoleArn();
    [CompilerGeneratedAttribute]
private void set_UnAuthRoleArn(string value);
    [CompilerGeneratedAttribute]
public string get_AuthRoleArn();
    [CompilerGeneratedAttribute]
private void set_AuthRoleArn(string value);
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> get_Logins();
    [CompilerGeneratedAttribute]
private void set_Logins(Dictionary`2<string, string> value);
    public void Clear();
    public String[] get_CurrentLoginProviders();
    public void RemoveLogin(string providerName);
    public void AddLogin(string providerName, string token);
    public string GetIdentityId();
    private GetIdentityIdStatus GetIdentityIdWithCaching();
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<GetIdentityIdAsync>d__5")]
public Task`1<string> GetIdentityIdAsync();
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<GetIdentityIdWithCachingAsync>d__a")]
private Task`1<GetIdentityIdStatus> GetIdentityIdWithCachingAsync();
    private bool ShouldRetry(AmazonCognitoIdentityException e, GetIdentityIdStatus status);
    public void add_IdentityChangedEvent(EventHandler`1<IdentityChangedArgs> value);
    public void remove_IdentityChangedEvent(EventHandler`1<IdentityChangedArgs> value);
    [AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<GenerateNewCredentialsAsync>d__f")]
[DebuggerStepThroughAttribute]
protected virtual Task`1<CredentialsRefreshState> GenerateNewCredentialsAsync();
    [AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<GetCredentialsForRoleAsync>d__17")]
[DebuggerStepThroughAttribute]
private Task`1<CredentialsRefreshState> GetCredentialsForRoleAsync(string roleArn);
    [AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<GetPoolCredentialsAsync>d__26")]
[DebuggerStepThroughAttribute]
private Task`1<CredentialsRefreshState> GetPoolCredentialsAsync();
    protected virtual CredentialsRefreshState GenerateNewCredentials();
    private CredentialsRefreshState GetPoolCredentials();
    private CredentialsRefreshState GetCredentialsForRole(string roleArn);
    private Credentials GetStsCredentials(AssumeRoleWithWebIdentityRequest assumeRequest);
    private GetOpenIdTokenResponse GetOpenId(GetOpenIdTokenRequest getTokenRequest);
    private GetCredentialsForIdentityResponse GetCredentialsForIdentity(GetCredentialsForIdentityRequest getCredentialsRequest);
    public CacheMode get_IdentityIdCacheMode();
    public void set_IdentityIdCacheMode(CacheMode value);
    public virtual string GetCachedIdentityId();
    public virtual void CacheIdentityId(string identityId);
    protected virtual void ClearIdentityCache();
}
public class Amazon.CognitoIdentity.ErrorCode : ConstantClass {
    public static ErrorCode AccessDenied;
    public static ErrorCode InternalServerError;
    public ErrorCode(string value);
    private static ErrorCode();
    public static ErrorCode FindValue(string value);
    public static ErrorCode op_Implicit(string value);
}
public interface Amazon.CognitoIdentity.IAmazonCognitoIdentity {
    public abstract virtual Task`1<CreateIdentityPoolResponse> CreateIdentityPoolAsync(CreateIdentityPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIdentitiesResponse> DeleteIdentitiesAsync(DeleteIdentitiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIdentityPoolResponse> DeleteIdentityPoolAsync(DeleteIdentityPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdentityResponse> DescribeIdentityAsync(DescribeIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdentityPoolResponse> DescribeIdentityPoolAsync(DescribeIdentityPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCredentialsForIdentityResponse> GetCredentialsForIdentityAsync(GetCredentialsForIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdResponse> GetIdAsync(GetIdRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityPoolRolesResponse> GetIdentityPoolRolesAsync(GetIdentityPoolRolesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOpenIdTokenResponse> GetOpenIdTokenAsync(GetOpenIdTokenRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOpenIdTokenForDeveloperIdentityResponse> GetOpenIdTokenForDeveloperIdentityAsync(GetOpenIdTokenForDeveloperIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentitiesResponse> ListIdentitiesAsync(ListIdentitiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentityPoolsResponse> ListIdentityPoolsAsync(ListIdentityPoolsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LookupDeveloperIdentityResponse> LookupDeveloperIdentityAsync(LookupDeveloperIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MergeDeveloperIdentitiesResponse> MergeDeveloperIdentitiesAsync(MergeDeveloperIdentitiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityPoolRolesResponse> SetIdentityPoolRolesAsync(SetIdentityPoolRolesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnlinkDeveloperIdentityResponse> UnlinkDeveloperIdentityAsync(UnlinkDeveloperIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnlinkIdentityResponse> UnlinkIdentityAsync(UnlinkIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateIdentityPoolResponse> UpdateIdentityPoolAsync(UpdateIdentityPoolRequest request, CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentity.Model.ConcurrentModificationException : AmazonCognitoIdentityException {
    public ConcurrentModificationException(string message);
    public ConcurrentModificationException(string message, Exception innerException);
    public ConcurrentModificationException(Exception innerException);
    public ConcurrentModificationException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ConcurrentModificationException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.CreateIdentityPoolRequest : AmazonCognitoIdentityRequest {
    private Nullable`1<bool> _allowUnauthenticatedIdentities;
    private string _developerProviderName;
    private string _identityPoolName;
    private List`1<string> _openIdConnectProviderARNs;
    private Dictionary`2<string, string> _supportedLoginProviders;
    public bool AllowUnauthenticatedIdentities { get; public set; }
    public string DeveloperProviderName { get; public set; }
    public string IdentityPoolName { get; public set; }
    public List`1<string> OpenIdConnectProviderARNs { get; public set; }
    public Dictionary`2<string, string> SupportedLoginProviders { get; public set; }
    public bool get_AllowUnauthenticatedIdentities();
    public void set_AllowUnauthenticatedIdentities(bool value);
    internal bool IsSetAllowUnauthenticatedIdentities();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
    public List`1<string> get_OpenIdConnectProviderARNs();
    public void set_OpenIdConnectProviderARNs(List`1<string> value);
    internal bool IsSetOpenIdConnectProviderARNs();
    public Dictionary`2<string, string> get_SupportedLoginProviders();
    public void set_SupportedLoginProviders(Dictionary`2<string, string> value);
    internal bool IsSetSupportedLoginProviders();
}
public class Amazon.CognitoIdentity.Model.CreateIdentityPoolResponse : CreateIdentityPoolResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateIdentityPoolResult class are now available on the CreateIdentityPoolResponse class. You should use the properties on CreateIdentityPoolResponse instead of accessing them through CreateIdentityPoolResult.")]
public CreateIdentityPoolResult CreateIdentityPoolResult { get; }
    public CreateIdentityPoolResult get_CreateIdentityPoolResult();
}
public class Amazon.CognitoIdentity.Model.CreateIdentityPoolResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _allowUnauthenticatedIdentities;
    private string _developerProviderName;
    private string _identityPoolId;
    private string _identityPoolName;
    private List`1<string> _openIdConnectProviderARNs;
    private Dictionary`2<string, string> _supportedLoginProviders;
    public bool AllowUnauthenticatedIdentities { get; public set; }
    public string DeveloperProviderName { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string IdentityPoolName { get; public set; }
    public List`1<string> OpenIdConnectProviderARNs { get; public set; }
    public Dictionary`2<string, string> SupportedLoginProviders { get; public set; }
    public bool get_AllowUnauthenticatedIdentities();
    public void set_AllowUnauthenticatedIdentities(bool value);
    internal bool IsSetAllowUnauthenticatedIdentities();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
    public List`1<string> get_OpenIdConnectProviderARNs();
    public void set_OpenIdConnectProviderARNs(List`1<string> value);
    internal bool IsSetOpenIdConnectProviderARNs();
    public Dictionary`2<string, string> get_SupportedLoginProviders();
    public void set_SupportedLoginProviders(Dictionary`2<string, string> value);
    internal bool IsSetSupportedLoginProviders();
}
public class Amazon.CognitoIdentity.Model.Credentials : AWSCredentials {
    private string _accessKeyId;
    private Nullable`1<DateTime> _expiration;
    private string _secretKey;
    private string _sessionToken;
    private ImmutableCredentials _credentials;
    public string AccessKeyId { get; public set; }
    public DateTime Expiration { get; public set; }
    public string SecretKey { get; public set; }
    public string SessionToken { get; public set; }
    public string get_AccessKeyId();
    public void set_AccessKeyId(string value);
    internal bool IsSetAccessKeyId();
    public DateTime get_Expiration();
    public void set_Expiration(DateTime value);
    internal bool IsSetExpiration();
    public string get_SecretKey();
    public void set_SecretKey(string value);
    internal bool IsSetSecretKey();
    public string get_SessionToken();
    public void set_SessionToken(string value);
    internal bool IsSetSessionToken();
    public virtual ImmutableCredentials GetCredentials();
}
public class Amazon.CognitoIdentity.Model.DeleteIdentitiesRequest : AmazonCognitoIdentityRequest {
    private List`1<string> _identityIdsToDelete;
    public List`1<string> IdentityIdsToDelete { get; public set; }
    public List`1<string> get_IdentityIdsToDelete();
    public void set_IdentityIdsToDelete(List`1<string> value);
    internal bool IsSetIdentityIdsToDelete();
}
public class Amazon.CognitoIdentity.Model.DeleteIdentitiesResponse : DeleteIdentitiesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteIdentitiesResult class are now available on the DeleteIdentitiesResponse class. You should use the properties on DeleteIdentitiesResponse instead of accessing them through DeleteIdentitiesResult.")]
public DeleteIdentitiesResult DeleteIdentitiesResult { get; }
    public DeleteIdentitiesResult get_DeleteIdentitiesResult();
}
public class Amazon.CognitoIdentity.Model.DeleteIdentitiesResult : AmazonWebServiceResponse {
    private List`1<UnprocessedIdentityId> _unprocessedIdentityIds;
    public List`1<UnprocessedIdentityId> UnprocessedIdentityIds { get; public set; }
    public List`1<UnprocessedIdentityId> get_UnprocessedIdentityIds();
    public void set_UnprocessedIdentityIds(List`1<UnprocessedIdentityId> value);
    internal bool IsSetUnprocessedIdentityIds();
}
public class Amazon.CognitoIdentity.Model.DeleteIdentityPoolRequest : AmazonCognitoIdentityRequest {
    private string _identityPoolId;
    public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoIdentity.Model.DeleteIdentityPoolResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentity.Model.DescribeIdentityPoolRequest : AmazonCognitoIdentityRequest {
    private string _identityPoolId;
    public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoIdentity.Model.DescribeIdentityPoolResponse : DescribeIdentityPoolResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeIdentityPoolResult class are now available on the DescribeIdentityPoolResponse class. You should use the properties on DescribeIdentityPoolResponse instead of accessing them through DescribeIdentityPoolResult.")]
public DescribeIdentityPoolResult DescribeIdentityPoolResult { get; }
    public DescribeIdentityPoolResult get_DescribeIdentityPoolResult();
}
public class Amazon.CognitoIdentity.Model.DescribeIdentityPoolResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _allowUnauthenticatedIdentities;
    private string _developerProviderName;
    private string _identityPoolId;
    private string _identityPoolName;
    private List`1<string> _openIdConnectProviderARNs;
    private Dictionary`2<string, string> _supportedLoginProviders;
    public bool AllowUnauthenticatedIdentities { get; public set; }
    public string DeveloperProviderName { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string IdentityPoolName { get; public set; }
    public List`1<string> OpenIdConnectProviderARNs { get; public set; }
    public Dictionary`2<string, string> SupportedLoginProviders { get; public set; }
    public bool get_AllowUnauthenticatedIdentities();
    public void set_AllowUnauthenticatedIdentities(bool value);
    internal bool IsSetAllowUnauthenticatedIdentities();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
    public List`1<string> get_OpenIdConnectProviderARNs();
    public void set_OpenIdConnectProviderARNs(List`1<string> value);
    internal bool IsSetOpenIdConnectProviderARNs();
    public Dictionary`2<string, string> get_SupportedLoginProviders();
    public void set_SupportedLoginProviders(Dictionary`2<string, string> value);
    internal bool IsSetSupportedLoginProviders();
}
public class Amazon.CognitoIdentity.Model.DescribeIdentityRequest : AmazonCognitoIdentityRequest {
    private string _identityId;
    public string IdentityId { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
}
public class Amazon.CognitoIdentity.Model.DescribeIdentityResponse : DescribeIdentityResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeIdentityResult class are now available on the DescribeIdentityResponse class. You should use the properties on DescribeIdentityResponse instead of accessing them through DescribeIdentityResult.")]
public DescribeIdentityResult DescribeIdentityResult { get; }
    public DescribeIdentityResult get_DescribeIdentityResult();
}
public class Amazon.CognitoIdentity.Model.DescribeIdentityResult : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _creationDate;
    private string _identityId;
    private Nullable`1<DateTime> _lastModifiedDate;
    private List`1<string> _logins;
    public DateTime CreationDate { get; public set; }
    public string IdentityId { get; public set; }
    public DateTime LastModifiedDate { get; public set; }
    public List`1<string> Logins { get; public set; }
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public DateTime get_LastModifiedDate();
    public void set_LastModifiedDate(DateTime value);
    internal bool IsSetLastModifiedDate();
    public List`1<string> get_Logins();
    public void set_Logins(List`1<string> value);
    internal bool IsSetLogins();
}
public class Amazon.CognitoIdentity.Model.DeveloperUserAlreadyRegisteredException : AmazonCognitoIdentityException {
    public DeveloperUserAlreadyRegisteredException(string message);
    public DeveloperUserAlreadyRegisteredException(string message, Exception innerException);
    public DeveloperUserAlreadyRegisteredException(Exception innerException);
    public DeveloperUserAlreadyRegisteredException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DeveloperUserAlreadyRegisteredException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.ExternalServiceException : AmazonCognitoIdentityException {
    public ExternalServiceException(string message);
    public ExternalServiceException(string message, Exception innerException);
    public ExternalServiceException(Exception innerException);
    public ExternalServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ExternalServiceException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.GetCredentialsForIdentityRequest : AmazonCognitoIdentityRequest {
    private string _identityId;
    private Dictionary`2<string, string> _logins;
    public string IdentityId { get; public set; }
    public Dictionary`2<string, string> Logins { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public Dictionary`2<string, string> get_Logins();
    public void set_Logins(Dictionary`2<string, string> value);
    internal bool IsSetLogins();
}
public class Amazon.CognitoIdentity.Model.GetCredentialsForIdentityResponse : GetCredentialsForIdentityResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetCredentialsForIdentityResult class are now available on the GetCredentialsForIdentityResponse class. You should use the properties on GetCredentialsForIdentityResponse instead of accessing them through GetCredentialsForIdentityResult.")]
public GetCredentialsForIdentityResult GetCredentialsForIdentityResult { get; }
    public GetCredentialsForIdentityResult get_GetCredentialsForIdentityResult();
}
public class Amazon.CognitoIdentity.Model.GetCredentialsForIdentityResult : AmazonWebServiceResponse {
    private Credentials _credentials;
    private string _identityId;
    public Credentials Credentials { get; public set; }
    public string IdentityId { get; public set; }
    public Credentials get_Credentials();
    public void set_Credentials(Credentials value);
    internal bool IsSetCredentials();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
}
public class Amazon.CognitoIdentity.Model.GetIdentityPoolRolesRequest : AmazonCognitoIdentityRequest {
    private string _identityPoolId;
    public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoIdentity.Model.GetIdentityPoolRolesResponse : GetIdentityPoolRolesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetIdentityPoolRolesResult class are now available on the GetIdentityPoolRolesResponse class. You should use the properties on GetIdentityPoolRolesResponse instead of accessing them through GetIdentityPoolRolesResult.")]
public GetIdentityPoolRolesResult GetIdentityPoolRolesResult { get; }
    public GetIdentityPoolRolesResult get_GetIdentityPoolRolesResult();
}
public class Amazon.CognitoIdentity.Model.GetIdentityPoolRolesResult : AmazonWebServiceResponse {
    private string _identityPoolId;
    private Dictionary`2<string, string> _roles;
    public string IdentityPoolId { get; public set; }
    public Dictionary`2<string, string> Roles { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Dictionary`2<string, string> get_Roles();
    public void set_Roles(Dictionary`2<string, string> value);
    internal bool IsSetRoles();
}
public class Amazon.CognitoIdentity.Model.GetIdRequest : AmazonCognitoIdentityRequest {
    private string _accountId;
    private string _identityPoolId;
    private Dictionary`2<string, string> _logins;
    public string AccountId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public Dictionary`2<string, string> Logins { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Dictionary`2<string, string> get_Logins();
    public void set_Logins(Dictionary`2<string, string> value);
    internal bool IsSetLogins();
}
public class Amazon.CognitoIdentity.Model.GetIdResponse : GetIdResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetIdResult class are now available on the GetIdResponse class. You should use the properties on GetIdResponse instead of accessing them through GetIdResult.")]
public GetIdResult GetIdResult { get; }
    public GetIdResult get_GetIdResult();
}
public class Amazon.CognitoIdentity.Model.GetIdResult : AmazonWebServiceResponse {
    private string _identityId;
    public string IdentityId { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
}
public class Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityRequest : AmazonCognitoIdentityRequest {
    private string _identityId;
    private string _identityPoolId;
    private Dictionary`2<string, string> _logins;
    private Nullable`1<long> _tokenDuration;
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public Dictionary`2<string, string> Logins { get; public set; }
    public long TokenDuration { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Dictionary`2<string, string> get_Logins();
    public void set_Logins(Dictionary`2<string, string> value);
    internal bool IsSetLogins();
    public long get_TokenDuration();
    public void set_TokenDuration(long value);
    internal bool IsSetTokenDuration();
}
public class Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityResponse : GetOpenIdTokenForDeveloperIdentityResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetOpenIdTokenForDeveloperIdentityResult class are now available on the GetOpenIdTokenForDeveloperIdentityResponse class. You should use the properties on GetOpenIdTokenForDeveloperIdentityResponse instead of accessing them through GetOpenIdTokenForDeveloperIdentityResult.")]
public GetOpenIdTokenForDeveloperIdentityResult GetOpenIdTokenForDeveloperIdentityResult { get; }
    public GetOpenIdTokenForDeveloperIdentityResult get_GetOpenIdTokenForDeveloperIdentityResult();
}
public class Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityResult : AmazonWebServiceResponse {
    private string _identityId;
    private string _token;
    public string IdentityId { get; public set; }
    public string Token { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_Token();
    public void set_Token(string value);
    internal bool IsSetToken();
}
public class Amazon.CognitoIdentity.Model.GetOpenIdTokenRequest : AmazonCognitoIdentityRequest {
    private string _identityId;
    private Dictionary`2<string, string> _logins;
    public string IdentityId { get; public set; }
    public Dictionary`2<string, string> Logins { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public Dictionary`2<string, string> get_Logins();
    public void set_Logins(Dictionary`2<string, string> value);
    internal bool IsSetLogins();
}
public class Amazon.CognitoIdentity.Model.GetOpenIdTokenResponse : GetOpenIdTokenResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetOpenIdTokenResult class are now available on the GetOpenIdTokenResponse class. You should use the properties on GetOpenIdTokenResponse instead of accessing them through GetOpenIdTokenResult.")]
public GetOpenIdTokenResult GetOpenIdTokenResult { get; }
    public GetOpenIdTokenResult get_GetOpenIdTokenResult();
}
public class Amazon.CognitoIdentity.Model.GetOpenIdTokenResult : AmazonWebServiceResponse {
    private string _identityId;
    private string _token;
    public string IdentityId { get; public set; }
    public string Token { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_Token();
    public void set_Token(string value);
    internal bool IsSetToken();
}
public class Amazon.CognitoIdentity.Model.IdentityDescription : object {
    private Nullable`1<DateTime> _creationDate;
    private string _identityId;
    private Nullable`1<DateTime> _lastModifiedDate;
    private List`1<string> _logins;
    public DateTime CreationDate { get; public set; }
    public string IdentityId { get; public set; }
    public DateTime LastModifiedDate { get; public set; }
    public List`1<string> Logins { get; public set; }
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public DateTime get_LastModifiedDate();
    public void set_LastModifiedDate(DateTime value);
    internal bool IsSetLastModifiedDate();
    public List`1<string> get_Logins();
    public void set_Logins(List`1<string> value);
    internal bool IsSetLogins();
}
public class Amazon.CognitoIdentity.Model.IdentityPoolShortDescription : object {
    private string _identityPoolId;
    private string _identityPoolName;
    public string IdentityPoolId { get; public set; }
    public string IdentityPoolName { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.CreateIdentityPoolRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIdentityPoolRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.CreateIdentityPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateIdentityPoolResponseUnmarshaller _instance;
    public static CreateIdentityPoolResponseUnmarshaller Instance { get; }
    private static CreateIdentityPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIdentityPoolResponseUnmarshaller GetInstance();
    public static CreateIdentityPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.CredentialsUnmarshaller : object {
    private static CredentialsUnmarshaller _instance;
    public static CredentialsUnmarshaller Instance { get; }
    private static CredentialsUnmarshaller();
    private sealed virtual override Credentials Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.Credentials,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Credentials Unmarshall(JsonUnmarshallerContext context);
    public static CredentialsUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeleteIdentitiesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIdentitiesRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeleteIdentitiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteIdentitiesResponseUnmarshaller _instance;
    public static DeleteIdentitiesResponseUnmarshaller Instance { get; }
    private static DeleteIdentitiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIdentitiesResponseUnmarshaller GetInstance();
    public static DeleteIdentitiesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeleteIdentityPoolRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIdentityPoolRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeleteIdentityPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteIdentityPoolResponseUnmarshaller _instance;
    public static DeleteIdentityPoolResponseUnmarshaller Instance { get; }
    private static DeleteIdentityPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIdentityPoolResponseUnmarshaller GetInstance();
    public static DeleteIdentityPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DescribeIdentityPoolRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIdentityPoolRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DescribeIdentityPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeIdentityPoolResponseUnmarshaller _instance;
    public static DescribeIdentityPoolResponseUnmarshaller Instance { get; }
    private static DescribeIdentityPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIdentityPoolResponseUnmarshaller GetInstance();
    public static DescribeIdentityPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DescribeIdentityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIdentityRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DescribeIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeIdentityResponseUnmarshaller _instance;
    public static DescribeIdentityResponseUnmarshaller Instance { get; }
    private static DescribeIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIdentityResponseUnmarshaller GetInstance();
    public static DescribeIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetCredentialsForIdentityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCredentialsForIdentityRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetCredentialsForIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCredentialsForIdentityResponseUnmarshaller _instance;
    public static GetCredentialsForIdentityResponseUnmarshaller Instance { get; }
    private static GetCredentialsForIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCredentialsForIdentityResponseUnmarshaller GetInstance();
    public static GetCredentialsForIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetIdentityPoolRolesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityPoolRolesRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetIdentityPoolRolesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetIdentityPoolRolesResponseUnmarshaller _instance;
    public static GetIdentityPoolRolesResponseUnmarshaller Instance { get; }
    private static GetIdentityPoolRolesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityPoolRolesResponseUnmarshaller GetInstance();
    public static GetIdentityPoolRolesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetIdRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetIdResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetIdResponseUnmarshaller _instance;
    public static GetIdResponseUnmarshaller Instance { get; }
    private static GetIdResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdResponseUnmarshaller GetInstance();
    public static GetIdResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenForDeveloperIdentityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOpenIdTokenForDeveloperIdentityRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller _instance;
    public static GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller Instance { get; }
    private static GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller GetInstance();
    public static GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOpenIdTokenRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetOpenIdTokenResponseUnmarshaller _instance;
    public static GetOpenIdTokenResponseUnmarshaller Instance { get; }
    private static GetOpenIdTokenResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOpenIdTokenResponseUnmarshaller GetInstance();
    public static GetOpenIdTokenResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.IdentityDescriptionUnmarshaller : object {
    private static IdentityDescriptionUnmarshaller _instance;
    public static IdentityDescriptionUnmarshaller Instance { get; }
    private static IdentityDescriptionUnmarshaller();
    private sealed virtual override IdentityDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.IdentityDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityDescription Unmarshall(JsonUnmarshallerContext context);
    public static IdentityDescriptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.IdentityPoolShortDescriptionUnmarshaller : object {
    private static IdentityPoolShortDescriptionUnmarshaller _instance;
    public static IdentityPoolShortDescriptionUnmarshaller Instance { get; }
    private static IdentityPoolShortDescriptionUnmarshaller();
    private sealed virtual override IdentityPoolShortDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.IdentityPoolShortDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityPoolShortDescription Unmarshall(JsonUnmarshallerContext context);
    public static IdentityPoolShortDescriptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentitiesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListIdentitiesRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentitiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListIdentitiesResponseUnmarshaller _instance;
    public static ListIdentitiesResponseUnmarshaller Instance { get; }
    private static ListIdentitiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListIdentitiesResponseUnmarshaller GetInstance();
    public static ListIdentitiesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentityPoolsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListIdentityPoolsRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentityPoolsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListIdentityPoolsResponseUnmarshaller _instance;
    public static ListIdentityPoolsResponseUnmarshaller Instance { get; }
    private static ListIdentityPoolsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListIdentityPoolsResponseUnmarshaller GetInstance();
    public static ListIdentityPoolsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.LookupDeveloperIdentityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(LookupDeveloperIdentityRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.LookupDeveloperIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static LookupDeveloperIdentityResponseUnmarshaller _instance;
    public static LookupDeveloperIdentityResponseUnmarshaller Instance { get; }
    private static LookupDeveloperIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static LookupDeveloperIdentityResponseUnmarshaller GetInstance();
    public static LookupDeveloperIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.MergeDeveloperIdentitiesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MergeDeveloperIdentitiesRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.MergeDeveloperIdentitiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static MergeDeveloperIdentitiesResponseUnmarshaller _instance;
    public static MergeDeveloperIdentitiesResponseUnmarshaller Instance { get; }
    private static MergeDeveloperIdentitiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MergeDeveloperIdentitiesResponseUnmarshaller GetInstance();
    public static MergeDeveloperIdentitiesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.SetIdentityPoolRolesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityPoolRolesRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.SetIdentityPoolRolesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetIdentityPoolRolesResponseUnmarshaller _instance;
    public static SetIdentityPoolRolesResponseUnmarshaller Instance { get; }
    private static SetIdentityPoolRolesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityPoolRolesResponseUnmarshaller GetInstance();
    public static SetIdentityPoolRolesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkDeveloperIdentityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnlinkDeveloperIdentityRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkDeveloperIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UnlinkDeveloperIdentityResponseUnmarshaller _instance;
    public static UnlinkDeveloperIdentityResponseUnmarshaller Instance { get; }
    private static UnlinkDeveloperIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnlinkDeveloperIdentityResponseUnmarshaller GetInstance();
    public static UnlinkDeveloperIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkIdentityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnlinkIdentityRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UnlinkIdentityResponseUnmarshaller _instance;
    public static UnlinkIdentityResponseUnmarshaller Instance { get; }
    private static UnlinkIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnlinkIdentityResponseUnmarshaller GetInstance();
    public static UnlinkIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnprocessedIdentityIdUnmarshaller : object {
    private static UnprocessedIdentityIdUnmarshaller _instance;
    public static UnprocessedIdentityIdUnmarshaller Instance { get; }
    private static UnprocessedIdentityIdUnmarshaller();
    private sealed virtual override UnprocessedIdentityId Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.UnprocessedIdentityId,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnprocessedIdentityId Unmarshall(JsonUnmarshallerContext context);
    public static UnprocessedIdentityIdUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UpdateIdentityPoolRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateIdentityPoolRequest publicRequest);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UpdateIdentityPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateIdentityPoolResponseUnmarshaller _instance;
    public static UpdateIdentityPoolResponseUnmarshaller Instance { get; }
    private static UpdateIdentityPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateIdentityPoolResponseUnmarshaller GetInstance();
    public static UpdateIdentityPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.InternalErrorException : AmazonCognitoIdentityException {
    public InternalErrorException(string message);
    public InternalErrorException(string message, Exception innerException);
    public InternalErrorException(Exception innerException);
    public InternalErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InternalErrorException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.InvalidIdentityPoolConfigurationException : AmazonCognitoIdentityException {
    public InvalidIdentityPoolConfigurationException(string message);
    public InvalidIdentityPoolConfigurationException(string message, Exception innerException);
    public InvalidIdentityPoolConfigurationException(Exception innerException);
    public InvalidIdentityPoolConfigurationException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidIdentityPoolConfigurationException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.InvalidParameterException : AmazonCognitoIdentityException {
    public InvalidParameterException(string message);
    public InvalidParameterException(string message, Exception innerException);
    public InvalidParameterException(Exception innerException);
    public InvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidParameterException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.LimitExceededException : AmazonCognitoIdentityException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.ListIdentitiesRequest : AmazonCognitoIdentityRequest {
    private Nullable`1<bool> _hideDisabled;
    private string _identityPoolId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public bool HideDisabled { get; public set; }
    public string IdentityPoolId { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public bool get_HideDisabled();
    public void set_HideDisabled(bool value);
    internal bool IsSetHideDisabled();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.ListIdentitiesResponse : ListIdentitiesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListIdentitiesResult class are now available on the ListIdentitiesResponse class. You should use the properties on ListIdentitiesResponse instead of accessing them through ListIdentitiesResult.")]
public ListIdentitiesResult ListIdentitiesResult { get; }
    public ListIdentitiesResult get_ListIdentitiesResult();
}
public class Amazon.CognitoIdentity.Model.ListIdentitiesResult : AmazonWebServiceResponse {
    private List`1<IdentityDescription> _identities;
    private string _identityPoolId;
    private string _nextToken;
    public List`1<IdentityDescription> Identities { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IdentityDescription> get_Identities();
    public void set_Identities(List`1<IdentityDescription> value);
    internal bool IsSetIdentities();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.ListIdentityPoolsRequest : AmazonCognitoIdentityRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.ListIdentityPoolsResponse : ListIdentityPoolsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListIdentityPoolsResult class are now available on the ListIdentityPoolsResponse class. You should use the properties on ListIdentityPoolsResponse instead of accessing them through ListIdentityPoolsResult.")]
public ListIdentityPoolsResult ListIdentityPoolsResult { get; }
    public ListIdentityPoolsResult get_ListIdentityPoolsResult();
}
public class Amazon.CognitoIdentity.Model.ListIdentityPoolsResult : AmazonWebServiceResponse {
    private List`1<IdentityPoolShortDescription> _identityPools;
    private string _nextToken;
    public List`1<IdentityPoolShortDescription> IdentityPools { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IdentityPoolShortDescription> get_IdentityPools();
    public void set_IdentityPools(List`1<IdentityPoolShortDescription> value);
    internal bool IsSetIdentityPools();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.LookupDeveloperIdentityRequest : AmazonCognitoIdentityRequest {
    private string _developerUserIdentifier;
    private string _identityId;
    private string _identityPoolId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public string DeveloperUserIdentifier { get; public set; }
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_DeveloperUserIdentifier();
    public void set_DeveloperUserIdentifier(string value);
    internal bool IsSetDeveloperUserIdentifier();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.LookupDeveloperIdentityResponse : LookupDeveloperIdentityResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the LookupDeveloperIdentityResult class are now available on the LookupDeveloperIdentityResponse class. You should use the properties on LookupDeveloperIdentityResponse instead of accessing them through LookupDeveloperIdentityResult.")]
public LookupDeveloperIdentityResult LookupDeveloperIdentityResult { get; }
    public LookupDeveloperIdentityResult get_LookupDeveloperIdentityResult();
}
public class Amazon.CognitoIdentity.Model.LookupDeveloperIdentityResult : AmazonWebServiceResponse {
    private List`1<string> _developerUserIdentifierList;
    private string _identityId;
    private string _nextToken;
    public List`1<string> DeveloperUserIdentifierList { get; public set; }
    public string IdentityId { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_DeveloperUserIdentifierList();
    public void set_DeveloperUserIdentifierList(List`1<string> value);
    internal bool IsSetDeveloperUserIdentifierList();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesRequest : AmazonCognitoIdentityRequest {
    private string _destinationUserIdentifier;
    private string _developerProviderName;
    private string _identityPoolId;
    private string _sourceUserIdentifier;
    public string DestinationUserIdentifier { get; public set; }
    public string DeveloperProviderName { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string SourceUserIdentifier { get; public set; }
    public string get_DestinationUserIdentifier();
    public void set_DestinationUserIdentifier(string value);
    internal bool IsSetDestinationUserIdentifier();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_SourceUserIdentifier();
    public void set_SourceUserIdentifier(string value);
    internal bool IsSetSourceUserIdentifier();
}
public class Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesResponse : MergeDeveloperIdentitiesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the MergeDeveloperIdentitiesResult class are now available on the MergeDeveloperIdentitiesResponse class. You should use the properties on MergeDeveloperIdentitiesResponse instead of accessing them through MergeDeveloperIdentitiesResult.")]
public MergeDeveloperIdentitiesResult MergeDeveloperIdentitiesResult { get; }
    public MergeDeveloperIdentitiesResult get_MergeDeveloperIdentitiesResult();
}
public class Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesResult : AmazonWebServiceResponse {
    private string _identityId;
    public string IdentityId { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
}
public class Amazon.CognitoIdentity.Model.NotAuthorizedException : AmazonCognitoIdentityException {
    public NotAuthorizedException(string message);
    public NotAuthorizedException(string message, Exception innerException);
    public NotAuthorizedException(Exception innerException);
    public NotAuthorizedException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NotAuthorizedException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.ResourceConflictException : AmazonCognitoIdentityException {
    public ResourceConflictException(string message);
    public ResourceConflictException(string message, Exception innerException);
    public ResourceConflictException(Exception innerException);
    public ResourceConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceConflictException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.ResourceNotFoundException : AmazonCognitoIdentityException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.SetIdentityPoolRolesRequest : AmazonCognitoIdentityRequest {
    private string _identityPoolId;
    private Dictionary`2<string, string> _roles;
    public string IdentityPoolId { get; public set; }
    public Dictionary`2<string, string> Roles { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Dictionary`2<string, string> get_Roles();
    public void set_Roles(Dictionary`2<string, string> value);
    internal bool IsSetRoles();
}
public class Amazon.CognitoIdentity.Model.SetIdentityPoolRolesResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentity.Model.TooManyRequestsException : AmazonCognitoIdentityException {
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityRequest : AmazonCognitoIdentityRequest {
    private string _developerProviderName;
    private string _developerUserIdentifier;
    private string _identityId;
    private string _identityPoolId;
    public string DeveloperProviderName { get; public set; }
    public string DeveloperUserIdentifier { get; public set; }
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_DeveloperUserIdentifier();
    public void set_DeveloperUserIdentifier(string value);
    internal bool IsSetDeveloperUserIdentifier();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentity.Model.UnlinkIdentityRequest : AmazonCognitoIdentityRequest {
    private string _identityId;
    private Dictionary`2<string, string> _logins;
    private List`1<string> _loginsToRemove;
    public string IdentityId { get; public set; }
    public Dictionary`2<string, string> Logins { get; public set; }
    public List`1<string> LoginsToRemove { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public Dictionary`2<string, string> get_Logins();
    public void set_Logins(Dictionary`2<string, string> value);
    internal bool IsSetLogins();
    public List`1<string> get_LoginsToRemove();
    public void set_LoginsToRemove(List`1<string> value);
    internal bool IsSetLoginsToRemove();
}
public class Amazon.CognitoIdentity.Model.UnlinkIdentityResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentity.Model.UnprocessedIdentityId : object {
    private ErrorCode _errorCode;
    private string _identityId;
    public ErrorCode ErrorCode { get; public set; }
    public string IdentityId { get; public set; }
    public ErrorCode get_ErrorCode();
    public void set_ErrorCode(ErrorCode value);
    internal bool IsSetErrorCode();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
}
public class Amazon.CognitoIdentity.Model.UpdateIdentityPoolRequest : AmazonCognitoIdentityRequest {
    private Nullable`1<bool> _allowUnauthenticatedIdentities;
    private string _developerProviderName;
    private string _identityPoolId;
    private string _identityPoolName;
    private List`1<string> _openIdConnectProviderARNs;
    private Dictionary`2<string, string> _supportedLoginProviders;
    public bool AllowUnauthenticatedIdentities { get; public set; }
    public string DeveloperProviderName { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string IdentityPoolName { get; public set; }
    public List`1<string> OpenIdConnectProviderARNs { get; public set; }
    public Dictionary`2<string, string> SupportedLoginProviders { get; public set; }
    public bool get_AllowUnauthenticatedIdentities();
    public void set_AllowUnauthenticatedIdentities(bool value);
    internal bool IsSetAllowUnauthenticatedIdentities();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
    public List`1<string> get_OpenIdConnectProviderARNs();
    public void set_OpenIdConnectProviderARNs(List`1<string> value);
    internal bool IsSetOpenIdConnectProviderARNs();
    public Dictionary`2<string, string> get_SupportedLoginProviders();
    public void set_SupportedLoginProviders(Dictionary`2<string, string> value);
    internal bool IsSetSupportedLoginProviders();
}
public class Amazon.CognitoIdentity.Model.UpdateIdentityPoolResponse : UpdateIdentityPoolResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UpdateIdentityPoolResult class are now available on the UpdateIdentityPoolResponse class. You should use the properties on UpdateIdentityPoolResponse instead of accessing them through UpdateIdentityPoolResult.")]
public UpdateIdentityPoolResult UpdateIdentityPoolResult { get; }
    public UpdateIdentityPoolResult get_UpdateIdentityPoolResult();
}
public class Amazon.CognitoIdentity.Model.UpdateIdentityPoolResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _allowUnauthenticatedIdentities;
    private string _developerProviderName;
    private string _identityPoolId;
    private string _identityPoolName;
    private List`1<string> _openIdConnectProviderARNs;
    private Dictionary`2<string, string> _supportedLoginProviders;
    public bool AllowUnauthenticatedIdentities { get; public set; }
    public string DeveloperProviderName { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string IdentityPoolName { get; public set; }
    public List`1<string> OpenIdConnectProviderARNs { get; public set; }
    public Dictionary`2<string, string> SupportedLoginProviders { get; public set; }
    public bool get_AllowUnauthenticatedIdentities();
    public void set_AllowUnauthenticatedIdentities(bool value);
    internal bool IsSetAllowUnauthenticatedIdentities();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
    public List`1<string> get_OpenIdConnectProviderARNs();
    public void set_OpenIdConnectProviderARNs(List`1<string> value);
    internal bool IsSetOpenIdConnectProviderARNs();
    public Dictionary`2<string, string> get_SupportedLoginProviders();
    public void set_SupportedLoginProviders(Dictionary`2<string, string> value);
    internal bool IsSetSupportedLoginProviders();
}
public class Amazon.CognitoSync.AmazonCognitoSyncClient : AmazonServiceClient {
    public AmazonCognitoSyncClient(AWSCredentials credentials);
    public AmazonCognitoSyncClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonCognitoSyncClient(AWSCredentials credentials, AmazonCognitoSyncConfig clientConfig);
    public AmazonCognitoSyncClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonCognitoSyncClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonCognitoSyncClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonCognitoSyncConfig clientConfig);
    public AmazonCognitoSyncClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonCognitoSyncClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonCognitoSyncClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonCognitoSyncConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual void Dispose(bool disposing);
    internal BulkPublishResponse BulkPublish(BulkPublishRequest request);
    public sealed virtual Task`1<BulkPublishResponse> BulkPublishAsync(BulkPublishRequest request, CancellationToken cancellationToken);
    internal DeleteDatasetResponse DeleteDataset(DeleteDatasetRequest request);
    public sealed virtual Task`1<DeleteDatasetResponse> DeleteDatasetAsync(DeleteDatasetRequest request, CancellationToken cancellationToken);
    internal DescribeDatasetResponse DescribeDataset(DescribeDatasetRequest request);
    public sealed virtual Task`1<DescribeDatasetResponse> DescribeDatasetAsync(DescribeDatasetRequest request, CancellationToken cancellationToken);
    internal DescribeIdentityPoolUsageResponse DescribeIdentityPoolUsage(DescribeIdentityPoolUsageRequest request);
    public sealed virtual Task`1<DescribeIdentityPoolUsageResponse> DescribeIdentityPoolUsageAsync(DescribeIdentityPoolUsageRequest request, CancellationToken cancellationToken);
    internal DescribeIdentityUsageResponse DescribeIdentityUsage(DescribeIdentityUsageRequest request);
    public sealed virtual Task`1<DescribeIdentityUsageResponse> DescribeIdentityUsageAsync(DescribeIdentityUsageRequest request, CancellationToken cancellationToken);
    internal GetBulkPublishDetailsResponse GetBulkPublishDetails(GetBulkPublishDetailsRequest request);
    public sealed virtual Task`1<GetBulkPublishDetailsResponse> GetBulkPublishDetailsAsync(GetBulkPublishDetailsRequest request, CancellationToken cancellationToken);
    internal GetCognitoEventsResponse GetCognitoEvents(GetCognitoEventsRequest request);
    public sealed virtual Task`1<GetCognitoEventsResponse> GetCognitoEventsAsync(GetCognitoEventsRequest request, CancellationToken cancellationToken);
    internal GetIdentityPoolConfigurationResponse GetIdentityPoolConfiguration(GetIdentityPoolConfigurationRequest request);
    public sealed virtual Task`1<GetIdentityPoolConfigurationResponse> GetIdentityPoolConfigurationAsync(GetIdentityPoolConfigurationRequest request, CancellationToken cancellationToken);
    internal ListDatasetsResponse ListDatasets(ListDatasetsRequest request);
    public sealed virtual Task`1<ListDatasetsResponse> ListDatasetsAsync(ListDatasetsRequest request, CancellationToken cancellationToken);
    internal ListIdentityPoolUsageResponse ListIdentityPoolUsage(ListIdentityPoolUsageRequest request);
    public sealed virtual Task`1<ListIdentityPoolUsageResponse> ListIdentityPoolUsageAsync(ListIdentityPoolUsageRequest request, CancellationToken cancellationToken);
    internal ListRecordsResponse ListRecords(ListRecordsRequest request);
    public sealed virtual Task`1<ListRecordsResponse> ListRecordsAsync(ListRecordsRequest request, CancellationToken cancellationToken);
    internal RegisterDeviceResponse RegisterDevice(RegisterDeviceRequest request);
    public sealed virtual Task`1<RegisterDeviceResponse> RegisterDeviceAsync(RegisterDeviceRequest request, CancellationToken cancellationToken);
    internal SetCognitoEventsResponse SetCognitoEvents(SetCognitoEventsRequest request);
    public sealed virtual Task`1<SetCognitoEventsResponse> SetCognitoEventsAsync(SetCognitoEventsRequest request, CancellationToken cancellationToken);
    internal SetIdentityPoolConfigurationResponse SetIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request);
    public sealed virtual Task`1<SetIdentityPoolConfigurationResponse> SetIdentityPoolConfigurationAsync(SetIdentityPoolConfigurationRequest request, CancellationToken cancellationToken);
    internal SubscribeToDatasetResponse SubscribeToDataset(SubscribeToDatasetRequest request);
    public sealed virtual Task`1<SubscribeToDatasetResponse> SubscribeToDatasetAsync(SubscribeToDatasetRequest request, CancellationToken cancellationToken);
    internal UnsubscribeFromDatasetResponse UnsubscribeFromDataset(UnsubscribeFromDatasetRequest request);
    public sealed virtual Task`1<UnsubscribeFromDatasetResponse> UnsubscribeFromDatasetAsync(UnsubscribeFromDatasetRequest request, CancellationToken cancellationToken);
    internal UpdateRecordsResponse UpdateRecords(UpdateRecordsRequest request);
    public sealed virtual Task`1<UpdateRecordsResponse> UpdateRecordsAsync(UpdateRecordsRequest request, CancellationToken cancellationToken);
}
public class Amazon.CognitoSync.AmazonCognitoSyncConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.CognitoSync.AmazonCognitoSyncException : AmazonServiceException {
    public AmazonCognitoSyncException(string message);
    public AmazonCognitoSyncException(string message, Exception innerException);
    public AmazonCognitoSyncException(Exception innerException);
    public AmazonCognitoSyncException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonCognitoSyncException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.AmazonCognitoSyncRequest : AmazonWebServiceRequest {
}
public class Amazon.CognitoSync.BulkPublishStatus : ConstantClass {
    public static BulkPublishStatus FAILED;
    public static BulkPublishStatus IN_PROGRESS;
    public static BulkPublishStatus NOT_STARTED;
    public static BulkPublishStatus SUCCEEDED;
    public BulkPublishStatus(string value);
    private static BulkPublishStatus();
    public static BulkPublishStatus FindValue(string value);
    public static BulkPublishStatus op_Implicit(string value);
}
public interface Amazon.CognitoSync.IAmazonCognitoSync {
    public abstract virtual Task`1<BulkPublishResponse> BulkPublishAsync(BulkPublishRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDatasetResponse> DeleteDatasetAsync(DeleteDatasetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDatasetResponse> DescribeDatasetAsync(DescribeDatasetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdentityPoolUsageResponse> DescribeIdentityPoolUsageAsync(DescribeIdentityPoolUsageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdentityUsageResponse> DescribeIdentityUsageAsync(DescribeIdentityUsageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBulkPublishDetailsResponse> GetBulkPublishDetailsAsync(GetBulkPublishDetailsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCognitoEventsResponse> GetCognitoEventsAsync(GetCognitoEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityPoolConfigurationResponse> GetIdentityPoolConfigurationAsync(GetIdentityPoolConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDatasetsResponse> ListDatasetsAsync(ListDatasetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentityPoolUsageResponse> ListIdentityPoolUsageAsync(ListIdentityPoolUsageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListRecordsResponse> ListRecordsAsync(ListRecordsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterDeviceResponse> RegisterDeviceAsync(RegisterDeviceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetCognitoEventsResponse> SetCognitoEventsAsync(SetCognitoEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityPoolConfigurationResponse> SetIdentityPoolConfigurationAsync(SetIdentityPoolConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SubscribeToDatasetResponse> SubscribeToDatasetAsync(SubscribeToDatasetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnsubscribeFromDatasetResponse> UnsubscribeFromDatasetAsync(UnsubscribeFromDatasetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateRecordsResponse> UpdateRecordsAsync(UpdateRecordsRequest request, CancellationToken cancellationToken);
}
public class Amazon.CognitoSync.Internal.CognitoCredentialsRetriever : CredentialsRetriever {
    public CognitoCredentialsRetriever(AWSCredentials credentials);
    [AsyncStateMachineAttribute("Amazon.CognitoSync.Internal.CognitoCredentialsRetriever/<InvokeAsync>d__0`1")]
[DebuggerStepThroughAttribute]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    private static void SetIdentity(IExecutionContext executionContext, string identityId, string identityPoolId);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod6(IExecutionContext );
}
public class Amazon.CognitoSync.Model.AlreadyStreamedException : AmazonCognitoSyncException {
    public AlreadyStreamedException(string message);
    public AlreadyStreamedException(string message, Exception innerException);
    public AlreadyStreamedException(Exception innerException);
    public AlreadyStreamedException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public AlreadyStreamedException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.BulkPublishRequest : AmazonCognitoSyncRequest {
    private string _identityPoolId;
    public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.BulkPublishResponse : BulkPublishResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the BulkPublishResult class are now available on the BulkPublishResponse class. You should use the properties on BulkPublishResponse instead of accessing them through BulkPublishResult.")]
public BulkPublishResult BulkPublishResult { get; }
    public BulkPublishResult get_BulkPublishResult();
}
public class Amazon.CognitoSync.Model.BulkPublishResult : AmazonWebServiceResponse {
    private string _identityPoolId;
    public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.CognitoStreams : object {
    private string _roleArn;
    private StreamingStatus _streamingStatus;
    private string _streamName;
    public string RoleArn { get; public set; }
    public StreamingStatus StreamingStatus { get; public set; }
    public string StreamName { get; public set; }
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public StreamingStatus get_StreamingStatus();
    public void set_StreamingStatus(StreamingStatus value);
    internal bool IsSetStreamingStatus();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.CognitoSync.Model.ConcurrentModificationException : AmazonCognitoSyncException {
    public ConcurrentModificationException(string message);
    public ConcurrentModificationException(string message, Exception innerException);
    public ConcurrentModificationException(Exception innerException);
    public ConcurrentModificationException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ConcurrentModificationException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.Dataset : object {
    private Nullable`1<DateTime> _creationDate;
    private string _datasetName;
    private Nullable`1<long> _dataStorage;
    private string _identityId;
    private string _lastModifiedBy;
    private Nullable`1<DateTime> _lastModifiedDate;
    private Nullable`1<long> _numRecords;
    public DateTime CreationDate { get; public set; }
    public string DatasetName { get; public set; }
    public long DataStorage { get; public set; }
    public string IdentityId { get; public set; }
    public string LastModifiedBy { get; public set; }
    public DateTime LastModifiedDate { get; public set; }
    public long NumRecords { get; public set; }
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public string get_DatasetName();
    public void set_DatasetName(string value);
    internal bool IsSetDatasetName();
    public long get_DataStorage();
    public void set_DataStorage(long value);
    internal bool IsSetDataStorage();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_LastModifiedBy();
    public void set_LastModifiedBy(string value);
    internal bool IsSetLastModifiedBy();
    public DateTime get_LastModifiedDate();
    public void set_LastModifiedDate(DateTime value);
    internal bool IsSetLastModifiedDate();
    public long get_NumRecords();
    public void set_NumRecords(long value);
    internal bool IsSetNumRecords();
}
public class Amazon.CognitoSync.Model.DeleteDatasetRequest : AmazonCognitoSyncRequest {
    private string _datasetName;
    private string _identityId;
    private string _identityPoolId;
    public string DatasetName { get; public set; }
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string get_DatasetName();
    public void set_DatasetName(string value);
    internal bool IsSetDatasetName();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.DeleteDatasetResponse : DeleteDatasetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteDatasetResult class are now available on the DeleteDatasetResponse class. You should use the properties on DeleteDatasetResponse instead of accessing them through DeleteDatasetResult.")]
public DeleteDatasetResult DeleteDatasetResult { get; }
    public DeleteDatasetResult get_DeleteDatasetResult();
}
public class Amazon.CognitoSync.Model.DeleteDatasetResult : AmazonWebServiceResponse {
    private Dataset _dataset;
    public Dataset Dataset { get; public set; }
    public Dataset get_Dataset();
    public void set_Dataset(Dataset value);
    internal bool IsSetDataset();
}
public class Amazon.CognitoSync.Model.DescribeDatasetRequest : AmazonCognitoSyncRequest {
    private string _datasetName;
    private string _identityId;
    private string _identityPoolId;
    public string DatasetName { get; public set; }
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string get_DatasetName();
    public void set_DatasetName(string value);
    internal bool IsSetDatasetName();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.DescribeDatasetResponse : DescribeDatasetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeDatasetResult class are now available on the DescribeDatasetResponse class. You should use the properties on DescribeDatasetResponse instead of accessing them through DescribeDatasetResult.")]
public DescribeDatasetResult DescribeDatasetResult { get; }
    public DescribeDatasetResult get_DescribeDatasetResult();
}
public class Amazon.CognitoSync.Model.DescribeDatasetResult : AmazonWebServiceResponse {
    private Dataset _dataset;
    public Dataset Dataset { get; public set; }
    public Dataset get_Dataset();
    public void set_Dataset(Dataset value);
    internal bool IsSetDataset();
}
public class Amazon.CognitoSync.Model.DescribeIdentityPoolUsageRequest : AmazonCognitoSyncRequest {
    private string _identityPoolId;
    public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.DescribeIdentityPoolUsageResponse : DescribeIdentityPoolUsageResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeIdentityPoolUsageResult class are now available on the DescribeIdentityPoolUsageResponse class. You should use the properties on DescribeIdentityPoolUsageResponse instead of accessing them through DescribeIdentityPoolUsageResult.")]
public DescribeIdentityPoolUsageResult DescribeIdentityPoolUsageResult { get; }
    public DescribeIdentityPoolUsageResult get_DescribeIdentityPoolUsageResult();
}
public class Amazon.CognitoSync.Model.DescribeIdentityPoolUsageResult : AmazonWebServiceResponse {
    private IdentityPoolUsage _identityPoolUsage;
    public IdentityPoolUsage IdentityPoolUsage { get; public set; }
    public IdentityPoolUsage get_IdentityPoolUsage();
    public void set_IdentityPoolUsage(IdentityPoolUsage value);
    internal bool IsSetIdentityPoolUsage();
}
public class Amazon.CognitoSync.Model.DescribeIdentityUsageRequest : AmazonCognitoSyncRequest {
    private string _identityId;
    private string _identityPoolId;
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.DescribeIdentityUsageResponse : DescribeIdentityUsageResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeIdentityUsageResult class are now available on the DescribeIdentityUsageResponse class. You should use the properties on DescribeIdentityUsageResponse instead of accessing them through DescribeIdentityUsageResult.")]
public DescribeIdentityUsageResult DescribeIdentityUsageResult { get; }
    public DescribeIdentityUsageResult get_DescribeIdentityUsageResult();
}
public class Amazon.CognitoSync.Model.DescribeIdentityUsageResult : AmazonWebServiceResponse {
    private IdentityUsage _identityUsage;
    public IdentityUsage IdentityUsage { get; public set; }
    public IdentityUsage get_IdentityUsage();
    public void set_IdentityUsage(IdentityUsage value);
    internal bool IsSetIdentityUsage();
}
public class Amazon.CognitoSync.Model.DuplicateRequestException : AmazonCognitoSyncException {
    public DuplicateRequestException(string message);
    public DuplicateRequestException(string message, Exception innerException);
    public DuplicateRequestException(Exception innerException);
    public DuplicateRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DuplicateRequestException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.GetBulkPublishDetailsRequest : AmazonCognitoSyncRequest {
    private string _identityPoolId;
    public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.GetBulkPublishDetailsResponse : GetBulkPublishDetailsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetBulkPublishDetailsResult class are now available on the GetBulkPublishDetailsResponse class. You should use the properties on GetBulkPublishDetailsResponse instead of accessing them through GetBulkPublishDetailsResult.")]
public GetBulkPublishDetailsResult GetBulkPublishDetailsResult { get; }
    public GetBulkPublishDetailsResult get_GetBulkPublishDetailsResult();
}
public class Amazon.CognitoSync.Model.GetBulkPublishDetailsResult : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _bulkPublishCompleteTime;
    private Nullable`1<DateTime> _bulkPublishStartTime;
    private BulkPublishStatus _bulkPublishStatus;
    private string _failureMessage;
    private string _identityPoolId;
    public DateTime BulkPublishCompleteTime { get; public set; }
    public DateTime BulkPublishStartTime { get; public set; }
    public BulkPublishStatus BulkPublishStatus { get; public set; }
    public string FailureMessage { get; public set; }
    public string IdentityPoolId { get; public set; }
    public DateTime get_BulkPublishCompleteTime();
    public void set_BulkPublishCompleteTime(DateTime value);
    internal bool IsSetBulkPublishCompleteTime();
    public DateTime get_BulkPublishStartTime();
    public void set_BulkPublishStartTime(DateTime value);
    internal bool IsSetBulkPublishStartTime();
    public BulkPublishStatus get_BulkPublishStatus();
    public void set_BulkPublishStatus(BulkPublishStatus value);
    internal bool IsSetBulkPublishStatus();
    public string get_FailureMessage();
    public void set_FailureMessage(string value);
    internal bool IsSetFailureMessage();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.GetCognitoEventsRequest : AmazonCognitoSyncRequest {
    private string _identityPoolId;
    public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.GetCognitoEventsResponse : GetCognitoEventsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetCognitoEventsResult class are now available on the GetCognitoEventsResponse class. You should use the properties on GetCognitoEventsResponse instead of accessing them through GetCognitoEventsResult.")]
public GetCognitoEventsResult GetCognitoEventsResult { get; }
    public GetCognitoEventsResult get_GetCognitoEventsResult();
}
public class Amazon.CognitoSync.Model.GetCognitoEventsResult : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _events;
    public Dictionary`2<string, string> Events { get; public set; }
    public Dictionary`2<string, string> get_Events();
    public void set_Events(Dictionary`2<string, string> value);
    internal bool IsSetEvents();
}
public class Amazon.CognitoSync.Model.GetIdentityPoolConfigurationRequest : AmazonCognitoSyncRequest {
    private string _identityPoolId;
    public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.GetIdentityPoolConfigurationResponse : GetIdentityPoolConfigurationResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetIdentityPoolConfigurationResult class are now available on the GetIdentityPoolConfigurationResponse class. You should use the properties on GetIdentityPoolConfigurationResponse instead of accessing them through GetIdentityPoolConfigurationResult.")]
public GetIdentityPoolConfigurationResult GetIdentityPoolConfigurationResult { get; }
    public GetIdentityPoolConfigurationResult get_GetIdentityPoolConfigurationResult();
}
public class Amazon.CognitoSync.Model.GetIdentityPoolConfigurationResult : AmazonWebServiceResponse {
    private CognitoStreams _cognitoStreams;
    private string _identityPoolId;
    private PushSync _pushSync;
    public CognitoStreams CognitoStreams { get; public set; }
    public string IdentityPoolId { get; public set; }
    public PushSync PushSync { get; public set; }
    public CognitoStreams get_CognitoStreams();
    public void set_CognitoStreams(CognitoStreams value);
    internal bool IsSetCognitoStreams();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public PushSync get_PushSync();
    public void set_PushSync(PushSync value);
    internal bool IsSetPushSync();
}
public class Amazon.CognitoSync.Model.IdentityPoolUsage : object {
    private Nullable`1<long> _dataStorage;
    private string _identityPoolId;
    private Nullable`1<DateTime> _lastModifiedDate;
    private Nullable`1<long> _syncSessionsCount;
    public long DataStorage { get; public set; }
    public string IdentityPoolId { get; public set; }
    public DateTime LastModifiedDate { get; public set; }
    public long SyncSessionsCount { get; public set; }
    public long get_DataStorage();
    public void set_DataStorage(long value);
    internal bool IsSetDataStorage();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public DateTime get_LastModifiedDate();
    public void set_LastModifiedDate(DateTime value);
    internal bool IsSetLastModifiedDate();
    public long get_SyncSessionsCount();
    public void set_SyncSessionsCount(long value);
    internal bool IsSetSyncSessionsCount();
}
public class Amazon.CognitoSync.Model.IdentityUsage : object {
    private Nullable`1<int> _datasetCount;
    private Nullable`1<long> _dataStorage;
    private string _identityId;
    private string _identityPoolId;
    private Nullable`1<DateTime> _lastModifiedDate;
    public int DatasetCount { get; public set; }
    public long DataStorage { get; public set; }
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public DateTime LastModifiedDate { get; public set; }
    public int get_DatasetCount();
    public void set_DatasetCount(int value);
    internal bool IsSetDatasetCount();
    public long get_DataStorage();
    public void set_DataStorage(long value);
    internal bool IsSetDataStorage();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public DateTime get_LastModifiedDate();
    public void set_LastModifiedDate(DateTime value);
    internal bool IsSetLastModifiedDate();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.BulkPublishRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BulkPublishRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.BulkPublishResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BulkPublishResponseUnmarshaller _instance;
    public static BulkPublishResponseUnmarshaller Instance { get; }
    private static BulkPublishResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BulkPublishResponseUnmarshaller GetInstance();
    public static BulkPublishResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.CognitoStreamsMarshaller : object {
    public static CognitoStreamsMarshaller Instance;
    private static CognitoStreamsMarshaller();
    public sealed virtual void Marshall(CognitoStreams requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.CognitoStreamsUnmarshaller : object {
    private static CognitoStreamsUnmarshaller _instance;
    public static CognitoStreamsUnmarshaller Instance { get; }
    private static CognitoStreamsUnmarshaller();
    private sealed virtual override CognitoStreams Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoSync.Model.CognitoStreams,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CognitoStreams Unmarshall(JsonUnmarshallerContext context);
    public static CognitoStreamsUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.DatasetUnmarshaller : object {
    private static DatasetUnmarshaller _instance;
    public static DatasetUnmarshaller Instance { get; }
    private static DatasetUnmarshaller();
    private sealed virtual override Dataset Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoSync.Model.Dataset,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Dataset Unmarshall(JsonUnmarshallerContext context);
    public static DatasetUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDatasetRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDatasetResponseUnmarshaller _instance;
    public static DeleteDatasetResponseUnmarshaller Instance { get; }
    private static DeleteDatasetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDatasetResponseUnmarshaller GetInstance();
    public static DeleteDatasetResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDatasetRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeDatasetResponseUnmarshaller _instance;
    public static DescribeDatasetResponseUnmarshaller Instance { get; }
    private static DescribeDatasetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDatasetResponseUnmarshaller GetInstance();
    public static DescribeDatasetResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeIdentityPoolUsageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIdentityPoolUsageRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeIdentityPoolUsageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeIdentityPoolUsageResponseUnmarshaller _instance;
    public static DescribeIdentityPoolUsageResponseUnmarshaller Instance { get; }
    private static DescribeIdentityPoolUsageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIdentityPoolUsageResponseUnmarshaller GetInstance();
    public static DescribeIdentityPoolUsageResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeIdentityUsageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIdentityUsageRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeIdentityUsageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeIdentityUsageResponseUnmarshaller _instance;
    public static DescribeIdentityUsageResponseUnmarshaller Instance { get; }
    private static DescribeIdentityUsageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIdentityUsageResponseUnmarshaller GetInstance();
    public static DescribeIdentityUsageResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.GetBulkPublishDetailsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBulkPublishDetailsRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.GetBulkPublishDetailsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetBulkPublishDetailsResponseUnmarshaller _instance;
    public static GetBulkPublishDetailsResponseUnmarshaller Instance { get; }
    private static GetBulkPublishDetailsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetBulkPublishDetailsResponseUnmarshaller GetInstance();
    public static GetBulkPublishDetailsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.GetCognitoEventsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCognitoEventsRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.GetCognitoEventsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCognitoEventsResponseUnmarshaller _instance;
    public static GetCognitoEventsResponseUnmarshaller Instance { get; }
    private static GetCognitoEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCognitoEventsResponseUnmarshaller GetInstance();
    public static GetCognitoEventsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.GetIdentityPoolConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityPoolConfigurationRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.GetIdentityPoolConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetIdentityPoolConfigurationResponseUnmarshaller _instance;
    public static GetIdentityPoolConfigurationResponseUnmarshaller Instance { get; }
    private static GetIdentityPoolConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityPoolConfigurationResponseUnmarshaller GetInstance();
    public static GetIdentityPoolConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.IdentityPoolUsageUnmarshaller : object {
    private static IdentityPoolUsageUnmarshaller _instance;
    public static IdentityPoolUsageUnmarshaller Instance { get; }
    private static IdentityPoolUsageUnmarshaller();
    private sealed virtual override IdentityPoolUsage Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoSync.Model.IdentityPoolUsage,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityPoolUsage Unmarshall(JsonUnmarshallerContext context);
    public static IdentityPoolUsageUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.IdentityUsageUnmarshaller : object {
    private static IdentityUsageUnmarshaller _instance;
    public static IdentityUsageUnmarshaller Instance { get; }
    private static IdentityUsageUnmarshaller();
    private sealed virtual override IdentityUsage Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoSync.Model.IdentityUsage,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityUsage Unmarshall(JsonUnmarshallerContext context);
    public static IdentityUsageUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.KinesisStreamingMarshaller : object {
    public static KinesisStreamingMarshaller Instance;
    private static KinesisStreamingMarshaller();
    public sealed virtual void Marshall(KinesisStreaming requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.KinesisStreamingUnmarshaller : object {
    private static KinesisStreamingUnmarshaller _instance;
    public static KinesisStreamingUnmarshaller Instance { get; }
    private static KinesisStreamingUnmarshaller();
    private sealed virtual override KinesisStreaming Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoSync.Model.KinesisStreaming,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KinesisStreaming Unmarshall(JsonUnmarshallerContext context);
    public static KinesisStreamingUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListDatasetsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDatasetsRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListDatasetsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDatasetsResponseUnmarshaller _instance;
    public static ListDatasetsResponseUnmarshaller Instance { get; }
    private static ListDatasetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDatasetsResponseUnmarshaller GetInstance();
    public static ListDatasetsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListIdentityPoolUsageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListIdentityPoolUsageRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListIdentityPoolUsageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListIdentityPoolUsageResponseUnmarshaller _instance;
    public static ListIdentityPoolUsageResponseUnmarshaller Instance { get; }
    private static ListIdentityPoolUsageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListIdentityPoolUsageResponseUnmarshaller GetInstance();
    public static ListIdentityPoolUsageResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListRecordsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListRecordsRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListRecordsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListRecordsResponseUnmarshaller _instance;
    public static ListRecordsResponseUnmarshaller Instance { get; }
    private static ListRecordsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListRecordsResponseUnmarshaller GetInstance();
    public static ListRecordsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.PushSyncMarshaller : object {
    public static PushSyncMarshaller Instance;
    private static PushSyncMarshaller();
    public sealed virtual void Marshall(PushSync requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.PushSyncUnmarshaller : object {
    private static PushSyncUnmarshaller _instance;
    public static PushSyncUnmarshaller Instance { get; }
    private static PushSyncUnmarshaller();
    private sealed virtual override PushSync Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoSync.Model.PushSync,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PushSync Unmarshall(JsonUnmarshallerContext context);
    public static PushSyncUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.RecordPatchMarshaller : object {
    public static RecordPatchMarshaller Instance;
    private static RecordPatchMarshaller();
    public sealed virtual void Marshall(RecordPatch requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.RecordUnmarshaller : object {
    private static RecordUnmarshaller _instance;
    public static RecordUnmarshaller Instance { get; }
    private static RecordUnmarshaller();
    private sealed virtual override Record Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoSync.Model.Record,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Record Unmarshall(JsonUnmarshallerContext context);
    public static RecordUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.RegisterDeviceRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterDeviceRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.RegisterDeviceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RegisterDeviceResponseUnmarshaller _instance;
    public static RegisterDeviceResponseUnmarshaller Instance { get; }
    private static RegisterDeviceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterDeviceResponseUnmarshaller GetInstance();
    public static RegisterDeviceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.SetCognitoEventsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetCognitoEventsRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.SetCognitoEventsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetCognitoEventsResponseUnmarshaller _instance;
    public static SetCognitoEventsResponseUnmarshaller Instance { get; }
    private static SetCognitoEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetCognitoEventsResponseUnmarshaller GetInstance();
    public static SetCognitoEventsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.SetIdentityPoolConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityPoolConfigurationRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.SetIdentityPoolConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetIdentityPoolConfigurationResponseUnmarshaller _instance;
    public static SetIdentityPoolConfigurationResponseUnmarshaller Instance { get; }
    private static SetIdentityPoolConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityPoolConfigurationResponseUnmarshaller GetInstance();
    public static SetIdentityPoolConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.SubscribeToDatasetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SubscribeToDatasetRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.SubscribeToDatasetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SubscribeToDatasetResponseUnmarshaller _instance;
    public static SubscribeToDatasetResponseUnmarshaller Instance { get; }
    private static SubscribeToDatasetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SubscribeToDatasetResponseUnmarshaller GetInstance();
    public static SubscribeToDatasetResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.UnsubscribeFromDatasetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnsubscribeFromDatasetRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.UnsubscribeFromDatasetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UnsubscribeFromDatasetResponseUnmarshaller _instance;
    public static UnsubscribeFromDatasetResponseUnmarshaller Instance { get; }
    private static UnsubscribeFromDatasetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnsubscribeFromDatasetResponseUnmarshaller GetInstance();
    public static UnsubscribeFromDatasetResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.UpdateRecordsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateRecordsRequest publicRequest);
}
public class Amazon.CognitoSync.Model.Internal.MarshallTransformations.UpdateRecordsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateRecordsResponseUnmarshaller _instance;
    public static UpdateRecordsResponseUnmarshaller Instance { get; }
    private static UpdateRecordsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateRecordsResponseUnmarshaller GetInstance();
    public static UpdateRecordsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoSync.Model.InternalErrorException : AmazonCognitoSyncException {
    public InternalErrorException(string message);
    public InternalErrorException(string message, Exception innerException);
    public InternalErrorException(Exception innerException);
    public InternalErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InternalErrorException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.InvalidConfigurationException : AmazonCognitoSyncException {
    public InvalidConfigurationException(string message);
    public InvalidConfigurationException(string message, Exception innerException);
    public InvalidConfigurationException(Exception innerException);
    public InvalidConfigurationException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidConfigurationException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.InvalidLambdaFunctionOutputException : AmazonCognitoSyncException {
    public InvalidLambdaFunctionOutputException(string message);
    public InvalidLambdaFunctionOutputException(string message, Exception innerException);
    public InvalidLambdaFunctionOutputException(Exception innerException);
    public InvalidLambdaFunctionOutputException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidLambdaFunctionOutputException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.InvalidParameterException : AmazonCognitoSyncException {
    public InvalidParameterException(string message);
    public InvalidParameterException(string message, Exception innerException);
    public InvalidParameterException(Exception innerException);
    public InvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidParameterException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.KinesisStreaming : object {
    private string _kinesisRoleArn;
    private StreamingStatus _streamingStatus;
    private string _streamName;
    public string KinesisRoleArn { get; public set; }
    public StreamingStatus StreamingStatus { get; public set; }
    public string StreamName { get; public set; }
    public string get_KinesisRoleArn();
    public void set_KinesisRoleArn(string value);
    internal bool IsSetKinesisRoleArn();
    public StreamingStatus get_StreamingStatus();
    public void set_StreamingStatus(StreamingStatus value);
    internal bool IsSetStreamingStatus();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.CognitoSync.Model.LambdaThrottledException : AmazonCognitoSyncException {
    public LambdaThrottledException(string message);
    public LambdaThrottledException(string message, Exception innerException);
    public LambdaThrottledException(Exception innerException);
    public LambdaThrottledException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LambdaThrottledException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.LimitExceededException : AmazonCognitoSyncException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.ListDatasetsRequest : AmazonCognitoSyncRequest {
    private string _identityId;
    private string _identityPoolId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoSync.Model.ListDatasetsResponse : ListDatasetsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListDatasetsResult class are now available on the ListDatasetsResponse class. You should use the properties on ListDatasetsResponse instead of accessing them through ListDatasetsResult.")]
public ListDatasetsResult ListDatasetsResult { get; }
    public ListDatasetsResult get_ListDatasetsResult();
}
public class Amazon.CognitoSync.Model.ListDatasetsResult : AmazonWebServiceResponse {
    private Nullable`1<int> _count;
    private List`1<Dataset> _datasets;
    private string _nextToken;
    public int Count { get; public set; }
    public List`1<Dataset> Datasets { get; public set; }
    public string NextToken { get; public set; }
    public int get_Count();
    public void set_Count(int value);
    internal bool IsSetCount();
    public List`1<Dataset> get_Datasets();
    public void set_Datasets(List`1<Dataset> value);
    internal bool IsSetDatasets();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoSync.Model.ListIdentityPoolUsageRequest : AmazonCognitoSyncRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoSync.Model.ListIdentityPoolUsageResponse : ListIdentityPoolUsageResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListIdentityPoolUsageResult class are now available on the ListIdentityPoolUsageResponse class. You should use the properties on ListIdentityPoolUsageResponse instead of accessing them through ListIdentityPoolUsageResult.")]
public ListIdentityPoolUsageResult ListIdentityPoolUsageResult { get; }
    public ListIdentityPoolUsageResult get_ListIdentityPoolUsageResult();
}
public class Amazon.CognitoSync.Model.ListIdentityPoolUsageResult : AmazonWebServiceResponse {
    private Nullable`1<int> _count;
    private List`1<IdentityPoolUsage> _identityPoolUsages;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public int Count { get; public set; }
    public List`1<IdentityPoolUsage> IdentityPoolUsages { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public int get_Count();
    public void set_Count(int value);
    internal bool IsSetCount();
    public List`1<IdentityPoolUsage> get_IdentityPoolUsages();
    public void set_IdentityPoolUsages(List`1<IdentityPoolUsage> value);
    internal bool IsSetIdentityPoolUsages();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoSync.Model.ListRecordsRequest : AmazonCognitoSyncRequest {
    private string _datasetName;
    private string _identityId;
    private string _identityPoolId;
    private Nullable`1<long> _lastSyncCount;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _syncSessionToken;
    public string DatasetName { get; public set; }
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public long LastSyncCount { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string SyncSessionToken { get; public set; }
    public string get_DatasetName();
    public void set_DatasetName(string value);
    internal bool IsSetDatasetName();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public long get_LastSyncCount();
    public void set_LastSyncCount(long value);
    internal bool IsSetLastSyncCount();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SyncSessionToken();
    public void set_SyncSessionToken(string value);
    internal bool IsSetSyncSessionToken();
}
public class Amazon.CognitoSync.Model.ListRecordsResponse : ListRecordsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListRecordsResult class are now available on the ListRecordsResponse class. You should use the properties on ListRecordsResponse instead of accessing them through ListRecordsResult.")]
public ListRecordsResult ListRecordsResult { get; }
    public ListRecordsResult get_ListRecordsResult();
}
public class Amazon.CognitoSync.Model.ListRecordsResult : AmazonWebServiceResponse {
    private Nullable`1<int> _count;
    private Nullable`1<bool> _datasetDeletedAfterRequestedSyncCount;
    private Nullable`1<bool> _datasetExists;
    private Nullable`1<long> _datasetSyncCount;
    private string _lastModifiedBy;
    private List`1<string> _mergedDatasetNames;
    private string _nextToken;
    private List`1<Record> _records;
    private string _syncSessionToken;
    public int Count { get; public set; }
    public bool DatasetDeletedAfterRequestedSyncCount { get; public set; }
    public bool DatasetExists { get; public set; }
    public long DatasetSyncCount { get; public set; }
    public string LastModifiedBy { get; public set; }
    public List`1<string> MergedDatasetNames { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Record> Records { get; public set; }
    public string SyncSessionToken { get; public set; }
    public int get_Count();
    public void set_Count(int value);
    internal bool IsSetCount();
    public bool get_DatasetDeletedAfterRequestedSyncCount();
    public void set_DatasetDeletedAfterRequestedSyncCount(bool value);
    internal bool IsSetDatasetDeletedAfterRequestedSyncCount();
    public bool get_DatasetExists();
    public void set_DatasetExists(bool value);
    internal bool IsSetDatasetExists();
    public long get_DatasetSyncCount();
    public void set_DatasetSyncCount(long value);
    internal bool IsSetDatasetSyncCount();
    public string get_LastModifiedBy();
    public void set_LastModifiedBy(string value);
    internal bool IsSetLastModifiedBy();
    public List`1<string> get_MergedDatasetNames();
    public void set_MergedDatasetNames(List`1<string> value);
    internal bool IsSetMergedDatasetNames();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Record> get_Records();
    public void set_Records(List`1<Record> value);
    internal bool IsSetRecords();
    public string get_SyncSessionToken();
    public void set_SyncSessionToken(string value);
    internal bool IsSetSyncSessionToken();
}
public class Amazon.CognitoSync.Model.NotAuthorizedException : AmazonCognitoSyncException {
    public NotAuthorizedException(string message);
    public NotAuthorizedException(string message, Exception innerException);
    public NotAuthorizedException(Exception innerException);
    public NotAuthorizedException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NotAuthorizedException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.PushSync : object {
    private List`1<string> _applicationArns;
    private string _roleArn;
    public List`1<string> ApplicationArns { get; public set; }
    public string RoleArn { get; public set; }
    public List`1<string> get_ApplicationArns();
    public void set_ApplicationArns(List`1<string> value);
    internal bool IsSetApplicationArns();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.CognitoSync.Model.Record : object {
    private Nullable`1<DateTime> _deviceLastModifiedDate;
    private string _key;
    private string _lastModifiedBy;
    private Nullable`1<DateTime> _lastModifiedDate;
    private Nullable`1<long> _syncCount;
    private string _value;
    public DateTime DeviceLastModifiedDate { get; public set; }
    public string Key { get; public set; }
    public string LastModifiedBy { get; public set; }
    public DateTime LastModifiedDate { get; public set; }
    public long SyncCount { get; public set; }
    public string Value { get; public set; }
    public DateTime get_DeviceLastModifiedDate();
    public void set_DeviceLastModifiedDate(DateTime value);
    internal bool IsSetDeviceLastModifiedDate();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_LastModifiedBy();
    public void set_LastModifiedBy(string value);
    internal bool IsSetLastModifiedBy();
    public DateTime get_LastModifiedDate();
    public void set_LastModifiedDate(DateTime value);
    internal bool IsSetLastModifiedDate();
    public long get_SyncCount();
    public void set_SyncCount(long value);
    internal bool IsSetSyncCount();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CognitoSync.Model.RecordPatch : object {
    private Nullable`1<DateTime> _deviceLastModifiedDate;
    private string _key;
    private Operation _op;
    private Nullable`1<long> _syncCount;
    private string _value;
    public DateTime DeviceLastModifiedDate { get; public set; }
    public string Key { get; public set; }
    public Operation Op { get; public set; }
    public long SyncCount { get; public set; }
    public string Value { get; public set; }
    public DateTime get_DeviceLastModifiedDate();
    public void set_DeviceLastModifiedDate(DateTime value);
    internal bool IsSetDeviceLastModifiedDate();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public Operation get_Op();
    public void set_Op(Operation value);
    internal bool IsSetOp();
    public long get_SyncCount();
    public void set_SyncCount(long value);
    internal bool IsSetSyncCount();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CognitoSync.Model.RegisterDeviceRequest : AmazonCognitoSyncRequest {
    private string _identityId;
    private string _identityPoolId;
    private Platform _platform;
    private string _token;
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public Platform Platform { get; public set; }
    public string Token { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Platform get_Platform();
    public void set_Platform(Platform value);
    internal bool IsSetPlatform();
    public string get_Token();
    public void set_Token(string value);
    internal bool IsSetToken();
}
public class Amazon.CognitoSync.Model.RegisterDeviceResponse : RegisterDeviceResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the RegisterDeviceResult class are now available on the RegisterDeviceResponse class. You should use the properties on RegisterDeviceResponse instead of accessing them through RegisterDeviceResult.")]
public RegisterDeviceResult RegisterDeviceResult { get; }
    public RegisterDeviceResult get_RegisterDeviceResult();
}
public class Amazon.CognitoSync.Model.RegisterDeviceResult : AmazonWebServiceResponse {
    private string _deviceId;
    public string DeviceId { get; public set; }
    public string get_DeviceId();
    public void set_DeviceId(string value);
    internal bool IsSetDeviceId();
}
public class Amazon.CognitoSync.Model.ResourceConflictException : AmazonCognitoSyncException {
    public ResourceConflictException(string message);
    public ResourceConflictException(string message, Exception innerException);
    public ResourceConflictException(Exception innerException);
    public ResourceConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceConflictException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.ResourceNotFoundException : AmazonCognitoSyncException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.SetCognitoEventsRequest : AmazonCognitoSyncRequest {
    private Dictionary`2<string, string> _events;
    private string _identityPoolId;
    public Dictionary`2<string, string> Events { get; public set; }
    public string IdentityPoolId { get; public set; }
    public Dictionary`2<string, string> get_Events();
    public void set_Events(Dictionary`2<string, string> value);
    internal bool IsSetEvents();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.SetCognitoEventsResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoSync.Model.SetIdentityPoolConfigurationRequest : AmazonCognitoSyncRequest {
    private CognitoStreams _cognitoStreams;
    private string _identityPoolId;
    private PushSync _pushSync;
    public CognitoStreams CognitoStreams { get; public set; }
    public string IdentityPoolId { get; public set; }
    public PushSync PushSync { get; public set; }
    public CognitoStreams get_CognitoStreams();
    public void set_CognitoStreams(CognitoStreams value);
    internal bool IsSetCognitoStreams();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public PushSync get_PushSync();
    public void set_PushSync(PushSync value);
    internal bool IsSetPushSync();
}
public class Amazon.CognitoSync.Model.SetIdentityPoolConfigurationResponse : SetIdentityPoolConfigurationResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SetIdentityPoolConfigurationResult class are now available on the SetIdentityPoolConfigurationResponse class. You should use the properties on SetIdentityPoolConfigurationResponse instead of accessing them through SetIdentityPoolConfigurationResult.")]
public SetIdentityPoolConfigurationResult SetIdentityPoolConfigurationResult { get; }
    public SetIdentityPoolConfigurationResult get_SetIdentityPoolConfigurationResult();
}
public class Amazon.CognitoSync.Model.SetIdentityPoolConfigurationResult : AmazonWebServiceResponse {
    private CognitoStreams _cognitoStreams;
    private string _identityPoolId;
    private PushSync _pushSync;
    public CognitoStreams CognitoStreams { get; public set; }
    public string IdentityPoolId { get; public set; }
    public PushSync PushSync { get; public set; }
    public CognitoStreams get_CognitoStreams();
    public void set_CognitoStreams(CognitoStreams value);
    internal bool IsSetCognitoStreams();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public PushSync get_PushSync();
    public void set_PushSync(PushSync value);
    internal bool IsSetPushSync();
}
public class Amazon.CognitoSync.Model.SubscribeToDatasetRequest : AmazonCognitoSyncRequest {
    private string _datasetName;
    private string _deviceId;
    private string _identityId;
    private string _identityPoolId;
    public string DatasetName { get; public set; }
    public string DeviceId { get; public set; }
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string get_DatasetName();
    public void set_DatasetName(string value);
    internal bool IsSetDatasetName();
    public string get_DeviceId();
    public void set_DeviceId(string value);
    internal bool IsSetDeviceId();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.SubscribeToDatasetResponse : SubscribeToDatasetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SubscribeToDatasetResult class are now available on the SubscribeToDatasetResponse class. You should use the properties on SubscribeToDatasetResponse instead of accessing them through SubscribeToDatasetResult.")]
public SubscribeToDatasetResult SubscribeToDatasetResult { get; }
    public SubscribeToDatasetResult get_SubscribeToDatasetResult();
}
public class Amazon.CognitoSync.Model.SubscribeToDatasetResult : AmazonWebServiceResponse {
}
public class Amazon.CognitoSync.Model.TooManyRequestsException : AmazonCognitoSyncException {
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoSync.Model.UnsubscribeFromDatasetRequest : AmazonCognitoSyncRequest {
    private string _datasetName;
    private string _deviceId;
    private string _identityId;
    private string _identityPoolId;
    public string DatasetName { get; public set; }
    public string DeviceId { get; public set; }
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public string get_DatasetName();
    public void set_DatasetName(string value);
    internal bool IsSetDatasetName();
    public string get_DeviceId();
    public void set_DeviceId(string value);
    internal bool IsSetDeviceId();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoSync.Model.UnsubscribeFromDatasetResponse : UnsubscribeFromDatasetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UnsubscribeFromDatasetResult class are now available on the UnsubscribeFromDatasetResponse class. You should use the properties on UnsubscribeFromDatasetResponse instead of accessing them through UnsubscribeFromDatasetResult.")]
public UnsubscribeFromDatasetResult UnsubscribeFromDatasetResult { get; }
    public UnsubscribeFromDatasetResult get_UnsubscribeFromDatasetResult();
}
public class Amazon.CognitoSync.Model.UnsubscribeFromDatasetResult : AmazonWebServiceResponse {
}
public class Amazon.CognitoSync.Model.UpdateRecordsRequest : AmazonCognitoSyncRequest {
    private string _clientContext;
    private string _datasetName;
    private string _deviceId;
    private string _identityId;
    private string _identityPoolId;
    private List`1<RecordPatch> _recordPatches;
    private string _syncSessionToken;
    public string ClientContext { get; public set; }
    public string DatasetName { get; public set; }
    public string DeviceId { get; public set; }
    public string IdentityId { get; public set; }
    public string IdentityPoolId { get; public set; }
    public List`1<RecordPatch> RecordPatches { get; public set; }
    public string SyncSessionToken { get; public set; }
    public string get_ClientContext();
    public void set_ClientContext(string value);
    internal bool IsSetClientContext();
    public string get_DatasetName();
    public void set_DatasetName(string value);
    internal bool IsSetDatasetName();
    public string get_DeviceId();
    public void set_DeviceId(string value);
    internal bool IsSetDeviceId();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public List`1<RecordPatch> get_RecordPatches();
    public void set_RecordPatches(List`1<RecordPatch> value);
    internal bool IsSetRecordPatches();
    public string get_SyncSessionToken();
    public void set_SyncSessionToken(string value);
    internal bool IsSetSyncSessionToken();
}
public class Amazon.CognitoSync.Model.UpdateRecordsResponse : UpdateRecordsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UpdateRecordsResult class are now available on the UpdateRecordsResponse class. You should use the properties on UpdateRecordsResponse instead of accessing them through UpdateRecordsResult.")]
public UpdateRecordsResult UpdateRecordsResult { get; }
    public UpdateRecordsResult get_UpdateRecordsResult();
}
public class Amazon.CognitoSync.Model.UpdateRecordsResult : AmazonWebServiceResponse {
    private List`1<Record> _records;
    public List`1<Record> Records { get; public set; }
    public List`1<Record> get_Records();
    public void set_Records(List`1<Record> value);
    internal bool IsSetRecords();
}
public class Amazon.CognitoSync.Operation : ConstantClass {
    public static Operation Remove;
    public static Operation Replace;
    public Operation(string value);
    private static Operation();
    public static Operation FindValue(string value);
    public static Operation op_Implicit(string value);
}
public class Amazon.CognitoSync.Platform : ConstantClass {
    public static Platform ADM;
    public static Platform APNS;
    public static Platform APNS_SANDBOX;
    public static Platform GCM;
    public Platform(string value);
    private static Platform();
    public static Platform FindValue(string value);
    public static Platform op_Implicit(string value);
}
public class Amazon.CognitoSync.StreamingStatus : ConstantClass {
    public static StreamingStatus DISABLED;
    public static StreamingStatus ENABLED;
    public StreamingStatus(string value);
    private static StreamingStatus();
    public static StreamingStatus FindValue(string value);
    public static StreamingStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.AmazonDynamoDBClient : AmazonServiceClient {
    public AmazonDynamoDBClient(AWSCredentials credentials);
    public AmazonDynamoDBClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonDynamoDBClient(AWSCredentials credentials, AmazonDynamoDBConfig clientConfig);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonDynamoDBConfig clientConfig);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonDynamoDBConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual void Dispose(bool disposing);
    internal BatchGetItemResponse BatchGetItem(BatchGetItemRequest request);
    public sealed virtual Task`1<BatchGetItemResponse> BatchGetItemAsync(BatchGetItemRequest request, CancellationToken cancellationToken);
    internal BatchWriteItemResponse BatchWriteItem(BatchWriteItemRequest request);
    public sealed virtual Task`1<BatchWriteItemResponse> BatchWriteItemAsync(BatchWriteItemRequest request, CancellationToken cancellationToken);
    internal CreateTableResponse CreateTable(CreateTableRequest request);
    public sealed virtual Task`1<CreateTableResponse> CreateTableAsync(CreateTableRequest request, CancellationToken cancellationToken);
    internal DeleteItemResponse DeleteItem(DeleteItemRequest request);
    public sealed virtual Task`1<DeleteItemResponse> DeleteItemAsync(DeleteItemRequest request, CancellationToken cancellationToken);
    internal DeleteTableResponse DeleteTable(DeleteTableRequest request);
    public sealed virtual Task`1<DeleteTableResponse> DeleteTableAsync(DeleteTableRequest request, CancellationToken cancellationToken);
    internal DescribeLimitsResponse DescribeLimits(DescribeLimitsRequest request);
    public sealed virtual Task`1<DescribeLimitsResponse> DescribeLimitsAsync(DescribeLimitsRequest request, CancellationToken cancellationToken);
    internal DescribeTableResponse DescribeTable(DescribeTableRequest request);
    public sealed virtual Task`1<DescribeTableResponse> DescribeTableAsync(DescribeTableRequest request, CancellationToken cancellationToken);
    internal GetItemResponse GetItem(GetItemRequest request);
    public sealed virtual Task`1<GetItemResponse> GetItemAsync(GetItemRequest request, CancellationToken cancellationToken);
    internal ListTablesResponse ListTables();
    internal ListTablesResponse ListTables(ListTablesRequest request);
    public sealed virtual Task`1<ListTablesResponse> ListTablesAsync(ListTablesRequest request, CancellationToken cancellationToken);
    internal PutItemResponse PutItem(PutItemRequest request);
    public sealed virtual Task`1<PutItemResponse> PutItemAsync(PutItemRequest request, CancellationToken cancellationToken);
    internal QueryResponse Query(QueryRequest request);
    public sealed virtual Task`1<QueryResponse> QueryAsync(QueryRequest request, CancellationToken cancellationToken);
    internal ScanResponse Scan(ScanRequest request);
    public sealed virtual Task`1<ScanResponse> ScanAsync(ScanRequest request, CancellationToken cancellationToken);
    internal UpdateItemResponse UpdateItem(UpdateItemRequest request);
    public sealed virtual Task`1<UpdateItemResponse> UpdateItemAsync(UpdateItemRequest request, CancellationToken cancellationToken);
    internal UpdateTableResponse UpdateTable(UpdateTableRequest request);
    public sealed virtual Task`1<UpdateTableResponse> UpdateTableAsync(UpdateTableRequest request, CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.AmazonDynamoDBConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.DynamoDBv2.AmazonDynamoDBException : AmazonServiceException {
    public AmazonDynamoDBException(string message);
    public AmazonDynamoDBException(string message, Exception innerException);
    public AmazonDynamoDBException(Exception innerException);
    public AmazonDynamoDBException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonDynamoDBException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.AmazonDynamoDBRequest : AmazonWebServiceRequest {
}
public class Amazon.DynamoDBv2.AmazonDynamoDBStreamsClient : AmazonServiceClient {
    public AmazonDynamoDBStreamsClient(AWSCredentials credentials);
    public AmazonDynamoDBStreamsClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonDynamoDBStreamsClient(AWSCredentials credentials, AmazonDynamoDBStreamsConfig clientConfig);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonDynamoDBStreamsConfig clientConfig);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonDynamoDBStreamsConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual void Dispose(bool disposing);
    internal DescribeStreamResponse DescribeStream(DescribeStreamRequest request);
    public sealed virtual Task`1<DescribeStreamResponse> DescribeStreamAsync(DescribeStreamRequest request, CancellationToken cancellationToken);
    internal GetRecordsResponse GetRecords(GetRecordsRequest request);
    public sealed virtual Task`1<GetRecordsResponse> GetRecordsAsync(GetRecordsRequest request, CancellationToken cancellationToken);
    internal GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request);
    public sealed virtual Task`1<GetShardIteratorResponse> GetShardIteratorAsync(GetShardIteratorRequest request, CancellationToken cancellationToken);
    internal ListStreamsResponse ListStreams();
    internal ListStreamsResponse ListStreams(ListStreamsRequest request);
    public sealed virtual Task`1<ListStreamsResponse> ListStreamsAsync(ListStreamsRequest request, CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.AmazonDynamoDBStreamsConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.DynamoDBv2.AmazonDynamoDBStreamsRequest : AmazonWebServiceRequest {
}
internal class Amazon.DynamoDBv2.AsyncCall : MulticastDelegate {
    public AsyncCall(object object, IntPtr method);
    public virtual object Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual object EndInvoke(IAsyncResult result);
}
public class Amazon.DynamoDBv2.AttributeAction : ConstantClass {
    public static AttributeAction ADD;
    public static AttributeAction DELETE;
    public static AttributeAction PUT;
    public AttributeAction(string value);
    private static AttributeAction();
    public static AttributeAction FindValue(string value);
    public static AttributeAction op_Implicit(string value);
}
public class Amazon.DynamoDBv2.BoolAsNConverter : object {
    private static BoolConverterV1 v1Converter;
    private static Type boolType;
    private static BoolAsNConverter();
    public sealed virtual DynamoDBEntry ToEntry(object value);
    public sealed virtual object FromEntry(DynamoDBEntry entry);
}
internal class Amazon.DynamoDBv2.BoolConverterV1 : Converter`1<bool> {
    protected virtual bool TryTo(bool value, Primitive& p);
    protected virtual bool TryFrom(DynamoDBBool b, Type targetType, Boolean& result);
    protected virtual bool TryFrom(Primitive p, Type targetType, Boolean& result);
}
internal class Amazon.DynamoDBv2.BoolConverterV2 : BoolConverterV1 {
    protected virtual bool TryTo(bool value, DynamoDBBool& b);
    protected virtual bool TryTo(bool value, Primitive& p);
}
internal class Amazon.DynamoDBv2.ByteConverterV1 : Converter`1<byte> {
    protected virtual bool TryTo(byte value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Byte& result);
}
internal class Amazon.DynamoDBv2.ByteConverterV2 : ByteConverterV1 {
}
internal class Amazon.DynamoDBv2.BytesConverterV1 : Converter`1<Byte[]> {
    protected virtual bool TryTo(Byte[] value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Byte[]& result);
}
internal class Amazon.DynamoDBv2.BytesConverterV2 : BytesConverterV1 {
}
internal class Amazon.DynamoDBv2.CharConverterV1 : Converter`1<char> {
    protected virtual bool TryTo(char value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Char& result);
}
internal class Amazon.DynamoDBv2.CharConverterV2 : CharConverterV1 {
}
internal abstract class Amazon.DynamoDBv2.CollectionConverter : Converter {
    private IEnumerable`1<Type> targetTypes;
    public CollectionConverter(IEnumerable`1<Type> memberTypes);
    private static IEnumerable`1<Type> GetTargetTypes(IEnumerable`1<Type> memberTypes);
    public virtual IEnumerable`1<Type> GetTargetTypes();
    protected bool EntriesToCollection(Type targetType, Type elementType, IEnumerable`1<DynamoDBEntry> entries, Object& result);
}
internal class Amazon.DynamoDBv2.CollectionConverterV2 : PrimitiveCollectionConverterV1 {
    private static ITypeInfo setTypeInfo;
    private static Type enumerableType;
    private static CollectionConverterV2();
    public virtual bool TryTo(object value, PrimitiveList& pl);
    public virtual bool TryTo(object value, DynamoDBList& l);
}
public class Amazon.DynamoDBv2.ComparisonOperator : ConstantClass {
    public static ComparisonOperator BEGINS_WITH;
    public static ComparisonOperator BETWEEN;
    public static ComparisonOperator CONTAINS;
    public static ComparisonOperator EQ;
    public static ComparisonOperator GE;
    public static ComparisonOperator GT;
    public static ComparisonOperator IN;
    public static ComparisonOperator LE;
    public static ComparisonOperator LT;
    public static ComparisonOperator NE;
    public static ComparisonOperator NOT_CONTAINS;
    public static ComparisonOperator NOT_NULL;
    public static ComparisonOperator NULL;
    public ComparisonOperator(string value);
    private static ComparisonOperator();
    public static ComparisonOperator FindValue(string value);
    public static ComparisonOperator op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ConditionalOperator : ConstantClass {
    public static ConditionalOperator AND;
    public static ConditionalOperator OR;
    public ConditionalOperator(string value);
    private static ConditionalOperator();
    public static ConditionalOperator FindValue(string value);
    public static ConditionalOperator op_Implicit(string value);
}
internal enum Amazon.DynamoDBv2.ConversionSchema : Enum {
    public int value__;
    public static ConversionSchema V1;
    public static ConversionSchema V2;
}
internal abstract class Amazon.DynamoDBv2.Converter : object {
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    public DynamoDBEntryConversion Conversion { get; public set; }
    public abstract virtual IEnumerable`1<Type> GetTargetTypes();
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
    public DynamoDBEntry ToEntry(object value);
    public bool TryToEntry(object value, DynamoDBEntry& entry);
    public object FromEntry(DynamoDBEntry entry, Type targetType);
    public bool TryFromEntry(DynamoDBEntry entry, Type targetType, Object& value);
    public virtual bool TryTo(object value, DynamoDBBool& b);
    public virtual bool TryTo(object value, Primitive& p);
    public virtual bool TryTo(object value, PrimitiveList& pl);
    public virtual bool TryTo(object value, DynamoDBList& l);
    public virtual bool TryTo(object value, Document& d);
    public virtual bool TryFrom(DynamoDBBool b, Type targetType, Object& result);
    public virtual bool TryFrom(Primitive p, Type targetType, Object& result);
    public virtual bool TryFrom(PrimitiveList pl, Type targetType, Object& result);
    public virtual bool TryFrom(DynamoDBList l, Type targetType, Object& result);
    public virtual bool TryFrom(Document d, Type targetType, Object& result);
}
internal abstract class Amazon.DynamoDBv2.Converter`1 : Converter {
    public virtual IEnumerable`1<Type> GetTargetTypes();
    public virtual bool TryTo(object value, DynamoDBBool& b);
    public virtual bool TryTo(object value, Primitive& p);
    public virtual bool TryTo(object value, PrimitiveList& pl);
    public virtual bool TryTo(object value, DynamoDBList& l);
    public virtual bool TryTo(object value, Document& d);
    protected virtual bool TryTo(T value, DynamoDBBool& b);
    protected virtual bool TryTo(T value, Primitive& p);
    protected virtual bool TryTo(T value, PrimitiveList& pl);
    protected virtual bool TryTo(T value, DynamoDBList& l);
    protected virtual bool TryTo(T value, Document& d);
    public virtual bool TryFrom(DynamoDBBool b, Type targetType, Object& result);
    public virtual bool TryFrom(Primitive p, Type targetType, Object& result);
    public virtual bool TryFrom(PrimitiveList pl, Type targetType, Object& result);
    public virtual bool TryFrom(DynamoDBList l, Type targetType, Object& result);
    public virtual bool TryFrom(Document d, Type targetType, Object& result);
    protected virtual bool TryFrom(DynamoDBBool b, Type targetType, T& result);
    protected virtual bool TryFrom(Primitive p, Type targetType, T& result);
    protected virtual bool TryFrom(PrimitiveList pl, Type targetType, T& result);
    protected virtual bool TryFrom(DynamoDBList l, Type targetType, T& result);
    protected virtual bool TryFrom(Document d, Type targetType, T& result);
}
public class Amazon.DynamoDBv2.DataModel.AsyncSearch`1 : object {
    [CompilerGeneratedAttribute]
private Search <DocumentSearch>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBContext <SourceContext>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBFlatConfig <Config>k__BackingField;
    private Search DocumentSearch { get; private set; }
    private DynamoDBContext SourceContext { get; private set; }
    private DynamoDBFlatConfig Config { get; private set; }
    public bool IsDone { get; }
    internal AsyncSearch`1(DynamoDBContext source, ContextSearch contextSearch);
    [CompilerGeneratedAttribute]
private Search get_DocumentSearch();
    [CompilerGeneratedAttribute]
private void set_DocumentSearch(Search value);
    [CompilerGeneratedAttribute]
private DynamoDBContext get_SourceContext();
    [CompilerGeneratedAttribute]
private void set_SourceContext(DynamoDBContext value);
    [CompilerGeneratedAttribute]
private DynamoDBFlatConfig get_Config();
    [CompilerGeneratedAttribute]
private void set_Config(DynamoDBFlatConfig value);
    public bool get_IsDone();
    public Task`1<List`1<T>> GetNextSetAsync(CancellationToken cancellationToken);
    public Task`1<List`1<T>> GetRemainingAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private List`1<T> <GetNextSetAsync>b__0();
    [CompilerGeneratedAttribute]
private List`1<T> <GetRemainingAsync>b__1();
}
public abstract class Amazon.DynamoDBv2.DataModel.BatchGet : object {
    [CompilerGeneratedAttribute]
private List`1<object> <UntypedResults>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBFlatConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Key> <Keys>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentBatchGet <DocumentBatch>k__BackingField;
    [CompilerGeneratedAttribute]
private ItemStorageConfig <ItemStorageConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsistentRead>k__BackingField;
    protected List`1<object> UntypedResults { get; protected set; }
    internal DynamoDBContext Context { get; internal set; }
    internal DynamoDBFlatConfig Config { get; internal set; }
    internal List`1<Key> Keys { get; internal set; }
    internal DocumentBatchGet DocumentBatch { get; internal set; }
    internal ItemStorageConfig ItemStorageConfig { get; internal set; }
    public List`1<object> Results { get; }
    public bool ConsistentRead { get; public set; }
    internal BatchGet(DynamoDBContext context, DynamoDBFlatConfig config);
    [CompilerGeneratedAttribute]
protected List`1<object> get_UntypedResults();
    [CompilerGeneratedAttribute]
protected void set_UntypedResults(List`1<object> value);
    [CompilerGeneratedAttribute]
internal DynamoDBContext get_Context();
    [CompilerGeneratedAttribute]
internal void set_Context(DynamoDBContext value);
    [CompilerGeneratedAttribute]
internal DynamoDBFlatConfig get_Config();
    [CompilerGeneratedAttribute]
internal void set_Config(DynamoDBFlatConfig value);
    [CompilerGeneratedAttribute]
internal List`1<Key> get_Keys();
    [CompilerGeneratedAttribute]
internal void set_Keys(List`1<Key> value);
    [CompilerGeneratedAttribute]
internal DocumentBatchGet get_DocumentBatch();
    [CompilerGeneratedAttribute]
internal void set_DocumentBatch(DocumentBatchGet value);
    [CompilerGeneratedAttribute]
internal ItemStorageConfig get_ItemStorageConfig();
    [CompilerGeneratedAttribute]
internal void set_ItemStorageConfig(ItemStorageConfig value);
    public List`1<object> get_Results();
    [CompilerGeneratedAttribute]
public bool get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(bool value);
    protected virtual void ExecuteHelper(bool isAsync);
    internal abstract virtual void CreateDocumentBatch();
    internal abstract virtual void PopulateResults(List`1<Document> items);
    public Task ExecuteAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private void <ExecuteAsync>b__0();
}
public class Amazon.DynamoDBv2.DataModel.BatchGet`1 : BatchGet {
    [CompilerGeneratedAttribute]
private List`1<T> <TypedResults>k__BackingField;
    public List`1<T> Results { get; }
    protected List`1<T> TypedResults { get; protected set; }
    internal BatchGet`1(DynamoDBContext context, DynamoDBFlatConfig config);
    public List`1<T> get_Results();
    public void AddKey(object hashKey);
    public void AddKey(object hashKey, object rangeKey);
    public void AddKey(T keyObject);
    public MultiTableBatchGet Combine(BatchGet[] otherBatches);
    protected virtual void ExecuteHelper(bool isAsync);
    [CompilerGeneratedAttribute]
protected List`1<T> get_TypedResults();
    [CompilerGeneratedAttribute]
protected void set_TypedResults(List`1<T> value);
    internal virtual void CreateDocumentBatch();
    internal virtual void PopulateResults(List`1<Document> items);
}
public abstract class Amazon.DynamoDBv2.DataModel.BatchWrite : object {
    [CompilerGeneratedAttribute]
private DynamoDBContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBFlatConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentBatchWrite <DocumentBatch>k__BackingField;
    internal DynamoDBContext Context { get; internal set; }
    internal DynamoDBFlatConfig Config { get; internal set; }
    internal DocumentBatchWrite DocumentBatch { get; internal set; }
    internal BatchWrite(DynamoDBContext context, DynamoDBFlatConfig config);
    [CompilerGeneratedAttribute]
internal DynamoDBContext get_Context();
    [CompilerGeneratedAttribute]
internal void set_Context(DynamoDBContext value);
    [CompilerGeneratedAttribute]
internal DynamoDBFlatConfig get_Config();
    [CompilerGeneratedAttribute]
internal void set_Config(DynamoDBFlatConfig value);
    [CompilerGeneratedAttribute]
internal DocumentBatchWrite get_DocumentBatch();
    [CompilerGeneratedAttribute]
internal void set_DocumentBatch(DocumentBatchWrite value);
    protected virtual void ExecuteHelper(bool isAsync);
    public Task ExecuteAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private void <ExecuteAsync>b__0();
}
public class Amazon.DynamoDBv2.DataModel.BatchWrite`1 : BatchWrite {
    [CompilerGeneratedAttribute]
private ItemStorageConfig <StorageConfig>k__BackingField;
    internal ItemStorageConfig StorageConfig { get; internal set; }
    internal BatchWrite`1(DynamoDBContext context, DynamoDBFlatConfig config);
    public MultiTableBatchWrite Combine(BatchWrite[] otherBatches);
    public void AddPutItems(IEnumerable`1<T> values);
    public void AddPutItem(T item);
    public void AddDeleteItems(IEnumerable`1<T> values);
    public void AddDeleteItem(T item);
    public void AddDeleteKey(object hashKey);
    public void AddDeleteKey(object hashKey, object rangeKey);
    [CompilerGeneratedAttribute]
internal ItemStorageConfig get_StorageConfig();
    [CompilerGeneratedAttribute]
internal void set_StorageConfig(ItemStorageConfig value);
    internal void ExecuteInternal(bool isAsync);
    protected virtual void ExecuteHelper(bool isAsync);
}
[AttributeUsageAttribute("32767")]
public abstract class Amazon.DynamoDBv2.DataModel.DynamoDBAttribute : Attribute {
}
public class Amazon.DynamoDBv2.DataModel.DynamoDBContext : object {
    private bool disposed;
    private bool ownClient;
    private Dictionary`2<string, Table> tablesMap;
    private object tablesMapLock;
    private static string NO_INDEX;
    [CompilerGeneratedAttribute]
private IAmazonDynamoDB <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBContextConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private ItemStorageConfigCache <StorageConfigCache>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<Type, IPropertyConverter> <ConverterCache>k__BackingField;
    internal IAmazonDynamoDB Client { get; private set; }
    internal DynamoDBContextConfig Config { get; private set; }
    internal ItemStorageConfigCache StorageConfigCache { get; private set; }
    public Dictionary`2<Type, IPropertyConverter> ConverterCache { get; private set; }
    public DynamoDBContext(IAmazonDynamoDB client);
    public DynamoDBContext(IAmazonDynamoDB client, DynamoDBContextConfig config);
    private DynamoDBContext(IAmazonDynamoDB client, bool ownClient, DynamoDBContextConfig config);
    private static DynamoDBContext();
    [CompilerGeneratedAttribute]
internal IAmazonDynamoDB get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(IAmazonDynamoDB value);
    [CompilerGeneratedAttribute]
internal DynamoDBContextConfig get_Config();
    [CompilerGeneratedAttribute]
private void set_Config(DynamoDBContextConfig value);
    [CompilerGeneratedAttribute]
internal ItemStorageConfigCache get_StorageConfigCache();
    [CompilerGeneratedAttribute]
private void set_StorageConfigCache(ItemStorageConfigCache value);
    [CompilerGeneratedAttribute]
public Dictionary`2<Type, IPropertyConverter> get_ConverterCache();
    [CompilerGeneratedAttribute]
private void set_ConverterCache(Dictionary`2<Type, IPropertyConverter> value);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
    public BatchGet`1<T> CreateBatchGet();
    public BatchGet`1<T> CreateBatchGet(DynamoDBOperationConfig operationConfig);
    public MultiTableBatchGet CreateMultiTableBatchGet(BatchGet[] batches);
    public BatchWrite`1<T> CreateBatchWrite();
    public BatchWrite`1<T> CreateBatchWrite(DynamoDBOperationConfig operationConfig);
    public MultiTableBatchWrite CreateMultiTableBatchWrite(BatchWrite[] batches);
    private void SaveHelper(T value, DynamoDBOperationConfig operationConfig, bool isAsync);
    public sealed virtual Document ToDocument(T value);
    public sealed virtual Document ToDocument(T value, DynamoDBOperationConfig operationConfig);
    private T LoadHelper(object hashKey, object rangeKey, DynamoDBOperationConfig operationConfig, bool isAsync);
    private T LoadHelper(T keyObject, DynamoDBOperationConfig operationConfig, bool isAsync);
    private T LoadHelper(Key key, DynamoDBFlatConfig flatConfig, ItemStorageConfig storageConfig, bool isAsync);
    public sealed virtual T FromDocument(Document document);
    public sealed virtual T FromDocument(Document document, DynamoDBOperationConfig operationConfig);
    internal T FromDocumentHelper(Document document, DynamoDBFlatConfig flatConfig);
    public sealed virtual IEnumerable`1<T> FromDocuments(IEnumerable`1<Document> documents);
    public sealed virtual IEnumerable`1<T> FromDocuments(IEnumerable`1<Document> documents, DynamoDBOperationConfig operationConfig);
    internal IEnumerable`1<T> FromDocumentsHelper(IEnumerable`1<Document> documents, DynamoDBFlatConfig flatConfig);
    private void DeleteHelper(object hashKey, object rangeKey, DynamoDBOperationConfig operationConfig, bool isAsync);
    private void DeleteHelper(T value, DynamoDBOperationConfig operationConfig, bool isAsync);
    private static void SetNewVersion(ItemStorage storage);
    private static void IncrementVersion(Type memberType, Primitive& version);
    private static Document CreateExpectedDocumentForVersion(ItemStorage storage);
    internal Table GetTargetTableInternal(DynamoDBOperationConfig operationConfig);
    internal Table GetTargetTable(ItemStorageConfig storageConfig, DynamoDBFlatConfig flatConfig);
    internal Table GetTable(string tableName, DynamoDBFlatConfig flatConfig);
    internal bool TryGetTable(string tableName, DynamoDBFlatConfig flatConfig, Table& table);
    internal static string GetTableName(string baseTableName, DynamoDBFlatConfig flatConfig);
    private static void ValidateConfigAgainstTable(ItemStorageConfig config, Table table);
    private static void CompareKeys(ItemStorageConfig config, Table table, List`1<string> attributes, List`1<string> properties, string keyType);
    private static bool ShouldSave(DynamoDBEntry entry, bool ignoreNullValues);
    private T DocumentToObject(ItemStorage storage, DynamoDBFlatConfig flatConfig);
    private object DocumentToObject(Type objectType, ItemStorage storage, DynamoDBFlatConfig flatConfig);
    private void PopulateInstance(ItemStorage storage, object instance, DynamoDBFlatConfig flatConfig);
    private ItemStorage ObjectToItemStorage(T toStore, bool keysOnly, DynamoDBFlatConfig flatConfig);
    private ItemStorage ObjectToItemStorage(object toStore, Type objectType, bool keysOnly, DynamoDBFlatConfig flatConfig);
    internal ItemStorage ObjectToItemStorageHelper(object toStore, ItemStorageConfig config, DynamoDBFlatConfig flatConfig, bool keysOnly, bool ignoreNullValues);
    private void PopulateItemStorage(object toStore, ItemStorage storage, DynamoDBFlatConfig flatConfig, bool keysOnly, bool ignoreNullValues);
    private object FromDynamoDBEntry(SimplePropertyStorage propertyStorage, DynamoDBEntry entry, DynamoDBFlatConfig flatConfig);
    private bool TryFromList(Type targetType, DynamoDBList list, DynamoDBFlatConfig flatConfig, Object& output);
    private bool TryFromMap(Type targetType, Document map, DynamoDBFlatConfig flatConfig, Object& output);
    private DynamoDBEntry ToDynamoDBEntry(SimplePropertyStorage propertyStorage, object value, DynamoDBFlatConfig flatConfig);
    private DynamoDBEntry ToDynamoDBEntry(SimplePropertyStorage propertyStorage, object value, DynamoDBFlatConfig flatConfig, bool canReturnScalarInsteadOfList);
    private bool TryToMap(object value, Type type, DynamoDBFlatConfig flatConfig, Document& output);
    private bool TryToList(object value, Type type, DynamoDBFlatConfig flatConfig, DynamoDBList& output);
    private bool TryToScalar(object value, Type type, DynamoDBFlatConfig flatConfig, DynamoDBEntry& entry);
    private static bool IsSupportedDictionaryType(Type type, Type& valueType);
    private static bool IsSupportedDictionaryType(Type type, ITypeInfo& typeWrapper, Type& keyType, Type& valueType);
    private object DeserializeFromDocument(Document document, Type targetType, DynamoDBFlatConfig flatConfig);
    private Document SerializeToDocument(object value, Type type, DynamoDBFlatConfig flatConfig);
    private static bool TrySetValue(object instance, MemberInfo member, object value);
    private static bool TryGetValue(object instance, MemberInfo member, Object& value);
    private ScanFilter ComposeScanFilter(IEnumerable`1<ScanCondition> conditions, ItemStorageConfig storageConfig, DynamoDBFlatConfig flatConfig);
    private QueryFilter ComposeQueryFilter(DynamoDBFlatConfig currentConfig, object hashKeyValue, IEnumerable`1<QueryCondition> conditions, ItemStorageConfig storageConfig, List`1& indexNames);
    private QueryFilter ComposeQueryFilterHelper(DynamoDBFlatConfig currentConfig, Document hashKey, IEnumerable`1<QueryCondition> conditions, ItemStorageConfig storageConfig, List`1& indexNames);
    private List`1<AttributeValue> ConvertConditionValues(Object[] conditionValues, PropertyStorage conditionProperty, DynamoDBFlatConfig flatConfig, bool canReturnScalarInsteadOfList);
    private static string GetQueryIndexName(DynamoDBFlatConfig flatConfig, List`1<string> indexNames);
    private static List`1<QueryCondition> CreateQueryConditions(DynamoDBFlatConfig flatConfig, QueryOperator op, IEnumerable`1<object> values, ItemStorageConfig storageConfig);
    private DynamoDBEntry ValueToDynamoDBEntry(PropertyStorage propertyStorage, object value, DynamoDBFlatConfig flatConfig);
    private static void ValidateKey(Key key, ItemStorageConfig storageConfig);
    internal Key MakeKey(object hashKey, object rangeKey, ItemStorageConfig storageConfig, DynamoDBFlatConfig flatConfig);
    internal Key MakeKey(T keyObject, ItemStorageConfig storageConfig, DynamoDBFlatConfig flatConfig);
    private IEnumerable`1<T> FromSearch(ContextSearch cs);
    private ContextSearch ConvertScan(IEnumerable`1<ScanCondition> conditions, DynamoDBOperationConfig operationConfig);
    private ContextSearch ConvertFromScan(ScanOperationConfig scanConfig, DynamoDBOperationConfig operationConfig);
    private ContextSearch ConvertFromQuery(QueryOperationConfig queryConfig, DynamoDBOperationConfig operationConfig);
    private ContextSearch ConvertQueryByValue(object hashKeyValue, QueryOperator op, IEnumerable`1<object> values, DynamoDBOperationConfig operationConfig);
    private ContextSearch ConvertQueryByValue(object hashKeyValue, IEnumerable`1<QueryCondition> conditions, DynamoDBOperationConfig operationConfig, ItemStorageConfig storageConfig);
    private ContextSearch ConvertQueryHelper(DynamoDBFlatConfig currentConfig, ItemStorageConfig storageConfig, QueryFilter filter, List`1<string> indexNames);
    private AsyncSearch`1<T> FromSearchAsync(ContextSearch contextSearch);
    public sealed virtual Task SaveAsync(T value, CancellationToken cancellationToken);
    public sealed virtual Task SaveAsync(T value, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(object hashKey, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(object hashKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(object hashKey, object rangeKey, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(object hashKey, object rangeKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(T keyObject, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(T keyObject, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(T value, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(T value, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(object hashKey, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(object hashKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(object hashKey, object rangeKey, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(object hashKey, object rangeKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public Task ExecuteBatchGetAsync(BatchGet[] batches);
    public sealed virtual Task ExecuteBatchGetAsync(BatchGet[] batches, CancellationToken cancellationToken);
    public sealed virtual Task ExecuteBatchWriteAsync(BatchWrite[] batches, CancellationToken cancellationToken);
    public sealed virtual AsyncSearch`1<T> ScanAsync(IEnumerable`1<ScanCondition> conditions, DynamoDBOperationConfig operationConfig);
    public sealed virtual AsyncSearch`1<T> FromScanAsync(ScanOperationConfig scanConfig, DynamoDBOperationConfig operationConfig);
    public sealed virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, DynamoDBOperationConfig operationConfig);
    public sealed virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, QueryOperator op, IEnumerable`1<object> values, DynamoDBOperationConfig operationConfig);
    public sealed virtual AsyncSearch`1<T> FromQueryAsync(QueryOperationConfig queryConfig, DynamoDBOperationConfig operationConfig);
}
public class Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipVersionCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreNullValues>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Nullable`1<bool> SkipVersionCheck { get; public set; }
    public string TableNamePrefix { get; public set; }
    public Nullable`1<bool> IgnoreNullValues { get; public set; }
    public DynamoDBEntryConversion Conversion { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SkipVersionCheck();
    [CompilerGeneratedAttribute]
public void set_SkipVersionCheck(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_TableNamePrefix();
    [CompilerGeneratedAttribute]
public void set_TableNamePrefix(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreNullValues();
    [CompilerGeneratedAttribute]
public void set_IgnoreNullValues(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
}
internal class Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig : object {
    public static string DefaultIndexName;
    private static DynamoDBOperationConfig _emptyOperationConfig;
    private static DynamoDBContextConfig _emptyContextConfig;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipVersionCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreNullValues>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OverrideTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BackwardQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ScanCondition> <QueryFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    [CompilerGeneratedAttribute]
private OperationState <State>k__BackingField;
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Nullable`1<bool> SkipVersionCheck { get; public set; }
    public string TableNamePrefix { get; public set; }
    public Nullable`1<bool> IgnoreNullValues { get; public set; }
    public string OverrideTableName { get; public set; }
    public Nullable`1<bool> BackwardQuery { get; public set; }
    public string IndexName { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    public List`1<ScanCondition> QueryFilter { get; public set; }
    public DynamoDBEntryConversion Conversion { get; public set; }
    internal bool IsIndexOperation { get; }
    internal OperationState State { get; private set; }
    public DynamoDBFlatConfig(DynamoDBOperationConfig operationConfig, DynamoDBContextConfig contextConfig);
    private static DynamoDBFlatConfig();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SkipVersionCheck();
    [CompilerGeneratedAttribute]
public void set_SkipVersionCheck(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_TableNamePrefix();
    [CompilerGeneratedAttribute]
public void set_TableNamePrefix(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreNullValues();
    [CompilerGeneratedAttribute]
public void set_IgnoreNullValues(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_OverrideTableName();
    [CompilerGeneratedAttribute]
public void set_OverrideTableName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BackwardQuery();
    [CompilerGeneratedAttribute]
public void set_BackwardQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
    [CompilerGeneratedAttribute]
public List`1<ScanCondition> get_QueryFilter();
    [CompilerGeneratedAttribute]
public void set_QueryFilter(List`1<ScanCondition> value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
    internal bool get_IsIndexOperation();
    [CompilerGeneratedAttribute]
internal OperationState get_State();
    [CompilerGeneratedAttribute]
private void set_State(OperationState value);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexHashKeyAttribute : DynamoDBHashKeyAttribute {
    [CompilerGeneratedAttribute]
private String[] <IndexNames>k__BackingField;
    public String[] IndexNames { get; public set; }
    public DynamoDBGlobalSecondaryIndexHashKeyAttribute(string indexName);
    public DynamoDBGlobalSecondaryIndexHashKeyAttribute(String[] indexNames);
    [CompilerGeneratedAttribute]
public String[] get_IndexNames();
    [CompilerGeneratedAttribute]
public void set_IndexNames(String[] value);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexRangeKeyAttribute : DynamoDBRangeKeyAttribute {
    [CompilerGeneratedAttribute]
private String[] <IndexNames>k__BackingField;
    public String[] IndexNames { get; public set; }
    public DynamoDBGlobalSecondaryIndexRangeKeyAttribute(string indexName);
    public DynamoDBGlobalSecondaryIndexRangeKeyAttribute(String[] indexNames);
    [CompilerGeneratedAttribute]
public String[] get_IndexNames();
    [CompilerGeneratedAttribute]
public void set_IndexNames(String[] value);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBHashKeyAttribute : DynamoDBPropertyAttribute {
    public DynamoDBHashKeyAttribute(string attributeName);
    public DynamoDBHashKeyAttribute(Type converter);
    public DynamoDBHashKeyAttribute(string attributeName, Type converter);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBIgnoreAttribute : DynamoDBAttribute {
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBLocalSecondaryIndexRangeKeyAttribute : DynamoDBPropertyAttribute {
    [CompilerGeneratedAttribute]
private String[] <IndexNames>k__BackingField;
    public String[] IndexNames { get; public set; }
    public DynamoDBLocalSecondaryIndexRangeKeyAttribute(string indexName);
    public DynamoDBLocalSecondaryIndexRangeKeyAttribute(String[] indexNames);
    [CompilerGeneratedAttribute]
public String[] get_IndexNames();
    [CompilerGeneratedAttribute]
public void set_IndexNames(String[] value);
}
public class Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig : DynamoDBContextConfig {
    [CompilerGeneratedAttribute]
private string <OverrideTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BackwardQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ScanCondition> <QueryFilter>k__BackingField;
    public string OverrideTableName { get; public set; }
    public Nullable`1<bool> BackwardQuery { get; public set; }
    public string IndexName { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    public List`1<ScanCondition> QueryFilter { get; public set; }
    internal bool IsIndexOperation { get; }
    [CompilerGeneratedAttribute]
public string get_OverrideTableName();
    [CompilerGeneratedAttribute]
public void set_OverrideTableName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BackwardQuery();
    [CompilerGeneratedAttribute]
public void set_BackwardQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
    [CompilerGeneratedAttribute]
public List`1<ScanCondition> get_QueryFilter();
    [CompilerGeneratedAttribute]
public void set_QueryFilter(List`1<ScanCondition> value);
    internal bool get_IsIndexOperation();
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBPropertyAttribute : DynamoDBRenamableAttribute {
    [CompilerGeneratedAttribute]
private Type <Converter>k__BackingField;
    public Type Converter { get; public set; }
    public DynamoDBPropertyAttribute(string attributeName);
    public DynamoDBPropertyAttribute(Type converter);
    public DynamoDBPropertyAttribute(string attributeName, Type converter);
    [CompilerGeneratedAttribute]
public Type get_Converter();
    [CompilerGeneratedAttribute]
public void set_Converter(Type value);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBRangeKeyAttribute : DynamoDBPropertyAttribute {
    public DynamoDBRangeKeyAttribute(string attributeName);
    public DynamoDBRangeKeyAttribute(Type converter);
    public DynamoDBRangeKeyAttribute(string attributeName, Type converter);
}
[AttributeUsageAttribute("384")]
public abstract class Amazon.DynamoDBv2.DataModel.DynamoDBRenamableAttribute : DynamoDBAttribute {
    [CompilerGeneratedAttribute]
private string <AttributeName>k__BackingField;
    public string AttributeName { get; public set; }
    protected DynamoDBRenamableAttribute(string attributeName);
    [CompilerGeneratedAttribute]
public string get_AttributeName();
    [CompilerGeneratedAttribute]
public void set_AttributeName(string value);
}
[AttributeUsageAttribute("12")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBTableAttribute : DynamoDBAttribute {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LowerCamelCaseProperties>k__BackingField;
    public string TableName { get; public set; }
    public bool LowerCamelCaseProperties { get; public set; }
    public DynamoDBTableAttribute(string tableName);
    public DynamoDBTableAttribute(string tableName, bool lowerCamelCaseProperties);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public bool get_LowerCamelCaseProperties();
    [CompilerGeneratedAttribute]
public void set_LowerCamelCaseProperties(bool value);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBVersionAttribute : DynamoDBRenamableAttribute {
}
internal class Amazon.DynamoDBv2.DataModel.GSIConfig : object {
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HashKeyPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RangeKeyPropertyName>k__BackingField;
    public string IndexName { get; public set; }
    public string HashKeyPropertyName { get; public set; }
    public string RangeKeyPropertyName { get; public set; }
    public GSIConfig(string indexName);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public string get_HashKeyPropertyName();
    [CompilerGeneratedAttribute]
public void set_HashKeyPropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_RangeKeyPropertyName();
    [CompilerGeneratedAttribute]
public void set_RangeKeyPropertyName(string value);
}
public interface Amazon.DynamoDBv2.DataModel.IDynamoDBContext {
    public abstract virtual Document ToDocument(T value);
    public abstract virtual Document ToDocument(T value, DynamoDBOperationConfig operationConfig);
    public abstract virtual T FromDocument(Document document);
    public abstract virtual T FromDocument(Document document, DynamoDBOperationConfig operationConfig);
    public abstract virtual IEnumerable`1<T> FromDocuments(IEnumerable`1<Document> documents);
    public abstract virtual IEnumerable`1<T> FromDocuments(IEnumerable`1<Document> documents, DynamoDBOperationConfig operationConfig);
    public abstract virtual Task SaveAsync(T value, CancellationToken cancellationToken);
    public abstract virtual Task SaveAsync(T value, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(object hashKey, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(object hashKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(object hashKey, object rangeKey, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(object hashKey, object rangeKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(T keyObject, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(T keyObject, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(T value, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(T value, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(object hashKey, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(object hashKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(object hashKey, object rangeKey, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(object hashKey, object rangeKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task ExecuteBatchGetAsync(BatchGet[] batches, CancellationToken cancellationToken);
    public abstract virtual Task ExecuteBatchWriteAsync(BatchWrite[] batches, CancellationToken cancellationToken);
    public abstract virtual AsyncSearch`1<T> ScanAsync(IEnumerable`1<ScanCondition> conditions, DynamoDBOperationConfig operationConfig);
    public abstract virtual AsyncSearch`1<T> FromScanAsync(ScanOperationConfig scanConfig, DynamoDBOperationConfig operationConfig);
    public abstract virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, DynamoDBOperationConfig operationConfig);
    public abstract virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, QueryOperator op, IEnumerable`1<object> values, DynamoDBOperationConfig operationConfig);
    public abstract virtual AsyncSearch`1<T> FromQueryAsync(QueryOperationConfig queryConfig, DynamoDBOperationConfig operationConfig);
}
public interface Amazon.DynamoDBv2.DataModel.IPropertyConverter {
    public abstract virtual DynamoDBEntry ToEntry(object value);
    public abstract virtual object FromEntry(DynamoDBEntry entry);
}
internal class Amazon.DynamoDBv2.DataModel.ItemStorage : object {
    [CompilerGeneratedAttribute]
private Document <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private ItemStorageConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private Primitive <CurrentVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<object> <ConvertedObjects>k__BackingField;
    public Document Document { get; public set; }
    public ItemStorageConfig Config { get; public set; }
    public Primitive CurrentVersion { get; public set; }
    public HashSet`1<object> ConvertedObjects { get; private set; }
    public ItemStorage(ItemStorageConfig storageConfig);
    [CompilerGeneratedAttribute]
public Document get_Document();
    [CompilerGeneratedAttribute]
public void set_Document(Document value);
    [CompilerGeneratedAttribute]
public ItemStorageConfig get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(ItemStorageConfig value);
    [CompilerGeneratedAttribute]
public Primitive get_CurrentVersion();
    [CompilerGeneratedAttribute]
public void set_CurrentVersion(Primitive value);
    [CompilerGeneratedAttribute]
public HashSet`1<object> get_ConvertedObjects();
    [CompilerGeneratedAttribute]
private void set_ConvertedObjects(HashSet`1<object> value);
}
internal class Amazon.DynamoDBv2.DataModel.ItemStorageConfig : StorageConfig {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LowerCamelCaseProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <HashKeyPropertyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RangeKeyPropertyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersionPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<string>> <AttributeToIndexesNameMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<string>> <IndexNameToLSIRangePropertiesMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, GSIConfig> <IndexNameToGSIMapping>k__BackingField;
    public string TableName { get; public set; }
    public bool LowerCamelCaseProperties { get; public set; }
    public List`1<string> HashKeyPropertyNames { get; private set; }
    public List`1<string> RangeKeyPropertyNames { get; private set; }
    public List`1<string> AttributesToGet { get; private set; }
    public string VersionPropertyName { get; private set; }
    public bool HasVersion { get; }
    public Dictionary`2<string, List`1<string>> AttributeToIndexesNameMapping { get; public set; }
    public Dictionary`2<string, List`1<string>> IndexNameToLSIRangePropertiesMapping { get; public set; }
    public Dictionary`2<string, GSIConfig> IndexNameToGSIMapping { get; public set; }
    public PropertyStorage VersionPropertyStorage { get; }
    public ItemStorageConfig(ITypeInfo targetTypeInfo);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public bool get_LowerCamelCaseProperties();
    [CompilerGeneratedAttribute]
public void set_LowerCamelCaseProperties(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_HashKeyPropertyNames();
    [CompilerGeneratedAttribute]
private void set_HashKeyPropertyNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_RangeKeyPropertyNames();
    [CompilerGeneratedAttribute]
private void set_RangeKeyPropertyNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
private void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_VersionPropertyName();
    [CompilerGeneratedAttribute]
private void set_VersionPropertyName(string value);
    public bool get_HasVersion();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, List`1<string>> get_AttributeToIndexesNameMapping();
    [CompilerGeneratedAttribute]
public void set_AttributeToIndexesNameMapping(Dictionary`2<string, List`1<string>> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, List`1<string>> get_IndexNameToLSIRangePropertiesMapping();
    [CompilerGeneratedAttribute]
public void set_IndexNameToLSIRangePropertiesMapping(Dictionary`2<string, List`1<string>> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, GSIConfig> get_IndexNameToGSIMapping();
    [CompilerGeneratedAttribute]
public void set_IndexNameToGSIMapping(Dictionary`2<string, GSIConfig> value);
    public GSIConfig GetGSIConfig(string indexName);
    public string GetCorrectHashKeyProperty(DynamoDBFlatConfig currentConfig, string hashKeyProperty);
    public string GetRangeKeyByIndex(string indexName);
    public PropertyStorage get_VersionPropertyStorage();
    public void Denormalize(DynamoDBContext context);
    private void AddPropertyStorage(PropertyStorage value);
    private void AddLSIConfigs(List`1<string> lsiIndexNames, string propertyName);
    private void AddGSIConfigs(List`1<string> gsiIndexNames, string propertyName, bool isHashKey);
}
internal class Amazon.DynamoDBv2.DataModel.ItemStorageConfigCache : object {
    private Dictionary`2<Type, ConfigTableCache> Cache;
    private DynamoDBContext Context;
    public ItemStorageConfigCache(DynamoDBContext context);
    public ItemStorageConfig GetConfig(DynamoDBFlatConfig flatConfig, bool conversionOnly);
    public ItemStorageConfig GetConfig(Type type, DynamoDBFlatConfig flatConfig, bool conversionOnly);
    private static string GetAccurateCase(ItemStorageConfig config, string value);
    private ItemStorageConfig CreateStorageConfig(Type baseType, string actualTableName, DynamoDBFlatConfig flatConfig);
    private static void PopulateConfigFromType(ItemStorageConfig config, ITypeInfo typeInfo);
    private static void PopulateConfigFromTable(ItemStorageConfig config, Table table);
    private static void PopulateConfigFromMappings(ItemStorageConfig config, Dictionary`2<Type, TypeMapping> typeMappings);
    private static PropertyStorage GetProperty(ItemStorageConfig config, string attributeName, bool optional);
    private static void Validate(bool value, string messageFormat, Object[] args);
    private static void ValidateProperty(bool value, string propertyName, string messageFormat, Object[] args);
}
public class Amazon.DynamoDBv2.DataModel.MultiTableBatchGet : object {
    private List`1<BatchGet> allBatches;
    public int TotalKeys { get; }
    public MultiTableBatchGet(BatchGet[] batches);
    internal MultiTableBatchGet(BatchGet first, BatchGet[] rest);
    public int get_TotalKeys();
    public void AddBatch(BatchGet batch);
    internal void ExecuteHelper(bool isAsync);
    public Task ExecuteAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private void <ExecuteAsync>b__0();
}
public class Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite : object {
    private List`1<BatchWrite> allBatches;
    public MultiTableBatchWrite(BatchWrite[] batches);
    internal MultiTableBatchWrite(BatchWrite first, BatchWrite[] rest);
    public void AddBatch(BatchWrite batch);
    internal void ExecuteHelper(bool isAsync);
    public Task ExecuteAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private void <ExecuteAsync>b__0();
}
internal class Amazon.DynamoDBv2.DataModel.PropertyStorage : SimplePropertyStorage {
    [CompilerGeneratedAttribute]
private bool <IsHashKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRangeKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLSIRangeKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGSIHashKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGSIRangeKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIgnored>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IndexNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Index> <Indexes>k__BackingField;
    public bool IsHashKey { get; public set; }
    public bool IsRangeKey { get; public set; }
    public bool IsKey { get; }
    public bool IsVersion { get; public set; }
    public bool IsLSIRangeKey { get; public set; }
    public bool IsGSIHashKey { get; public set; }
    public bool IsGSIRangeKey { get; public set; }
    public bool IsGSIKey { get; }
    public bool IsIgnored { get; public set; }
    public List`1<string> IndexNames { get; public set; }
    public List`1<Index> Indexes { get; private set; }
    public PropertyStorage(MemberInfo member);
    [CompilerGeneratedAttribute]
public bool get_IsHashKey();
    [CompilerGeneratedAttribute]
public void set_IsHashKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsRangeKey();
    [CompilerGeneratedAttribute]
public void set_IsRangeKey(bool value);
    public bool get_IsKey();
    [CompilerGeneratedAttribute]
public bool get_IsVersion();
    [CompilerGeneratedAttribute]
public void set_IsVersion(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsLSIRangeKey();
    [CompilerGeneratedAttribute]
public void set_IsLSIRangeKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsGSIHashKey();
    [CompilerGeneratedAttribute]
public void set_IsGSIHashKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsGSIRangeKey();
    [CompilerGeneratedAttribute]
public void set_IsGSIRangeKey(bool value);
    public bool get_IsGSIKey();
    [CompilerGeneratedAttribute]
public bool get_IsIgnored();
    [CompilerGeneratedAttribute]
public void set_IsIgnored(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_IndexNames();
    [CompilerGeneratedAttribute]
public void set_IndexNames(List`1<string> value);
    public void AddIndex(DynamoDBGlobalSecondaryIndexHashKeyAttribute gsiHashKey);
    public void AddIndex(DynamoDBGlobalSecondaryIndexRangeKeyAttribute gsiRangeKey);
    public void AddIndex(DynamoDBLocalSecondaryIndexRangeKeyAttribute lsiRangeKey);
    public void AddGsiIndex(bool isHashKey, string attributeName, String[] indexNames);
    public void AddLsiIndex(string attributeName, String[] indexNames);
    public void AddIndex(Index index);
    [CompilerGeneratedAttribute]
public List`1<Index> get_Indexes();
    [CompilerGeneratedAttribute]
private void set_Indexes(List`1<Index> value);
    public void Validate(DynamoDBContext context);
}
public class Amazon.DynamoDBv2.DataModel.QueryCondition : object {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryOperator <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <Values>k__BackingField;
    public string PropertyName { get; public set; }
    public QueryOperator Operator { get; public set; }
    public Object[] Values { get; public set; }
    public QueryCondition(string propertyName, QueryOperator op, Object[] values);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public QueryOperator get_Operator();
    [CompilerGeneratedAttribute]
public void set_Operator(QueryOperator value);
    [CompilerGeneratedAttribute]
public Object[] get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(Object[] value);
}
internal class Amazon.DynamoDBv2.DataModel.S3ClientCache : object {
    private AWSCredentials credentials;
    private AmazonS3Config config;
    private Dictionary`2<string, AmazonS3Client> clientsByRegion;
    private Dictionary`2<string, TransferUtility> transferUtilitiesByRegion;
    internal S3ClientCache(AWSCredentials credentials, AmazonS3Config config);
    internal void UseClient(AmazonS3Client client, RegionEndpoint region);
    internal AmazonS3Client GetClient(RegionEndpoint region);
    internal TransferUtility GetTransferUtility(RegionEndpoint region);
}
public class Amazon.DynamoDBv2.DataModel.S3Link : object {
    internal static Dictionary`2<DynamoDBContext, S3ClientCache> Caches;
    private static object cacheLock;
    private S3ClientCache s3ClientCache;
    private LinkInfo linker;
    public string Key { get; public set; }
    public string BucketName { get; public set; }
    public string Region { get; public set; }
    public RegionEndpoint RegionAsEndpoint { get; }
    internal S3Link(S3ClientCache clientCache, string bucketName, string key);
    internal S3Link(S3ClientCache clientCache, string bucketName, string key, string region);
    private S3Link(S3ClientCache clientCache, LinkInfo linker);
    internal S3Link(S3ClientCache clientCache, string json);
    private static S3Link();
    public static S3Link Create(DynamoDBContext context, string bucket, string key, RegionEndpoint region);
    public string get_Key();
    public void set_Key(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_Region();
    public void set_Region(string value);
    public RegionEndpoint get_RegionAsEndpoint();
    internal static RegionEndpoint GetRegionFromJSON(string json);
    internal TransferUtility GetTransferUtility();
    internal static S3ClientCache CreatClientCacheFromContext(DynamoDBContext context);
    public void MakeS3ObjectPublic(bool enable);
    [ObsoleteAttribute("This method is obsolete and will be removed in a future update. Please use either the MakeS3ObjectPublic method or use S3 directly to configure the ACL on the object. http://blogs.aws.amazon.com/net/post/Tx2JT7AYCL2F6CB/")]
public void SetACL(S3CannedACL cannedACL);
    [ObsoleteAttribute("This method is obsolete and will be removed in a future update. Please use either the MakeS3ObjectPublic method or use S3 directly to configure the ACL on the object. http://blogs.aws.amazon.com/net/post/Tx2JT7AYCL2F6CB/")]
public void SetACL(S3AccessControlList acl);
    public string GetPreSignedURL(DateTime expiration);
    internal string ToJson();
    public Task UploadFromAsync(string sourcePath, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
[ObsoleteAttribute("This method is obsolete and will be removed in a future update.")]
public Task UploadFromAsync(IStorageFile sourceFile, CancellationToken cancellationToken);
    [ObsoleteAttribute("This method is obsolete and will be removed in a future update.")]
[CLSCompliantAttribute("False")]
public Task DownloadToAsync(IStorageFile storageFile, CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DataModel.ScanCondition : object {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private ScanOperator <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <Values>k__BackingField;
    public string PropertyName { get; public set; }
    public ScanOperator Operator { get; public set; }
    public Object[] Values { get; public set; }
    public ScanCondition(string propertyName, ScanOperator op, Object[] values);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public ScanOperator get_Operator();
    [CompilerGeneratedAttribute]
public void set_Operator(ScanOperator value);
    [CompilerGeneratedAttribute]
public Object[] get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(Object[] value);
}
internal class Amazon.DynamoDBv2.DataModel.SimplePropertyStorage : object {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AttributeName>k__BackingField;
    [CompilerGeneratedAttribute]
private MemberInfo <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <MemberType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ConverterType>k__BackingField;
    [CompilerGeneratedAttribute]
private IPropertyConverter <Converter>k__BackingField;
    public string PropertyName { get; protected set; }
    public string AttributeName { get; public set; }
    public MemberInfo Member { get; protected set; }
    public Type MemberType { get; protected set; }
    public Type ConverterType { get; public set; }
    public IPropertyConverter Converter { get; protected set; }
    public SimplePropertyStorage(MemberInfo member);
    public SimplePropertyStorage(Type memberType);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
protected void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_AttributeName();
    [CompilerGeneratedAttribute]
public void set_AttributeName(string value);
    [CompilerGeneratedAttribute]
public MemberInfo get_Member();
    [CompilerGeneratedAttribute]
protected void set_Member(MemberInfo value);
    [CompilerGeneratedAttribute]
public Type get_MemberType();
    [CompilerGeneratedAttribute]
protected void set_MemberType(Type value);
    [CompilerGeneratedAttribute]
public Type get_ConverterType();
    [CompilerGeneratedAttribute]
public void set_ConverterType(Type value);
    [CompilerGeneratedAttribute]
public IPropertyConverter get_Converter();
    [CompilerGeneratedAttribute]
protected void set_Converter(IPropertyConverter value);
}
internal class Amazon.DynamoDBv2.DataModel.StorageConfig : object {
    [CompilerGeneratedAttribute]
private List`1<PropertyStorage> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeInfo <TargetTypeInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, MemberInfo> <TargetTypeMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, PropertyStorage> <PropertyToPropertyStorageMapping>k__BackingField;
    public List`1<PropertyStorage> Properties { get; private set; }
    public ITypeInfo TargetTypeInfo { get; private set; }
    public Dictionary`2<string, MemberInfo> TargetTypeMembers { get; private set; }
    private Dictionary`2<string, PropertyStorage> PropertyToPropertyStorageMapping { get; private set; }
    public IEnumerable`1<PropertyStorage> AllPropertyStorage { get; }
    public StorageConfig(ITypeInfo targetTypeInfo);
    [CompilerGeneratedAttribute]
public List`1<PropertyStorage> get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(List`1<PropertyStorage> value);
    [CompilerGeneratedAttribute]
public ITypeInfo get_TargetTypeInfo();
    [CompilerGeneratedAttribute]
private void set_TargetTypeInfo(ITypeInfo value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, MemberInfo> get_TargetTypeMembers();
    [CompilerGeneratedAttribute]
private void set_TargetTypeMembers(Dictionary`2<string, MemberInfo> value);
    [CompilerGeneratedAttribute]
private Dictionary`2<string, PropertyStorage> get_PropertyToPropertyStorageMapping();
    [CompilerGeneratedAttribute]
private void set_PropertyToPropertyStorageMapping(Dictionary`2<string, PropertyStorage> value);
    protected void AddPropertyStorage(string propertyName, PropertyStorage propertyStorage);
    public PropertyStorage GetPropertyStorage(string propertyName);
    public bool TryGetPropertyStorage(string propertyName, PropertyStorage& storage);
    public IEnumerable`1<PropertyStorage> get_AllPropertyStorage();
    public bool FindPropertyByPropertyName(string propertyName, PropertyStorage& propertyStorage);
    public bool FindSinglePropertyByAttributeName(string attributeName, PropertyStorage& propertyStorage);
    private bool FindSingleProperty(Func`2<PropertyStorage, bool> match, string errorMessage, PropertyStorage& propertyStorage);
    public static bool IsValidMemberInfo(MemberInfo member);
    private static Dictionary`2<string, MemberInfo> GetMembersDictionary(ITypeInfo typeInfo);
}
internal static class Amazon.DynamoDBv2.DataModel.Utils : object {
    private static Type[] primitiveTypesArray;
    public static IEnumerable`1<Type> PrimitiveTypes;
    private static HashSet`1<ITypeInfo> PrimitiveTypeInfos;
    private static ITypeInfo[][] validConstructorInputs;
    private static ITypeInfo[][] validConverterConstructorInputs;
    [CompilerGeneratedAttribute]
private static Func`2<Type, ITypeInfo> CS$<>9__CachedAnonymousMethodDelegatec;
    private static Utils();
    public static bool IsPrimitive(Type type);
    public static bool IsPrimitive();
    public static void ValidatePrimitiveType(Type type);
    public static void ValidatePrimitiveType();
    public static void ValidateVersionType(Type memberType);
    public static Type GetPrimitiveElementType(Type collectionType);
    public static Type GetElementType(Type collectionType);
    public static bool ItemsToCollection(Type targetType, IEnumerable`1<object> items, Object& result);
    public static DynamoDBTableAttribute GetTableAttribute(ITypeInfo targetTypeInfo);
    public static DynamoDBAttribute GetAttribute(ITypeInfo targetTypeInfo);
    public static DynamoDBAttribute GetAttribute(MemberInfo targetMemberInfo);
    public static List`1<DynamoDBAttribute> GetAttributes(MemberInfo targetMemberInfo);
    private static DynamoDBAttribute GetSingleDDBAttribute(Object[] attributes);
    private static Object[] GetAttributeObjects(MemberInfo targetMemberInfo);
    public static string ToLowerCamelCase(string value);
    public static object InstantiateConverter(Type objectType, IDynamoDBContext context);
    public static object Instantiate(Type objectType);
    private static object InstantiateHelper(Type objectType, ITypeInfo[][] validConstructorInputs, Object[] optionalInput);
    private static IEnumerable`1<ConstructorInfo> GetConstructors(ITypeInfo typeInfo, ITypeInfo[][] validConstructorInputs);
    public static bool CanInstantiate(Type objectType);
    public static bool CanInstantiateConverter(Type objectType);
    private static bool CanInstantiateHelper(Type objectType, ITypeInfo[][] validConstructorInputs);
    public static Type GetType(MemberInfo member);
    public static bool IsReadWrite(MemberInfo member);
    public static bool ImplementsInterface(Type targetType, Type interfaceType);
    [CompilerGeneratedAttribute]
private static ITypeInfo <.cctor>b__b(Type p);
}
internal class Amazon.DynamoDBv2.DateTimeConverterV1 : Converter`1<DateTime> {
    protected virtual bool TryTo(DateTime value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, DateTime& result);
}
internal class Amazon.DynamoDBv2.DateTimeConverterV2 : DateTimeConverterV1 {
}
internal class Amazon.DynamoDBv2.DecimalConverterV1 : Converter`1<decimal> {
    protected virtual bool TryTo(decimal value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Decimal& result);
}
internal class Amazon.DynamoDBv2.DecimalConverterV2 : DecimalConverterV1 {
}
internal class Amazon.DynamoDBv2.DictionaryConverterV1 : Converter {
    public virtual IEnumerable`1<Type> GetTargetTypes();
    public virtual bool TryTo(object value, Document& d);
}
internal class Amazon.DynamoDBv2.DictionaryConverterV2 : DictionaryConverterV1 {
}
internal static class Amazon.DynamoDBv2.DocumentModel.Common : object {
    private static string AwsVariablePrefix;
    public static void ConvertAttributeUpdatesToUpdateExpression(Dictionary`2<string, AttributeValueUpdate> attributesToUpdates, String& statement, Dictionary`2& expressionAttributeValues, Dictionary`2& expressionAttributes);
    public static void ConvertAttributesToGetToProjectionExpression(QueryRequest request);
    public static void ConvertAttributesToGetToProjectionExpression(ScanRequest request);
    private static string AttributesToGetAsProjectionExpression(List`1<string> attributesToGet, Dictionary`2<string, string> attributeNames);
    private static string GetAttributeReference(string attribute, Dictionary`2<string, string> attributeNames, Int32& attributeCount);
    public static string GetAttributeReference(string attributeName);
    public static string GetAttributeValueReference(string attributeName);
    public static string GetVariableName(Int32& attributeCount);
    public static Dictionary`2<string, T> Combine(IDictionary`2<string, T> items1, IDictionary`2<string, T> items2, IEqualityComparer`1<T> valueComparer);
}
public enum Amazon.DynamoDBv2.DocumentModel.ConditionalOperatorValues : Enum {
    public int value__;
    public static ConditionalOperatorValues And;
    public static ConditionalOperatorValues Or;
}
public class Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig : object {
    [CompilerGeneratedAttribute]
private Expression <ConditionalExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ExpectedState <ExpectedState>k__BackingField;
    [CompilerGeneratedAttribute]
private Document <Expected>k__BackingField;
    [CompilerGeneratedAttribute]
private ReturnValues <ReturnValues>k__BackingField;
    public Expression ConditionalExpression { get; public set; }
    public ExpectedState ExpectedState { get; public set; }
    public Document Expected { get; public set; }
    public ReturnValues ReturnValues { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Expression get_ConditionalExpression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConditionalExpression(Expression value);
    [CompilerGeneratedAttribute]
public sealed virtual ExpectedState get_ExpectedState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExpectedState(ExpectedState value);
    [CompilerGeneratedAttribute]
public sealed virtual Document get_Expected();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expected(Document value);
    [CompilerGeneratedAttribute]
public ReturnValues get_ReturnValues();
    [CompilerGeneratedAttribute]
public void set_ReturnValues(ReturnValues value);
}
[DefaultMemberAttribute("Item")]
public class Amazon.DynamoDBv2.DocumentModel.Document : DynamoDBEntry {
    private Dictionary`2<string, DynamoDBEntry> originalValues;
    private Dictionary`2<string, DynamoDBEntry> currentValues;
    public DynamoDBEntry Item { get; public set; }
    public ICollection`1<string> Keys { get; }
    public ICollection`1<DynamoDBEntry> Values { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public Document(Dictionary`2<string, DynamoDBEntry> values);
    internal Document(Document source);
    public sealed virtual DynamoDBEntry get_Item(string key);
    public sealed virtual void set_Item(string key, DynamoDBEntry value);
    public bool IsAttributeChanged(string attributeName);
    public bool IsDirty();
    internal void CommitChanges();
    public sealed virtual bool TryGetValue(string attributeName, DynamoDBEntry& entry);
    public bool Contains(string attributeName);
    public Document ForceConversion(DynamoDBEntryConversion conversion);
    public string ToJson();
    public string ToJsonPretty();
    public Dictionary`2<string, AttributeValue> ToAttributeMap();
    public Dictionary`2<string, AttributeValue> ToAttributeMap(DynamoDBEntryConversion conversion);
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap();
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap(DynamoDBEntryConversion conversion);
    public Dictionary`2<string, AttributeValueUpdate> ToAttributeUpdateMap(bool changedAttributesOnly);
    public Dictionary`2<string, AttributeValueUpdate> ToAttributeUpdateMap(DynamoDBEntryConversion conversion, bool changedAttributesOnly);
    public List`1<string> GetAttributeNames();
    public void DecodeBase64Attributes(String[] attributeNames);
    internal static DynamoDBEntry AttributeValueToDynamoDBEntry(AttributeValue attributeValue);
    private static bool TryToPrimitiveList(AttributeValue attributeValue, PrimitiveList& primitiveList);
    private static bool TryToPrimitive(AttributeValue attributeValue, Primitive& primitive);
    private static bool TryToDynamoDBBool(AttributeValue attributeValue, DynamoDBBool& ddbBool);
    private static bool TryToDynamoDBNull(AttributeValue attributeValue, DynamoDBNull& ddbNull);
    private static bool TryToDynamoDBList(AttributeValue attributeValue, DynamoDBList& list);
    private static bool TryToDocument(AttributeValue attributeValue, Document& document);
    public static Document FromAttributeMap(Dictionary`2<string, AttributeValue> data);
    public static Document FromJson(string json);
    public sealed virtual void Add(string key, DynamoDBEntry value);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual bool Remove(string key);
    public sealed virtual ICollection`1<DynamoDBEntry> get_Values();
    public sealed virtual void Add(KeyValuePair`2<string, DynamoDBEntry> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<string, DynamoDBEntry> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(KeyValuePair`2<string, DynamoDBEntry> item);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, DynamoDBEntry>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    public virtual object Clone();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public class Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet : object {
    [CompilerGeneratedAttribute]
private Table <TargetTable>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Key> <Keys>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Document> <Results>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsistentRead>k__BackingField;
    internal Table TargetTable { get; private set; }
    internal List`1<Key> Keys { get; private set; }
    public List`1<Document> Results { get; internal set; }
    public List`1<string> AttributesToGet { get; public set; }
    public bool ConsistentRead { get; public set; }
    public DocumentBatchGet(Table targetTable);
    [CompilerGeneratedAttribute]
internal Table get_TargetTable();
    [CompilerGeneratedAttribute]
private void set_TargetTable(Table value);
    [CompilerGeneratedAttribute]
internal List`1<Key> get_Keys();
    [CompilerGeneratedAttribute]
private void set_Keys(List`1<Key> value);
    [CompilerGeneratedAttribute]
public List`1<Document> get_Results();
    [CompilerGeneratedAttribute]
internal void set_Results(List`1<Document> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
public void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(bool value);
    public void AddKey(Primitive hashKey);
    public void AddKey(Primitive hashKey, Primitive rangeKey);
    public void AddKey(IDictionary`2<string, DynamoDBEntry> key);
    public MultiTableDocumentBatchGet Combine(DocumentBatchGet otherBatch);
    internal void ExecuteHelper(bool isAsync);
    internal void AddKey(Document document);
    internal void AddKey(Key key);
    public Task ExecuteAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private void <ExecuteAsync>b__2();
}
public class Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite : object {
    [CompilerGeneratedAttribute]
private Table <TargetTable>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Key> <ToDelete>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Document> <ToPut>k__BackingField;
    internal Table TargetTable { get; private set; }
    internal List`1<Key> ToDelete { get; private set; }
    internal List`1<Document> ToPut { get; private set; }
    public DocumentBatchWrite(Table targetTable);
    [CompilerGeneratedAttribute]
internal Table get_TargetTable();
    [CompilerGeneratedAttribute]
private void set_TargetTable(Table value);
    [CompilerGeneratedAttribute]
internal List`1<Key> get_ToDelete();
    [CompilerGeneratedAttribute]
private void set_ToDelete(List`1<Key> value);
    [CompilerGeneratedAttribute]
internal List`1<Document> get_ToPut();
    [CompilerGeneratedAttribute]
private void set_ToPut(List`1<Document> value);
    public void AddKeyToDelete(Primitive hashKey);
    public void AddKeyToDelete(Primitive hashKey, Primitive rangeKey);
    public void AddKeyToDelete(IDictionary`2<string, DynamoDBEntry> key);
    public void AddItemToDelete(Document document);
    public void AddDocumentToPut(Document document);
    public MultiTableDocumentBatchWrite Combine(DocumentBatchWrite otherBatch);
    internal void ExecuteHelper(bool isAsync);
    internal void AddKeyToDelete(Key key);
    public Task ExecuteAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private void <ExecuteAsync>b__2();
}
public class Amazon.DynamoDBv2.DocumentModel.DynamoDBBool : DynamoDBEntry {
    public static DynamoDBBool True;
    public static DynamoDBBool False;
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public bool Value { get; public set; }
    public DynamoDBBool(bool value);
    private static DynamoDBBool();
    [CompilerGeneratedAttribute]
public bool get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(bool value);
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    public virtual object Clone();
    public virtual bool AsBoolean();
    public static DynamoDBBool op_Implicit(bool data);
    public static bool op_Explicit(DynamoDBBool p);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public abstract class Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry : object {
    internal abstract virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    internal ExpectedAttributeValue ConvertToExpectedAttributeValue(AttributeConversionConfig conversionConfig);
    internal AttributeValueUpdate ConvertToAttributeUpdateValue(AttributeConversionConfig conversionConfig);
    public Primitive AsPrimitive();
    public PrimitiveList AsPrimitiveList();
    public DynamoDBList AsDynamoDBList();
    public DynamoDBBool AsDynamoDBBool();
    public DynamoDBNull AsDynamoDBNull();
    public Document AsDocument();
    internal DynamoDBEntry ToConvertedEntry(DynamoDBEntryConversion conversion);
    internal Primitive ToPrimitive();
    internal PrimitiveList ToPrimitiveList();
    internal DynamoDBList ToDynamoDBList();
    internal DynamoDBBool ToDynamoDBBool();
    internal DynamoDBNull ToDynamoDBNull();
    internal Document ToDocument();
    private T Validate(T item);
    public virtual bool AsBoolean();
    public static DynamoDBEntry op_Implicit(bool data);
    public static bool op_Explicit(DynamoDBEntry p);
    public virtual byte AsByte();
    public static DynamoDBEntry op_Implicit(byte data);
    public static byte op_Explicit(DynamoDBEntry p);
    [CLSCompliantAttribute("False")]
public virtual sbyte AsSByte();
    [CLSCompliantAttribute("False")]
public static DynamoDBEntry op_Implicit(sbyte data);
    [CLSCompliantAttribute("False")]
public static sbyte op_Explicit(DynamoDBEntry p);
    [CLSCompliantAttribute("False")]
public virtual ushort AsUShort();
    [CLSCompliantAttribute("False")]
public static DynamoDBEntry op_Implicit(ushort data);
    [CLSCompliantAttribute("False")]
public static ushort op_Explicit(DynamoDBEntry p);
    public virtual short AsShort();
    public static DynamoDBEntry op_Implicit(short data);
    public static short op_Explicit(DynamoDBEntry p);
    [CLSCompliantAttribute("False")]
public virtual UInt32 AsUInt();
    [CLSCompliantAttribute("False")]
public static DynamoDBEntry op_Implicit(UInt32 data);
    [CLSCompliantAttribute("False")]
public static UInt32 op_Explicit(DynamoDBEntry p);
    public virtual int AsInt();
    public static DynamoDBEntry op_Implicit(int data);
    public static int op_Explicit(DynamoDBEntry p);
    [CLSCompliantAttribute("False")]
public virtual ulong AsULong();
    [CLSCompliantAttribute("False")]
public static DynamoDBEntry op_Implicit(ulong data);
    [CLSCompliantAttribute("False")]
public static ulong op_Explicit(DynamoDBEntry p);
    public virtual long AsLong();
    public static DynamoDBEntry op_Implicit(long data);
    public static long op_Explicit(DynamoDBEntry p);
    public virtual float AsSingle();
    public static DynamoDBEntry op_Implicit(float data);
    public static float op_Explicit(DynamoDBEntry p);
    public virtual double AsDouble();
    public static DynamoDBEntry op_Implicit(double data);
    public static double op_Explicit(DynamoDBEntry p);
    public virtual decimal AsDecimal();
    public static DynamoDBEntry op_Implicit(decimal data);
    public static decimal op_Explicit(DynamoDBEntry p);
    public virtual char AsChar();
    public static DynamoDBEntry op_Implicit(char data);
    public static char op_Explicit(DynamoDBEntry p);
    public virtual string AsString();
    public static DynamoDBEntry op_Implicit(string data);
    public static string op_Implicit(DynamoDBEntry p);
    public virtual DateTime AsDateTime();
    public static DynamoDBEntry op_Implicit(DateTime data);
    public static DateTime op_Explicit(DynamoDBEntry p);
    public virtual Guid AsGuid();
    public static DynamoDBEntry op_Implicit(Guid data);
    public static Guid op_Explicit(DynamoDBEntry p);
    public virtual Byte[] AsByteArray();
    public static DynamoDBEntry op_Implicit(Byte[] data);
    public static Byte[] op_Explicit(DynamoDBEntry p);
    public virtual MemoryStream AsMemoryStream();
    public static DynamoDBEntry op_Implicit(MemoryStream data);
    public static MemoryStream op_Explicit(DynamoDBEntry p);
    public virtual DynamoDBEntry[] AsArrayOfDynamoDBEntry();
    public virtual List`1<DynamoDBEntry> AsListOfDynamoDBEntry();
    public virtual HashSet`1<DynamoDBEntry> AsHashSetOfDynamoDBEntry();
    public virtual Primitive[] AsArrayOfPrimitive();
    public static DynamoDBEntry op_Implicit(Primitive[] data);
    public static Primitive[] op_Explicit(DynamoDBEntry p);
    public virtual List`1<Primitive> AsListOfPrimitive();
    public static DynamoDBEntry op_Implicit(List`1<Primitive> data);
    public static List`1<Primitive> op_Explicit(DynamoDBEntry p);
    public virtual HashSet`1<Primitive> AsHashSetOfPrimitive();
    public static DynamoDBEntry op_Implicit(HashSet`1<Primitive> data);
    public static HashSet`1<Primitive> op_Explicit(DynamoDBEntry p);
    public virtual List`1<Document> AsListOfDocument();
    public static DynamoDBEntry op_Implicit(List`1<Document> data);
    public static List`1<Document> op_Explicit(DynamoDBEntry p);
    public virtual String[] AsArrayOfString();
    public static DynamoDBEntry op_Implicit(String[] data);
    public static String[] op_Explicit(DynamoDBEntry p);
    public virtual List`1<string> AsListOfString();
    public static DynamoDBEntry op_Implicit(List`1<string> data);
    public static List`1<string> op_Explicit(DynamoDBEntry p);
    public virtual HashSet`1<string> AsHashSetOfString();
    public static DynamoDBEntry op_Implicit(HashSet`1<string> data);
    public static HashSet`1<string> op_Explicit(DynamoDBEntry p);
    public virtual List`1<Byte[]> AsListOfByteArray();
    public static DynamoDBEntry op_Implicit(List`1<Byte[]> data);
    public static List`1<Byte[]> op_Explicit(DynamoDBEntry p);
    public virtual HashSet`1<Byte[]> AsHashSetOfByteArray();
    public static DynamoDBEntry op_Implicit(HashSet`1<Byte[]> data);
    public static HashSet`1<Byte[]> op_Explicit(DynamoDBEntry p);
    public virtual List`1<MemoryStream> AsListOfMemoryStream();
    public static DynamoDBEntry op_Implicit(List`1<MemoryStream> data);
    public static List`1<MemoryStream> op_Explicit(DynamoDBEntry p);
    public virtual HashSet`1<MemoryStream> AsHashSetOfMemoryStream();
    public static DynamoDBEntry op_Implicit(HashSet`1<MemoryStream> data);
    public static HashSet`1<MemoryStream> op_Explicit(DynamoDBEntry p);
    public abstract virtual object Clone();
}
public enum Amazon.DynamoDBv2.DocumentModel.DynamoDBEntryType : Enum {
    public int value__;
    public static DynamoDBEntryType String;
    public static DynamoDBEntryType Numeric;
    public static DynamoDBEntryType Binary;
}
[DefaultMemberAttribute("Item")]
public class Amazon.DynamoDBv2.DocumentModel.DynamoDBList : DynamoDBEntry {
    private static DynamoDBEntryConversion conversion;
    [CompilerGeneratedAttribute]
private List`1<DynamoDBEntry> <Entries>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<DynamoDBEntry, Document> CS$<>9__CachedAnonymousMethodDelegate1;
    public List`1<DynamoDBEntry> Entries { get; private set; }
    public DynamoDBEntry Item { get; public set; }
    public DynamoDBList(IEnumerable`1<DynamoDBEntry> entries);
    private static DynamoDBList();
    private static DynamoDBEntryConversion CreateConversion();
    public static DynamoDBList Create(IEnumerable`1<T> items);
    [CompilerGeneratedAttribute]
public List`1<DynamoDBEntry> get_Entries();
    [CompilerGeneratedAttribute]
private void set_Entries(List`1<DynamoDBEntry> value);
    public DynamoDBEntry get_Item(int i);
    public void set_Item(int i, DynamoDBEntry value);
    public void Add(DynamoDBEntry value);
    public DynamoDBList ForceConversion(DynamoDBEntryConversion conversion);
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    public virtual object Clone();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual DynamoDBEntry[] AsArrayOfDynamoDBEntry();
    public static DynamoDBList op_Implicit(DynamoDBEntry[] data);
    public static DynamoDBEntry[] op_Explicit(DynamoDBList p);
    public virtual List`1<DynamoDBEntry> AsListOfDynamoDBEntry();
    public static DynamoDBList op_Implicit(List`1<DynamoDBEntry> data);
    public static List`1<DynamoDBEntry> op_Explicit(DynamoDBList p);
    public virtual List`1<Document> AsListOfDocument();
    public static DynamoDBList op_Implicit(List`1<Document> data);
    public static List`1<Document> op_Explicit(DynamoDBList p);
    public virtual String[] AsArrayOfString();
    public static DynamoDBList op_Implicit(String[] data);
    public static String[] op_Explicit(DynamoDBList p);
    public virtual List`1<string> AsListOfString();
    public static DynamoDBList op_Implicit(List`1<string> data);
    public static List`1<string> op_Explicit(DynamoDBList p);
    public virtual HashSet`1<string> AsHashSetOfString();
    public static DynamoDBList op_Implicit(HashSet`1<string> data);
    public static HashSet`1<string> op_Explicit(DynamoDBList p);
    public virtual List`1<Byte[]> AsListOfByteArray();
    public static DynamoDBList op_Implicit(List`1<Byte[]> data);
    public static List`1<Byte[]> op_Explicit(DynamoDBList p);
    public virtual HashSet`1<Byte[]> AsHashSetOfByteArray();
    public static DynamoDBList op_Implicit(HashSet`1<Byte[]> data);
    public static HashSet`1<Byte[]> op_Explicit(DynamoDBList p);
    public virtual List`1<MemoryStream> AsListOfMemoryStream();
    public static DynamoDBList op_Implicit(List`1<MemoryStream> data);
    public static List`1<MemoryStream> op_Explicit(DynamoDBList p);
    [CompilerGeneratedAttribute]
private static Document <AsListOfDocument>b__0(DynamoDBEntry e);
}
public class Amazon.DynamoDBv2.DocumentModel.DynamoDBNull : DynamoDBEntry {
    public static DynamoDBNull Null;
    private static DynamoDBNull();
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    public virtual object Clone();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal static class Amazon.DynamoDBv2.DocumentModel.EnumMapper : object {
    public static string Convert(ReturnConsumedCapacityValues value);
    public static string Convert(ReturnItemCollectionMetricsValues value);
    public static string Convert(ProjectionTypeValues value);
    public static string Convert(SelectValues value);
    public static string Convert(ReturnValues value);
    public static string Convert(ScanOperator value);
    public static string Convert(QueryOperator value);
    public static string Convert(ConditionalOperatorValues value);
}
public class Amazon.DynamoDBv2.DocumentModel.ExpectedState : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ExpectedValue> <ExpectedValues>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    public Dictionary`2<string, ExpectedValue> ExpectedValues { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ExpectedValue> get_ExpectedValues();
    [CompilerGeneratedAttribute]
public void set_ExpectedValues(Dictionary`2<string, ExpectedValue> value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
    public void AddExpected(string attributeName, bool exists);
    public void AddExpected(string attributeName, ScanOperator comparison, Primitive[] values);
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap();
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap(DynamoDBEntryConversion conversion);
}
public class Amazon.DynamoDBv2.DocumentModel.ExpectedValue : object {
    [CompilerGeneratedAttribute]
private bool <Exists>k__BackingField;
    [CompilerGeneratedAttribute]
private ScanOperator <Comparison>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Primitive> <Values>k__BackingField;
    public bool Exists { get; public set; }
    public ScanOperator Comparison { get; private set; }
    public List`1<Primitive> Values { get; private set; }
    public ExpectedValue(bool exists);
    public ExpectedValue(ScanOperator comparison, Primitive[] values);
    [CompilerGeneratedAttribute]
public bool get_Exists();
    [CompilerGeneratedAttribute]
public void set_Exists(bool value);
    [CompilerGeneratedAttribute]
public ScanOperator get_Comparison();
    [CompilerGeneratedAttribute]
private void set_Comparison(ScanOperator value);
    [CompilerGeneratedAttribute]
public List`1<Primitive> get_Values();
    [CompilerGeneratedAttribute]
private void set_Values(List`1<Primitive> value);
    public ExpectedAttributeValue ToExpectedAttributeValue();
    public ExpectedAttributeValue ToExpectedAttributeValue(DynamoDBEntryConversion conversion);
}
public class Amazon.DynamoDBv2.DocumentModel.Expression : object {
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, DynamoDBEntry> _expressionAttributeValues;
    [CompilerGeneratedAttribute]
private string <ExpressionStatement>k__BackingField;
    internal bool IsSet { get; }
    public string ExpressionStatement { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, DynamoDBEntry> ExpressionAttributeValues { get; public set; }
    internal bool get_IsSet();
    [CompilerGeneratedAttribute]
public string get_ExpressionStatement();
    [CompilerGeneratedAttribute]
public void set_ExpressionStatement(string value);
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    public Dictionary`2<string, DynamoDBEntry> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, DynamoDBEntry> value);
    internal void ApplyExpression(ScanRequest request, DynamoDBEntryConversion conversion);
    internal void ApplyExpression(DeleteItemRequest request, DynamoDBEntryConversion conversion);
    internal void ApplyExpression(PutItemRequest request, DynamoDBEntryConversion conversion);
    internal void ApplyExpression(UpdateItemRequest request, DynamoDBEntryConversion conversion);
    internal static void ApplyExpression(QueryRequest request, DynamoDBEntryConversion conversion, Expression keyExpression, Expression filterExpression);
    internal static Dictionary`2<string, AttributeValue> ConvertToAttributeValues(Dictionary`2<string, DynamoDBEntry> valueMap, DynamoDBEntryConversion conversion);
}
public class Amazon.DynamoDBv2.DocumentModel.Filter : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, FilterCondition> <Conditions>k__BackingField;
    protected Dictionary`2<string, FilterCondition> Conditions { get; private set; }
    [CompilerGeneratedAttribute]
protected Dictionary`2<string, FilterCondition> get_Conditions();
    [CompilerGeneratedAttribute]
private void set_Conditions(Dictionary`2<string, FilterCondition> value);
    public Dictionary`2<string, Condition> ToConditions();
    public Dictionary`2<string, Condition> ToConditions(DynamoDBEntryConversion conversion);
    public static Filter FromConditions(Dictionary`2<string, Condition> conditions);
    protected static List`1<AttributeValue> ConvertToAttributeValues(DynamoDBEntryConversion conversion, DynamoDBEntry[] values);
    public void AddCondition(string attributeName, Condition condition);
    protected void AddCondition(string attributeName, ComparisonOperator comparisonOperator, List`1<DynamoDBEntry> values);
    protected void AddCondition(string attributeName, FilterCondition filterCondition);
    public void RemoveCondition(string attributeName);
}
public class Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig : object {
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsistentRead>k__BackingField;
    public List`1<string> AttributesToGet { get; public set; }
    public bool ConsistentRead { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
public void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(bool value);
}
internal interface Amazon.DynamoDBv2.DocumentModel.IConditionalOperationConfig {
    public Expression ConditionalExpression { get; public set; }
    public ExpectedState ExpectedState { get; public set; }
    public Document Expected { get; public set; }
    public abstract virtual Expression get_ConditionalExpression();
    public abstract virtual void set_ConditionalExpression(Expression value);
    public abstract virtual ExpectedState get_ExpectedState();
    public abstract virtual void set_ExpectedState(ExpectedState value);
    public abstract virtual Document get_Expected();
    public abstract virtual void set_Expected(Document value);
}
internal static class Amazon.DynamoDBv2.DocumentModel.JsonUtils : object {
    public static Document FromJson(string jsonText);
    public static string ToJson(Document document, bool prettyPrint);
    public static void DecodeBase64Attributes(Document document, String[] attributeNames);
    private static bool TryDecodeBase64(DynamoDBEntry entry, DynamoDBEntry& decodedEntry);
    private static bool TryDecodeBase64(string base64Data, Byte[]& bytes);
    private static DynamoDBEntry ToEntry(JsonData data, DynamoDBEntryConversion conversion);
    private static void WriteJson(DynamoDBEntry entry, JsonWriter writer, DynamoDBEntryConversion conversion);
    private static void WritePrimitive(JsonWriter writer, DynamoDBEntryType type, object value);
    private static int FirstIndex(StringBuilder sb, char toMatch);
}
internal class Amazon.DynamoDBv2.DocumentModel.Key : Dictionary`2<string, AttributeValue> {
    public Key(IDictionary`2<string, AttributeValue> values);
}
internal class Amazon.DynamoDBv2.DocumentModel.KeyComparer : object {
    public sealed virtual bool Equals(Key x, Key y);
    public sealed virtual int GetHashCode(Key key);
    private static int GetHashCode(AttributeValue attributeValue);
    private static bool CompareAttributeValue(AttributeValue x, AttributeValue y);
    private static bool IsEitherNull(T x, T y);
    private static bool AreBothNull(T x, T y);
}
public class Amazon.DynamoDBv2.DocumentModel.KeyDescription : object {
    [CompilerGeneratedAttribute]
private DynamoDBEntryType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsHash>k__BackingField;
    public DynamoDBEntryType Type { get; internal set; }
    public bool IsHash { get; internal set; }
    [CompilerGeneratedAttribute]
public DynamoDBEntryType get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(DynamoDBEntryType value);
    [CompilerGeneratedAttribute]
public bool get_IsHash();
    [CompilerGeneratedAttribute]
internal void set_IsHash(bool value);
}
internal class Amazon.DynamoDBv2.DocumentModel.MultiBatchGet : object {
    public static int MaxItemsPerCall;
    private Dictionary`2<string, List`1<Dictionary`2<string, AttributeValue>>> AllRetrievedItems;
    [CompilerGeneratedAttribute]
private List`1<DocumentBatchGet> <Batches>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<Key, Dictionary`2<string, AttributeValue>> CS$<>9__CachedAnonymousMethodDelegate2;
    public List`1<DocumentBatchGet> Batches { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<DocumentBatchGet> get_Batches();
    [CompilerGeneratedAttribute]
public void set_Batches(List`1<DocumentBatchGet> value);
    public Dictionary`2<string, List`1<Document>> GetItems();
    internal Dictionary`2<string, List`1<Document>> GetItemsHelper(bool isAsync);
    private void GetAttributeItems(bool isAsync);
    private void CallUntilCompletion(AmazonDynamoDBClient client, BatchGetItemRequest request);
    private static BatchGetItemRequest CreateRequest(Dictionary`2<string, RequestSet> set, Table targetTable, bool isAsync);
    private Dictionary`2<string, RequestSet> ConvertBatches();
    private static Dictionary`2<string, RequestSet> GetNextRequestItems(Dictionary`2& getRequestsMap, int maxNumberOfItems);
    [CompilerGeneratedAttribute]
private static Dictionary`2<string, AttributeValue> <ConvertBatches>b__1(Key k);
}
internal class Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite : object {
    public static int MaxItemsPerCall;
    private static KeyComparer keyComparer;
    private Dictionary`2<string, Table> tableMap;
    [CompilerGeneratedAttribute]
private List`1<DocumentBatchWrite> <Batches>k__BackingField;
    public List`1<DocumentBatchWrite> Batches { get; public set; }
    private static MultiBatchWrite();
    [CompilerGeneratedAttribute]
public List`1<DocumentBatchWrite> get_Batches();
    [CompilerGeneratedAttribute]
public void set_Batches(List`1<DocumentBatchWrite> value);
    public void WriteItems(bool isAsync);
    private void WriteItemsHelper(List`1<DocumentBatchWrite> batches, bool isAsync);
    private void SendSet(Dictionary`2<string, QuickList`1<WriteRequestDocument>> set, Table targetTable, bool isAsync);
    private static int GetNumberOfWrites(BatchWriteItemRequest request);
    private BatchWriteItemRequest ConstructRequest(Dictionary`2<string, QuickList`1<WriteRequestDocument>> writeItems, Table targetTable, Dictionary`2& documentMap, bool isAsync);
    private static Dictionary`2<string, QuickList`1<WriteRequestDocument>> GetNextWriteItems(Dictionary`2& writeRequestsMap, int maxNumberOfItems);
    private void CallUntilCompletion(BatchWriteItemRequest request, Dictionary`2<string, Dictionary`2<Key, Document>> documentMap, AmazonDynamoDBClient client);
    private Dictionary`2<string, QuickList`1<WriteRequestDocument>> ConvertBatches(List`1<DocumentBatchWrite> batches);
}
public class Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet : object {
    [CompilerGeneratedAttribute]
private List`1<DocumentBatchGet> <Batches>k__BackingField;
    public List`1<DocumentBatchGet> Batches { get; private set; }
    public int TotalKeys { get; }
    public MultiTableDocumentBatchGet(DocumentBatchGet[] batches);
    [CompilerGeneratedAttribute]
public List`1<DocumentBatchGet> get_Batches();
    [CompilerGeneratedAttribute]
private void set_Batches(List`1<DocumentBatchGet> value);
    public int get_TotalKeys();
    public void AddBatch(DocumentBatchGet batch);
    internal void ExecuteHelper(bool isAsync);
    public Task ExecuteAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private void <ExecuteAsync>b__1();
}
public class Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite : object {
    [CompilerGeneratedAttribute]
private List`1<DocumentBatchWrite> <Batches>k__BackingField;
    public List`1<DocumentBatchWrite> Batches { get; private set; }
    public MultiTableDocumentBatchWrite(DocumentBatchWrite[] batches);
    [CompilerGeneratedAttribute]
public List`1<DocumentBatchWrite> get_Batches();
    [CompilerGeneratedAttribute]
private void set_Batches(List`1<DocumentBatchWrite> value);
    public void AddBatch(DocumentBatchWrite batch);
    internal void ExecuteHelper(bool isAsync);
    public Task ExecuteAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private void <ExecuteAsync>b__1();
}
public class Amazon.DynamoDBv2.DocumentModel.Primitive : DynamoDBEntry {
    private static DynamoDBEntryConversion V1Conversion;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryType <Type>k__BackingField;
    public object Value { get; public set; }
    public DynamoDBEntryType Type { get; public set; }
    internal string StringValue { get; }
    public Primitive(string value);
    public Primitive(string value, bool saveAsNumeric);
    public Primitive(MemoryStream value);
    public Primitive(Byte[] value);
    internal Primitive(object value, DynamoDBEntryType type);
    private static Primitive();
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(DynamoDBEntryType value);
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    internal string get_StringValue();
    public virtual bool AsBoolean();
    public static Primitive op_Implicit(bool data);
    public static bool op_Explicit(Primitive p);
    public virtual byte AsByte();
    public static Primitive op_Implicit(byte data);
    public static byte op_Explicit(Primitive p);
    [CLSCompliantAttribute("False")]
public virtual sbyte AsSByte();
    [CLSCompliantAttribute("False")]
public static Primitive op_Implicit(sbyte data);
    [CLSCompliantAttribute("False")]
public static sbyte op_Explicit(Primitive p);
    [CLSCompliantAttribute("False")]
public virtual ushort AsUShort();
    [CLSCompliantAttribute("False")]
public static Primitive op_Implicit(ushort data);
    [CLSCompliantAttribute("False")]
public static ushort op_Explicit(Primitive p);
    public virtual short AsShort();
    public static Primitive op_Implicit(short data);
    public static short op_Explicit(Primitive p);
    [CLSCompliantAttribute("False")]
public virtual UInt32 AsUInt();
    [CLSCompliantAttribute("False")]
public static Primitive op_Implicit(UInt32 data);
    [CLSCompliantAttribute("False")]
public static UInt32 op_Explicit(Primitive p);
    public virtual int AsInt();
    public static Primitive op_Implicit(int data);
    public static int op_Explicit(Primitive p);
    [CLSCompliantAttribute("False")]
public virtual ulong AsULong();
    [CLSCompliantAttribute("False")]
public static Primitive op_Implicit(ulong data);
    [CLSCompliantAttribute("False")]
public static ulong op_Explicit(Primitive p);
    public virtual long AsLong();
    public static Primitive op_Implicit(long data);
    public static long op_Explicit(Primitive p);
    public virtual float AsSingle();
    public static Primitive op_Implicit(float data);
    public static float op_Explicit(Primitive p);
    public virtual double AsDouble();
    public static Primitive op_Implicit(double data);
    public static double op_Explicit(Primitive p);
    public virtual decimal AsDecimal();
    public static Primitive op_Implicit(decimal data);
    public static decimal op_Explicit(Primitive p);
    public virtual char AsChar();
    public static Primitive op_Implicit(char data);
    public static char op_Explicit(Primitive p);
    public virtual string AsString();
    public static Primitive op_Implicit(string data);
    public static string op_Implicit(Primitive p);
    public virtual DateTime AsDateTime();
    public static Primitive op_Implicit(DateTime data);
    public static DateTime op_Explicit(Primitive p);
    public virtual Guid AsGuid();
    public static Primitive op_Implicit(Guid data);
    public static Guid op_Explicit(Primitive p);
    public virtual Byte[] AsByteArray();
    public static Primitive op_Implicit(Byte[] data);
    public static Byte[] op_Explicit(Primitive p);
    public virtual MemoryStream AsMemoryStream();
    public static Primitive op_Implicit(MemoryStream data);
    public static MemoryStream op_Explicit(Primitive p);
    public virtual string ToString();
    public virtual object Clone();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(Primitive other);
}
internal class Amazon.DynamoDBv2.DocumentModel.PrimitiveComparer : object {
    public static PrimitiveComparer Default;
    private static PrimitiveComparer();
    public sealed virtual int Compare(Primitive x, Primitive y);
}
internal class Amazon.DynamoDBv2.DocumentModel.PrimitiveEqualityComparer : object {
    public static PrimitiveEqualityComparer Default;
    private static PrimitiveEqualityComparer();
    public sealed virtual bool Equals(Primitive x, Primitive y);
    public sealed virtual int GetHashCode(Primitive obj);
}
[DefaultMemberAttribute("Item")]
public class Amazon.DynamoDBv2.DocumentModel.PrimitiveList : DynamoDBEntry {
    private static DynamoDBEntryConversion V1Conversion;
    [CompilerGeneratedAttribute]
private List`1<Primitive> <Entries>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryType <Type>k__BackingField;
    public List`1<Primitive> Entries { get; public set; }
    public DynamoDBEntryType Type { get; public set; }
    public Primitive Item { get; public set; }
    public PrimitiveList(DynamoDBEntryType type);
    internal PrimitiveList(IEnumerable`1<Primitive> primitives);
    private static PrimitiveList();
    [CompilerGeneratedAttribute]
public List`1<Primitive> get_Entries();
    [CompilerGeneratedAttribute]
public void set_Entries(List`1<Primitive> value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(DynamoDBEntryType value);
    public Primitive get_Item(int i);
    public void set_Item(int i, Primitive value);
    public void Add(Primitive value);
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    internal List`1<Primitive> GetSortedEntries();
    public virtual Primitive[] AsArrayOfPrimitive();
    public static PrimitiveList op_Implicit(Primitive[] data);
    public static Primitive[] op_Explicit(PrimitiveList p);
    public virtual List`1<Primitive> AsListOfPrimitive();
    public static PrimitiveList op_Implicit(List`1<Primitive> data);
    public static List`1<Primitive> op_Explicit(PrimitiveList p);
    public virtual HashSet`1<Primitive> AsHashSetOfPrimitive();
    public static PrimitiveList op_Implicit(HashSet`1<Primitive> data);
    public static HashSet`1<Primitive> op_Explicit(PrimitiveList p);
    public virtual String[] AsArrayOfString();
    public static PrimitiveList op_Implicit(String[] data);
    public static String[] op_Explicit(PrimitiveList p);
    public virtual List`1<string> AsListOfString();
    public static PrimitiveList op_Implicit(List`1<string> data);
    public static List`1<string> op_Explicit(PrimitiveList p);
    public virtual HashSet`1<string> AsHashSetOfString();
    public static PrimitiveList op_Implicit(HashSet`1<string> data);
    public static HashSet`1<string> op_Explicit(PrimitiveList p);
    public virtual List`1<Byte[]> AsListOfByteArray();
    public static PrimitiveList op_Implicit(List`1<Byte[]> data);
    public static List`1<Byte[]> op_Explicit(PrimitiveList p);
    public virtual HashSet`1<Byte[]> AsHashSetOfByteArray();
    public static PrimitiveList op_Implicit(HashSet`1<Byte[]> data);
    public static HashSet`1<Byte[]> op_Explicit(PrimitiveList p);
    public virtual List`1<MemoryStream> AsListOfMemoryStream();
    public static PrimitiveList op_Implicit(List`1<MemoryStream> data);
    public static List`1<MemoryStream> op_Explicit(PrimitiveList p);
    public virtual object Clone();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(PrimitiveList other);
}
internal enum Amazon.DynamoDBv2.DocumentModel.ProjectionTypeValues : Enum {
    public int value__;
    public static ProjectionTypeValues All;
    public static ProjectionTypeValues Include;
    public static ProjectionTypeValues KeysOnly;
}
public class Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig : object {
    [CompilerGeneratedAttribute]
private Expression <ConditionalExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ExpectedState <ExpectedState>k__BackingField;
    [CompilerGeneratedAttribute]
private Document <Expected>k__BackingField;
    [CompilerGeneratedAttribute]
private ReturnValues <ReturnValues>k__BackingField;
    public Expression ConditionalExpression { get; public set; }
    public ExpectedState ExpectedState { get; public set; }
    public Document Expected { get; public set; }
    public ReturnValues ReturnValues { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Expression get_ConditionalExpression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConditionalExpression(Expression value);
    [CompilerGeneratedAttribute]
public sealed virtual ExpectedState get_ExpectedState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExpectedState(ExpectedState value);
    [CompilerGeneratedAttribute]
public sealed virtual Document get_Expected();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expected(Document value);
    [CompilerGeneratedAttribute]
public ReturnValues get_ReturnValues();
    [CompilerGeneratedAttribute]
public void set_ReturnValues(ReturnValues value);
}
public class Amazon.DynamoDBv2.DocumentModel.QueryFilter : Filter {
    public QueryFilter(string attributeName, QueryOperator op, List`1<AttributeValue> values);
    public QueryFilter(string attributeName, QueryOperator op, DynamoDBEntry[] values);
    internal QueryFilter(QueryFilter baseFilter);
    public void AddCondition(string keyAttributeName, QueryOperator op, List`1<AttributeValue> values);
    public void AddCondition(string keyAttributeName, QueryOperator op, DynamoDBEntry[] values);
    public void AddCondition(string nonKeyAttributeName, ScanOperator op, List`1<AttributeValue> values);
    public void AddCondition(string nonKeyAttributeName, ScanOperator op, DynamoDBEntry[] values);
}
public class Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig : object {
    [CompilerGeneratedAttribute]
private Expression <KeyExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <FilterExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Limit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BackwardSearch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectValues <Select>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CollectResults>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    public Expression KeyExpression { get; public set; }
    public Expression FilterExpression { get; public set; }
    public QueryFilter Filter { get; public set; }
    public bool ConsistentRead { get; public set; }
    public List`1<string> AttributesToGet { get; public set; }
    public int Limit { get; public set; }
    public bool BackwardSearch { get; public set; }
    public string IndexName { get; public set; }
    public SelectValues Select { get; public set; }
    public bool CollectResults { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    [CompilerGeneratedAttribute]
public Expression get_KeyExpression();
    [CompilerGeneratedAttribute]
public void set_KeyExpression(Expression value);
    [CompilerGeneratedAttribute]
public Expression get_FilterExpression();
    [CompilerGeneratedAttribute]
public void set_FilterExpression(Expression value);
    [CompilerGeneratedAttribute]
public QueryFilter get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(QueryFilter value);
    [CompilerGeneratedAttribute]
public bool get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
public void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public int get_Limit();
    [CompilerGeneratedAttribute]
public void set_Limit(int value);
    [CompilerGeneratedAttribute]
public bool get_BackwardSearch();
    [CompilerGeneratedAttribute]
public void set_BackwardSearch(bool value);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public SelectValues get_Select();
    [CompilerGeneratedAttribute]
public void set_Select(SelectValues value);
    [CompilerGeneratedAttribute]
public bool get_CollectResults();
    [CompilerGeneratedAttribute]
public void set_CollectResults(bool value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
}
public enum Amazon.DynamoDBv2.DocumentModel.QueryOperator : Enum {
    public int value__;
    public static QueryOperator Equal;
    public static QueryOperator LessThanOrEqual;
    public static QueryOperator LessThan;
    public static QueryOperator GreaterThanOrEqual;
    public static QueryOperator GreaterThan;
    public static QueryOperator BeginsWith;
    public static QueryOperator Between;
}
internal class Amazon.DynamoDBv2.DocumentModel.QuickList`1 : object {
    private List`1<T> List;
    private int StartIndex;
    public int Count { get; }
    public QuickList`1(IEnumerable`1<T> items);
    public int get_Count();
    public IEnumerable`1<T> RemoveFromHead(int numberOfItems);
    public List`1<T> GetItems();
}
internal enum Amazon.DynamoDBv2.DocumentModel.ReturnConsumedCapacityValues : Enum {
    public int value__;
    public static ReturnConsumedCapacityValues None;
    public static ReturnConsumedCapacityValues Total;
}
internal enum Amazon.DynamoDBv2.DocumentModel.ReturnItemCollectionMetricsValues : Enum {
    public int value__;
    public static ReturnItemCollectionMetricsValues None;
    public static ReturnItemCollectionMetricsValues All;
}
public enum Amazon.DynamoDBv2.DocumentModel.ReturnValues : Enum {
    public int value__;
    public static ReturnValues None;
    public static ReturnValues AllOldAttributes;
    public static ReturnValues AllNewAttributes;
    public static ReturnValues UpdatedOldAttributes;
    public static ReturnValues UpdatedNewAttributes;
}
public class Amazon.DynamoDBv2.DocumentModel.ScanFilter : Filter {
    public void AddCondition(string attributeName, ScanOperator op, List`1<AttributeValue> values);
    public void AddCondition(string attributeName, ScanOperator op, DynamoDBEntry[] values);
}
public class Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig : object {
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Limit>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <FilterExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ScanFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectValues <Select>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalSegments>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Segment>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CollectResults>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    public List`1<string> AttributesToGet { get; public set; }
    public bool ConsistentRead { get; public set; }
    public int Limit { get; public set; }
    public Expression FilterExpression { get; public set; }
    public ScanFilter Filter { get; public set; }
    public string IndexName { get; public set; }
    public SelectValues Select { get; public set; }
    public int TotalSegments { get; public set; }
    public int Segment { get; public set; }
    public bool CollectResults { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
public void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(bool value);
    [CompilerGeneratedAttribute]
public int get_Limit();
    [CompilerGeneratedAttribute]
public void set_Limit(int value);
    [CompilerGeneratedAttribute]
public Expression get_FilterExpression();
    [CompilerGeneratedAttribute]
public void set_FilterExpression(Expression value);
    [CompilerGeneratedAttribute]
public ScanFilter get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(ScanFilter value);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public SelectValues get_Select();
    [CompilerGeneratedAttribute]
public void set_Select(SelectValues value);
    [CompilerGeneratedAttribute]
public int get_TotalSegments();
    [CompilerGeneratedAttribute]
public void set_TotalSegments(int value);
    [CompilerGeneratedAttribute]
public int get_Segment();
    [CompilerGeneratedAttribute]
public void set_Segment(int value);
    [CompilerGeneratedAttribute]
public bool get_CollectResults();
    [CompilerGeneratedAttribute]
public void set_CollectResults(bool value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
}
public enum Amazon.DynamoDBv2.DocumentModel.ScanOperator : Enum {
    public int value__;
    public static ScanOperator Equal;
    public static ScanOperator NotEqual;
    public static ScanOperator LessThanOrEqual;
    public static ScanOperator LessThan;
    public static ScanOperator GreaterThanOrEqual;
    public static ScanOperator GreaterThan;
    public static ScanOperator IsNotNull;
    public static ScanOperator IsNull;
    public static ScanOperator Contains;
    public static ScanOperator NotContains;
    public static ScanOperator BeginsWith;
    public static ScanOperator In;
    public static ScanOperator Between;
}
public class Amazon.DynamoDBv2.DocumentModel.Search : object {
    private int count;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CollectResults>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Limit>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <KeyExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <FilterExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Filter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBackwardSearch>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDone>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, AttributeValue> <NextKey>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Document> <Matches>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalSegments>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Segment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectValues <Select>k__BackingField;
    [CompilerGeneratedAttribute]
private SearchType <SearchMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Table <SourceTable>k__BackingField;
    public string TableName { get; internal set; }
    public bool CollectResults { get; internal set; }
    public int Limit { get; internal set; }
    public Expression KeyExpression { get; public set; }
    public Expression FilterExpression { get; public set; }
    public Filter Filter { get; internal set; }
    public ConditionalOperatorValues ConditionalOperator { get; internal set; }
    public List`1<string> AttributesToGet { get; internal set; }
    public bool IsConsistentRead { get; internal set; }
    public bool IsBackwardSearch { get; internal set; }
    public bool IsDone { get; private set; }
    public Dictionary`2<string, AttributeValue> NextKey { get; private set; }
    public List`1<Document> Matches { get; private set; }
    public int TotalSegments { get; public set; }
    public int Segment { get; public set; }
    public int Count { get; }
    public string IndexName { get; internal set; }
    public SelectValues Select { get; internal set; }
    private SearchType SearchMethod { get; private set; }
    internal Table SourceTable { get; internal set; }
    internal Search(SearchType searchMethod);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
internal void set_TableName(string value);
    [CompilerGeneratedAttribute]
public bool get_CollectResults();
    [CompilerGeneratedAttribute]
internal void set_CollectResults(bool value);
    [CompilerGeneratedAttribute]
public int get_Limit();
    [CompilerGeneratedAttribute]
internal void set_Limit(int value);
    [CompilerGeneratedAttribute]
public Expression get_KeyExpression();
    [CompilerGeneratedAttribute]
public void set_KeyExpression(Expression value);
    [CompilerGeneratedAttribute]
public Expression get_FilterExpression();
    [CompilerGeneratedAttribute]
public void set_FilterExpression(Expression value);
    [CompilerGeneratedAttribute]
public Filter get_Filter();
    [CompilerGeneratedAttribute]
internal void set_Filter(Filter value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
internal void set_ConditionalOperator(ConditionalOperatorValues value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
internal void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IsConsistentRead();
    [CompilerGeneratedAttribute]
internal void set_IsConsistentRead(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsBackwardSearch();
    [CompilerGeneratedAttribute]
internal void set_IsBackwardSearch(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsDone();
    [CompilerGeneratedAttribute]
private void set_IsDone(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, AttributeValue> get_NextKey();
    [CompilerGeneratedAttribute]
private void set_NextKey(Dictionary`2<string, AttributeValue> value);
    [CompilerGeneratedAttribute]
public List`1<Document> get_Matches();
    [CompilerGeneratedAttribute]
private void set_Matches(List`1<Document> value);
    [CompilerGeneratedAttribute]
public int get_TotalSegments();
    [CompilerGeneratedAttribute]
public void set_TotalSegments(int value);
    [CompilerGeneratedAttribute]
public int get_Segment();
    [CompilerGeneratedAttribute]
public void set_Segment(int value);
    public int get_Count();
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
internal void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public SelectValues get_Select();
    [CompilerGeneratedAttribute]
internal void set_Select(SelectValues value);
    internal List`1<Document> GetNextSetHelper(bool isAsync);
    internal List`1<Document> GetRemainingHelper(bool isAsync);
    [CompilerGeneratedAttribute]
private SearchType get_SearchMethod();
    [CompilerGeneratedAttribute]
private void set_SearchMethod(SearchType value);
    [CompilerGeneratedAttribute]
internal Table get_SourceTable();
    [CompilerGeneratedAttribute]
internal void set_SourceTable(Table value);
    private static void SplitQueryFilter(Filter filter, Table targetTable, string indexName, Dictionary`2& keyConditions, Dictionary`2& filterConditions);
    private static bool IsKeyAttribute(Table table, string indexName, string attributeName);
    private static Func`2<KeySchemaElement, bool> AttributeIsKey(string attributeName);
    private int GetCount();
    internal void Reset();
    public Task`1<List`1<Document>> GetNextSetAsync(CancellationToken cancellationToken);
    public Task`1<List`1<Document>> GetRemainingAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private List`1<Document> <GetNextSetAsync>b__7();
    [CompilerGeneratedAttribute]
private List`1<Document> <GetRemainingAsync>b__8();
}
internal enum Amazon.DynamoDBv2.DocumentModel.SearchType : Enum {
    public int value__;
    public static SearchType Scan;
    public static SearchType Query;
}
public enum Amazon.DynamoDBv2.DocumentModel.SelectValues : Enum {
    public int value__;
    public static SelectValues Count;
    public static SelectValues SpecificAttributes;
    public static SelectValues AllAttributes;
    public static SelectValues AllProjectedAttributes;
}
public class Amazon.DynamoDBv2.DocumentModel.Table : object {
    private String[] keyNames;
    [CompilerGeneratedAttribute]
private DynamoDBConsumer <TableConsumer>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    [CompilerGeneratedAttribute]
private AmazonDynamoDBClient <DDBClient>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, KeyDescription> <Keys>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, GlobalSecondaryIndexDescription> <GlobalSecondaryIndexes>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, LocalSecondaryIndexDescription> <LocalSecondaryIndexes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <LocalSecondaryIndexNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <GlobalSecondaryIndexNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <HashKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RangeKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeDefinition> <Attributes>k__BackingField;
    internal DynamoDBConsumer TableConsumer { get; private set; }
    internal DynamoDBEntryConversion Conversion { get; private set; }
    internal AmazonDynamoDBClient DDBClient { get; private set; }
    public string TableName { get; private set; }
    public Dictionary`2<string, KeyDescription> Keys { get; private set; }
    public Dictionary`2<string, GlobalSecondaryIndexDescription> GlobalSecondaryIndexes { get; private set; }
    public Dictionary`2<string, LocalSecondaryIndexDescription> LocalSecondaryIndexes { get; private set; }
    public List`1<string> LocalSecondaryIndexNames { get; private set; }
    public List`1<string> GlobalSecondaryIndexNames { get; private set; }
    public List`1<string> HashKeys { get; private set; }
    public List`1<string> RangeKeys { get; private set; }
    public List`1<AttributeDefinition> Attributes { get; public set; }
    private Table(IAmazonDynamoDB ddbClient, string tableName, DynamoDBConsumer consumer, DynamoDBEntryConversion conversion);
    [CompilerGeneratedAttribute]
internal DynamoDBConsumer get_TableConsumer();
    [CompilerGeneratedAttribute]
private void set_TableConsumer(DynamoDBConsumer value);
    [CompilerGeneratedAttribute]
internal DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
private void set_Conversion(DynamoDBEntryConversion value);
    [CompilerGeneratedAttribute]
internal AmazonDynamoDBClient get_DDBClient();
    [CompilerGeneratedAttribute]
private void set_DDBClient(AmazonDynamoDBClient value);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
private void set_TableName(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, KeyDescription> get_Keys();
    [CompilerGeneratedAttribute]
private void set_Keys(Dictionary`2<string, KeyDescription> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, GlobalSecondaryIndexDescription> get_GlobalSecondaryIndexes();
    [CompilerGeneratedAttribute]
private void set_GlobalSecondaryIndexes(Dictionary`2<string, GlobalSecondaryIndexDescription> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, LocalSecondaryIndexDescription> get_LocalSecondaryIndexes();
    [CompilerGeneratedAttribute]
private void set_LocalSecondaryIndexes(Dictionary`2<string, LocalSecondaryIndexDescription> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_LocalSecondaryIndexNames();
    [CompilerGeneratedAttribute]
private void set_LocalSecondaryIndexNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_GlobalSecondaryIndexNames();
    [CompilerGeneratedAttribute]
private void set_GlobalSecondaryIndexNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_HashKeys();
    [CompilerGeneratedAttribute]
private void set_HashKeys(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_RangeKeys();
    [CompilerGeneratedAttribute]
private void set_RangeKeys(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<AttributeDefinition> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(List`1<AttributeDefinition> value);
    private static DynamoDBEntryType GetType(string attributeType);
    private void GetTableInfo();
    internal Key MakeKey(IDictionary`2<string, DynamoDBEntry> doc);
    internal Key MakeKey(Primitive hashKey, Primitive rangeKey);
    internal void UserAgentRequestEventHandlerSync(object sender, RequestEventArgs args);
    internal void UserAgentRequestEventHandlerAsync(object sender, RequestEventArgs args);
    private void UserAgentRequestEventHandler(object sender, RequestEventArgs args, bool isAsync);
    private static void ValidateConditional(IConditionalOperationConfig config);
    internal Table Copy();
    internal Table Copy(DynamoDBConsumer newConsumer);
    internal static Table LoadTable(IAmazonDynamoDB ddbClient, string tableName, DynamoDBConsumer consumer, DynamoDBEntryConversion conversion);
    internal static bool TryLoadTable(IAmazonDynamoDB ddbClient, string tableName, DynamoDBConsumer consumer, DynamoDBEntryConversion conversion, Table& table);
    public static Table LoadTable(IAmazonDynamoDB ddbClient, string tableName);
    public static Table LoadTable(IAmazonDynamoDB ddbClient, string tableName, DynamoDBEntryConversion conversion);
    public static bool TryLoadTable(IAmazonDynamoDB ddbClient, string tableName, Table& table);
    public static bool TryLoadTable(IAmazonDynamoDB ddbClient, string tableName, DynamoDBEntryConversion conversion, Table& table);
    internal Document PutItemHelper(Document doc, PutItemOperationConfig config, bool isAsync);
    internal Document GetItemHelper(Key key, GetItemOperationConfig config, bool isAsync);
    internal Document UpdateHelper(Document doc, Primitive hashKey, Primitive rangeKey, UpdateItemOperationConfig config, bool isAsync);
    internal Document UpdateHelper(Document doc, Key key, UpdateItemOperationConfig config, bool isAsync);
    private bool HaveKeysChanged(Document doc);
    internal Document DeleteHelper(Key key, DeleteItemOperationConfig config, bool isAsync);
    public Search Scan(ScanFilter filter);
    public Search Scan(Expression filterExpression);
    public Search Scan(ScanOperationConfig config);
    public Search Query(Primitive hashKey, QueryFilter filter);
    public Search Query(Primitive hashKey, Expression filterExpression);
    public Search Query(QueryFilter filter);
    public Search Query(QueryOperationConfig config);
    public DocumentBatchGet CreateBatchGet();
    public DocumentBatchWrite CreateBatchWrite();
    public Task`1<Document> PutItemAsync(Document doc, CancellationToken cancellationToken);
    public Task`1<Document> PutItemAsync(Document doc, PutItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(Primitive hashKey, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(Primitive hashKey, GetItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(Primitive hashKey, Primitive rangeKey, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(Primitive hashKey, Primitive rangeKey, GetItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(IDictionary`2<string, DynamoDBEntry> key, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(IDictionary`2<string, DynamoDBEntry> key, GetItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, UpdateItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, IDictionary`2<string, DynamoDBEntry> key, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, IDictionary`2<string, DynamoDBEntry> key, UpdateItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, Primitive hashKey, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, Primitive hashKey, UpdateItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, Primitive hashKey, Primitive rangeKey, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, Primitive hashKey, Primitive rangeKey, UpdateItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Document document, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Document document, DeleteItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Primitive hashKey, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Primitive hashKey, DeleteItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Primitive hashKey, Primitive rangeKey, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Primitive hashKey, Primitive rangeKey, DeleteItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(IDictionary`2<string, DynamoDBEntry> key, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(IDictionary`2<string, DynamoDBEntry> key, DeleteItemOperationConfig config, CancellationToken cancellationToken);
}
internal class Amazon.DynamoDBv2.DocumentModel.UnconvertedDynamoDBEntry : DynamoDBEntry {
    private object Value;
    private Type ValueType;
    public UnconvertedDynamoDBEntry(object value);
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    public DynamoDBEntry Convert(DynamoDBEntryConversion conversion);
    public virtual object Clone();
    public virtual bool AsBoolean();
    public virtual byte AsByte();
    public virtual string AsString();
    public virtual char AsChar();
    public virtual DateTime AsDateTime();
    public virtual decimal AsDecimal();
    public virtual double AsDouble();
    public virtual int AsInt();
    public virtual long AsLong();
    public virtual sbyte AsSByte();
    public virtual short AsShort();
    public virtual float AsSingle();
    public virtual UInt32 AsUInt();
    public virtual ulong AsULong();
    public virtual ushort AsUShort();
    public virtual String[] AsArrayOfString();
    public virtual Byte[] AsByteArray();
    public virtual Guid AsGuid();
    public virtual MemoryStream AsMemoryStream();
    public virtual List`1<string> AsListOfString();
    public virtual HashSet`1<Byte[]> AsHashSetOfByteArray();
    public virtual HashSet`1<MemoryStream> AsHashSetOfMemoryStream();
    public virtual HashSet`1<string> AsHashSetOfString();
    public virtual List`1<Byte[]> AsListOfByteArray();
    public virtual List`1<MemoryStream> AsListOfMemoryStream();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
}
public class Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig : object {
    [CompilerGeneratedAttribute]
private Expression <ConditionalExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ExpectedState <ExpectedState>k__BackingField;
    [CompilerGeneratedAttribute]
private Document <Expected>k__BackingField;
    [CompilerGeneratedAttribute]
private ReturnValues <ReturnValues>k__BackingField;
    public Expression ConditionalExpression { get; public set; }
    public ExpectedState ExpectedState { get; public set; }
    public Document Expected { get; public set; }
    public ReturnValues ReturnValues { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Expression get_ConditionalExpression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConditionalExpression(Expression value);
    [CompilerGeneratedAttribute]
public sealed virtual ExpectedState get_ExpectedState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExpectedState(ExpectedState value);
    [CompilerGeneratedAttribute]
public sealed virtual Document get_Expected();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expected(Document value);
    [CompilerGeneratedAttribute]
public ReturnValues get_ReturnValues();
    [CompilerGeneratedAttribute]
public void set_ReturnValues(ReturnValues value);
}
internal class Amazon.DynamoDBv2.DocumentModel.WriteRequestDocument : object {
    [CompilerGeneratedAttribute]
private WriteRequest <WriteRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private Document <Document>k__BackingField;
    public WriteRequest WriteRequest { get; public set; }
    public Document Document { get; public set; }
    [CompilerGeneratedAttribute]
public WriteRequest get_WriteRequest();
    [CompilerGeneratedAttribute]
public void set_WriteRequest(WriteRequest value);
    [CompilerGeneratedAttribute]
public Document get_Document();
    [CompilerGeneratedAttribute]
public void set_Document(Document value);
}
internal class Amazon.DynamoDBv2.DoubleConverterV1 : Converter`1<double> {
    protected virtual bool TryTo(double value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Double& result);
}
internal class Amazon.DynamoDBv2.DoubleConverterV2 : DoubleConverterV1 {
}
internal static class Amazon.DynamoDBv2.DynamoDBAsyncExecutor : object {
    public static void Execute(AsyncCall call, DynamoDBAsyncResult result);
    public static IAsyncResult BeginOperation(AsyncCall call, AsyncCallback callback, object state);
    public static void EndOperation(IAsyncResult result);
    public static T EndOperation(IAsyncResult result);
}
internal class Amazon.DynamoDBv2.DynamoDBAsyncResult : object {
    private ManualResetEvent _waitHandle;
    private bool _disposed;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private object <AsyncState>k__BackingField;
    [CompilerGeneratedAttribute]
private AsyncCallback <Callback>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <LastException>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Return>k__BackingField;
    public bool CompletedSynchronously { get; }
    public bool IsCompleted { get; private set; }
    public object AsyncState { get; private set; }
    public WaitHandle AsyncWaitHandle { get; }
    public AsyncCallback Callback { get; private set; }
    public Exception LastException { get; public set; }
    public object Return { get; public set; }
    public DynamoDBAsyncResult(AsyncCallback callback, object state);
    public sealed virtual bool get_CompletedSynchronously();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_AsyncState();
    [CompilerGeneratedAttribute]
private void set_AsyncState(object value);
    public sealed virtual WaitHandle get_AsyncWaitHandle();
    public void SignalWaitHandle();
    [CompilerGeneratedAttribute]
public AsyncCallback get_Callback();
    [CompilerGeneratedAttribute]
private void set_Callback(AsyncCallback value);
    [CompilerGeneratedAttribute]
public Exception get_LastException();
    [CompilerGeneratedAttribute]
public void set_LastException(Exception value);
    [CompilerGeneratedAttribute]
public object get_Return();
    [CompilerGeneratedAttribute]
public void set_Return(object value);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
public class Amazon.DynamoDBv2.DynamoDBEntryConversion : object {
    private Dictionary`2<Type, Converter> ConverterCache;
    private ConversionSchema OriginalConversion;
    private bool IsImmutable;
    [CompilerGeneratedAttribute]
private static DynamoDBEntryConversion <V1>k__BackingField;
    [CompilerGeneratedAttribute]
private static DynamoDBEntryConversion <V2>k__BackingField;
    public static DynamoDBEntryConversion V1 { get; private set; }
    public static DynamoDBEntryConversion V2 { get; private set; }
    internal static DynamoDBEntryConversion CurrentConversion { get; }
    private static DynamoDBEntryConversion();
    private DynamoDBEntryConversion(ConversionSchema schema, bool isImmutable);
    [CompilerGeneratedAttribute]
public static DynamoDBEntryConversion get_V1();
    [CompilerGeneratedAttribute]
private static void set_V1(DynamoDBEntryConversion value);
    [CompilerGeneratedAttribute]
public static DynamoDBEntryConversion get_V2();
    [CompilerGeneratedAttribute]
private static void set_V2(DynamoDBEntryConversion value);
    internal static DynamoDBEntryConversion GetConversion(ConversionSchema schema);
    internal static DynamoDBEntryConversion get_CurrentConversion();
    public DynamoDBEntry ConvertToEntry(TInput value);
    public bool TryConvertToEntry(TInput value, DynamoDBEntry& entry);
    public TOutput ConvertFromEntry(DynamoDBEntry entry);
    public bool TryConvertFromEntry(DynamoDBEntry entry, TOutput& output);
    internal DynamoDBEntryConversion Clone();
    internal bool HasConverter(Type type);
    internal void AddConverter(Converter converter);
    internal bool TryConvertToEntry(Type inputType, object value, DynamoDBEntry& entry);
    internal bool TryConvertFromEntry(Type outputType, DynamoDBEntry entry, Object& value);
    internal DynamoDBEntry ConvertToEntry(Type inputType, object value);
    internal object ConvertFromEntry(Type outputType, DynamoDBEntry entry);
    internal IEnumerable`1<DynamoDBEntry> ConvertToEntries(Type elementType, IEnumerable values);
    internal IEnumerable`1<DynamoDBEntry> ConvertToEntries(IEnumerable`1<T> values);
    internal IEnumerable`1<object> ConvertFromEntries(Type elementType, IEnumerable`1<DynamoDBEntry> entries);
    internal PrimitiveList ItemsToPrimitiveList(IEnumerable items);
    private void AddConverters(string suffix);
    private void AddConverter(Type type);
    private void SetV1Converters();
    private void SetV2Converters();
    private Converter GetConverter(Type type);
    private bool TryGetConverter(Type type, Converter& converter);
    private IEnumerable`1<Primitive> ToPrimitives(IEnumerable items, Type elementType);
}
internal class Amazon.DynamoDBv2.DynamoDBListConverter : CollectionConverter {
    public DynamoDBListConverter(IEnumerable`1<Type> memberTypes);
    public virtual bool TryTo(object value, DynamoDBList& l);
    public virtual bool TryFrom(DynamoDBList l, Type targetType, Object& result);
}
internal class Amazon.DynamoDBv2.GuidConverterV1 : Converter`1<Guid> {
    protected virtual bool TryTo(Guid value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Guid& result);
}
internal class Amazon.DynamoDBv2.GuidConverterV2 : GuidConverterV1 {
}
public interface Amazon.DynamoDBv2.IAmazonDynamoDB {
    public abstract virtual Task`1<BatchGetItemResponse> BatchGetItemAsync(BatchGetItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchWriteItemResponse> BatchWriteItemAsync(BatchWriteItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTableResponse> CreateTableAsync(CreateTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteItemResponse> DeleteItemAsync(DeleteItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTableResponse> DeleteTableAsync(DeleteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLimitsResponse> DescribeLimitsAsync(DescribeLimitsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTableResponse> DescribeTableAsync(DescribeTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetItemResponse> GetItemAsync(GetItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTablesResponse> ListTablesAsync(ListTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutItemResponse> PutItemAsync(PutItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<QueryResponse> QueryAsync(QueryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ScanResponse> ScanAsync(ScanRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateItemResponse> UpdateItemAsync(UpdateItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTableResponse> UpdateTableAsync(UpdateTableRequest request, CancellationToken cancellationToken);
}
public interface Amazon.DynamoDBv2.IAmazonDynamoDBStreams {
    public abstract virtual Task`1<DescribeStreamResponse> DescribeStreamAsync(DescribeStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetRecordsResponse> GetRecordsAsync(GetRecordsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetShardIteratorResponse> GetShardIteratorAsync(GetShardIteratorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStreamsResponse> ListStreamsAsync(ListStreamsRequest request, CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.IndexStatus : ConstantClass {
    public static IndexStatus ACTIVE;
    public static IndexStatus CREATING;
    public static IndexStatus DELETING;
    public static IndexStatus UPDATING;
    public IndexStatus(string value);
    private static IndexStatus();
    public static IndexStatus FindValue(string value);
    public static IndexStatus op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.Int16ConverterV1 : Converter`1<short> {
    protected virtual bool TryTo(short value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Int16& result);
}
internal class Amazon.DynamoDBv2.Int16ConverterV2 : Int16ConverterV1 {
}
internal class Amazon.DynamoDBv2.Int32ConverterV1 : Converter`1<int> {
    protected virtual bool TryTo(int value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Int32& result);
}
internal class Amazon.DynamoDBv2.Int32ConverterV2 : Int32ConverterV1 {
}
internal class Amazon.DynamoDBv2.Int64ConverterV1 : Converter`1<long> {
    protected virtual bool TryTo(long value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Int64& result);
}
internal class Amazon.DynamoDBv2.Int64ConverterV2 : Int64ConverterV1 {
}
public class Amazon.DynamoDBv2.Internal.DynamoDBRetryPolicy : DefaultRetryPolicy {
    public DynamoDBRetryPolicy(int maxRetries);
    public virtual void WaitBeforeRetry(IExecutionContext executionContext);
    private void pauseExponentially(int retries);
}
public class Amazon.DynamoDBv2.KeyType : ConstantClass {
    public static KeyType HASH;
    public static KeyType RANGE;
    public KeyType(string value);
    private static KeyType();
    public static KeyType FindValue(string value);
    public static KeyType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ListToSetPropertyConverter`1 : SetPropertyConverter`2<List`1<TElement>, TElement> {
}
internal class Amazon.DynamoDBv2.MemoryStreamConverterV1 : Converter`1<MemoryStream> {
    protected virtual bool TryTo(MemoryStream value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, MemoryStream& result);
}
internal class Amazon.DynamoDBv2.MemoryStreamConverterV2 : MemoryStreamConverterV1 {
}
public class Amazon.DynamoDBv2.Model.AttributeDefinition : object {
    private string _attributeName;
    private ScalarAttributeType _attributeType;
    public string AttributeName { get; public set; }
    public ScalarAttributeType AttributeType { get; public set; }
    public AttributeDefinition(string attributeName, ScalarAttributeType attributeType);
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public ScalarAttributeType get_AttributeType();
    public void set_AttributeType(ScalarAttributeType value);
    internal bool IsSetAttributeType();
}
public class Amazon.DynamoDBv2.Model.AttributeValue : object {
    private MemoryStream _b;
    private Nullable`1<bool> _bool;
    private List`1<MemoryStream> _bs;
    private List`1<AttributeValue> _l;
    private Dictionary`2<string, AttributeValue> _m;
    private string _n;
    private List`1<string> _ns;
    private Nullable`1<bool> _null;
    private string _s;
    private List`1<string> _ss;
    public MemoryStream B { get; public set; }
    public bool BOOL { get; public set; }
    public bool IsBOOLSet { get; public set; }
    public List`1<MemoryStream> BS { get; public set; }
    public List`1<AttributeValue> L { get; public set; }
    public bool IsLSet { get; public set; }
    public Dictionary`2<string, AttributeValue> M { get; public set; }
    public bool IsMSet { get; public set; }
    public string N { get; public set; }
    public List`1<string> NS { get; public set; }
    public bool NULL { get; public set; }
    public string S { get; public set; }
    public List`1<string> SS { get; public set; }
    public AttributeValue(string s);
    public AttributeValue(List`1<string> ss);
    public MemoryStream get_B();
    public void set_B(MemoryStream value);
    internal bool IsSetB();
    public bool get_BOOL();
    public void set_BOOL(bool value);
    public bool get_IsBOOLSet();
    public void set_IsBOOLSet(bool value);
    internal bool IsSetBOOL();
    public List`1<MemoryStream> get_BS();
    public void set_BS(List`1<MemoryStream> value);
    internal bool IsSetBS();
    public List`1<AttributeValue> get_L();
    public void set_L(List`1<AttributeValue> value);
    public bool get_IsLSet();
    public void set_IsLSet(bool value);
    internal bool IsSetL();
    public Dictionary`2<string, AttributeValue> get_M();
    public void set_M(Dictionary`2<string, AttributeValue> value);
    public bool get_IsMSet();
    public void set_IsMSet(bool value);
    internal bool IsSetM();
    public string get_N();
    public void set_N(string value);
    internal bool IsSetN();
    public List`1<string> get_NS();
    public void set_NS(List`1<string> value);
    internal bool IsSetNS();
    public bool get_NULL();
    public void set_NULL(bool value);
    internal bool IsSetNULL();
    public string get_S();
    public void set_S(string value);
    internal bool IsSetS();
    public List`1<string> get_SS();
    public void set_SS(List`1<string> value);
    internal bool IsSetSS();
}
public class Amazon.DynamoDBv2.Model.AttributeValueUpdate : object {
    private AttributeAction _action;
    private AttributeValue _value;
    public AttributeAction Action { get; public set; }
    public AttributeValue Value { get; public set; }
    public AttributeValueUpdate(AttributeValue value, AttributeAction action);
    public AttributeAction get_Action();
    public void set_Action(AttributeAction value);
    internal bool IsSetAction();
    public AttributeValue get_Value();
    public void set_Value(AttributeValue value);
    internal bool IsSetValue();
}
public class Amazon.DynamoDBv2.Model.BatchGetItemRequest : AmazonDynamoDBRequest {
    private Dictionary`2<string, KeysAndAttributes> _requestItems;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    public Dictionary`2<string, KeysAndAttributes> RequestItems { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public BatchGetItemRequest(Dictionary`2<string, KeysAndAttributes> requestItems);
    public BatchGetItemRequest(Dictionary`2<string, KeysAndAttributes> requestItems, ReturnConsumedCapacity returnConsumedCapacity);
    public Dictionary`2<string, KeysAndAttributes> get_RequestItems();
    public void set_RequestItems(Dictionary`2<string, KeysAndAttributes> value);
    internal bool IsSetRequestItems();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
}
public class Amazon.DynamoDBv2.Model.BatchGetItemResponse : BatchGetItemResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the BatchGetItemResult class are now available on the BatchGetItemResponse class. You should use the properties on BatchGetItemResponse instead of accessing them through BatchGetItemResult.")]
public BatchGetItemResult BatchGetItemResult { get; }
    public BatchGetItemResult get_BatchGetItemResult();
}
public class Amazon.DynamoDBv2.Model.BatchGetItemResult : AmazonWebServiceResponse {
    private List`1<ConsumedCapacity> _consumedCapacity;
    private Dictionary`2<string, List`1<Dictionary`2<string, AttributeValue>>> _responses;
    private Dictionary`2<string, KeysAndAttributes> _unprocessedKeys;
    public List`1<ConsumedCapacity> ConsumedCapacity { get; public set; }
    public Dictionary`2<string, List`1<Dictionary`2<string, AttributeValue>>> Responses { get; public set; }
    public Dictionary`2<string, KeysAndAttributes> UnprocessedKeys { get; public set; }
    public List`1<ConsumedCapacity> get_ConsumedCapacity();
    public void set_ConsumedCapacity(List`1<ConsumedCapacity> value);
    internal bool IsSetConsumedCapacity();
    public Dictionary`2<string, List`1<Dictionary`2<string, AttributeValue>>> get_Responses();
    public void set_Responses(Dictionary`2<string, List`1<Dictionary`2<string, AttributeValue>>> value);
    internal bool IsSetResponses();
    public Dictionary`2<string, KeysAndAttributes> get_UnprocessedKeys();
    public void set_UnprocessedKeys(Dictionary`2<string, KeysAndAttributes> value);
    internal bool IsSetUnprocessedKeys();
}
public class Amazon.DynamoDBv2.Model.BatchWriteItemRequest : AmazonDynamoDBRequest {
    private Dictionary`2<string, List`1<WriteRequest>> _requestItems;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private ReturnItemCollectionMetrics _returnItemCollectionMetrics;
    public Dictionary`2<string, List`1<WriteRequest>> RequestItems { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public ReturnItemCollectionMetrics ReturnItemCollectionMetrics { get; public set; }
    public BatchWriteItemRequest(Dictionary`2<string, List`1<WriteRequest>> requestItems);
    public Dictionary`2<string, List`1<WriteRequest>> get_RequestItems();
    public void set_RequestItems(Dictionary`2<string, List`1<WriteRequest>> value);
    internal bool IsSetRequestItems();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public ReturnItemCollectionMetrics get_ReturnItemCollectionMetrics();
    public void set_ReturnItemCollectionMetrics(ReturnItemCollectionMetrics value);
    internal bool IsSetReturnItemCollectionMetrics();
}
public class Amazon.DynamoDBv2.Model.BatchWriteItemResponse : BatchWriteItemResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the BatchWriteItemResult class are now available on the BatchWriteItemResponse class. You should use the properties on BatchWriteItemResponse instead of accessing them through BatchWriteItemResult.")]
public BatchWriteItemResult BatchWriteItemResult { get; }
    public BatchWriteItemResult get_BatchWriteItemResult();
}
public class Amazon.DynamoDBv2.Model.BatchWriteItemResult : AmazonWebServiceResponse {
    private List`1<ConsumedCapacity> _consumedCapacity;
    private Dictionary`2<string, List`1<ItemCollectionMetrics>> _itemCollectionMetrics;
    private Dictionary`2<string, List`1<WriteRequest>> _unprocessedItems;
    public List`1<ConsumedCapacity> ConsumedCapacity { get; public set; }
    public Dictionary`2<string, List`1<ItemCollectionMetrics>> ItemCollectionMetrics { get; public set; }
    public Dictionary`2<string, List`1<WriteRequest>> UnprocessedItems { get; public set; }
    public List`1<ConsumedCapacity> get_ConsumedCapacity();
    public void set_ConsumedCapacity(List`1<ConsumedCapacity> value);
    internal bool IsSetConsumedCapacity();
    public Dictionary`2<string, List`1<ItemCollectionMetrics>> get_ItemCollectionMetrics();
    public void set_ItemCollectionMetrics(Dictionary`2<string, List`1<ItemCollectionMetrics>> value);
    internal bool IsSetItemCollectionMetrics();
    public Dictionary`2<string, List`1<WriteRequest>> get_UnprocessedItems();
    public void set_UnprocessedItems(Dictionary`2<string, List`1<WriteRequest>> value);
    internal bool IsSetUnprocessedItems();
}
public class Amazon.DynamoDBv2.Model.Capacity : object {
    private Nullable`1<double> _capacityUnits;
    public double CapacityUnits { get; public set; }
    public double get_CapacityUnits();
    public void set_CapacityUnits(double value);
    internal bool IsSetCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.Condition : object {
    private List`1<AttributeValue> _attributeValueList;
    private ComparisonOperator _comparisonOperator;
    public List`1<AttributeValue> AttributeValueList { get; public set; }
    public ComparisonOperator ComparisonOperator { get; public set; }
    public List`1<AttributeValue> get_AttributeValueList();
    public void set_AttributeValueList(List`1<AttributeValue> value);
    internal bool IsSetAttributeValueList();
    public ComparisonOperator get_ComparisonOperator();
    public void set_ComparisonOperator(ComparisonOperator value);
    internal bool IsSetComparisonOperator();
}
public class Amazon.DynamoDBv2.Model.ConditionalCheckFailedException : AmazonDynamoDBException {
    public ConditionalCheckFailedException(string message);
    public ConditionalCheckFailedException(string message, Exception innerException);
    public ConditionalCheckFailedException(Exception innerException);
    public ConditionalCheckFailedException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ConditionalCheckFailedException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ConsumedCapacity : object {
    private Nullable`1<double> _capacityUnits;
    private Dictionary`2<string, Capacity> _globalSecondaryIndexes;
    private Dictionary`2<string, Capacity> _localSecondaryIndexes;
    private Capacity _table;
    private string _tableName;
    public double CapacityUnits { get; public set; }
    public Dictionary`2<string, Capacity> GlobalSecondaryIndexes { get; public set; }
    public Dictionary`2<string, Capacity> LocalSecondaryIndexes { get; public set; }
    public Capacity Table { get; public set; }
    public string TableName { get; public set; }
    public double get_CapacityUnits();
    public void set_CapacityUnits(double value);
    internal bool IsSetCapacityUnits();
    public Dictionary`2<string, Capacity> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(Dictionary`2<string, Capacity> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public Dictionary`2<string, Capacity> get_LocalSecondaryIndexes();
    public void set_LocalSecondaryIndexes(Dictionary`2<string, Capacity> value);
    internal bool IsSetLocalSecondaryIndexes();
    public Capacity get_Table();
    public void set_Table(Capacity value);
    internal bool IsSetTable();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.CreateGlobalSecondaryIndexAction : object {
    private string _indexName;
    private List`1<KeySchemaElement> _keySchema;
    private Projection _projection;
    private ProvisionedThroughput _provisionedThroughput;
    public string IndexName { get; public set; }
    public List`1<KeySchemaElement> KeySchema { get; public set; }
    public Projection Projection { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
}
public class Amazon.DynamoDBv2.Model.CreateTableRequest : AmazonDynamoDBRequest {
    private List`1<AttributeDefinition> _attributeDefinitions;
    private List`1<GlobalSecondaryIndex> _globalSecondaryIndexes;
    private List`1<KeySchemaElement> _keySchema;
    private List`1<LocalSecondaryIndex> _localSecondaryIndexes;
    private ProvisionedThroughput _provisionedThroughput;
    private StreamSpecification _streamSpecification;
    private string _tableName;
    public List`1<AttributeDefinition> AttributeDefinitions { get; public set; }
    public List`1<GlobalSecondaryIndex> GlobalSecondaryIndexes { get; public set; }
    public List`1<KeySchemaElement> KeySchema { get; public set; }
    public List`1<LocalSecondaryIndex> LocalSecondaryIndexes { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public StreamSpecification StreamSpecification { get; public set; }
    public string TableName { get; public set; }
    public CreateTableRequest(string tableName, List`1<KeySchemaElement> keySchema);
    public CreateTableRequest(string tableName, List`1<KeySchemaElement> keySchema, List`1<AttributeDefinition> attributeDefinitions, ProvisionedThroughput provisionedThroughput);
    public List`1<AttributeDefinition> get_AttributeDefinitions();
    public void set_AttributeDefinitions(List`1<AttributeDefinition> value);
    internal bool IsSetAttributeDefinitions();
    public List`1<GlobalSecondaryIndex> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(List`1<GlobalSecondaryIndex> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public List`1<LocalSecondaryIndex> get_LocalSecondaryIndexes();
    public void set_LocalSecondaryIndexes(List`1<LocalSecondaryIndex> value);
    internal bool IsSetLocalSecondaryIndexes();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
    public StreamSpecification get_StreamSpecification();
    public void set_StreamSpecification(StreamSpecification value);
    internal bool IsSetStreamSpecification();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.CreateTableResponse : CreateTableResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateTableResult class are now available on the CreateTableResponse class. You should use the properties on CreateTableResponse instead of accessing them through CreateTableResult.")]
public CreateTableResult CreateTableResult { get; }
    public CreateTableResult get_CreateTableResult();
}
public class Amazon.DynamoDBv2.Model.CreateTableResult : AmazonWebServiceResponse {
    private TableDescription _tableDescription;
    public TableDescription TableDescription { get; public set; }
    public TableDescription get_TableDescription();
    public void set_TableDescription(TableDescription value);
    internal bool IsSetTableDescription();
}
public class Amazon.DynamoDBv2.Model.DeleteGlobalSecondaryIndexAction : object {
    private string _indexName;
    public string IndexName { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
}
public class Amazon.DynamoDBv2.Model.DeleteItemRequest : AmazonDynamoDBRequest {
    private ConditionalOperator _conditionalOperator;
    private string _conditionExpression;
    private Dictionary`2<string, ExpectedAttributeValue> _expected;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private Dictionary`2<string, AttributeValue> _key;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private ReturnItemCollectionMetrics _returnItemCollectionMetrics;
    private ReturnValue _returnValues;
    private string _tableName;
    public ConditionalOperator ConditionalOperator { get; public set; }
    public string ConditionExpression { get; public set; }
    public Dictionary`2<string, ExpectedAttributeValue> Expected { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public ReturnItemCollectionMetrics ReturnItemCollectionMetrics { get; public set; }
    public ReturnValue ReturnValues { get; public set; }
    public string TableName { get; public set; }
    public DeleteItemRequest(string tableName, Dictionary`2<string, AttributeValue> key);
    public DeleteItemRequest(string tableName, Dictionary`2<string, AttributeValue> key, ReturnValue returnValues);
    public ConditionalOperator get_ConditionalOperator();
    public void set_ConditionalOperator(ConditionalOperator value);
    internal bool IsSetConditionalOperator();
    public string get_ConditionExpression();
    public void set_ConditionExpression(string value);
    internal bool IsSetConditionExpression();
    public Dictionary`2<string, ExpectedAttributeValue> get_Expected();
    public void set_Expected(Dictionary`2<string, ExpectedAttributeValue> value);
    internal bool IsSetExpected();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public ReturnItemCollectionMetrics get_ReturnItemCollectionMetrics();
    public void set_ReturnItemCollectionMetrics(ReturnItemCollectionMetrics value);
    internal bool IsSetReturnItemCollectionMetrics();
    public ReturnValue get_ReturnValues();
    public void set_ReturnValues(ReturnValue value);
    internal bool IsSetReturnValues();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DeleteItemResponse : DeleteItemResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteItemResult class are now available on the DeleteItemResponse class. You should use the properties on DeleteItemResponse instead of accessing them through DeleteItemResult.")]
public DeleteItemResult DeleteItemResult { get; }
    public DeleteItemResult get_DeleteItemResult();
}
public class Amazon.DynamoDBv2.Model.DeleteItemResult : AmazonWebServiceResponse {
    private Dictionary`2<string, AttributeValue> _attributes;
    private ConsumedCapacity _consumedCapacity;
    private ItemCollectionMetrics _itemCollectionMetrics;
    public Dictionary`2<string, AttributeValue> Attributes { get; public set; }
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public ItemCollectionMetrics ItemCollectionMetrics { get; public set; }
    public Dictionary`2<string, AttributeValue> get_Attributes();
    public void set_Attributes(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetAttributes();
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public ItemCollectionMetrics get_ItemCollectionMetrics();
    public void set_ItemCollectionMetrics(ItemCollectionMetrics value);
    internal bool IsSetItemCollectionMetrics();
}
public class Amazon.DynamoDBv2.Model.DeleteRequest : object {
    private Dictionary`2<string, AttributeValue> _key;
    public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public DeleteRequest(Dictionary`2<string, AttributeValue> key);
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
}
public class Amazon.DynamoDBv2.Model.DeleteTableRequest : AmazonDynamoDBRequest {
    private string _tableName;
    public string TableName { get; public set; }
    public DeleteTableRequest(string tableName);
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DeleteTableResponse : DeleteTableResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteTableResult class are now available on the DeleteTableResponse class. You should use the properties on DeleteTableResponse instead of accessing them through DeleteTableResult.")]
public DeleteTableResult DeleteTableResult { get; }
    public DeleteTableResult get_DeleteTableResult();
}
public class Amazon.DynamoDBv2.Model.DeleteTableResult : AmazonWebServiceResponse {
    private TableDescription _tableDescription;
    public TableDescription TableDescription { get; public set; }
    public TableDescription get_TableDescription();
    public void set_TableDescription(TableDescription value);
    internal bool IsSetTableDescription();
}
public class Amazon.DynamoDBv2.Model.DescribeLimitsRequest : AmazonDynamoDBRequest {
}
public class Amazon.DynamoDBv2.Model.DescribeLimitsResponse : DescribeLimitsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeLimitsResult class are now available on the DescribeLimitsResponse class. You should use the properties on DescribeLimitsResponse instead of accessing them through DescribeLimitsResult.")]
public DescribeLimitsResult DescribeLimitsResult { get; }
    public DescribeLimitsResult get_DescribeLimitsResult();
}
public class Amazon.DynamoDBv2.Model.DescribeLimitsResult : AmazonWebServiceResponse {
    private Nullable`1<long> _accountMaxReadCapacityUnits;
    private Nullable`1<long> _accountMaxWriteCapacityUnits;
    private Nullable`1<long> _tableMaxReadCapacityUnits;
    private Nullable`1<long> _tableMaxWriteCapacityUnits;
    public long AccountMaxReadCapacityUnits { get; public set; }
    public long AccountMaxWriteCapacityUnits { get; public set; }
    public long TableMaxReadCapacityUnits { get; public set; }
    public long TableMaxWriteCapacityUnits { get; public set; }
    public long get_AccountMaxReadCapacityUnits();
    public void set_AccountMaxReadCapacityUnits(long value);
    internal bool IsSetAccountMaxReadCapacityUnits();
    public long get_AccountMaxWriteCapacityUnits();
    public void set_AccountMaxWriteCapacityUnits(long value);
    internal bool IsSetAccountMaxWriteCapacityUnits();
    public long get_TableMaxReadCapacityUnits();
    public void set_TableMaxReadCapacityUnits(long value);
    internal bool IsSetTableMaxReadCapacityUnits();
    public long get_TableMaxWriteCapacityUnits();
    public void set_TableMaxWriteCapacityUnits(long value);
    internal bool IsSetTableMaxWriteCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.DescribeStreamRequest : AmazonDynamoDBStreamsRequest {
    private string _exclusiveStartShardId;
    private Nullable`1<int> _limit;
    private string _streamArn;
    public string ExclusiveStartShardId { get; public set; }
    public int Limit { get; public set; }
    public string StreamArn { get; public set; }
    public string get_ExclusiveStartShardId();
    public void set_ExclusiveStartShardId(string value);
    internal bool IsSetExclusiveStartShardId();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
}
public class Amazon.DynamoDBv2.Model.DescribeStreamResponse : DescribeStreamResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeStreamResult class are now available on the DescribeStreamResponse class. You should use the properties on DescribeStreamResponse instead of accessing them through DescribeStreamResult.")]
public DescribeStreamResult DescribeStreamResult { get; }
    public DescribeStreamResult get_DescribeStreamResult();
}
public class Amazon.DynamoDBv2.Model.DescribeStreamResult : AmazonWebServiceResponse {
    private StreamDescription _streamDescription;
    public StreamDescription StreamDescription { get; public set; }
    public StreamDescription get_StreamDescription();
    public void set_StreamDescription(StreamDescription value);
    internal bool IsSetStreamDescription();
}
public class Amazon.DynamoDBv2.Model.DescribeTableRequest : AmazonDynamoDBRequest {
    private string _tableName;
    public string TableName { get; public set; }
    public DescribeTableRequest(string tableName);
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeTableResponse : DescribeTableResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeTableResult class are now available on the DescribeTableResponse class. You should use the properties on DescribeTableResponse instead of accessing them through DescribeTableResult.")]
public DescribeTableResult DescribeTableResult { get; }
    public DescribeTableResult get_DescribeTableResult();
}
public class Amazon.DynamoDBv2.Model.DescribeTableResult : AmazonWebServiceResponse {
    private TableDescription _table;
    public TableDescription Table { get; public set; }
    public TableDescription get_Table();
    public void set_Table(TableDescription value);
    internal bool IsSetTable();
}
public class Amazon.DynamoDBv2.Model.ExpectedAttributeValue : object {
    private List`1<AttributeValue> _attributeValueList;
    private ComparisonOperator _comparisonOperator;
    private Nullable`1<bool> _exists;
    private AttributeValue _value;
    public List`1<AttributeValue> AttributeValueList { get; public set; }
    public ComparisonOperator ComparisonOperator { get; public set; }
    public bool Exists { get; public set; }
    public AttributeValue Value { get; public set; }
    public ExpectedAttributeValue(AttributeValue value);
    public ExpectedAttributeValue(bool exists);
    public List`1<AttributeValue> get_AttributeValueList();
    public void set_AttributeValueList(List`1<AttributeValue> value);
    internal bool IsSetAttributeValueList();
    public ComparisonOperator get_ComparisonOperator();
    public void set_ComparisonOperator(ComparisonOperator value);
    internal bool IsSetComparisonOperator();
    public bool get_Exists();
    public void set_Exists(bool value);
    internal bool IsSetExists();
    public AttributeValue get_Value();
    public void set_Value(AttributeValue value);
    internal bool IsSetValue();
}
public class Amazon.DynamoDBv2.Model.ExpiredIteratorException : AmazonDynamoDBException {
    public ExpiredIteratorException(string message);
    public ExpiredIteratorException(string message, Exception innerException);
    public ExpiredIteratorException(Exception innerException);
    public ExpiredIteratorException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ExpiredIteratorException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.GetItemRequest : AmazonDynamoDBRequest {
    private List`1<string> _attributesToGet;
    private Nullable`1<bool> _consistentRead;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _key;
    private string _projectionExpression;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private string _tableName;
    public List`1<string> AttributesToGet { get; public set; }
    public bool ConsistentRead { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public string ProjectionExpression { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public string TableName { get; public set; }
    public GetItemRequest(string tableName, Dictionary`2<string, AttributeValue> key);
    public GetItemRequest(string tableName, Dictionary`2<string, AttributeValue> key, bool consistentRead);
    public List`1<string> get_AttributesToGet();
    public void set_AttributesToGet(List`1<string> value);
    internal bool IsSetAttributesToGet();
    public bool get_ConsistentRead();
    public void set_ConsistentRead(bool value);
    internal bool IsSetConsistentRead();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
    public string get_ProjectionExpression();
    public void set_ProjectionExpression(string value);
    internal bool IsSetProjectionExpression();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.GetItemResponse : GetItemResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetItemResult class are now available on the GetItemResponse class. You should use the properties on GetItemResponse instead of accessing them through GetItemResult.")]
public GetItemResult GetItemResult { get; }
    public GetItemResult get_GetItemResult();
}
public class Amazon.DynamoDBv2.Model.GetItemResult : AmazonWebServiceResponse {
    private ConsumedCapacity _consumedCapacity;
    private Dictionary`2<string, AttributeValue> _item;
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public bool IsItemSet { get; public set; }
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    public bool get_IsItemSet();
    public void set_IsItemSet(bool value);
    internal bool IsSetItem();
}
public class Amazon.DynamoDBv2.Model.GetRecordsRequest : AmazonDynamoDBStreamsRequest {
    private Nullable`1<int> _limit;
    private string _shardIterator;
    public int Limit { get; public set; }
    public string ShardIterator { get; public set; }
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_ShardIterator();
    public void set_ShardIterator(string value);
    internal bool IsSetShardIterator();
}
public class Amazon.DynamoDBv2.Model.GetRecordsResponse : GetRecordsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetRecordsResult class are now available on the GetRecordsResponse class. You should use the properties on GetRecordsResponse instead of accessing them through GetRecordsResult.")]
public GetRecordsResult GetRecordsResult { get; }
    public GetRecordsResult get_GetRecordsResult();
}
public class Amazon.DynamoDBv2.Model.GetRecordsResult : AmazonWebServiceResponse {
    private string _nextShardIterator;
    private List`1<Record> _records;
    public string NextShardIterator { get; public set; }
    public List`1<Record> Records { get; public set; }
    public string get_NextShardIterator();
    public void set_NextShardIterator(string value);
    internal bool IsSetNextShardIterator();
    public List`1<Record> get_Records();
    public void set_Records(List`1<Record> value);
    internal bool IsSetRecords();
}
public class Amazon.DynamoDBv2.Model.GetShardIteratorRequest : AmazonDynamoDBStreamsRequest {
    private string _sequenceNumber;
    private string _shardId;
    private ShardIteratorType _shardIteratorType;
    private string _streamArn;
    public string SequenceNumber { get; public set; }
    public string ShardId { get; public set; }
    public ShardIteratorType ShardIteratorType { get; public set; }
    public string StreamArn { get; public set; }
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
    public ShardIteratorType get_ShardIteratorType();
    public void set_ShardIteratorType(ShardIteratorType value);
    internal bool IsSetShardIteratorType();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
}
public class Amazon.DynamoDBv2.Model.GetShardIteratorResponse : GetShardIteratorResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetShardIteratorResult class are now available on the GetShardIteratorResponse class. You should use the properties on GetShardIteratorResponse instead of accessing them through GetShardIteratorResult.")]
public GetShardIteratorResult GetShardIteratorResult { get; }
    public GetShardIteratorResult get_GetShardIteratorResult();
}
public class Amazon.DynamoDBv2.Model.GetShardIteratorResult : AmazonWebServiceResponse {
    private string _shardIterator;
    public string ShardIterator { get; public set; }
    public string get_ShardIterator();
    public void set_ShardIterator(string value);
    internal bool IsSetShardIterator();
}
public class Amazon.DynamoDBv2.Model.GlobalSecondaryIndex : object {
    private string _indexName;
    private List`1<KeySchemaElement> _keySchema;
    private Projection _projection;
    private ProvisionedThroughput _provisionedThroughput;
    public string IndexName { get; public set; }
    public List`1<KeySchemaElement> KeySchema { get; public set; }
    public Projection Projection { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
}
public class Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription : object {
    private Nullable`1<bool> _backfilling;
    private string _indexArn;
    private string _indexName;
    private Nullable`1<long> _indexSizeBytes;
    private IndexStatus _indexStatus;
    private Nullable`1<long> _itemCount;
    private List`1<KeySchemaElement> _keySchema;
    private Projection _projection;
    private ProvisionedThroughputDescription _provisionedThroughput;
    public bool Backfilling { get; public set; }
    public string IndexArn { get; public set; }
    public string IndexName { get; public set; }
    public long IndexSizeBytes { get; public set; }
    public IndexStatus IndexStatus { get; public set; }
    public long ItemCount { get; public set; }
    public List`1<KeySchemaElement> KeySchema { get; public set; }
    public Projection Projection { get; public set; }
    public ProvisionedThroughputDescription ProvisionedThroughput { get; public set; }
    public bool get_Backfilling();
    public void set_Backfilling(bool value);
    internal bool IsSetBackfilling();
    public string get_IndexArn();
    public void set_IndexArn(string value);
    internal bool IsSetIndexArn();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public long get_IndexSizeBytes();
    public void set_IndexSizeBytes(long value);
    internal bool IsSetIndexSizeBytes();
    public IndexStatus get_IndexStatus();
    public void set_IndexStatus(IndexStatus value);
    internal bool IsSetIndexStatus();
    public long get_ItemCount();
    public void set_ItemCount(long value);
    internal bool IsSetItemCount();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
    public ProvisionedThroughputDescription get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughputDescription value);
    internal bool IsSetProvisionedThroughput();
}
public class Amazon.DynamoDBv2.Model.GlobalSecondaryIndexUpdate : object {
    private CreateGlobalSecondaryIndexAction _create;
    private DeleteGlobalSecondaryIndexAction _delete;
    private UpdateGlobalSecondaryIndexAction _update;
    public CreateGlobalSecondaryIndexAction Create { get; public set; }
    public DeleteGlobalSecondaryIndexAction Delete { get; public set; }
    public UpdateGlobalSecondaryIndexAction Update { get; public set; }
    public CreateGlobalSecondaryIndexAction get_Create();
    public void set_Create(CreateGlobalSecondaryIndexAction value);
    internal bool IsSetCreate();
    public DeleteGlobalSecondaryIndexAction get_Delete();
    public void set_Delete(DeleteGlobalSecondaryIndexAction value);
    internal bool IsSetDelete();
    public UpdateGlobalSecondaryIndexAction get_Update();
    public void set_Update(UpdateGlobalSecondaryIndexAction value);
    internal bool IsSetUpdate();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeDefinitionMarshaller : object {
    public static AttributeDefinitionMarshaller Instance;
    private static AttributeDefinitionMarshaller();
    public sealed virtual void Marshall(AttributeDefinition requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeDefinitionUnmarshaller : object {
    private static AttributeDefinitionUnmarshaller _instance;
    public static AttributeDefinitionUnmarshaller Instance { get; }
    private static AttributeDefinitionUnmarshaller();
    private sealed virtual override AttributeDefinition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.AttributeDefinition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AttributeDefinition Unmarshall(JsonUnmarshallerContext context);
    public static AttributeDefinitionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeValueMarshaller : object {
    public static AttributeValueMarshaller Instance;
    private static AttributeValueMarshaller();
    public sealed virtual void Marshall(AttributeValue requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeValueUnmarshaller : object {
    private static AttributeValueUnmarshaller _instance;
    public static AttributeValueUnmarshaller Instance { get; }
    private static AttributeValueUnmarshaller();
    private sealed virtual override AttributeValue Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.AttributeValue,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AttributeValue Unmarshall(JsonUnmarshallerContext context);
    public static AttributeValueUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeValueUpdateMarshaller : object {
    public static AttributeValueUpdateMarshaller Instance;
    private static AttributeValueUpdateMarshaller();
    public sealed virtual void Marshall(AttributeValueUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchGetItemRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetItemRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchGetItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetItemResponseUnmarshaller _instance;
    public static BatchGetItemResponseUnmarshaller Instance { get; }
    private static BatchGetItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetItemResponseUnmarshaller GetInstance();
    public static BatchGetItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchWriteItemRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchWriteItemRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchWriteItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchWriteItemResponseUnmarshaller _instance;
    public static BatchWriteItemResponseUnmarshaller Instance { get; }
    private static BatchWriteItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchWriteItemResponseUnmarshaller GetInstance();
    public static BatchWriteItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CapacityUnmarshaller : object {
    private static CapacityUnmarshaller _instance;
    public static CapacityUnmarshaller Instance { get; }
    private static CapacityUnmarshaller();
    private sealed virtual override Capacity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Capacity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Capacity Unmarshall(JsonUnmarshallerContext context);
    public static CapacityUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ConditionMarshaller : object {
    public static ConditionMarshaller Instance;
    private static ConditionMarshaller();
    public sealed virtual void Marshall(Condition requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ConsumedCapacityUnmarshaller : object {
    private static ConsumedCapacityUnmarshaller _instance;
    public static ConsumedCapacityUnmarshaller Instance { get; }
    private static ConsumedCapacityUnmarshaller();
    private sealed virtual override ConsumedCapacity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ConsumedCapacity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConsumedCapacity Unmarshall(JsonUnmarshallerContext context);
    public static ConsumedCapacityUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateGlobalSecondaryIndexActionMarshaller : object {
    public static CreateGlobalSecondaryIndexActionMarshaller Instance;
    private static CreateGlobalSecondaryIndexActionMarshaller();
    public sealed virtual void Marshall(CreateGlobalSecondaryIndexAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateTableRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTableRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTableResponseUnmarshaller _instance;
    public static CreateTableResponseUnmarshaller Instance { get; }
    private static CreateTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTableResponseUnmarshaller GetInstance();
    public static CreateTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteGlobalSecondaryIndexActionMarshaller : object {
    public static DeleteGlobalSecondaryIndexActionMarshaller Instance;
    private static DeleteGlobalSecondaryIndexActionMarshaller();
    public sealed virtual void Marshall(DeleteGlobalSecondaryIndexAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteItemRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteItemRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteItemResponseUnmarshaller _instance;
    public static DeleteItemResponseUnmarshaller Instance { get; }
    private static DeleteItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteItemResponseUnmarshaller GetInstance();
    public static DeleteItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteRequestMarshaller : object {
    public static DeleteRequestMarshaller Instance;
    private static DeleteRequestMarshaller();
    public sealed virtual void Marshall(DeleteRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteRequestUnmarshaller : object {
    private static DeleteRequestUnmarshaller _instance;
    public static DeleteRequestUnmarshaller Instance { get; }
    private static DeleteRequestUnmarshaller();
    private sealed virtual override DeleteRequest Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.DeleteRequest,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteRequest Unmarshall(JsonUnmarshallerContext context);
    public static DeleteRequestUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteTableRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTableRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTableResponseUnmarshaller _instance;
    public static DeleteTableResponseUnmarshaller Instance { get; }
    private static DeleteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTableResponseUnmarshaller GetInstance();
    public static DeleteTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeLimitsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLimitsRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeLimitsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeLimitsResponseUnmarshaller _instance;
    public static DescribeLimitsResponseUnmarshaller Instance { get; }
    private static DescribeLimitsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLimitsResponseUnmarshaller GetInstance();
    public static DescribeLimitsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeStreamRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeStreamRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeStreamResponseUnmarshaller _instance;
    public static DescribeStreamResponseUnmarshaller Instance { get; }
    private static DescribeStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeStreamResponseUnmarshaller GetInstance();
    public static DescribeStreamResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTableRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTableResponseUnmarshaller _instance;
    public static DescribeTableResponseUnmarshaller Instance { get; }
    private static DescribeTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTableResponseUnmarshaller GetInstance();
    public static DescribeTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExpectedAttributeValueMarshaller : object {
    public static ExpectedAttributeValueMarshaller Instance;
    private static ExpectedAttributeValueMarshaller();
    public sealed virtual void Marshall(ExpectedAttributeValue requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetItemRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetItemRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetItemResponseUnmarshaller _instance;
    public static GetItemResponseUnmarshaller Instance { get; }
    private static GetItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetItemResponseUnmarshaller GetInstance();
    public static GetItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetRecordsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRecordsRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetRecordsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRecordsResponseUnmarshaller _instance;
    public static GetRecordsResponseUnmarshaller Instance { get; }
    private static GetRecordsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRecordsResponseUnmarshaller GetInstance();
    public static GetRecordsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetShardIteratorRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetShardIteratorRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetShardIteratorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetShardIteratorResponseUnmarshaller _instance;
    public static GetShardIteratorResponseUnmarshaller Instance { get; }
    private static GetShardIteratorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetShardIteratorResponseUnmarshaller GetInstance();
    public static GetShardIteratorResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexDescriptionUnmarshaller : object {
    private static GlobalSecondaryIndexDescriptionUnmarshaller _instance;
    public static GlobalSecondaryIndexDescriptionUnmarshaller Instance { get; }
    private static GlobalSecondaryIndexDescriptionUnmarshaller();
    private sealed virtual override GlobalSecondaryIndexDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalSecondaryIndexDescription Unmarshall(JsonUnmarshallerContext context);
    public static GlobalSecondaryIndexDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexMarshaller : object {
    public static GlobalSecondaryIndexMarshaller Instance;
    private static GlobalSecondaryIndexMarshaller();
    public sealed virtual void Marshall(GlobalSecondaryIndex requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexUpdateMarshaller : object {
    public static GlobalSecondaryIndexUpdateMarshaller Instance;
    private static GlobalSecondaryIndexUpdateMarshaller();
    public sealed virtual void Marshall(GlobalSecondaryIndexUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ItemCollectionMetricsUnmarshaller : object {
    private static ItemCollectionMetricsUnmarshaller _instance;
    public static ItemCollectionMetricsUnmarshaller Instance { get; }
    private static ItemCollectionMetricsUnmarshaller();
    private sealed virtual override ItemCollectionMetrics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ItemCollectionMetrics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ItemCollectionMetrics Unmarshall(JsonUnmarshallerContext context);
    public static ItemCollectionMetricsUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeysAndAttributesMarshaller : object {
    public static KeysAndAttributesMarshaller Instance;
    private static KeysAndAttributesMarshaller();
    public sealed virtual void Marshall(KeysAndAttributes requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeysAndAttributesUnmarshaller : object {
    private static KeysAndAttributesUnmarshaller _instance;
    public static KeysAndAttributesUnmarshaller Instance { get; }
    private static KeysAndAttributesUnmarshaller();
    private sealed virtual override KeysAndAttributes Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.KeysAndAttributes,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeysAndAttributes Unmarshall(JsonUnmarshallerContext context);
    public static KeysAndAttributesUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeySchemaElementMarshaller : object {
    public static KeySchemaElementMarshaller Instance;
    private static KeySchemaElementMarshaller();
    public sealed virtual void Marshall(KeySchemaElement requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeySchemaElementUnmarshaller : object {
    private static KeySchemaElementUnmarshaller _instance;
    public static KeySchemaElementUnmarshaller Instance { get; }
    private static KeySchemaElementUnmarshaller();
    private sealed virtual override KeySchemaElement Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.KeySchemaElement,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeySchemaElement Unmarshall(JsonUnmarshallerContext context);
    public static KeySchemaElementUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListStreamsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListStreamsRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListStreamsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListStreamsResponseUnmarshaller _instance;
    public static ListStreamsResponseUnmarshaller Instance { get; }
    private static ListStreamsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListStreamsResponseUnmarshaller GetInstance();
    public static ListStreamsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTablesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTablesRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTablesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTablesResponseUnmarshaller _instance;
    public static ListTablesResponseUnmarshaller Instance { get; }
    private static ListTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTablesResponseUnmarshaller GetInstance();
    public static ListTablesResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.LocalSecondaryIndexDescriptionUnmarshaller : object {
    private static LocalSecondaryIndexDescriptionUnmarshaller _instance;
    public static LocalSecondaryIndexDescriptionUnmarshaller Instance { get; }
    private static LocalSecondaryIndexDescriptionUnmarshaller();
    private sealed virtual override LocalSecondaryIndexDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LocalSecondaryIndexDescription Unmarshall(JsonUnmarshallerContext context);
    public static LocalSecondaryIndexDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.LocalSecondaryIndexMarshaller : object {
    public static LocalSecondaryIndexMarshaller Instance;
    private static LocalSecondaryIndexMarshaller();
    public sealed virtual void Marshall(LocalSecondaryIndex requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProjectionMarshaller : object {
    public static ProjectionMarshaller Instance;
    private static ProjectionMarshaller();
    public sealed virtual void Marshall(Projection requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProjectionUnmarshaller : object {
    private static ProjectionUnmarshaller _instance;
    public static ProjectionUnmarshaller Instance { get; }
    private static ProjectionUnmarshaller();
    private sealed virtual override Projection Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Projection,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Projection Unmarshall(JsonUnmarshallerContext context);
    public static ProjectionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputDescriptionUnmarshaller : object {
    private static ProvisionedThroughputDescriptionUnmarshaller _instance;
    public static ProvisionedThroughputDescriptionUnmarshaller Instance { get; }
    private static ProvisionedThroughputDescriptionUnmarshaller();
    private sealed virtual override ProvisionedThroughputDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProvisionedThroughputDescription Unmarshall(JsonUnmarshallerContext context);
    public static ProvisionedThroughputDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputMarshaller : object {
    public static ProvisionedThroughputMarshaller Instance;
    private static ProvisionedThroughputMarshaller();
    public sealed virtual void Marshall(ProvisionedThroughput requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutItemRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutItemRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutItemResponseUnmarshaller _instance;
    public static PutItemResponseUnmarshaller Instance { get; }
    private static PutItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutItemResponseUnmarshaller GetInstance();
    public static PutItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutRequestMarshaller : object {
    public static PutRequestMarshaller Instance;
    private static PutRequestMarshaller();
    public sealed virtual void Marshall(PutRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutRequestUnmarshaller : object {
    private static PutRequestUnmarshaller _instance;
    public static PutRequestUnmarshaller Instance { get; }
    private static PutRequestUnmarshaller();
    private sealed virtual override PutRequest Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.PutRequest,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PutRequest Unmarshall(JsonUnmarshallerContext context);
    public static PutRequestUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.QueryRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(QueryRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.QueryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static QueryResponseUnmarshaller _instance;
    public static QueryResponseUnmarshaller Instance { get; }
    private static QueryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static QueryResponseUnmarshaller GetInstance();
    public static QueryResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.RecordUnmarshaller : object {
    private static RecordUnmarshaller _instance;
    public static RecordUnmarshaller Instance { get; }
    private static RecordUnmarshaller();
    private sealed virtual override Record Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Record,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Record Unmarshall(JsonUnmarshallerContext context);
    public static RecordUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ScanRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ScanRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ScanResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ScanResponseUnmarshaller _instance;
    public static ScanResponseUnmarshaller Instance { get; }
    private static ScanResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ScanResponseUnmarshaller GetInstance();
    public static ScanResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.SequenceNumberRangeUnmarshaller : object {
    private static SequenceNumberRangeUnmarshaller _instance;
    public static SequenceNumberRangeUnmarshaller Instance { get; }
    private static SequenceNumberRangeUnmarshaller();
    private sealed virtual override SequenceNumberRange Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.SequenceNumberRange,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SequenceNumberRange Unmarshall(JsonUnmarshallerContext context);
    public static SequenceNumberRangeUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ShardUnmarshaller : object {
    private static ShardUnmarshaller _instance;
    public static ShardUnmarshaller Instance { get; }
    private static ShardUnmarshaller();
    private sealed virtual override Shard Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Shard,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Shard Unmarshall(JsonUnmarshallerContext context);
    public static ShardUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.StreamDescriptionUnmarshaller : object {
    private static StreamDescriptionUnmarshaller _instance;
    public static StreamDescriptionUnmarshaller Instance { get; }
    private static StreamDescriptionUnmarshaller();
    private sealed virtual override StreamDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.StreamDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamDescription Unmarshall(JsonUnmarshallerContext context);
    public static StreamDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.StreamRecordUnmarshaller : object {
    private static StreamRecordUnmarshaller _instance;
    public static StreamRecordUnmarshaller Instance { get; }
    private static StreamRecordUnmarshaller();
    private sealed virtual override StreamRecord Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.StreamRecord,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamRecord Unmarshall(JsonUnmarshallerContext context);
    public static StreamRecordUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.StreamSpecificationMarshaller : object {
    public static StreamSpecificationMarshaller Instance;
    private static StreamSpecificationMarshaller();
    public sealed virtual void Marshall(StreamSpecification requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.StreamSpecificationUnmarshaller : object {
    private static StreamSpecificationUnmarshaller _instance;
    public static StreamSpecificationUnmarshaller Instance { get; }
    private static StreamSpecificationUnmarshaller();
    private sealed virtual override StreamSpecification Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.StreamSpecification,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamSpecification Unmarshall(JsonUnmarshallerContext context);
    public static StreamSpecificationUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.StreamSummaryUnmarshaller : object {
    private static StreamSummaryUnmarshaller _instance;
    public static StreamSummaryUnmarshaller Instance { get; }
    private static StreamSummaryUnmarshaller();
    private sealed virtual override StreamSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.StreamSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamSummary Unmarshall(JsonUnmarshallerContext context);
    public static StreamSummaryUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableDescriptionUnmarshaller : object {
    private static TableDescriptionUnmarshaller _instance;
    public static TableDescriptionUnmarshaller Instance { get; }
    private static TableDescriptionUnmarshaller();
    private sealed virtual override TableDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.TableDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableDescription Unmarshall(JsonUnmarshallerContext context);
    public static TableDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateGlobalSecondaryIndexActionMarshaller : object {
    public static UpdateGlobalSecondaryIndexActionMarshaller Instance;
    private static UpdateGlobalSecondaryIndexActionMarshaller();
    public sealed virtual void Marshall(UpdateGlobalSecondaryIndexAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateItemRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateItemRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateItemResponseUnmarshaller _instance;
    public static UpdateItemResponseUnmarshaller Instance { get; }
    private static UpdateItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateItemResponseUnmarshaller GetInstance();
    public static UpdateItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateTableRequest publicRequest);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateTableResponseUnmarshaller _instance;
    public static UpdateTableResponseUnmarshaller Instance { get; }
    private static UpdateTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateTableResponseUnmarshaller GetInstance();
    public static UpdateTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.WriteRequestMarshaller : object {
    public static WriteRequestMarshaller Instance;
    private static WriteRequestMarshaller();
    public sealed virtual void Marshall(WriteRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.WriteRequestUnmarshaller : object {
    private static WriteRequestUnmarshaller _instance;
    public static WriteRequestUnmarshaller Instance { get; }
    private static WriteRequestUnmarshaller();
    private sealed virtual override WriteRequest Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.WriteRequest,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual WriteRequest Unmarshall(JsonUnmarshallerContext context);
    public static WriteRequestUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.InternalServerErrorException : AmazonDynamoDBException {
    public InternalServerErrorException(string message);
    public InternalServerErrorException(string message, Exception innerException);
    public InternalServerErrorException(Exception innerException);
    public InternalServerErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InternalServerErrorException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ItemCollectionMetrics : object {
    private Dictionary`2<string, AttributeValue> _itemCollectionKey;
    private List`1<double> _sizeEstimateRangeGB;
    public Dictionary`2<string, AttributeValue> ItemCollectionKey { get; public set; }
    public List`1<double> SizeEstimateRangeGB { get; public set; }
    public Dictionary`2<string, AttributeValue> get_ItemCollectionKey();
    public void set_ItemCollectionKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItemCollectionKey();
    public List`1<double> get_SizeEstimateRangeGB();
    public void set_SizeEstimateRangeGB(List`1<double> value);
    internal bool IsSetSizeEstimateRangeGB();
}
public class Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException : AmazonDynamoDBException {
    public ItemCollectionSizeLimitExceededException(string message);
    public ItemCollectionSizeLimitExceededException(string message, Exception innerException);
    public ItemCollectionSizeLimitExceededException(Exception innerException);
    public ItemCollectionSizeLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ItemCollectionSizeLimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.KeysAndAttributes : object {
    private List`1<string> _attributesToGet;
    private Nullable`1<bool> _consistentRead;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private List`1<Dictionary`2<string, AttributeValue>> _keys;
    private string _projectionExpression;
    public List`1<string> AttributesToGet { get; public set; }
    public bool ConsistentRead { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public List`1<Dictionary`2<string, AttributeValue>> Keys { get; public set; }
    public string ProjectionExpression { get; public set; }
    public List`1<string> get_AttributesToGet();
    public void set_AttributesToGet(List`1<string> value);
    internal bool IsSetAttributesToGet();
    public bool get_ConsistentRead();
    public void set_ConsistentRead(bool value);
    internal bool IsSetConsistentRead();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public List`1<Dictionary`2<string, AttributeValue>> get_Keys();
    public void set_Keys(List`1<Dictionary`2<string, AttributeValue>> value);
    internal bool IsSetKeys();
    public string get_ProjectionExpression();
    public void set_ProjectionExpression(string value);
    internal bool IsSetProjectionExpression();
}
public class Amazon.DynamoDBv2.Model.KeySchemaElement : object {
    private string _attributeName;
    private KeyType _keyType;
    public string AttributeName { get; public set; }
    public KeyType KeyType { get; public set; }
    public KeySchemaElement(string attributeName, KeyType keyType);
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public KeyType get_KeyType();
    public void set_KeyType(KeyType value);
    internal bool IsSetKeyType();
}
public class Amazon.DynamoDBv2.Model.LimitExceededException : AmazonDynamoDBException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ListStreamsRequest : AmazonDynamoDBStreamsRequest {
    private string _exclusiveStartStreamArn;
    private Nullable`1<int> _limit;
    private string _tableName;
    public string ExclusiveStartStreamArn { get; public set; }
    public int Limit { get; public set; }
    public string TableName { get; public set; }
    public string get_ExclusiveStartStreamArn();
    public void set_ExclusiveStartStreamArn(string value);
    internal bool IsSetExclusiveStartStreamArn();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.ListStreamsResponse : ListStreamsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListStreamsResult class are now available on the ListStreamsResponse class. You should use the properties on ListStreamsResponse instead of accessing them through ListStreamsResult.")]
public ListStreamsResult ListStreamsResult { get; }
    public ListStreamsResult get_ListStreamsResult();
}
public class Amazon.DynamoDBv2.Model.ListStreamsResult : AmazonWebServiceResponse {
    private string _lastEvaluatedStreamArn;
    private List`1<StreamSummary> _streams;
    public string LastEvaluatedStreamArn { get; public set; }
    public List`1<StreamSummary> Streams { get; public set; }
    public string get_LastEvaluatedStreamArn();
    public void set_LastEvaluatedStreamArn(string value);
    internal bool IsSetLastEvaluatedStreamArn();
    public List`1<StreamSummary> get_Streams();
    public void set_Streams(List`1<StreamSummary> value);
    internal bool IsSetStreams();
}
public class Amazon.DynamoDBv2.Model.ListTablesRequest : AmazonDynamoDBRequest {
    private string _exclusiveStartTableName;
    private Nullable`1<int> _limit;
    public string ExclusiveStartTableName { get; public set; }
    public int Limit { get; public set; }
    public ListTablesRequest(string exclusiveStartTableName);
    public ListTablesRequest(string exclusiveStartTableName, int limit);
    public string get_ExclusiveStartTableName();
    public void set_ExclusiveStartTableName(string value);
    internal bool IsSetExclusiveStartTableName();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
}
public class Amazon.DynamoDBv2.Model.ListTablesResponse : ListTablesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListTablesResult class are now available on the ListTablesResponse class. You should use the properties on ListTablesResponse instead of accessing them through ListTablesResult.")]
public ListTablesResult ListTablesResult { get; }
    public ListTablesResult get_ListTablesResult();
}
public class Amazon.DynamoDBv2.Model.ListTablesResult : AmazonWebServiceResponse {
    private string _lastEvaluatedTableName;
    private List`1<string> _tableNames;
    public string LastEvaluatedTableName { get; public set; }
    public List`1<string> TableNames { get; public set; }
    public string get_LastEvaluatedTableName();
    public void set_LastEvaluatedTableName(string value);
    internal bool IsSetLastEvaluatedTableName();
    public List`1<string> get_TableNames();
    public void set_TableNames(List`1<string> value);
    internal bool IsSetTableNames();
}
public class Amazon.DynamoDBv2.Model.LocalSecondaryIndex : object {
    private string _indexName;
    private List`1<KeySchemaElement> _keySchema;
    private Projection _projection;
    public string IndexName { get; public set; }
    public List`1<KeySchemaElement> KeySchema { get; public set; }
    public Projection Projection { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
}
public class Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription : object {
    private string _indexArn;
    private string _indexName;
    private Nullable`1<long> _indexSizeBytes;
    private Nullable`1<long> _itemCount;
    private List`1<KeySchemaElement> _keySchema;
    private Projection _projection;
    public string IndexArn { get; public set; }
    public string IndexName { get; public set; }
    public long IndexSizeBytes { get; public set; }
    public long ItemCount { get; public set; }
    public List`1<KeySchemaElement> KeySchema { get; public set; }
    public Projection Projection { get; public set; }
    public string get_IndexArn();
    public void set_IndexArn(string value);
    internal bool IsSetIndexArn();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public long get_IndexSizeBytes();
    public void set_IndexSizeBytes(long value);
    internal bool IsSetIndexSizeBytes();
    public long get_ItemCount();
    public void set_ItemCount(long value);
    internal bool IsSetItemCount();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
}
public class Amazon.DynamoDBv2.Model.Projection : object {
    private List`1<string> _nonKeyAttributes;
    private ProjectionType _projectionType;
    public List`1<string> NonKeyAttributes { get; public set; }
    public ProjectionType ProjectionType { get; public set; }
    public List`1<string> get_NonKeyAttributes();
    public void set_NonKeyAttributes(List`1<string> value);
    internal bool IsSetNonKeyAttributes();
    public ProjectionType get_ProjectionType();
    public void set_ProjectionType(ProjectionType value);
    internal bool IsSetProjectionType();
}
public class Amazon.DynamoDBv2.Model.ProvisionedThroughput : object {
    private Nullable`1<long> _readCapacityUnits;
    private Nullable`1<long> _writeCapacityUnits;
    public long ReadCapacityUnits { get; public set; }
    public long WriteCapacityUnits { get; public set; }
    public ProvisionedThroughput(long readCapacityUnits, long writeCapacityUnits);
    public long get_ReadCapacityUnits();
    public void set_ReadCapacityUnits(long value);
    internal bool IsSetReadCapacityUnits();
    public long get_WriteCapacityUnits();
    public void set_WriteCapacityUnits(long value);
    internal bool IsSetWriteCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription : object {
    private Nullable`1<DateTime> _lastDecreaseDateTime;
    private Nullable`1<DateTime> _lastIncreaseDateTime;
    private Nullable`1<long> _numberOfDecreasesToday;
    private Nullable`1<long> _readCapacityUnits;
    private Nullable`1<long> _writeCapacityUnits;
    public DateTime LastDecreaseDateTime { get; public set; }
    public DateTime LastIncreaseDateTime { get; public set; }
    public long NumberOfDecreasesToday { get; public set; }
    public long ReadCapacityUnits { get; public set; }
    public long WriteCapacityUnits { get; public set; }
    public DateTime get_LastDecreaseDateTime();
    public void set_LastDecreaseDateTime(DateTime value);
    internal bool IsSetLastDecreaseDateTime();
    public DateTime get_LastIncreaseDateTime();
    public void set_LastIncreaseDateTime(DateTime value);
    internal bool IsSetLastIncreaseDateTime();
    public long get_NumberOfDecreasesToday();
    public void set_NumberOfDecreasesToday(long value);
    internal bool IsSetNumberOfDecreasesToday();
    public long get_ReadCapacityUnits();
    public void set_ReadCapacityUnits(long value);
    internal bool IsSetReadCapacityUnits();
    public long get_WriteCapacityUnits();
    public void set_WriteCapacityUnits(long value);
    internal bool IsSetWriteCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException : AmazonDynamoDBException {
    public ProvisionedThroughputExceededException(string message);
    public ProvisionedThroughputExceededException(string message, Exception innerException);
    public ProvisionedThroughputExceededException(Exception innerException);
    public ProvisionedThroughputExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ProvisionedThroughputExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.PutItemRequest : AmazonDynamoDBRequest {
    private ConditionalOperator _conditionalOperator;
    private string _conditionExpression;
    private Dictionary`2<string, ExpectedAttributeValue> _expected;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private Dictionary`2<string, AttributeValue> _item;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private ReturnItemCollectionMetrics _returnItemCollectionMetrics;
    private ReturnValue _returnValues;
    private string _tableName;
    public ConditionalOperator ConditionalOperator { get; public set; }
    public string ConditionExpression { get; public set; }
    public Dictionary`2<string, ExpectedAttributeValue> Expected { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public ReturnItemCollectionMetrics ReturnItemCollectionMetrics { get; public set; }
    public ReturnValue ReturnValues { get; public set; }
    public string TableName { get; public set; }
    public PutItemRequest(string tableName, Dictionary`2<string, AttributeValue> item);
    public PutItemRequest(string tableName, Dictionary`2<string, AttributeValue> item, ReturnValue returnValues);
    public ConditionalOperator get_ConditionalOperator();
    public void set_ConditionalOperator(ConditionalOperator value);
    internal bool IsSetConditionalOperator();
    public string get_ConditionExpression();
    public void set_ConditionExpression(string value);
    internal bool IsSetConditionExpression();
    public Dictionary`2<string, ExpectedAttributeValue> get_Expected();
    public void set_Expected(Dictionary`2<string, ExpectedAttributeValue> value);
    internal bool IsSetExpected();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItem();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public ReturnItemCollectionMetrics get_ReturnItemCollectionMetrics();
    public void set_ReturnItemCollectionMetrics(ReturnItemCollectionMetrics value);
    internal bool IsSetReturnItemCollectionMetrics();
    public ReturnValue get_ReturnValues();
    public void set_ReturnValues(ReturnValue value);
    internal bool IsSetReturnValues();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.PutItemResponse : PutItemResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the PutItemResult class are now available on the PutItemResponse class. You should use the properties on PutItemResponse instead of accessing them through PutItemResult.")]
public PutItemResult PutItemResult { get; }
    public PutItemResult get_PutItemResult();
}
public class Amazon.DynamoDBv2.Model.PutItemResult : AmazonWebServiceResponse {
    private Dictionary`2<string, AttributeValue> _attributes;
    private ConsumedCapacity _consumedCapacity;
    private ItemCollectionMetrics _itemCollectionMetrics;
    public Dictionary`2<string, AttributeValue> Attributes { get; public set; }
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public ItemCollectionMetrics ItemCollectionMetrics { get; public set; }
    public Dictionary`2<string, AttributeValue> get_Attributes();
    public void set_Attributes(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetAttributes();
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public ItemCollectionMetrics get_ItemCollectionMetrics();
    public void set_ItemCollectionMetrics(ItemCollectionMetrics value);
    internal bool IsSetItemCollectionMetrics();
}
public class Amazon.DynamoDBv2.Model.PutRequest : object {
    private Dictionary`2<string, AttributeValue> _item;
    public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public PutRequest(Dictionary`2<string, AttributeValue> item);
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItem();
}
public class Amazon.DynamoDBv2.Model.QueryRequest : AmazonDynamoDBRequest {
    private List`1<string> _attributesToGet;
    private ConditionalOperator _conditionalOperator;
    private Nullable`1<bool> _consistentRead;
    private Dictionary`2<string, AttributeValue> _exclusiveStartKey;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private string _filterExpression;
    private string _indexName;
    private string _keyConditionExpression;
    private Dictionary`2<string, Condition> _keyConditions;
    private Nullable`1<int> _limit;
    private string _projectionExpression;
    private Dictionary`2<string, Condition> _queryFilter;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private Nullable`1<bool> _scanIndexForward;
    private Select _select;
    private string _tableName;
    public List`1<string> AttributesToGet { get; public set; }
    public ConditionalOperator ConditionalOperator { get; public set; }
    public bool ConsistentRead { get; public set; }
    public Dictionary`2<string, AttributeValue> ExclusiveStartKey { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    public string FilterExpression { get; public set; }
    public string IndexName { get; public set; }
    public string KeyConditionExpression { get; public set; }
    public Dictionary`2<string, Condition> KeyConditions { get; public set; }
    public int Limit { get; public set; }
    public string ProjectionExpression { get; public set; }
    public Dictionary`2<string, Condition> QueryFilter { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public bool ScanIndexForward { get; public set; }
    public Select Select { get; public set; }
    public string TableName { get; public set; }
    public QueryRequest(string tableName);
    public List`1<string> get_AttributesToGet();
    public void set_AttributesToGet(List`1<string> value);
    internal bool IsSetAttributesToGet();
    public ConditionalOperator get_ConditionalOperator();
    public void set_ConditionalOperator(ConditionalOperator value);
    internal bool IsSetConditionalOperator();
    public bool get_ConsistentRead();
    public void set_ConsistentRead(bool value);
    internal bool IsSetConsistentRead();
    public Dictionary`2<string, AttributeValue> get_ExclusiveStartKey();
    public void set_ExclusiveStartKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExclusiveStartKey();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public string get_FilterExpression();
    public void set_FilterExpression(string value);
    internal bool IsSetFilterExpression();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public string get_KeyConditionExpression();
    public void set_KeyConditionExpression(string value);
    internal bool IsSetKeyConditionExpression();
    public Dictionary`2<string, Condition> get_KeyConditions();
    public void set_KeyConditions(Dictionary`2<string, Condition> value);
    internal bool IsSetKeyConditions();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_ProjectionExpression();
    public void set_ProjectionExpression(string value);
    internal bool IsSetProjectionExpression();
    public Dictionary`2<string, Condition> get_QueryFilter();
    public void set_QueryFilter(Dictionary`2<string, Condition> value);
    internal bool IsSetQueryFilter();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public bool get_ScanIndexForward();
    public void set_ScanIndexForward(bool value);
    internal bool IsSetScanIndexForward();
    public Select get_Select();
    public void set_Select(Select value);
    internal bool IsSetSelect();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.QueryResponse : QueryResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the QueryResult class are now available on the QueryResponse class. You should use the properties on QueryResponse instead of accessing them through QueryResult.")]
public QueryResult QueryResult { get; }
    public QueryResult get_QueryResult();
}
public class Amazon.DynamoDBv2.Model.QueryResult : AmazonWebServiceResponse {
    private ConsumedCapacity _consumedCapacity;
    private Nullable`1<int> _count;
    private List`1<Dictionary`2<string, AttributeValue>> _items;
    private Dictionary`2<string, AttributeValue> _lastEvaluatedKey;
    private Nullable`1<int> _scannedCount;
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public int Count { get; public set; }
    public List`1<Dictionary`2<string, AttributeValue>> Items { get; public set; }
    public Dictionary`2<string, AttributeValue> LastEvaluatedKey { get; public set; }
    public int ScannedCount { get; public set; }
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public int get_Count();
    public void set_Count(int value);
    internal bool IsSetCount();
    public List`1<Dictionary`2<string, AttributeValue>> get_Items();
    public void set_Items(List`1<Dictionary`2<string, AttributeValue>> value);
    internal bool IsSetItems();
    public Dictionary`2<string, AttributeValue> get_LastEvaluatedKey();
    public void set_LastEvaluatedKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetLastEvaluatedKey();
    public int get_ScannedCount();
    public void set_ScannedCount(int value);
    internal bool IsSetScannedCount();
}
public class Amazon.DynamoDBv2.Model.Record : object {
    private string _awsRegion;
    private StreamRecord _dynamodb;
    private string _eventid;
    private OperationType _eventName;
    private string _eventSource;
    private string _eventVersion;
    public string AwsRegion { get; public set; }
    public StreamRecord Dynamodb { get; public set; }
    public string EventID { get; public set; }
    public OperationType EventName { get; public set; }
    public string EventSource { get; public set; }
    public string EventVersion { get; public set; }
    public string get_AwsRegion();
    public void set_AwsRegion(string value);
    internal bool IsSetAwsRegion();
    public StreamRecord get_Dynamodb();
    public void set_Dynamodb(StreamRecord value);
    internal bool IsSetDynamodb();
    public string get_EventID();
    public void set_EventID(string value);
    internal bool IsSetEventID();
    public OperationType get_EventName();
    public void set_EventName(OperationType value);
    internal bool IsSetEventName();
    public string get_EventSource();
    public void set_EventSource(string value);
    internal bool IsSetEventSource();
    public string get_EventVersion();
    public void set_EventVersion(string value);
    internal bool IsSetEventVersion();
}
public class Amazon.DynamoDBv2.Model.ResourceInUseException : AmazonDynamoDBException {
    public ResourceInUseException(string message);
    public ResourceInUseException(string message, Exception innerException);
    public ResourceInUseException(Exception innerException);
    public ResourceInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceInUseException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ResourceNotFoundException : AmazonDynamoDBException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ScanRequest : AmazonDynamoDBRequest {
    private List`1<string> _attributesToGet;
    private ConditionalOperator _conditionalOperator;
    private Nullable`1<bool> _consistentRead;
    private Dictionary`2<string, AttributeValue> _exclusiveStartKey;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private string _filterExpression;
    private string _indexName;
    private Nullable`1<int> _limit;
    private string _projectionExpression;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private Dictionary`2<string, Condition> _scanFilter;
    private Nullable`1<int> _segment;
    private Select _select;
    private string _tableName;
    private Nullable`1<int> _totalSegments;
    public List`1<string> AttributesToGet { get; public set; }
    public ConditionalOperator ConditionalOperator { get; public set; }
    public bool ConsistentRead { get; public set; }
    public Dictionary`2<string, AttributeValue> ExclusiveStartKey { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    public string FilterExpression { get; public set; }
    public string IndexName { get; public set; }
    public int Limit { get; public set; }
    public string ProjectionExpression { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public Dictionary`2<string, Condition> ScanFilter { get; public set; }
    public int Segment { get; public set; }
    public Select Select { get; public set; }
    public string TableName { get; public set; }
    public int TotalSegments { get; public set; }
    public ScanRequest(string tableName);
    public List`1<string> get_AttributesToGet();
    public void set_AttributesToGet(List`1<string> value);
    internal bool IsSetAttributesToGet();
    public ConditionalOperator get_ConditionalOperator();
    public void set_ConditionalOperator(ConditionalOperator value);
    internal bool IsSetConditionalOperator();
    public bool get_ConsistentRead();
    public void set_ConsistentRead(bool value);
    internal bool IsSetConsistentRead();
    public Dictionary`2<string, AttributeValue> get_ExclusiveStartKey();
    public void set_ExclusiveStartKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExclusiveStartKey();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public string get_FilterExpression();
    public void set_FilterExpression(string value);
    internal bool IsSetFilterExpression();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_ProjectionExpression();
    public void set_ProjectionExpression(string value);
    internal bool IsSetProjectionExpression();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public Dictionary`2<string, Condition> get_ScanFilter();
    public void set_ScanFilter(Dictionary`2<string, Condition> value);
    internal bool IsSetScanFilter();
    public int get_Segment();
    public void set_Segment(int value);
    internal bool IsSetSegment();
    public Select get_Select();
    public void set_Select(Select value);
    internal bool IsSetSelect();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public int get_TotalSegments();
    public void set_TotalSegments(int value);
    internal bool IsSetTotalSegments();
}
public class Amazon.DynamoDBv2.Model.ScanResponse : ScanResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ScanResult class are now available on the ScanResponse class. You should use the properties on ScanResponse instead of accessing them through ScanResult.")]
public ScanResult ScanResult { get; }
    public ScanResult get_ScanResult();
}
public class Amazon.DynamoDBv2.Model.ScanResult : AmazonWebServiceResponse {
    private ConsumedCapacity _consumedCapacity;
    private Nullable`1<int> _count;
    private List`1<Dictionary`2<string, AttributeValue>> _items;
    private Dictionary`2<string, AttributeValue> _lastEvaluatedKey;
    private Nullable`1<int> _scannedCount;
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public int Count { get; public set; }
    public List`1<Dictionary`2<string, AttributeValue>> Items { get; public set; }
    public Dictionary`2<string, AttributeValue> LastEvaluatedKey { get; public set; }
    public int ScannedCount { get; public set; }
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public int get_Count();
    public void set_Count(int value);
    internal bool IsSetCount();
    public List`1<Dictionary`2<string, AttributeValue>> get_Items();
    public void set_Items(List`1<Dictionary`2<string, AttributeValue>> value);
    internal bool IsSetItems();
    public Dictionary`2<string, AttributeValue> get_LastEvaluatedKey();
    public void set_LastEvaluatedKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetLastEvaluatedKey();
    public int get_ScannedCount();
    public void set_ScannedCount(int value);
    internal bool IsSetScannedCount();
}
public class Amazon.DynamoDBv2.Model.SequenceNumberRange : object {
    private string _endingSequenceNumber;
    private string _startingSequenceNumber;
    public string EndingSequenceNumber { get; public set; }
    public string StartingSequenceNumber { get; public set; }
    public string get_EndingSequenceNumber();
    public void set_EndingSequenceNumber(string value);
    internal bool IsSetEndingSequenceNumber();
    public string get_StartingSequenceNumber();
    public void set_StartingSequenceNumber(string value);
    internal bool IsSetStartingSequenceNumber();
}
public class Amazon.DynamoDBv2.Model.Shard : object {
    private string _parentShardId;
    private SequenceNumberRange _sequenceNumberRange;
    private string _shardId;
    public string ParentShardId { get; public set; }
    public SequenceNumberRange SequenceNumberRange { get; public set; }
    public string ShardId { get; public set; }
    public string get_ParentShardId();
    public void set_ParentShardId(string value);
    internal bool IsSetParentShardId();
    public SequenceNumberRange get_SequenceNumberRange();
    public void set_SequenceNumberRange(SequenceNumberRange value);
    internal bool IsSetSequenceNumberRange();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
}
public class Amazon.DynamoDBv2.Model.StreamDescription : object {
    private Nullable`1<DateTime> _creationRequestDateTime;
    private List`1<KeySchemaElement> _keySchema;
    private string _lastEvaluatedShardId;
    private List`1<Shard> _shards;
    private string _streamArn;
    private string _streamLabel;
    private StreamStatus _streamStatus;
    private StreamViewType _streamViewType;
    private string _tableName;
    public DateTime CreationRequestDateTime { get; public set; }
    public List`1<KeySchemaElement> KeySchema { get; public set; }
    public string LastEvaluatedShardId { get; public set; }
    public List`1<Shard> Shards { get; public set; }
    public string StreamArn { get; public set; }
    public string StreamLabel { get; public set; }
    public StreamStatus StreamStatus { get; public set; }
    public StreamViewType StreamViewType { get; public set; }
    public string TableName { get; public set; }
    public DateTime get_CreationRequestDateTime();
    public void set_CreationRequestDateTime(DateTime value);
    internal bool IsSetCreationRequestDateTime();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public string get_LastEvaluatedShardId();
    public void set_LastEvaluatedShardId(string value);
    internal bool IsSetLastEvaluatedShardId();
    public List`1<Shard> get_Shards();
    public void set_Shards(List`1<Shard> value);
    internal bool IsSetShards();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_StreamLabel();
    public void set_StreamLabel(string value);
    internal bool IsSetStreamLabel();
    public StreamStatus get_StreamStatus();
    public void set_StreamStatus(StreamStatus value);
    internal bool IsSetStreamStatus();
    public StreamViewType get_StreamViewType();
    public void set_StreamViewType(StreamViewType value);
    internal bool IsSetStreamViewType();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.StreamRecord : object {
    private Dictionary`2<string, AttributeValue> _keys;
    private Dictionary`2<string, AttributeValue> _newImage;
    private Dictionary`2<string, AttributeValue> _oldImage;
    private string _sequenceNumber;
    private Nullable`1<long> _sizeBytes;
    private StreamViewType _streamViewType;
    public Dictionary`2<string, AttributeValue> Keys { get; public set; }
    public Dictionary`2<string, AttributeValue> NewImage { get; public set; }
    public Dictionary`2<string, AttributeValue> OldImage { get; public set; }
    public string SequenceNumber { get; public set; }
    public long SizeBytes { get; public set; }
    public StreamViewType StreamViewType { get; public set; }
    public Dictionary`2<string, AttributeValue> get_Keys();
    public void set_Keys(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKeys();
    public Dictionary`2<string, AttributeValue> get_NewImage();
    public void set_NewImage(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetNewImage();
    public Dictionary`2<string, AttributeValue> get_OldImage();
    public void set_OldImage(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetOldImage();
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
    public long get_SizeBytes();
    public void set_SizeBytes(long value);
    internal bool IsSetSizeBytes();
    public StreamViewType get_StreamViewType();
    public void set_StreamViewType(StreamViewType value);
    internal bool IsSetStreamViewType();
}
public class Amazon.DynamoDBv2.Model.StreamSpecification : object {
    private Nullable`1<bool> _streamEnabled;
    private StreamViewType _streamViewType;
    public bool StreamEnabled { get; public set; }
    public StreamViewType StreamViewType { get; public set; }
    public bool get_StreamEnabled();
    public void set_StreamEnabled(bool value);
    internal bool IsSetStreamEnabled();
    public StreamViewType get_StreamViewType();
    public void set_StreamViewType(StreamViewType value);
    internal bool IsSetStreamViewType();
}
public class Amazon.DynamoDBv2.Model.StreamSummary : object {
    private string _streamArn;
    private string _streamLabel;
    private string _tableName;
    public string StreamArn { get; public set; }
    public string StreamLabel { get; public set; }
    public string TableName { get; public set; }
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_StreamLabel();
    public void set_StreamLabel(string value);
    internal bool IsSetStreamLabel();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.TableDescription : object {
    private List`1<AttributeDefinition> _attributeDefinitions;
    private Nullable`1<DateTime> _creationDateTime;
    private List`1<GlobalSecondaryIndexDescription> _globalSecondaryIndexes;
    private Nullable`1<long> _itemCount;
    private List`1<KeySchemaElement> _keySchema;
    private string _latestStreamArn;
    private string _latestStreamLabel;
    private List`1<LocalSecondaryIndexDescription> _localSecondaryIndexes;
    private ProvisionedThroughputDescription _provisionedThroughput;
    private StreamSpecification _streamSpecification;
    private string _tableArn;
    private string _tableName;
    private Nullable`1<long> _tableSizeBytes;
    private TableStatus _tableStatus;
    public List`1<AttributeDefinition> AttributeDefinitions { get; public set; }
    public DateTime CreationDateTime { get; public set; }
    public List`1<GlobalSecondaryIndexDescription> GlobalSecondaryIndexes { get; public set; }
    public long ItemCount { get; public set; }
    public List`1<KeySchemaElement> KeySchema { get; public set; }
    public string LatestStreamArn { get; public set; }
    public string LatestStreamLabel { get; public set; }
    public List`1<LocalSecondaryIndexDescription> LocalSecondaryIndexes { get; public set; }
    public ProvisionedThroughputDescription ProvisionedThroughput { get; public set; }
    public StreamSpecification StreamSpecification { get; public set; }
    public string TableArn { get; public set; }
    public string TableName { get; public set; }
    public long TableSizeBytes { get; public set; }
    public TableStatus TableStatus { get; public set; }
    public List`1<AttributeDefinition> get_AttributeDefinitions();
    public void set_AttributeDefinitions(List`1<AttributeDefinition> value);
    internal bool IsSetAttributeDefinitions();
    public DateTime get_CreationDateTime();
    public void set_CreationDateTime(DateTime value);
    internal bool IsSetCreationDateTime();
    public List`1<GlobalSecondaryIndexDescription> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(List`1<GlobalSecondaryIndexDescription> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public long get_ItemCount();
    public void set_ItemCount(long value);
    internal bool IsSetItemCount();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public string get_LatestStreamArn();
    public void set_LatestStreamArn(string value);
    internal bool IsSetLatestStreamArn();
    public string get_LatestStreamLabel();
    public void set_LatestStreamLabel(string value);
    internal bool IsSetLatestStreamLabel();
    public List`1<LocalSecondaryIndexDescription> get_LocalSecondaryIndexes();
    public void set_LocalSecondaryIndexes(List`1<LocalSecondaryIndexDescription> value);
    internal bool IsSetLocalSecondaryIndexes();
    public ProvisionedThroughputDescription get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughputDescription value);
    internal bool IsSetProvisionedThroughput();
    public StreamSpecification get_StreamSpecification();
    public void set_StreamSpecification(StreamSpecification value);
    internal bool IsSetStreamSpecification();
    public string get_TableArn();
    public void set_TableArn(string value);
    internal bool IsSetTableArn();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public long get_TableSizeBytes();
    public void set_TableSizeBytes(long value);
    internal bool IsSetTableSizeBytes();
    public TableStatus get_TableStatus();
    public void set_TableStatus(TableStatus value);
    internal bool IsSetTableStatus();
}
public class Amazon.DynamoDBv2.Model.TrimmedDataAccessException : AmazonDynamoDBException {
    public TrimmedDataAccessException(string message);
    public TrimmedDataAccessException(string message, Exception innerException);
    public TrimmedDataAccessException(Exception innerException);
    public TrimmedDataAccessException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TrimmedDataAccessException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.UpdateGlobalSecondaryIndexAction : object {
    private string _indexName;
    private ProvisionedThroughput _provisionedThroughput;
    public string IndexName { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
}
public class Amazon.DynamoDBv2.Model.UpdateItemRequest : AmazonDynamoDBRequest {
    private Dictionary`2<string, AttributeValueUpdate> _attributeUpdates;
    private ConditionalOperator _conditionalOperator;
    private string _conditionExpression;
    private Dictionary`2<string, ExpectedAttributeValue> _expected;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private Dictionary`2<string, AttributeValue> _key;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private ReturnItemCollectionMetrics _returnItemCollectionMetrics;
    private ReturnValue _returnValues;
    private string _tableName;
    private string _updateExpression;
    public Dictionary`2<string, AttributeValueUpdate> AttributeUpdates { get; public set; }
    public ConditionalOperator ConditionalOperator { get; public set; }
    public string ConditionExpression { get; public set; }
    public Dictionary`2<string, ExpectedAttributeValue> Expected { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public ReturnItemCollectionMetrics ReturnItemCollectionMetrics { get; public set; }
    public ReturnValue ReturnValues { get; public set; }
    public string TableName { get; public set; }
    public string UpdateExpression { get; public set; }
    public UpdateItemRequest(string tableName, Dictionary`2<string, AttributeValue> key, Dictionary`2<string, AttributeValueUpdate> attributeUpdates);
    public UpdateItemRequest(string tableName, Dictionary`2<string, AttributeValue> key, Dictionary`2<string, AttributeValueUpdate> attributeUpdates, ReturnValue returnValues);
    public Dictionary`2<string, AttributeValueUpdate> get_AttributeUpdates();
    public void set_AttributeUpdates(Dictionary`2<string, AttributeValueUpdate> value);
    internal bool IsSetAttributeUpdates();
    public ConditionalOperator get_ConditionalOperator();
    public void set_ConditionalOperator(ConditionalOperator value);
    internal bool IsSetConditionalOperator();
    public string get_ConditionExpression();
    public void set_ConditionExpression(string value);
    internal bool IsSetConditionExpression();
    public Dictionary`2<string, ExpectedAttributeValue> get_Expected();
    public void set_Expected(Dictionary`2<string, ExpectedAttributeValue> value);
    internal bool IsSetExpected();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public ReturnItemCollectionMetrics get_ReturnItemCollectionMetrics();
    public void set_ReturnItemCollectionMetrics(ReturnItemCollectionMetrics value);
    internal bool IsSetReturnItemCollectionMetrics();
    public ReturnValue get_ReturnValues();
    public void set_ReturnValues(ReturnValue value);
    internal bool IsSetReturnValues();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public string get_UpdateExpression();
    public void set_UpdateExpression(string value);
    internal bool IsSetUpdateExpression();
}
public class Amazon.DynamoDBv2.Model.UpdateItemResponse : UpdateItemResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UpdateItemResult class are now available on the UpdateItemResponse class. You should use the properties on UpdateItemResponse instead of accessing them through UpdateItemResult.")]
public UpdateItemResult UpdateItemResult { get; }
    public UpdateItemResult get_UpdateItemResult();
}
public class Amazon.DynamoDBv2.Model.UpdateItemResult : AmazonWebServiceResponse {
    private Dictionary`2<string, AttributeValue> _attributes;
    private ConsumedCapacity _consumedCapacity;
    private ItemCollectionMetrics _itemCollectionMetrics;
    public Dictionary`2<string, AttributeValue> Attributes { get; public set; }
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public ItemCollectionMetrics ItemCollectionMetrics { get; public set; }
    public Dictionary`2<string, AttributeValue> get_Attributes();
    public void set_Attributes(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetAttributes();
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public ItemCollectionMetrics get_ItemCollectionMetrics();
    public void set_ItemCollectionMetrics(ItemCollectionMetrics value);
    internal bool IsSetItemCollectionMetrics();
}
public class Amazon.DynamoDBv2.Model.UpdateTableRequest : AmazonDynamoDBRequest {
    private List`1<AttributeDefinition> _attributeDefinitions;
    private List`1<GlobalSecondaryIndexUpdate> _globalSecondaryIndexUpdates;
    private ProvisionedThroughput _provisionedThroughput;
    private StreamSpecification _streamSpecification;
    private string _tableName;
    public List`1<AttributeDefinition> AttributeDefinitions { get; public set; }
    public List`1<GlobalSecondaryIndexUpdate> GlobalSecondaryIndexUpdates { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public StreamSpecification StreamSpecification { get; public set; }
    public string TableName { get; public set; }
    public UpdateTableRequest(string tableName, ProvisionedThroughput provisionedThroughput);
    public List`1<AttributeDefinition> get_AttributeDefinitions();
    public void set_AttributeDefinitions(List`1<AttributeDefinition> value);
    internal bool IsSetAttributeDefinitions();
    public List`1<GlobalSecondaryIndexUpdate> get_GlobalSecondaryIndexUpdates();
    public void set_GlobalSecondaryIndexUpdates(List`1<GlobalSecondaryIndexUpdate> value);
    internal bool IsSetGlobalSecondaryIndexUpdates();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
    public StreamSpecification get_StreamSpecification();
    public void set_StreamSpecification(StreamSpecification value);
    internal bool IsSetStreamSpecification();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.UpdateTableResponse : UpdateTableResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UpdateTableResult class are now available on the UpdateTableResponse class. You should use the properties on UpdateTableResponse instead of accessing them through UpdateTableResult.")]
public UpdateTableResult UpdateTableResult { get; }
    public UpdateTableResult get_UpdateTableResult();
}
public class Amazon.DynamoDBv2.Model.UpdateTableResult : AmazonWebServiceResponse {
    private TableDescription _tableDescription;
    public TableDescription TableDescription { get; public set; }
    public TableDescription get_TableDescription();
    public void set_TableDescription(TableDescription value);
    internal bool IsSetTableDescription();
}
public class Amazon.DynamoDBv2.Model.WriteRequest : object {
    private DeleteRequest _deleteRequest;
    private PutRequest _putRequest;
    public DeleteRequest DeleteRequest { get; public set; }
    public PutRequest PutRequest { get; public set; }
    public WriteRequest(PutRequest putRequest);
    public WriteRequest(DeleteRequest deleteRequest);
    public DeleteRequest get_DeleteRequest();
    public void set_DeleteRequest(DeleteRequest value);
    internal bool IsSetDeleteRequest();
    public PutRequest get_PutRequest();
    public void set_PutRequest(PutRequest value);
    internal bool IsSetPutRequest();
}
public class Amazon.DynamoDBv2.OperationType : ConstantClass {
    public static OperationType INSERT;
    public static OperationType MODIFY;
    public static OperationType REMOVE;
    public OperationType(string value);
    private static OperationType();
    public static OperationType FindValue(string value);
    public static OperationType op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.PrimitiveCollectionConverterV1 : CollectionConverter {
    public virtual bool TryTo(object value, PrimitiveList& pl);
    public virtual bool TryFrom(PrimitiveList pl, Type targetType, Object& result);
    public virtual bool TryFrom(DynamoDBList l, Type targetType, Object& result);
}
public class Amazon.DynamoDBv2.ProjectionType : ConstantClass {
    public static ProjectionType ALL;
    public static ProjectionType INCLUDE;
    public static ProjectionType KEYS_ONLY;
    public ProjectionType(string value);
    private static ProjectionType();
    public static ProjectionType FindValue(string value);
    public static ProjectionType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ReturnConsumedCapacity : ConstantClass {
    public static ReturnConsumedCapacity INDEXES;
    public static ReturnConsumedCapacity NONE;
    public static ReturnConsumedCapacity TOTAL;
    public ReturnConsumedCapacity(string value);
    private static ReturnConsumedCapacity();
    public static ReturnConsumedCapacity FindValue(string value);
    public static ReturnConsumedCapacity op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ReturnItemCollectionMetrics : ConstantClass {
    public static ReturnItemCollectionMetrics NONE;
    public static ReturnItemCollectionMetrics SIZE;
    public ReturnItemCollectionMetrics(string value);
    private static ReturnItemCollectionMetrics();
    public static ReturnItemCollectionMetrics FindValue(string value);
    public static ReturnItemCollectionMetrics op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ReturnValue : ConstantClass {
    public static ReturnValue ALL_NEW;
    public static ReturnValue ALL_OLD;
    public static ReturnValue NONE;
    public static ReturnValue UPDATED_NEW;
    public static ReturnValue UPDATED_OLD;
    public ReturnValue(string value);
    private static ReturnValue();
    public static ReturnValue FindValue(string value);
    public static ReturnValue op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.SByteConverterV1 : Converter`1<sbyte> {
    protected virtual bool TryTo(sbyte value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, SByte& result);
}
internal class Amazon.DynamoDBv2.SByteConverterV2 : SByteConverterV1 {
}
public class Amazon.DynamoDBv2.ScalarAttributeType : ConstantClass {
    public static ScalarAttributeType B;
    public static ScalarAttributeType N;
    public static ScalarAttributeType S;
    public ScalarAttributeType(string value);
    private static ScalarAttributeType();
    public static ScalarAttributeType FindValue(string value);
    public static ScalarAttributeType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.Select : ConstantClass {
    public static Select ALL_ATTRIBUTES;
    public static Select ALL_PROJECTED_ATTRIBUTES;
    public static Select COUNT;
    public static Select SPECIFIC_ATTRIBUTES;
    public Select(string value);
    private static Select();
    public static Select FindValue(string value);
    public static Select op_Implicit(string value);
}
public class Amazon.DynamoDBv2.SetPropertyConverter`2 : object {
    protected static Type collectionType;
    protected static Type elementType;
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    public DynamoDBEntryConversion Conversion { get; public set; }
    private static SetPropertyConverter`2();
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
    public sealed virtual DynamoDBEntry ToEntry(object value);
    public sealed virtual object FromEntry(DynamoDBEntry entry);
}
public class Amazon.DynamoDBv2.ShardIteratorType : ConstantClass {
    public static ShardIteratorType AFTER_SEQUENCE_NUMBER;
    public static ShardIteratorType AT_SEQUENCE_NUMBER;
    public static ShardIteratorType LATEST;
    public static ShardIteratorType TRIM_HORIZON;
    public ShardIteratorType(string value);
    private static ShardIteratorType();
    public static ShardIteratorType FindValue(string value);
    public static ShardIteratorType op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.SingleConverterV1 : Converter`1<float> {
    protected virtual bool TryTo(float value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Single& result);
}
internal class Amazon.DynamoDBv2.SingleConverterV2 : SingleConverterV1 {
}
public class Amazon.DynamoDBv2.StreamStatus : ConstantClass {
    public static StreamStatus DISABLED;
    public static StreamStatus DISABLING;
    public static StreamStatus ENABLED;
    public static StreamStatus ENABLING;
    public StreamStatus(string value);
    private static StreamStatus();
    public static StreamStatus FindValue(string value);
    public static StreamStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.StreamViewType : ConstantClass {
    public static StreamViewType KEYS_ONLY;
    public static StreamViewType NEW_AND_OLD_IMAGES;
    public static StreamViewType NEW_IMAGE;
    public static StreamViewType OLD_IMAGE;
    public StreamViewType(string value);
    private static StreamViewType();
    public static StreamViewType FindValue(string value);
    public static StreamViewType op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.StringConverterV1 : Converter`1<string> {
    protected virtual bool TryTo(string value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, String& result);
}
internal class Amazon.DynamoDBv2.StringConverterV2 : StringConverterV1 {
}
public class Amazon.DynamoDBv2.TableStatus : ConstantClass {
    public static TableStatus ACTIVE;
    public static TableStatus CREATING;
    public static TableStatus DELETING;
    public static TableStatus UPDATING;
    public TableStatus(string value);
    private static TableStatus();
    public static TableStatus FindValue(string value);
    public static TableStatus op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.UInt16ConverterV1 : Converter`1<ushort> {
    protected virtual bool TryTo(ushort value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, UInt16& result);
}
internal class Amazon.DynamoDBv2.UInt16ConverterV2 : UInt16ConverterV1 {
}
internal class Amazon.DynamoDBv2.UInt32ConverterV1 : Converter`1<UInt32> {
    protected virtual bool TryTo(UInt32 value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, UInt32& result);
}
internal class Amazon.DynamoDBv2.UInt32ConverterV2 : UInt32ConverterV1 {
}
internal class Amazon.DynamoDBv2.UInt64ConverterV1 : Converter`1<ulong> {
    protected virtual bool TryTo(ulong value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, UInt64& result);
}
internal class Amazon.DynamoDBv2.UInt64ConverterV2 : UInt64ConverterV1 {
}
public class Amazon.EC2.AccountAttributeName : ConstantClass {
    public static AccountAttributeName DefaultVpc;
    public static AccountAttributeName SupportedPlatforms;
    public AccountAttributeName(string value);
    private static AccountAttributeName();
    public static AccountAttributeName FindValue(string value);
    public static AccountAttributeName op_Implicit(string value);
}
public class Amazon.EC2.AllocationStrategy : ConstantClass {
    public static AllocationStrategy Diversified;
    public static AllocationStrategy LowestPrice;
    public AllocationStrategy(string value);
    private static AllocationStrategy();
    public static AllocationStrategy FindValue(string value);
    public static AllocationStrategy op_Implicit(string value);
}
public class Amazon.EC2.AmazonEC2Client : AmazonServiceClient {
    private static Dictionary`2<Type, DryRunInfo> _methodCache;
    private static Dictionary`2<Type, DryRunInfo> MethodCache { get; }
    public AmazonEC2Client(AWSCredentials credentials);
    public AmazonEC2Client(AWSCredentials credentials, RegionEndpoint region);
    public AmazonEC2Client(AWSCredentials credentials, AmazonEC2Config clientConfig);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey, AmazonEC2Config clientConfig);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonEC2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonEC2Config clientConfig);
    private static AmazonEC2Client();
    private static Dictionary`2<Type, DryRunInfo> get_MethodCache();
    public DryRunResponse DryRun(AmazonEC2Request request);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual void Dispose(bool disposing);
    internal AcceptVpcPeeringConnectionResponse AcceptVpcPeeringConnection(AcceptVpcPeeringConnectionRequest request);
    public sealed virtual Task`1<AcceptVpcPeeringConnectionResponse> AcceptVpcPeeringConnectionAsync(AcceptVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    internal AllocateAddressResponse AllocateAddress();
    internal AllocateAddressResponse AllocateAddress(AllocateAddressRequest request);
    public sealed virtual Task`1<AllocateAddressResponse> AllocateAddressAsync(AllocateAddressRequest request, CancellationToken cancellationToken);
    internal AssignPrivateIpAddressesResponse AssignPrivateIpAddresses(AssignPrivateIpAddressesRequest request);
    public sealed virtual Task`1<AssignPrivateIpAddressesResponse> AssignPrivateIpAddressesAsync(AssignPrivateIpAddressesRequest request, CancellationToken cancellationToken);
    internal AssociateAddressResponse AssociateAddress(AssociateAddressRequest request);
    public sealed virtual Task`1<AssociateAddressResponse> AssociateAddressAsync(AssociateAddressRequest request, CancellationToken cancellationToken);
    internal AssociateDhcpOptionsResponse AssociateDhcpOptions(AssociateDhcpOptionsRequest request);
    public sealed virtual Task`1<AssociateDhcpOptionsResponse> AssociateDhcpOptionsAsync(AssociateDhcpOptionsRequest request, CancellationToken cancellationToken);
    internal AssociateRouteTableResponse AssociateRouteTable(AssociateRouteTableRequest request);
    public sealed virtual Task`1<AssociateRouteTableResponse> AssociateRouteTableAsync(AssociateRouteTableRequest request, CancellationToken cancellationToken);
    internal AttachClassicLinkVpcResponse AttachClassicLinkVpc(AttachClassicLinkVpcRequest request);
    public sealed virtual Task`1<AttachClassicLinkVpcResponse> AttachClassicLinkVpcAsync(AttachClassicLinkVpcRequest request, CancellationToken cancellationToken);
    internal AttachInternetGatewayResponse AttachInternetGateway(AttachInternetGatewayRequest request);
    public sealed virtual Task`1<AttachInternetGatewayResponse> AttachInternetGatewayAsync(AttachInternetGatewayRequest request, CancellationToken cancellationToken);
    internal AttachNetworkInterfaceResponse AttachNetworkInterface(AttachNetworkInterfaceRequest request);
    public sealed virtual Task`1<AttachNetworkInterfaceResponse> AttachNetworkInterfaceAsync(AttachNetworkInterfaceRequest request, CancellationToken cancellationToken);
    internal AttachVolumeResponse AttachVolume(AttachVolumeRequest request);
    public sealed virtual Task`1<AttachVolumeResponse> AttachVolumeAsync(AttachVolumeRequest request, CancellationToken cancellationToken);
    internal AttachVpnGatewayResponse AttachVpnGateway(AttachVpnGatewayRequest request);
    public sealed virtual Task`1<AttachVpnGatewayResponse> AttachVpnGatewayAsync(AttachVpnGatewayRequest request, CancellationToken cancellationToken);
    internal AuthorizeSecurityGroupEgressResponse AuthorizeSecurityGroupEgress(AuthorizeSecurityGroupEgressRequest request);
    public sealed virtual Task`1<AuthorizeSecurityGroupEgressResponse> AuthorizeSecurityGroupEgressAsync(AuthorizeSecurityGroupEgressRequest request, CancellationToken cancellationToken);
    internal AuthorizeSecurityGroupIngressResponse AuthorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request);
    public sealed virtual Task`1<AuthorizeSecurityGroupIngressResponse> AuthorizeSecurityGroupIngressAsync(AuthorizeSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    internal BundleInstanceResponse BundleInstance(BundleInstanceRequest request);
    public sealed virtual Task`1<BundleInstanceResponse> BundleInstanceAsync(BundleInstanceRequest request, CancellationToken cancellationToken);
    internal CancelBundleTaskResponse CancelBundleTask(CancelBundleTaskRequest request);
    public sealed virtual Task`1<CancelBundleTaskResponse> CancelBundleTaskAsync(CancelBundleTaskRequest request, CancellationToken cancellationToken);
    internal CancelConversionTaskResponse CancelConversionTask(CancelConversionTaskRequest request);
    public sealed virtual Task`1<CancelConversionTaskResponse> CancelConversionTaskAsync(CancelConversionTaskRequest request, CancellationToken cancellationToken);
    internal CancelExportTaskResponse CancelExportTask(CancelExportTaskRequest request);
    public sealed virtual Task`1<CancelExportTaskResponse> CancelExportTaskAsync(CancelExportTaskRequest request, CancellationToken cancellationToken);
    internal CancelImportTaskResponse CancelImportTask(CancelImportTaskRequest request);
    public sealed virtual Task`1<CancelImportTaskResponse> CancelImportTaskAsync(CancelImportTaskRequest request, CancellationToken cancellationToken);
    internal CancelReservedInstancesListingResponse CancelReservedInstancesListing(CancelReservedInstancesListingRequest request);
    public sealed virtual Task`1<CancelReservedInstancesListingResponse> CancelReservedInstancesListingAsync(CancelReservedInstancesListingRequest request, CancellationToken cancellationToken);
    internal CancelSpotFleetRequestsResponse CancelSpotFleetRequests(CancelSpotFleetRequestsRequest request);
    public sealed virtual Task`1<CancelSpotFleetRequestsResponse> CancelSpotFleetRequestsAsync(CancelSpotFleetRequestsRequest request, CancellationToken cancellationToken);
    internal CancelSpotInstanceRequestsResponse CancelSpotInstanceRequests(CancelSpotInstanceRequestsRequest request);
    public sealed virtual Task`1<CancelSpotInstanceRequestsResponse> CancelSpotInstanceRequestsAsync(CancelSpotInstanceRequestsRequest request, CancellationToken cancellationToken);
    internal ConfirmProductInstanceResponse ConfirmProductInstance(ConfirmProductInstanceRequest request);
    public sealed virtual Task`1<ConfirmProductInstanceResponse> ConfirmProductInstanceAsync(ConfirmProductInstanceRequest request, CancellationToken cancellationToken);
    internal CopyImageResponse CopyImage(CopyImageRequest request);
    public sealed virtual Task`1<CopyImageResponse> CopyImageAsync(CopyImageRequest request, CancellationToken cancellationToken);
    internal CopySnapshotResponse CopySnapshot(CopySnapshotRequest request);
    public sealed virtual Task`1<CopySnapshotResponse> CopySnapshotAsync(CopySnapshotRequest request, CancellationToken cancellationToken);
    internal CreateCustomerGatewayResponse CreateCustomerGateway(CreateCustomerGatewayRequest request);
    public sealed virtual Task`1<CreateCustomerGatewayResponse> CreateCustomerGatewayAsync(CreateCustomerGatewayRequest request, CancellationToken cancellationToken);
    internal CreateDhcpOptionsResponse CreateDhcpOptions(CreateDhcpOptionsRequest request);
    public sealed virtual Task`1<CreateDhcpOptionsResponse> CreateDhcpOptionsAsync(CreateDhcpOptionsRequest request, CancellationToken cancellationToken);
    internal CreateFlowLogsResponse CreateFlowLogs(CreateFlowLogsRequest request);
    public sealed virtual Task`1<CreateFlowLogsResponse> CreateFlowLogsAsync(CreateFlowLogsRequest request, CancellationToken cancellationToken);
    internal CreateImageResponse CreateImage(CreateImageRequest request);
    public sealed virtual Task`1<CreateImageResponse> CreateImageAsync(CreateImageRequest request, CancellationToken cancellationToken);
    internal CreateInstanceExportTaskResponse CreateInstanceExportTask(CreateInstanceExportTaskRequest request);
    public sealed virtual Task`1<CreateInstanceExportTaskResponse> CreateInstanceExportTaskAsync(CreateInstanceExportTaskRequest request, CancellationToken cancellationToken);
    internal CreateInternetGatewayResponse CreateInternetGateway();
    internal CreateInternetGatewayResponse CreateInternetGateway(CreateInternetGatewayRequest request);
    public sealed virtual Task`1<CreateInternetGatewayResponse> CreateInternetGatewayAsync(CreateInternetGatewayRequest request, CancellationToken cancellationToken);
    internal CreateKeyPairResponse CreateKeyPair(CreateKeyPairRequest request);
    public sealed virtual Task`1<CreateKeyPairResponse> CreateKeyPairAsync(CreateKeyPairRequest request, CancellationToken cancellationToken);
    internal CreateNetworkAclResponse CreateNetworkAcl(CreateNetworkAclRequest request);
    public sealed virtual Task`1<CreateNetworkAclResponse> CreateNetworkAclAsync(CreateNetworkAclRequest request, CancellationToken cancellationToken);
    internal CreateNetworkAclEntryResponse CreateNetworkAclEntry(CreateNetworkAclEntryRequest request);
    public sealed virtual Task`1<CreateNetworkAclEntryResponse> CreateNetworkAclEntryAsync(CreateNetworkAclEntryRequest request, CancellationToken cancellationToken);
    internal CreateNetworkInterfaceResponse CreateNetworkInterface(CreateNetworkInterfaceRequest request);
    public sealed virtual Task`1<CreateNetworkInterfaceResponse> CreateNetworkInterfaceAsync(CreateNetworkInterfaceRequest request, CancellationToken cancellationToken);
    internal CreatePlacementGroupResponse CreatePlacementGroup(CreatePlacementGroupRequest request);
    public sealed virtual Task`1<CreatePlacementGroupResponse> CreatePlacementGroupAsync(CreatePlacementGroupRequest request, CancellationToken cancellationToken);
    internal CreateReservedInstancesListingResponse CreateReservedInstancesListing(CreateReservedInstancesListingRequest request);
    public sealed virtual Task`1<CreateReservedInstancesListingResponse> CreateReservedInstancesListingAsync(CreateReservedInstancesListingRequest request, CancellationToken cancellationToken);
    internal CreateRouteResponse CreateRoute(CreateRouteRequest request);
    public sealed virtual Task`1<CreateRouteResponse> CreateRouteAsync(CreateRouteRequest request, CancellationToken cancellationToken);
    internal CreateRouteTableResponse CreateRouteTable(CreateRouteTableRequest request);
    public sealed virtual Task`1<CreateRouteTableResponse> CreateRouteTableAsync(CreateRouteTableRequest request, CancellationToken cancellationToken);
    internal CreateSecurityGroupResponse CreateSecurityGroup(CreateSecurityGroupRequest request);
    public sealed virtual Task`1<CreateSecurityGroupResponse> CreateSecurityGroupAsync(CreateSecurityGroupRequest request, CancellationToken cancellationToken);
    internal CreateSnapshotResponse CreateSnapshot(CreateSnapshotRequest request);
    public sealed virtual Task`1<CreateSnapshotResponse> CreateSnapshotAsync(CreateSnapshotRequest request, CancellationToken cancellationToken);
    internal CreateSpotDatafeedSubscriptionResponse CreateSpotDatafeedSubscription(CreateSpotDatafeedSubscriptionRequest request);
    public sealed virtual Task`1<CreateSpotDatafeedSubscriptionResponse> CreateSpotDatafeedSubscriptionAsync(CreateSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    internal CreateSubnetResponse CreateSubnet(CreateSubnetRequest request);
    public sealed virtual Task`1<CreateSubnetResponse> CreateSubnetAsync(CreateSubnetRequest request, CancellationToken cancellationToken);
    internal CreateTagsResponse CreateTags(CreateTagsRequest request);
    public sealed virtual Task`1<CreateTagsResponse> CreateTagsAsync(CreateTagsRequest request, CancellationToken cancellationToken);
    internal CreateVolumeResponse CreateVolume(CreateVolumeRequest request);
    public sealed virtual Task`1<CreateVolumeResponse> CreateVolumeAsync(CreateVolumeRequest request, CancellationToken cancellationToken);
    internal CreateVpcResponse CreateVpc(CreateVpcRequest request);
    public sealed virtual Task`1<CreateVpcResponse> CreateVpcAsync(CreateVpcRequest request, CancellationToken cancellationToken);
    internal CreateVpcEndpointResponse CreateVpcEndpoint(CreateVpcEndpointRequest request);
    public sealed virtual Task`1<CreateVpcEndpointResponse> CreateVpcEndpointAsync(CreateVpcEndpointRequest request, CancellationToken cancellationToken);
    internal CreateVpcPeeringConnectionResponse CreateVpcPeeringConnection(CreateVpcPeeringConnectionRequest request);
    public sealed virtual Task`1<CreateVpcPeeringConnectionResponse> CreateVpcPeeringConnectionAsync(CreateVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    internal CreateVpnConnectionResponse CreateVpnConnection(CreateVpnConnectionRequest request);
    public sealed virtual Task`1<CreateVpnConnectionResponse> CreateVpnConnectionAsync(CreateVpnConnectionRequest request, CancellationToken cancellationToken);
    internal CreateVpnConnectionRouteResponse CreateVpnConnectionRoute(CreateVpnConnectionRouteRequest request);
    public sealed virtual Task`1<CreateVpnConnectionRouteResponse> CreateVpnConnectionRouteAsync(CreateVpnConnectionRouteRequest request, CancellationToken cancellationToken);
    internal CreateVpnGatewayResponse CreateVpnGateway(CreateVpnGatewayRequest request);
    public sealed virtual Task`1<CreateVpnGatewayResponse> CreateVpnGatewayAsync(CreateVpnGatewayRequest request, CancellationToken cancellationToken);
    internal DeleteCustomerGatewayResponse DeleteCustomerGateway(DeleteCustomerGatewayRequest request);
    public sealed virtual Task`1<DeleteCustomerGatewayResponse> DeleteCustomerGatewayAsync(DeleteCustomerGatewayRequest request, CancellationToken cancellationToken);
    internal DeleteDhcpOptionsResponse DeleteDhcpOptions(DeleteDhcpOptionsRequest request);
    public sealed virtual Task`1<DeleteDhcpOptionsResponse> DeleteDhcpOptionsAsync(DeleteDhcpOptionsRequest request, CancellationToken cancellationToken);
    internal DeleteFlowLogsResponse DeleteFlowLogs(DeleteFlowLogsRequest request);
    public sealed virtual Task`1<DeleteFlowLogsResponse> DeleteFlowLogsAsync(DeleteFlowLogsRequest request, CancellationToken cancellationToken);
    internal DeleteInternetGatewayResponse DeleteInternetGateway(DeleteInternetGatewayRequest request);
    public sealed virtual Task`1<DeleteInternetGatewayResponse> DeleteInternetGatewayAsync(DeleteInternetGatewayRequest request, CancellationToken cancellationToken);
    internal DeleteKeyPairResponse DeleteKeyPair(DeleteKeyPairRequest request);
    public sealed virtual Task`1<DeleteKeyPairResponse> DeleteKeyPairAsync(DeleteKeyPairRequest request, CancellationToken cancellationToken);
    internal DeleteNetworkAclResponse DeleteNetworkAcl(DeleteNetworkAclRequest request);
    public sealed virtual Task`1<DeleteNetworkAclResponse> DeleteNetworkAclAsync(DeleteNetworkAclRequest request, CancellationToken cancellationToken);
    internal DeleteNetworkAclEntryResponse DeleteNetworkAclEntry(DeleteNetworkAclEntryRequest request);
    public sealed virtual Task`1<DeleteNetworkAclEntryResponse> DeleteNetworkAclEntryAsync(DeleteNetworkAclEntryRequest request, CancellationToken cancellationToken);
    internal DeleteNetworkInterfaceResponse DeleteNetworkInterface(DeleteNetworkInterfaceRequest request);
    public sealed virtual Task`1<DeleteNetworkInterfaceResponse> DeleteNetworkInterfaceAsync(DeleteNetworkInterfaceRequest request, CancellationToken cancellationToken);
    internal DeletePlacementGroupResponse DeletePlacementGroup(DeletePlacementGroupRequest request);
    public sealed virtual Task`1<DeletePlacementGroupResponse> DeletePlacementGroupAsync(DeletePlacementGroupRequest request, CancellationToken cancellationToken);
    internal DeleteRouteResponse DeleteRoute(DeleteRouteRequest request);
    public sealed virtual Task`1<DeleteRouteResponse> DeleteRouteAsync(DeleteRouteRequest request, CancellationToken cancellationToken);
    internal DeleteRouteTableResponse DeleteRouteTable(DeleteRouteTableRequest request);
    public sealed virtual Task`1<DeleteRouteTableResponse> DeleteRouteTableAsync(DeleteRouteTableRequest request, CancellationToken cancellationToken);
    internal DeleteSecurityGroupResponse DeleteSecurityGroup(DeleteSecurityGroupRequest request);
    public sealed virtual Task`1<DeleteSecurityGroupResponse> DeleteSecurityGroupAsync(DeleteSecurityGroupRequest request, CancellationToken cancellationToken);
    internal DeleteSnapshotResponse DeleteSnapshot(DeleteSnapshotRequest request);
    public sealed virtual Task`1<DeleteSnapshotResponse> DeleteSnapshotAsync(DeleteSnapshotRequest request, CancellationToken cancellationToken);
    internal DeleteSpotDatafeedSubscriptionResponse DeleteSpotDatafeedSubscription();
    internal DeleteSpotDatafeedSubscriptionResponse DeleteSpotDatafeedSubscription(DeleteSpotDatafeedSubscriptionRequest request);
    public sealed virtual Task`1<DeleteSpotDatafeedSubscriptionResponse> DeleteSpotDatafeedSubscriptionAsync(DeleteSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    internal DeleteSubnetResponse DeleteSubnet(DeleteSubnetRequest request);
    public sealed virtual Task`1<DeleteSubnetResponse> DeleteSubnetAsync(DeleteSubnetRequest request, CancellationToken cancellationToken);
    internal DeleteTagsResponse DeleteTags(DeleteTagsRequest request);
    public sealed virtual Task`1<DeleteTagsResponse> DeleteTagsAsync(DeleteTagsRequest request, CancellationToken cancellationToken);
    internal DeleteVolumeResponse DeleteVolume(DeleteVolumeRequest request);
    public sealed virtual Task`1<DeleteVolumeResponse> DeleteVolumeAsync(DeleteVolumeRequest request, CancellationToken cancellationToken);
    internal DeleteVpcResponse DeleteVpc(DeleteVpcRequest request);
    public sealed virtual Task`1<DeleteVpcResponse> DeleteVpcAsync(DeleteVpcRequest request, CancellationToken cancellationToken);
    internal DeleteVpcEndpointsResponse DeleteVpcEndpoints(DeleteVpcEndpointsRequest request);
    public sealed virtual Task`1<DeleteVpcEndpointsResponse> DeleteVpcEndpointsAsync(DeleteVpcEndpointsRequest request, CancellationToken cancellationToken);
    internal DeleteVpcPeeringConnectionResponse DeleteVpcPeeringConnection(DeleteVpcPeeringConnectionRequest request);
    public sealed virtual Task`1<DeleteVpcPeeringConnectionResponse> DeleteVpcPeeringConnectionAsync(DeleteVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    internal DeleteVpnConnectionResponse DeleteVpnConnection(DeleteVpnConnectionRequest request);
    public sealed virtual Task`1<DeleteVpnConnectionResponse> DeleteVpnConnectionAsync(DeleteVpnConnectionRequest request, CancellationToken cancellationToken);
    internal DeleteVpnConnectionRouteResponse DeleteVpnConnectionRoute(DeleteVpnConnectionRouteRequest request);
    public sealed virtual Task`1<DeleteVpnConnectionRouteResponse> DeleteVpnConnectionRouteAsync(DeleteVpnConnectionRouteRequest request, CancellationToken cancellationToken);
    internal DeleteVpnGatewayResponse DeleteVpnGateway(DeleteVpnGatewayRequest request);
    public sealed virtual Task`1<DeleteVpnGatewayResponse> DeleteVpnGatewayAsync(DeleteVpnGatewayRequest request, CancellationToken cancellationToken);
    internal DeregisterImageResponse DeregisterImage(DeregisterImageRequest request);
    public sealed virtual Task`1<DeregisterImageResponse> DeregisterImageAsync(DeregisterImageRequest request, CancellationToken cancellationToken);
    internal DescribeAccountAttributesResponse DescribeAccountAttributes();
    internal DescribeAccountAttributesResponse DescribeAccountAttributes(DescribeAccountAttributesRequest request);
    public sealed virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(DescribeAccountAttributesRequest request, CancellationToken cancellationToken);
    internal DescribeAddressesResponse DescribeAddresses();
    internal DescribeAddressesResponse DescribeAddresses(DescribeAddressesRequest request);
    public sealed virtual Task`1<DescribeAddressesResponse> DescribeAddressesAsync(DescribeAddressesRequest request, CancellationToken cancellationToken);
    internal DescribeAvailabilityZonesResponse DescribeAvailabilityZones();
    internal DescribeAvailabilityZonesResponse DescribeAvailabilityZones(DescribeAvailabilityZonesRequest request);
    public sealed virtual Task`1<DescribeAvailabilityZonesResponse> DescribeAvailabilityZonesAsync(DescribeAvailabilityZonesRequest request, CancellationToken cancellationToken);
    internal DescribeBundleTasksResponse DescribeBundleTasks();
    internal DescribeBundleTasksResponse DescribeBundleTasks(DescribeBundleTasksRequest request);
    public sealed virtual Task`1<DescribeBundleTasksResponse> DescribeBundleTasksAsync(DescribeBundleTasksRequest request, CancellationToken cancellationToken);
    internal DescribeClassicLinkInstancesResponse DescribeClassicLinkInstances(DescribeClassicLinkInstancesRequest request);
    public sealed virtual Task`1<DescribeClassicLinkInstancesResponse> DescribeClassicLinkInstancesAsync(DescribeClassicLinkInstancesRequest request, CancellationToken cancellationToken);
    internal DescribeConversionTasksResponse DescribeConversionTasks();
    internal DescribeConversionTasksResponse DescribeConversionTasks(DescribeConversionTasksRequest request);
    public sealed virtual Task`1<DescribeConversionTasksResponse> DescribeConversionTasksAsync(DescribeConversionTasksRequest request, CancellationToken cancellationToken);
    internal DescribeCustomerGatewaysResponse DescribeCustomerGateways();
    internal DescribeCustomerGatewaysResponse DescribeCustomerGateways(DescribeCustomerGatewaysRequest request);
    public sealed virtual Task`1<DescribeCustomerGatewaysResponse> DescribeCustomerGatewaysAsync(DescribeCustomerGatewaysRequest request, CancellationToken cancellationToken);
    internal DescribeDhcpOptionsResponse DescribeDhcpOptions();
    internal DescribeDhcpOptionsResponse DescribeDhcpOptions(DescribeDhcpOptionsRequest request);
    public sealed virtual Task`1<DescribeDhcpOptionsResponse> DescribeDhcpOptionsAsync(DescribeDhcpOptionsRequest request, CancellationToken cancellationToken);
    internal DescribeExportTasksResponse DescribeExportTasks();
    internal DescribeExportTasksResponse DescribeExportTasks(DescribeExportTasksRequest request);
    public sealed virtual Task`1<DescribeExportTasksResponse> DescribeExportTasksAsync(DescribeExportTasksRequest request, CancellationToken cancellationToken);
    internal DescribeFlowLogsResponse DescribeFlowLogs(DescribeFlowLogsRequest request);
    public sealed virtual Task`1<DescribeFlowLogsResponse> DescribeFlowLogsAsync(DescribeFlowLogsRequest request, CancellationToken cancellationToken);
    internal DescribeImageAttributeResponse DescribeImageAttribute(DescribeImageAttributeRequest request);
    public sealed virtual Task`1<DescribeImageAttributeResponse> DescribeImageAttributeAsync(DescribeImageAttributeRequest request, CancellationToken cancellationToken);
    internal DescribeImagesResponse DescribeImages();
    internal DescribeImagesResponse DescribeImages(DescribeImagesRequest request);
    public sealed virtual Task`1<DescribeImagesResponse> DescribeImagesAsync(DescribeImagesRequest request, CancellationToken cancellationToken);
    internal DescribeImportImageTasksResponse DescribeImportImageTasks(DescribeImportImageTasksRequest request);
    public sealed virtual Task`1<DescribeImportImageTasksResponse> DescribeImportImageTasksAsync(DescribeImportImageTasksRequest request, CancellationToken cancellationToken);
    internal DescribeImportSnapshotTasksResponse DescribeImportSnapshotTasks(DescribeImportSnapshotTasksRequest request);
    public sealed virtual Task`1<DescribeImportSnapshotTasksResponse> DescribeImportSnapshotTasksAsync(DescribeImportSnapshotTasksRequest request, CancellationToken cancellationToken);
    internal DescribeInstanceAttributeResponse DescribeInstanceAttribute(DescribeInstanceAttributeRequest request);
    public sealed virtual Task`1<DescribeInstanceAttributeResponse> DescribeInstanceAttributeAsync(DescribeInstanceAttributeRequest request, CancellationToken cancellationToken);
    internal DescribeInstancesResponse DescribeInstances();
    internal DescribeInstancesResponse DescribeInstances(DescribeInstancesRequest request);
    public sealed virtual Task`1<DescribeInstancesResponse> DescribeInstancesAsync(DescribeInstancesRequest request, CancellationToken cancellationToken);
    internal DescribeInstanceStatusResponse DescribeInstanceStatus();
    internal DescribeInstanceStatusResponse DescribeInstanceStatus(DescribeInstanceStatusRequest request);
    public sealed virtual Task`1<DescribeInstanceStatusResponse> DescribeInstanceStatusAsync(DescribeInstanceStatusRequest request, CancellationToken cancellationToken);
    internal DescribeInternetGatewaysResponse DescribeInternetGateways();
    internal DescribeInternetGatewaysResponse DescribeInternetGateways(DescribeInternetGatewaysRequest request);
    public sealed virtual Task`1<DescribeInternetGatewaysResponse> DescribeInternetGatewaysAsync(DescribeInternetGatewaysRequest request, CancellationToken cancellationToken);
    internal DescribeKeyPairsResponse DescribeKeyPairs();
    internal DescribeKeyPairsResponse DescribeKeyPairs(DescribeKeyPairsRequest request);
    public sealed virtual Task`1<DescribeKeyPairsResponse> DescribeKeyPairsAsync(DescribeKeyPairsRequest request, CancellationToken cancellationToken);
    internal DescribeMovingAddressesResponse DescribeMovingAddresses(DescribeMovingAddressesRequest request);
    public sealed virtual Task`1<DescribeMovingAddressesResponse> DescribeMovingAddressesAsync(DescribeMovingAddressesRequest request, CancellationToken cancellationToken);
    internal DescribeNetworkAclsResponse DescribeNetworkAcls();
    internal DescribeNetworkAclsResponse DescribeNetworkAcls(DescribeNetworkAclsRequest request);
    public sealed virtual Task`1<DescribeNetworkAclsResponse> DescribeNetworkAclsAsync(DescribeNetworkAclsRequest request, CancellationToken cancellationToken);
    internal DescribeNetworkInterfaceAttributeResponse DescribeNetworkInterfaceAttribute(DescribeNetworkInterfaceAttributeRequest request);
    public sealed virtual Task`1<DescribeNetworkInterfaceAttributeResponse> DescribeNetworkInterfaceAttributeAsync(DescribeNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    internal DescribeNetworkInterfacesResponse DescribeNetworkInterfaces();
    internal DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request);
    public sealed virtual Task`1<DescribeNetworkInterfacesResponse> DescribeNetworkInterfacesAsync(DescribeNetworkInterfacesRequest request, CancellationToken cancellationToken);
    internal DescribePlacementGroupsResponse DescribePlacementGroups();
    internal DescribePlacementGroupsResponse DescribePlacementGroups(DescribePlacementGroupsRequest request);
    public sealed virtual Task`1<DescribePlacementGroupsResponse> DescribePlacementGroupsAsync(DescribePlacementGroupsRequest request, CancellationToken cancellationToken);
    internal DescribePrefixListsResponse DescribePrefixLists(DescribePrefixListsRequest request);
    public sealed virtual Task`1<DescribePrefixListsResponse> DescribePrefixListsAsync(DescribePrefixListsRequest request, CancellationToken cancellationToken);
    internal DescribeRegionsResponse DescribeRegions();
    internal DescribeRegionsResponse DescribeRegions(DescribeRegionsRequest request);
    public sealed virtual Task`1<DescribeRegionsResponse> DescribeRegionsAsync(DescribeRegionsRequest request, CancellationToken cancellationToken);
    internal DescribeReservedInstancesResponse DescribeReservedInstances();
    internal DescribeReservedInstancesResponse DescribeReservedInstances(DescribeReservedInstancesRequest request);
    public sealed virtual Task`1<DescribeReservedInstancesResponse> DescribeReservedInstancesAsync(DescribeReservedInstancesRequest request, CancellationToken cancellationToken);
    internal DescribeReservedInstancesListingsResponse DescribeReservedInstancesListings();
    internal DescribeReservedInstancesListingsResponse DescribeReservedInstancesListings(DescribeReservedInstancesListingsRequest request);
    public sealed virtual Task`1<DescribeReservedInstancesListingsResponse> DescribeReservedInstancesListingsAsync(DescribeReservedInstancesListingsRequest request, CancellationToken cancellationToken);
    internal DescribeReservedInstancesModificationsResponse DescribeReservedInstancesModifications();
    internal DescribeReservedInstancesModificationsResponse DescribeReservedInstancesModifications(DescribeReservedInstancesModificationsRequest request);
    public sealed virtual Task`1<DescribeReservedInstancesModificationsResponse> DescribeReservedInstancesModificationsAsync(DescribeReservedInstancesModificationsRequest request, CancellationToken cancellationToken);
    internal DescribeReservedInstancesOfferingsResponse DescribeReservedInstancesOfferings();
    internal DescribeReservedInstancesOfferingsResponse DescribeReservedInstancesOfferings(DescribeReservedInstancesOfferingsRequest request);
    public sealed virtual Task`1<DescribeReservedInstancesOfferingsResponse> DescribeReservedInstancesOfferingsAsync(DescribeReservedInstancesOfferingsRequest request, CancellationToken cancellationToken);
    internal DescribeRouteTablesResponse DescribeRouteTables();
    internal DescribeRouteTablesResponse DescribeRouteTables(DescribeRouteTablesRequest request);
    public sealed virtual Task`1<DescribeRouteTablesResponse> DescribeRouteTablesAsync(DescribeRouteTablesRequest request, CancellationToken cancellationToken);
    internal DescribeSecurityGroupsResponse DescribeSecurityGroups();
    internal DescribeSecurityGroupsResponse DescribeSecurityGroups(DescribeSecurityGroupsRequest request);
    public sealed virtual Task`1<DescribeSecurityGroupsResponse> DescribeSecurityGroupsAsync(DescribeSecurityGroupsRequest request, CancellationToken cancellationToken);
    internal DescribeSnapshotAttributeResponse DescribeSnapshotAttribute(DescribeSnapshotAttributeRequest request);
    public sealed virtual Task`1<DescribeSnapshotAttributeResponse> DescribeSnapshotAttributeAsync(DescribeSnapshotAttributeRequest request, CancellationToken cancellationToken);
    internal DescribeSnapshotsResponse DescribeSnapshots();
    internal DescribeSnapshotsResponse DescribeSnapshots(DescribeSnapshotsRequest request);
    public sealed virtual Task`1<DescribeSnapshotsResponse> DescribeSnapshotsAsync(DescribeSnapshotsRequest request, CancellationToken cancellationToken);
    internal DescribeSpotDatafeedSubscriptionResponse DescribeSpotDatafeedSubscription();
    internal DescribeSpotDatafeedSubscriptionResponse DescribeSpotDatafeedSubscription(DescribeSpotDatafeedSubscriptionRequest request);
    public sealed virtual Task`1<DescribeSpotDatafeedSubscriptionResponse> DescribeSpotDatafeedSubscriptionAsync(DescribeSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    internal DescribeSpotFleetInstancesResponse DescribeSpotFleetInstances(DescribeSpotFleetInstancesRequest request);
    public sealed virtual Task`1<DescribeSpotFleetInstancesResponse> DescribeSpotFleetInstancesAsync(DescribeSpotFleetInstancesRequest request, CancellationToken cancellationToken);
    internal DescribeSpotFleetRequestHistoryResponse DescribeSpotFleetRequestHistory(DescribeSpotFleetRequestHistoryRequest request);
    public sealed virtual Task`1<DescribeSpotFleetRequestHistoryResponse> DescribeSpotFleetRequestHistoryAsync(DescribeSpotFleetRequestHistoryRequest request, CancellationToken cancellationToken);
    internal DescribeSpotFleetRequestsResponse DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request);
    public sealed virtual Task`1<DescribeSpotFleetRequestsResponse> DescribeSpotFleetRequestsAsync(DescribeSpotFleetRequestsRequest request, CancellationToken cancellationToken);
    internal DescribeSpotInstanceRequestsResponse DescribeSpotInstanceRequests();
    internal DescribeSpotInstanceRequestsResponse DescribeSpotInstanceRequests(DescribeSpotInstanceRequestsRequest request);
    public sealed virtual Task`1<DescribeSpotInstanceRequestsResponse> DescribeSpotInstanceRequestsAsync(DescribeSpotInstanceRequestsRequest request, CancellationToken cancellationToken);
    internal DescribeSpotPriceHistoryResponse DescribeSpotPriceHistory();
    internal DescribeSpotPriceHistoryResponse DescribeSpotPriceHistory(DescribeSpotPriceHistoryRequest request);
    public sealed virtual Task`1<DescribeSpotPriceHistoryResponse> DescribeSpotPriceHistoryAsync(DescribeSpotPriceHistoryRequest request, CancellationToken cancellationToken);
    internal DescribeSubnetsResponse DescribeSubnets();
    internal DescribeSubnetsResponse DescribeSubnets(DescribeSubnetsRequest request);
    public sealed virtual Task`1<DescribeSubnetsResponse> DescribeSubnetsAsync(DescribeSubnetsRequest request, CancellationToken cancellationToken);
    internal DescribeTagsResponse DescribeTags();
    internal DescribeTagsResponse DescribeTags(DescribeTagsRequest request);
    public sealed virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    internal DescribeVolumeAttributeResponse DescribeVolumeAttribute(DescribeVolumeAttributeRequest request);
    public sealed virtual Task`1<DescribeVolumeAttributeResponse> DescribeVolumeAttributeAsync(DescribeVolumeAttributeRequest request, CancellationToken cancellationToken);
    internal DescribeVolumesResponse DescribeVolumes();
    internal DescribeVolumesResponse DescribeVolumes(DescribeVolumesRequest request);
    public sealed virtual Task`1<DescribeVolumesResponse> DescribeVolumesAsync(DescribeVolumesRequest request, CancellationToken cancellationToken);
    internal DescribeVolumeStatusResponse DescribeVolumeStatus();
    internal DescribeVolumeStatusResponse DescribeVolumeStatus(DescribeVolumeStatusRequest request);
    public sealed virtual Task`1<DescribeVolumeStatusResponse> DescribeVolumeStatusAsync(DescribeVolumeStatusRequest request, CancellationToken cancellationToken);
    internal DescribeVpcAttributeResponse DescribeVpcAttribute(DescribeVpcAttributeRequest request);
    public sealed virtual Task`1<DescribeVpcAttributeResponse> DescribeVpcAttributeAsync(DescribeVpcAttributeRequest request, CancellationToken cancellationToken);
    internal DescribeVpcClassicLinkResponse DescribeVpcClassicLink(DescribeVpcClassicLinkRequest request);
    public sealed virtual Task`1<DescribeVpcClassicLinkResponse> DescribeVpcClassicLinkAsync(DescribeVpcClassicLinkRequest request, CancellationToken cancellationToken);
    internal DescribeVpcEndpointsResponse DescribeVpcEndpoints(DescribeVpcEndpointsRequest request);
    public sealed virtual Task`1<DescribeVpcEndpointsResponse> DescribeVpcEndpointsAsync(DescribeVpcEndpointsRequest request, CancellationToken cancellationToken);
    internal DescribeVpcEndpointServicesResponse DescribeVpcEndpointServices(DescribeVpcEndpointServicesRequest request);
    public sealed virtual Task`1<DescribeVpcEndpointServicesResponse> DescribeVpcEndpointServicesAsync(DescribeVpcEndpointServicesRequest request, CancellationToken cancellationToken);
    internal DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections();
    internal DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections(DescribeVpcPeeringConnectionsRequest request);
    public sealed virtual Task`1<DescribeVpcPeeringConnectionsResponse> DescribeVpcPeeringConnectionsAsync(DescribeVpcPeeringConnectionsRequest request, CancellationToken cancellationToken);
    internal DescribeVpcsResponse DescribeVpcs();
    internal DescribeVpcsResponse DescribeVpcs(DescribeVpcsRequest request);
    public sealed virtual Task`1<DescribeVpcsResponse> DescribeVpcsAsync(DescribeVpcsRequest request, CancellationToken cancellationToken);
    internal DescribeVpnConnectionsResponse DescribeVpnConnections();
    internal DescribeVpnConnectionsResponse DescribeVpnConnections(DescribeVpnConnectionsRequest request);
    public sealed virtual Task`1<DescribeVpnConnectionsResponse> DescribeVpnConnectionsAsync(DescribeVpnConnectionsRequest request, CancellationToken cancellationToken);
    internal DescribeVpnGatewaysResponse DescribeVpnGateways();
    internal DescribeVpnGatewaysResponse DescribeVpnGateways(DescribeVpnGatewaysRequest request);
    public sealed virtual Task`1<DescribeVpnGatewaysResponse> DescribeVpnGatewaysAsync(DescribeVpnGatewaysRequest request, CancellationToken cancellationToken);
    internal DetachClassicLinkVpcResponse DetachClassicLinkVpc(DetachClassicLinkVpcRequest request);
    public sealed virtual Task`1<DetachClassicLinkVpcResponse> DetachClassicLinkVpcAsync(DetachClassicLinkVpcRequest request, CancellationToken cancellationToken);
    internal DetachInternetGatewayResponse DetachInternetGateway(DetachInternetGatewayRequest request);
    public sealed virtual Task`1<DetachInternetGatewayResponse> DetachInternetGatewayAsync(DetachInternetGatewayRequest request, CancellationToken cancellationToken);
    internal DetachNetworkInterfaceResponse DetachNetworkInterface(DetachNetworkInterfaceRequest request);
    public sealed virtual Task`1<DetachNetworkInterfaceResponse> DetachNetworkInterfaceAsync(DetachNetworkInterfaceRequest request, CancellationToken cancellationToken);
    internal DetachVolumeResponse DetachVolume(DetachVolumeRequest request);
    public sealed virtual Task`1<DetachVolumeResponse> DetachVolumeAsync(DetachVolumeRequest request, CancellationToken cancellationToken);
    internal DetachVpnGatewayResponse DetachVpnGateway(DetachVpnGatewayRequest request);
    public sealed virtual Task`1<DetachVpnGatewayResponse> DetachVpnGatewayAsync(DetachVpnGatewayRequest request, CancellationToken cancellationToken);
    internal DisableVgwRoutePropagationResponse DisableVgwRoutePropagation(DisableVgwRoutePropagationRequest request);
    public sealed virtual Task`1<DisableVgwRoutePropagationResponse> DisableVgwRoutePropagationAsync(DisableVgwRoutePropagationRequest request, CancellationToken cancellationToken);
    internal DisableVpcClassicLinkResponse DisableVpcClassicLink(DisableVpcClassicLinkRequest request);
    public sealed virtual Task`1<DisableVpcClassicLinkResponse> DisableVpcClassicLinkAsync(DisableVpcClassicLinkRequest request, CancellationToken cancellationToken);
    internal DisassociateAddressResponse DisassociateAddress(DisassociateAddressRequest request);
    public sealed virtual Task`1<DisassociateAddressResponse> DisassociateAddressAsync(DisassociateAddressRequest request, CancellationToken cancellationToken);
    internal DisassociateRouteTableResponse DisassociateRouteTable(DisassociateRouteTableRequest request);
    public sealed virtual Task`1<DisassociateRouteTableResponse> DisassociateRouteTableAsync(DisassociateRouteTableRequest request, CancellationToken cancellationToken);
    internal EnableVgwRoutePropagationResponse EnableVgwRoutePropagation(EnableVgwRoutePropagationRequest request);
    public sealed virtual Task`1<EnableVgwRoutePropagationResponse> EnableVgwRoutePropagationAsync(EnableVgwRoutePropagationRequest request, CancellationToken cancellationToken);
    internal EnableVolumeIOResponse EnableVolumeIO(EnableVolumeIORequest request);
    public sealed virtual Task`1<EnableVolumeIOResponse> EnableVolumeIOAsync(EnableVolumeIORequest request, CancellationToken cancellationToken);
    internal EnableVpcClassicLinkResponse EnableVpcClassicLink(EnableVpcClassicLinkRequest request);
    public sealed virtual Task`1<EnableVpcClassicLinkResponse> EnableVpcClassicLinkAsync(EnableVpcClassicLinkRequest request, CancellationToken cancellationToken);
    internal GetConsoleOutputResponse GetConsoleOutput(GetConsoleOutputRequest request);
    public sealed virtual Task`1<GetConsoleOutputResponse> GetConsoleOutputAsync(GetConsoleOutputRequest request, CancellationToken cancellationToken);
    internal GetPasswordDataResponse GetPasswordData(GetPasswordDataRequest request);
    public sealed virtual Task`1<GetPasswordDataResponse> GetPasswordDataAsync(GetPasswordDataRequest request, CancellationToken cancellationToken);
    internal ImportImageResponse ImportImage(ImportImageRequest request);
    public sealed virtual Task`1<ImportImageResponse> ImportImageAsync(ImportImageRequest request, CancellationToken cancellationToken);
    internal ImportInstanceResponse ImportInstance(ImportInstanceRequest request);
    public sealed virtual Task`1<ImportInstanceResponse> ImportInstanceAsync(ImportInstanceRequest request, CancellationToken cancellationToken);
    internal ImportKeyPairResponse ImportKeyPair(ImportKeyPairRequest request);
    public sealed virtual Task`1<ImportKeyPairResponse> ImportKeyPairAsync(ImportKeyPairRequest request, CancellationToken cancellationToken);
    internal ImportSnapshotResponse ImportSnapshot(ImportSnapshotRequest request);
    public sealed virtual Task`1<ImportSnapshotResponse> ImportSnapshotAsync(ImportSnapshotRequest request, CancellationToken cancellationToken);
    internal ImportVolumeResponse ImportVolume(ImportVolumeRequest request);
    public sealed virtual Task`1<ImportVolumeResponse> ImportVolumeAsync(ImportVolumeRequest request, CancellationToken cancellationToken);
    internal ModifyImageAttributeResponse ModifyImageAttribute(ModifyImageAttributeRequest request);
    public sealed virtual Task`1<ModifyImageAttributeResponse> ModifyImageAttributeAsync(ModifyImageAttributeRequest request, CancellationToken cancellationToken);
    internal ModifyInstanceAttributeResponse ModifyInstanceAttribute(ModifyInstanceAttributeRequest request);
    public sealed virtual Task`1<ModifyInstanceAttributeResponse> ModifyInstanceAttributeAsync(ModifyInstanceAttributeRequest request, CancellationToken cancellationToken);
    internal ModifyNetworkInterfaceAttributeResponse ModifyNetworkInterfaceAttribute(ModifyNetworkInterfaceAttributeRequest request);
    public sealed virtual Task`1<ModifyNetworkInterfaceAttributeResponse> ModifyNetworkInterfaceAttributeAsync(ModifyNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    internal ModifyReservedInstancesResponse ModifyReservedInstances(ModifyReservedInstancesRequest request);
    public sealed virtual Task`1<ModifyReservedInstancesResponse> ModifyReservedInstancesAsync(ModifyReservedInstancesRequest request, CancellationToken cancellationToken);
    internal ModifySnapshotAttributeResponse ModifySnapshotAttribute(ModifySnapshotAttributeRequest request);
    public sealed virtual Task`1<ModifySnapshotAttributeResponse> ModifySnapshotAttributeAsync(ModifySnapshotAttributeRequest request, CancellationToken cancellationToken);
    internal ModifySubnetAttributeResponse ModifySubnetAttribute(ModifySubnetAttributeRequest request);
    public sealed virtual Task`1<ModifySubnetAttributeResponse> ModifySubnetAttributeAsync(ModifySubnetAttributeRequest request, CancellationToken cancellationToken);
    internal ModifyVolumeAttributeResponse ModifyVolumeAttribute(ModifyVolumeAttributeRequest request);
    public sealed virtual Task`1<ModifyVolumeAttributeResponse> ModifyVolumeAttributeAsync(ModifyVolumeAttributeRequest request, CancellationToken cancellationToken);
    internal ModifyVpcAttributeResponse ModifyVpcAttribute(ModifyVpcAttributeRequest request);
    public sealed virtual Task`1<ModifyVpcAttributeResponse> ModifyVpcAttributeAsync(ModifyVpcAttributeRequest request, CancellationToken cancellationToken);
    internal ModifyVpcEndpointResponse ModifyVpcEndpoint(ModifyVpcEndpointRequest request);
    public sealed virtual Task`1<ModifyVpcEndpointResponse> ModifyVpcEndpointAsync(ModifyVpcEndpointRequest request, CancellationToken cancellationToken);
    internal MonitorInstancesResponse MonitorInstances(MonitorInstancesRequest request);
    public sealed virtual Task`1<MonitorInstancesResponse> MonitorInstancesAsync(MonitorInstancesRequest request, CancellationToken cancellationToken);
    internal MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request);
    public sealed virtual Task`1<MoveAddressToVpcResponse> MoveAddressToVpcAsync(MoveAddressToVpcRequest request, CancellationToken cancellationToken);
    internal PurchaseReservedInstancesOfferingResponse PurchaseReservedInstancesOffering(PurchaseReservedInstancesOfferingRequest request);
    public sealed virtual Task`1<PurchaseReservedInstancesOfferingResponse> PurchaseReservedInstancesOfferingAsync(PurchaseReservedInstancesOfferingRequest request, CancellationToken cancellationToken);
    internal RebootInstancesResponse RebootInstances(RebootInstancesRequest request);
    public sealed virtual Task`1<RebootInstancesResponse> RebootInstancesAsync(RebootInstancesRequest request, CancellationToken cancellationToken);
    internal RegisterImageResponse RegisterImage(RegisterImageRequest request);
    public sealed virtual Task`1<RegisterImageResponse> RegisterImageAsync(RegisterImageRequest request, CancellationToken cancellationToken);
    internal RejectVpcPeeringConnectionResponse RejectVpcPeeringConnection(RejectVpcPeeringConnectionRequest request);
    public sealed virtual Task`1<RejectVpcPeeringConnectionResponse> RejectVpcPeeringConnectionAsync(RejectVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    internal ReleaseAddressResponse ReleaseAddress(ReleaseAddressRequest request);
    public sealed virtual Task`1<ReleaseAddressResponse> ReleaseAddressAsync(ReleaseAddressRequest request, CancellationToken cancellationToken);
    internal ReplaceNetworkAclAssociationResponse ReplaceNetworkAclAssociation(ReplaceNetworkAclAssociationRequest request);
    public sealed virtual Task`1<ReplaceNetworkAclAssociationResponse> ReplaceNetworkAclAssociationAsync(ReplaceNetworkAclAssociationRequest request, CancellationToken cancellationToken);
    internal ReplaceNetworkAclEntryResponse ReplaceNetworkAclEntry(ReplaceNetworkAclEntryRequest request);
    public sealed virtual Task`1<ReplaceNetworkAclEntryResponse> ReplaceNetworkAclEntryAsync(ReplaceNetworkAclEntryRequest request, CancellationToken cancellationToken);
    internal ReplaceRouteResponse ReplaceRoute(ReplaceRouteRequest request);
    public sealed virtual Task`1<ReplaceRouteResponse> ReplaceRouteAsync(ReplaceRouteRequest request, CancellationToken cancellationToken);
    internal ReplaceRouteTableAssociationResponse ReplaceRouteTableAssociation(ReplaceRouteTableAssociationRequest request);
    public sealed virtual Task`1<ReplaceRouteTableAssociationResponse> ReplaceRouteTableAssociationAsync(ReplaceRouteTableAssociationRequest request, CancellationToken cancellationToken);
    internal ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request);
    public sealed virtual Task`1<ReportInstanceStatusResponse> ReportInstanceStatusAsync(ReportInstanceStatusRequest request, CancellationToken cancellationToken);
    internal RequestSpotFleetResponse RequestSpotFleet(RequestSpotFleetRequest request);
    public sealed virtual Task`1<RequestSpotFleetResponse> RequestSpotFleetAsync(RequestSpotFleetRequest request, CancellationToken cancellationToken);
    internal RequestSpotInstancesResponse RequestSpotInstances(RequestSpotInstancesRequest request);
    public sealed virtual Task`1<RequestSpotInstancesResponse> RequestSpotInstancesAsync(RequestSpotInstancesRequest request, CancellationToken cancellationToken);
    internal ResetImageAttributeResponse ResetImageAttribute(ResetImageAttributeRequest request);
    public sealed virtual Task`1<ResetImageAttributeResponse> ResetImageAttributeAsync(ResetImageAttributeRequest request, CancellationToken cancellationToken);
    internal ResetInstanceAttributeResponse ResetInstanceAttribute(ResetInstanceAttributeRequest request);
    public sealed virtual Task`1<ResetInstanceAttributeResponse> ResetInstanceAttributeAsync(ResetInstanceAttributeRequest request, CancellationToken cancellationToken);
    internal ResetNetworkInterfaceAttributeResponse ResetNetworkInterfaceAttribute(ResetNetworkInterfaceAttributeRequest request);
    public sealed virtual Task`1<ResetNetworkInterfaceAttributeResponse> ResetNetworkInterfaceAttributeAsync(ResetNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    internal ResetSnapshotAttributeResponse ResetSnapshotAttribute(ResetSnapshotAttributeRequest request);
    public sealed virtual Task`1<ResetSnapshotAttributeResponse> ResetSnapshotAttributeAsync(ResetSnapshotAttributeRequest request, CancellationToken cancellationToken);
    internal RestoreAddressToClassicResponse RestoreAddressToClassic(RestoreAddressToClassicRequest request);
    public sealed virtual Task`1<RestoreAddressToClassicResponse> RestoreAddressToClassicAsync(RestoreAddressToClassicRequest request, CancellationToken cancellationToken);
    internal RevokeSecurityGroupEgressResponse RevokeSecurityGroupEgress(RevokeSecurityGroupEgressRequest request);
    public sealed virtual Task`1<RevokeSecurityGroupEgressResponse> RevokeSecurityGroupEgressAsync(RevokeSecurityGroupEgressRequest request, CancellationToken cancellationToken);
    internal RevokeSecurityGroupIngressResponse RevokeSecurityGroupIngress(RevokeSecurityGroupIngressRequest request);
    public sealed virtual Task`1<RevokeSecurityGroupIngressResponse> RevokeSecurityGroupIngressAsync(RevokeSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    internal RunInstancesResponse RunInstances(RunInstancesRequest request);
    public sealed virtual Task`1<RunInstancesResponse> RunInstancesAsync(RunInstancesRequest request, CancellationToken cancellationToken);
    internal StartInstancesResponse StartInstances(StartInstancesRequest request);
    public sealed virtual Task`1<StartInstancesResponse> StartInstancesAsync(StartInstancesRequest request, CancellationToken cancellationToken);
    internal StopInstancesResponse StopInstances(StopInstancesRequest request);
    public sealed virtual Task`1<StopInstancesResponse> StopInstancesAsync(StopInstancesRequest request, CancellationToken cancellationToken);
    internal TerminateInstancesResponse TerminateInstances(TerminateInstancesRequest request);
    public sealed virtual Task`1<TerminateInstancesResponse> TerminateInstancesAsync(TerminateInstancesRequest request, CancellationToken cancellationToken);
    internal UnassignPrivateIpAddressesResponse UnassignPrivateIpAddresses(UnassignPrivateIpAddressesRequest request);
    public sealed virtual Task`1<UnassignPrivateIpAddressesResponse> UnassignPrivateIpAddressesAsync(UnassignPrivateIpAddressesRequest request, CancellationToken cancellationToken);
    internal UnmonitorInstancesResponse UnmonitorInstances(UnmonitorInstancesRequest request);
    public sealed virtual Task`1<UnmonitorInstancesResponse> UnmonitorInstancesAsync(UnmonitorInstancesRequest request, CancellationToken cancellationToken);
}
public class Amazon.EC2.AmazonEC2Config : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.EC2.AmazonEC2Exception : AmazonServiceException {
    public AmazonEC2Exception(string message);
    public AmazonEC2Exception(string message, Exception innerException);
    public AmazonEC2Exception(Exception innerException);
    public AmazonEC2Exception(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonEC2Exception(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.EC2.AmazonEC2Request : AmazonWebServiceRequest {
}
public class Amazon.EC2.ArchitectureValues : ConstantClass {
    public static ArchitectureValues I386;
    public static ArchitectureValues X86_64;
    public ArchitectureValues(string value);
    private static ArchitectureValues();
    public static ArchitectureValues FindValue(string value);
    public static ArchitectureValues op_Implicit(string value);
}
public class Amazon.EC2.AttachmentStatus : ConstantClass {
    public static AttachmentStatus Attached;
    public static AttachmentStatus Attaching;
    public static AttachmentStatus Detached;
    public static AttachmentStatus Detaching;
    public AttachmentStatus(string value);
    private static AttachmentStatus();
    public static AttachmentStatus FindValue(string value);
    public static AttachmentStatus op_Implicit(string value);
}
public class Amazon.EC2.AvailabilityZoneState : ConstantClass {
    public static AvailabilityZoneState Available;
    public AvailabilityZoneState(string value);
    private static AvailabilityZoneState();
    public static AvailabilityZoneState FindValue(string value);
    public static AvailabilityZoneState op_Implicit(string value);
}
public class Amazon.EC2.BatchState : ConstantClass {
    public static BatchState Active;
    public static BatchState Cancelled;
    public static BatchState Cancelled_running;
    public static BatchState Cancelled_terminating;
    public static BatchState Failed;
    public static BatchState Submitted;
    public BatchState(string value);
    private static BatchState();
    public static BatchState FindValue(string value);
    public static BatchState op_Implicit(string value);
}
public class Amazon.EC2.BundleTaskState : ConstantClass {
    public static BundleTaskState Bundling;
    public static BundleTaskState Cancelling;
    public static BundleTaskState Complete;
    public static BundleTaskState Failed;
    public static BundleTaskState Pending;
    public static BundleTaskState Storing;
    public static BundleTaskState WaitingForShutdown;
    public BundleTaskState(string value);
    private static BundleTaskState();
    public static BundleTaskState FindValue(string value);
    public static BundleTaskState op_Implicit(string value);
}
public class Amazon.EC2.CancelBatchErrorCode : ConstantClass {
    public static CancelBatchErrorCode FleetRequestIdDoesNotExist;
    public static CancelBatchErrorCode FleetRequestIdMalformed;
    public static CancelBatchErrorCode FleetRequestNotInCancellableState;
    public static CancelBatchErrorCode UnexpectedError;
    public CancelBatchErrorCode(string value);
    private static CancelBatchErrorCode();
    public static CancelBatchErrorCode FindValue(string value);
    public static CancelBatchErrorCode op_Implicit(string value);
}
public class Amazon.EC2.CancelSpotInstanceRequestState : ConstantClass {
    public static CancelSpotInstanceRequestState Active;
    public static CancelSpotInstanceRequestState Cancelled;
    public static CancelSpotInstanceRequestState Closed;
    public static CancelSpotInstanceRequestState Completed;
    public static CancelSpotInstanceRequestState Open;
    public CancelSpotInstanceRequestState(string value);
    private static CancelSpotInstanceRequestState();
    public static CancelSpotInstanceRequestState FindValue(string value);
    public static CancelSpotInstanceRequestState op_Implicit(string value);
}
public class Amazon.EC2.ContainerFormat : ConstantClass {
    public static ContainerFormat Ova;
    public ContainerFormat(string value);
    private static ContainerFormat();
    public static ContainerFormat FindValue(string value);
    public static ContainerFormat op_Implicit(string value);
}
public class Amazon.EC2.ConversionTaskState : ConstantClass {
    public static ConversionTaskState Active;
    public static ConversionTaskState Cancelled;
    public static ConversionTaskState Cancelling;
    public static ConversionTaskState Completed;
    public ConversionTaskState(string value);
    private static ConversionTaskState();
    public static ConversionTaskState FindValue(string value);
    public static ConversionTaskState op_Implicit(string value);
}
public class Amazon.EC2.CurrencyCodeValues : ConstantClass {
    public static CurrencyCodeValues USD;
    public CurrencyCodeValues(string value);
    private static CurrencyCodeValues();
    public static CurrencyCodeValues FindValue(string value);
    public static CurrencyCodeValues op_Implicit(string value);
}
public class Amazon.EC2.DatafeedSubscriptionState : ConstantClass {
    public static DatafeedSubscriptionState Active;
    public static DatafeedSubscriptionState Inactive;
    public DatafeedSubscriptionState(string value);
    private static DatafeedSubscriptionState();
    public static DatafeedSubscriptionState FindValue(string value);
    public static DatafeedSubscriptionState op_Implicit(string value);
}
public class Amazon.EC2.DeviceType : ConstantClass {
    public static DeviceType Ebs;
    public static DeviceType InstanceStore;
    public DeviceType(string value);
    private static DeviceType();
    public static DeviceType FindValue(string value);
    public static DeviceType op_Implicit(string value);
}
public class Amazon.EC2.DiskImageFormat : ConstantClass {
    public static DiskImageFormat RAW;
    public static DiskImageFormat VHD;
    public static DiskImageFormat VMDK;
    public DiskImageFormat(string value);
    private static DiskImageFormat();
    public static DiskImageFormat FindValue(string value);
    public static DiskImageFormat op_Implicit(string value);
}
public class Amazon.EC2.DomainType : ConstantClass {
    public static DomainType Standard;
    public static DomainType Vpc;
    public DomainType(string value);
    private static DomainType();
    public static DomainType FindValue(string value);
    public static DomainType op_Implicit(string value);
}
public class Amazon.EC2.EventCode : ConstantClass {
    public static EventCode InstanceReboot;
    public static EventCode InstanceRetirement;
    public static EventCode InstanceStop;
    public static EventCode SystemMaintenance;
    public static EventCode SystemReboot;
    public EventCode(string value);
    private static EventCode();
    public static EventCode FindValue(string value);
    public static EventCode op_Implicit(string value);
}
public class Amazon.EC2.EventType : ConstantClass {
    public static EventType Error;
    public static EventType FleetRequestChange;
    public static EventType InstanceChange;
    public EventType(string value);
    private static EventType();
    public static EventType FindValue(string value);
    public static EventType op_Implicit(string value);
}
public class Amazon.EC2.ExportEnvironment : ConstantClass {
    public static ExportEnvironment Citrix;
    public static ExportEnvironment Microsoft;
    public static ExportEnvironment Vmware;
    public ExportEnvironment(string value);
    private static ExportEnvironment();
    public static ExportEnvironment FindValue(string value);
    public static ExportEnvironment op_Implicit(string value);
}
public class Amazon.EC2.ExportTaskState : ConstantClass {
    public static ExportTaskState Active;
    public static ExportTaskState Cancelled;
    public static ExportTaskState Cancelling;
    public static ExportTaskState Completed;
    public ExportTaskState(string value);
    private static ExportTaskState();
    public static ExportTaskState FindValue(string value);
    public static ExportTaskState op_Implicit(string value);
}
public class Amazon.EC2.FlowLogsResourceType : ConstantClass {
    public static FlowLogsResourceType NetworkInterface;
    public static FlowLogsResourceType Subnet;
    public static FlowLogsResourceType VPC;
    public FlowLogsResourceType(string value);
    private static FlowLogsResourceType();
    public static FlowLogsResourceType FindValue(string value);
    public static FlowLogsResourceType op_Implicit(string value);
}
public class Amazon.EC2.GatewayType : ConstantClass {
    public static GatewayType Ipsec1;
    public GatewayType(string value);
    private static GatewayType();
    public static GatewayType FindValue(string value);
    public static GatewayType op_Implicit(string value);
}
public class Amazon.EC2.HypervisorType : ConstantClass {
    public static HypervisorType Ovm;
    public static HypervisorType Xen;
    public HypervisorType(string value);
    private static HypervisorType();
    public static HypervisorType FindValue(string value);
    public static HypervisorType op_Implicit(string value);
}
public interface Amazon.EC2.IAmazonEC2 {
    public abstract virtual Task`1<AcceptVpcPeeringConnectionResponse> AcceptVpcPeeringConnectionAsync(AcceptVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AllocateAddressResponse> AllocateAddressAsync(AllocateAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssignPrivateIpAddressesResponse> AssignPrivateIpAddressesAsync(AssignPrivateIpAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateAddressResponse> AssociateAddressAsync(AssociateAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateDhcpOptionsResponse> AssociateDhcpOptionsAsync(AssociateDhcpOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateRouteTableResponse> AssociateRouteTableAsync(AssociateRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachClassicLinkVpcResponse> AttachClassicLinkVpcAsync(AttachClassicLinkVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachInternetGatewayResponse> AttachInternetGatewayAsync(AttachInternetGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachNetworkInterfaceResponse> AttachNetworkInterfaceAsync(AttachNetworkInterfaceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachVolumeResponse> AttachVolumeAsync(AttachVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachVpnGatewayResponse> AttachVpnGatewayAsync(AttachVpnGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AuthorizeSecurityGroupEgressResponse> AuthorizeSecurityGroupEgressAsync(AuthorizeSecurityGroupEgressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AuthorizeSecurityGroupIngressResponse> AuthorizeSecurityGroupIngressAsync(AuthorizeSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BundleInstanceResponse> BundleInstanceAsync(BundleInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelBundleTaskResponse> CancelBundleTaskAsync(CancelBundleTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelConversionTaskResponse> CancelConversionTaskAsync(CancelConversionTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelExportTaskResponse> CancelExportTaskAsync(CancelExportTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelImportTaskResponse> CancelImportTaskAsync(CancelImportTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelReservedInstancesListingResponse> CancelReservedInstancesListingAsync(CancelReservedInstancesListingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelSpotFleetRequestsResponse> CancelSpotFleetRequestsAsync(CancelSpotFleetRequestsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelSpotInstanceRequestsResponse> CancelSpotInstanceRequestsAsync(CancelSpotInstanceRequestsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ConfirmProductInstanceResponse> ConfirmProductInstanceAsync(ConfirmProductInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyImageResponse> CopyImageAsync(CopyImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopySnapshotResponse> CopySnapshotAsync(CopySnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCustomerGatewayResponse> CreateCustomerGatewayAsync(CreateCustomerGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDhcpOptionsResponse> CreateDhcpOptionsAsync(CreateDhcpOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFlowLogsResponse> CreateFlowLogsAsync(CreateFlowLogsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateImageResponse> CreateImageAsync(CreateImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateInstanceExportTaskResponse> CreateInstanceExportTaskAsync(CreateInstanceExportTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateInternetGatewayResponse> CreateInternetGatewayAsync(CreateInternetGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateKeyPairResponse> CreateKeyPairAsync(CreateKeyPairRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNetworkAclResponse> CreateNetworkAclAsync(CreateNetworkAclRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNetworkAclEntryResponse> CreateNetworkAclEntryAsync(CreateNetworkAclEntryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateNetworkInterfaceResponse> CreateNetworkInterfaceAsync(CreateNetworkInterfaceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreatePlacementGroupResponse> CreatePlacementGroupAsync(CreatePlacementGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReservedInstancesListingResponse> CreateReservedInstancesListingAsync(CreateReservedInstancesListingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateRouteResponse> CreateRouteAsync(CreateRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateRouteTableResponse> CreateRouteTableAsync(CreateRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSecurityGroupResponse> CreateSecurityGroupAsync(CreateSecurityGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSnapshotResponse> CreateSnapshotAsync(CreateSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSpotDatafeedSubscriptionResponse> CreateSpotDatafeedSubscriptionAsync(CreateSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateSubnetResponse> CreateSubnetAsync(CreateSubnetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTagsResponse> CreateTagsAsync(CreateTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVolumeResponse> CreateVolumeAsync(CreateVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpcResponse> CreateVpcAsync(CreateVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpcEndpointResponse> CreateVpcEndpointAsync(CreateVpcEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpcPeeringConnectionResponse> CreateVpcPeeringConnectionAsync(CreateVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpnConnectionResponse> CreateVpnConnectionAsync(CreateVpnConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpnConnectionRouteResponse> CreateVpnConnectionRouteAsync(CreateVpnConnectionRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVpnGatewayResponse> CreateVpnGatewayAsync(CreateVpnGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCustomerGatewayResponse> DeleteCustomerGatewayAsync(DeleteCustomerGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDhcpOptionsResponse> DeleteDhcpOptionsAsync(DeleteDhcpOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFlowLogsResponse> DeleteFlowLogsAsync(DeleteFlowLogsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteInternetGatewayResponse> DeleteInternetGatewayAsync(DeleteInternetGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteKeyPairResponse> DeleteKeyPairAsync(DeleteKeyPairRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkAclResponse> DeleteNetworkAclAsync(DeleteNetworkAclRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkAclEntryResponse> DeleteNetworkAclEntryAsync(DeleteNetworkAclEntryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteNetworkInterfaceResponse> DeleteNetworkInterfaceAsync(DeleteNetworkInterfaceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePlacementGroupResponse> DeletePlacementGroupAsync(DeletePlacementGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteRouteResponse> DeleteRouteAsync(DeleteRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteRouteTableResponse> DeleteRouteTableAsync(DeleteRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSecurityGroupResponse> DeleteSecurityGroupAsync(DeleteSecurityGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSnapshotResponse> DeleteSnapshotAsync(DeleteSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSpotDatafeedSubscriptionResponse> DeleteSpotDatafeedSubscriptionAsync(DeleteSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteSubnetResponse> DeleteSubnetAsync(DeleteSubnetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTagsResponse> DeleteTagsAsync(DeleteTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVolumeResponse> DeleteVolumeAsync(DeleteVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpcResponse> DeleteVpcAsync(DeleteVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpcEndpointsResponse> DeleteVpcEndpointsAsync(DeleteVpcEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpcPeeringConnectionResponse> DeleteVpcPeeringConnectionAsync(DeleteVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpnConnectionResponse> DeleteVpnConnectionAsync(DeleteVpnConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpnConnectionRouteResponse> DeleteVpnConnectionRouteAsync(DeleteVpnConnectionRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVpnGatewayResponse> DeleteVpnGatewayAsync(DeleteVpnGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterImageResponse> DeregisterImageAsync(DeregisterImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(DescribeAccountAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAddressesResponse> DescribeAddressesAsync(DescribeAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAvailabilityZonesResponse> DescribeAvailabilityZonesAsync(DescribeAvailabilityZonesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeBundleTasksResponse> DescribeBundleTasksAsync(DescribeBundleTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeClassicLinkInstancesResponse> DescribeClassicLinkInstancesAsync(DescribeClassicLinkInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeConversionTasksResponse> DescribeConversionTasksAsync(DescribeConversionTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCustomerGatewaysResponse> DescribeCustomerGatewaysAsync(DescribeCustomerGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDhcpOptionsResponse> DescribeDhcpOptionsAsync(DescribeDhcpOptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeExportTasksResponse> DescribeExportTasksAsync(DescribeExportTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFlowLogsResponse> DescribeFlowLogsAsync(DescribeFlowLogsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeImageAttributeResponse> DescribeImageAttributeAsync(DescribeImageAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeImagesResponse> DescribeImagesAsync(DescribeImagesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeImportImageTasksResponse> DescribeImportImageTasksAsync(DescribeImportImageTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeImportSnapshotTasksResponse> DescribeImportSnapshotTasksAsync(DescribeImportSnapshotTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceAttributeResponse> DescribeInstanceAttributeAsync(DescribeInstanceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstancesResponse> DescribeInstancesAsync(DescribeInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceStatusResponse> DescribeInstanceStatusAsync(DescribeInstanceStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInternetGatewaysResponse> DescribeInternetGatewaysAsync(DescribeInternetGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeKeyPairsResponse> DescribeKeyPairsAsync(DescribeKeyPairsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMovingAddressesResponse> DescribeMovingAddressesAsync(DescribeMovingAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkAclsResponse> DescribeNetworkAclsAsync(DescribeNetworkAclsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkInterfaceAttributeResponse> DescribeNetworkInterfaceAttributeAsync(DescribeNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeNetworkInterfacesResponse> DescribeNetworkInterfacesAsync(DescribeNetworkInterfacesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePlacementGroupsResponse> DescribePlacementGroupsAsync(DescribePlacementGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePrefixListsResponse> DescribePrefixListsAsync(DescribePrefixListsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRegionsResponse> DescribeRegionsAsync(DescribeRegionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesResponse> DescribeReservedInstancesAsync(DescribeReservedInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesListingsResponse> DescribeReservedInstancesListingsAsync(DescribeReservedInstancesListingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesModificationsResponse> DescribeReservedInstancesModificationsAsync(DescribeReservedInstancesModificationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReservedInstancesOfferingsResponse> DescribeReservedInstancesOfferingsAsync(DescribeReservedInstancesOfferingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRouteTablesResponse> DescribeRouteTablesAsync(DescribeRouteTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSecurityGroupsResponse> DescribeSecurityGroupsAsync(DescribeSecurityGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSnapshotAttributeResponse> DescribeSnapshotAttributeAsync(DescribeSnapshotAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSnapshotsResponse> DescribeSnapshotsAsync(DescribeSnapshotsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotDatafeedSubscriptionResponse> DescribeSpotDatafeedSubscriptionAsync(DescribeSpotDatafeedSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotFleetInstancesResponse> DescribeSpotFleetInstancesAsync(DescribeSpotFleetInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotFleetRequestHistoryResponse> DescribeSpotFleetRequestHistoryAsync(DescribeSpotFleetRequestHistoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotFleetRequestsResponse> DescribeSpotFleetRequestsAsync(DescribeSpotFleetRequestsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotInstanceRequestsResponse> DescribeSpotInstanceRequestsAsync(DescribeSpotInstanceRequestsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSpotPriceHistoryResponse> DescribeSpotPriceHistoryAsync(DescribeSpotPriceHistoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSubnetsResponse> DescribeSubnetsAsync(DescribeSubnetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVolumeAttributeResponse> DescribeVolumeAttributeAsync(DescribeVolumeAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVolumesResponse> DescribeVolumesAsync(DescribeVolumesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVolumeStatusResponse> DescribeVolumeStatusAsync(DescribeVolumeStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcAttributeResponse> DescribeVpcAttributeAsync(DescribeVpcAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcClassicLinkResponse> DescribeVpcClassicLinkAsync(DescribeVpcClassicLinkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcEndpointsResponse> DescribeVpcEndpointsAsync(DescribeVpcEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcEndpointServicesResponse> DescribeVpcEndpointServicesAsync(DescribeVpcEndpointServicesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcPeeringConnectionsResponse> DescribeVpcPeeringConnectionsAsync(DescribeVpcPeeringConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpcsResponse> DescribeVpcsAsync(DescribeVpcsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpnConnectionsResponse> DescribeVpnConnectionsAsync(DescribeVpnConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVpnGatewaysResponse> DescribeVpnGatewaysAsync(DescribeVpnGatewaysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachClassicLinkVpcResponse> DetachClassicLinkVpcAsync(DetachClassicLinkVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachInternetGatewayResponse> DetachInternetGatewayAsync(DetachInternetGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachNetworkInterfaceResponse> DetachNetworkInterfaceAsync(DetachNetworkInterfaceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachVolumeResponse> DetachVolumeAsync(DetachVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachVpnGatewayResponse> DetachVpnGatewayAsync(DetachVpnGatewayRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableVgwRoutePropagationResponse> DisableVgwRoutePropagationAsync(DisableVgwRoutePropagationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableVpcClassicLinkResponse> DisableVpcClassicLinkAsync(DisableVpcClassicLinkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateAddressResponse> DisassociateAddressAsync(DisassociateAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisassociateRouteTableResponse> DisassociateRouteTableAsync(DisassociateRouteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableVgwRoutePropagationResponse> EnableVgwRoutePropagationAsync(EnableVgwRoutePropagationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableVolumeIOResponse> EnableVolumeIOAsync(EnableVolumeIORequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableVpcClassicLinkResponse> EnableVpcClassicLinkAsync(EnableVpcClassicLinkRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetConsoleOutputResponse> GetConsoleOutputAsync(GetConsoleOutputRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPasswordDataResponse> GetPasswordDataAsync(GetPasswordDataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportImageResponse> ImportImageAsync(ImportImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportInstanceResponse> ImportInstanceAsync(ImportInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportKeyPairResponse> ImportKeyPairAsync(ImportKeyPairRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportSnapshotResponse> ImportSnapshotAsync(ImportSnapshotRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportVolumeResponse> ImportVolumeAsync(ImportVolumeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyImageAttributeResponse> ModifyImageAttributeAsync(ModifyImageAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstanceAttributeResponse> ModifyInstanceAttributeAsync(ModifyInstanceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyNetworkInterfaceAttributeResponse> ModifyNetworkInterfaceAttributeAsync(ModifyNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyReservedInstancesResponse> ModifyReservedInstancesAsync(ModifyReservedInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifySnapshotAttributeResponse> ModifySnapshotAttributeAsync(ModifySnapshotAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifySubnetAttributeResponse> ModifySubnetAttributeAsync(ModifySubnetAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVolumeAttributeResponse> ModifyVolumeAttributeAsync(ModifyVolumeAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpcAttributeResponse> ModifyVpcAttributeAsync(ModifyVpcAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyVpcEndpointResponse> ModifyVpcEndpointAsync(ModifyVpcEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MonitorInstancesResponse> MonitorInstancesAsync(MonitorInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MoveAddressToVpcResponse> MoveAddressToVpcAsync(MoveAddressToVpcRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PurchaseReservedInstancesOfferingResponse> PurchaseReservedInstancesOfferingAsync(PurchaseReservedInstancesOfferingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RebootInstancesResponse> RebootInstancesAsync(RebootInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterImageResponse> RegisterImageAsync(RegisterImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RejectVpcPeeringConnectionResponse> RejectVpcPeeringConnectionAsync(RejectVpcPeeringConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReleaseAddressResponse> ReleaseAddressAsync(ReleaseAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceNetworkAclAssociationResponse> ReplaceNetworkAclAssociationAsync(ReplaceNetworkAclAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceNetworkAclEntryResponse> ReplaceNetworkAclEntryAsync(ReplaceNetworkAclEntryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceRouteResponse> ReplaceRouteAsync(ReplaceRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReplaceRouteTableAssociationResponse> ReplaceRouteTableAssociationAsync(ReplaceRouteTableAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReportInstanceStatusResponse> ReportInstanceStatusAsync(ReportInstanceStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RequestSpotFleetResponse> RequestSpotFleetAsync(RequestSpotFleetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RequestSpotInstancesResponse> RequestSpotInstancesAsync(RequestSpotInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetImageAttributeResponse> ResetImageAttributeAsync(ResetImageAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetInstanceAttributeResponse> ResetInstanceAttributeAsync(ResetInstanceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetNetworkInterfaceAttributeResponse> ResetNetworkInterfaceAttributeAsync(ResetNetworkInterfaceAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResetSnapshotAttributeResponse> ResetSnapshotAttributeAsync(ResetSnapshotAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreAddressToClassicResponse> RestoreAddressToClassicAsync(RestoreAddressToClassicRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RevokeSecurityGroupEgressResponse> RevokeSecurityGroupEgressAsync(RevokeSecurityGroupEgressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RevokeSecurityGroupIngressResponse> RevokeSecurityGroupIngressAsync(RevokeSecurityGroupIngressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RunInstancesResponse> RunInstancesAsync(RunInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartInstancesResponse> StartInstancesAsync(StartInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopInstancesResponse> StopInstancesAsync(StopInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TerminateInstancesResponse> TerminateInstancesAsync(TerminateInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnassignPrivateIpAddressesResponse> UnassignPrivateIpAddressesAsync(UnassignPrivateIpAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnmonitorInstancesResponse> UnmonitorInstancesAsync(UnmonitorInstancesRequest request, CancellationToken cancellationToken);
}
public class Amazon.EC2.ImageAttributeName : ConstantClass {
    public static ImageAttributeName BlockDeviceMapping;
    public static ImageAttributeName Description;
    public static ImageAttributeName Kernel;
    public static ImageAttributeName LaunchPermission;
    public static ImageAttributeName ProductCodes;
    public static ImageAttributeName Ramdisk;
    public static ImageAttributeName SriovNetSupport;
    public ImageAttributeName(string value);
    private static ImageAttributeName();
    public static ImageAttributeName FindValue(string value);
    public static ImageAttributeName op_Implicit(string value);
}
public class Amazon.EC2.ImageState : ConstantClass {
    public static ImageState Available;
    public static ImageState Deregistered;
    public static ImageState Error;
    public static ImageState Failed;
    public static ImageState Invalid;
    public static ImageState Pending;
    public static ImageState Transient;
    public ImageState(string value);
    private static ImageState();
    public static ImageState FindValue(string value);
    public static ImageState op_Implicit(string value);
}
public class Amazon.EC2.ImageTypeValues : ConstantClass {
    public static ImageTypeValues Kernel;
    public static ImageTypeValues Machine;
    public static ImageTypeValues Ramdisk;
    public ImageTypeValues(string value);
    private static ImageTypeValues();
    public static ImageTypeValues FindValue(string value);
    public static ImageTypeValues op_Implicit(string value);
}
public class Amazon.EC2.InstanceAttributeName : ConstantClass {
    public static InstanceAttributeName BlockDeviceMapping;
    public static InstanceAttributeName DisableApiTermination;
    public static InstanceAttributeName EbsOptimized;
    public static InstanceAttributeName GroupSet;
    public static InstanceAttributeName InstanceInitiatedShutdownBehavior;
    public static InstanceAttributeName InstanceType;
    public static InstanceAttributeName Kernel;
    public static InstanceAttributeName ProductCodes;
    public static InstanceAttributeName Ramdisk;
    public static InstanceAttributeName RootDeviceName;
    public static InstanceAttributeName SourceDestCheck;
    public static InstanceAttributeName SriovNetSupport;
    public static InstanceAttributeName UserData;
    public InstanceAttributeName(string value);
    private static InstanceAttributeName();
    public static InstanceAttributeName FindValue(string value);
    public static InstanceAttributeName op_Implicit(string value);
}
public class Amazon.EC2.InstanceLifecycleType : ConstantClass {
    public static InstanceLifecycleType Spot;
    public InstanceLifecycleType(string value);
    private static InstanceLifecycleType();
    public static InstanceLifecycleType FindValue(string value);
    public static InstanceLifecycleType op_Implicit(string value);
}
public class Amazon.EC2.InstanceStateName : ConstantClass {
    public static InstanceStateName Pending;
    public static InstanceStateName Running;
    public static InstanceStateName ShuttingDown;
    public static InstanceStateName Stopped;
    public static InstanceStateName Stopping;
    public static InstanceStateName Terminated;
    public InstanceStateName(string value);
    private static InstanceStateName();
    public static InstanceStateName FindValue(string value);
    public static InstanceStateName op_Implicit(string value);
}
public class Amazon.EC2.InstanceType : ConstantClass {
    public static InstanceType C1Medium;
    public static InstanceType C1Xlarge;
    public static InstanceType C32xlarge;
    public static InstanceType C34xlarge;
    public static InstanceType C38xlarge;
    public static InstanceType C3Large;
    public static InstanceType C3Xlarge;
    public static InstanceType C42xlarge;
    public static InstanceType C44xlarge;
    public static InstanceType C48xlarge;
    public static InstanceType C4Large;
    public static InstanceType C4Xlarge;
    public static InstanceType Cc14xlarge;
    public static InstanceType Cc28xlarge;
    public static InstanceType Cg14xlarge;
    public static InstanceType Cr18xlarge;
    public static InstanceType D22xlarge;
    public static InstanceType D24xlarge;
    public static InstanceType D28xlarge;
    public static InstanceType D2Xlarge;
    public static InstanceType G22xlarge;
    public static InstanceType Hi14xlarge;
    public static InstanceType Hs18xlarge;
    public static InstanceType I22xlarge;
    public static InstanceType I24xlarge;
    public static InstanceType I28xlarge;
    public static InstanceType I2Xlarge;
    public static InstanceType M1Large;
    public static InstanceType M1Medium;
    public static InstanceType M1Small;
    public static InstanceType M1Xlarge;
    public static InstanceType M22xlarge;
    public static InstanceType M24xlarge;
    public static InstanceType M2Xlarge;
    public static InstanceType M32xlarge;
    public static InstanceType M3Large;
    public static InstanceType M3Medium;
    public static InstanceType M3Xlarge;
    public static InstanceType M410xlarge;
    public static InstanceType M42xlarge;
    public static InstanceType M44xlarge;
    public static InstanceType M4Large;
    public static InstanceType M4Xlarge;
    public static InstanceType R32xlarge;
    public static InstanceType R34xlarge;
    public static InstanceType R38xlarge;
    public static InstanceType R3Large;
    public static InstanceType R3Xlarge;
    public static InstanceType T1Micro;
    public static InstanceType T2Large;
    public static InstanceType T2Medium;
    public static InstanceType T2Micro;
    public static InstanceType T2Small;
    public InstanceType(string value);
    private static InstanceType();
    public static InstanceType FindValue(string value);
    public static InstanceType op_Implicit(string value);
}
public class Amazon.EC2.Internal.AmazonEC2PostMarshallHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
}
public class Amazon.EC2.Internal.AmazonEC2PreMarshallHandler : PipelineHandler {
    private AWSCredentials _credentials;
    public AmazonEC2PreMarshallHandler(AWSCredentials credentials);
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
}
public class Amazon.EC2.Internal.AmazonEC2ResponseHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.EC2.Internal.AmazonEC2ResponseHandler/<InvokeAsync>d__0`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PostInvoke(IExecutionContext executionContext);
    private static void PopulateLaunchSpecificationSecurityGroupNames(LaunchSpecification launchSpecification);
    private static void PopulateReservationSecurityGroupNames(Reservation reservation);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod3(IExecutionContext );
}
public static class Amazon.EC2.Internal.CustomMarshallTransformations : object {
    public static string ConvertDateTimeISOWithoutMilliseconds(DateTime dateTime);
}
public class Amazon.EC2.ListingState : ConstantClass {
    public static ListingState Available;
    public static ListingState Cancelled;
    public static ListingState Pending;
    public static ListingState Sold;
    public ListingState(string value);
    private static ListingState();
    public static ListingState FindValue(string value);
    public static ListingState op_Implicit(string value);
}
public class Amazon.EC2.ListingStatus : ConstantClass {
    public static ListingStatus Active;
    public static ListingStatus Cancelled;
    public static ListingStatus Closed;
    public static ListingStatus Pending;
    public ListingStatus(string value);
    private static ListingStatus();
    public static ListingStatus FindValue(string value);
    public static ListingStatus op_Implicit(string value);
}
public class Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest : AmazonEC2Request {
    private string _vpcPeeringConnectionId;
    public string VpcPeeringConnectionId { get; public set; }
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.AcceptVpcPeeringConnectionResponse : AcceptVpcPeeringConnectionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AcceptVpcPeeringConnectionResult class are now available on the AcceptVpcPeeringConnectionResponse class. You should use the properties on AcceptVpcPeeringConnectionResponse instead of accessing them through AcceptVpcPeeringConnectionResult.")]
public AcceptVpcPeeringConnectionResult AcceptVpcPeeringConnectionResult { get; }
    public AcceptVpcPeeringConnectionResult get_AcceptVpcPeeringConnectionResult();
}
public class Amazon.EC2.Model.AcceptVpcPeeringConnectionResult : AmazonWebServiceResponse {
    private VpcPeeringConnection _vpcPeeringConnection;
    public VpcPeeringConnection VpcPeeringConnection { get; public set; }
    public VpcPeeringConnection get_VpcPeeringConnection();
    public void set_VpcPeeringConnection(VpcPeeringConnection value);
    internal bool IsSetVpcPeeringConnection();
}
public class Amazon.EC2.Model.AccountAttribute : object {
    private string _attributeName;
    private List`1<AccountAttributeValue> _attributeValues;
    public string AttributeName { get; public set; }
    public List`1<AccountAttributeValue> AttributeValues { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public List`1<AccountAttributeValue> get_AttributeValues();
    public void set_AttributeValues(List`1<AccountAttributeValue> value);
    internal bool IsSetAttributeValues();
}
public class Amazon.EC2.Model.AccountAttributeValue : object {
    private string _attributeValue;
    public string AttributeValue { get; public set; }
    public string get_AttributeValue();
    public void set_AttributeValue(string value);
    internal bool IsSetAttributeValue();
}
public class Amazon.EC2.Model.ActiveInstance : object {
    private string _instanceId;
    private string _instanceType;
    private string _spotInstanceRequestId;
    public string InstanceId { get; public set; }
    public string InstanceType { get; public set; }
    public string SpotInstanceRequestId { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_SpotInstanceRequestId();
    public void set_SpotInstanceRequestId(string value);
    internal bool IsSetSpotInstanceRequestId();
}
public class Amazon.EC2.Model.Address : object {
    private string _allocationId;
    private string _associationId;
    private DomainType _domain;
    private string _instanceId;
    private string _networkInterfaceId;
    private string _networkInterfaceOwnerId;
    private string _privateIpAddress;
    private string _publicIp;
    public string AllocationId { get; public set; }
    public string AssociationId { get; public set; }
    public DomainType Domain { get; public set; }
    public string InstanceId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string NetworkInterfaceOwnerId { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public string PublicIp { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public DomainType get_Domain();
    public void set_Domain(DomainType value);
    internal bool IsSetDomain();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_NetworkInterfaceOwnerId();
    public void set_NetworkInterfaceOwnerId(string value);
    internal bool IsSetNetworkInterfaceOwnerId();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.AllocateAddressRequest : AmazonEC2Request {
    private DomainType _domain;
    public DomainType Domain { get; public set; }
    public DomainType get_Domain();
    public void set_Domain(DomainType value);
    internal bool IsSetDomain();
}
public class Amazon.EC2.Model.AllocateAddressResponse : AllocateAddressResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AllocateAddressResult class are now available on the AllocateAddressResponse class. You should use the properties on AllocateAddressResponse instead of accessing them through AllocateAddressResult.")]
public AllocateAddressResult AllocateAddressResult { get; }
    public AllocateAddressResult get_AllocateAddressResult();
}
public class Amazon.EC2.Model.AllocateAddressResult : AmazonWebServiceResponse {
    private string _allocationId;
    private DomainType _domain;
    private string _publicIp;
    public string AllocationId { get; public set; }
    public DomainType Domain { get; public set; }
    public string PublicIp { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public DomainType get_Domain();
    public void set_Domain(DomainType value);
    internal bool IsSetDomain();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.AssignPrivateIpAddressesRequest : AmazonEC2Request {
    private Nullable`1<bool> _allowReassignment;
    private string _networkInterfaceId;
    private List`1<string> _privateIpAddresses;
    private Nullable`1<int> _secondaryPrivateIpAddressCount;
    public bool AllowReassignment { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public List`1<string> PrivateIpAddresses { get; public set; }
    public int SecondaryPrivateIpAddressCount { get; public set; }
    public bool get_AllowReassignment();
    public void set_AllowReassignment(bool value);
    internal bool IsSetAllowReassignment();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public List`1<string> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<string> value);
    internal bool IsSetPrivateIpAddresses();
    public int get_SecondaryPrivateIpAddressCount();
    public void set_SecondaryPrivateIpAddressCount(int value);
    internal bool IsSetSecondaryPrivateIpAddressCount();
}
public class Amazon.EC2.Model.AssignPrivateIpAddressesResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.AssociateAddressRequest : AmazonEC2Request {
    private string _allocationId;
    private Nullable`1<bool> _allowReassociation;
    private string _instanceId;
    private string _networkInterfaceId;
    private string _privateIpAddress;
    private string _publicIp;
    public string AllocationId { get; public set; }
    public bool AllowReassociation { get; public set; }
    public string InstanceId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public string PublicIp { get; public set; }
    public AssociateAddressRequest(string instanceId, string publicIp);
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public bool get_AllowReassociation();
    public void set_AllowReassociation(bool value);
    internal bool IsSetAllowReassociation();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.AssociateAddressResponse : AssociateAddressResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AssociateAddressResult class are now available on the AssociateAddressResponse class. You should use the properties on AssociateAddressResponse instead of accessing them through AssociateAddressResult.")]
public AssociateAddressResult AssociateAddressResult { get; }
    public AssociateAddressResult get_AssociateAddressResult();
}
public class Amazon.EC2.Model.AssociateAddressResult : AmazonWebServiceResponse {
    private string _associationId;
    public string AssociationId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
}
public class Amazon.EC2.Model.AssociateDhcpOptionsRequest : AmazonEC2Request {
    private string _dhcpOptionsId;
    private string _vpcId;
    public string DhcpOptionsId { get; public set; }
    public string VpcId { get; public set; }
    public AssociateDhcpOptionsRequest(string vpcId);
    public string get_DhcpOptionsId();
    public void set_DhcpOptionsId(string value);
    internal bool IsSetDhcpOptionsId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.AssociateDhcpOptionsResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.AssociateRouteTableRequest : AmazonEC2Request {
    private string _routeTableId;
    private string _subnetId;
    public string RouteTableId { get; public set; }
    public string SubnetId { get; public set; }
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.AssociateRouteTableResponse : AssociateRouteTableResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AssociateRouteTableResult class are now available on the AssociateRouteTableResponse class. You should use the properties on AssociateRouteTableResponse instead of accessing them through AssociateRouteTableResult.")]
public AssociateRouteTableResult AssociateRouteTableResult { get; }
    public AssociateRouteTableResult get_AssociateRouteTableResult();
}
public class Amazon.EC2.Model.AssociateRouteTableResult : AmazonWebServiceResponse {
    private string _associationId;
    public string AssociationId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
}
public class Amazon.EC2.Model.AttachClassicLinkVpcRequest : AmazonEC2Request {
    private List`1<string> _groups;
    private string _instanceId;
    private string _vpcId;
    public List`1<string> Groups { get; public set; }
    public string InstanceId { get; public set; }
    public string VpcId { get; public set; }
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.AttachClassicLinkVpcResponse : AttachClassicLinkVpcResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AttachClassicLinkVpcResult class are now available on the AttachClassicLinkVpcResponse class. You should use the properties on AttachClassicLinkVpcResponse instead of accessing them through AttachClassicLinkVpcResult.")]
public AttachClassicLinkVpcResult AttachClassicLinkVpcResult { get; }
    public AttachClassicLinkVpcResult get_AttachClassicLinkVpcResult();
}
public class Amazon.EC2.Model.AttachClassicLinkVpcResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public bool Return { get; public set; }
    public bool get_Return();
    public void set_Return(bool value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.AttachInternetGatewayRequest : AmazonEC2Request {
    private string _internetGatewayId;
    private string _vpcId;
    public string InternetGatewayId { get; public set; }
    public string VpcId { get; public set; }
    public string get_InternetGatewayId();
    public void set_InternetGatewayId(string value);
    internal bool IsSetInternetGatewayId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.AttachInternetGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.AttachNetworkInterfaceRequest : AmazonEC2Request {
    private Nullable`1<int> _deviceIndex;
    private string _instanceId;
    private string _networkInterfaceId;
    public int DeviceIndex { get; public set; }
    public string InstanceId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public int get_DeviceIndex();
    public void set_DeviceIndex(int value);
    internal bool IsSetDeviceIndex();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.AttachNetworkInterfaceResponse : AttachNetworkInterfaceResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AttachNetworkInterfaceResult class are now available on the AttachNetworkInterfaceResponse class. You should use the properties on AttachNetworkInterfaceResponse instead of accessing them through AttachNetworkInterfaceResult.")]
public AttachNetworkInterfaceResult AttachNetworkInterfaceResult { get; }
    public AttachNetworkInterfaceResult get_AttachNetworkInterfaceResult();
}
public class Amazon.EC2.Model.AttachNetworkInterfaceResult : AmazonWebServiceResponse {
    private string _attachmentId;
    public string AttachmentId { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
}
public class Amazon.EC2.Model.AttachVolumeRequest : AmazonEC2Request {
    private string _device;
    private string _instanceId;
    private string _volumeId;
    public string Device { get; public set; }
    public string InstanceId { get; public set; }
    public string VolumeId { get; public set; }
    public AttachVolumeRequest(string volumeId, string instanceId, string device);
    public string get_Device();
    public void set_Device(string value);
    internal bool IsSetDevice();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.AttachVolumeResponse : AttachVolumeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AttachVolumeResult class are now available on the AttachVolumeResponse class. You should use the properties on AttachVolumeResponse instead of accessing them through AttachVolumeResult.")]
public AttachVolumeResult AttachVolumeResult { get; }
    public AttachVolumeResult get_AttachVolumeResult();
}
public class Amazon.EC2.Model.AttachVolumeResult : AmazonWebServiceResponse {
    private VolumeAttachment _volumeAttachment;
    public VolumeAttachment Attachment { get; public set; }
    public VolumeAttachment get_Attachment();
    public void set_Attachment(VolumeAttachment value);
    internal bool IsSetAttachment();
}
public class Amazon.EC2.Model.AttachVpnGatewayRequest : AmazonEC2Request {
    private string _vpcId;
    private string _vpnGatewayId;
    public string VpcId { get; public set; }
    public string VpnGatewayId { get; public set; }
    public AttachVpnGatewayRequest(string vpnGatewayId, string vpcId);
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.AttachVpnGatewayResponse : AttachVpnGatewayResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AttachVpnGatewayResult class are now available on the AttachVpnGatewayResponse class. You should use the properties on AttachVpnGatewayResponse instead of accessing them through AttachVpnGatewayResult.")]
public AttachVpnGatewayResult AttachVpnGatewayResult { get; }
    public AttachVpnGatewayResult get_AttachVpnGatewayResult();
}
public class Amazon.EC2.Model.AttachVpnGatewayResult : AmazonWebServiceResponse {
    private VpcAttachment _vpcAttachment;
    public VpcAttachment VpcAttachment { get; public set; }
    public VpcAttachment get_VpcAttachment();
    public void set_VpcAttachment(VpcAttachment value);
    internal bool IsSetVpcAttachment();
}
public class Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest : AmazonEC2Request {
    private string _groupId;
    private List`1<IpPermission> _ipPermissions;
    public string GroupId { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
}
public class Amazon.EC2.Model.AuthorizeSecurityGroupEgressResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest : AmazonEC2Request {
    private string _groupId;
    private string _groupName;
    private List`1<IpPermission> _ipPermissions;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public AuthorizeSecurityGroupIngressRequest(string groupName, List`1<IpPermission> ipPermissions);
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
}
public class Amazon.EC2.Model.AuthorizeSecurityGroupIngressResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.AvailabilityZone : object {
    private List`1<AvailabilityZoneMessage> _messages;
    private string _regionName;
    private AvailabilityZoneState _state;
    private string _zoneName;
    public List`1<AvailabilityZoneMessage> Messages { get; public set; }
    public string RegionName { get; public set; }
    public AvailabilityZoneState State { get; public set; }
    public string ZoneName { get; public set; }
    public List`1<AvailabilityZoneMessage> get_Messages();
    public void set_Messages(List`1<AvailabilityZoneMessage> value);
    internal bool IsSetMessages();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public AvailabilityZoneState get_State();
    public void set_State(AvailabilityZoneState value);
    internal bool IsSetState();
    public string get_ZoneName();
    public void set_ZoneName(string value);
    internal bool IsSetZoneName();
}
public class Amazon.EC2.Model.AvailabilityZoneMessage : object {
    private string _message;
    public string Message { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.BlockDeviceMapping : object {
    private string _deviceName;
    private EbsBlockDevice _ebs;
    private string _noDevice;
    private string _virtualName;
    public string DeviceName { get; public set; }
    public EbsBlockDevice Ebs { get; public set; }
    public string NoDevice { get; public set; }
    public string VirtualName { get; public set; }
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public EbsBlockDevice get_Ebs();
    public void set_Ebs(EbsBlockDevice value);
    internal bool IsSetEbs();
    public string get_NoDevice();
    public void set_NoDevice(string value);
    internal bool IsSetNoDevice();
    public string get_VirtualName();
    public void set_VirtualName(string value);
    internal bool IsSetVirtualName();
}
public class Amazon.EC2.Model.BundleInstanceRequest : AmazonEC2Request {
    private string _instanceId;
    private Storage _storage;
    public string InstanceId { get; public set; }
    public Storage Storage { get; public set; }
    public BundleInstanceRequest(string instanceId, Storage storage);
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Storage get_Storage();
    public void set_Storage(Storage value);
    internal bool IsSetStorage();
}
public class Amazon.EC2.Model.BundleInstanceResponse : BundleInstanceResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the BundleInstanceResult class are now available on the BundleInstanceResponse class. You should use the properties on BundleInstanceResponse instead of accessing them through BundleInstanceResult.")]
public BundleInstanceResult BundleInstanceResult { get; }
    public BundleInstanceResult get_BundleInstanceResult();
}
public class Amazon.EC2.Model.BundleInstanceResult : AmazonWebServiceResponse {
    private BundleTask _bundleTask;
    public BundleTask BundleTask { get; public set; }
    public BundleTask get_BundleTask();
    public void set_BundleTask(BundleTask value);
    internal bool IsSetBundleTask();
}
public class Amazon.EC2.Model.BundleTask : object {
    private string _bundleId;
    private BundleTaskError _bundleTaskError;
    private string _instanceId;
    private string _progress;
    private Nullable`1<DateTime> _startTime;
    private BundleTaskState _state;
    private Storage _storage;
    private Nullable`1<DateTime> _updateTime;
    public string BundleId { get; public set; }
    public BundleTaskError BundleTaskError { get; public set; }
    public string InstanceId { get; public set; }
    public string Progress { get; public set; }
    public DateTime StartTime { get; public set; }
    public BundleTaskState State { get; public set; }
    public Storage Storage { get; public set; }
    public DateTime UpdateTime { get; public set; }
    public string get_BundleId();
    public void set_BundleId(string value);
    internal bool IsSetBundleId();
    public BundleTaskError get_BundleTaskError();
    public void set_BundleTaskError(BundleTaskError value);
    internal bool IsSetBundleTaskError();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
    public BundleTaskState get_State();
    public void set_State(BundleTaskState value);
    internal bool IsSetState();
    public Storage get_Storage();
    public void set_Storage(Storage value);
    internal bool IsSetStorage();
    public DateTime get_UpdateTime();
    public void set_UpdateTime(DateTime value);
    internal bool IsSetUpdateTime();
}
public class Amazon.EC2.Model.BundleTaskError : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.CancelBundleTaskRequest : AmazonEC2Request {
    private string _bundleId;
    public string BundleId { get; public set; }
    public CancelBundleTaskRequest(string bundleId);
    public string get_BundleId();
    public void set_BundleId(string value);
    internal bool IsSetBundleId();
}
public class Amazon.EC2.Model.CancelBundleTaskResponse : CancelBundleTaskResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CancelBundleTaskResult class are now available on the CancelBundleTaskResponse class. You should use the properties on CancelBundleTaskResponse instead of accessing them through CancelBundleTaskResult.")]
public CancelBundleTaskResult CancelBundleTaskResult { get; }
    public CancelBundleTaskResult get_CancelBundleTaskResult();
}
public class Amazon.EC2.Model.CancelBundleTaskResult : AmazonWebServiceResponse {
    private BundleTask _bundleTask;
    public BundleTask BundleTask { get; public set; }
    public BundleTask get_BundleTask();
    public void set_BundleTask(BundleTask value);
    internal bool IsSetBundleTask();
}
public class Amazon.EC2.Model.CancelConversionTaskRequest : AmazonEC2Request {
    private string _conversionTaskId;
    private string _reasonMessage;
    public string ConversionTaskId { get; public set; }
    public string ReasonMessage { get; public set; }
    public string get_ConversionTaskId();
    public void set_ConversionTaskId(string value);
    internal bool IsSetConversionTaskId();
    public string get_ReasonMessage();
    public void set_ReasonMessage(string value);
    internal bool IsSetReasonMessage();
}
public class Amazon.EC2.Model.CancelConversionTaskResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CancelExportTaskRequest : AmazonEC2Request {
    private string _exportTaskId;
    public string ExportTaskId { get; public set; }
    public string get_ExportTaskId();
    public void set_ExportTaskId(string value);
    internal bool IsSetExportTaskId();
}
public class Amazon.EC2.Model.CancelExportTaskResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CancelImportTaskRequest : AmazonEC2Request {
    private string _cancelReason;
    private string _importTaskId;
    public string CancelReason { get; public set; }
    public string ImportTaskId { get; public set; }
    public string get_CancelReason();
    public void set_CancelReason(string value);
    internal bool IsSetCancelReason();
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
}
public class Amazon.EC2.Model.CancelImportTaskResponse : CancelImportTaskResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CancelImportTaskResult class are now available on the CancelImportTaskResponse class. You should use the properties on CancelImportTaskResponse instead of accessing them through CancelImportTaskResult.")]
public CancelImportTaskResult CancelImportTaskResult { get; }
    public CancelImportTaskResult get_CancelImportTaskResult();
}
public class Amazon.EC2.Model.CancelImportTaskResult : AmazonWebServiceResponse {
    private string _importTaskId;
    private string _previousState;
    private string _state;
    public string ImportTaskId { get; public set; }
    public string PreviousState { get; public set; }
    public string State { get; public set; }
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
    public string get_PreviousState();
    public void set_PreviousState(string value);
    internal bool IsSetPreviousState();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.CancelledSpotInstanceRequest : object {
    private string _spotInstanceRequestId;
    private CancelSpotInstanceRequestState _state;
    public string SpotInstanceRequestId { get; public set; }
    public CancelSpotInstanceRequestState State { get; public set; }
    public string get_SpotInstanceRequestId();
    public void set_SpotInstanceRequestId(string value);
    internal bool IsSetSpotInstanceRequestId();
    public CancelSpotInstanceRequestState get_State();
    public void set_State(CancelSpotInstanceRequestState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.CancelReservedInstancesListingRequest : AmazonEC2Request {
    private string _reservedInstancesListingId;
    public string ReservedInstancesListingId { get; public set; }
    public string get_ReservedInstancesListingId();
    public void set_ReservedInstancesListingId(string value);
    internal bool IsSetReservedInstancesListingId();
}
public class Amazon.EC2.Model.CancelReservedInstancesListingResponse : CancelReservedInstancesListingResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CancelReservedInstancesListingResult class are now available on the CancelReservedInstancesListingResponse class. You should use the properties on CancelReservedInstancesListingResponse instead of accessing them through CancelReservedInstancesListingResult.")]
public CancelReservedInstancesListingResult CancelReservedInstancesListingResult { get; }
    public CancelReservedInstancesListingResult get_CancelReservedInstancesListingResult();
}
public class Amazon.EC2.Model.CancelReservedInstancesListingResult : AmazonWebServiceResponse {
    private List`1<ReservedInstancesListing> _reservedInstancesListings;
    public List`1<ReservedInstancesListing> ReservedInstancesListings { get; public set; }
    public List`1<ReservedInstancesListing> get_ReservedInstancesListings();
    public void set_ReservedInstancesListings(List`1<ReservedInstancesListing> value);
    internal bool IsSetReservedInstancesListings();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsError : object {
    private CancelBatchErrorCode _code;
    private string _message;
    public CancelBatchErrorCode Code { get; public set; }
    public string Message { get; public set; }
    public CancelBatchErrorCode get_Code();
    public void set_Code(CancelBatchErrorCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsErrorItem : object {
    private CancelSpotFleetRequestsError _error;
    private string _spotFleetRequestId;
    public CancelSpotFleetRequestsError Error { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public CancelSpotFleetRequestsError get_Error();
    public void set_Error(CancelSpotFleetRequestsError value);
    internal bool IsSetError();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsRequest : AmazonEC2Request {
    private List`1<string> _spotFleetRequestIds;
    private Nullable`1<bool> _terminateInstances;
    public List`1<string> SpotFleetRequestIds { get; public set; }
    public bool TerminateInstances { get; public set; }
    public List`1<string> get_SpotFleetRequestIds();
    public void set_SpotFleetRequestIds(List`1<string> value);
    internal bool IsSetSpotFleetRequestIds();
    public bool get_TerminateInstances();
    public void set_TerminateInstances(bool value);
    internal bool IsSetTerminateInstances();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsResponse : CancelSpotFleetRequestsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CancelSpotFleetRequestsResult class are now available on the CancelSpotFleetRequestsResponse class. You should use the properties on CancelSpotFleetRequestsResponse instead of accessing them through CancelSpotFleetRequestsResult.")]
public CancelSpotFleetRequestsResult CancelSpotFleetRequestsResult { get; }
    public CancelSpotFleetRequestsResult get_CancelSpotFleetRequestsResult();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsResult : AmazonWebServiceResponse {
    private List`1<CancelSpotFleetRequestsSuccessItem> _successfulFleetRequests;
    private List`1<CancelSpotFleetRequestsErrorItem> _unsuccessfulFleetRequests;
    public List`1<CancelSpotFleetRequestsSuccessItem> SuccessfulFleetRequests { get; public set; }
    public List`1<CancelSpotFleetRequestsErrorItem> UnsuccessfulFleetRequests { get; public set; }
    public List`1<CancelSpotFleetRequestsSuccessItem> get_SuccessfulFleetRequests();
    public void set_SuccessfulFleetRequests(List`1<CancelSpotFleetRequestsSuccessItem> value);
    internal bool IsSetSuccessfulFleetRequests();
    public List`1<CancelSpotFleetRequestsErrorItem> get_UnsuccessfulFleetRequests();
    public void set_UnsuccessfulFleetRequests(List`1<CancelSpotFleetRequestsErrorItem> value);
    internal bool IsSetUnsuccessfulFleetRequests();
}
public class Amazon.EC2.Model.CancelSpotFleetRequestsSuccessItem : object {
    private BatchState _currentSpotFleetRequestState;
    private BatchState _previousSpotFleetRequestState;
    private string _spotFleetRequestId;
    public BatchState CurrentSpotFleetRequestState { get; public set; }
    public BatchState PreviousSpotFleetRequestState { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public BatchState get_CurrentSpotFleetRequestState();
    public void set_CurrentSpotFleetRequestState(BatchState value);
    internal bool IsSetCurrentSpotFleetRequestState();
    public BatchState get_PreviousSpotFleetRequestState();
    public void set_PreviousSpotFleetRequestState(BatchState value);
    internal bool IsSetPreviousSpotFleetRequestState();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
}
public class Amazon.EC2.Model.CancelSpotInstanceRequestsRequest : AmazonEC2Request {
    private List`1<string> _spotInstanceRequestIds;
    public List`1<string> SpotInstanceRequestIds { get; public set; }
    public CancelSpotInstanceRequestsRequest(List`1<string> spotInstanceRequestIds);
    public List`1<string> get_SpotInstanceRequestIds();
    public void set_SpotInstanceRequestIds(List`1<string> value);
    internal bool IsSetSpotInstanceRequestIds();
}
public class Amazon.EC2.Model.CancelSpotInstanceRequestsResponse : CancelSpotInstanceRequestsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CancelSpotInstanceRequestsResult class are now available on the CancelSpotInstanceRequestsResponse class. You should use the properties on CancelSpotInstanceRequestsResponse instead of accessing them through CancelSpotInstanceRequestsResult.")]
public CancelSpotInstanceRequestsResult CancelSpotInstanceRequestsResult { get; }
    public CancelSpotInstanceRequestsResult get_CancelSpotInstanceRequestsResult();
}
public class Amazon.EC2.Model.CancelSpotInstanceRequestsResult : AmazonWebServiceResponse {
    private List`1<CancelledSpotInstanceRequest> _cancelledSpotInstanceRequests;
    public List`1<CancelledSpotInstanceRequest> CancelledSpotInstanceRequests { get; public set; }
    public List`1<CancelledSpotInstanceRequest> get_CancelledSpotInstanceRequests();
    public void set_CancelledSpotInstanceRequests(List`1<CancelledSpotInstanceRequest> value);
    internal bool IsSetCancelledSpotInstanceRequests();
}
public class Amazon.EC2.Model.ClassicLinkInstance : object {
    private List`1<GroupIdentifier> _groups;
    private string _instanceId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public List`1<GroupIdentifier> Groups { get; public set; }
    public string InstanceId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.ClientData : object {
    private string _comment;
    private Nullable`1<DateTime> _uploadEnd;
    private Nullable`1<double> _uploadSize;
    private Nullable`1<DateTime> _uploadStart;
    public string Comment { get; public set; }
    public DateTime UploadEnd { get; public set; }
    public double UploadSize { get; public set; }
    public DateTime UploadStart { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public DateTime get_UploadEnd();
    public void set_UploadEnd(DateTime value);
    internal bool IsSetUploadEnd();
    public double get_UploadSize();
    public void set_UploadSize(double value);
    internal bool IsSetUploadSize();
    public DateTime get_UploadStart();
    public void set_UploadStart(DateTime value);
    internal bool IsSetUploadStart();
}
public class Amazon.EC2.Model.ConfirmProductInstanceRequest : AmazonEC2Request {
    private string _instanceId;
    private string _productCode;
    public string InstanceId { get; public set; }
    public string ProductCode { get; public set; }
    public ConfirmProductInstanceRequest(string productCode, string instanceId);
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_ProductCode();
    public void set_ProductCode(string value);
    internal bool IsSetProductCode();
}
public class Amazon.EC2.Model.ConfirmProductInstanceResponse : ConfirmProductInstanceResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ConfirmProductInstanceResult class are now available on the ConfirmProductInstanceResponse class. You should use the properties on ConfirmProductInstanceResponse instead of accessing them through ConfirmProductInstanceResult.")]
public ConfirmProductInstanceResult ConfirmProductInstanceResult { get; }
    public ConfirmProductInstanceResult get_ConfirmProductInstanceResult();
}
public class Amazon.EC2.Model.ConfirmProductInstanceResult : AmazonWebServiceResponse {
    private string _ownerId;
    private Nullable`1<bool> _return;
    public string OwnerId { get; public set; }
    public bool Return { get; public set; }
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public bool get_Return();
    public void set_Return(bool value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.ConversionTask : object {
    private string _conversionTaskId;
    private string _expirationTime;
    private ImportInstanceTaskDetails _importInstance;
    private ImportVolumeTaskDetails _importVolume;
    private ConversionTaskState _state;
    private string _statusMessage;
    private List`1<Tag> _tags;
    public string ConversionTaskId { get; public set; }
    public string ExpirationTime { get; public set; }
    public ImportInstanceTaskDetails ImportInstance { get; public set; }
    public ImportVolumeTaskDetails ImportVolume { get; public set; }
    public ConversionTaskState State { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_ConversionTaskId();
    public void set_ConversionTaskId(string value);
    internal bool IsSetConversionTaskId();
    public string get_ExpirationTime();
    public void set_ExpirationTime(string value);
    internal bool IsSetExpirationTime();
    public ImportInstanceTaskDetails get_ImportInstance();
    public void set_ImportInstance(ImportInstanceTaskDetails value);
    internal bool IsSetImportInstance();
    public ImportVolumeTaskDetails get_ImportVolume();
    public void set_ImportVolume(ImportVolumeTaskDetails value);
    internal bool IsSetImportVolume();
    public ConversionTaskState get_State();
    public void set_State(ConversionTaskState value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.CopyImageRequest : AmazonEC2Request {
    private string _clientToken;
    private string _description;
    private string _name;
    private string _sourceImageId;
    private string _sourceRegion;
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public string Name { get; public set; }
    public string SourceImageId { get; public set; }
    public string SourceRegion { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_SourceImageId();
    public void set_SourceImageId(string value);
    internal bool IsSetSourceImageId();
    public string get_SourceRegion();
    public void set_SourceRegion(string value);
    internal bool IsSetSourceRegion();
}
public class Amazon.EC2.Model.CopyImageResponse : CopyImageResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CopyImageResult class are now available on the CopyImageResponse class. You should use the properties on CopyImageResponse instead of accessing them through CopyImageResult.")]
public CopyImageResult CopyImageResult { get; }
    public CopyImageResult get_CopyImageResult();
}
public class Amazon.EC2.Model.CopyImageResult : AmazonWebServiceResponse {
    private string _imageId;
    public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.CopySnapshotRequest : AmazonEC2Request {
    private string _description;
    private string _destinationRegion;
    private Nullable`1<bool> _encrypted;
    private string _kmsKeyId;
    private string _presignedUrl;
    private string _sourceRegion;
    private string _sourceSnapshotId;
    public string Description { get; public set; }
    public string DestinationRegion { get; public set; }
    public bool Encrypted { get; public set; }
    public string KmsKeyId { get; public set; }
    internal string PresignedUrl { get; internal set; }
    public string SourceRegion { get; public set; }
    public string SourceSnapshotId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DestinationRegion();
    public void set_DestinationRegion(string value);
    internal bool IsSetDestinationRegion();
    public bool get_Encrypted();
    public void set_Encrypted(bool value);
    internal bool IsSetEncrypted();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    internal string get_PresignedUrl();
    internal void set_PresignedUrl(string value);
    internal bool IsSetPresignedUrl();
    public string get_SourceRegion();
    public void set_SourceRegion(string value);
    internal bool IsSetSourceRegion();
    public string get_SourceSnapshotId();
    public void set_SourceSnapshotId(string value);
    internal bool IsSetSourceSnapshotId();
}
public class Amazon.EC2.Model.CopySnapshotResponse : CopySnapshotResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CopySnapshotResult class are now available on the CopySnapshotResponse class. You should use the properties on CopySnapshotResponse instead of accessing them through CopySnapshotResult.")]
public CopySnapshotResult CopySnapshotResult { get; }
    public CopySnapshotResult get_CopySnapshotResult();
}
public class Amazon.EC2.Model.CopySnapshotResult : AmazonWebServiceResponse {
    private string _snapshotId;
    public string SnapshotId { get; public set; }
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.CreateCustomerGatewayRequest : AmazonEC2Request {
    private Nullable`1<int> _bgpAsn;
    private string _publicIp;
    private GatewayType _type;
    public int BgpAsn { get; public set; }
    public string PublicIp { get; public set; }
    public GatewayType Type { get; public set; }
    public CreateCustomerGatewayRequest(GatewayType type, string publicIp, int bgpAsn);
    public int get_BgpAsn();
    public void set_BgpAsn(int value);
    internal bool IsSetBgpAsn();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
    public GatewayType get_Type();
    public void set_Type(GatewayType value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.CreateCustomerGatewayResponse : CreateCustomerGatewayResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateCustomerGatewayResult class are now available on the CreateCustomerGatewayResponse class. You should use the properties on CreateCustomerGatewayResponse instead of accessing them through CreateCustomerGatewayResult.")]
public CreateCustomerGatewayResult CreateCustomerGatewayResult { get; }
    public CreateCustomerGatewayResult get_CreateCustomerGatewayResult();
}
public class Amazon.EC2.Model.CreateCustomerGatewayResult : AmazonWebServiceResponse {
    private CustomerGateway _customerGateway;
    public CustomerGateway CustomerGateway { get; public set; }
    public CustomerGateway get_CustomerGateway();
    public void set_CustomerGateway(CustomerGateway value);
    internal bool IsSetCustomerGateway();
}
public class Amazon.EC2.Model.CreateDhcpOptionsRequest : AmazonEC2Request {
    private List`1<DhcpConfiguration> _dhcpConfigurations;
    public List`1<DhcpConfiguration> DhcpConfigurations { get; public set; }
    public CreateDhcpOptionsRequest(List`1<DhcpConfiguration> dhcpConfigurations);
    public List`1<DhcpConfiguration> get_DhcpConfigurations();
    public void set_DhcpConfigurations(List`1<DhcpConfiguration> value);
    internal bool IsSetDhcpConfigurations();
}
public class Amazon.EC2.Model.CreateDhcpOptionsResponse : CreateDhcpOptionsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateDhcpOptionsResult class are now available on the CreateDhcpOptionsResponse class. You should use the properties on CreateDhcpOptionsResponse instead of accessing them through CreateDhcpOptionsResult.")]
public CreateDhcpOptionsResult CreateDhcpOptionsResult { get; }
    public CreateDhcpOptionsResult get_CreateDhcpOptionsResult();
}
public class Amazon.EC2.Model.CreateDhcpOptionsResult : AmazonWebServiceResponse {
    private DhcpOptions _dhcpOptions;
    public DhcpOptions DhcpOptions { get; public set; }
    public DhcpOptions get_DhcpOptions();
    public void set_DhcpOptions(DhcpOptions value);
    internal bool IsSetDhcpOptions();
}
public class Amazon.EC2.Model.CreateFlowLogsRequest : AmazonEC2Request {
    private string _clientToken;
    private string _deliverLogsPermissionArn;
    private string _logGroupName;
    private List`1<string> _resourceIds;
    private FlowLogsResourceType _resourceType;
    private TrafficType _trafficType;
    public string ClientToken { get; public set; }
    public string DeliverLogsPermissionArn { get; public set; }
    public string LogGroupName { get; public set; }
    public List`1<string> ResourceIds { get; public set; }
    public FlowLogsResourceType ResourceType { get; public set; }
    public TrafficType TrafficType { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_DeliverLogsPermissionArn();
    public void set_DeliverLogsPermissionArn(string value);
    internal bool IsSetDeliverLogsPermissionArn();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public List`1<string> get_ResourceIds();
    public void set_ResourceIds(List`1<string> value);
    internal bool IsSetResourceIds();
    public FlowLogsResourceType get_ResourceType();
    public void set_ResourceType(FlowLogsResourceType value);
    internal bool IsSetResourceType();
    public TrafficType get_TrafficType();
    public void set_TrafficType(TrafficType value);
    internal bool IsSetTrafficType();
}
public class Amazon.EC2.Model.CreateFlowLogsResponse : CreateFlowLogsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateFlowLogsResult class are now available on the CreateFlowLogsResponse class. You should use the properties on CreateFlowLogsResponse instead of accessing them through CreateFlowLogsResult.")]
public CreateFlowLogsResult CreateFlowLogsResult { get; }
    public CreateFlowLogsResult get_CreateFlowLogsResult();
}
public class Amazon.EC2.Model.CreateFlowLogsResult : AmazonWebServiceResponse {
    private string _clientToken;
    private List`1<string> _flowLogIds;
    private List`1<UnsuccessfulItem> _unsuccessful;
    public string ClientToken { get; public set; }
    public List`1<string> FlowLogIds { get; public set; }
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<string> get_FlowLogIds();
    public void set_FlowLogIds(List`1<string> value);
    internal bool IsSetFlowLogIds();
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.CreateImageRequest : AmazonEC2Request {
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private string _description;
    private string _instanceId;
    private string _name;
    private Nullable`1<bool> _noReboot;
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public string Description { get; public set; }
    public string InstanceId { get; public set; }
    public string Name { get; public set; }
    public bool NoReboot { get; public set; }
    public CreateImageRequest(string instanceId, string name);
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public bool get_NoReboot();
    public void set_NoReboot(bool value);
    internal bool IsSetNoReboot();
}
public class Amazon.EC2.Model.CreateImageResponse : CreateImageResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateImageResult class are now available on the CreateImageResponse class. You should use the properties on CreateImageResponse instead of accessing them through CreateImageResult.")]
public CreateImageResult CreateImageResult { get; }
    public CreateImageResult get_CreateImageResult();
}
public class Amazon.EC2.Model.CreateImageResult : AmazonWebServiceResponse {
    private string _imageId;
    public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.CreateInstanceExportTaskRequest : AmazonEC2Request {
    private string _description;
    private ExportToS3TaskSpecification _exportToS3Task;
    private string _instanceId;
    private ExportEnvironment _targetEnvironment;
    public string Description { get; public set; }
    public ExportToS3TaskSpecification ExportToS3Task { get; public set; }
    public string InstanceId { get; public set; }
    public ExportEnvironment TargetEnvironment { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public ExportToS3TaskSpecification get_ExportToS3Task();
    public void set_ExportToS3Task(ExportToS3TaskSpecification value);
    internal bool IsSetExportToS3Task();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public ExportEnvironment get_TargetEnvironment();
    public void set_TargetEnvironment(ExportEnvironment value);
    internal bool IsSetTargetEnvironment();
}
public class Amazon.EC2.Model.CreateInstanceExportTaskResponse : CreateInstanceExportTaskResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateInstanceExportTaskResult class are now available on the CreateInstanceExportTaskResponse class. You should use the properties on CreateInstanceExportTaskResponse instead of accessing them through CreateInstanceExportTaskResult.")]
public CreateInstanceExportTaskResult CreateInstanceExportTaskResult { get; }
    public CreateInstanceExportTaskResult get_CreateInstanceExportTaskResult();
}
public class Amazon.EC2.Model.CreateInstanceExportTaskResult : AmazonWebServiceResponse {
    private ExportTask _exportTask;
    public ExportTask ExportTask { get; public set; }
    public ExportTask get_ExportTask();
    public void set_ExportTask(ExportTask value);
    internal bool IsSetExportTask();
}
public class Amazon.EC2.Model.CreateInternetGatewayRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.CreateInternetGatewayResponse : CreateInternetGatewayResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateInternetGatewayResult class are now available on the CreateInternetGatewayResponse class. You should use the properties on CreateInternetGatewayResponse instead of accessing them through CreateInternetGatewayResult.")]
public CreateInternetGatewayResult CreateInternetGatewayResult { get; }
    public CreateInternetGatewayResult get_CreateInternetGatewayResult();
}
public class Amazon.EC2.Model.CreateInternetGatewayResult : AmazonWebServiceResponse {
    private InternetGateway _internetGateway;
    public InternetGateway InternetGateway { get; public set; }
    public InternetGateway get_InternetGateway();
    public void set_InternetGateway(InternetGateway value);
    internal bool IsSetInternetGateway();
}
public class Amazon.EC2.Model.CreateKeyPairRequest : AmazonEC2Request {
    private string _keyName;
    public string KeyName { get; public set; }
    public CreateKeyPairRequest(string keyName);
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
}
public class Amazon.EC2.Model.CreateKeyPairResponse : CreateKeyPairResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateKeyPairResult class are now available on the CreateKeyPairResponse class. You should use the properties on CreateKeyPairResponse instead of accessing them through CreateKeyPairResult.")]
public CreateKeyPairResult CreateKeyPairResult { get; }
    public CreateKeyPairResult get_CreateKeyPairResult();
}
public class Amazon.EC2.Model.CreateKeyPairResult : AmazonWebServiceResponse {
    private KeyPair _keyPair;
    public KeyPair KeyPair { get; public set; }
    public KeyPair get_KeyPair();
    public void set_KeyPair(KeyPair value);
    internal bool IsSetKeyPair();
}
public class Amazon.EC2.Model.CreateNetworkAclEntryRequest : AmazonEC2Request {
    private string _cidrBlock;
    private Nullable`1<bool> _egress;
    private IcmpTypeCode _icmpTypeCode;
    private string _networkAclId;
    private PortRange _portRange;
    private string _protocol;
    private RuleAction _ruleAction;
    private Nullable`1<int> _ruleNumber;
    public string CidrBlock { get; public set; }
    public bool Egress { get; public set; }
    public IcmpTypeCode IcmpTypeCode { get; public set; }
    public string NetworkAclId { get; public set; }
    public PortRange PortRange { get; public set; }
    public string Protocol { get; public set; }
    public RuleAction RuleAction { get; public set; }
    public int RuleNumber { get; public set; }
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public bool get_Egress();
    public void set_Egress(bool value);
    internal bool IsSetEgress();
    public IcmpTypeCode get_IcmpTypeCode();
    public void set_IcmpTypeCode(IcmpTypeCode value);
    internal bool IsSetIcmpTypeCode();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
    public PortRange get_PortRange();
    public void set_PortRange(PortRange value);
    internal bool IsSetPortRange();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public RuleAction get_RuleAction();
    public void set_RuleAction(RuleAction value);
    internal bool IsSetRuleAction();
    public int get_RuleNumber();
    public void set_RuleNumber(int value);
    internal bool IsSetRuleNumber();
}
public class Amazon.EC2.Model.CreateNetworkAclEntryResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CreateNetworkAclRequest : AmazonEC2Request {
    private string _vpcId;
    public string VpcId { get; public set; }
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateNetworkAclResponse : CreateNetworkAclResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateNetworkAclResult class are now available on the CreateNetworkAclResponse class. You should use the properties on CreateNetworkAclResponse instead of accessing them through CreateNetworkAclResult.")]
public CreateNetworkAclResult CreateNetworkAclResult { get; }
    public CreateNetworkAclResult get_CreateNetworkAclResult();
}
public class Amazon.EC2.Model.CreateNetworkAclResult : AmazonWebServiceResponse {
    private NetworkAcl _networkAcl;
    public NetworkAcl NetworkAcl { get; public set; }
    public NetworkAcl get_NetworkAcl();
    public void set_NetworkAcl(NetworkAcl value);
    internal bool IsSetNetworkAcl();
}
public class Amazon.EC2.Model.CreateNetworkInterfaceRequest : AmazonEC2Request {
    private string _description;
    private List`1<string> _groups;
    private string _privateIpAddress;
    private List`1<PrivateIpAddressSpecification> _privateIpAddresses;
    private Nullable`1<int> _secondaryPrivateIpAddressCount;
    private string _subnetId;
    public string Description { get; public set; }
    public List`1<string> Groups { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<PrivateIpAddressSpecification> PrivateIpAddresses { get; public set; }
    public int SecondaryPrivateIpAddressCount { get; public set; }
    public string SubnetId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<PrivateIpAddressSpecification> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<PrivateIpAddressSpecification> value);
    internal bool IsSetPrivateIpAddresses();
    public int get_SecondaryPrivateIpAddressCount();
    public void set_SecondaryPrivateIpAddressCount(int value);
    internal bool IsSetSecondaryPrivateIpAddressCount();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.CreateNetworkInterfaceResponse : CreateNetworkInterfaceResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateNetworkInterfaceResult class are now available on the CreateNetworkInterfaceResponse class. You should use the properties on CreateNetworkInterfaceResponse instead of accessing them through CreateNetworkInterfaceResult.")]
public CreateNetworkInterfaceResult CreateNetworkInterfaceResult { get; }
    public CreateNetworkInterfaceResult get_CreateNetworkInterfaceResult();
}
public class Amazon.EC2.Model.CreateNetworkInterfaceResult : AmazonWebServiceResponse {
    private NetworkInterface _networkInterface;
    public NetworkInterface NetworkInterface { get; public set; }
    public NetworkInterface get_NetworkInterface();
    public void set_NetworkInterface(NetworkInterface value);
    internal bool IsSetNetworkInterface();
}
public class Amazon.EC2.Model.CreatePlacementGroupRequest : AmazonEC2Request {
    private string _groupName;
    private PlacementStrategy _strategy;
    public string GroupName { get; public set; }
    public PlacementStrategy Strategy { get; public set; }
    public CreatePlacementGroupRequest(string groupName, PlacementStrategy strategy);
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public PlacementStrategy get_Strategy();
    public void set_Strategy(PlacementStrategy value);
    internal bool IsSetStrategy();
}
public class Amazon.EC2.Model.CreatePlacementGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CreateReservedInstancesListingRequest : AmazonEC2Request {
    private string _clientToken;
    private Nullable`1<int> _instanceCount;
    private List`1<PriceScheduleSpecification> _priceSchedules;
    private string _reservedInstancesId;
    public string ClientToken { get; public set; }
    public int InstanceCount { get; public set; }
    public List`1<PriceScheduleSpecification> PriceSchedules { get; public set; }
    public string ReservedInstancesId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public int get_InstanceCount();
    public void set_InstanceCount(int value);
    internal bool IsSetInstanceCount();
    public List`1<PriceScheduleSpecification> get_PriceSchedules();
    public void set_PriceSchedules(List`1<PriceScheduleSpecification> value);
    internal bool IsSetPriceSchedules();
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
}
public class Amazon.EC2.Model.CreateReservedInstancesListingResponse : CreateReservedInstancesListingResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateReservedInstancesListingResult class are now available on the CreateReservedInstancesListingResponse class. You should use the properties on CreateReservedInstancesListingResponse instead of accessing them through CreateReservedInstancesListingResult.")]
public CreateReservedInstancesListingResult CreateReservedInstancesListingResult { get; }
    public CreateReservedInstancesListingResult get_CreateReservedInstancesListingResult();
}
public class Amazon.EC2.Model.CreateReservedInstancesListingResult : AmazonWebServiceResponse {
    private List`1<ReservedInstancesListing> _reservedInstancesListings;
    public List`1<ReservedInstancesListing> ReservedInstancesListings { get; public set; }
    public List`1<ReservedInstancesListing> get_ReservedInstancesListings();
    public void set_ReservedInstancesListings(List`1<ReservedInstancesListing> value);
    internal bool IsSetReservedInstancesListings();
}
public class Amazon.EC2.Model.CreateRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _gatewayId;
    private string _instanceId;
    private string _networkInterfaceId;
    private string _routeTableId;
    private string _vpcPeeringConnectionId;
    public string DestinationCidrBlock { get; public set; }
    public string GatewayId { get; public set; }
    public string InstanceId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string RouteTableId { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.CreateRouteResponse : CreateRouteResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateRouteResult class are now available on the CreateRouteResponse class. You should use the properties on CreateRouteResponse instead of accessing them through CreateRouteResult.")]
public CreateRouteResult CreateRouteResult { get; }
    public CreateRouteResult get_CreateRouteResult();
}
public class Amazon.EC2.Model.CreateRouteResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public bool Return { get; public set; }
    public bool get_Return();
    public void set_Return(bool value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.CreateRouteTableRequest : AmazonEC2Request {
    private string _vpcId;
    public string VpcId { get; public set; }
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateRouteTableResponse : CreateRouteTableResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateRouteTableResult class are now available on the CreateRouteTableResponse class. You should use the properties on CreateRouteTableResponse instead of accessing them through CreateRouteTableResult.")]
public CreateRouteTableResult CreateRouteTableResult { get; }
    public CreateRouteTableResult get_CreateRouteTableResult();
}
public class Amazon.EC2.Model.CreateRouteTableResult : AmazonWebServiceResponse {
    private RouteTable _routeTable;
    public RouteTable RouteTable { get; public set; }
    public RouteTable get_RouteTable();
    public void set_RouteTable(RouteTable value);
    internal bool IsSetRouteTable();
}
public class Amazon.EC2.Model.CreateSecurityGroupRequest : AmazonEC2Request {
    private string _description;
    private string _groupName;
    private string _vpcId;
    public string Description { get; public set; }
    public string GroupName { get; public set; }
    public string VpcId { get; public set; }
    public CreateSecurityGroupRequest(string groupName, string description);
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateSecurityGroupResponse : CreateSecurityGroupResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateSecurityGroupResult class are now available on the CreateSecurityGroupResponse class. You should use the properties on CreateSecurityGroupResponse instead of accessing them through CreateSecurityGroupResult.")]
public CreateSecurityGroupResult CreateSecurityGroupResult { get; }
    public CreateSecurityGroupResult get_CreateSecurityGroupResult();
}
public class Amazon.EC2.Model.CreateSecurityGroupResult : AmazonWebServiceResponse {
    private string _groupId;
    public string GroupId { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
}
public class Amazon.EC2.Model.CreateSnapshotRequest : AmazonEC2Request {
    private string _description;
    private string _volumeId;
    public string Description { get; public set; }
    public string VolumeId { get; public set; }
    public CreateSnapshotRequest(string volumeId, string description);
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.CreateSnapshotResponse : CreateSnapshotResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateSnapshotResult class are now available on the CreateSnapshotResponse class. You should use the properties on CreateSnapshotResponse instead of accessing them through CreateSnapshotResult.")]
public CreateSnapshotResult CreateSnapshotResult { get; }
    public CreateSnapshotResult get_CreateSnapshotResult();
}
public class Amazon.EC2.Model.CreateSnapshotResult : AmazonWebServiceResponse {
    private Snapshot _snapshot;
    public Snapshot Snapshot { get; public set; }
    public Snapshot get_Snapshot();
    public void set_Snapshot(Snapshot value);
    internal bool IsSetSnapshot();
}
public class Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest : AmazonEC2Request {
    private string _bucket;
    private string _prefix;
    public string Bucket { get; public set; }
    public string Prefix { get; public set; }
    public CreateSpotDatafeedSubscriptionRequest(string bucket);
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
}
public class Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResponse : CreateSpotDatafeedSubscriptionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateSpotDatafeedSubscriptionResult class are now available on the CreateSpotDatafeedSubscriptionResponse class. You should use the properties on CreateSpotDatafeedSubscriptionResponse instead of accessing them through CreateSpotDatafeedSubscriptionResult.")]
public CreateSpotDatafeedSubscriptionResult CreateSpotDatafeedSubscriptionResult { get; }
    public CreateSpotDatafeedSubscriptionResult get_CreateSpotDatafeedSubscriptionResult();
}
public class Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResult : AmazonWebServiceResponse {
    private SpotDatafeedSubscription _spotDatafeedSubscription;
    public SpotDatafeedSubscription SpotDatafeedSubscription { get; public set; }
    public SpotDatafeedSubscription get_SpotDatafeedSubscription();
    public void set_SpotDatafeedSubscription(SpotDatafeedSubscription value);
    internal bool IsSetSpotDatafeedSubscription();
}
public class Amazon.EC2.Model.CreateSubnetRequest : AmazonEC2Request {
    private string _availabilityZone;
    private string _cidrBlock;
    private string _vpcId;
    public string AvailabilityZone { get; public set; }
    public string CidrBlock { get; public set; }
    public string VpcId { get; public set; }
    public CreateSubnetRequest(string vpcId, string cidrBlock);
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateSubnetResponse : CreateSubnetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateSubnetResult class are now available on the CreateSubnetResponse class. You should use the properties on CreateSubnetResponse instead of accessing them through CreateSubnetResult.")]
public CreateSubnetResult CreateSubnetResult { get; }
    public CreateSubnetResult get_CreateSubnetResult();
}
public class Amazon.EC2.Model.CreateSubnetResult : AmazonWebServiceResponse {
    private Subnet _subnet;
    public Subnet Subnet { get; public set; }
    public Subnet get_Subnet();
    public void set_Subnet(Subnet value);
    internal bool IsSetSubnet();
}
public class Amazon.EC2.Model.CreateTagsRequest : AmazonEC2Request {
    private List`1<string> _resources;
    private List`1<Tag> _tags;
    public List`1<string> Resources { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public CreateTagsRequest(List`1<string> resources, List`1<Tag> tags);
    public List`1<string> get_Resources();
    public void set_Resources(List`1<string> value);
    internal bool IsSetResources();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.CreateTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CreateVolumePermission : object {
    private PermissionGroup _group;
    private string _userId;
    public PermissionGroup Group { get; public set; }
    public string UserId { get; public set; }
    public PermissionGroup get_Group();
    public void set_Group(PermissionGroup value);
    internal bool IsSetGroup();
    public string get_UserId();
    public void set_UserId(string value);
    internal bool IsSetUserId();
}
public class Amazon.EC2.Model.CreateVolumePermissionModifications : object {
    private List`1<CreateVolumePermission> _add;
    private List`1<CreateVolumePermission> _remove;
    public List`1<CreateVolumePermission> Add { get; public set; }
    public List`1<CreateVolumePermission> Remove { get; public set; }
    public List`1<CreateVolumePermission> get_Add();
    public void set_Add(List`1<CreateVolumePermission> value);
    internal bool IsSetAdd();
    public List`1<CreateVolumePermission> get_Remove();
    public void set_Remove(List`1<CreateVolumePermission> value);
    internal bool IsSetRemove();
}
public class Amazon.EC2.Model.CreateVolumeRequest : AmazonEC2Request {
    private string _availabilityZone;
    private Nullable`1<bool> _encrypted;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private Nullable`1<int> _size;
    private string _snapshotId;
    private VolumeType _volumeType;
    public string AvailabilityZone { get; public set; }
    public bool Encrypted { get; public set; }
    public int Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public int Size { get; public set; }
    public string SnapshotId { get; public set; }
    public VolumeType VolumeType { get; public set; }
    public CreateVolumeRequest(string availabilityZone, int size);
    public CreateVolumeRequest(string availabilityZone, string snapshotId);
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public bool get_Encrypted();
    public void set_Encrypted(bool value);
    internal bool IsSetEncrypted();
    public int get_Iops();
    public void set_Iops(int value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public int get_Size();
    public void set_Size(int value);
    internal bool IsSetSize();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public VolumeType get_VolumeType();
    public void set_VolumeType(VolumeType value);
    internal bool IsSetVolumeType();
}
public class Amazon.EC2.Model.CreateVolumeResponse : CreateVolumeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateVolumeResult class are now available on the CreateVolumeResponse class. You should use the properties on CreateVolumeResponse instead of accessing them through CreateVolumeResult.")]
public CreateVolumeResult CreateVolumeResult { get; }
    public CreateVolumeResult get_CreateVolumeResult();
}
public class Amazon.EC2.Model.CreateVolumeResult : AmazonWebServiceResponse {
    private Volume _volume;
    public Volume Volume { get; public set; }
    public Volume get_Volume();
    public void set_Volume(Volume value);
    internal bool IsSetVolume();
}
public class Amazon.EC2.Model.CreateVpcEndpointRequest : AmazonEC2Request {
    private string _clientToken;
    private string _policyDocument;
    private List`1<string> _routeTableIds;
    private string _serviceName;
    private string _vpcId;
    public string ClientToken { get; public set; }
    public string PolicyDocument { get; public set; }
    public List`1<string> RouteTableIds { get; public set; }
    public string ServiceName { get; public set; }
    public string VpcId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public List`1<string> get_RouteTableIds();
    public void set_RouteTableIds(List`1<string> value);
    internal bool IsSetRouteTableIds();
    public string get_ServiceName();
    public void set_ServiceName(string value);
    internal bool IsSetServiceName();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateVpcEndpointResponse : CreateVpcEndpointResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateVpcEndpointResult class are now available on the CreateVpcEndpointResponse class. You should use the properties on CreateVpcEndpointResponse instead of accessing them through CreateVpcEndpointResult.")]
public CreateVpcEndpointResult CreateVpcEndpointResult { get; }
    public CreateVpcEndpointResult get_CreateVpcEndpointResult();
}
public class Amazon.EC2.Model.CreateVpcEndpointResult : AmazonWebServiceResponse {
    private string _clientToken;
    private VpcEndpoint _vpcEndpoint;
    public string ClientToken { get; public set; }
    public VpcEndpoint VpcEndpoint { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public VpcEndpoint get_VpcEndpoint();
    public void set_VpcEndpoint(VpcEndpoint value);
    internal bool IsSetVpcEndpoint();
}
public class Amazon.EC2.Model.CreateVpcPeeringConnectionRequest : AmazonEC2Request {
    private string _peerOwnerId;
    private string _peerVpcId;
    private string _vpcId;
    public string PeerOwnerId { get; public set; }
    public string PeerVpcId { get; public set; }
    public string VpcId { get; public set; }
    public string get_PeerOwnerId();
    public void set_PeerOwnerId(string value);
    internal bool IsSetPeerOwnerId();
    public string get_PeerVpcId();
    public void set_PeerVpcId(string value);
    internal bool IsSetPeerVpcId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.CreateVpcPeeringConnectionResponse : CreateVpcPeeringConnectionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateVpcPeeringConnectionResult class are now available on the CreateVpcPeeringConnectionResponse class. You should use the properties on CreateVpcPeeringConnectionResponse instead of accessing them through CreateVpcPeeringConnectionResult.")]
public CreateVpcPeeringConnectionResult CreateVpcPeeringConnectionResult { get; }
    public CreateVpcPeeringConnectionResult get_CreateVpcPeeringConnectionResult();
}
public class Amazon.EC2.Model.CreateVpcPeeringConnectionResult : AmazonWebServiceResponse {
    private VpcPeeringConnection _vpcPeeringConnection;
    public VpcPeeringConnection VpcPeeringConnection { get; public set; }
    public VpcPeeringConnection get_VpcPeeringConnection();
    public void set_VpcPeeringConnection(VpcPeeringConnection value);
    internal bool IsSetVpcPeeringConnection();
}
public class Amazon.EC2.Model.CreateVpcRequest : AmazonEC2Request {
    private string _cidrBlock;
    private Tenancy _instanceTenancy;
    public string CidrBlock { get; public set; }
    public Tenancy InstanceTenancy { get; public set; }
    public CreateVpcRequest(string cidrBlock);
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public Tenancy get_InstanceTenancy();
    public void set_InstanceTenancy(Tenancy value);
    internal bool IsSetInstanceTenancy();
}
public class Amazon.EC2.Model.CreateVpcResponse : CreateVpcResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateVpcResult class are now available on the CreateVpcResponse class. You should use the properties on CreateVpcResponse instead of accessing them through CreateVpcResult.")]
public CreateVpcResult CreateVpcResult { get; }
    public CreateVpcResult get_CreateVpcResult();
}
public class Amazon.EC2.Model.CreateVpcResult : AmazonWebServiceResponse {
    private Vpc _vpc;
    public Vpc Vpc { get; public set; }
    public Vpc get_Vpc();
    public void set_Vpc(Vpc value);
    internal bool IsSetVpc();
}
public class Amazon.EC2.Model.CreateVpnConnectionRequest : AmazonEC2Request {
    private string _customerGatewayId;
    private VpnConnectionOptionsSpecification _options;
    private string _type;
    private string _vpnGatewayId;
    public string CustomerGatewayId { get; public set; }
    public VpnConnectionOptionsSpecification Options { get; public set; }
    public string Type { get; public set; }
    public string VpnGatewayId { get; public set; }
    public CreateVpnConnectionRequest(string type, string customerGatewayId, string vpnGatewayId);
    public string get_CustomerGatewayId();
    public void set_CustomerGatewayId(string value);
    internal bool IsSetCustomerGatewayId();
    public VpnConnectionOptionsSpecification get_Options();
    public void set_Options(VpnConnectionOptionsSpecification value);
    internal bool IsSetOptions();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.CreateVpnConnectionResponse : CreateVpnConnectionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateVpnConnectionResult class are now available on the CreateVpnConnectionResponse class. You should use the properties on CreateVpnConnectionResponse instead of accessing them through CreateVpnConnectionResult.")]
public CreateVpnConnectionResult CreateVpnConnectionResult { get; }
    public CreateVpnConnectionResult get_CreateVpnConnectionResult();
}
public class Amazon.EC2.Model.CreateVpnConnectionResult : AmazonWebServiceResponse {
    private VpnConnection _vpnConnection;
    public VpnConnection VpnConnection { get; public set; }
    public VpnConnection get_VpnConnection();
    public void set_VpnConnection(VpnConnection value);
    internal bool IsSetVpnConnection();
}
public class Amazon.EC2.Model.CreateVpnConnectionRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _vpnConnectionId;
    public string DestinationCidrBlock { get; public set; }
    public string VpnConnectionId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
}
public class Amazon.EC2.Model.CreateVpnConnectionRouteResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.CreateVpnGatewayRequest : AmazonEC2Request {
    private string _availabilityZone;
    private GatewayType _type;
    public string AvailabilityZone { get; public set; }
    public GatewayType Type { get; public set; }
    public CreateVpnGatewayRequest(GatewayType type);
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public GatewayType get_Type();
    public void set_Type(GatewayType value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.CreateVpnGatewayResponse : CreateVpnGatewayResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateVpnGatewayResult class are now available on the CreateVpnGatewayResponse class. You should use the properties on CreateVpnGatewayResponse instead of accessing them through CreateVpnGatewayResult.")]
public CreateVpnGatewayResult CreateVpnGatewayResult { get; }
    public CreateVpnGatewayResult get_CreateVpnGatewayResult();
}
public class Amazon.EC2.Model.CreateVpnGatewayResult : AmazonWebServiceResponse {
    private VpnGateway _vpnGateway;
    public VpnGateway VpnGateway { get; public set; }
    public VpnGateway get_VpnGateway();
    public void set_VpnGateway(VpnGateway value);
    internal bool IsSetVpnGateway();
}
public class Amazon.EC2.Model.CustomerGateway : object {
    private string _bgpAsn;
    private string _customerGatewayId;
    private string _ipAddress;
    private string _state;
    private List`1<Tag> _tags;
    private string _type;
    public string BgpAsn { get; public set; }
    public string CustomerGatewayId { get; public set; }
    public string IpAddress { get; public set; }
    public string State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string Type { get; public set; }
    public string get_BgpAsn();
    public void set_BgpAsn(string value);
    internal bool IsSetBgpAsn();
    public string get_CustomerGatewayId();
    public void set_CustomerGatewayId(string value);
    internal bool IsSetCustomerGatewayId();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.DeleteCustomerGatewayRequest : AmazonEC2Request {
    private string _customerGatewayId;
    public string CustomerGatewayId { get; public set; }
    public DeleteCustomerGatewayRequest(string customerGatewayId);
    public string get_CustomerGatewayId();
    public void set_CustomerGatewayId(string value);
    internal bool IsSetCustomerGatewayId();
}
public class Amazon.EC2.Model.DeleteCustomerGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteDhcpOptionsRequest : AmazonEC2Request {
    private string _dhcpOptionsId;
    public string DhcpOptionsId { get; public set; }
    public DeleteDhcpOptionsRequest(string dhcpOptionsId);
    public string get_DhcpOptionsId();
    public void set_DhcpOptionsId(string value);
    internal bool IsSetDhcpOptionsId();
}
public class Amazon.EC2.Model.DeleteDhcpOptionsResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteFlowLogsRequest : AmazonEC2Request {
    private List`1<string> _flowLogIds;
    public List`1<string> FlowLogIds { get; public set; }
    public List`1<string> get_FlowLogIds();
    public void set_FlowLogIds(List`1<string> value);
    internal bool IsSetFlowLogIds();
}
public class Amazon.EC2.Model.DeleteFlowLogsResponse : DeleteFlowLogsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteFlowLogsResult class are now available on the DeleteFlowLogsResponse class. You should use the properties on DeleteFlowLogsResponse instead of accessing them through DeleteFlowLogsResult.")]
public DeleteFlowLogsResult DeleteFlowLogsResult { get; }
    public DeleteFlowLogsResult get_DeleteFlowLogsResult();
}
public class Amazon.EC2.Model.DeleteFlowLogsResult : AmazonWebServiceResponse {
    private List`1<UnsuccessfulItem> _unsuccessful;
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.DeleteInternetGatewayRequest : AmazonEC2Request {
    private string _internetGatewayId;
    public string InternetGatewayId { get; public set; }
    public string get_InternetGatewayId();
    public void set_InternetGatewayId(string value);
    internal bool IsSetInternetGatewayId();
}
public class Amazon.EC2.Model.DeleteInternetGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteKeyPairRequest : AmazonEC2Request {
    private string _keyName;
    public string KeyName { get; public set; }
    public DeleteKeyPairRequest(string keyName);
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
}
public class Amazon.EC2.Model.DeleteKeyPairResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteNetworkAclEntryRequest : AmazonEC2Request {
    private Nullable`1<bool> _egress;
    private string _networkAclId;
    private Nullable`1<int> _ruleNumber;
    public bool Egress { get; public set; }
    public string NetworkAclId { get; public set; }
    public int RuleNumber { get; public set; }
    public bool get_Egress();
    public void set_Egress(bool value);
    internal bool IsSetEgress();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
    public int get_RuleNumber();
    public void set_RuleNumber(int value);
    internal bool IsSetRuleNumber();
}
public class Amazon.EC2.Model.DeleteNetworkAclEntryResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteNetworkAclRequest : AmazonEC2Request {
    private string _networkAclId;
    public string NetworkAclId { get; public set; }
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
}
public class Amazon.EC2.Model.DeleteNetworkAclResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteNetworkInterfaceRequest : AmazonEC2Request {
    private string _networkInterfaceId;
    public string NetworkInterfaceId { get; public set; }
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.DeleteNetworkInterfaceResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeletePlacementGroupRequest : AmazonEC2Request {
    private string _groupName;
    public string GroupName { get; public set; }
    public DeletePlacementGroupRequest(string groupName);
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.DeletePlacementGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _routeTableId;
    public string DestinationCidrBlock { get; public set; }
    public string RouteTableId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
}
public class Amazon.EC2.Model.DeleteRouteResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteRouteTableRequest : AmazonEC2Request {
    private string _routeTableId;
    public string RouteTableId { get; public set; }
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
}
public class Amazon.EC2.Model.DeleteRouteTableResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteSecurityGroupRequest : AmazonEC2Request {
    private string _groupId;
    private string _groupName;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public DeleteSecurityGroupRequest(string groupName);
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.DeleteSecurityGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteSnapshotRequest : AmazonEC2Request {
    private string _snapshotId;
    public string SnapshotId { get; public set; }
    public DeleteSnapshotRequest(string snapshotId);
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.DeleteSnapshotResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteSubnetRequest : AmazonEC2Request {
    private string _subnetId;
    public string SubnetId { get; public set; }
    public DeleteSubnetRequest(string subnetId);
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.DeleteSubnetResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteTagsRequest : AmazonEC2Request {
    private List`1<string> _resources;
    private List`1<Tag> _tags;
    public List`1<string> Resources { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public DeleteTagsRequest(List`1<string> resources);
    public List`1<string> get_Resources();
    public void set_Resources(List`1<string> value);
    internal bool IsSetResources();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.DeleteTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVolumeRequest : AmazonEC2Request {
    private string _volumeId;
    public string VolumeId { get; public set; }
    public DeleteVolumeRequest(string volumeId);
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.DeleteVolumeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVpcEndpointsRequest : AmazonEC2Request {
    private List`1<string> _vpcEndpointIds;
    public List`1<string> VpcEndpointIds { get; public set; }
    public List`1<string> get_VpcEndpointIds();
    public void set_VpcEndpointIds(List`1<string> value);
    internal bool IsSetVpcEndpointIds();
}
public class Amazon.EC2.Model.DeleteVpcEndpointsResponse : DeleteVpcEndpointsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteVpcEndpointsResult class are now available on the DeleteVpcEndpointsResponse class. You should use the properties on DeleteVpcEndpointsResponse instead of accessing them through DeleteVpcEndpointsResult.")]
public DeleteVpcEndpointsResult DeleteVpcEndpointsResult { get; }
    public DeleteVpcEndpointsResult get_DeleteVpcEndpointsResult();
}
public class Amazon.EC2.Model.DeleteVpcEndpointsResult : AmazonWebServiceResponse {
    private List`1<UnsuccessfulItem> _unsuccessful;
    public List`1<UnsuccessfulItem> Unsuccessful { get; public set; }
    public List`1<UnsuccessfulItem> get_Unsuccessful();
    public void set_Unsuccessful(List`1<UnsuccessfulItem> value);
    internal bool IsSetUnsuccessful();
}
public class Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest : AmazonEC2Request {
    private string _vpcPeeringConnectionId;
    public string VpcPeeringConnectionId { get; public set; }
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.DeleteVpcPeeringConnectionResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVpcRequest : AmazonEC2Request {
    private string _vpcId;
    public string VpcId { get; public set; }
    public DeleteVpcRequest(string vpcId);
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DeleteVpcResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVpnConnectionRequest : AmazonEC2Request {
    private string _vpnConnectionId;
    public string VpnConnectionId { get; public set; }
    public DeleteVpnConnectionRequest(string vpnConnectionId);
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
}
public class Amazon.EC2.Model.DeleteVpnConnectionResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVpnConnectionRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _vpnConnectionId;
    public string DestinationCidrBlock { get; public set; }
    public string VpnConnectionId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
}
public class Amazon.EC2.Model.DeleteVpnConnectionRouteResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeleteVpnGatewayRequest : AmazonEC2Request {
    private string _vpnGatewayId;
    public string VpnGatewayId { get; public set; }
    public DeleteVpnGatewayRequest(string vpnGatewayId);
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.DeleteVpnGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DeregisterImageRequest : AmazonEC2Request {
    private string _imageId;
    public string ImageId { get; public set; }
    public DeregisterImageRequest(string imageId);
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.DeregisterImageResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DescribeAccountAttributesRequest : AmazonEC2Request {
    private List`1<string> _attributeNames;
    public List`1<string> AttributeNames { get; public set; }
    public List`1<string> get_AttributeNames();
    public void set_AttributeNames(List`1<string> value);
    internal bool IsSetAttributeNames();
}
public class Amazon.EC2.Model.DescribeAccountAttributesResponse : DescribeAccountAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAccountAttributesResult class are now available on the DescribeAccountAttributesResponse class. You should use the properties on DescribeAccountAttributesResponse instead of accessing them through DescribeAccountAttributesResult.")]
public DescribeAccountAttributesResult DescribeAccountAttributesResult { get; }
    public DescribeAccountAttributesResult get_DescribeAccountAttributesResult();
}
public class Amazon.EC2.Model.DescribeAccountAttributesResult : AmazonWebServiceResponse {
    private List`1<AccountAttribute> _accountAttributes;
    public List`1<AccountAttribute> AccountAttributes { get; public set; }
    public List`1<AccountAttribute> get_AccountAttributes();
    public void set_AccountAttributes(List`1<AccountAttribute> value);
    internal bool IsSetAccountAttributes();
}
public class Amazon.EC2.Model.DescribeAddressesRequest : AmazonEC2Request {
    private List`1<string> _allocationIds;
    private List`1<Filter> _filters;
    private List`1<string> _publicIps;
    public List`1<string> AllocationIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> PublicIps { get; public set; }
    public List`1<string> get_AllocationIds();
    public void set_AllocationIds(List`1<string> value);
    internal bool IsSetAllocationIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_PublicIps();
    public void set_PublicIps(List`1<string> value);
    internal bool IsSetPublicIps();
}
public class Amazon.EC2.Model.DescribeAddressesResponse : DescribeAddressesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAddressesResult class are now available on the DescribeAddressesResponse class. You should use the properties on DescribeAddressesResponse instead of accessing them through DescribeAddressesResult.")]
public DescribeAddressesResult DescribeAddressesResult { get; }
    public DescribeAddressesResult get_DescribeAddressesResult();
}
public class Amazon.EC2.Model.DescribeAddressesResult : AmazonWebServiceResponse {
    private List`1<Address> _addresses;
    public List`1<Address> Addresses { get; public set; }
    public List`1<Address> get_Addresses();
    public void set_Addresses(List`1<Address> value);
    internal bool IsSetAddresses();
}
public class Amazon.EC2.Model.DescribeAvailabilityZonesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _zoneNames;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> ZoneNames { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_ZoneNames();
    public void set_ZoneNames(List`1<string> value);
    internal bool IsSetZoneNames();
}
public class Amazon.EC2.Model.DescribeAvailabilityZonesResponse : DescribeAvailabilityZonesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeAvailabilityZonesResult class are now available on the DescribeAvailabilityZonesResponse class. You should use the properties on DescribeAvailabilityZonesResponse instead of accessing them through DescribeAvailabilityZonesResult.")]
public DescribeAvailabilityZonesResult DescribeAvailabilityZonesResult { get; }
    public DescribeAvailabilityZonesResult get_DescribeAvailabilityZonesResult();
}
public class Amazon.EC2.Model.DescribeAvailabilityZonesResult : AmazonWebServiceResponse {
    private List`1<AvailabilityZone> _availabilityZones;
    public List`1<AvailabilityZone> AvailabilityZones { get; public set; }
    public List`1<AvailabilityZone> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<AvailabilityZone> value);
    internal bool IsSetAvailabilityZones();
}
public class Amazon.EC2.Model.DescribeBundleTasksRequest : AmazonEC2Request {
    private List`1<string> _bundleIds;
    private List`1<Filter> _filters;
    public List`1<string> BundleIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> get_BundleIds();
    public void set_BundleIds(List`1<string> value);
    internal bool IsSetBundleIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
}
public class Amazon.EC2.Model.DescribeBundleTasksResponse : DescribeBundleTasksResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeBundleTasksResult class are now available on the DescribeBundleTasksResponse class. You should use the properties on DescribeBundleTasksResponse instead of accessing them through DescribeBundleTasksResult.")]
public DescribeBundleTasksResult DescribeBundleTasksResult { get; }
    public DescribeBundleTasksResult get_DescribeBundleTasksResult();
}
public class Amazon.EC2.Model.DescribeBundleTasksResult : AmazonWebServiceResponse {
    private List`1<BundleTask> _bundleTasks;
    public List`1<BundleTask> BundleTasks { get; public set; }
    public List`1<BundleTask> get_BundleTasks();
    public void set_BundleTasks(List`1<BundleTask> value);
    internal bool IsSetBundleTasks();
}
public class Amazon.EC2.Model.DescribeClassicLinkInstancesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _instanceIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeClassicLinkInstancesResponse : DescribeClassicLinkInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeClassicLinkInstancesResult class are now available on the DescribeClassicLinkInstancesResponse class. You should use the properties on DescribeClassicLinkInstancesResponse instead of accessing them through DescribeClassicLinkInstancesResult.")]
public DescribeClassicLinkInstancesResult DescribeClassicLinkInstancesResult { get; }
    public DescribeClassicLinkInstancesResult get_DescribeClassicLinkInstancesResult();
}
public class Amazon.EC2.Model.DescribeClassicLinkInstancesResult : AmazonWebServiceResponse {
    private List`1<ClassicLinkInstance> _instances;
    private string _nextToken;
    public List`1<ClassicLinkInstance> Instances { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ClassicLinkInstance> get_Instances();
    public void set_Instances(List`1<ClassicLinkInstance> value);
    internal bool IsSetInstances();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeConversionTasksRequest : AmazonEC2Request {
    private List`1<string> _conversionTaskIds;
    private List`1<Filter> _filters;
    public List`1<string> ConversionTaskIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> get_ConversionTaskIds();
    public void set_ConversionTaskIds(List`1<string> value);
    internal bool IsSetConversionTaskIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
}
public class Amazon.EC2.Model.DescribeConversionTasksResponse : DescribeConversionTasksResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeConversionTasksResult class are now available on the DescribeConversionTasksResponse class. You should use the properties on DescribeConversionTasksResponse instead of accessing them through DescribeConversionTasksResult.")]
public DescribeConversionTasksResult DescribeConversionTasksResult { get; }
    public DescribeConversionTasksResult get_DescribeConversionTasksResult();
}
public class Amazon.EC2.Model.DescribeConversionTasksResult : AmazonWebServiceResponse {
    private List`1<ConversionTask> _conversionTasks;
    public List`1<ConversionTask> ConversionTasks { get; public set; }
    public List`1<ConversionTask> get_ConversionTasks();
    public void set_ConversionTasks(List`1<ConversionTask> value);
    internal bool IsSetConversionTasks();
}
public class Amazon.EC2.Model.DescribeCustomerGatewaysRequest : AmazonEC2Request {
    private List`1<string> _customerGatewayIds;
    private List`1<Filter> _filters;
    public List`1<string> CustomerGatewayIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> get_CustomerGatewayIds();
    public void set_CustomerGatewayIds(List`1<string> value);
    internal bool IsSetCustomerGatewayIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
}
public class Amazon.EC2.Model.DescribeCustomerGatewaysResponse : DescribeCustomerGatewaysResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeCustomerGatewaysResult class are now available on the DescribeCustomerGatewaysResponse class. You should use the properties on DescribeCustomerGatewaysResponse instead of accessing them through DescribeCustomerGatewaysResult.")]
public DescribeCustomerGatewaysResult DescribeCustomerGatewaysResult { get; }
    public DescribeCustomerGatewaysResult get_DescribeCustomerGatewaysResult();
}
public class Amazon.EC2.Model.DescribeCustomerGatewaysResult : AmazonWebServiceResponse {
    private List`1<CustomerGateway> _customerGateways;
    public List`1<CustomerGateway> CustomerGateways { get; public set; }
    public List`1<CustomerGateway> get_CustomerGateways();
    public void set_CustomerGateways(List`1<CustomerGateway> value);
    internal bool IsSetCustomerGateways();
}
public class Amazon.EC2.Model.DescribeDhcpOptionsRequest : AmazonEC2Request {
    private List`1<string> _dhcpOptionsIds;
    private List`1<Filter> _filters;
    public List`1<string> DhcpOptionsIds { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> get_DhcpOptionsIds();
    public void set_DhcpOptionsIds(List`1<string> value);
    internal bool IsSetDhcpOptionsIds();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
}
public class Amazon.EC2.Model.DescribeDhcpOptionsResponse : DescribeDhcpOptionsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeDhcpOptionsResult class are now available on the DescribeDhcpOptionsResponse class. You should use the properties on DescribeDhcpOptionsResponse instead of accessing them through DescribeDhcpOptionsResult.")]
public DescribeDhcpOptionsResult DescribeDhcpOptionsResult { get; }
    public DescribeDhcpOptionsResult get_DescribeDhcpOptionsResult();
}
public class Amazon.EC2.Model.DescribeDhcpOptionsResult : AmazonWebServiceResponse {
    private List`1<DhcpOptions> _dhcpOptions;
    public List`1<DhcpOptions> DhcpOptions { get; public set; }
    public List`1<DhcpOptions> get_DhcpOptions();
    public void set_DhcpOptions(List`1<DhcpOptions> value);
    internal bool IsSetDhcpOptions();
}
public class Amazon.EC2.Model.DescribeExportTasksRequest : AmazonEC2Request {
    private List`1<string> _exportTaskIds;
    public List`1<string> ExportTaskIds { get; public set; }
    public List`1<string> get_ExportTaskIds();
    public void set_ExportTaskIds(List`1<string> value);
    internal bool IsSetExportTaskIds();
}
public class Amazon.EC2.Model.DescribeExportTasksResponse : DescribeExportTasksResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeExportTasksResult class are now available on the DescribeExportTasksResponse class. You should use the properties on DescribeExportTasksResponse instead of accessing them through DescribeExportTasksResult.")]
public DescribeExportTasksResult DescribeExportTasksResult { get; }
    public DescribeExportTasksResult get_DescribeExportTasksResult();
}
public class Amazon.EC2.Model.DescribeExportTasksResult : AmazonWebServiceResponse {
    private List`1<ExportTask> _exportTasks;
    public List`1<ExportTask> ExportTasks { get; public set; }
    public List`1<ExportTask> get_ExportTasks();
    public void set_ExportTasks(List`1<ExportTask> value);
    internal bool IsSetExportTasks();
}
public class Amazon.EC2.Model.DescribeFlowLogsRequest : AmazonEC2Request {
    private List`1<Filter> _filter;
    private List`1<string> _flowLogIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filter { get; public set; }
    public List`1<string> FlowLogIds { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filter();
    public void set_Filter(List`1<Filter> value);
    internal bool IsSetFilter();
    public List`1<string> get_FlowLogIds();
    public void set_FlowLogIds(List`1<string> value);
    internal bool IsSetFlowLogIds();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeFlowLogsResponse : DescribeFlowLogsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeFlowLogsResult class are now available on the DescribeFlowLogsResponse class. You should use the properties on DescribeFlowLogsResponse instead of accessing them through DescribeFlowLogsResult.")]
public DescribeFlowLogsResult DescribeFlowLogsResult { get; }
    public DescribeFlowLogsResult get_DescribeFlowLogsResult();
}
public class Amazon.EC2.Model.DescribeFlowLogsResult : AmazonWebServiceResponse {
    private List`1<FlowLog> _flowLogs;
    private string _nextToken;
    public List`1<FlowLog> FlowLogs { get; public set; }
    public string NextToken { get; public set; }
    public List`1<FlowLog> get_FlowLogs();
    public void set_FlowLogs(List`1<FlowLog> value);
    internal bool IsSetFlowLogs();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeImageAttributeRequest : AmazonEC2Request {
    private ImageAttributeName _attribute;
    private string _imageId;
    public ImageAttributeName Attribute { get; public set; }
    public string ImageId { get; public set; }
    public DescribeImageAttributeRequest(string imageId, ImageAttributeName attribute);
    public ImageAttributeName get_Attribute();
    public void set_Attribute(ImageAttributeName value);
    internal bool IsSetAttribute();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.DescribeImageAttributeResponse : DescribeImageAttributeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeImageAttributeResult class are now available on the DescribeImageAttributeResponse class. You should use the properties on DescribeImageAttributeResponse instead of accessing them through DescribeImageAttributeResult.")]
public DescribeImageAttributeResult DescribeImageAttributeResult { get; }
    public DescribeImageAttributeResult get_DescribeImageAttributeResult();
}
public class Amazon.EC2.Model.DescribeImageAttributeResult : AmazonWebServiceResponse {
    private ImageAttribute _imageAttribute;
    public ImageAttribute ImageAttribute { get; public set; }
    public ImageAttribute get_ImageAttribute();
    public void set_ImageAttribute(ImageAttribute value);
    internal bool IsSetImageAttribute();
}
public class Amazon.EC2.Model.DescribeImagesRequest : AmazonEC2Request {
    private List`1<string> _executableUsers;
    private List`1<Filter> _filters;
    private List`1<string> _imageIds;
    private List`1<string> _owners;
    public List`1<string> ExecutableUsers { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> ImageIds { get; public set; }
    public List`1<string> Owners { get; public set; }
    public List`1<string> get_ExecutableUsers();
    public void set_ExecutableUsers(List`1<string> value);
    internal bool IsSetExecutableUsers();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_ImageIds();
    public void set_ImageIds(List`1<string> value);
    internal bool IsSetImageIds();
    public List`1<string> get_Owners();
    public void set_Owners(List`1<string> value);
    internal bool IsSetOwners();
}
public class Amazon.EC2.Model.DescribeImagesResponse : DescribeImagesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeImagesResult class are now available on the DescribeImagesResponse class. You should use the properties on DescribeImagesResponse instead of accessing them through DescribeImagesResult.")]
public DescribeImagesResult DescribeImagesResult { get; }
    public DescribeImagesResult get_DescribeImagesResult();
}
public class Amazon.EC2.Model.DescribeImagesResult : AmazonWebServiceResponse {
    private List`1<Image> _images;
    public List`1<Image> Images { get; public set; }
    public List`1<Image> get_Images();
    public void set_Images(List`1<Image> value);
    internal bool IsSetImages();
}
public class Amazon.EC2.Model.DescribeImportImageTasksRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _importTaskIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> ImportTaskIds { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_ImportTaskIds();
    public void set_ImportTaskIds(List`1<string> value);
    internal bool IsSetImportTaskIds();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeImportImageTasksResponse : DescribeImportImageTasksResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeImportImageTasksResult class are now available on the DescribeImportImageTasksResponse class. You should use the properties on DescribeImportImageTasksResponse instead of accessing them through DescribeImportImageTasksResult.")]
public DescribeImportImageTasksResult DescribeImportImageTasksResult { get; }
    public DescribeImportImageTasksResult get_DescribeImportImageTasksResult();
}
public class Amazon.EC2.Model.DescribeImportImageTasksResult : AmazonWebServiceResponse {
    private List`1<ImportImageTask> _importImageTasks;
    private string _nextToken;
    public List`1<ImportImageTask> ImportImageTasks { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ImportImageTask> get_ImportImageTasks();
    public void set_ImportImageTasks(List`1<ImportImageTask> value);
    internal bool IsSetImportImageTasks();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeImportSnapshotTasksRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _importTaskIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> ImportTaskIds { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_ImportTaskIds();
    public void set_ImportTaskIds(List`1<string> value);
    internal bool IsSetImportTaskIds();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeImportSnapshotTasksResponse : DescribeImportSnapshotTasksResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeImportSnapshotTasksResult class are now available on the DescribeImportSnapshotTasksResponse class. You should use the properties on DescribeImportSnapshotTasksResponse instead of accessing them through DescribeImportSnapshotTasksResult.")]
public DescribeImportSnapshotTasksResult DescribeImportSnapshotTasksResult { get; }
    public DescribeImportSnapshotTasksResult get_DescribeImportSnapshotTasksResult();
}
public class Amazon.EC2.Model.DescribeImportSnapshotTasksResult : AmazonWebServiceResponse {
    private List`1<ImportSnapshotTask> _importSnapshotTasks;
    private string _nextToken;
    public List`1<ImportSnapshotTask> ImportSnapshotTasks { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ImportSnapshotTask> get_ImportSnapshotTasks();
    public void set_ImportSnapshotTasks(List`1<ImportSnapshotTask> value);
    internal bool IsSetImportSnapshotTasks();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceAttributeRequest : AmazonEC2Request {
    private InstanceAttributeName _attribute;
    private string _instanceId;
    public InstanceAttributeName Attribute { get; public set; }
    public string InstanceId { get; public set; }
    public DescribeInstanceAttributeRequest(string instanceId, InstanceAttributeName attribute);
    public InstanceAttributeName get_Attribute();
    public void set_Attribute(InstanceAttributeName value);
    internal bool IsSetAttribute();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.DescribeInstanceAttributeResponse : DescribeInstanceAttributeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeInstanceAttributeResult class are now available on the DescribeInstanceAttributeResponse class. You should use the properties on DescribeInstanceAttributeResponse instead of accessing them through DescribeInstanceAttributeResult.")]
public DescribeInstanceAttributeResult DescribeInstanceAttributeResult { get; }
    public DescribeInstanceAttributeResult get_DescribeInstanceAttributeResult();
}
public class Amazon.EC2.Model.DescribeInstanceAttributeResult : AmazonWebServiceResponse {
    private InstanceAttribute _instanceAttribute;
    public InstanceAttribute InstanceAttribute { get; public set; }
    public InstanceAttribute get_InstanceAttribute();
    public void set_InstanceAttribute(InstanceAttribute value);
    internal bool IsSetInstanceAttribute();
}
public class Amazon.EC2.Model.DescribeInstancesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _instanceIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstancesResponse : DescribeInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeInstancesResult class are now available on the DescribeInstancesResponse class. You should use the properties on DescribeInstancesResponse instead of accessing them through DescribeInstancesResult.")]
public DescribeInstancesResult DescribeInstancesResult { get; }
    public DescribeInstancesResult get_DescribeInstancesResult();
}
public class Amazon.EC2.Model.DescribeInstancesResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Reservation> _reservations;
    public string NextToken { get; public set; }
    public List`1<Reservation> Reservations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Reservation> get_Reservations();
    public void set_Reservations(List`1<Reservation> value);
    internal bool IsSetReservations();
}
public class Amazon.EC2.Model.DescribeInstanceStatusRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<bool> _includeAllInstances;
    private List`1<string> _instanceIds;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public bool IncludeAllInstances { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public bool get_IncludeAllInstances();
    public void set_IncludeAllInstances(bool value);
    internal bool IsSetIncludeAllInstances();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInstanceStatusResponse : DescribeInstanceStatusResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeInstanceStatusResult class are now available on the DescribeInstanceStatusResponse class. You should use the properties on DescribeInstanceStatusResponse instead of accessing them through DescribeInstanceStatusResult.")]
public DescribeInstanceStatusResult DescribeInstanceStatusResult { get; }
    public DescribeInstanceStatusResult get_DescribeInstanceStatusResult();
}
public class Amazon.EC2.Model.DescribeInstanceStatusResult : AmazonWebServiceResponse {
    private List`1<InstanceStatus> _instanceStatuses;
    private string _nextToken;
    public List`1<InstanceStatus> InstanceStatuses { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InstanceStatus> get_InstanceStatuses();
    public void set_InstanceStatuses(List`1<InstanceStatus> value);
    internal bool IsSetInstanceStatuses();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeInternetGatewaysRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _internetGatewayIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InternetGatewayIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InternetGatewayIds();
    public void set_InternetGatewayIds(List`1<string> value);
    internal bool IsSetInternetGatewayIds();
}
public class Amazon.EC2.Model.DescribeInternetGatewaysResponse : DescribeInternetGatewaysResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeInternetGatewaysResult class are now available on the DescribeInternetGatewaysResponse class. You should use the properties on DescribeInternetGatewaysResponse instead of accessing them through DescribeInternetGatewaysResult.")]
public DescribeInternetGatewaysResult DescribeInternetGatewaysResult { get; }
    public DescribeInternetGatewaysResult get_DescribeInternetGatewaysResult();
}
public class Amazon.EC2.Model.DescribeInternetGatewaysResult : AmazonWebServiceResponse {
    private List`1<InternetGateway> _internetGateways;
    public List`1<InternetGateway> InternetGateways { get; public set; }
    public List`1<InternetGateway> get_InternetGateways();
    public void set_InternetGateways(List`1<InternetGateway> value);
    internal bool IsSetInternetGateways();
}
public class Amazon.EC2.Model.DescribeKeyPairsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _keyNames;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> KeyNames { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_KeyNames();
    public void set_KeyNames(List`1<string> value);
    internal bool IsSetKeyNames();
}
public class Amazon.EC2.Model.DescribeKeyPairsResponse : DescribeKeyPairsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeKeyPairsResult class are now available on the DescribeKeyPairsResponse class. You should use the properties on DescribeKeyPairsResponse instead of accessing them through DescribeKeyPairsResult.")]
public DescribeKeyPairsResult DescribeKeyPairsResult { get; }
    public DescribeKeyPairsResult get_DescribeKeyPairsResult();
}
public class Amazon.EC2.Model.DescribeKeyPairsResult : AmazonWebServiceResponse {
    private List`1<KeyPairInfo> _keyPairs;
    public List`1<KeyPairInfo> KeyPairs { get; public set; }
    public List`1<KeyPairInfo> get_KeyPairs();
    public void set_KeyPairs(List`1<KeyPairInfo> value);
    internal bool IsSetKeyPairs();
}
public class Amazon.EC2.Model.DescribeMovingAddressesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _publicIps;
    public List`1<Filter> Filters { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> PublicIps { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_PublicIps();
    public void set_PublicIps(List`1<string> value);
    internal bool IsSetPublicIps();
}
public class Amazon.EC2.Model.DescribeMovingAddressesResponse : DescribeMovingAddressesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeMovingAddressesResult class are now available on the DescribeMovingAddressesResponse class. You should use the properties on DescribeMovingAddressesResponse instead of accessing them through DescribeMovingAddressesResult.")]
public DescribeMovingAddressesResult DescribeMovingAddressesResult { get; }
    public DescribeMovingAddressesResult get_DescribeMovingAddressesResult();
}
public class Amazon.EC2.Model.DescribeMovingAddressesResult : AmazonWebServiceResponse {
    private List`1<MovingAddressStatus> _movingAddressStatuses;
    private string _nextToken;
    public List`1<MovingAddressStatus> MovingAddressStatuses { get; public set; }
    public string NextToken { get; public set; }
    public List`1<MovingAddressStatus> get_MovingAddressStatuses();
    public void set_MovingAddressStatuses(List`1<MovingAddressStatus> value);
    internal bool IsSetMovingAddressStatuses();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeNetworkAclsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _networkAclIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> NetworkAclIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_NetworkAclIds();
    public void set_NetworkAclIds(List`1<string> value);
    internal bool IsSetNetworkAclIds();
}
public class Amazon.EC2.Model.DescribeNetworkAclsResponse : DescribeNetworkAclsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeNetworkAclsResult class are now available on the DescribeNetworkAclsResponse class. You should use the properties on DescribeNetworkAclsResponse instead of accessing them through DescribeNetworkAclsResult.")]
public DescribeNetworkAclsResult DescribeNetworkAclsResult { get; }
    public DescribeNetworkAclsResult get_DescribeNetworkAclsResult();
}
public class Amazon.EC2.Model.DescribeNetworkAclsResult : AmazonWebServiceResponse {
    private List`1<NetworkAcl> _networkAcls;
    public List`1<NetworkAcl> NetworkAcls { get; public set; }
    public List`1<NetworkAcl> get_NetworkAcls();
    public void set_NetworkAcls(List`1<NetworkAcl> value);
    internal bool IsSetNetworkAcls();
}
public class Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest : AmazonEC2Request {
    private NetworkInterfaceAttribute _attribute;
    private string _networkInterfaceId;
    public NetworkInterfaceAttribute Attribute { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public NetworkInterfaceAttribute get_Attribute();
    public void set_Attribute(NetworkInterfaceAttribute value);
    internal bool IsSetAttribute();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
}
public class Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse : DescribeNetworkInterfaceAttributeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeNetworkInterfaceAttributeResult class are now available on the DescribeNetworkInterfaceAttributeResponse class. You should use the properties on DescribeNetworkInterfaceAttributeResponse instead of accessing them through DescribeNetworkInterfaceAttributeResult.")]
public DescribeNetworkInterfaceAttributeResult DescribeNetworkInterfaceAttributeResult { get; }
    public DescribeNetworkInterfaceAttributeResult get_DescribeNetworkInterfaceAttributeResult();
}
public class Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResult : AmazonWebServiceResponse {
    private NetworkInterfaceAttachment _attachment;
    private string _description;
    private List`1<GroupIdentifier> _groups;
    private string _networkInterfaceId;
    private Nullable`1<bool> _sourceDestCheck;
    public NetworkInterfaceAttachment Attachment { get; public set; }
    public string Description { get; public set; }
    public List`1<GroupIdentifier> Groups { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public bool SourceDestCheck { get; public set; }
    public NetworkInterfaceAttachment get_Attachment();
    public void set_Attachment(NetworkInterfaceAttachment value);
    internal bool IsSetAttachment();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public bool get_SourceDestCheck();
    public void set_SourceDestCheck(bool value);
    internal bool IsSetSourceDestCheck();
}
public class Amazon.EC2.Model.DescribeNetworkInterfacesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _networkInterfaceIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> NetworkInterfaceIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_NetworkInterfaceIds();
    public void set_NetworkInterfaceIds(List`1<string> value);
    internal bool IsSetNetworkInterfaceIds();
}
public class Amazon.EC2.Model.DescribeNetworkInterfacesResponse : DescribeNetworkInterfacesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeNetworkInterfacesResult class are now available on the DescribeNetworkInterfacesResponse class. You should use the properties on DescribeNetworkInterfacesResponse instead of accessing them through DescribeNetworkInterfacesResult.")]
public DescribeNetworkInterfacesResult DescribeNetworkInterfacesResult { get; }
    public DescribeNetworkInterfacesResult get_DescribeNetworkInterfacesResult();
}
public class Amazon.EC2.Model.DescribeNetworkInterfacesResult : AmazonWebServiceResponse {
    private List`1<NetworkInterface> _networkInterfaces;
    public List`1<NetworkInterface> NetworkInterfaces { get; public set; }
    public List`1<NetworkInterface> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<NetworkInterface> value);
    internal bool IsSetNetworkInterfaces();
}
public class Amazon.EC2.Model.DescribePlacementGroupsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _groupNames;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> GroupNames { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
}
public class Amazon.EC2.Model.DescribePlacementGroupsResponse : DescribePlacementGroupsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribePlacementGroupsResult class are now available on the DescribePlacementGroupsResponse class. You should use the properties on DescribePlacementGroupsResponse instead of accessing them through DescribePlacementGroupsResult.")]
public DescribePlacementGroupsResult DescribePlacementGroupsResult { get; }
    public DescribePlacementGroupsResult get_DescribePlacementGroupsResult();
}
public class Amazon.EC2.Model.DescribePlacementGroupsResult : AmazonWebServiceResponse {
    private List`1<PlacementGroup> _placementGroups;
    public List`1<PlacementGroup> PlacementGroups { get; public set; }
    public List`1<PlacementGroup> get_PlacementGroups();
    public void set_PlacementGroups(List`1<PlacementGroup> value);
    internal bool IsSetPlacementGroups();
}
public class Amazon.EC2.Model.DescribePrefixListsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _prefixListIds;
    public List`1<Filter> Filters { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> PrefixListIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_PrefixListIds();
    public void set_PrefixListIds(List`1<string> value);
    internal bool IsSetPrefixListIds();
}
public class Amazon.EC2.Model.DescribePrefixListsResponse : DescribePrefixListsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribePrefixListsResult class are now available on the DescribePrefixListsResponse class. You should use the properties on DescribePrefixListsResponse instead of accessing them through DescribePrefixListsResult.")]
public DescribePrefixListsResult DescribePrefixListsResult { get; }
    public DescribePrefixListsResult get_DescribePrefixListsResult();
}
public class Amazon.EC2.Model.DescribePrefixListsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PrefixList> _prefixLists;
    public string NextToken { get; public set; }
    public List`1<PrefixList> PrefixLists { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PrefixList> get_PrefixLists();
    public void set_PrefixLists(List`1<PrefixList> value);
    internal bool IsSetPrefixLists();
}
public class Amazon.EC2.Model.DescribeRegionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _regionNames;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> RegionNames { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_RegionNames();
    public void set_RegionNames(List`1<string> value);
    internal bool IsSetRegionNames();
}
public class Amazon.EC2.Model.DescribeRegionsResponse : DescribeRegionsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeRegionsResult class are now available on the DescribeRegionsResponse class. You should use the properties on DescribeRegionsResponse instead of accessing them through DescribeRegionsResult.")]
public DescribeRegionsResult DescribeRegionsResult { get; }
    public DescribeRegionsResult get_DescribeRegionsResult();
}
public class Amazon.EC2.Model.DescribeRegionsResult : AmazonWebServiceResponse {
    private List`1<Region> _regions;
    public List`1<Region> Regions { get; public set; }
    public List`1<Region> get_Regions();
    public void set_Regions(List`1<Region> value);
    internal bool IsSetRegions();
}
public class Amazon.EC2.Model.DescribeReservedInstancesListingsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _reservedInstancesId;
    private string _reservedInstancesListingId;
    public List`1<Filter> Filters { get; public set; }
    public string ReservedInstancesId { get; public set; }
    public string ReservedInstancesListingId { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
    public string get_ReservedInstancesListingId();
    public void set_ReservedInstancesListingId(string value);
    internal bool IsSetReservedInstancesListingId();
}
public class Amazon.EC2.Model.DescribeReservedInstancesListingsResponse : DescribeReservedInstancesListingsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeReservedInstancesListingsResult class are now available on the DescribeReservedInstancesListingsResponse class. You should use the properties on DescribeReservedInstancesListingsResponse instead of accessing them through DescribeReservedInstancesListingsResult.")]
public DescribeReservedInstancesListingsResult DescribeReservedInstancesListingsResult { get; }
    public DescribeReservedInstancesListingsResult get_DescribeReservedInstancesListingsResult();
}
public class Amazon.EC2.Model.DescribeReservedInstancesListingsResult : AmazonWebServiceResponse {
    private List`1<ReservedInstancesListing> _reservedInstancesListings;
    public List`1<ReservedInstancesListing> ReservedInstancesListings { get; public set; }
    public List`1<ReservedInstancesListing> get_ReservedInstancesListings();
    public void set_ReservedInstancesListings(List`1<ReservedInstancesListing> value);
    internal bool IsSetReservedInstancesListings();
}
public class Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private string _nextToken;
    private List`1<string> _reservedInstancesModificationIds;
    public List`1<Filter> Filters { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> ReservedInstancesModificationIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ReservedInstancesModificationIds();
    public void set_ReservedInstancesModificationIds(List`1<string> value);
    internal bool IsSetReservedInstancesModificationIds();
}
public class Amazon.EC2.Model.DescribeReservedInstancesModificationsResponse : DescribeReservedInstancesModificationsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeReservedInstancesModificationsResult class are now available on the DescribeReservedInstancesModificationsResponse class. You should use the properties on DescribeReservedInstancesModificationsResponse instead of accessing them through DescribeReservedInstancesModificationsResult.")]
public DescribeReservedInstancesModificationsResult DescribeReservedInstancesModificationsResult { get; }
    public DescribeReservedInstancesModificationsResult get_DescribeReservedInstancesModificationsResult();
}
public class Amazon.EC2.Model.DescribeReservedInstancesModificationsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ReservedInstancesModification> _reservedInstancesModifications;
    public string NextToken { get; public set; }
    public List`1<ReservedInstancesModification> ReservedInstancesModifications { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ReservedInstancesModification> get_ReservedInstancesModifications();
    public void set_ReservedInstancesModifications(List`1<ReservedInstancesModification> value);
    internal bool IsSetReservedInstancesModifications();
}
public class Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest : AmazonEC2Request {
    private string _availabilityZone;
    private List`1<Filter> _filters;
    private Nullable`1<bool> _includeMarketplace;
    private Tenancy _instanceTenancy;
    private InstanceType _instanceType;
    private Nullable`1<long> _maxDuration;
    private Nullable`1<int> _maxInstanceCount;
    private Nullable`1<int> _maxResults;
    private Nullable`1<long> _minDuration;
    private string _nextToken;
    private OfferingTypeValues _offeringType;
    private RIProductDescription _productDescription;
    private List`1<string> _reservedInstancesOfferingIds;
    public string AvailabilityZone { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public bool IncludeMarketplace { get; public set; }
    public Tenancy InstanceTenancy { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public long MaxDuration { get; public set; }
    public int MaxInstanceCount { get; public set; }
    public int MaxResults { get; public set; }
    public long MinDuration { get; public set; }
    public string NextToken { get; public set; }
    public OfferingTypeValues OfferingType { get; public set; }
    public RIProductDescription ProductDescription { get; public set; }
    public List`1<string> ReservedInstancesOfferingIds { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public bool get_IncludeMarketplace();
    public void set_IncludeMarketplace(bool value);
    internal bool IsSetIncludeMarketplace();
    public Tenancy get_InstanceTenancy();
    public void set_InstanceTenancy(Tenancy value);
    internal bool IsSetInstanceTenancy();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public long get_MaxDuration();
    public void set_MaxDuration(long value);
    internal bool IsSetMaxDuration();
    public int get_MaxInstanceCount();
    public void set_MaxInstanceCount(int value);
    internal bool IsSetMaxInstanceCount();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public long get_MinDuration();
    public void set_MinDuration(long value);
    internal bool IsSetMinDuration();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public OfferingTypeValues get_OfferingType();
    public void set_OfferingType(OfferingTypeValues value);
    internal bool IsSetOfferingType();
    public RIProductDescription get_ProductDescription();
    public void set_ProductDescription(RIProductDescription value);
    internal bool IsSetProductDescription();
    public List`1<string> get_ReservedInstancesOfferingIds();
    public void set_ReservedInstancesOfferingIds(List`1<string> value);
    internal bool IsSetReservedInstancesOfferingIds();
}
public class Amazon.EC2.Model.DescribeReservedInstancesOfferingsResponse : DescribeReservedInstancesOfferingsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeReservedInstancesOfferingsResult class are now available on the DescribeReservedInstancesOfferingsResponse class. You should use the properties on DescribeReservedInstancesOfferingsResponse instead of accessing them through DescribeReservedInstancesOfferingsResult.")]
public DescribeReservedInstancesOfferingsResult DescribeReservedInstancesOfferingsResult { get; }
    public DescribeReservedInstancesOfferingsResult get_DescribeReservedInstancesOfferingsResult();
}
public class Amazon.EC2.Model.DescribeReservedInstancesOfferingsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ReservedInstancesOffering> _reservedInstancesOfferings;
    public string NextToken { get; public set; }
    public List`1<ReservedInstancesOffering> ReservedInstancesOfferings { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ReservedInstancesOffering> get_ReservedInstancesOfferings();
    public void set_ReservedInstancesOfferings(List`1<ReservedInstancesOffering> value);
    internal bool IsSetReservedInstancesOfferings();
}
public class Amazon.EC2.Model.DescribeReservedInstancesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private OfferingTypeValues _offeringType;
    private List`1<string> _reservedInstancesIds;
    public List`1<Filter> Filters { get; public set; }
    public OfferingTypeValues OfferingType { get; public set; }
    public List`1<string> ReservedInstancesIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public OfferingTypeValues get_OfferingType();
    public void set_OfferingType(OfferingTypeValues value);
    internal bool IsSetOfferingType();
    public List`1<string> get_ReservedInstancesIds();
    public void set_ReservedInstancesIds(List`1<string> value);
    internal bool IsSetReservedInstancesIds();
}
public class Amazon.EC2.Model.DescribeReservedInstancesResponse : DescribeReservedInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeReservedInstancesResult class are now available on the DescribeReservedInstancesResponse class. You should use the properties on DescribeReservedInstancesResponse instead of accessing them through DescribeReservedInstancesResult.")]
public DescribeReservedInstancesResult DescribeReservedInstancesResult { get; }
    public DescribeReservedInstancesResult get_DescribeReservedInstancesResult();
}
public class Amazon.EC2.Model.DescribeReservedInstancesResult : AmazonWebServiceResponse {
    private List`1<ReservedInstances> _reservedInstances;
    public List`1<ReservedInstances> ReservedInstances { get; public set; }
    public List`1<ReservedInstances> get_ReservedInstances();
    public void set_ReservedInstances(List`1<ReservedInstances> value);
    internal bool IsSetReservedInstances();
}
public class Amazon.EC2.Model.DescribeRouteTablesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _routeTableIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> RouteTableIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_RouteTableIds();
    public void set_RouteTableIds(List`1<string> value);
    internal bool IsSetRouteTableIds();
}
public class Amazon.EC2.Model.DescribeRouteTablesResponse : DescribeRouteTablesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeRouteTablesResult class are now available on the DescribeRouteTablesResponse class. You should use the properties on DescribeRouteTablesResponse instead of accessing them through DescribeRouteTablesResult.")]
public DescribeRouteTablesResult DescribeRouteTablesResult { get; }
    public DescribeRouteTablesResult get_DescribeRouteTablesResult();
}
public class Amazon.EC2.Model.DescribeRouteTablesResult : AmazonWebServiceResponse {
    private List`1<RouteTable> _routeTables;
    public List`1<RouteTable> RouteTables { get; public set; }
    public List`1<RouteTable> get_RouteTables();
    public void set_RouteTables(List`1<RouteTable> value);
    internal bool IsSetRouteTables();
}
public class Amazon.EC2.Model.DescribeSecurityGroupsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _groupIds;
    private List`1<string> _groupNames;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> GroupIds { get; public set; }
    public List`1<string> GroupNames { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_GroupIds();
    public void set_GroupIds(List`1<string> value);
    internal bool IsSetGroupIds();
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
}
public class Amazon.EC2.Model.DescribeSecurityGroupsResponse : DescribeSecurityGroupsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeSecurityGroupsResult class are now available on the DescribeSecurityGroupsResponse class. You should use the properties on DescribeSecurityGroupsResponse instead of accessing them through DescribeSecurityGroupsResult.")]
public DescribeSecurityGroupsResult DescribeSecurityGroupsResult { get; }
    public DescribeSecurityGroupsResult get_DescribeSecurityGroupsResult();
}
public class Amazon.EC2.Model.DescribeSecurityGroupsResult : AmazonWebServiceResponse {
    private List`1<SecurityGroup> _securityGroups;
    public List`1<SecurityGroup> SecurityGroups { get; public set; }
    public List`1<SecurityGroup> get_SecurityGroups();
    public void set_SecurityGroups(List`1<SecurityGroup> value);
    internal bool IsSetSecurityGroups();
}
public class Amazon.EC2.Model.DescribeSnapshotAttributeRequest : AmazonEC2Request {
    private SnapshotAttributeName _attribute;
    private string _snapshotId;
    public SnapshotAttributeName Attribute { get; public set; }
    public string SnapshotId { get; public set; }
    public DescribeSnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute);
    public SnapshotAttributeName get_Attribute();
    public void set_Attribute(SnapshotAttributeName value);
    internal bool IsSetAttribute();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.DescribeSnapshotAttributeResponse : DescribeSnapshotAttributeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeSnapshotAttributeResult class are now available on the DescribeSnapshotAttributeResponse class. You should use the properties on DescribeSnapshotAttributeResponse instead of accessing them through DescribeSnapshotAttributeResult.")]
public DescribeSnapshotAttributeResult DescribeSnapshotAttributeResult { get; }
    public DescribeSnapshotAttributeResult get_DescribeSnapshotAttributeResult();
}
public class Amazon.EC2.Model.DescribeSnapshotAttributeResult : AmazonWebServiceResponse {
    private List`1<CreateVolumePermission> _createVolumePermissions;
    private List`1<ProductCode> _productCodes;
    private string _snapshotId;
    public List`1<CreateVolumePermission> CreateVolumePermissions { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string SnapshotId { get; public set; }
    public List`1<CreateVolumePermission> get_CreateVolumePermissions();
    public void set_CreateVolumePermissions(List`1<CreateVolumePermission> value);
    internal bool IsSetCreateVolumePermissions();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.DescribeSnapshotsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _ownerIds;
    private List`1<string> _restorableByUserIds;
    private List`1<string> _snapshotIds;
    public List`1<Filter> Filters { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> OwnerIds { get; public set; }
    public List`1<string> RestorableByUserIds { get; public set; }
    public List`1<string> SnapshotIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_OwnerIds();
    public void set_OwnerIds(List`1<string> value);
    internal bool IsSetOwnerIds();
    public List`1<string> get_RestorableByUserIds();
    public void set_RestorableByUserIds(List`1<string> value);
    internal bool IsSetRestorableByUserIds();
    public List`1<string> get_SnapshotIds();
    public void set_SnapshotIds(List`1<string> value);
    internal bool IsSetSnapshotIds();
}
public class Amazon.EC2.Model.DescribeSnapshotsResponse : DescribeSnapshotsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeSnapshotsResult class are now available on the DescribeSnapshotsResponse class. You should use the properties on DescribeSnapshotsResponse instead of accessing them through DescribeSnapshotsResult.")]
public DescribeSnapshotsResult DescribeSnapshotsResult { get; }
    public DescribeSnapshotsResult get_DescribeSnapshotsResult();
}
public class Amazon.EC2.Model.DescribeSnapshotsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Snapshot> _snapshots;
    public string NextToken { get; public set; }
    public List`1<Snapshot> Snapshots { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Snapshot> get_Snapshots();
    public void set_Snapshots(List`1<Snapshot> value);
    internal bool IsSetSnapshots();
}
public class Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest : AmazonEC2Request {
}
public class Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResponse : DescribeSpotDatafeedSubscriptionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeSpotDatafeedSubscriptionResult class are now available on the DescribeSpotDatafeedSubscriptionResponse class. You should use the properties on DescribeSpotDatafeedSubscriptionResponse instead of accessing them through DescribeSpotDatafeedSubscriptionResult.")]
public DescribeSpotDatafeedSubscriptionResult DescribeSpotDatafeedSubscriptionResult { get; }
    public DescribeSpotDatafeedSubscriptionResult get_DescribeSpotDatafeedSubscriptionResult();
}
public class Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResult : AmazonWebServiceResponse {
    private SpotDatafeedSubscription _spotDatafeedSubscription;
    public SpotDatafeedSubscription SpotDatafeedSubscription { get; public set; }
    public SpotDatafeedSubscription get_SpotDatafeedSubscription();
    public void set_SpotDatafeedSubscription(SpotDatafeedSubscription value);
    internal bool IsSetSpotDatafeedSubscription();
}
public class Amazon.EC2.Model.DescribeSpotFleetInstancesRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _spotFleetRequestId;
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
}
public class Amazon.EC2.Model.DescribeSpotFleetInstancesResponse : DescribeSpotFleetInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeSpotFleetInstancesResult class are now available on the DescribeSpotFleetInstancesResponse class. You should use the properties on DescribeSpotFleetInstancesResponse instead of accessing them through DescribeSpotFleetInstancesResult.")]
public DescribeSpotFleetInstancesResult DescribeSpotFleetInstancesResult { get; }
    public DescribeSpotFleetInstancesResult get_DescribeSpotFleetInstancesResult();
}
public class Amazon.EC2.Model.DescribeSpotFleetInstancesResult : AmazonWebServiceResponse {
    private List`1<ActiveInstance> _activeInstances;
    private string _nextToken;
    private string _spotFleetRequestId;
    public List`1<ActiveInstance> ActiveInstances { get; public set; }
    public string NextToken { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public List`1<ActiveInstance> get_ActiveInstances();
    public void set_ActiveInstances(List`1<ActiveInstance> value);
    internal bool IsSetActiveInstances();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
}
public class Amazon.EC2.Model.DescribeSpotFleetRequestHistoryRequest : AmazonEC2Request {
    private EventType _eventType;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _spotFleetRequestId;
    private Nullable`1<DateTime> _startTime;
    public EventType EventType { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public DateTime StartTime { get; public set; }
    public EventType get_EventType();
    public void set_EventType(EventType value);
    internal bool IsSetEventType();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
}
public class Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResponse : DescribeSpotFleetRequestHistoryResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeSpotFleetRequestHistoryResult class are now available on the DescribeSpotFleetRequestHistoryResponse class. You should use the properties on DescribeSpotFleetRequestHistoryResponse instead of accessing them through DescribeSpotFleetRequestHistoryResult.")]
public DescribeSpotFleetRequestHistoryResult DescribeSpotFleetRequestHistoryResult { get; }
    public DescribeSpotFleetRequestHistoryResult get_DescribeSpotFleetRequestHistoryResult();
}
public class Amazon.EC2.Model.DescribeSpotFleetRequestHistoryResult : AmazonWebServiceResponse {
    private List`1<HistoryRecord> _historyRecords;
    private Nullable`1<DateTime> _lastEvaluatedTime;
    private string _nextToken;
    private string _spotFleetRequestId;
    private Nullable`1<DateTime> _startTime;
    public List`1<HistoryRecord> HistoryRecords { get; public set; }
    public DateTime LastEvaluatedTime { get; public set; }
    public string NextToken { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public DateTime StartTime { get; public set; }
    public List`1<HistoryRecord> get_HistoryRecords();
    public void set_HistoryRecords(List`1<HistoryRecord> value);
    internal bool IsSetHistoryRecords();
    public DateTime get_LastEvaluatedTime();
    public void set_LastEvaluatedTime(DateTime value);
    internal bool IsSetLastEvaluatedTime();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
}
public class Amazon.EC2.Model.DescribeSpotFleetRequestsRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _spotFleetRequestIds;
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> SpotFleetRequestIds { get; public set; }
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_SpotFleetRequestIds();
    public void set_SpotFleetRequestIds(List`1<string> value);
    internal bool IsSetSpotFleetRequestIds();
}
public class Amazon.EC2.Model.DescribeSpotFleetRequestsResponse : DescribeSpotFleetRequestsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeSpotFleetRequestsResult class are now available on the DescribeSpotFleetRequestsResponse class. You should use the properties on DescribeSpotFleetRequestsResponse instead of accessing them through DescribeSpotFleetRequestsResult.")]
public DescribeSpotFleetRequestsResult DescribeSpotFleetRequestsResult { get; }
    public DescribeSpotFleetRequestsResult get_DescribeSpotFleetRequestsResult();
}
public class Amazon.EC2.Model.DescribeSpotFleetRequestsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SpotFleetRequestConfig> _spotFleetRequestConfigs;
    public string NextToken { get; public set; }
    public List`1<SpotFleetRequestConfig> SpotFleetRequestConfigs { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SpotFleetRequestConfig> get_SpotFleetRequestConfigs();
    public void set_SpotFleetRequestConfigs(List`1<SpotFleetRequestConfig> value);
    internal bool IsSetSpotFleetRequestConfigs();
}
public class Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _spotInstanceRequestIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> SpotInstanceRequestIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_SpotInstanceRequestIds();
    public void set_SpotInstanceRequestIds(List`1<string> value);
    internal bool IsSetSpotInstanceRequestIds();
}
public class Amazon.EC2.Model.DescribeSpotInstanceRequestsResponse : DescribeSpotInstanceRequestsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeSpotInstanceRequestsResult class are now available on the DescribeSpotInstanceRequestsResponse class. You should use the properties on DescribeSpotInstanceRequestsResponse instead of accessing them through DescribeSpotInstanceRequestsResult.")]
public DescribeSpotInstanceRequestsResult DescribeSpotInstanceRequestsResult { get; }
    public DescribeSpotInstanceRequestsResult get_DescribeSpotInstanceRequestsResult();
}
public class Amazon.EC2.Model.DescribeSpotInstanceRequestsResult : AmazonWebServiceResponse {
    private List`1<SpotInstanceRequest> _spotInstanceRequests;
    public List`1<SpotInstanceRequest> SpotInstanceRequests { get; public set; }
    public List`1<SpotInstanceRequest> get_SpotInstanceRequests();
    public void set_SpotInstanceRequests(List`1<SpotInstanceRequest> value);
    internal bool IsSetSpotInstanceRequests();
}
public class Amazon.EC2.Model.DescribeSpotPriceHistoryRequest : AmazonEC2Request {
    private string _availabilityZone;
    private Nullable`1<DateTime> _endTime;
    private List`1<Filter> _filters;
    private List`1<string> _instanceTypes;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _productDescriptions;
    private Nullable`1<DateTime> _startTime;
    public string AvailabilityZone { get; public set; }
    public DateTime EndTime { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> InstanceTypes { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> ProductDescriptions { get; public set; }
    public DateTime StartTime { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public DateTime get_EndTime();
    public void set_EndTime(DateTime value);
    internal bool IsSetEndTime();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_InstanceTypes();
    public void set_InstanceTypes(List`1<string> value);
    internal bool IsSetInstanceTypes();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ProductDescriptions();
    public void set_ProductDescriptions(List`1<string> value);
    internal bool IsSetProductDescriptions();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
}
public class Amazon.EC2.Model.DescribeSpotPriceHistoryResponse : DescribeSpotPriceHistoryResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeSpotPriceHistoryResult class are now available on the DescribeSpotPriceHistoryResponse class. You should use the properties on DescribeSpotPriceHistoryResponse instead of accessing them through DescribeSpotPriceHistoryResult.")]
public DescribeSpotPriceHistoryResult DescribeSpotPriceHistoryResult { get; }
    public DescribeSpotPriceHistoryResult get_DescribeSpotPriceHistoryResult();
}
public class Amazon.EC2.Model.DescribeSpotPriceHistoryResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SpotPrice> _spotPriceHistory;
    public string NextToken { get; public set; }
    public List`1<SpotPrice> SpotPriceHistory { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SpotPrice> get_SpotPriceHistory();
    public void set_SpotPriceHistory(List`1<SpotPrice> value);
    internal bool IsSetSpotPriceHistory();
}
public class Amazon.EC2.Model.DescribeSubnetsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _subnetIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.EC2.Model.DescribeSubnetsResponse : DescribeSubnetsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeSubnetsResult class are now available on the DescribeSubnetsResponse class. You should use the properties on DescribeSubnetsResponse instead of accessing them through DescribeSubnetsResult.")]
public DescribeSubnetsResult DescribeSubnetsResult { get; }
    public DescribeSubnetsResult get_DescribeSubnetsResult();
}
public class Amazon.EC2.Model.DescribeSubnetsResult : AmazonWebServiceResponse {
    private List`1<Subnet> _subnets;
    public List`1<Subnet> Subnets { get; public set; }
    public List`1<Subnet> get_Subnets();
    public void set_Subnets(List`1<Subnet> value);
    internal bool IsSetSubnets();
}
public class Amazon.EC2.Model.DescribeTagsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public DescribeTagsRequest(List`1<Filter> filters);
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeTagsResponse : DescribeTagsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeTagsResult class are now available on the DescribeTagsResponse class. You should use the properties on DescribeTagsResponse instead of accessing them through DescribeTagsResult.")]
public DescribeTagsResult DescribeTagsResult { get; }
    public DescribeTagsResult get_DescribeTagsResult();
}
public class Amazon.EC2.Model.DescribeTagsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TagDescription> _tags;
    public string NextToken { get; public set; }
    public List`1<TagDescription> Tags { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TagDescription> get_Tags();
    public void set_Tags(List`1<TagDescription> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.DescribeVolumeAttributeRequest : AmazonEC2Request {
    private VolumeAttributeName _attribute;
    private string _volumeId;
    public VolumeAttributeName Attribute { get; public set; }
    public string VolumeId { get; public set; }
    public VolumeAttributeName get_Attribute();
    public void set_Attribute(VolumeAttributeName value);
    internal bool IsSetAttribute();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.DescribeVolumeAttributeResponse : DescribeVolumeAttributeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVolumeAttributeResult class are now available on the DescribeVolumeAttributeResponse class. You should use the properties on DescribeVolumeAttributeResponse instead of accessing them through DescribeVolumeAttributeResult.")]
public DescribeVolumeAttributeResult DescribeVolumeAttributeResult { get; }
    public DescribeVolumeAttributeResult get_DescribeVolumeAttributeResult();
}
public class Amazon.EC2.Model.DescribeVolumeAttributeResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _autoEnableIO;
    private List`1<ProductCode> _productCodes;
    private string _volumeId;
    public bool AutoEnableIO { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string VolumeId { get; public set; }
    public bool get_AutoEnableIO();
    public void set_AutoEnableIO(bool value);
    internal bool IsSetAutoEnableIO();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.DescribeVolumesRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _volumeIds;
    public List`1<Filter> Filters { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VolumeIds { get; public set; }
    public DescribeVolumesRequest(List`1<string> volumeIds);
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VolumeIds();
    public void set_VolumeIds(List`1<string> value);
    internal bool IsSetVolumeIds();
}
public class Amazon.EC2.Model.DescribeVolumesResponse : DescribeVolumesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVolumesResult class are now available on the DescribeVolumesResponse class. You should use the properties on DescribeVolumesResponse instead of accessing them through DescribeVolumesResult.")]
public DescribeVolumesResult DescribeVolumesResult { get; }
    public DescribeVolumesResult get_DescribeVolumesResult();
}
public class Amazon.EC2.Model.DescribeVolumesResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Volume> _volumes;
    public string NextToken { get; public set; }
    public List`1<Volume> Volumes { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Volume> get_Volumes();
    public void set_Volumes(List`1<Volume> value);
    internal bool IsSetVolumes();
}
public class Amazon.EC2.Model.DescribeVolumeStatusRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _volumeIds;
    public List`1<Filter> Filters { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VolumeIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VolumeIds();
    public void set_VolumeIds(List`1<string> value);
    internal bool IsSetVolumeIds();
}
public class Amazon.EC2.Model.DescribeVolumeStatusResponse : DescribeVolumeStatusResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVolumeStatusResult class are now available on the DescribeVolumeStatusResponse class. You should use the properties on DescribeVolumeStatusResponse instead of accessing them through DescribeVolumeStatusResult.")]
public DescribeVolumeStatusResult DescribeVolumeStatusResult { get; }
    public DescribeVolumeStatusResult get_DescribeVolumeStatusResult();
}
public class Amazon.EC2.Model.DescribeVolumeStatusResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VolumeStatusItem> _volumeStatuses;
    public string NextToken { get; public set; }
    public List`1<VolumeStatusItem> VolumeStatuses { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VolumeStatusItem> get_VolumeStatuses();
    public void set_VolumeStatuses(List`1<VolumeStatusItem> value);
    internal bool IsSetVolumeStatuses();
}
public class Amazon.EC2.Model.DescribeVpcAttributeRequest : AmazonEC2Request {
    private VpcAttributeName _attribute;
    private string _vpcId;
    public VpcAttributeName Attribute { get; public set; }
    public string VpcId { get; public set; }
    public VpcAttributeName get_Attribute();
    public void set_Attribute(VpcAttributeName value);
    internal bool IsSetAttribute();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DescribeVpcAttributeResponse : DescribeVpcAttributeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVpcAttributeResult class are now available on the DescribeVpcAttributeResponse class. You should use the properties on DescribeVpcAttributeResponse instead of accessing them through DescribeVpcAttributeResult.")]
public DescribeVpcAttributeResult DescribeVpcAttributeResult { get; }
    public DescribeVpcAttributeResult get_DescribeVpcAttributeResult();
}
public class Amazon.EC2.Model.DescribeVpcAttributeResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _enableDnsHostnames;
    private Nullable`1<bool> _enableDnsSupport;
    private string _vpcId;
    public bool EnableDnsHostnames { get; public set; }
    public bool EnableDnsSupport { get; public set; }
    public string VpcId { get; public set; }
    public bool get_EnableDnsHostnames();
    public void set_EnableDnsHostnames(bool value);
    internal bool IsSetEnableDnsHostnames();
    public bool get_EnableDnsSupport();
    public void set_EnableDnsSupport(bool value);
    internal bool IsSetEnableDnsSupport();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DescribeVpcClassicLinkRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _vpcIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> VpcIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_VpcIds();
    public void set_VpcIds(List`1<string> value);
    internal bool IsSetVpcIds();
}
public class Amazon.EC2.Model.DescribeVpcClassicLinkResponse : DescribeVpcClassicLinkResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVpcClassicLinkResult class are now available on the DescribeVpcClassicLinkResponse class. You should use the properties on DescribeVpcClassicLinkResponse instead of accessing them through DescribeVpcClassicLinkResult.")]
public DescribeVpcClassicLinkResult DescribeVpcClassicLinkResult { get; }
    public DescribeVpcClassicLinkResult get_DescribeVpcClassicLinkResult();
}
public class Amazon.EC2.Model.DescribeVpcClassicLinkResult : AmazonWebServiceResponse {
    private List`1<VpcClassicLink> _vpcs;
    public List`1<VpcClassicLink> Vpcs { get; public set; }
    public List`1<VpcClassicLink> get_Vpcs();
    public void set_Vpcs(List`1<VpcClassicLink> value);
    internal bool IsSetVpcs();
}
public class Amazon.EC2.Model.DescribeVpcEndpointServicesRequest : AmazonEC2Request {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.EC2.Model.DescribeVpcEndpointServicesResponse : DescribeVpcEndpointServicesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVpcEndpointServicesResult class are now available on the DescribeVpcEndpointServicesResponse class. You should use the properties on DescribeVpcEndpointServicesResponse instead of accessing them through DescribeVpcEndpointServicesResult.")]
public DescribeVpcEndpointServicesResult DescribeVpcEndpointServicesResult { get; }
    public DescribeVpcEndpointServicesResult get_DescribeVpcEndpointServicesResult();
}
public class Amazon.EC2.Model.DescribeVpcEndpointServicesResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<string> _serviceNames;
    public string NextToken { get; public set; }
    public List`1<string> ServiceNames { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ServiceNames();
    public void set_ServiceNames(List`1<string> value);
    internal bool IsSetServiceNames();
}
public class Amazon.EC2.Model.DescribeVpcEndpointsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _vpcEndpointIds;
    public List`1<Filter> Filters { get; public set; }
    public int MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> VpcEndpointIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public int get_MaxResults();
    public void set_MaxResults(int value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_VpcEndpointIds();
    public void set_VpcEndpointIds(List`1<string> value);
    internal bool IsSetVpcEndpointIds();
}
public class Amazon.EC2.Model.DescribeVpcEndpointsResponse : DescribeVpcEndpointsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVpcEndpointsResult class are now available on the DescribeVpcEndpointsResponse class. You should use the properties on DescribeVpcEndpointsResponse instead of accessing them through DescribeVpcEndpointsResult.")]
public DescribeVpcEndpointsResult DescribeVpcEndpointsResult { get; }
    public DescribeVpcEndpointsResult get_DescribeVpcEndpointsResult();
}
public class Amazon.EC2.Model.DescribeVpcEndpointsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<VpcEndpoint> _vpcEndpoints;
    public string NextToken { get; public set; }
    public List`1<VpcEndpoint> VpcEndpoints { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<VpcEndpoint> get_VpcEndpoints();
    public void set_VpcEndpoints(List`1<VpcEndpoint> value);
    internal bool IsSetVpcEndpoints();
}
public class Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _vpcPeeringConnectionIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> VpcPeeringConnectionIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_VpcPeeringConnectionIds();
    public void set_VpcPeeringConnectionIds(List`1<string> value);
    internal bool IsSetVpcPeeringConnectionIds();
}
public class Amazon.EC2.Model.DescribeVpcPeeringConnectionsResponse : DescribeVpcPeeringConnectionsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVpcPeeringConnectionsResult class are now available on the DescribeVpcPeeringConnectionsResponse class. You should use the properties on DescribeVpcPeeringConnectionsResponse instead of accessing them through DescribeVpcPeeringConnectionsResult.")]
public DescribeVpcPeeringConnectionsResult DescribeVpcPeeringConnectionsResult { get; }
    public DescribeVpcPeeringConnectionsResult get_DescribeVpcPeeringConnectionsResult();
}
public class Amazon.EC2.Model.DescribeVpcPeeringConnectionsResult : AmazonWebServiceResponse {
    private List`1<VpcPeeringConnection> _vpcPeeringConnections;
    public List`1<VpcPeeringConnection> VpcPeeringConnections { get; public set; }
    public List`1<VpcPeeringConnection> get_VpcPeeringConnections();
    public void set_VpcPeeringConnections(List`1<VpcPeeringConnection> value);
    internal bool IsSetVpcPeeringConnections();
}
public class Amazon.EC2.Model.DescribeVpcsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _vpcIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> VpcIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_VpcIds();
    public void set_VpcIds(List`1<string> value);
    internal bool IsSetVpcIds();
}
public class Amazon.EC2.Model.DescribeVpcsResponse : DescribeVpcsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVpcsResult class are now available on the DescribeVpcsResponse class. You should use the properties on DescribeVpcsResponse instead of accessing them through DescribeVpcsResult.")]
public DescribeVpcsResult DescribeVpcsResult { get; }
    public DescribeVpcsResult get_DescribeVpcsResult();
}
public class Amazon.EC2.Model.DescribeVpcsResult : AmazonWebServiceResponse {
    private List`1<Vpc> _vpcs;
    public List`1<Vpc> Vpcs { get; public set; }
    public List`1<Vpc> get_Vpcs();
    public void set_Vpcs(List`1<Vpc> value);
    internal bool IsSetVpcs();
}
public class Amazon.EC2.Model.DescribeVpnConnectionsRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _vpnConnectionIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> VpnConnectionIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_VpnConnectionIds();
    public void set_VpnConnectionIds(List`1<string> value);
    internal bool IsSetVpnConnectionIds();
}
public class Amazon.EC2.Model.DescribeVpnConnectionsResponse : DescribeVpnConnectionsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVpnConnectionsResult class are now available on the DescribeVpnConnectionsResponse class. You should use the properties on DescribeVpnConnectionsResponse instead of accessing them through DescribeVpnConnectionsResult.")]
public DescribeVpnConnectionsResult DescribeVpnConnectionsResult { get; }
    public DescribeVpnConnectionsResult get_DescribeVpnConnectionsResult();
}
public class Amazon.EC2.Model.DescribeVpnConnectionsResult : AmazonWebServiceResponse {
    private List`1<VpnConnection> _vpnConnections;
    public List`1<VpnConnection> VpnConnections { get; public set; }
    public List`1<VpnConnection> get_VpnConnections();
    public void set_VpnConnections(List`1<VpnConnection> value);
    internal bool IsSetVpnConnections();
}
public class Amazon.EC2.Model.DescribeVpnGatewaysRequest : AmazonEC2Request {
    private List`1<Filter> _filters;
    private List`1<string> _vpnGatewayIds;
    public List`1<Filter> Filters { get; public set; }
    public List`1<string> VpnGatewayIds { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public List`1<string> get_VpnGatewayIds();
    public void set_VpnGatewayIds(List`1<string> value);
    internal bool IsSetVpnGatewayIds();
}
public class Amazon.EC2.Model.DescribeVpnGatewaysResponse : DescribeVpnGatewaysResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeVpnGatewaysResult class are now available on the DescribeVpnGatewaysResponse class. You should use the properties on DescribeVpnGatewaysResponse instead of accessing them through DescribeVpnGatewaysResult.")]
public DescribeVpnGatewaysResult DescribeVpnGatewaysResult { get; }
    public DescribeVpnGatewaysResult get_DescribeVpnGatewaysResult();
}
public class Amazon.EC2.Model.DescribeVpnGatewaysResult : AmazonWebServiceResponse {
    private List`1<VpnGateway> _vpnGateways;
    public List`1<VpnGateway> VpnGateways { get; public set; }
    public List`1<VpnGateway> get_VpnGateways();
    public void set_VpnGateways(List`1<VpnGateway> value);
    internal bool IsSetVpnGateways();
}
public class Amazon.EC2.Model.DetachClassicLinkVpcRequest : AmazonEC2Request {
    private string _instanceId;
    private string _vpcId;
    public string InstanceId { get; public set; }
    public string VpcId { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DetachClassicLinkVpcResponse : DetachClassicLinkVpcResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DetachClassicLinkVpcResult class are now available on the DetachClassicLinkVpcResponse class. You should use the properties on DetachClassicLinkVpcResponse instead of accessing them through DetachClassicLinkVpcResult.")]
public DetachClassicLinkVpcResult DetachClassicLinkVpcResult { get; }
    public DetachClassicLinkVpcResult get_DetachClassicLinkVpcResult();
}
public class Amazon.EC2.Model.DetachClassicLinkVpcResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public bool Return { get; public set; }
    public bool get_Return();
    public void set_Return(bool value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DetachInternetGatewayRequest : AmazonEC2Request {
    private string _internetGatewayId;
    private string _vpcId;
    public string InternetGatewayId { get; public set; }
    public string VpcId { get; public set; }
    public string get_InternetGatewayId();
    public void set_InternetGatewayId(string value);
    internal bool IsSetInternetGatewayId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DetachInternetGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DetachNetworkInterfaceRequest : AmazonEC2Request {
    private string _attachmentId;
    private Nullable`1<bool> _force;
    public string AttachmentId { get; public set; }
    public bool Force { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
    public bool get_Force();
    public void set_Force(bool value);
    internal bool IsSetForce();
}
public class Amazon.EC2.Model.DetachNetworkInterfaceResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DetachVolumeRequest : AmazonEC2Request {
    private string _device;
    private Nullable`1<bool> _force;
    private string _instanceId;
    private string _volumeId;
    public string Device { get; public set; }
    public bool Force { get; public set; }
    public string InstanceId { get; public set; }
    public string VolumeId { get; public set; }
    public DetachVolumeRequest(string volumeId);
    public string get_Device();
    public void set_Device(string value);
    internal bool IsSetDevice();
    public bool get_Force();
    public void set_Force(bool value);
    internal bool IsSetForce();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.DetachVolumeResponse : DetachVolumeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DetachVolumeResult class are now available on the DetachVolumeResponse class. You should use the properties on DetachVolumeResponse instead of accessing them through DetachVolumeResult.")]
public DetachVolumeResult DetachVolumeResult { get; }
    public DetachVolumeResult get_DetachVolumeResult();
}
public class Amazon.EC2.Model.DetachVolumeResult : AmazonWebServiceResponse {
    private VolumeAttachment _volumeAttachment;
    public VolumeAttachment Attachment { get; public set; }
    public VolumeAttachment get_Attachment();
    public void set_Attachment(VolumeAttachment value);
    internal bool IsSetAttachment();
}
public class Amazon.EC2.Model.DetachVpnGatewayRequest : AmazonEC2Request {
    private string _vpcId;
    private string _vpnGatewayId;
    public string VpcId { get; public set; }
    public string VpnGatewayId { get; public set; }
    public DetachVpnGatewayRequest(string vpnGatewayId, string vpcId);
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.DetachVpnGatewayResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DhcpConfiguration : object {
    private string _key;
    private List`1<string> _values;
    public string Key { get; public set; }
    public List`1<string> Values { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.EC2.Model.DhcpOptions : object {
    private List`1<DhcpConfiguration> _dhcpConfigurations;
    private string _dhcpOptionsId;
    private List`1<Tag> _tags;
    public List`1<DhcpConfiguration> DhcpConfigurations { get; public set; }
    public string DhcpOptionsId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<DhcpConfiguration> get_DhcpConfigurations();
    public void set_DhcpConfigurations(List`1<DhcpConfiguration> value);
    internal bool IsSetDhcpConfigurations();
    public string get_DhcpOptionsId();
    public void set_DhcpOptionsId(string value);
    internal bool IsSetDhcpOptionsId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.DisableVgwRoutePropagationRequest : AmazonEC2Request {
    private string _gatewayId;
    private string _routeTableId;
    public string GatewayId { get; public set; }
    public string RouteTableId { get; public set; }
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
}
public class Amazon.EC2.Model.DisableVgwRoutePropagationResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DisableVpcClassicLinkRequest : AmazonEC2Request {
    private string _vpcId;
    public string VpcId { get; public set; }
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.DisableVpcClassicLinkResponse : DisableVpcClassicLinkResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DisableVpcClassicLinkResult class are now available on the DisableVpcClassicLinkResponse class. You should use the properties on DisableVpcClassicLinkResponse instead of accessing them through DisableVpcClassicLinkResult.")]
public DisableVpcClassicLinkResult DisableVpcClassicLinkResult { get; }
    public DisableVpcClassicLinkResult get_DisableVpcClassicLinkResult();
}
public class Amazon.EC2.Model.DisableVpcClassicLinkResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public bool Return { get; public set; }
    public bool get_Return();
    public void set_Return(bool value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.DisassociateAddressRequest : AmazonEC2Request {
    private string _associationId;
    private string _publicIp;
    public string AssociationId { get; public set; }
    public string PublicIp { get; public set; }
    public DisassociateAddressRequest(string publicIp);
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.DisassociateAddressResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DisassociateRouteTableRequest : AmazonEC2Request {
    private string _associationId;
    public string AssociationId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
}
public class Amazon.EC2.Model.DisassociateRouteTableResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.DiskImage : object {
    private string _description;
    private DiskImageDetail _image;
    private VolumeDetail _volume;
    public string Description { get; public set; }
    public DiskImageDetail Image { get; public set; }
    public VolumeDetail Volume { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DiskImageDetail get_Image();
    public void set_Image(DiskImageDetail value);
    internal bool IsSetImage();
    public VolumeDetail get_Volume();
    public void set_Volume(VolumeDetail value);
    internal bool IsSetVolume();
}
public class Amazon.EC2.Model.DiskImageDescription : object {
    private string _checksum;
    private DiskImageFormat _format;
    private string _importManifestUrl;
    private Nullable`1<long> _size;
    public string Checksum { get; public set; }
    public DiskImageFormat Format { get; public set; }
    public string ImportManifestUrl { get; public set; }
    public long Size { get; public set; }
    public string get_Checksum();
    public void set_Checksum(string value);
    internal bool IsSetChecksum();
    public DiskImageFormat get_Format();
    public void set_Format(DiskImageFormat value);
    internal bool IsSetFormat();
    public string get_ImportManifestUrl();
    public void set_ImportManifestUrl(string value);
    internal bool IsSetImportManifestUrl();
    public long get_Size();
    public void set_Size(long value);
    internal bool IsSetSize();
}
public class Amazon.EC2.Model.DiskImageDetail : object {
    private Nullable`1<long> _bytes;
    private DiskImageFormat _format;
    private string _importManifestUrl;
    public long Bytes { get; public set; }
    public DiskImageFormat Format { get; public set; }
    public string ImportManifestUrl { get; public set; }
    public long get_Bytes();
    public void set_Bytes(long value);
    internal bool IsSetBytes();
    public DiskImageFormat get_Format();
    public void set_Format(DiskImageFormat value);
    internal bool IsSetFormat();
    public string get_ImportManifestUrl();
    public void set_ImportManifestUrl(string value);
    internal bool IsSetImportManifestUrl();
}
public class Amazon.EC2.Model.DiskImageVolumeDescription : object {
    private string _id;
    private Nullable`1<long> _size;
    public string Id { get; public set; }
    public long Size { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public long get_Size();
    public void set_Size(long value);
    internal bool IsSetSize();
}
public class Amazon.EC2.Model.DryRunResponse : DryRunResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetPasswordDataResult class are now available on the GetPasswordDataResponse class. You should use the properties on GetPasswordDataResponse instead of accessing them through GetPasswordDataResult.")]
public DryRunResult DryRunResult { get; }
    public DryRunResult get_DryRunResult();
}
public class Amazon.EC2.Model.DryRunResult : AmazonWebServiceResponse {
    private Nullable`1<bool> isSuccessfulField;
    private string messageField;
    private Exception errorField;
    public bool IsSuccessful { get; public set; }
    public string Message { get; public set; }
    public Exception Error { get; public set; }
    public bool get_IsSuccessful();
    public void set_IsSuccessful(bool value);
    internal bool IsSetIsSuccessful();
    public string get_Message();
    public void set_Message(string value);
    public bool IsSetMessage();
    public Exception get_Error();
    public void set_Error(Exception value);
    public bool IsSetError();
}
public class Amazon.EC2.Model.EbsBlockDevice : object {
    private Nullable`1<bool> _deleteOnTermination;
    private Nullable`1<bool> _encrypted;
    private Nullable`1<int> _iops;
    private string _snapshotId;
    private Nullable`1<int> _volumeSize;
    private VolumeType _volumeType;
    public bool DeleteOnTermination { get; public set; }
    public bool Encrypted { get; public set; }
    public int Iops { get; public set; }
    public string SnapshotId { get; public set; }
    public int VolumeSize { get; public set; }
    public VolumeType VolumeType { get; public set; }
    public bool get_DeleteOnTermination();
    public void set_DeleteOnTermination(bool value);
    internal bool IsSetDeleteOnTermination();
    public bool get_Encrypted();
    public void set_Encrypted(bool value);
    internal bool IsSetEncrypted();
    public int get_Iops();
    public void set_Iops(int value);
    internal bool IsSetIops();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public int get_VolumeSize();
    public void set_VolumeSize(int value);
    internal bool IsSetVolumeSize();
    public VolumeType get_VolumeType();
    public void set_VolumeType(VolumeType value);
    internal bool IsSetVolumeType();
    internal void ClearEncryptedFlag();
}
public class Amazon.EC2.Model.EbsInstanceBlockDevice : object {
    private Nullable`1<DateTime> _attachTime;
    private Nullable`1<bool> _deleteOnTermination;
    private AttachmentStatus _status;
    private string _volumeId;
    public DateTime AttachTime { get; public set; }
    public bool DeleteOnTermination { get; public set; }
    public AttachmentStatus Status { get; public set; }
    public string VolumeId { get; public set; }
    public DateTime get_AttachTime();
    public void set_AttachTime(DateTime value);
    internal bool IsSetAttachTime();
    public bool get_DeleteOnTermination();
    public void set_DeleteOnTermination(bool value);
    internal bool IsSetDeleteOnTermination();
    public AttachmentStatus get_Status();
    public void set_Status(AttachmentStatus value);
    internal bool IsSetStatus();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.EbsInstanceBlockDeviceSpecification : object {
    private Nullable`1<bool> _deleteOnTermination;
    private string _volumeId;
    public bool DeleteOnTermination { get; public set; }
    public string VolumeId { get; public set; }
    public bool get_DeleteOnTermination();
    public void set_DeleteOnTermination(bool value);
    internal bool IsSetDeleteOnTermination();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.EnableVgwRoutePropagationRequest : AmazonEC2Request {
    private string _gatewayId;
    private string _routeTableId;
    public string GatewayId { get; public set; }
    public string RouteTableId { get; public set; }
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
}
public class Amazon.EC2.Model.EnableVgwRoutePropagationResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.EnableVolumeIORequest : AmazonEC2Request {
    private string _volumeId;
    public string VolumeId { get; public set; }
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.EnableVolumeIOResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.EnableVpcClassicLinkRequest : AmazonEC2Request {
    private string _vpcId;
    public string VpcId { get; public set; }
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.EnableVpcClassicLinkResponse : EnableVpcClassicLinkResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the EnableVpcClassicLinkResult class are now available on the EnableVpcClassicLinkResponse class. You should use the properties on EnableVpcClassicLinkResponse instead of accessing them through EnableVpcClassicLinkResult.")]
public EnableVpcClassicLinkResult EnableVpcClassicLinkResult { get; }
    public EnableVpcClassicLinkResult get_EnableVpcClassicLinkResult();
}
public class Amazon.EC2.Model.EnableVpcClassicLinkResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _return;
    public bool Return { get; public set; }
    public bool get_Return();
    public void set_Return(bool value);
    internal bool IsSetReturn();
}
public class Amazon.EC2.Model.EventInformation : object {
    private string _eventDescription;
    private string _eventSubType;
    private string _instanceId;
    public string EventDescription { get; public set; }
    public string EventSubType { get; public set; }
    public string InstanceId { get; public set; }
    public string get_EventDescription();
    public void set_EventDescription(string value);
    internal bool IsSetEventDescription();
    public string get_EventSubType();
    public void set_EventSubType(string value);
    internal bool IsSetEventSubType();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.ExportTask : object {
    private string _description;
    private string _exportTaskId;
    private ExportToS3Task _exportToS3Task;
    private InstanceExportDetails _instanceExportDetails;
    private ExportTaskState _state;
    private string _statusMessage;
    public string Description { get; public set; }
    public string ExportTaskId { get; public set; }
    public ExportToS3Task ExportToS3Task { get; public set; }
    public InstanceExportDetails InstanceExportDetails { get; public set; }
    public ExportTaskState State { get; public set; }
    public string StatusMessage { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ExportTaskId();
    public void set_ExportTaskId(string value);
    internal bool IsSetExportTaskId();
    public ExportToS3Task get_ExportToS3Task();
    public void set_ExportToS3Task(ExportToS3Task value);
    internal bool IsSetExportToS3Task();
    public InstanceExportDetails get_InstanceExportDetails();
    public void set_InstanceExportDetails(InstanceExportDetails value);
    internal bool IsSetInstanceExportDetails();
    public ExportTaskState get_State();
    public void set_State(ExportTaskState value);
    internal bool IsSetState();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.ExportToS3Task : object {
    private ContainerFormat _containerFormat;
    private DiskImageFormat _diskImageFormat;
    private string _s3Bucket;
    private string _s3Key;
    public ContainerFormat ContainerFormat { get; public set; }
    public DiskImageFormat DiskImageFormat { get; public set; }
    public string S3Bucket { get; public set; }
    public string S3Key { get; public set; }
    public ContainerFormat get_ContainerFormat();
    public void set_ContainerFormat(ContainerFormat value);
    internal bool IsSetContainerFormat();
    public DiskImageFormat get_DiskImageFormat();
    public void set_DiskImageFormat(DiskImageFormat value);
    internal bool IsSetDiskImageFormat();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
}
public class Amazon.EC2.Model.ExportToS3TaskSpecification : object {
    private ContainerFormat _containerFormat;
    private DiskImageFormat _diskImageFormat;
    private string _s3Bucket;
    private string _s3Prefix;
    public ContainerFormat ContainerFormat { get; public set; }
    public DiskImageFormat DiskImageFormat { get; public set; }
    public string S3Bucket { get; public set; }
    public string S3Prefix { get; public set; }
    public ContainerFormat get_ContainerFormat();
    public void set_ContainerFormat(ContainerFormat value);
    internal bool IsSetContainerFormat();
    public DiskImageFormat get_DiskImageFormat();
    public void set_DiskImageFormat(DiskImageFormat value);
    internal bool IsSetDiskImageFormat();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
}
public class Amazon.EC2.Model.Filter : object {
    private string _name;
    private List`1<string> _values;
    public string Name { get; public set; }
    public List`1<string> Values { get; public set; }
    public Filter(string name, List`1<string> values);
    public Filter(string name);
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.EC2.Model.FlowLog : object {
    private Nullable`1<DateTime> _creationTime;
    private string _deliverLogsErrorMessage;
    private string _deliverLogsPermissionArn;
    private string _deliverLogsStatus;
    private string _flowLogId;
    private string _flowLogStatus;
    private string _logGroupName;
    private string _resourceId;
    private TrafficType _trafficType;
    public DateTime CreationTime { get; public set; }
    public string DeliverLogsErrorMessage { get; public set; }
    public string DeliverLogsPermissionArn { get; public set; }
    public string DeliverLogsStatus { get; public set; }
    public string FlowLogId { get; public set; }
    public string FlowLogStatus { get; public set; }
    public string LogGroupName { get; public set; }
    public string ResourceId { get; public set; }
    public TrafficType TrafficType { get; public set; }
    public DateTime get_CreationTime();
    public void set_CreationTime(DateTime value);
    internal bool IsSetCreationTime();
    public string get_DeliverLogsErrorMessage();
    public void set_DeliverLogsErrorMessage(string value);
    internal bool IsSetDeliverLogsErrorMessage();
    public string get_DeliverLogsPermissionArn();
    public void set_DeliverLogsPermissionArn(string value);
    internal bool IsSetDeliverLogsPermissionArn();
    public string get_DeliverLogsStatus();
    public void set_DeliverLogsStatus(string value);
    internal bool IsSetDeliverLogsStatus();
    public string get_FlowLogId();
    public void set_FlowLogId(string value);
    internal bool IsSetFlowLogId();
    public string get_FlowLogStatus();
    public void set_FlowLogStatus(string value);
    internal bool IsSetFlowLogStatus();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public TrafficType get_TrafficType();
    public void set_TrafficType(TrafficType value);
    internal bool IsSetTrafficType();
}
public class Amazon.EC2.Model.GetConsoleOutputRequest : AmazonEC2Request {
    private string _instanceId;
    public string InstanceId { get; public set; }
    public GetConsoleOutputRequest(string instanceId);
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.GetConsoleOutputResponse : GetConsoleOutputResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetConsoleOutputResult class are now available on the GetConsoleOutputResponse class. You should use the properties on GetConsoleOutputResponse instead of accessing them through GetConsoleOutputResult.")]
public GetConsoleOutputResult GetConsoleOutputResult { get; }
    public GetConsoleOutputResult get_GetConsoleOutputResult();
}
public class Amazon.EC2.Model.GetConsoleOutputResult : AmazonWebServiceResponse {
    private string _instanceId;
    private string _output;
    private Nullable`1<DateTime> _timestamp;
    public string InstanceId { get; public set; }
    public string Output { get; public set; }
    public DateTime Timestamp { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_Output();
    public void set_Output(string value);
    internal bool IsSetOutput();
    public DateTime get_Timestamp();
    public void set_Timestamp(DateTime value);
    internal bool IsSetTimestamp();
}
public class Amazon.EC2.Model.GetPasswordDataRequest : AmazonEC2Request {
    private string _instanceId;
    public string InstanceId { get; public set; }
    public GetPasswordDataRequest(string instanceId);
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.GetPasswordDataResponse : GetPasswordDataResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetPasswordDataResult class are now available on the GetPasswordDataResponse class. You should use the properties on GetPasswordDataResponse instead of accessing them through GetPasswordDataResult.")]
public GetPasswordDataResult GetPasswordDataResult { get; }
    public GetPasswordDataResult get_GetPasswordDataResult();
}
public class Amazon.EC2.Model.GetPasswordDataResult : AmazonWebServiceResponse {
    private string _instanceId;
    private string _passwordData;
    private Nullable`1<DateTime> _timestamp;
    public string InstanceId { get; public set; }
    public string PasswordData { get; public set; }
    public DateTime Timestamp { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_PasswordData();
    public void set_PasswordData(string value);
    internal bool IsSetPasswordData();
    public DateTime get_Timestamp();
    public void set_Timestamp(DateTime value);
    internal bool IsSetTimestamp();
}
public class Amazon.EC2.Model.GroupIdentifier : object {
    private string _groupId;
    private string _groupName;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.HistoryRecord : object {
    private EventInformation _eventInformation;
    private EventType _eventType;
    private Nullable`1<DateTime> _timestamp;
    public EventInformation EventInformation { get; public set; }
    public EventType EventType { get; public set; }
    public DateTime Timestamp { get; public set; }
    public EventInformation get_EventInformation();
    public void set_EventInformation(EventInformation value);
    internal bool IsSetEventInformation();
    public EventType get_EventType();
    public void set_EventType(EventType value);
    internal bool IsSetEventType();
    public DateTime get_Timestamp();
    public void set_Timestamp(DateTime value);
    internal bool IsSetTimestamp();
}
public class Amazon.EC2.Model.IamInstanceProfile : object {
    private string _arn;
    private string _id;
    public string Arn { get; public set; }
    public string Id { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.EC2.Model.IamInstanceProfileSpecification : object {
    private string _arn;
    private string _name;
    public string Arn { get; public set; }
    public string Name { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.IcmpTypeCode : object {
    private Nullable`1<int> _code;
    private Nullable`1<int> _type;
    public int Code { get; public set; }
    public int Type { get; public set; }
    public int get_Code();
    public void set_Code(int value);
    internal bool IsSetCode();
    public int get_Type();
    public void set_Type(int value);
    internal bool IsSetType();
}
public class Amazon.EC2.Model.Image : object {
    private ArchitectureValues _architecture;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private string _creationDate;
    private string _description;
    private HypervisorType _hypervisor;
    private string _imageId;
    private string _imageLocation;
    private string _imageOwnerAlias;
    private ImageTypeValues _imageType;
    private string _kernelId;
    private string _name;
    private string _ownerId;
    private PlatformValues _platform;
    private List`1<ProductCode> _productCodes;
    private Nullable`1<bool> _public;
    private string _ramdiskId;
    private string _rootDeviceName;
    private DeviceType _rootDeviceType;
    private string _sriovNetSupport;
    private ImageState _state;
    private StateReason _stateReason;
    private List`1<Tag> _tags;
    private VirtualizationType _virtualizationType;
    public ArchitectureValues Architecture { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public string CreationDate { get; public set; }
    public string Description { get; public set; }
    public HypervisorType Hypervisor { get; public set; }
    public string ImageId { get; public set; }
    public string ImageLocation { get; public set; }
    public string ImageOwnerAlias { get; public set; }
    public ImageTypeValues ImageType { get; public set; }
    public string KernelId { get; public set; }
    public string Name { get; public set; }
    public string OwnerId { get; public set; }
    public PlatformValues Platform { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public bool Public { get; public set; }
    public string RamdiskId { get; public set; }
    public string RootDeviceName { get; public set; }
    public DeviceType RootDeviceType { get; public set; }
    public string SriovNetSupport { get; public set; }
    public ImageState State { get; public set; }
    public StateReason StateReason { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public VirtualizationType VirtualizationType { get; public set; }
    public ArchitectureValues get_Architecture();
    public void set_Architecture(ArchitectureValues value);
    internal bool IsSetArchitecture();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public string get_CreationDate();
    public void set_CreationDate(string value);
    internal bool IsSetCreationDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public HypervisorType get_Hypervisor();
    public void set_Hypervisor(HypervisorType value);
    internal bool IsSetHypervisor();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_ImageLocation();
    public void set_ImageLocation(string value);
    internal bool IsSetImageLocation();
    public string get_ImageOwnerAlias();
    public void set_ImageOwnerAlias(string value);
    internal bool IsSetImageOwnerAlias();
    public ImageTypeValues get_ImageType();
    public void set_ImageType(ImageTypeValues value);
    internal bool IsSetImageType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public PlatformValues get_Platform();
    public void set_Platform(PlatformValues value);
    internal bool IsSetPlatform();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public bool get_Public();
    public void set_Public(bool value);
    internal bool IsSetPublic();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public string get_RootDeviceName();
    public void set_RootDeviceName(string value);
    internal bool IsSetRootDeviceName();
    public DeviceType get_RootDeviceType();
    public void set_RootDeviceType(DeviceType value);
    internal bool IsSetRootDeviceType();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public ImageState get_State();
    public void set_State(ImageState value);
    internal bool IsSetState();
    public StateReason get_StateReason();
    public void set_StateReason(StateReason value);
    internal bool IsSetStateReason();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public VirtualizationType get_VirtualizationType();
    public void set_VirtualizationType(VirtualizationType value);
    internal bool IsSetVirtualizationType();
}
public class Amazon.EC2.Model.ImageAttribute : object {
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private string _description;
    private string _imageId;
    private string _kernelId;
    private List`1<LaunchPermission> _launchPermissions;
    private List`1<ProductCode> _productCodes;
    private string _ramdiskId;
    private string _sriovNetSupport;
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public string Description { get; public set; }
    public string ImageId { get; public set; }
    public string KernelId { get; public set; }
    public List`1<LaunchPermission> LaunchPermissions { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string RamdiskId { get; public set; }
    public string SriovNetSupport { get; public set; }
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public List`1<LaunchPermission> get_LaunchPermissions();
    public void set_LaunchPermissions(List`1<LaunchPermission> value);
    internal bool IsSetLaunchPermissions();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
}
public class Amazon.EC2.Model.ImageDiskContainer : object {
    private string _description;
    private string _deviceName;
    private string _format;
    private string _snapshotId;
    private string _url;
    private UserBucket _userBucket;
    public string Description { get; public set; }
    public string DeviceName { get; public set; }
    public string Format { get; public set; }
    public string SnapshotId { get; public set; }
    public string Url { get; public set; }
    public UserBucket UserBucket { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
    public UserBucket get_UserBucket();
    public void set_UserBucket(UserBucket value);
    internal bool IsSetUserBucket();
}
public class Amazon.EC2.Model.ImportImageRequest : AmazonEC2Request {
    private string _architecture;
    private ClientData _clientData;
    private string _clientToken;
    private string _description;
    private List`1<ImageDiskContainer> _diskContainers;
    private string _hypervisor;
    private string _licenseType;
    private string _platform;
    private string _roleName;
    public string Architecture { get; public set; }
    public ClientData ClientData { get; public set; }
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public List`1<ImageDiskContainer> DiskContainers { get; public set; }
    public string Hypervisor { get; public set; }
    public string LicenseType { get; public set; }
    public string Platform { get; public set; }
    public string RoleName { get; public set; }
    public string get_Architecture();
    public void set_Architecture(string value);
    internal bool IsSetArchitecture();
    public ClientData get_ClientData();
    public void set_ClientData(ClientData value);
    internal bool IsSetClientData();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<ImageDiskContainer> get_DiskContainers();
    public void set_DiskContainers(List`1<ImageDiskContainer> value);
    internal bool IsSetDiskContainers();
    public string get_Hypervisor();
    public void set_Hypervisor(string value);
    internal bool IsSetHypervisor();
    public string get_LicenseType();
    public void set_LicenseType(string value);
    internal bool IsSetLicenseType();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
}
public class Amazon.EC2.Model.ImportImageResponse : ImportImageResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ImportImageResult class are now available on the ImportImageResponse class. You should use the properties on ImportImageResponse instead of accessing them through ImportImageResult.")]
public ImportImageResult ImportImageResult { get; }
    public ImportImageResult get_ImportImageResult();
}
public class Amazon.EC2.Model.ImportImageResult : AmazonWebServiceResponse {
    private string _architecture;
    private string _description;
    private string _hypervisor;
    private string _imageId;
    private string _importTaskId;
    private string _licenseType;
    private string _platform;
    private string _progress;
    private List`1<SnapshotDetail> _snapshotDetails;
    private string _status;
    private string _statusMessage;
    public string Architecture { get; public set; }
    public string Description { get; public set; }
    public string Hypervisor { get; public set; }
    public string ImageId { get; public set; }
    public string ImportTaskId { get; public set; }
    public string LicenseType { get; public set; }
    public string Platform { get; public set; }
    public string Progress { get; public set; }
    public List`1<SnapshotDetail> SnapshotDetails { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public string get_Architecture();
    public void set_Architecture(string value);
    internal bool IsSetArchitecture();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Hypervisor();
    public void set_Hypervisor(string value);
    internal bool IsSetHypervisor();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
    public string get_LicenseType();
    public void set_LicenseType(string value);
    internal bool IsSetLicenseType();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public List`1<SnapshotDetail> get_SnapshotDetails();
    public void set_SnapshotDetails(List`1<SnapshotDetail> value);
    internal bool IsSetSnapshotDetails();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.ImportImageTask : object {
    private string _architecture;
    private string _description;
    private string _hypervisor;
    private string _imageId;
    private string _importTaskId;
    private string _licenseType;
    private string _platform;
    private string _progress;
    private List`1<SnapshotDetail> _snapshotDetails;
    private string _status;
    private string _statusMessage;
    public string Architecture { get; public set; }
    public string Description { get; public set; }
    public string Hypervisor { get; public set; }
    public string ImageId { get; public set; }
    public string ImportTaskId { get; public set; }
    public string LicenseType { get; public set; }
    public string Platform { get; public set; }
    public string Progress { get; public set; }
    public List`1<SnapshotDetail> SnapshotDetails { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public string get_Architecture();
    public void set_Architecture(string value);
    internal bool IsSetArchitecture();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Hypervisor();
    public void set_Hypervisor(string value);
    internal bool IsSetHypervisor();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
    public string get_LicenseType();
    public void set_LicenseType(string value);
    internal bool IsSetLicenseType();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public List`1<SnapshotDetail> get_SnapshotDetails();
    public void set_SnapshotDetails(List`1<SnapshotDetail> value);
    internal bool IsSetSnapshotDetails();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.ImportInstanceLaunchSpecification : object {
    private string _additionalInfo;
    private ArchitectureValues _architecture;
    private List`1<string> _groupIds;
    private List`1<string> _groupNames;
    private ShutdownBehavior _instanceInitiatedShutdownBehavior;
    private InstanceType _instanceType;
    private Nullable`1<bool> _monitoring;
    private Placement _placement;
    private string _privateIpAddress;
    private string _subnetId;
    private UserData _userData;
    public string AdditionalInfo { get; public set; }
    public ArchitectureValues Architecture { get; public set; }
    public List`1<string> GroupIds { get; public set; }
    public List`1<string> GroupNames { get; public set; }
    public ShutdownBehavior InstanceInitiatedShutdownBehavior { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public bool Monitoring { get; public set; }
    public Placement Placement { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public string SubnetId { get; public set; }
    public UserData UserData { get; public set; }
    public string get_AdditionalInfo();
    public void set_AdditionalInfo(string value);
    internal bool IsSetAdditionalInfo();
    public ArchitectureValues get_Architecture();
    public void set_Architecture(ArchitectureValues value);
    internal bool IsSetArchitecture();
    public List`1<string> get_GroupIds();
    public void set_GroupIds(List`1<string> value);
    internal bool IsSetGroupIds();
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
    public ShutdownBehavior get_InstanceInitiatedShutdownBehavior();
    public void set_InstanceInitiatedShutdownBehavior(ShutdownBehavior value);
    internal bool IsSetInstanceInitiatedShutdownBehavior();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public bool get_Monitoring();
    public void set_Monitoring(bool value);
    internal bool IsSetMonitoring();
    public Placement get_Placement();
    public void set_Placement(Placement value);
    internal bool IsSetPlacement();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public UserData get_UserData();
    public void set_UserData(UserData value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.ImportInstanceRequest : AmazonEC2Request {
    private string _description;
    private List`1<DiskImage> _diskImages;
    private ImportInstanceLaunchSpecification _launchSpecification;
    private PlatformValues _platform;
    public string Description { get; public set; }
    public List`1<DiskImage> DiskImages { get; public set; }
    public ImportInstanceLaunchSpecification LaunchSpecification { get; public set; }
    public PlatformValues Platform { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<DiskImage> get_DiskImages();
    public void set_DiskImages(List`1<DiskImage> value);
    internal bool IsSetDiskImages();
    public ImportInstanceLaunchSpecification get_LaunchSpecification();
    public void set_LaunchSpecification(ImportInstanceLaunchSpecification value);
    internal bool IsSetLaunchSpecification();
    public PlatformValues get_Platform();
    public void set_Platform(PlatformValues value);
    internal bool IsSetPlatform();
}
public class Amazon.EC2.Model.ImportInstanceResponse : ImportInstanceResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ImportInstanceResult class are now available on the ImportInstanceResponse class. You should use the properties on ImportInstanceResponse instead of accessing them through ImportInstanceResult.")]
public ImportInstanceResult ImportInstanceResult { get; }
    public ImportInstanceResult get_ImportInstanceResult();
}
public class Amazon.EC2.Model.ImportInstanceResult : AmazonWebServiceResponse {
    private ConversionTask _conversionTask;
    public ConversionTask ConversionTask { get; public set; }
    public ConversionTask get_ConversionTask();
    public void set_ConversionTask(ConversionTask value);
    internal bool IsSetConversionTask();
}
public class Amazon.EC2.Model.ImportInstanceTaskDetails : object {
    private string _description;
    private string _instanceId;
    private PlatformValues _platform;
    private List`1<ImportInstanceVolumeDetailItem> _volumes;
    public string Description { get; public set; }
    public string InstanceId { get; public set; }
    public PlatformValues Platform { get; public set; }
    public List`1<ImportInstanceVolumeDetailItem> Volumes { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public PlatformValues get_Platform();
    public void set_Platform(PlatformValues value);
    internal bool IsSetPlatform();
    public List`1<ImportInstanceVolumeDetailItem> get_Volumes();
    public void set_Volumes(List`1<ImportInstanceVolumeDetailItem> value);
    internal bool IsSetVolumes();
}
public class Amazon.EC2.Model.ImportInstanceVolumeDetailItem : object {
    private string _availabilityZone;
    private Nullable`1<long> _bytesConverted;
    private string _description;
    private DiskImageDescription _image;
    private string _status;
    private string _statusMessage;
    private DiskImageVolumeDescription _volume;
    public string AvailabilityZone { get; public set; }
    public long BytesConverted { get; public set; }
    public string Description { get; public set; }
    public DiskImageDescription Image { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public DiskImageVolumeDescription Volume { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public long get_BytesConverted();
    public void set_BytesConverted(long value);
    internal bool IsSetBytesConverted();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DiskImageDescription get_Image();
    public void set_Image(DiskImageDescription value);
    internal bool IsSetImage();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public DiskImageVolumeDescription get_Volume();
    public void set_Volume(DiskImageVolumeDescription value);
    internal bool IsSetVolume();
}
public class Amazon.EC2.Model.ImportKeyPairRequest : AmazonEC2Request {
    private string _keyName;
    private string _publicKeyMaterial;
    public string KeyName { get; public set; }
    public string PublicKeyMaterial { get; public set; }
    public ImportKeyPairRequest(string keyName, string publicKeyMaterial);
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public string get_PublicKeyMaterial();
    public void set_PublicKeyMaterial(string value);
    internal bool IsSetPublicKeyMaterial();
}
public class Amazon.EC2.Model.ImportKeyPairResponse : ImportKeyPairResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ImportKeyPairResult class are now available on the ImportKeyPairResponse class. You should use the properties on ImportKeyPairResponse instead of accessing them through ImportKeyPairResult.")]
public ImportKeyPairResult ImportKeyPairResult { get; }
    public ImportKeyPairResult get_ImportKeyPairResult();
}
public class Amazon.EC2.Model.ImportKeyPairResult : AmazonWebServiceResponse {
    private string _keyFingerprint;
    private string _keyName;
    public string KeyFingerprint { get; public set; }
    public string KeyName { get; public set; }
    public string get_KeyFingerprint();
    public void set_KeyFingerprint(string value);
    internal bool IsSetKeyFingerprint();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
}
public class Amazon.EC2.Model.ImportSnapshotRequest : AmazonEC2Request {
    private ClientData _clientData;
    private string _clientToken;
    private string _description;
    private SnapshotDiskContainer _diskContainer;
    private string _roleName;
    public ClientData ClientData { get; public set; }
    public string ClientToken { get; public set; }
    public string Description { get; public set; }
    public SnapshotDiskContainer DiskContainer { get; public set; }
    public string RoleName { get; public set; }
    public ClientData get_ClientData();
    public void set_ClientData(ClientData value);
    internal bool IsSetClientData();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public SnapshotDiskContainer get_DiskContainer();
    public void set_DiskContainer(SnapshotDiskContainer value);
    internal bool IsSetDiskContainer();
    public string get_RoleName();
    public void set_RoleName(string value);
    internal bool IsSetRoleName();
}
public class Amazon.EC2.Model.ImportSnapshotResponse : ImportSnapshotResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ImportSnapshotResult class are now available on the ImportSnapshotResponse class. You should use the properties on ImportSnapshotResponse instead of accessing them through ImportSnapshotResult.")]
public ImportSnapshotResult ImportSnapshotResult { get; }
    public ImportSnapshotResult get_ImportSnapshotResult();
}
public class Amazon.EC2.Model.ImportSnapshotResult : AmazonWebServiceResponse {
    private string _description;
    private string _importTaskId;
    private SnapshotTaskDetail _snapshotTaskDetail;
    public string Description { get; public set; }
    public string ImportTaskId { get; public set; }
    public SnapshotTaskDetail SnapshotTaskDetail { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
    public SnapshotTaskDetail get_SnapshotTaskDetail();
    public void set_SnapshotTaskDetail(SnapshotTaskDetail value);
    internal bool IsSetSnapshotTaskDetail();
}
public class Amazon.EC2.Model.ImportSnapshotTask : object {
    private string _description;
    private string _importTaskId;
    private SnapshotTaskDetail _snapshotTaskDetail;
    public string Description { get; public set; }
    public string ImportTaskId { get; public set; }
    public SnapshotTaskDetail SnapshotTaskDetail { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ImportTaskId();
    public void set_ImportTaskId(string value);
    internal bool IsSetImportTaskId();
    public SnapshotTaskDetail get_SnapshotTaskDetail();
    public void set_SnapshotTaskDetail(SnapshotTaskDetail value);
    internal bool IsSetSnapshotTaskDetail();
}
public class Amazon.EC2.Model.ImportVolumeRequest : AmazonEC2Request {
    private string _availabilityZone;
    private string _description;
    private DiskImageDetail _image;
    private VolumeDetail _volume;
    public string AvailabilityZone { get; public set; }
    public string Description { get; public set; }
    public DiskImageDetail Image { get; public set; }
    public VolumeDetail Volume { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DiskImageDetail get_Image();
    public void set_Image(DiskImageDetail value);
    internal bool IsSetImage();
    public VolumeDetail get_Volume();
    public void set_Volume(VolumeDetail value);
    internal bool IsSetVolume();
}
public class Amazon.EC2.Model.ImportVolumeResponse : ImportVolumeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ImportVolumeResult class are now available on the ImportVolumeResponse class. You should use the properties on ImportVolumeResponse instead of accessing them through ImportVolumeResult.")]
public ImportVolumeResult ImportVolumeResult { get; }
    public ImportVolumeResult get_ImportVolumeResult();
}
public class Amazon.EC2.Model.ImportVolumeResult : AmazonWebServiceResponse {
    private ConversionTask _conversionTask;
    public ConversionTask ConversionTask { get; public set; }
    public ConversionTask get_ConversionTask();
    public void set_ConversionTask(ConversionTask value);
    internal bool IsSetConversionTask();
}
public class Amazon.EC2.Model.ImportVolumeTaskDetails : object {
    private string _availabilityZone;
    private Nullable`1<long> _bytesConverted;
    private string _description;
    private DiskImageDescription _image;
    private DiskImageVolumeDescription _volume;
    public string AvailabilityZone { get; public set; }
    public long BytesConverted { get; public set; }
    public string Description { get; public set; }
    public DiskImageDescription Image { get; public set; }
    public DiskImageVolumeDescription Volume { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public long get_BytesConverted();
    public void set_BytesConverted(long value);
    internal bool IsSetBytesConverted();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DiskImageDescription get_Image();
    public void set_Image(DiskImageDescription value);
    internal bool IsSetImage();
    public DiskImageVolumeDescription get_Volume();
    public void set_Volume(DiskImageVolumeDescription value);
    internal bool IsSetVolume();
}
public class Amazon.EC2.Model.Instance : object {
    private Nullable`1<int> _amiLaunchIndex;
    private ArchitectureValues _architecture;
    private List`1<InstanceBlockDeviceMapping> _blockDeviceMappings;
    private string _clientToken;
    private Nullable`1<bool> _ebsOptimized;
    private HypervisorType _hypervisor;
    private IamInstanceProfile _iamInstanceProfile;
    private string _imageId;
    private string _instanceId;
    private InstanceLifecycleType _instanceLifecycle;
    private InstanceType _instanceType;
    private string _kernelId;
    private string _keyName;
    private Nullable`1<DateTime> _launchTime;
    private Monitoring _monitoring;
    private List`1<InstanceNetworkInterface> _networkInterfaces;
    private Placement _placement;
    private PlatformValues _platform;
    private string _privateDnsName;
    private string _privateIpAddress;
    private List`1<ProductCode> _productCodes;
    private string _publicDnsName;
    private string _publicIpAddress;
    private string _ramdiskId;
    private string _rootDeviceName;
    private DeviceType _rootDeviceType;
    private List`1<GroupIdentifier> _securityGroups;
    private Nullable`1<bool> _sourceDestCheck;
    private string _spotInstanceRequestId;
    private string _sriovNetSupport;
    private InstanceState _state;
    private StateReason _stateReason;
    private string _stateTransitionReason;
    private string _subnetId;
    private List`1<Tag> _tags;
    private VirtualizationType _virtualizationType;
    private string _vpcId;
    public int AmiLaunchIndex { get; public set; }
    public ArchitectureValues Architecture { get; public set; }
    public List`1<InstanceBlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public string ClientToken { get; public set; }
    public bool EbsOptimized { get; public set; }
    public HypervisorType Hypervisor { get; public set; }
    public IamInstanceProfile IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public string InstanceId { get; public set; }
    public InstanceLifecycleType InstanceLifecycle { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public DateTime LaunchTime { get; public set; }
    public Monitoring Monitoring { get; public set; }
    public List`1<InstanceNetworkInterface> NetworkInterfaces { get; public set; }
    public Placement Placement { get; public set; }
    public PlatformValues Platform { get; public set; }
    public string PrivateDnsName { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string PublicDnsName { get; public set; }
    public string PublicIpAddress { get; public set; }
    public string RamdiskId { get; public set; }
    public string RootDeviceName { get; public set; }
    public DeviceType RootDeviceType { get; public set; }
    public List`1<GroupIdentifier> SecurityGroups { get; public set; }
    public bool SourceDestCheck { get; public set; }
    public string SpotInstanceRequestId { get; public set; }
    public string SriovNetSupport { get; public set; }
    public InstanceState State { get; public set; }
    public StateReason StateReason { get; public set; }
    public string StateTransitionReason { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public VirtualizationType VirtualizationType { get; public set; }
    public string VpcId { get; public set; }
    public int get_AmiLaunchIndex();
    public void set_AmiLaunchIndex(int value);
    internal bool IsSetAmiLaunchIndex();
    public ArchitectureValues get_Architecture();
    public void set_Architecture(ArchitectureValues value);
    internal bool IsSetArchitecture();
    public List`1<InstanceBlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<InstanceBlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public bool get_EbsOptimized();
    public void set_EbsOptimized(bool value);
    internal bool IsSetEbsOptimized();
    public HypervisorType get_Hypervisor();
    public void set_Hypervisor(HypervisorType value);
    internal bool IsSetHypervisor();
    public IamInstanceProfile get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfile value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public InstanceLifecycleType get_InstanceLifecycle();
    public void set_InstanceLifecycle(InstanceLifecycleType value);
    internal bool IsSetInstanceLifecycle();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public DateTime get_LaunchTime();
    public void set_LaunchTime(DateTime value);
    internal bool IsSetLaunchTime();
    public Monitoring get_Monitoring();
    public void set_Monitoring(Monitoring value);
    internal bool IsSetMonitoring();
    public List`1<InstanceNetworkInterface> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<InstanceNetworkInterface> value);
    internal bool IsSetNetworkInterfaces();
    public Placement get_Placement();
    public void set_Placement(Placement value);
    internal bool IsSetPlacement();
    public PlatformValues get_Platform();
    public void set_Platform(PlatformValues value);
    internal bool IsSetPlatform();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public string get_PublicDnsName();
    public void set_PublicDnsName(string value);
    internal bool IsSetPublicDnsName();
    public string get_PublicIpAddress();
    public void set_PublicIpAddress(string value);
    internal bool IsSetPublicIpAddress();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public string get_RootDeviceName();
    public void set_RootDeviceName(string value);
    internal bool IsSetRootDeviceName();
    public DeviceType get_RootDeviceType();
    public void set_RootDeviceType(DeviceType value);
    internal bool IsSetRootDeviceType();
    public List`1<GroupIdentifier> get_SecurityGroups();
    public void set_SecurityGroups(List`1<GroupIdentifier> value);
    internal bool IsSetSecurityGroups();
    public bool get_SourceDestCheck();
    public void set_SourceDestCheck(bool value);
    internal bool IsSetSourceDestCheck();
    public string get_SpotInstanceRequestId();
    public void set_SpotInstanceRequestId(string value);
    internal bool IsSetSpotInstanceRequestId();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public InstanceState get_State();
    public void set_State(InstanceState value);
    internal bool IsSetState();
    public StateReason get_StateReason();
    public void set_StateReason(StateReason value);
    internal bool IsSetStateReason();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public VirtualizationType get_VirtualizationType();
    public void set_VirtualizationType(VirtualizationType value);
    internal bool IsSetVirtualizationType();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.InstanceAttribute : object {
    private List`1<InstanceBlockDeviceMapping> _blockDeviceMappings;
    private Nullable`1<bool> _disableApiTermination;
    private Nullable`1<bool> _ebsOptimized;
    private List`1<GroupIdentifier> _groups;
    private string _instanceId;
    private string _instanceInitiatedShutdownBehavior;
    private string _instanceType;
    private string _kernelId;
    private List`1<ProductCode> _productCodes;
    private string _ramdiskId;
    private string _rootDeviceName;
    private Nullable`1<bool> _sourceDestCheck;
    private string _sriovNetSupport;
    private string _userData;
    public List`1<InstanceBlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public bool DisableApiTermination { get; public set; }
    public bool EbsOptimized { get; public set; }
    public List`1<GroupIdentifier> Groups { get; public set; }
    public string InstanceId { get; public set; }
    public string InstanceInitiatedShutdownBehavior { get; public set; }
    public string InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public List`1<ProductCode> ProductCodes { get; public set; }
    public string RamdiskId { get; public set; }
    public string RootDeviceName { get; public set; }
    public bool SourceDestCheck { get; public set; }
    public string SriovNetSupport { get; public set; }
    public string UserData { get; public set; }
    public List`1<InstanceBlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<InstanceBlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public bool get_DisableApiTermination();
    public void set_DisableApiTermination(bool value);
    internal bool IsSetDisableApiTermination();
    public bool get_EbsOptimized();
    public void set_EbsOptimized(bool value);
    internal bool IsSetEbsOptimized();
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceInitiatedShutdownBehavior();
    public void set_InstanceInitiatedShutdownBehavior(string value);
    internal bool IsSetInstanceInitiatedShutdownBehavior();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public List`1<ProductCode> get_ProductCodes();
    public void set_ProductCodes(List`1<ProductCode> value);
    internal bool IsSetProductCodes();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public string get_RootDeviceName();
    public void set_RootDeviceName(string value);
    internal bool IsSetRootDeviceName();
    public bool get_SourceDestCheck();
    public void set_SourceDestCheck(bool value);
    internal bool IsSetSourceDestCheck();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.InstanceBlockDeviceMapping : object {
    private string _deviceName;
    private EbsInstanceBlockDevice _ebs;
    public string DeviceName { get; public set; }
    public EbsInstanceBlockDevice Ebs { get; public set; }
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public EbsInstanceBlockDevice get_Ebs();
    public void set_Ebs(EbsInstanceBlockDevice value);
    internal bool IsSetEbs();
}
public class Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification : object {
    private string _deviceName;
    private EbsInstanceBlockDeviceSpecification _ebs;
    private string _noDevice;
    private string _virtualName;
    public string DeviceName { get; public set; }
    public EbsInstanceBlockDeviceSpecification Ebs { get; public set; }
    public string NoDevice { get; public set; }
    public string VirtualName { get; public set; }
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public EbsInstanceBlockDeviceSpecification get_Ebs();
    public void set_Ebs(EbsInstanceBlockDeviceSpecification value);
    internal bool IsSetEbs();
    public string get_NoDevice();
    public void set_NoDevice(string value);
    internal bool IsSetNoDevice();
    public string get_VirtualName();
    public void set_VirtualName(string value);
    internal bool IsSetVirtualName();
}
public class Amazon.EC2.Model.InstanceCount : object {
    private Nullable`1<int> _count;
    private ListingState _state;
    public int Count { get; public set; }
    public ListingState State { get; public set; }
    public int get_Count();
    public void set_Count(int value);
    internal bool IsSetCount();
    public ListingState get_State();
    public void set_State(ListingState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.InstanceExportDetails : object {
    private string _instanceId;
    private ExportEnvironment _targetEnvironment;
    public string InstanceId { get; public set; }
    public ExportEnvironment TargetEnvironment { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public ExportEnvironment get_TargetEnvironment();
    public void set_TargetEnvironment(ExportEnvironment value);
    internal bool IsSetTargetEnvironment();
}
public class Amazon.EC2.Model.InstanceLicenseSpecification : object {
    private string pool;
    public string Pool { get; public set; }
    public string get_Pool();
    public void set_Pool(string value);
    internal bool IsSetPool();
}
public class Amazon.EC2.Model.InstanceMonitoring : object {
    private string _instanceId;
    private Monitoring _monitoring;
    public string InstanceId { get; public set; }
    public Monitoring Monitoring { get; public set; }
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public Monitoring get_Monitoring();
    public void set_Monitoring(Monitoring value);
    internal bool IsSetMonitoring();
}
public class Amazon.EC2.Model.InstanceNetworkInterface : object {
    private InstanceNetworkInterfaceAssociation _association;
    private InstanceNetworkInterfaceAttachment _attachment;
    private string _description;
    private List`1<GroupIdentifier> _groups;
    private string _macAddress;
    private string _networkInterfaceId;
    private string _ownerId;
    private string _privateDnsName;
    private string _privateIpAddress;
    private List`1<InstancePrivateIpAddress> _privateIpAddresses;
    private Nullable`1<bool> _sourceDestCheck;
    private NetworkInterfaceStatus _status;
    private string _subnetId;
    private string _vpcId;
    public InstanceNetworkInterfaceAssociation Association { get; public set; }
    public InstanceNetworkInterfaceAttachment Attachment { get; public set; }
    public string Description { get; public set; }
    public List`1<GroupIdentifier> Groups { get; public set; }
    public string MacAddress { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string OwnerId { get; public set; }
    public string PrivateDnsName { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<InstancePrivateIpAddress> PrivateIpAddresses { get; public set; }
    public bool SourceDestCheck { get; public set; }
    public NetworkInterfaceStatus Status { get; public set; }
    public string SubnetId { get; public set; }
    public string VpcId { get; public set; }
    public InstanceNetworkInterfaceAssociation get_Association();
    public void set_Association(InstanceNetworkInterfaceAssociation value);
    internal bool IsSetAssociation();
    public InstanceNetworkInterfaceAttachment get_Attachment();
    public void set_Attachment(InstanceNetworkInterfaceAttachment value);
    internal bool IsSetAttachment();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public string get_MacAddress();
    public void set_MacAddress(string value);
    internal bool IsSetMacAddress();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<InstancePrivateIpAddress> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<InstancePrivateIpAddress> value);
    internal bool IsSetPrivateIpAddresses();
    public bool get_SourceDestCheck();
    public void set_SourceDestCheck(bool value);
    internal bool IsSetSourceDestCheck();
    public NetworkInterfaceStatus get_Status();
    public void set_Status(NetworkInterfaceStatus value);
    internal bool IsSetStatus();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.InstanceNetworkInterfaceAssociation : object {
    private string _ipOwnerId;
    private string _publicDnsName;
    private string _publicIp;
    public string IpOwnerId { get; public set; }
    public string PublicDnsName { get; public set; }
    public string PublicIp { get; public set; }
    public string get_IpOwnerId();
    public void set_IpOwnerId(string value);
    internal bool IsSetIpOwnerId();
    public string get_PublicDnsName();
    public void set_PublicDnsName(string value);
    internal bool IsSetPublicDnsName();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.InstanceNetworkInterfaceAttachment : object {
    private string _attachmentId;
    private Nullable`1<DateTime> _attachTime;
    private Nullable`1<bool> _deleteOnTermination;
    private Nullable`1<int> _deviceIndex;
    private AttachmentStatus _status;
    public string AttachmentId { get; public set; }
    public DateTime AttachTime { get; public set; }
    public bool DeleteOnTermination { get; public set; }
    public int DeviceIndex { get; public set; }
    public AttachmentStatus Status { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
    public DateTime get_AttachTime();
    public void set_AttachTime(DateTime value);
    internal bool IsSetAttachTime();
    public bool get_DeleteOnTermination();
    public void set_DeleteOnTermination(bool value);
    internal bool IsSetDeleteOnTermination();
    public int get_DeviceIndex();
    public void set_DeviceIndex(int value);
    internal bool IsSetDeviceIndex();
    public AttachmentStatus get_Status();
    public void set_Status(AttachmentStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.InstanceNetworkInterfaceSpecification : object {
    private Nullable`1<bool> _associatePublicIpAddress;
    private Nullable`1<bool> _deleteOnTermination;
    private string _description;
    private Nullable`1<int> _deviceIndex;
    private List`1<string> _groups;
    private string _networkInterfaceId;
    private string _privateIpAddress;
    private List`1<PrivateIpAddressSpecification> _privateIpAddresses;
    private Nullable`1<int> _secondaryPrivateIpAddressCount;
    private string _subnetId;
    public bool AssociatePublicIpAddress { get; public set; }
    public bool DeleteOnTermination { get; public set; }
    public string Description { get; public set; }
    public int DeviceIndex { get; public set; }
    public List`1<string> Groups { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<PrivateIpAddressSpecification> PrivateIpAddresses { get; public set; }
    public int SecondaryPrivateIpAddressCount { get; public set; }
    public string SubnetId { get; public set; }
    public bool get_AssociatePublicIpAddress();
    public void set_AssociatePublicIpAddress(bool value);
    internal bool IsSetAssociatePublicIpAddress();
    public bool get_DeleteOnTermination();
    public void set_DeleteOnTermination(bool value);
    internal bool IsSetDeleteOnTermination();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public int get_DeviceIndex();
    public void set_DeviceIndex(int value);
    internal bool IsSetDeviceIndex();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<PrivateIpAddressSpecification> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<PrivateIpAddressSpecification> value);
    internal bool IsSetPrivateIpAddresses();
    public int get_SecondaryPrivateIpAddressCount();
    public void set_SecondaryPrivateIpAddressCount(int value);
    internal bool IsSetSecondaryPrivateIpAddressCount();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.InstancePrivateIpAddress : object {
    private InstanceNetworkInterfaceAssociation _association;
    private Nullable`1<bool> _primary;
    private string _privateDnsName;
    private string _privateIpAddress;
    public InstanceNetworkInterfaceAssociation Association { get; public set; }
    public bool Primary { get; public set; }
    public string PrivateDnsName { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public InstanceNetworkInterfaceAssociation get_Association();
    public void set_Association(InstanceNetworkInterfaceAssociation value);
    internal bool IsSetAssociation();
    public bool get_Primary();
    public void set_Primary(bool value);
    internal bool IsSetPrimary();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
}
public class Amazon.EC2.Model.InstanceState : object {
    private Nullable`1<int> _code;
    private InstanceStateName _name;
    public int Code { get; public set; }
    public InstanceStateName Name { get; public set; }
    public int get_Code();
    public void set_Code(int value);
    internal bool IsSetCode();
    public InstanceStateName get_Name();
    public void set_Name(InstanceStateName value);
    internal bool IsSetName();
}
public class Amazon.EC2.Model.InstanceStateChange : object {
    private InstanceState _currentState;
    private string _instanceId;
    private InstanceState _previousState;
    public InstanceState CurrentState { get; public set; }
    public string InstanceId { get; public set; }
    public InstanceState PreviousState { get; public set; }
    public InstanceState get_CurrentState();
    public void set_CurrentState(InstanceState value);
    internal bool IsSetCurrentState();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public InstanceState get_PreviousState();
    public void set_PreviousState(InstanceState value);
    internal bool IsSetPreviousState();
}
public class Amazon.EC2.Model.InstanceStatus : object {
    private string _availabilityZone;
    private List`1<InstanceStatusEvent> _events;
    private string _instanceId;
    private InstanceState _instanceState;
    private InstanceStatusSummary _status;
    private InstanceStatusSummary _systemStatus;
    public string AvailabilityZone { get; public set; }
    public List`1<InstanceStatusEvent> Events { get; public set; }
    public string InstanceId { get; public set; }
    public InstanceState InstanceState { get; public set; }
    public InstanceStatusSummary Status { get; public set; }
    public InstanceStatusSummary SystemStatus { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public List`1<InstanceStatusEvent> get_Events();
    public void set_Events(List`1<InstanceStatusEvent> value);
    internal bool IsSetEvents();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public InstanceState get_InstanceState();
    public void set_InstanceState(InstanceState value);
    internal bool IsSetInstanceState();
    public InstanceStatusSummary get_Status();
    public void set_Status(InstanceStatusSummary value);
    internal bool IsSetStatus();
    public InstanceStatusSummary get_SystemStatus();
    public void set_SystemStatus(InstanceStatusSummary value);
    internal bool IsSetSystemStatus();
}
public class Amazon.EC2.Model.InstanceStatusDetails : object {
    private Nullable`1<DateTime> _impairedSince;
    private StatusName _name;
    private StatusType _status;
    public DateTime ImpairedSince { get; public set; }
    public StatusName Name { get; public set; }
    public StatusType Status { get; public set; }
    public DateTime get_ImpairedSince();
    public void set_ImpairedSince(DateTime value);
    internal bool IsSetImpairedSince();
    public StatusName get_Name();
    public void set_Name(StatusName value);
    internal bool IsSetName();
    public StatusType get_Status();
    public void set_Status(StatusType value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.InstanceStatusEvent : object {
    private EventCode _code;
    private string _description;
    private Nullable`1<DateTime> _notAfter;
    private Nullable`1<DateTime> _notBefore;
    public EventCode Code { get; public set; }
    public string Description { get; public set; }
    public DateTime NotAfter { get; public set; }
    public DateTime NotBefore { get; public set; }
    public EventCode get_Code();
    public void set_Code(EventCode value);
    internal bool IsSetCode();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DateTime get_NotAfter();
    public void set_NotAfter(DateTime value);
    internal bool IsSetNotAfter();
    public DateTime get_NotBefore();
    public void set_NotBefore(DateTime value);
    internal bool IsSetNotBefore();
}
public class Amazon.EC2.Model.InstanceStatusSummary : object {
    private List`1<InstanceStatusDetails> _details;
    private SummaryStatus _status;
    public List`1<InstanceStatusDetails> Details { get; public set; }
    public SummaryStatus Status { get; public set; }
    public List`1<InstanceStatusDetails> get_Details();
    public void set_Details(List`1<InstanceStatusDetails> value);
    internal bool IsSetDetails();
    public SummaryStatus get_Status();
    public void set_Status(SummaryStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AcceptVpcPeeringConnectionRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AcceptVpcPeeringConnectionResponseUnmarshaller _instance;
    public static AcceptVpcPeeringConnectionResponseUnmarshaller Instance { get; }
    private static AcceptVpcPeeringConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AcceptVpcPeeringConnectionResponseUnmarshaller GetInstance();
    public static AcceptVpcPeeringConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeUnmarshaller : object {
    private static AccountAttributeUnmarshaller _instance;
    public static AccountAttributeUnmarshaller Instance { get; }
    private static AccountAttributeUnmarshaller();
    public sealed virtual AccountAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountAttribute Unmarshall(JsonUnmarshallerContext context);
    public static AccountAttributeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeValueUnmarshaller : object {
    private static AccountAttributeValueUnmarshaller _instance;
    public static AccountAttributeValueUnmarshaller Instance { get; }
    private static AccountAttributeValueUnmarshaller();
    public sealed virtual AccountAttributeValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountAttributeValue Unmarshall(JsonUnmarshallerContext context);
    public static AccountAttributeValueUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ActiveInstanceUnmarshaller : object {
    private static ActiveInstanceUnmarshaller _instance;
    public static ActiveInstanceUnmarshaller Instance { get; }
    private static ActiveInstanceUnmarshaller();
    public sealed virtual ActiveInstance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ActiveInstance Unmarshall(JsonUnmarshallerContext context);
    public static ActiveInstanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AddressUnmarshaller : object {
    private static AddressUnmarshaller _instance;
    public static AddressUnmarshaller Instance { get; }
    private static AddressUnmarshaller();
    public sealed virtual Address Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Address Unmarshall(JsonUnmarshallerContext context);
    public static AddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AllocateAddressRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AllocateAddressResponseUnmarshaller _instance;
    public static AllocateAddressResponseUnmarshaller Instance { get; }
    private static AllocateAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AllocateAddressResponseUnmarshaller GetInstance();
    public static AllocateAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssignPrivateIpAddressesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssignPrivateIpAddressesResponseUnmarshaller _instance;
    public static AssignPrivateIpAddressesResponseUnmarshaller Instance { get; }
    private static AssignPrivateIpAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssignPrivateIpAddressesResponseUnmarshaller GetInstance();
    public static AssignPrivateIpAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateAddressRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateAddressResponseUnmarshaller _instance;
    public static AssociateAddressResponseUnmarshaller Instance { get; }
    private static AssociateAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateAddressResponseUnmarshaller GetInstance();
    public static AssociateAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateDhcpOptionsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateDhcpOptionsResponseUnmarshaller _instance;
    public static AssociateDhcpOptionsResponseUnmarshaller Instance { get; }
    private static AssociateDhcpOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateDhcpOptionsResponseUnmarshaller GetInstance();
    public static AssociateDhcpOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateRouteTableRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AssociateRouteTableResponseUnmarshaller _instance;
    public static AssociateRouteTableResponseUnmarshaller Instance { get; }
    private static AssociateRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateRouteTableResponseUnmarshaller GetInstance();
    public static AssociateRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachClassicLinkVpcRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachClassicLinkVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachClassicLinkVpcResponseUnmarshaller _instance;
    public static AttachClassicLinkVpcResponseUnmarshaller Instance { get; }
    private static AttachClassicLinkVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachClassicLinkVpcResponseUnmarshaller GetInstance();
    public static AttachClassicLinkVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachInternetGatewayRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachInternetGatewayResponseUnmarshaller _instance;
    public static AttachInternetGatewayResponseUnmarshaller Instance { get; }
    private static AttachInternetGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachInternetGatewayResponseUnmarshaller GetInstance();
    public static AttachInternetGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachNetworkInterfaceRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachNetworkInterfaceResponseUnmarshaller _instance;
    public static AttachNetworkInterfaceResponseUnmarshaller Instance { get; }
    private static AttachNetworkInterfaceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachNetworkInterfaceResponseUnmarshaller GetInstance();
    public static AttachNetworkInterfaceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachVolumeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachVolumeResponseUnmarshaller _instance;
    public static AttachVolumeResponseUnmarshaller Instance { get; }
    private static AttachVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachVolumeResponseUnmarshaller GetInstance();
    public static AttachVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachVpnGatewayRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AttachVpnGatewayResponseUnmarshaller _instance;
    public static AttachVpnGatewayResponseUnmarshaller Instance { get; }
    private static AttachVpnGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachVpnGatewayResponseUnmarshaller GetInstance();
    public static AttachVpnGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AuthorizeSecurityGroupEgressRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AuthorizeSecurityGroupEgressResponseUnmarshaller _instance;
    public static AuthorizeSecurityGroupEgressResponseUnmarshaller Instance { get; }
    private static AuthorizeSecurityGroupEgressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AuthorizeSecurityGroupEgressResponseUnmarshaller GetInstance();
    public static AuthorizeSecurityGroupEgressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AuthorizeSecurityGroupIngressRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static AuthorizeSecurityGroupIngressResponseUnmarshaller _instance;
    public static AuthorizeSecurityGroupIngressResponseUnmarshaller Instance { get; }
    private static AuthorizeSecurityGroupIngressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AuthorizeSecurityGroupIngressResponseUnmarshaller GetInstance();
    public static AuthorizeSecurityGroupIngressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneMessageUnmarshaller : object {
    private static AvailabilityZoneMessageUnmarshaller _instance;
    public static AvailabilityZoneMessageUnmarshaller Instance { get; }
    private static AvailabilityZoneMessageUnmarshaller();
    public sealed virtual AvailabilityZoneMessage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailabilityZoneMessage Unmarshall(JsonUnmarshallerContext context);
    public static AvailabilityZoneMessageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller : object {
    private static AvailabilityZoneUnmarshaller _instance;
    public static AvailabilityZoneUnmarshaller Instance { get; }
    private static AvailabilityZoneUnmarshaller();
    public sealed virtual AvailabilityZone Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailabilityZone Unmarshall(JsonUnmarshallerContext context);
    public static AvailabilityZoneUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BlockDeviceMappingUnmarshaller : object {
    private static BlockDeviceMappingUnmarshaller _instance;
    public static BlockDeviceMappingUnmarshaller Instance { get; }
    private static BlockDeviceMappingUnmarshaller();
    public sealed virtual BlockDeviceMapping Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BlockDeviceMapping Unmarshall(JsonUnmarshallerContext context);
    public static BlockDeviceMappingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BundleInstanceRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static BundleInstanceResponseUnmarshaller _instance;
    public static BundleInstanceResponseUnmarshaller Instance { get; }
    private static BundleInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BundleInstanceResponseUnmarshaller GetInstance();
    public static BundleInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskErrorUnmarshaller : object {
    private static BundleTaskErrorUnmarshaller _instance;
    public static BundleTaskErrorUnmarshaller Instance { get; }
    private static BundleTaskErrorUnmarshaller();
    public sealed virtual BundleTaskError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BundleTaskError Unmarshall(JsonUnmarshallerContext context);
    public static BundleTaskErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskUnmarshaller : object {
    private static BundleTaskUnmarshaller _instance;
    public static BundleTaskUnmarshaller Instance { get; }
    private static BundleTaskUnmarshaller();
    public sealed virtual BundleTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BundleTask Unmarshall(JsonUnmarshallerContext context);
    public static BundleTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelBundleTaskRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelBundleTaskResponseUnmarshaller _instance;
    public static CancelBundleTaskResponseUnmarshaller Instance { get; }
    private static CancelBundleTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelBundleTaskResponseUnmarshaller GetInstance();
    public static CancelBundleTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelConversionTaskRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelConversionTaskResponseUnmarshaller _instance;
    public static CancelConversionTaskResponseUnmarshaller Instance { get; }
    private static CancelConversionTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelConversionTaskResponseUnmarshaller GetInstance();
    public static CancelConversionTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelExportTaskRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelExportTaskResponseUnmarshaller _instance;
    public static CancelExportTaskResponseUnmarshaller Instance { get; }
    private static CancelExportTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelExportTaskResponseUnmarshaller GetInstance();
    public static CancelExportTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelImportTaskRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelImportTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelImportTaskResponseUnmarshaller _instance;
    public static CancelImportTaskResponseUnmarshaller Instance { get; }
    private static CancelImportTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelImportTaskResponseUnmarshaller GetInstance();
    public static CancelImportTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelledSpotInstanceRequestUnmarshaller : object {
    private static CancelledSpotInstanceRequestUnmarshaller _instance;
    public static CancelledSpotInstanceRequestUnmarshaller Instance { get; }
    private static CancelledSpotInstanceRequestUnmarshaller();
    public sealed virtual CancelledSpotInstanceRequest Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CancelledSpotInstanceRequest Unmarshall(JsonUnmarshallerContext context);
    public static CancelledSpotInstanceRequestUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelReservedInstancesListingRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelReservedInstancesListingResponseUnmarshaller _instance;
    public static CancelReservedInstancesListingResponseUnmarshaller Instance { get; }
    private static CancelReservedInstancesListingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelReservedInstancesListingResponseUnmarshaller GetInstance();
    public static CancelReservedInstancesListingResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorItemUnmarshaller : object {
    private static CancelSpotFleetRequestsErrorItemUnmarshaller _instance;
    public static CancelSpotFleetRequestsErrorItemUnmarshaller Instance { get; }
    private static CancelSpotFleetRequestsErrorItemUnmarshaller();
    public sealed virtual CancelSpotFleetRequestsErrorItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CancelSpotFleetRequestsErrorItem Unmarshall(JsonUnmarshallerContext context);
    public static CancelSpotFleetRequestsErrorItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsErrorUnmarshaller : object {
    private static CancelSpotFleetRequestsErrorUnmarshaller _instance;
    public static CancelSpotFleetRequestsErrorUnmarshaller Instance { get; }
    private static CancelSpotFleetRequestsErrorUnmarshaller();
    public sealed virtual CancelSpotFleetRequestsError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CancelSpotFleetRequestsError Unmarshall(JsonUnmarshallerContext context);
    public static CancelSpotFleetRequestsErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelSpotFleetRequestsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelSpotFleetRequestsResponseUnmarshaller _instance;
    public static CancelSpotFleetRequestsResponseUnmarshaller Instance { get; }
    private static CancelSpotFleetRequestsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelSpotFleetRequestsResponseUnmarshaller GetInstance();
    public static CancelSpotFleetRequestsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotFleetRequestsSuccessItemUnmarshaller : object {
    private static CancelSpotFleetRequestsSuccessItemUnmarshaller _instance;
    public static CancelSpotFleetRequestsSuccessItemUnmarshaller Instance { get; }
    private static CancelSpotFleetRequestsSuccessItemUnmarshaller();
    public sealed virtual CancelSpotFleetRequestsSuccessItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CancelSpotFleetRequestsSuccessItem Unmarshall(JsonUnmarshallerContext context);
    public static CancelSpotFleetRequestsSuccessItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelSpotInstanceRequestsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CancelSpotInstanceRequestsResponseUnmarshaller _instance;
    public static CancelSpotInstanceRequestsResponseUnmarshaller Instance { get; }
    private static CancelSpotInstanceRequestsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelSpotInstanceRequestsResponseUnmarshaller GetInstance();
    public static CancelSpotInstanceRequestsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ClassicLinkInstanceUnmarshaller : object {
    private static ClassicLinkInstanceUnmarshaller _instance;
    public static ClassicLinkInstanceUnmarshaller Instance { get; }
    private static ClassicLinkInstanceUnmarshaller();
    public sealed virtual ClassicLinkInstance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ClassicLinkInstance Unmarshall(JsonUnmarshallerContext context);
    public static ClassicLinkInstanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ConfirmProductInstanceRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ConfirmProductInstanceResponseUnmarshaller _instance;
    public static ConfirmProductInstanceResponseUnmarshaller Instance { get; }
    private static ConfirmProductInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ConfirmProductInstanceResponseUnmarshaller GetInstance();
    public static ConfirmProductInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ConversionTaskUnmarshaller : object {
    private static ConversionTaskUnmarshaller _instance;
    public static ConversionTaskUnmarshaller Instance { get; }
    private static ConversionTaskUnmarshaller();
    public sealed virtual ConversionTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConversionTask Unmarshall(JsonUnmarshallerContext context);
    public static ConversionTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyImageRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CopyImageResponseUnmarshaller _instance;
    public static CopyImageResponseUnmarshaller Instance { get; }
    private static CopyImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopyImageResponseUnmarshaller GetInstance();
    public static CopyImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopySnapshotRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CopySnapshotResponseUnmarshaller _instance;
    public static CopySnapshotResponseUnmarshaller Instance { get; }
    private static CopySnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopySnapshotResponseUnmarshaller GetInstance();
    public static CopySnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCustomerGatewayRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateCustomerGatewayResponseUnmarshaller _instance;
    public static CreateCustomerGatewayResponseUnmarshaller Instance { get; }
    private static CreateCustomerGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCustomerGatewayResponseUnmarshaller GetInstance();
    public static CreateCustomerGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDhcpOptionsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateDhcpOptionsResponseUnmarshaller _instance;
    public static CreateDhcpOptionsResponseUnmarshaller Instance { get; }
    private static CreateDhcpOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDhcpOptionsResponseUnmarshaller GetInstance();
    public static CreateDhcpOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFlowLogsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateFlowLogsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateFlowLogsResponseUnmarshaller _instance;
    public static CreateFlowLogsResponseUnmarshaller Instance { get; }
    private static CreateFlowLogsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFlowLogsResponseUnmarshaller GetInstance();
    public static CreateFlowLogsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateImageRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateImageResponseUnmarshaller _instance;
    public static CreateImageResponseUnmarshaller Instance { get; }
    private static CreateImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateImageResponseUnmarshaller GetInstance();
    public static CreateImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateInstanceExportTaskRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateInstanceExportTaskResponseUnmarshaller _instance;
    public static CreateInstanceExportTaskResponseUnmarshaller Instance { get; }
    private static CreateInstanceExportTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateInstanceExportTaskResponseUnmarshaller GetInstance();
    public static CreateInstanceExportTaskResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateInternetGatewayRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateInternetGatewayResponseUnmarshaller _instance;
    public static CreateInternetGatewayResponseUnmarshaller Instance { get; }
    private static CreateInternetGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateInternetGatewayResponseUnmarshaller GetInstance();
    public static CreateInternetGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateKeyPairRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateKeyPairResponseUnmarshaller _instance;
    public static CreateKeyPairResponseUnmarshaller Instance { get; }
    private static CreateKeyPairResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateKeyPairResponseUnmarshaller GetInstance();
    public static CreateKeyPairResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNetworkAclEntryRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateNetworkAclEntryResponseUnmarshaller _instance;
    public static CreateNetworkAclEntryResponseUnmarshaller Instance { get; }
    private static CreateNetworkAclEntryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNetworkAclEntryResponseUnmarshaller GetInstance();
    public static CreateNetworkAclEntryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNetworkAclRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateNetworkAclResponseUnmarshaller _instance;
    public static CreateNetworkAclResponseUnmarshaller Instance { get; }
    private static CreateNetworkAclResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNetworkAclResponseUnmarshaller GetInstance();
    public static CreateNetworkAclResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateNetworkInterfaceRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateNetworkInterfaceResponseUnmarshaller _instance;
    public static CreateNetworkInterfaceResponseUnmarshaller Instance { get; }
    private static CreateNetworkInterfaceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateNetworkInterfaceResponseUnmarshaller GetInstance();
    public static CreateNetworkInterfaceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreatePlacementGroupRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreatePlacementGroupResponseUnmarshaller _instance;
    public static CreatePlacementGroupResponseUnmarshaller Instance { get; }
    private static CreatePlacementGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreatePlacementGroupResponseUnmarshaller GetInstance();
    public static CreatePlacementGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReservedInstancesListingRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateReservedInstancesListingResponseUnmarshaller _instance;
    public static CreateReservedInstancesListingResponseUnmarshaller Instance { get; }
    private static CreateReservedInstancesListingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReservedInstancesListingResponseUnmarshaller GetInstance();
    public static CreateReservedInstancesListingResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRouteRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateRouteResponseUnmarshaller _instance;
    public static CreateRouteResponseUnmarshaller Instance { get; }
    private static CreateRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRouteResponseUnmarshaller GetInstance();
    public static CreateRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRouteTableRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateRouteTableResponseUnmarshaller _instance;
    public static CreateRouteTableResponseUnmarshaller Instance { get; }
    private static CreateRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRouteTableResponseUnmarshaller GetInstance();
    public static CreateRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSecurityGroupRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateSecurityGroupResponseUnmarshaller _instance;
    public static CreateSecurityGroupResponseUnmarshaller Instance { get; }
    private static CreateSecurityGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSecurityGroupResponseUnmarshaller GetInstance();
    public static CreateSecurityGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSnapshotRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateSnapshotResponseUnmarshaller _instance;
    public static CreateSnapshotResponseUnmarshaller Instance { get; }
    private static CreateSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSnapshotResponseUnmarshaller GetInstance();
    public static CreateSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSpotDatafeedSubscriptionRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateSpotDatafeedSubscriptionResponseUnmarshaller _instance;
    public static CreateSpotDatafeedSubscriptionResponseUnmarshaller Instance { get; }
    private static CreateSpotDatafeedSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSpotDatafeedSubscriptionResponseUnmarshaller GetInstance();
    public static CreateSpotDatafeedSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateSubnetRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateSubnetResponseUnmarshaller _instance;
    public static CreateSubnetResponseUnmarshaller Instance { get; }
    private static CreateSubnetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateSubnetResponseUnmarshaller GetInstance();
    public static CreateSubnetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTagsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateTagsResponseUnmarshaller _instance;
    public static CreateTagsResponseUnmarshaller Instance { get; }
    private static CreateTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTagsResponseUnmarshaller GetInstance();
    public static CreateTagsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumePermissionUnmarshaller : object {
    private static CreateVolumePermissionUnmarshaller _instance;
    public static CreateVolumePermissionUnmarshaller Instance { get; }
    private static CreateVolumePermissionUnmarshaller();
    public sealed virtual CreateVolumePermission Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CreateVolumePermission Unmarshall(JsonUnmarshallerContext context);
    public static CreateVolumePermissionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVolumeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVolumeResponseUnmarshaller _instance;
    public static CreateVolumeResponseUnmarshaller Instance { get; }
    private static CreateVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVolumeResponseUnmarshaller GetInstance();
    public static CreateVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpcEndpointRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpcEndpointResponseUnmarshaller _instance;
    public static CreateVpcEndpointResponseUnmarshaller Instance { get; }
    private static CreateVpcEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpcEndpointResponseUnmarshaller GetInstance();
    public static CreateVpcEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpcPeeringConnectionRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpcPeeringConnectionResponseUnmarshaller _instance;
    public static CreateVpcPeeringConnectionResponseUnmarshaller Instance { get; }
    private static CreateVpcPeeringConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpcPeeringConnectionResponseUnmarshaller GetInstance();
    public static CreateVpcPeeringConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpcRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpcResponseUnmarshaller _instance;
    public static CreateVpcResponseUnmarshaller Instance { get; }
    private static CreateVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpcResponseUnmarshaller GetInstance();
    public static CreateVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpnConnectionRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpnConnectionResponseUnmarshaller _instance;
    public static CreateVpnConnectionResponseUnmarshaller Instance { get; }
    private static CreateVpnConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpnConnectionResponseUnmarshaller GetInstance();
    public static CreateVpnConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpnConnectionRouteRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpnConnectionRouteResponseUnmarshaller _instance;
    public static CreateVpnConnectionRouteResponseUnmarshaller Instance { get; }
    private static CreateVpnConnectionRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpnConnectionRouteResponseUnmarshaller GetInstance();
    public static CreateVpnConnectionRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpnGatewayRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static CreateVpnGatewayResponseUnmarshaller _instance;
    public static CreateVpnGatewayResponseUnmarshaller Instance { get; }
    private static CreateVpnGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpnGatewayResponseUnmarshaller GetInstance();
    public static CreateVpnGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.CustomerGatewayUnmarshaller : object {
    private static CustomerGatewayUnmarshaller _instance;
    public static CustomerGatewayUnmarshaller Instance { get; }
    private static CustomerGatewayUnmarshaller();
    public sealed virtual CustomerGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomerGateway Unmarshall(JsonUnmarshallerContext context);
    public static CustomerGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCustomerGatewayRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteCustomerGatewayResponseUnmarshaller _instance;
    public static DeleteCustomerGatewayResponseUnmarshaller Instance { get; }
    private static DeleteCustomerGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCustomerGatewayResponseUnmarshaller GetInstance();
    public static DeleteCustomerGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDhcpOptionsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteDhcpOptionsResponseUnmarshaller _instance;
    public static DeleteDhcpOptionsResponseUnmarshaller Instance { get; }
    private static DeleteDhcpOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDhcpOptionsResponseUnmarshaller GetInstance();
    public static DeleteDhcpOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFlowLogsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteFlowLogsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteFlowLogsResponseUnmarshaller _instance;
    public static DeleteFlowLogsResponseUnmarshaller Instance { get; }
    private static DeleteFlowLogsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFlowLogsResponseUnmarshaller GetInstance();
    public static DeleteFlowLogsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteInternetGatewayRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteInternetGatewayResponseUnmarshaller _instance;
    public static DeleteInternetGatewayResponseUnmarshaller Instance { get; }
    private static DeleteInternetGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteInternetGatewayResponseUnmarshaller GetInstance();
    public static DeleteInternetGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteKeyPairRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteKeyPairResponseUnmarshaller _instance;
    public static DeleteKeyPairResponseUnmarshaller Instance { get; }
    private static DeleteKeyPairResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteKeyPairResponseUnmarshaller GetInstance();
    public static DeleteKeyPairResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkAclEntryRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkAclEntryResponseUnmarshaller _instance;
    public static DeleteNetworkAclEntryResponseUnmarshaller Instance { get; }
    private static DeleteNetworkAclEntryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkAclEntryResponseUnmarshaller GetInstance();
    public static DeleteNetworkAclEntryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkAclRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkAclResponseUnmarshaller _instance;
    public static DeleteNetworkAclResponseUnmarshaller Instance { get; }
    private static DeleteNetworkAclResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkAclResponseUnmarshaller GetInstance();
    public static DeleteNetworkAclResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteNetworkInterfaceRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteNetworkInterfaceResponseUnmarshaller _instance;
    public static DeleteNetworkInterfaceResponseUnmarshaller Instance { get; }
    private static DeleteNetworkInterfaceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteNetworkInterfaceResponseUnmarshaller GetInstance();
    public static DeleteNetworkInterfaceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePlacementGroupRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeletePlacementGroupResponseUnmarshaller _instance;
    public static DeletePlacementGroupResponseUnmarshaller Instance { get; }
    private static DeletePlacementGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePlacementGroupResponseUnmarshaller GetInstance();
    public static DeletePlacementGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRouteRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteRouteResponseUnmarshaller _instance;
    public static DeleteRouteResponseUnmarshaller Instance { get; }
    private static DeleteRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRouteResponseUnmarshaller GetInstance();
    public static DeleteRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRouteTableRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteRouteTableResponseUnmarshaller _instance;
    public static DeleteRouteTableResponseUnmarshaller Instance { get; }
    private static DeleteRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRouteTableResponseUnmarshaller GetInstance();
    public static DeleteRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSecurityGroupRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteSecurityGroupResponseUnmarshaller _instance;
    public static DeleteSecurityGroupResponseUnmarshaller Instance { get; }
    private static DeleteSecurityGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSecurityGroupResponseUnmarshaller GetInstance();
    public static DeleteSecurityGroupResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSnapshotRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteSnapshotResponseUnmarshaller _instance;
    public static DeleteSnapshotResponseUnmarshaller Instance { get; }
    private static DeleteSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSnapshotResponseUnmarshaller GetInstance();
    public static DeleteSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSpotDatafeedSubscriptionRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteSpotDatafeedSubscriptionResponseUnmarshaller _instance;
    public static DeleteSpotDatafeedSubscriptionResponseUnmarshaller Instance { get; }
    private static DeleteSpotDatafeedSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSpotDatafeedSubscriptionResponseUnmarshaller GetInstance();
    public static DeleteSpotDatafeedSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSubnetRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteSubnetResponseUnmarshaller _instance;
    public static DeleteSubnetResponseUnmarshaller Instance { get; }
    private static DeleteSubnetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSubnetResponseUnmarshaller GetInstance();
    public static DeleteSubnetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTagsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteTagsResponseUnmarshaller _instance;
    public static DeleteTagsResponseUnmarshaller Instance { get; }
    private static DeleteTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTagsResponseUnmarshaller GetInstance();
    public static DeleteTagsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVolumeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVolumeResponseUnmarshaller _instance;
    public static DeleteVolumeResponseUnmarshaller Instance { get; }
    private static DeleteVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVolumeResponseUnmarshaller GetInstance();
    public static DeleteVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpcEndpointsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcEndpointsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpcEndpointsResponseUnmarshaller _instance;
    public static DeleteVpcEndpointsResponseUnmarshaller Instance { get; }
    private static DeleteVpcEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpcEndpointsResponseUnmarshaller GetInstance();
    public static DeleteVpcEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpcPeeringConnectionRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpcPeeringConnectionResponseUnmarshaller _instance;
    public static DeleteVpcPeeringConnectionResponseUnmarshaller Instance { get; }
    private static DeleteVpcPeeringConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpcPeeringConnectionResponseUnmarshaller GetInstance();
    public static DeleteVpcPeeringConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpcRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpcResponseUnmarshaller _instance;
    public static DeleteVpcResponseUnmarshaller Instance { get; }
    private static DeleteVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpcResponseUnmarshaller GetInstance();
    public static DeleteVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpnConnectionRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpnConnectionResponseUnmarshaller _instance;
    public static DeleteVpnConnectionResponseUnmarshaller Instance { get; }
    private static DeleteVpnConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpnConnectionResponseUnmarshaller GetInstance();
    public static DeleteVpnConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpnConnectionRouteRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpnConnectionRouteResponseUnmarshaller _instance;
    public static DeleteVpnConnectionRouteResponseUnmarshaller Instance { get; }
    private static DeleteVpnConnectionRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpnConnectionRouteResponseUnmarshaller GetInstance();
    public static DeleteVpnConnectionRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpnGatewayRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeleteVpnGatewayResponseUnmarshaller _instance;
    public static DeleteVpnGatewayResponseUnmarshaller Instance { get; }
    private static DeleteVpnGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpnGatewayResponseUnmarshaller GetInstance();
    public static DeleteVpnGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterImageRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DeregisterImageResponseUnmarshaller _instance;
    public static DeregisterImageResponseUnmarshaller Instance { get; }
    private static DeregisterImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterImageResponseUnmarshaller GetInstance();
    public static DeregisterImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAccountAttributesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeAccountAttributesResponseUnmarshaller _instance;
    public static DescribeAccountAttributesResponseUnmarshaller Instance { get; }
    private static DescribeAccountAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAccountAttributesResponseUnmarshaller GetInstance();
    public static DescribeAccountAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAddressesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeAddressesResponseUnmarshaller _instance;
    public static DescribeAddressesResponseUnmarshaller Instance { get; }
    private static DescribeAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAddressesResponseUnmarshaller GetInstance();
    public static DescribeAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAvailabilityZonesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeAvailabilityZonesResponseUnmarshaller _instance;
    public static DescribeAvailabilityZonesResponseUnmarshaller Instance { get; }
    private static DescribeAvailabilityZonesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAvailabilityZonesResponseUnmarshaller GetInstance();
    public static DescribeAvailabilityZonesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeBundleTasksRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeBundleTasksResponseUnmarshaller _instance;
    public static DescribeBundleTasksResponseUnmarshaller Instance { get; }
    private static DescribeBundleTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeBundleTasksResponseUnmarshaller GetInstance();
    public static DescribeBundleTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeClassicLinkInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeClassicLinkInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeClassicLinkInstancesResponseUnmarshaller _instance;
    public static DescribeClassicLinkInstancesResponseUnmarshaller Instance { get; }
    private static DescribeClassicLinkInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeClassicLinkInstancesResponseUnmarshaller GetInstance();
    public static DescribeClassicLinkInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeConversionTasksRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeConversionTasksResponseUnmarshaller _instance;
    public static DescribeConversionTasksResponseUnmarshaller Instance { get; }
    private static DescribeConversionTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeConversionTasksResponseUnmarshaller GetInstance();
    public static DescribeConversionTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCustomerGatewaysRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeCustomerGatewaysResponseUnmarshaller _instance;
    public static DescribeCustomerGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeCustomerGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCustomerGatewaysResponseUnmarshaller GetInstance();
    public static DescribeCustomerGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDhcpOptionsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeDhcpOptionsResponseUnmarshaller _instance;
    public static DescribeDhcpOptionsResponseUnmarshaller Instance { get; }
    private static DescribeDhcpOptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDhcpOptionsResponseUnmarshaller GetInstance();
    public static DescribeDhcpOptionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeExportTasksRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeExportTasksResponseUnmarshaller _instance;
    public static DescribeExportTasksResponseUnmarshaller Instance { get; }
    private static DescribeExportTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeExportTasksResponseUnmarshaller GetInstance();
    public static DescribeExportTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFlowLogsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeFlowLogsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeFlowLogsResponseUnmarshaller _instance;
    public static DescribeFlowLogsResponseUnmarshaller Instance { get; }
    private static DescribeFlowLogsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFlowLogsResponseUnmarshaller GetInstance();
    public static DescribeFlowLogsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeImageAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeImageAttributeResponseUnmarshaller _instance;
    public static DescribeImageAttributeResponseUnmarshaller Instance { get; }
    private static DescribeImageAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeImageAttributeResponseUnmarshaller GetInstance();
    public static DescribeImageAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeImagesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeImagesResponseUnmarshaller _instance;
    public static DescribeImagesResponseUnmarshaller Instance { get; }
    private static DescribeImagesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeImagesResponseUnmarshaller GetInstance();
    public static DescribeImagesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeImportImageTasksRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportImageTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeImportImageTasksResponseUnmarshaller _instance;
    public static DescribeImportImageTasksResponseUnmarshaller Instance { get; }
    private static DescribeImportImageTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeImportImageTasksResponseUnmarshaller GetInstance();
    public static DescribeImportImageTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeImportSnapshotTasksRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImportSnapshotTasksResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeImportSnapshotTasksResponseUnmarshaller _instance;
    public static DescribeImportSnapshotTasksResponseUnmarshaller Instance { get; }
    private static DescribeImportSnapshotTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeImportSnapshotTasksResponseUnmarshaller GetInstance();
    public static DescribeImportSnapshotTasksResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceAttributeResponseUnmarshaller _instance;
    public static DescribeInstanceAttributeResponseUnmarshaller Instance { get; }
    private static DescribeInstanceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceAttributeResponseUnmarshaller GetInstance();
    public static DescribeInstanceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstancesResponseUnmarshaller _instance;
    public static DescribeInstancesResponseUnmarshaller Instance { get; }
    private static DescribeInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstancesResponseUnmarshaller GetInstance();
    public static DescribeInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceStatusRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInstanceStatusResponseUnmarshaller _instance;
    public static DescribeInstanceStatusResponseUnmarshaller Instance { get; }
    private static DescribeInstanceStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceStatusResponseUnmarshaller GetInstance();
    public static DescribeInstanceStatusResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInternetGatewaysRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeInternetGatewaysResponseUnmarshaller _instance;
    public static DescribeInternetGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeInternetGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInternetGatewaysResponseUnmarshaller GetInstance();
    public static DescribeInternetGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeKeyPairsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeKeyPairsResponseUnmarshaller _instance;
    public static DescribeKeyPairsResponseUnmarshaller Instance { get; }
    private static DescribeKeyPairsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeKeyPairsResponseUnmarshaller GetInstance();
    public static DescribeKeyPairsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMovingAddressesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeMovingAddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeMovingAddressesResponseUnmarshaller _instance;
    public static DescribeMovingAddressesResponseUnmarshaller Instance { get; }
    private static DescribeMovingAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMovingAddressesResponseUnmarshaller GetInstance();
    public static DescribeMovingAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkAclsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkAclsResponseUnmarshaller _instance;
    public static DescribeNetworkAclsResponseUnmarshaller Instance { get; }
    private static DescribeNetworkAclsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkAclsResponseUnmarshaller GetInstance();
    public static DescribeNetworkAclsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkInterfaceAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkInterfaceAttributeResponseUnmarshaller _instance;
    public static DescribeNetworkInterfaceAttributeResponseUnmarshaller Instance { get; }
    private static DescribeNetworkInterfaceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkInterfaceAttributeResponseUnmarshaller GetInstance();
    public static DescribeNetworkInterfaceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeNetworkInterfacesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeNetworkInterfacesResponseUnmarshaller _instance;
    public static DescribeNetworkInterfacesResponseUnmarshaller Instance { get; }
    private static DescribeNetworkInterfacesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeNetworkInterfacesResponseUnmarshaller GetInstance();
    public static DescribeNetworkInterfacesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePlacementGroupsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribePlacementGroupsResponseUnmarshaller _instance;
    public static DescribePlacementGroupsResponseUnmarshaller Instance { get; }
    private static DescribePlacementGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePlacementGroupsResponseUnmarshaller GetInstance();
    public static DescribePlacementGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePrefixListsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribePrefixListsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribePrefixListsResponseUnmarshaller _instance;
    public static DescribePrefixListsResponseUnmarshaller Instance { get; }
    private static DescribePrefixListsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePrefixListsResponseUnmarshaller GetInstance();
    public static DescribePrefixListsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRegionsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeRegionsResponseUnmarshaller _instance;
    public static DescribeRegionsResponseUnmarshaller Instance { get; }
    private static DescribeRegionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRegionsResponseUnmarshaller GetInstance();
    public static DescribeRegionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReservedInstancesListingsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeReservedInstancesListingsResponseUnmarshaller _instance;
    public static DescribeReservedInstancesListingsResponseUnmarshaller Instance { get; }
    private static DescribeReservedInstancesListingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReservedInstancesListingsResponseUnmarshaller GetInstance();
    public static DescribeReservedInstancesListingsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReservedInstancesModificationsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeReservedInstancesModificationsResponseUnmarshaller _instance;
    public static DescribeReservedInstancesModificationsResponseUnmarshaller Instance { get; }
    private static DescribeReservedInstancesModificationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReservedInstancesModificationsResponseUnmarshaller GetInstance();
    public static DescribeReservedInstancesModificationsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReservedInstancesOfferingsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeReservedInstancesOfferingsResponseUnmarshaller _instance;
    public static DescribeReservedInstancesOfferingsResponseUnmarshaller Instance { get; }
    private static DescribeReservedInstancesOfferingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReservedInstancesOfferingsResponseUnmarshaller GetInstance();
    public static DescribeReservedInstancesOfferingsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReservedInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeReservedInstancesResponseUnmarshaller _instance;
    public static DescribeReservedInstancesResponseUnmarshaller Instance { get; }
    private static DescribeReservedInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReservedInstancesResponseUnmarshaller GetInstance();
    public static DescribeReservedInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRouteTablesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeRouteTablesResponseUnmarshaller _instance;
    public static DescribeRouteTablesResponseUnmarshaller Instance { get; }
    private static DescribeRouteTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRouteTablesResponseUnmarshaller GetInstance();
    public static DescribeRouteTablesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSecurityGroupsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSecurityGroupsResponseUnmarshaller _instance;
    public static DescribeSecurityGroupsResponseUnmarshaller Instance { get; }
    private static DescribeSecurityGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSecurityGroupsResponseUnmarshaller GetInstance();
    public static DescribeSecurityGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSnapshotAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSnapshotAttributeResponseUnmarshaller _instance;
    public static DescribeSnapshotAttributeResponseUnmarshaller Instance { get; }
    private static DescribeSnapshotAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSnapshotAttributeResponseUnmarshaller GetInstance();
    public static DescribeSnapshotAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSnapshotsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSnapshotsResponseUnmarshaller _instance;
    public static DescribeSnapshotsResponseUnmarshaller Instance { get; }
    private static DescribeSnapshotsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSnapshotsResponseUnmarshaller GetInstance();
    public static DescribeSnapshotsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotDatafeedSubscriptionRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotDatafeedSubscriptionResponseUnmarshaller _instance;
    public static DescribeSpotDatafeedSubscriptionResponseUnmarshaller Instance { get; }
    private static DescribeSpotDatafeedSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotDatafeedSubscriptionResponseUnmarshaller GetInstance();
    public static DescribeSpotDatafeedSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotFleetInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotFleetInstancesResponseUnmarshaller _instance;
    public static DescribeSpotFleetInstancesResponseUnmarshaller Instance { get; }
    private static DescribeSpotFleetInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotFleetInstancesResponseUnmarshaller GetInstance();
    public static DescribeSpotFleetInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotFleetRequestHistoryRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestHistoryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotFleetRequestHistoryResponseUnmarshaller _instance;
    public static DescribeSpotFleetRequestHistoryResponseUnmarshaller Instance { get; }
    private static DescribeSpotFleetRequestHistoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotFleetRequestHistoryResponseUnmarshaller GetInstance();
    public static DescribeSpotFleetRequestHistoryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotFleetRequestsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotFleetRequestsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotFleetRequestsResponseUnmarshaller _instance;
    public static DescribeSpotFleetRequestsResponseUnmarshaller Instance { get; }
    private static DescribeSpotFleetRequestsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotFleetRequestsResponseUnmarshaller GetInstance();
    public static DescribeSpotFleetRequestsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotInstanceRequestsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotInstanceRequestsResponseUnmarshaller _instance;
    public static DescribeSpotInstanceRequestsResponseUnmarshaller Instance { get; }
    private static DescribeSpotInstanceRequestsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotInstanceRequestsResponseUnmarshaller GetInstance();
    public static DescribeSpotInstanceRequestsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSpotPriceHistoryRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSpotPriceHistoryResponseUnmarshaller _instance;
    public static DescribeSpotPriceHistoryResponseUnmarshaller Instance { get; }
    private static DescribeSpotPriceHistoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSpotPriceHistoryResponseUnmarshaller GetInstance();
    public static DescribeSpotPriceHistoryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSubnetsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeSubnetsResponseUnmarshaller _instance;
    public static DescribeSubnetsResponseUnmarshaller Instance { get; }
    private static DescribeSubnetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSubnetsResponseUnmarshaller GetInstance();
    public static DescribeSubnetsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTagsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeTagsResponseUnmarshaller _instance;
    public static DescribeTagsResponseUnmarshaller Instance { get; }
    private static DescribeTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTagsResponseUnmarshaller GetInstance();
    public static DescribeTagsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVolumeAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVolumeAttributeResponseUnmarshaller _instance;
    public static DescribeVolumeAttributeResponseUnmarshaller Instance { get; }
    private static DescribeVolumeAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVolumeAttributeResponseUnmarshaller GetInstance();
    public static DescribeVolumeAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVolumesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVolumesResponseUnmarshaller _instance;
    public static DescribeVolumesResponseUnmarshaller Instance { get; }
    private static DescribeVolumesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVolumesResponseUnmarshaller GetInstance();
    public static DescribeVolumesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVolumeStatusRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVolumeStatusResponseUnmarshaller _instance;
    public static DescribeVolumeStatusResponseUnmarshaller Instance { get; }
    private static DescribeVolumeStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVolumeStatusResponseUnmarshaller GetInstance();
    public static DescribeVolumeStatusResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcAttributeResponseUnmarshaller _instance;
    public static DescribeVpcAttributeResponseUnmarshaller Instance { get; }
    private static DescribeVpcAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcAttributeResponseUnmarshaller GetInstance();
    public static DescribeVpcAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcClassicLinkRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcClassicLinkResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcClassicLinkResponseUnmarshaller _instance;
    public static DescribeVpcClassicLinkResponseUnmarshaller Instance { get; }
    private static DescribeVpcClassicLinkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcClassicLinkResponseUnmarshaller GetInstance();
    public static DescribeVpcClassicLinkResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcEndpointServicesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointServicesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcEndpointServicesResponseUnmarshaller _instance;
    public static DescribeVpcEndpointServicesResponseUnmarshaller Instance { get; }
    private static DescribeVpcEndpointServicesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcEndpointServicesResponseUnmarshaller GetInstance();
    public static DescribeVpcEndpointServicesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcEndpointsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcEndpointsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcEndpointsResponseUnmarshaller _instance;
    public static DescribeVpcEndpointsResponseUnmarshaller Instance { get; }
    private static DescribeVpcEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcEndpointsResponseUnmarshaller GetInstance();
    public static DescribeVpcEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcPeeringConnectionsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcPeeringConnectionsResponseUnmarshaller _instance;
    public static DescribeVpcPeeringConnectionsResponseUnmarshaller Instance { get; }
    private static DescribeVpcPeeringConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcPeeringConnectionsResponseUnmarshaller GetInstance();
    public static DescribeVpcPeeringConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpcsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpcsResponseUnmarshaller _instance;
    public static DescribeVpcsResponseUnmarshaller Instance { get; }
    private static DescribeVpcsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpcsResponseUnmarshaller GetInstance();
    public static DescribeVpcsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpnConnectionsRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpnConnectionsResponseUnmarshaller _instance;
    public static DescribeVpnConnectionsResponseUnmarshaller Instance { get; }
    private static DescribeVpnConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpnConnectionsResponseUnmarshaller GetInstance();
    public static DescribeVpnConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVpnGatewaysRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DescribeVpnGatewaysResponseUnmarshaller _instance;
    public static DescribeVpnGatewaysResponseUnmarshaller Instance { get; }
    private static DescribeVpnGatewaysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVpnGatewaysResponseUnmarshaller GetInstance();
    public static DescribeVpnGatewaysResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachClassicLinkVpcRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachClassicLinkVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachClassicLinkVpcResponseUnmarshaller _instance;
    public static DetachClassicLinkVpcResponseUnmarshaller Instance { get; }
    private static DetachClassicLinkVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachClassicLinkVpcResponseUnmarshaller GetInstance();
    public static DetachClassicLinkVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachInternetGatewayRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachInternetGatewayResponseUnmarshaller _instance;
    public static DetachInternetGatewayResponseUnmarshaller Instance { get; }
    private static DetachInternetGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachInternetGatewayResponseUnmarshaller GetInstance();
    public static DetachInternetGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachNetworkInterfaceRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachNetworkInterfaceResponseUnmarshaller _instance;
    public static DetachNetworkInterfaceResponseUnmarshaller Instance { get; }
    private static DetachNetworkInterfaceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachNetworkInterfaceResponseUnmarshaller GetInstance();
    public static DetachNetworkInterfaceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachVolumeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachVolumeResponseUnmarshaller _instance;
    public static DetachVolumeResponseUnmarshaller Instance { get; }
    private static DetachVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachVolumeResponseUnmarshaller GetInstance();
    public static DetachVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachVpnGatewayRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DetachVpnGatewayResponseUnmarshaller _instance;
    public static DetachVpnGatewayResponseUnmarshaller Instance { get; }
    private static DetachVpnGatewayResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachVpnGatewayResponseUnmarshaller GetInstance();
    public static DetachVpnGatewayResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DhcpConfigurationUnmarshaller : object {
    private static DhcpConfigurationUnmarshaller _instance;
    public static DhcpConfigurationUnmarshaller Instance { get; }
    private static DhcpConfigurationUnmarshaller();
    public sealed virtual DhcpConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DhcpConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static DhcpConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DhcpOptionsUnmarshaller : object {
    private static DhcpOptionsUnmarshaller _instance;
    public static DhcpOptionsUnmarshaller Instance { get; }
    private static DhcpOptionsUnmarshaller();
    public sealed virtual DhcpOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DhcpOptions Unmarshall(JsonUnmarshallerContext context);
    public static DhcpOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableVgwRoutePropagationRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableVgwRoutePropagationResponseUnmarshaller _instance;
    public static DisableVgwRoutePropagationResponseUnmarshaller Instance { get; }
    private static DisableVgwRoutePropagationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableVgwRoutePropagationResponseUnmarshaller GetInstance();
    public static DisableVgwRoutePropagationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableVpcClassicLinkRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisableVpcClassicLinkResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisableVpcClassicLinkResponseUnmarshaller _instance;
    public static DisableVpcClassicLinkResponseUnmarshaller Instance { get; }
    private static DisableVpcClassicLinkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableVpcClassicLinkResponseUnmarshaller GetInstance();
    public static DisableVpcClassicLinkResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateAddressRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateAddressResponseUnmarshaller _instance;
    public static DisassociateAddressResponseUnmarshaller Instance { get; }
    private static DisassociateAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateAddressResponseUnmarshaller GetInstance();
    public static DisassociateAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateRouteTableRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static DisassociateRouteTableResponseUnmarshaller _instance;
    public static DisassociateRouteTableResponseUnmarshaller Instance { get; }
    private static DisassociateRouteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateRouteTableResponseUnmarshaller GetInstance();
    public static DisassociateRouteTableResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageDescriptionUnmarshaller : object {
    private static DiskImageDescriptionUnmarshaller _instance;
    public static DiskImageDescriptionUnmarshaller Instance { get; }
    private static DiskImageDescriptionUnmarshaller();
    public sealed virtual DiskImageDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DiskImageDescription Unmarshall(JsonUnmarshallerContext context);
    public static DiskImageDescriptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageVolumeDescriptionUnmarshaller : object {
    private static DiskImageVolumeDescriptionUnmarshaller _instance;
    public static DiskImageVolumeDescriptionUnmarshaller Instance { get; }
    private static DiskImageVolumeDescriptionUnmarshaller();
    public sealed virtual DiskImageVolumeDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DiskImageVolumeDescription Unmarshall(JsonUnmarshallerContext context);
    public static DiskImageVolumeDescriptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EbsBlockDeviceUnmarshaller : object {
    private static EbsBlockDeviceUnmarshaller _instance;
    public static EbsBlockDeviceUnmarshaller Instance { get; }
    private static EbsBlockDeviceUnmarshaller();
    public sealed virtual EbsBlockDevice Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EbsBlockDevice Unmarshall(JsonUnmarshallerContext context);
    public static EbsBlockDeviceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller : object {
    private static EbsInstanceBlockDeviceUnmarshaller _instance;
    public static EbsInstanceBlockDeviceUnmarshaller Instance { get; }
    private static EbsInstanceBlockDeviceUnmarshaller();
    public sealed virtual EbsInstanceBlockDevice Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EbsInstanceBlockDevice Unmarshall(JsonUnmarshallerContext context);
    public static EbsInstanceBlockDeviceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableVgwRoutePropagationRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableVgwRoutePropagationResponseUnmarshaller _instance;
    public static EnableVgwRoutePropagationResponseUnmarshaller Instance { get; }
    private static EnableVgwRoutePropagationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableVgwRoutePropagationResponseUnmarshaller GetInstance();
    public static EnableVgwRoutePropagationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIORequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableVolumeIORequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIOResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableVolumeIOResponseUnmarshaller _instance;
    public static EnableVolumeIOResponseUnmarshaller Instance { get; }
    private static EnableVolumeIOResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableVolumeIOResponseUnmarshaller GetInstance();
    public static EnableVolumeIOResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableVpcClassicLinkRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EnableVpcClassicLinkResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static EnableVpcClassicLinkResponseUnmarshaller _instance;
    public static EnableVpcClassicLinkResponseUnmarshaller Instance { get; }
    private static EnableVpcClassicLinkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableVpcClassicLinkResponseUnmarshaller GetInstance();
    public static EnableVpcClassicLinkResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.EventInformationUnmarshaller : object {
    private static EventInformationUnmarshaller _instance;
    public static EventInformationUnmarshaller Instance { get; }
    private static EventInformationUnmarshaller();
    public sealed virtual EventInformation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventInformation Unmarshall(JsonUnmarshallerContext context);
    public static EventInformationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller : object {
    private static ExportTaskUnmarshaller _instance;
    public static ExportTaskUnmarshaller Instance { get; }
    private static ExportTaskUnmarshaller();
    public sealed virtual ExportTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportTask Unmarshall(JsonUnmarshallerContext context);
    public static ExportTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ExportToS3TaskUnmarshaller : object {
    private static ExportToS3TaskUnmarshaller _instance;
    public static ExportToS3TaskUnmarshaller Instance { get; }
    private static ExportToS3TaskUnmarshaller();
    public sealed virtual ExportToS3Task Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportToS3Task Unmarshall(JsonUnmarshallerContext context);
    public static ExportToS3TaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.FlowLogUnmarshaller : object {
    private static FlowLogUnmarshaller _instance;
    public static FlowLogUnmarshaller Instance { get; }
    private static FlowLogUnmarshaller();
    public sealed virtual FlowLog Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FlowLog Unmarshall(JsonUnmarshallerContext context);
    public static FlowLogUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetConsoleOutputRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetConsoleOutputResponseUnmarshaller _instance;
    public static GetConsoleOutputResponseUnmarshaller Instance { get; }
    private static GetConsoleOutputResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetConsoleOutputResponseUnmarshaller GetInstance();
    public static GetConsoleOutputResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPasswordDataRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static GetPasswordDataResponseUnmarshaller _instance;
    public static GetPasswordDataResponseUnmarshaller Instance { get; }
    private static GetPasswordDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPasswordDataResponseUnmarshaller GetInstance();
    public static GetPasswordDataResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.GroupIdentifierUnmarshaller : object {
    private static GroupIdentifierUnmarshaller _instance;
    public static GroupIdentifierUnmarshaller Instance { get; }
    private static GroupIdentifierUnmarshaller();
    public sealed virtual GroupIdentifier Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GroupIdentifier Unmarshall(JsonUnmarshallerContext context);
    public static GroupIdentifierUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.HistoryRecordUnmarshaller : object {
    private static HistoryRecordUnmarshaller _instance;
    public static HistoryRecordUnmarshaller Instance { get; }
    private static HistoryRecordUnmarshaller();
    public sealed virtual HistoryRecord Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HistoryRecord Unmarshall(JsonUnmarshallerContext context);
    public static HistoryRecordUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileSpecificationUnmarshaller : object {
    private static IamInstanceProfileSpecificationUnmarshaller _instance;
    public static IamInstanceProfileSpecificationUnmarshaller Instance { get; }
    private static IamInstanceProfileSpecificationUnmarshaller();
    public sealed virtual IamInstanceProfileSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IamInstanceProfileSpecification Unmarshall(JsonUnmarshallerContext context);
    public static IamInstanceProfileSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileUnmarshaller : object {
    private static IamInstanceProfileUnmarshaller _instance;
    public static IamInstanceProfileUnmarshaller Instance { get; }
    private static IamInstanceProfileUnmarshaller();
    public sealed virtual IamInstanceProfile Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IamInstanceProfile Unmarshall(JsonUnmarshallerContext context);
    public static IamInstanceProfileUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IcmpTypeCodeUnmarshaller : object {
    private static IcmpTypeCodeUnmarshaller _instance;
    public static IcmpTypeCodeUnmarshaller Instance { get; }
    private static IcmpTypeCodeUnmarshaller();
    public sealed virtual IcmpTypeCode Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IcmpTypeCode Unmarshall(JsonUnmarshallerContext context);
    public static IcmpTypeCodeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImageAttributeUnmarshaller : object {
    private static ImageAttributeUnmarshaller _instance;
    public static ImageAttributeUnmarshaller Instance { get; }
    private static ImageAttributeUnmarshaller();
    public sealed virtual ImageAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImageAttribute Unmarshall(JsonUnmarshallerContext context);
    public static ImageAttributeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImageUnmarshaller : object {
    private static ImageUnmarshaller _instance;
    public static ImageUnmarshaller Instance { get; }
    private static ImageUnmarshaller();
    public sealed virtual Image Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Image Unmarshall(JsonUnmarshallerContext context);
    public static ImageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportImageRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportImageResponseUnmarshaller _instance;
    public static ImportImageResponseUnmarshaller Instance { get; }
    private static ImportImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportImageResponseUnmarshaller GetInstance();
    public static ImportImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportImageTaskUnmarshaller : object {
    private static ImportImageTaskUnmarshaller _instance;
    public static ImportImageTaskUnmarshaller Instance { get; }
    private static ImportImageTaskUnmarshaller();
    public sealed virtual ImportImageTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportImageTask Unmarshall(JsonUnmarshallerContext context);
    public static ImportImageTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportInstanceRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportInstanceResponseUnmarshaller _instance;
    public static ImportInstanceResponseUnmarshaller Instance { get; }
    private static ImportInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportInstanceResponseUnmarshaller GetInstance();
    public static ImportInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceTaskDetailsUnmarshaller : object {
    private static ImportInstanceTaskDetailsUnmarshaller _instance;
    public static ImportInstanceTaskDetailsUnmarshaller Instance { get; }
    private static ImportInstanceTaskDetailsUnmarshaller();
    public sealed virtual ImportInstanceTaskDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportInstanceTaskDetails Unmarshall(JsonUnmarshallerContext context);
    public static ImportInstanceTaskDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceVolumeDetailItemUnmarshaller : object {
    private static ImportInstanceVolumeDetailItemUnmarshaller _instance;
    public static ImportInstanceVolumeDetailItemUnmarshaller Instance { get; }
    private static ImportInstanceVolumeDetailItemUnmarshaller();
    public sealed virtual ImportInstanceVolumeDetailItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportInstanceVolumeDetailItem Unmarshall(JsonUnmarshallerContext context);
    public static ImportInstanceVolumeDetailItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportKeyPairRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportKeyPairResponseUnmarshaller _instance;
    public static ImportKeyPairResponseUnmarshaller Instance { get; }
    private static ImportKeyPairResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportKeyPairResponseUnmarshaller GetInstance();
    public static ImportKeyPairResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportSnapshotRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportSnapshotResponseUnmarshaller _instance;
    public static ImportSnapshotResponseUnmarshaller Instance { get; }
    private static ImportSnapshotResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportSnapshotResponseUnmarshaller GetInstance();
    public static ImportSnapshotResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportSnapshotTaskUnmarshaller : object {
    private static ImportSnapshotTaskUnmarshaller _instance;
    public static ImportSnapshotTaskUnmarshaller Instance { get; }
    private static ImportSnapshotTaskUnmarshaller();
    public sealed virtual ImportSnapshotTask Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportSnapshotTask Unmarshall(JsonUnmarshallerContext context);
    public static ImportSnapshotTaskUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportVolumeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ImportVolumeResponseUnmarshaller _instance;
    public static ImportVolumeResponseUnmarshaller Instance { get; }
    private static ImportVolumeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportVolumeResponseUnmarshaller GetInstance();
    public static ImportVolumeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeTaskDetailsUnmarshaller : object {
    private static ImportVolumeTaskDetailsUnmarshaller _instance;
    public static ImportVolumeTaskDetailsUnmarshaller Instance { get; }
    private static ImportVolumeTaskDetailsUnmarshaller();
    public sealed virtual ImportVolumeTaskDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportVolumeTaskDetails Unmarshall(JsonUnmarshallerContext context);
    public static ImportVolumeTaskDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceAttributeUnmarshaller : object {
    private static InstanceAttributeUnmarshaller _instance;
    public static InstanceAttributeUnmarshaller Instance { get; }
    private static InstanceAttributeUnmarshaller();
    public sealed virtual InstanceAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceAttribute Unmarshall(JsonUnmarshallerContext context);
    public static InstanceAttributeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller : object {
    private static InstanceBlockDeviceMappingUnmarshaller _instance;
    public static InstanceBlockDeviceMappingUnmarshaller Instance { get; }
    private static InstanceBlockDeviceMappingUnmarshaller();
    public sealed virtual InstanceBlockDeviceMapping Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceBlockDeviceMapping Unmarshall(JsonUnmarshallerContext context);
    public static InstanceBlockDeviceMappingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCountUnmarshaller : object {
    private static InstanceCountUnmarshaller _instance;
    public static InstanceCountUnmarshaller Instance { get; }
    private static InstanceCountUnmarshaller();
    public sealed virtual InstanceCount Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceCount Unmarshall(JsonUnmarshallerContext context);
    public static InstanceCountUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceExportDetailsUnmarshaller : object {
    private static InstanceExportDetailsUnmarshaller _instance;
    public static InstanceExportDetailsUnmarshaller Instance { get; }
    private static InstanceExportDetailsUnmarshaller();
    public sealed virtual InstanceExportDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceExportDetails Unmarshall(JsonUnmarshallerContext context);
    public static InstanceExportDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceMonitoringUnmarshaller : object {
    private static InstanceMonitoringUnmarshaller _instance;
    public static InstanceMonitoringUnmarshaller Instance { get; }
    private static InstanceMonitoringUnmarshaller();
    public sealed virtual InstanceMonitoring Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceMonitoring Unmarshall(JsonUnmarshallerContext context);
    public static InstanceMonitoringUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAssociationUnmarshaller : object {
    private static InstanceNetworkInterfaceAssociationUnmarshaller _instance;
    public static InstanceNetworkInterfaceAssociationUnmarshaller Instance { get; }
    private static InstanceNetworkInterfaceAssociationUnmarshaller();
    public sealed virtual InstanceNetworkInterfaceAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceNetworkInterfaceAssociation Unmarshall(JsonUnmarshallerContext context);
    public static InstanceNetworkInterfaceAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAttachmentUnmarshaller : object {
    private static InstanceNetworkInterfaceAttachmentUnmarshaller _instance;
    public static InstanceNetworkInterfaceAttachmentUnmarshaller Instance { get; }
    private static InstanceNetworkInterfaceAttachmentUnmarshaller();
    public sealed virtual InstanceNetworkInterfaceAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceNetworkInterfaceAttachment Unmarshall(JsonUnmarshallerContext context);
    public static InstanceNetworkInterfaceAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceSpecificationUnmarshaller : object {
    private static InstanceNetworkInterfaceSpecificationUnmarshaller _instance;
    public static InstanceNetworkInterfaceSpecificationUnmarshaller Instance { get; }
    private static InstanceNetworkInterfaceSpecificationUnmarshaller();
    public sealed virtual InstanceNetworkInterfaceSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceNetworkInterfaceSpecification Unmarshall(JsonUnmarshallerContext context);
    public static InstanceNetworkInterfaceSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceUnmarshaller : object {
    private static InstanceNetworkInterfaceUnmarshaller _instance;
    public static InstanceNetworkInterfaceUnmarshaller Instance { get; }
    private static InstanceNetworkInterfaceUnmarshaller();
    public sealed virtual InstanceNetworkInterface Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceNetworkInterface Unmarshall(JsonUnmarshallerContext context);
    public static InstanceNetworkInterfaceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstancePrivateIpAddressUnmarshaller : object {
    private static InstancePrivateIpAddressUnmarshaller _instance;
    public static InstancePrivateIpAddressUnmarshaller Instance { get; }
    private static InstancePrivateIpAddressUnmarshaller();
    public sealed virtual InstancePrivateIpAddress Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstancePrivateIpAddress Unmarshall(JsonUnmarshallerContext context);
    public static InstancePrivateIpAddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateChangeUnmarshaller : object {
    private static InstanceStateChangeUnmarshaller _instance;
    public static InstanceStateChangeUnmarshaller Instance { get; }
    private static InstanceStateChangeUnmarshaller();
    public sealed virtual InstanceStateChange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStateChange Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStateChangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller : object {
    private static InstanceStateUnmarshaller _instance;
    public static InstanceStateUnmarshaller Instance { get; }
    private static InstanceStateUnmarshaller();
    public sealed virtual InstanceState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceState Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStateUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusDetailsUnmarshaller : object {
    private static InstanceStatusDetailsUnmarshaller _instance;
    public static InstanceStatusDetailsUnmarshaller Instance { get; }
    private static InstanceStatusDetailsUnmarshaller();
    public sealed virtual InstanceStatusDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStatusDetails Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStatusDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusEventUnmarshaller : object {
    private static InstanceStatusEventUnmarshaller _instance;
    public static InstanceStatusEventUnmarshaller Instance { get; }
    private static InstanceStatusEventUnmarshaller();
    public sealed virtual InstanceStatusEvent Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStatusEvent Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStatusEventUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusSummaryUnmarshaller : object {
    private static InstanceStatusSummaryUnmarshaller _instance;
    public static InstanceStatusSummaryUnmarshaller Instance { get; }
    private static InstanceStatusSummaryUnmarshaller();
    public sealed virtual InstanceStatusSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStatusSummary Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStatusSummaryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusUnmarshaller : object {
    private static InstanceStatusUnmarshaller _instance;
    public static InstanceStatusUnmarshaller Instance { get; }
    private static InstanceStatusUnmarshaller();
    public sealed virtual InstanceStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceStatus Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InstanceUnmarshaller : object {
    private static InstanceUnmarshaller _instance;
    public static InstanceUnmarshaller Instance { get; }
    private static InstanceUnmarshaller();
    public sealed virtual Instance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Instance Unmarshall(JsonUnmarshallerContext context);
    public static InstanceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayAttachmentUnmarshaller : object {
    private static InternetGatewayAttachmentUnmarshaller _instance;
    public static InternetGatewayAttachmentUnmarshaller Instance { get; }
    private static InternetGatewayAttachmentUnmarshaller();
    public sealed virtual InternetGatewayAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InternetGatewayAttachment Unmarshall(JsonUnmarshallerContext context);
    public static InternetGatewayAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayUnmarshaller : object {
    private static InternetGatewayUnmarshaller _instance;
    public static InternetGatewayUnmarshaller Instance { get; }
    private static InternetGatewayUnmarshaller();
    public sealed virtual InternetGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InternetGateway Unmarshall(JsonUnmarshallerContext context);
    public static InternetGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.IpPermissionUnmarshaller : object {
    private static IpPermissionUnmarshaller _instance;
    public static IpPermissionUnmarshaller Instance { get; }
    private static IpPermissionUnmarshaller();
    public sealed virtual IpPermission Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IpPermission Unmarshall(JsonUnmarshallerContext context);
    public static IpPermissionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairInfoUnmarshaller : object {
    private static KeyPairInfoUnmarshaller _instance;
    public static KeyPairInfoUnmarshaller Instance { get; }
    private static KeyPairInfoUnmarshaller();
    public sealed virtual KeyPairInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyPairInfo Unmarshall(JsonUnmarshallerContext context);
    public static KeyPairInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairUnmarshaller : object {
    private static KeyPairUnmarshaller _instance;
    public static KeyPairUnmarshaller Instance { get; }
    private static KeyPairUnmarshaller();
    public sealed virtual KeyPair Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyPair Unmarshall(JsonUnmarshallerContext context);
    public static KeyPairUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchPermissionUnmarshaller : object {
    private static LaunchPermissionUnmarshaller _instance;
    public static LaunchPermissionUnmarshaller Instance { get; }
    private static LaunchPermissionUnmarshaller();
    public sealed virtual LaunchPermission Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchPermission Unmarshall(JsonUnmarshallerContext context);
    public static LaunchPermissionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.LaunchSpecificationUnmarshaller : object {
    private static LaunchSpecificationUnmarshaller _instance;
    public static LaunchSpecificationUnmarshaller Instance { get; }
    private static LaunchSpecificationUnmarshaller();
    public sealed virtual LaunchSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LaunchSpecification Unmarshall(JsonUnmarshallerContext context);
    public static LaunchSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyImageAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyImageAttributeResponseUnmarshaller _instance;
    public static ModifyImageAttributeResponseUnmarshaller Instance { get; }
    private static ModifyImageAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyImageAttributeResponseUnmarshaller GetInstance();
    public static ModifyImageAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstanceAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyInstanceAttributeResponseUnmarshaller _instance;
    public static ModifyInstanceAttributeResponseUnmarshaller Instance { get; }
    private static ModifyInstanceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstanceAttributeResponseUnmarshaller GetInstance();
    public static ModifyInstanceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyNetworkInterfaceAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyNetworkInterfaceAttributeResponseUnmarshaller _instance;
    public static ModifyNetworkInterfaceAttributeResponseUnmarshaller Instance { get; }
    private static ModifyNetworkInterfaceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyNetworkInterfaceAttributeResponseUnmarshaller GetInstance();
    public static ModifyNetworkInterfaceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyReservedInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyReservedInstancesResponseUnmarshaller _instance;
    public static ModifyReservedInstancesResponseUnmarshaller Instance { get; }
    private static ModifyReservedInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyReservedInstancesResponseUnmarshaller GetInstance();
    public static ModifyReservedInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifySnapshotAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifySnapshotAttributeResponseUnmarshaller _instance;
    public static ModifySnapshotAttributeResponseUnmarshaller Instance { get; }
    private static ModifySnapshotAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifySnapshotAttributeResponseUnmarshaller GetInstance();
    public static ModifySnapshotAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifySubnetAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifySubnetAttributeResponseUnmarshaller _instance;
    public static ModifySubnetAttributeResponseUnmarshaller Instance { get; }
    private static ModifySubnetAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifySubnetAttributeResponseUnmarshaller GetInstance();
    public static ModifySubnetAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVolumeAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVolumeAttributeResponseUnmarshaller _instance;
    public static ModifyVolumeAttributeResponseUnmarshaller Instance { get; }
    private static ModifyVolumeAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVolumeAttributeResponseUnmarshaller GetInstance();
    public static ModifyVolumeAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpcAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpcAttributeResponseUnmarshaller _instance;
    public static ModifyVpcAttributeResponseUnmarshaller Instance { get; }
    private static ModifyVpcAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpcAttributeResponseUnmarshaller GetInstance();
    public static ModifyVpcAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyVpcEndpointRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcEndpointResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ModifyVpcEndpointResponseUnmarshaller _instance;
    public static ModifyVpcEndpointResponseUnmarshaller Instance { get; }
    private static ModifyVpcEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyVpcEndpointResponseUnmarshaller GetInstance();
    public static ModifyVpcEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MonitoringUnmarshaller : object {
    private static MonitoringUnmarshaller _instance;
    public static MonitoringUnmarshaller Instance { get; }
    private static MonitoringUnmarshaller();
    public sealed virtual Monitoring Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Monitoring Unmarshall(JsonUnmarshallerContext context);
    public static MonitoringUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MonitorInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static MonitorInstancesResponseUnmarshaller _instance;
    public static MonitorInstancesResponseUnmarshaller Instance { get; }
    private static MonitorInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MonitorInstancesResponseUnmarshaller GetInstance();
    public static MonitorInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MoveAddressToVpcRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MoveAddressToVpcResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static MoveAddressToVpcResponseUnmarshaller _instance;
    public static MoveAddressToVpcResponseUnmarshaller Instance { get; }
    private static MoveAddressToVpcResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MoveAddressToVpcResponseUnmarshaller GetInstance();
    public static MoveAddressToVpcResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.MovingAddressStatusUnmarshaller : object {
    private static MovingAddressStatusUnmarshaller _instance;
    public static MovingAddressStatusUnmarshaller Instance { get; }
    private static MovingAddressStatusUnmarshaller();
    public sealed virtual MovingAddressStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MovingAddressStatus Unmarshall(JsonUnmarshallerContext context);
    public static MovingAddressStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclAssociationUnmarshaller : object {
    private static NetworkAclAssociationUnmarshaller _instance;
    public static NetworkAclAssociationUnmarshaller Instance { get; }
    private static NetworkAclAssociationUnmarshaller();
    public sealed virtual NetworkAclAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkAclAssociation Unmarshall(JsonUnmarshallerContext context);
    public static NetworkAclAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclEntryUnmarshaller : object {
    private static NetworkAclEntryUnmarshaller _instance;
    public static NetworkAclEntryUnmarshaller Instance { get; }
    private static NetworkAclEntryUnmarshaller();
    public sealed virtual NetworkAclEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkAclEntry Unmarshall(JsonUnmarshallerContext context);
    public static NetworkAclEntryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclUnmarshaller : object {
    private static NetworkAclUnmarshaller _instance;
    public static NetworkAclUnmarshaller Instance { get; }
    private static NetworkAclUnmarshaller();
    public sealed virtual NetworkAcl Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkAcl Unmarshall(JsonUnmarshallerContext context);
    public static NetworkAclUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAssociationUnmarshaller : object {
    private static NetworkInterfaceAssociationUnmarshaller _instance;
    public static NetworkInterfaceAssociationUnmarshaller Instance { get; }
    private static NetworkInterfaceAssociationUnmarshaller();
    public sealed virtual NetworkInterfaceAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterfaceAssociation Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfaceAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAttachmentUnmarshaller : object {
    private static NetworkInterfaceAttachmentUnmarshaller _instance;
    public static NetworkInterfaceAttachmentUnmarshaller Instance { get; }
    private static NetworkInterfaceAttachmentUnmarshaller();
    public sealed virtual NetworkInterfaceAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterfaceAttachment Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfaceAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfacePrivateIpAddressUnmarshaller : object {
    private static NetworkInterfacePrivateIpAddressUnmarshaller _instance;
    public static NetworkInterfacePrivateIpAddressUnmarshaller Instance { get; }
    private static NetworkInterfacePrivateIpAddressUnmarshaller();
    public sealed virtual NetworkInterfacePrivateIpAddress Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterfacePrivateIpAddress Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfacePrivateIpAddressUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller : object {
    private static NetworkInterfaceUnmarshaller _instance;
    public static NetworkInterfaceUnmarshaller Instance { get; }
    private static NetworkInterfaceUnmarshaller();
    public sealed virtual NetworkInterface Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkInterface Unmarshall(JsonUnmarshallerContext context);
    public static NetworkInterfaceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PlacementGroupUnmarshaller : object {
    private static PlacementGroupUnmarshaller _instance;
    public static PlacementGroupUnmarshaller Instance { get; }
    private static PlacementGroupUnmarshaller();
    public sealed virtual PlacementGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PlacementGroup Unmarshall(JsonUnmarshallerContext context);
    public static PlacementGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PlacementUnmarshaller : object {
    private static PlacementUnmarshaller _instance;
    public static PlacementUnmarshaller Instance { get; }
    private static PlacementUnmarshaller();
    public sealed virtual Placement Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Placement Unmarshall(JsonUnmarshallerContext context);
    public static PlacementUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PortRangeUnmarshaller : object {
    private static PortRangeUnmarshaller _instance;
    public static PortRangeUnmarshaller Instance { get; }
    private static PortRangeUnmarshaller();
    public sealed virtual PortRange Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PortRange Unmarshall(JsonUnmarshallerContext context);
    public static PortRangeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListIdUnmarshaller : object {
    private static PrefixListIdUnmarshaller _instance;
    public static PrefixListIdUnmarshaller Instance { get; }
    private static PrefixListIdUnmarshaller();
    public sealed virtual PrefixListId Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrefixListId Unmarshall(JsonUnmarshallerContext context);
    public static PrefixListIdUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrefixListUnmarshaller : object {
    private static PrefixListUnmarshaller _instance;
    public static PrefixListUnmarshaller Instance { get; }
    private static PrefixListUnmarshaller();
    public sealed virtual PrefixList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrefixList Unmarshall(JsonUnmarshallerContext context);
    public static PrefixListUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PriceScheduleUnmarshaller : object {
    private static PriceScheduleUnmarshaller _instance;
    public static PriceScheduleUnmarshaller Instance { get; }
    private static PriceScheduleUnmarshaller();
    public sealed virtual PriceSchedule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PriceSchedule Unmarshall(JsonUnmarshallerContext context);
    public static PriceScheduleUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PricingDetailUnmarshaller : object {
    private static PricingDetailUnmarshaller _instance;
    public static PricingDetailUnmarshaller Instance { get; }
    private static PricingDetailUnmarshaller();
    public sealed virtual PricingDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PricingDetail Unmarshall(JsonUnmarshallerContext context);
    public static PricingDetailUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PrivateIpAddressSpecificationUnmarshaller : object {
    private static PrivateIpAddressSpecificationUnmarshaller _instance;
    public static PrivateIpAddressSpecificationUnmarshaller Instance { get; }
    private static PrivateIpAddressSpecificationUnmarshaller();
    public sealed virtual PrivateIpAddressSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PrivateIpAddressSpecification Unmarshall(JsonUnmarshallerContext context);
    public static PrivateIpAddressSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ProductCodeUnmarshaller : object {
    private static ProductCodeUnmarshaller _instance;
    public static ProductCodeUnmarshaller Instance { get; }
    private static ProductCodeUnmarshaller();
    public sealed virtual ProductCode Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProductCode Unmarshall(JsonUnmarshallerContext context);
    public static ProductCodeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PropagatingVgwUnmarshaller : object {
    private static PropagatingVgwUnmarshaller _instance;
    public static PropagatingVgwUnmarshaller Instance { get; }
    private static PropagatingVgwUnmarshaller();
    public sealed virtual PropagatingVgw Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PropagatingVgw Unmarshall(JsonUnmarshallerContext context);
    public static PropagatingVgwUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PurchaseReservedInstancesOfferingRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static PurchaseReservedInstancesOfferingResponseUnmarshaller _instance;
    public static PurchaseReservedInstancesOfferingResponseUnmarshaller Instance { get; }
    private static PurchaseReservedInstancesOfferingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PurchaseReservedInstancesOfferingResponseUnmarshaller GetInstance();
    public static PurchaseReservedInstancesOfferingResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RebootInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RebootInstancesResponseUnmarshaller _instance;
    public static RebootInstancesResponseUnmarshaller Instance { get; }
    private static RebootInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RebootInstancesResponseUnmarshaller GetInstance();
    public static RebootInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller : object {
    private static RecurringChargeUnmarshaller _instance;
    public static RecurringChargeUnmarshaller Instance { get; }
    private static RecurringChargeUnmarshaller();
    public sealed virtual RecurringCharge Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecurringCharge Unmarshall(JsonUnmarshallerContext context);
    public static RecurringChargeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegionUnmarshaller : object {
    private static RegionUnmarshaller _instance;
    public static RegionUnmarshaller Instance { get; }
    private static RegionUnmarshaller();
    public sealed virtual Region Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Region Unmarshall(JsonUnmarshallerContext context);
    public static RegionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterImageRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RegisterImageResponseUnmarshaller _instance;
    public static RegisterImageResponseUnmarshaller Instance { get; }
    private static RegisterImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterImageResponseUnmarshaller GetInstance();
    public static RegisterImageResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RejectVpcPeeringConnectionRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RejectVpcPeeringConnectionResponseUnmarshaller _instance;
    public static RejectVpcPeeringConnectionResponseUnmarshaller Instance { get; }
    private static RejectVpcPeeringConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RejectVpcPeeringConnectionResponseUnmarshaller GetInstance();
    public static RejectVpcPeeringConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReleaseAddressRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReleaseAddressResponseUnmarshaller _instance;
    public static ReleaseAddressResponseUnmarshaller Instance { get; }
    private static ReleaseAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReleaseAddressResponseUnmarshaller GetInstance();
    public static ReleaseAddressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceNetworkAclAssociationRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceNetworkAclAssociationResponseUnmarshaller _instance;
    public static ReplaceNetworkAclAssociationResponseUnmarshaller Instance { get; }
    private static ReplaceNetworkAclAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceNetworkAclAssociationResponseUnmarshaller GetInstance();
    public static ReplaceNetworkAclAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceNetworkAclEntryRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceNetworkAclEntryResponseUnmarshaller _instance;
    public static ReplaceNetworkAclEntryResponseUnmarshaller Instance { get; }
    private static ReplaceNetworkAclEntryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceNetworkAclEntryResponseUnmarshaller GetInstance();
    public static ReplaceNetworkAclEntryResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceRouteRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceRouteResponseUnmarshaller _instance;
    public static ReplaceRouteResponseUnmarshaller Instance { get; }
    private static ReplaceRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceRouteResponseUnmarshaller GetInstance();
    public static ReplaceRouteResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReplaceRouteTableAssociationRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReplaceRouteTableAssociationResponseUnmarshaller _instance;
    public static ReplaceRouteTableAssociationResponseUnmarshaller Instance { get; }
    private static ReplaceRouteTableAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReplaceRouteTableAssociationResponseUnmarshaller GetInstance();
    public static ReplaceRouteTableAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReportInstanceStatusRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ReportInstanceStatusResponseUnmarshaller _instance;
    public static ReportInstanceStatusResponseUnmarshaller Instance { get; }
    private static ReportInstanceStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReportInstanceStatusResponseUnmarshaller GetInstance();
    public static ReportInstanceStatusResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RequestSpotFleetRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotFleetResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RequestSpotFleetResponseUnmarshaller _instance;
    public static RequestSpotFleetResponseUnmarshaller Instance { get; }
    private static RequestSpotFleetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RequestSpotFleetResponseUnmarshaller GetInstance();
    public static RequestSpotFleetResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RequestSpotInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RequestSpotInstancesResponseUnmarshaller _instance;
    public static RequestSpotInstancesResponseUnmarshaller Instance { get; }
    private static RequestSpotInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RequestSpotInstancesResponseUnmarshaller GetInstance();
    public static RequestSpotInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservationUnmarshaller : object {
    private static ReservationUnmarshaller _instance;
    public static ReservationUnmarshaller Instance { get; }
    private static ReservationUnmarshaller();
    public sealed virtual Reservation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Reservation Unmarshall(JsonUnmarshallerContext context);
    public static ReservationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesConfigurationUnmarshaller : object {
    private static ReservedInstancesConfigurationUnmarshaller _instance;
    public static ReservedInstancesConfigurationUnmarshaller Instance { get; }
    private static ReservedInstancesConfigurationUnmarshaller();
    public sealed virtual ReservedInstancesConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesConfigurationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesIdUnmarshaller : object {
    private static ReservedInstancesIdUnmarshaller _instance;
    public static ReservedInstancesIdUnmarshaller Instance { get; }
    private static ReservedInstancesIdUnmarshaller();
    public sealed virtual ReservedInstancesId Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesId Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesIdUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesListingUnmarshaller : object {
    private static ReservedInstancesListingUnmarshaller _instance;
    public static ReservedInstancesListingUnmarshaller Instance { get; }
    private static ReservedInstancesListingUnmarshaller();
    public sealed virtual ReservedInstancesListing Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesListing Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesListingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationResultUnmarshaller : object {
    private static ReservedInstancesModificationResultUnmarshaller _instance;
    public static ReservedInstancesModificationResultUnmarshaller Instance { get; }
    private static ReservedInstancesModificationResultUnmarshaller();
    public sealed virtual ReservedInstancesModificationResult Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesModificationResult Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesModificationResultUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationUnmarshaller : object {
    private static ReservedInstancesModificationUnmarshaller _instance;
    public static ReservedInstancesModificationUnmarshaller Instance { get; }
    private static ReservedInstancesModificationUnmarshaller();
    public sealed virtual ReservedInstancesModification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesModification Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesModificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesOfferingUnmarshaller : object {
    private static ReservedInstancesOfferingUnmarshaller _instance;
    public static ReservedInstancesOfferingUnmarshaller Instance { get; }
    private static ReservedInstancesOfferingUnmarshaller();
    public sealed virtual ReservedInstancesOffering Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstancesOffering Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesOfferingUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesUnmarshaller : object {
    private static ReservedInstancesUnmarshaller _instance;
    public static ReservedInstancesUnmarshaller Instance { get; }
    private static ReservedInstancesUnmarshaller();
    public sealed virtual ReservedInstances Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReservedInstances Unmarshall(JsonUnmarshallerContext context);
    public static ReservedInstancesUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetImageAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetImageAttributeResponseUnmarshaller _instance;
    public static ResetImageAttributeResponseUnmarshaller Instance { get; }
    private static ResetImageAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetImageAttributeResponseUnmarshaller GetInstance();
    public static ResetImageAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetInstanceAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetInstanceAttributeResponseUnmarshaller _instance;
    public static ResetInstanceAttributeResponseUnmarshaller Instance { get; }
    private static ResetInstanceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetInstanceAttributeResponseUnmarshaller GetInstance();
    public static ResetInstanceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetNetworkInterfaceAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetNetworkInterfaceAttributeResponseUnmarshaller _instance;
    public static ResetNetworkInterfaceAttributeResponseUnmarshaller Instance { get; }
    private static ResetNetworkInterfaceAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetNetworkInterfaceAttributeResponseUnmarshaller GetInstance();
    public static ResetNetworkInterfaceAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetSnapshotAttributeRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static ResetSnapshotAttributeResponseUnmarshaller _instance;
    public static ResetSnapshotAttributeResponseUnmarshaller Instance { get; }
    private static ResetSnapshotAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetSnapshotAttributeResponseUnmarshaller GetInstance();
    public static ResetSnapshotAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreAddressToClassicRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RestoreAddressToClassicResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RestoreAddressToClassicResponseUnmarshaller _instance;
    public static RestoreAddressToClassicResponseUnmarshaller Instance { get; }
    private static RestoreAddressToClassicResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreAddressToClassicResponseUnmarshaller GetInstance();
    public static RestoreAddressToClassicResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RevokeSecurityGroupEgressRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RevokeSecurityGroupEgressResponseUnmarshaller _instance;
    public static RevokeSecurityGroupEgressResponseUnmarshaller Instance { get; }
    private static RevokeSecurityGroupEgressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RevokeSecurityGroupEgressResponseUnmarshaller GetInstance();
    public static RevokeSecurityGroupEgressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RevokeSecurityGroupIngressRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RevokeSecurityGroupIngressResponseUnmarshaller _instance;
    public static RevokeSecurityGroupIngressResponseUnmarshaller Instance { get; }
    private static RevokeSecurityGroupIngressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RevokeSecurityGroupIngressResponseUnmarshaller GetInstance();
    public static RevokeSecurityGroupIngressResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableAssociationUnmarshaller : object {
    private static RouteTableAssociationUnmarshaller _instance;
    public static RouteTableAssociationUnmarshaller Instance { get; }
    private static RouteTableAssociationUnmarshaller();
    public sealed virtual RouteTableAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RouteTableAssociation Unmarshall(JsonUnmarshallerContext context);
    public static RouteTableAssociationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableUnmarshaller : object {
    private static RouteTableUnmarshaller _instance;
    public static RouteTableUnmarshaller Instance { get; }
    private static RouteTableUnmarshaller();
    public sealed virtual RouteTable Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RouteTable Unmarshall(JsonUnmarshallerContext context);
    public static RouteTableUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RouteUnmarshaller : object {
    private static RouteUnmarshaller _instance;
    public static RouteUnmarshaller Instance { get; }
    private static RouteUnmarshaller();
    public sealed virtual Route Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Route Unmarshall(JsonUnmarshallerContext context);
    public static RouteUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RunInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static RunInstancesResponseUnmarshaller _instance;
    public static RunInstancesResponseUnmarshaller Instance { get; }
    private static RunInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RunInstancesResponseUnmarshaller GetInstance();
    public static RunInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.S3StorageUnmarshaller : object {
    private static S3StorageUnmarshaller _instance;
    public static S3StorageUnmarshaller Instance { get; }
    private static S3StorageUnmarshaller();
    public sealed virtual S3Storage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Storage Unmarshall(JsonUnmarshallerContext context);
    public static S3StorageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupUnmarshaller : object {
    private static SecurityGroupUnmarshaller _instance;
    public static SecurityGroupUnmarshaller Instance { get; }
    private static SecurityGroupUnmarshaller();
    public sealed virtual SecurityGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecurityGroup Unmarshall(JsonUnmarshallerContext context);
    public static SecurityGroupUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotDetailUnmarshaller : object {
    private static SnapshotDetailUnmarshaller _instance;
    public static SnapshotDetailUnmarshaller Instance { get; }
    private static SnapshotDetailUnmarshaller();
    public sealed virtual SnapshotDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnapshotDetail Unmarshall(JsonUnmarshallerContext context);
    public static SnapshotDetailUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotTaskDetailUnmarshaller : object {
    private static SnapshotTaskDetailUnmarshaller _instance;
    public static SnapshotTaskDetailUnmarshaller Instance { get; }
    private static SnapshotTaskDetailUnmarshaller();
    public sealed virtual SnapshotTaskDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnapshotTaskDetail Unmarshall(JsonUnmarshallerContext context);
    public static SnapshotTaskDetailUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotUnmarshaller : object {
    private static SnapshotUnmarshaller _instance;
    public static SnapshotUnmarshaller Instance { get; }
    private static SnapshotUnmarshaller();
    public sealed virtual Snapshot Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Snapshot Unmarshall(JsonUnmarshallerContext context);
    public static SnapshotUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotDatafeedSubscriptionUnmarshaller : object {
    private static SpotDatafeedSubscriptionUnmarshaller _instance;
    public static SpotDatafeedSubscriptionUnmarshaller Instance { get; }
    private static SpotDatafeedSubscriptionUnmarshaller();
    public sealed virtual SpotDatafeedSubscription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotDatafeedSubscription Unmarshall(JsonUnmarshallerContext context);
    public static SpotDatafeedSubscriptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetLaunchSpecificationUnmarshaller : object {
    private static SpotFleetLaunchSpecificationUnmarshaller _instance;
    public static SpotFleetLaunchSpecificationUnmarshaller Instance { get; }
    private static SpotFleetLaunchSpecificationUnmarshaller();
    public sealed virtual SpotFleetLaunchSpecification Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotFleetLaunchSpecification Unmarshall(JsonUnmarshallerContext context);
    public static SpotFleetLaunchSpecificationUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetMonitoringUnmarshaller : object {
    private static SpotFleetMonitoringUnmarshaller _instance;
    public static SpotFleetMonitoringUnmarshaller Instance { get; }
    private static SpotFleetMonitoringUnmarshaller();
    public sealed virtual SpotFleetMonitoring Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotFleetMonitoring Unmarshall(JsonUnmarshallerContext context);
    public static SpotFleetMonitoringUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigDataUnmarshaller : object {
    private static SpotFleetRequestConfigDataUnmarshaller _instance;
    public static SpotFleetRequestConfigDataUnmarshaller Instance { get; }
    private static SpotFleetRequestConfigDataUnmarshaller();
    public sealed virtual SpotFleetRequestConfigData Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotFleetRequestConfigData Unmarshall(JsonUnmarshallerContext context);
    public static SpotFleetRequestConfigDataUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotFleetRequestConfigUnmarshaller : object {
    private static SpotFleetRequestConfigUnmarshaller _instance;
    public static SpotFleetRequestConfigUnmarshaller Instance { get; }
    private static SpotFleetRequestConfigUnmarshaller();
    public sealed virtual SpotFleetRequestConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotFleetRequestConfig Unmarshall(JsonUnmarshallerContext context);
    public static SpotFleetRequestConfigUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceRequestUnmarshaller : object {
    private static SpotInstanceRequestUnmarshaller _instance;
    public static SpotInstanceRequestUnmarshaller Instance { get; }
    private static SpotInstanceRequestUnmarshaller();
    public sealed virtual SpotInstanceRequest Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotInstanceRequest Unmarshall(JsonUnmarshallerContext context);
    public static SpotInstanceRequestUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStateFaultUnmarshaller : object {
    private static SpotInstanceStateFaultUnmarshaller _instance;
    public static SpotInstanceStateFaultUnmarshaller Instance { get; }
    private static SpotInstanceStateFaultUnmarshaller();
    public sealed virtual SpotInstanceStateFault Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotInstanceStateFault Unmarshall(JsonUnmarshallerContext context);
    public static SpotInstanceStateFaultUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStatusUnmarshaller : object {
    private static SpotInstanceStatusUnmarshaller _instance;
    public static SpotInstanceStatusUnmarshaller Instance { get; }
    private static SpotInstanceStatusUnmarshaller();
    public sealed virtual SpotInstanceStatus Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotInstanceStatus Unmarshall(JsonUnmarshallerContext context);
    public static SpotInstanceStatusUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotPlacementUnmarshaller : object {
    private static SpotPlacementUnmarshaller _instance;
    public static SpotPlacementUnmarshaller Instance { get; }
    private static SpotPlacementUnmarshaller();
    public sealed virtual SpotPlacement Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotPlacement Unmarshall(JsonUnmarshallerContext context);
    public static SpotPlacementUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SpotPriceUnmarshaller : object {
    private static SpotPriceUnmarshaller _instance;
    public static SpotPriceUnmarshaller Instance { get; }
    private static SpotPriceUnmarshaller();
    public sealed virtual SpotPrice Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SpotPrice Unmarshall(JsonUnmarshallerContext context);
    public static SpotPriceUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static StartInstancesResponseUnmarshaller _instance;
    public static StartInstancesResponseUnmarshaller Instance { get; }
    private static StartInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartInstancesResponseUnmarshaller GetInstance();
    public static StartInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StateReasonUnmarshaller : object {
    private static StateReasonUnmarshaller _instance;
    public static StateReasonUnmarshaller Instance { get; }
    private static StateReasonUnmarshaller();
    public sealed virtual StateReason Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StateReason Unmarshall(JsonUnmarshallerContext context);
    public static StateReasonUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static StopInstancesResponseUnmarshaller _instance;
    public static StopInstancesResponseUnmarshaller Instance { get; }
    private static StopInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopInstancesResponseUnmarshaller GetInstance();
    public static StopInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.StorageUnmarshaller : object {
    private static StorageUnmarshaller _instance;
    public static StorageUnmarshaller Instance { get; }
    private static StorageUnmarshaller();
    public sealed virtual Storage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Storage Unmarshall(JsonUnmarshallerContext context);
    public static StorageUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.SubnetUnmarshaller : object {
    private static SubnetUnmarshaller _instance;
    public static SubnetUnmarshaller Instance { get; }
    private static SubnetUnmarshaller();
    public sealed virtual Subnet Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Subnet Unmarshall(JsonUnmarshallerContext context);
    public static SubnetUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller : object {
    private static TagDescriptionUnmarshaller _instance;
    public static TagDescriptionUnmarshaller Instance { get; }
    private static TagDescriptionUnmarshaller();
    public sealed virtual TagDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TagDescription Unmarshall(JsonUnmarshallerContext context);
    public static TagDescriptionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    public sealed virtual Tag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TerminateInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static TerminateInstancesResponseUnmarshaller _instance;
    public static TerminateInstancesResponseUnmarshaller Instance { get; }
    private static TerminateInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TerminateInstancesResponseUnmarshaller GetInstance();
    public static TerminateInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnassignPrivateIpAddressesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static UnassignPrivateIpAddressesResponseUnmarshaller _instance;
    public static UnassignPrivateIpAddressesResponseUnmarshaller Instance { get; }
    private static UnassignPrivateIpAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnassignPrivateIpAddressesResponseUnmarshaller GetInstance();
    public static UnassignPrivateIpAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnmonitorInstancesRequest publicRequest);
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesResponseUnmarshaller : EC2ResponseUnmarshaller {
    private static UnmonitorInstancesResponseUnmarshaller _instance;
    public static UnmonitorInstancesResponseUnmarshaller Instance { get; }
    private static UnmonitorInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnmonitorInstancesResponseUnmarshaller GetInstance();
    public static UnmonitorInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemErrorUnmarshaller : object {
    private static UnsuccessfulItemErrorUnmarshaller _instance;
    public static UnsuccessfulItemErrorUnmarshaller Instance { get; }
    private static UnsuccessfulItemErrorUnmarshaller();
    public sealed virtual UnsuccessfulItemError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnsuccessfulItemError Unmarshall(JsonUnmarshallerContext context);
    public static UnsuccessfulItemErrorUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UnsuccessfulItemUnmarshaller : object {
    private static UnsuccessfulItemUnmarshaller _instance;
    public static UnsuccessfulItemUnmarshaller Instance { get; }
    private static UnsuccessfulItemUnmarshaller();
    public sealed virtual UnsuccessfulItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnsuccessfulItem Unmarshall(JsonUnmarshallerContext context);
    public static UnsuccessfulItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UserBucketDetailsUnmarshaller : object {
    private static UserBucketDetailsUnmarshaller _instance;
    public static UserBucketDetailsUnmarshaller Instance { get; }
    private static UserBucketDetailsUnmarshaller();
    public sealed virtual UserBucketDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserBucketDetails Unmarshall(JsonUnmarshallerContext context);
    public static UserBucketDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.UserIdGroupPairUnmarshaller : object {
    private static UserIdGroupPairUnmarshaller _instance;
    public static UserIdGroupPairUnmarshaller Instance { get; }
    private static UserIdGroupPairUnmarshaller();
    public sealed virtual UserIdGroupPair Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserIdGroupPair Unmarshall(JsonUnmarshallerContext context);
    public static UserIdGroupPairUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VgwTelemetryUnmarshaller : object {
    private static VgwTelemetryUnmarshaller _instance;
    public static VgwTelemetryUnmarshaller Instance { get; }
    private static VgwTelemetryUnmarshaller();
    public sealed virtual VgwTelemetry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VgwTelemetry Unmarshall(JsonUnmarshallerContext context);
    public static VgwTelemetryUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeAttachmentUnmarshaller : object {
    private static VolumeAttachmentUnmarshaller _instance;
    public static VolumeAttachmentUnmarshaller Instance { get; }
    private static VolumeAttachmentUnmarshaller();
    public sealed virtual VolumeAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeAttachment Unmarshall(JsonUnmarshallerContext context);
    public static VolumeAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusActionUnmarshaller : object {
    private static VolumeStatusActionUnmarshaller _instance;
    public static VolumeStatusActionUnmarshaller Instance { get; }
    private static VolumeStatusActionUnmarshaller();
    public sealed virtual VolumeStatusAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusAction Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusActionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusDetailsUnmarshaller : object {
    private static VolumeStatusDetailsUnmarshaller _instance;
    public static VolumeStatusDetailsUnmarshaller Instance { get; }
    private static VolumeStatusDetailsUnmarshaller();
    public sealed virtual VolumeStatusDetails Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusDetails Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusDetailsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusEventUnmarshaller : object {
    private static VolumeStatusEventUnmarshaller _instance;
    public static VolumeStatusEventUnmarshaller Instance { get; }
    private static VolumeStatusEventUnmarshaller();
    public sealed virtual VolumeStatusEvent Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusEvent Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusEventUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusInfoUnmarshaller : object {
    private static VolumeStatusInfoUnmarshaller _instance;
    public static VolumeStatusInfoUnmarshaller Instance { get; }
    private static VolumeStatusInfoUnmarshaller();
    public sealed virtual VolumeStatusInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusInfo Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusItemUnmarshaller : object {
    private static VolumeStatusItemUnmarshaller _instance;
    public static VolumeStatusItemUnmarshaller Instance { get; }
    private static VolumeStatusItemUnmarshaller();
    public sealed virtual VolumeStatusItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VolumeStatusItem Unmarshall(JsonUnmarshallerContext context);
    public static VolumeStatusItemUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VolumeUnmarshaller : object {
    private static VolumeUnmarshaller _instance;
    public static VolumeUnmarshaller Instance { get; }
    private static VolumeUnmarshaller();
    public sealed virtual Volume Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Volume Unmarshall(JsonUnmarshallerContext context);
    public static VolumeUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcAttachmentUnmarshaller : object {
    private static VpcAttachmentUnmarshaller _instance;
    public static VpcAttachmentUnmarshaller Instance { get; }
    private static VpcAttachmentUnmarshaller();
    public sealed virtual VpcAttachment Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcAttachment Unmarshall(JsonUnmarshallerContext context);
    public static VpcAttachmentUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcClassicLinkUnmarshaller : object {
    private static VpcClassicLinkUnmarshaller _instance;
    public static VpcClassicLinkUnmarshaller Instance { get; }
    private static VpcClassicLinkUnmarshaller();
    public sealed virtual VpcClassicLink Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcClassicLink Unmarshall(JsonUnmarshallerContext context);
    public static VpcClassicLinkUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcEndpointUnmarshaller : object {
    private static VpcEndpointUnmarshaller _instance;
    public static VpcEndpointUnmarshaller Instance { get; }
    private static VpcEndpointUnmarshaller();
    public sealed virtual VpcEndpoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcEndpoint Unmarshall(JsonUnmarshallerContext context);
    public static VpcEndpointUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionStateReasonUnmarshaller : object {
    private static VpcPeeringConnectionStateReasonUnmarshaller _instance;
    public static VpcPeeringConnectionStateReasonUnmarshaller Instance { get; }
    private static VpcPeeringConnectionStateReasonUnmarshaller();
    public sealed virtual VpcPeeringConnectionStateReason Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcPeeringConnectionStateReason Unmarshall(JsonUnmarshallerContext context);
    public static VpcPeeringConnectionStateReasonUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionUnmarshaller : object {
    private static VpcPeeringConnectionUnmarshaller _instance;
    public static VpcPeeringConnectionUnmarshaller Instance { get; }
    private static VpcPeeringConnectionUnmarshaller();
    public sealed virtual VpcPeeringConnection Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcPeeringConnection Unmarshall(JsonUnmarshallerContext context);
    public static VpcPeeringConnectionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionVpcInfoUnmarshaller : object {
    private static VpcPeeringConnectionVpcInfoUnmarshaller _instance;
    public static VpcPeeringConnectionVpcInfoUnmarshaller Instance { get; }
    private static VpcPeeringConnectionVpcInfoUnmarshaller();
    public sealed virtual VpcPeeringConnectionVpcInfo Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcPeeringConnectionVpcInfo Unmarshall(JsonUnmarshallerContext context);
    public static VpcPeeringConnectionVpcInfoUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpcUnmarshaller : object {
    private static VpcUnmarshaller _instance;
    public static VpcUnmarshaller Instance { get; }
    private static VpcUnmarshaller();
    public sealed virtual Vpc Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Vpc Unmarshall(JsonUnmarshallerContext context);
    public static VpcUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionOptionsUnmarshaller : object {
    private static VpnConnectionOptionsUnmarshaller _instance;
    public static VpnConnectionOptionsUnmarshaller Instance { get; }
    private static VpnConnectionOptionsUnmarshaller();
    public sealed virtual VpnConnectionOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpnConnectionOptions Unmarshall(JsonUnmarshallerContext context);
    public static VpnConnectionOptionsUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionUnmarshaller : object {
    private static VpnConnectionUnmarshaller _instance;
    public static VpnConnectionUnmarshaller Instance { get; }
    private static VpnConnectionUnmarshaller();
    public sealed virtual VpnConnection Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpnConnection Unmarshall(JsonUnmarshallerContext context);
    public static VpnConnectionUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpnGatewayUnmarshaller : object {
    private static VpnGatewayUnmarshaller _instance;
    public static VpnGatewayUnmarshaller Instance { get; }
    private static VpnGatewayUnmarshaller();
    public sealed virtual VpnGateway Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpnGateway Unmarshall(JsonUnmarshallerContext context);
    public static VpnGatewayUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.Internal.MarshallTransformations.VpnStaticRouteUnmarshaller : object {
    private static VpnStaticRouteUnmarshaller _instance;
    public static VpnStaticRouteUnmarshaller Instance { get; }
    private static VpnStaticRouteUnmarshaller();
    public sealed virtual VpnStaticRoute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpnStaticRoute Unmarshall(JsonUnmarshallerContext context);
    public static VpnStaticRouteUnmarshaller get_Instance();
}
public class Amazon.EC2.Model.InternetGateway : object {
    private List`1<InternetGatewayAttachment> _attachments;
    private string _internetGatewayId;
    private List`1<Tag> _tags;
    public List`1<InternetGatewayAttachment> Attachments { get; public set; }
    public string InternetGatewayId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<InternetGatewayAttachment> get_Attachments();
    public void set_Attachments(List`1<InternetGatewayAttachment> value);
    internal bool IsSetAttachments();
    public string get_InternetGatewayId();
    public void set_InternetGatewayId(string value);
    internal bool IsSetInternetGatewayId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.EC2.Model.InternetGatewayAttachment : object {
    private AttachmentStatus _state;
    private string _vpcId;
    public AttachmentStatus State { get; public set; }
    public string VpcId { get; public set; }
    public AttachmentStatus get_State();
    public void set_State(AttachmentStatus value);
    internal bool IsSetState();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.IpPermission : object {
    private Nullable`1<int> _fromPort;
    private string _ipProtocol;
    private List`1<string> _ipRanges;
    private List`1<PrefixListId> _prefixListIds;
    private Nullable`1<int> _toPort;
    private List`1<UserIdGroupPair> _userIdGroupPairs;
    public int FromPort { get; public set; }
    public string IpProtocol { get; public set; }
    public List`1<string> IpRanges { get; public set; }
    public List`1<PrefixListId> PrefixListIds { get; public set; }
    public int ToPort { get; public set; }
    public List`1<UserIdGroupPair> UserIdGroupPairs { get; public set; }
    public int get_FromPort();
    public void set_FromPort(int value);
    internal bool IsSetFromPort();
    public string get_IpProtocol();
    public void set_IpProtocol(string value);
    internal bool IsSetIpProtocol();
    public List`1<string> get_IpRanges();
    public void set_IpRanges(List`1<string> value);
    internal bool IsSetIpRanges();
    public List`1<PrefixListId> get_PrefixListIds();
    public void set_PrefixListIds(List`1<PrefixListId> value);
    internal bool IsSetPrefixListIds();
    public int get_ToPort();
    public void set_ToPort(int value);
    internal bool IsSetToPort();
    public List`1<UserIdGroupPair> get_UserIdGroupPairs();
    public void set_UserIdGroupPairs(List`1<UserIdGroupPair> value);
    internal bool IsSetUserIdGroupPairs();
}
public class Amazon.EC2.Model.KeyPair : object {
    private string _keyFingerprint;
    private string _keyMaterial;
    private string _keyName;
    public string KeyFingerprint { get; public set; }
    public string KeyMaterial { get; public set; }
    public string KeyName { get; public set; }
    public string get_KeyFingerprint();
    public void set_KeyFingerprint(string value);
    internal bool IsSetKeyFingerprint();
    public string get_KeyMaterial();
    public void set_KeyMaterial(string value);
    internal bool IsSetKeyMaterial();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
}
public class Amazon.EC2.Model.KeyPairInfo : object {
    private string _keyFingerprint;
    private string _keyName;
    public string KeyFingerprint { get; public set; }
    public string KeyName { get; public set; }
    public string get_KeyFingerprint();
    public void set_KeyFingerprint(string value);
    internal bool IsSetKeyFingerprint();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
}
public class Amazon.EC2.Model.LaunchPermission : object {
    private PermissionGroup _group;
    private string _userId;
    public PermissionGroup Group { get; public set; }
    public string UserId { get; public set; }
    public PermissionGroup get_Group();
    public void set_Group(PermissionGroup value);
    internal bool IsSetGroup();
    public string get_UserId();
    public void set_UserId(string value);
    internal bool IsSetUserId();
}
public class Amazon.EC2.Model.LaunchPermissionModifications : object {
    private List`1<LaunchPermission> _add;
    private List`1<LaunchPermission> _remove;
    public List`1<LaunchPermission> Add { get; public set; }
    public List`1<LaunchPermission> Remove { get; public set; }
    public List`1<LaunchPermission> get_Add();
    public void set_Add(List`1<LaunchPermission> value);
    internal bool IsSetAdd();
    public List`1<LaunchPermission> get_Remove();
    public void set_Remove(List`1<LaunchPermission> value);
    internal bool IsSetRemove();
}
public class Amazon.EC2.Model.LaunchSpecification : object {
    private string _addressingType;
    private List`1<GroupIdentifier> _allSecurityGroups;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private Nullable`1<bool> _ebsOptimized;
    private IamInstanceProfileSpecification _iamInstanceProfile;
    private string _imageId;
    private InstanceType _instanceType;
    private string _kernelId;
    private string _keyName;
    private Nullable`1<bool> _monitoringEnabled;
    private List`1<InstanceNetworkInterfaceSpecification> _networkInterfaces;
    private SpotPlacement _placement;
    private string _ramdiskId;
    private List`1<string> _securityGroups;
    private string _subnetId;
    private string _userData;
    public string AddressingType { get; public set; }
    public List`1<GroupIdentifier> AllSecurityGroups { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public bool EbsOptimized { get; public set; }
    public IamInstanceProfileSpecification IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public bool MonitoringEnabled { get; public set; }
    public List`1<InstanceNetworkInterfaceSpecification> NetworkInterfaces { get; public set; }
    public SpotPlacement Placement { get; public set; }
    public string RamdiskId { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public string SubnetId { get; public set; }
    public string UserData { get; public set; }
    public string get_AddressingType();
    public void set_AddressingType(string value);
    internal bool IsSetAddressingType();
    public List`1<GroupIdentifier> get_AllSecurityGroups();
    public void set_AllSecurityGroups(List`1<GroupIdentifier> value);
    internal bool IsSetAllSecurityGroups();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public bool get_EbsOptimized();
    public void set_EbsOptimized(bool value);
    internal bool IsSetEbsOptimized();
    public IamInstanceProfileSpecification get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfileSpecification value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public bool get_MonitoringEnabled();
    public void set_MonitoringEnabled(bool value);
    internal bool IsSetMonitoringEnabled();
    public List`1<InstanceNetworkInterfaceSpecification> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<InstanceNetworkInterfaceSpecification> value);
    internal bool IsSetNetworkInterfaces();
    public SpotPlacement get_Placement();
    public void set_Placement(SpotPlacement value);
    internal bool IsSetPlacement();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.ModifyImageAttributeRequest : AmazonEC2Request {
    private string _attribute;
    private string _description;
    private string _imageId;
    private LaunchPermissionModifications _launchPermission;
    private OperationType _operationType;
    private List`1<string> _productCodes;
    private List`1<string> _userGroups;
    private List`1<string> _userIds;
    private string _value;
    public string Attribute { get; public set; }
    public string Description { get; public set; }
    public string ImageId { get; public set; }
    public LaunchPermissionModifications LaunchPermission { get; public set; }
    public OperationType OperationType { get; public set; }
    public List`1<string> ProductCodes { get; public set; }
    public List`1<string> UserGroups { get; public set; }
    public List`1<string> UserIds { get; public set; }
    public string Value { get; public set; }
    public ModifyImageAttributeRequest(string imageId, string attribute);
    public string get_Attribute();
    public void set_Attribute(string value);
    internal bool IsSetAttribute();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public LaunchPermissionModifications get_LaunchPermission();
    public void set_LaunchPermission(LaunchPermissionModifications value);
    internal bool IsSetLaunchPermission();
    public OperationType get_OperationType();
    public void set_OperationType(OperationType value);
    internal bool IsSetOperationType();
    public List`1<string> get_ProductCodes();
    public void set_ProductCodes(List`1<string> value);
    internal bool IsSetProductCodes();
    public List`1<string> get_UserGroups();
    public void set_UserGroups(List`1<string> value);
    internal bool IsSetUserGroups();
    public List`1<string> get_UserIds();
    public void set_UserIds(List`1<string> value);
    internal bool IsSetUserIds();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.ModifyImageAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyInstanceAttributeRequest : AmazonEC2Request {
    private InstanceAttributeName _attribute;
    private List`1<InstanceBlockDeviceMappingSpecification> _blockDeviceMappings;
    private Nullable`1<bool> _disableApiTermination;
    private Nullable`1<bool> _ebsOptimized;
    private List`1<string> _groups;
    private string _instanceId;
    private string _instanceInitiatedShutdownBehavior;
    private string _instanceType;
    private string _kernel;
    private string _ramdisk;
    private Nullable`1<bool> _sourceDestCheck;
    private string _sriovNetSupport;
    private string _userData;
    private string _value;
    public InstanceAttributeName Attribute { get; public set; }
    public List`1<InstanceBlockDeviceMappingSpecification> BlockDeviceMappings { get; public set; }
    public bool DisableApiTermination { get; public set; }
    public bool EbsOptimized { get; public set; }
    public List`1<string> Groups { get; public set; }
    public string InstanceId { get; public set; }
    public string InstanceInitiatedShutdownBehavior { get; public set; }
    public string InstanceType { get; public set; }
    public string Kernel { get; public set; }
    public string Ramdisk { get; public set; }
    public bool SourceDestCheck { get; public set; }
    public string SriovNetSupport { get; public set; }
    public string UserData { get; public set; }
    public string Value { get; public set; }
    public ModifyInstanceAttributeRequest(string instanceId, InstanceAttributeName attribute);
    public InstanceAttributeName get_Attribute();
    public void set_Attribute(InstanceAttributeName value);
    internal bool IsSetAttribute();
    public List`1<InstanceBlockDeviceMappingSpecification> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<InstanceBlockDeviceMappingSpecification> value);
    internal bool IsSetBlockDeviceMappings();
    public bool get_DisableApiTermination();
    public void set_DisableApiTermination(bool value);
    internal bool IsSetDisableApiTermination();
    public bool get_EbsOptimized();
    public void set_EbsOptimized(bool value);
    internal bool IsSetEbsOptimized();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceInitiatedShutdownBehavior();
    public void set_InstanceInitiatedShutdownBehavior(string value);
    internal bool IsSetInstanceInitiatedShutdownBehavior();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public string get_Kernel();
    public void set_Kernel(string value);
    internal bool IsSetKernel();
    public string get_Ramdisk();
    public void set_Ramdisk(string value);
    internal bool IsSetRamdisk();
    public bool get_SourceDestCheck();
    public void set_SourceDestCheck(bool value);
    internal bool IsSetSourceDestCheck();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.ModifyInstanceAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest : AmazonEC2Request {
    private NetworkInterfaceAttachmentChanges _attachment;
    private string _description;
    private List`1<string> _groups;
    private string _networkInterfaceId;
    private Nullable`1<bool> _sourceDestCheck;
    public NetworkInterfaceAttachmentChanges Attachment { get; public set; }
    public string Description { get; public set; }
    public List`1<string> Groups { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public bool SourceDestCheck { get; public set; }
    public NetworkInterfaceAttachmentChanges get_Attachment();
    public void set_Attachment(NetworkInterfaceAttachmentChanges value);
    internal bool IsSetAttachment();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public bool get_SourceDestCheck();
    public void set_SourceDestCheck(bool value);
    internal bool IsSetSourceDestCheck();
}
public class Amazon.EC2.Model.ModifyNetworkInterfaceAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyReservedInstancesRequest : AmazonEC2Request {
    private string _clientToken;
    private List`1<string> _reservedInstancesIds;
    private List`1<ReservedInstancesConfiguration> _targetConfigurations;
    public string ClientToken { get; public set; }
    public List`1<string> ReservedInstancesIds { get; public set; }
    public List`1<ReservedInstancesConfiguration> TargetConfigurations { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<string> get_ReservedInstancesIds();
    public void set_ReservedInstancesIds(List`1<string> value);
    internal bool IsSetReservedInstancesIds();
    public List`1<ReservedInstancesConfiguration> get_TargetConfigurations();
    public void set_TargetConfigurations(List`1<ReservedInstancesConfiguration> value);
    internal bool IsSetTargetConfigurations();
}
public class Amazon.EC2.Model.ModifyReservedInstancesResponse : ModifyReservedInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ModifyReservedInstancesResult class are now available on the ModifyReservedInstancesResponse class. You should use the properties on ModifyReservedInstancesResponse instead of accessing them through ModifyReservedInstancesResult.")]
public ModifyReservedInstancesResult ModifyReservedInstancesResult { get; }
    public ModifyReservedInstancesResult get_ModifyReservedInstancesResult();
}
public class Amazon.EC2.Model.ModifyReservedInstancesResult : AmazonWebServiceResponse {
    private string _reservedInstancesModificationId;
    public string ReservedInstancesModificationId { get; public set; }
    public string get_ReservedInstancesModificationId();
    public void set_ReservedInstancesModificationId(string value);
    internal bool IsSetReservedInstancesModificationId();
}
public class Amazon.EC2.Model.ModifySnapshotAttributeRequest : AmazonEC2Request {
    private SnapshotAttributeName _attribute;
    private CreateVolumePermissionModifications _createVolumePermission;
    private List`1<string> _groupNames;
    private OperationType _operationType;
    private string _snapshotId;
    private List`1<string> _userIds;
    public SnapshotAttributeName Attribute { get; public set; }
    public CreateVolumePermissionModifications CreateVolumePermission { get; public set; }
    public List`1<string> GroupNames { get; public set; }
    public OperationType OperationType { get; public set; }
    public string SnapshotId { get; public set; }
    public List`1<string> UserIds { get; public set; }
    public ModifySnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute, OperationType operationType);
    public SnapshotAttributeName get_Attribute();
    public void set_Attribute(SnapshotAttributeName value);
    internal bool IsSetAttribute();
    public CreateVolumePermissionModifications get_CreateVolumePermission();
    public void set_CreateVolumePermission(CreateVolumePermissionModifications value);
    internal bool IsSetCreateVolumePermission();
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
    public OperationType get_OperationType();
    public void set_OperationType(OperationType value);
    internal bool IsSetOperationType();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public List`1<string> get_UserIds();
    public void set_UserIds(List`1<string> value);
    internal bool IsSetUserIds();
}
public class Amazon.EC2.Model.ModifySnapshotAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifySubnetAttributeRequest : AmazonEC2Request {
    private Nullable`1<bool> _mapPublicIpOnLaunch;
    private string _subnetId;
    public bool MapPublicIpOnLaunch { get; public set; }
    public string SubnetId { get; public set; }
    public bool get_MapPublicIpOnLaunch();
    public void set_MapPublicIpOnLaunch(bool value);
    internal bool IsSetMapPublicIpOnLaunch();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.ModifySubnetAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyVolumeAttributeRequest : AmazonEC2Request {
    private Nullable`1<bool> _autoEnableIO;
    private string _volumeId;
    public bool AutoEnableIO { get; public set; }
    public string VolumeId { get; public set; }
    public bool get_AutoEnableIO();
    public void set_AutoEnableIO(bool value);
    internal bool IsSetAutoEnableIO();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.ModifyVolumeAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyVpcAttributeRequest : AmazonEC2Request {
    private Nullable`1<bool> _enableDnsHostnames;
    private Nullable`1<bool> _enableDnsSupport;
    private string _vpcId;
    public bool EnableDnsHostnames { get; public set; }
    public bool EnableDnsSupport { get; public set; }
    public string VpcId { get; public set; }
    public bool get_EnableDnsHostnames();
    public void set_EnableDnsHostnames(bool value);
    internal bool IsSetEnableDnsHostnames();
    public bool get_EnableDnsSupport();
    public void set_EnableDnsSupport(bool value);
    internal bool IsSetEnableDnsSupport();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.ModifyVpcAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ModifyVpcEndpointRequest : AmazonEC2Request {
    private List`1<string> _addRouteTableIds;
    private string _policyDocument;
    private List`1<string> _removeRouteTableIds;
    private Nullable`1<bool> _resetPolicy;
    private string _vpcEndpointId;
    public List`1<string> AddRouteTableIds { get; public set; }
    public string PolicyDocument { get; public set; }
    public List`1<string> RemoveRouteTableIds { get; public set; }
    public bool ResetPolicy { get; public set; }
    public string VpcEndpointId { get; public set; }
    public List`1<string> get_AddRouteTableIds();
    public void set_AddRouteTableIds(List`1<string> value);
    internal bool IsSetAddRouteTableIds();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public List`1<string> get_RemoveRouteTableIds();
    public void set_RemoveRouteTableIds(List`1<string> value);
    internal bool IsSetRemoveRouteTableIds();
    public bool get_ResetPolicy();
    public void set_ResetPolicy(bool value);
    internal bool IsSetResetPolicy();
    public string get_VpcEndpointId();
    public void set_VpcEndpointId(string value);
    internal bool IsSetVpcEndpointId();
}
public class Amazon.EC2.Model.ModifyVpcEndpointResponse : ModifyVpcEndpointResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ModifyVpcEndpointResult class are now available on the ModifyVpcEndpointResponse class. You should use the properties on ModifyVpcEndpointResponse instead of accessing them through ModifyVpcEndpointResult.")]
public ModifyVpcEndpointResult ModifyVpcEndpointResult { get; }
    public ModifyVpcEndpointResult get_ModifyVpcEndpointResult();
}
public class Amazon.EC2.Model.ModifyVpcEndpointResult : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.Monitoring : object {
    private MonitoringState _state;
    public MonitoringState State { get; public set; }
    public MonitoringState get_State();
    public void set_State(MonitoringState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.MonitorInstancesRequest : AmazonEC2Request {
    private List`1<string> _instanceIds;
    public List`1<string> InstanceIds { get; public set; }
    public MonitorInstancesRequest(List`1<string> instanceIds);
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.MonitorInstancesResponse : MonitorInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the MonitorInstancesResult class are now available on the MonitorInstancesResponse class. You should use the properties on MonitorInstancesResponse instead of accessing them through MonitorInstancesResult.")]
public MonitorInstancesResult MonitorInstancesResult { get; }
    public MonitorInstancesResult get_MonitorInstancesResult();
}
public class Amazon.EC2.Model.MonitorInstancesResult : AmazonWebServiceResponse {
    private List`1<InstanceMonitoring> _instanceMonitorings;
    public List`1<InstanceMonitoring> InstanceMonitorings { get; public set; }
    public List`1<InstanceMonitoring> get_InstanceMonitorings();
    public void set_InstanceMonitorings(List`1<InstanceMonitoring> value);
    internal bool IsSetInstanceMonitorings();
}
public class Amazon.EC2.Model.MoveAddressToVpcRequest : AmazonEC2Request {
    private string _publicIp;
    public string PublicIp { get; public set; }
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.MoveAddressToVpcResponse : MoveAddressToVpcResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the MoveAddressToVpcResult class are now available on the MoveAddressToVpcResponse class. You should use the properties on MoveAddressToVpcResponse instead of accessing them through MoveAddressToVpcResult.")]
public MoveAddressToVpcResult MoveAddressToVpcResult { get; }
    public MoveAddressToVpcResult get_MoveAddressToVpcResult();
}
public class Amazon.EC2.Model.MoveAddressToVpcResult : AmazonWebServiceResponse {
    private string _allocationId;
    private Status _status;
    public string AllocationId { get; public set; }
    public Status Status { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public Status get_Status();
    public void set_Status(Status value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.MovingAddressStatus : object {
    private MoveStatus _moveStatus;
    private string _publicIp;
    public MoveStatus MoveStatus { get; public set; }
    public string PublicIp { get; public set; }
    public MoveStatus get_MoveStatus();
    public void set_MoveStatus(MoveStatus value);
    internal bool IsSetMoveStatus();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.NetworkAcl : object {
    private List`1<NetworkAclAssociation> _associations;
    private List`1<NetworkAclEntry> _entries;
    private Nullable`1<bool> _isDefault;
    private string _networkAclId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public List`1<NetworkAclAssociation> Associations { get; public set; }
    public List`1<NetworkAclEntry> Entries { get; public set; }
    public bool IsDefault { get; public set; }
    public string NetworkAclId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public List`1<NetworkAclAssociation> get_Associations();
    public void set_Associations(List`1<NetworkAclAssociation> value);
    internal bool IsSetAssociations();
    public List`1<NetworkAclEntry> get_Entries();
    public void set_Entries(List`1<NetworkAclEntry> value);
    internal bool IsSetEntries();
    public bool get_IsDefault();
    public void set_IsDefault(bool value);
    internal bool IsSetIsDefault();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.NetworkAclAssociation : object {
    private string _networkAclAssociationId;
    private string _networkAclId;
    private string _subnetId;
    public string NetworkAclAssociationId { get; public set; }
    public string NetworkAclId { get; public set; }
    public string SubnetId { get; public set; }
    public string get_NetworkAclAssociationId();
    public void set_NetworkAclAssociationId(string value);
    internal bool IsSetNetworkAclAssociationId();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.NetworkAclEntry : object {
    private string _cidrBlock;
    private Nullable`1<bool> _egress;
    private IcmpTypeCode _icmpTypeCode;
    private PortRange _portRange;
    private string _protocol;
    private RuleAction _ruleAction;
    private Nullable`1<int> _ruleNumber;
    public string CidrBlock { get; public set; }
    public bool Egress { get; public set; }
    public IcmpTypeCode IcmpTypeCode { get; public set; }
    public PortRange PortRange { get; public set; }
    public string Protocol { get; public set; }
    public RuleAction RuleAction { get; public set; }
    public int RuleNumber { get; public set; }
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public bool get_Egress();
    public void set_Egress(bool value);
    internal bool IsSetEgress();
    public IcmpTypeCode get_IcmpTypeCode();
    public void set_IcmpTypeCode(IcmpTypeCode value);
    internal bool IsSetIcmpTypeCode();
    public PortRange get_PortRange();
    public void set_PortRange(PortRange value);
    internal bool IsSetPortRange();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public RuleAction get_RuleAction();
    public void set_RuleAction(RuleAction value);
    internal bool IsSetRuleAction();
    public int get_RuleNumber();
    public void set_RuleNumber(int value);
    internal bool IsSetRuleNumber();
}
public class Amazon.EC2.Model.NetworkInterface : object {
    private NetworkInterfaceAssociation _association;
    private NetworkInterfaceAttachment _attachment;
    private string _availabilityZone;
    private string _description;
    private List`1<GroupIdentifier> _groups;
    private string _macAddress;
    private string _networkInterfaceId;
    private string _ownerId;
    private string _privateDnsName;
    private string _privateIpAddress;
    private List`1<NetworkInterfacePrivateIpAddress> _privateIpAddresses;
    private string _requesterId;
    private Nullable`1<bool> _requesterManaged;
    private Nullable`1<bool> _sourceDestCheck;
    private NetworkInterfaceStatus _status;
    private string _subnetId;
    private List`1<Tag> _tagSet;
    private string _vpcId;
    public NetworkInterfaceAssociation Association { get; public set; }
    public NetworkInterfaceAttachment Attachment { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string Description { get; public set; }
    public List`1<GroupIdentifier> Groups { get; public set; }
    public string MacAddress { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string OwnerId { get; public set; }
    public string PrivateDnsName { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public List`1<NetworkInterfacePrivateIpAddress> PrivateIpAddresses { get; public set; }
    public string RequesterId { get; public set; }
    public bool RequesterManaged { get; public set; }
    public bool SourceDestCheck { get; public set; }
    public NetworkInterfaceStatus Status { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<Tag> TagSet { get; public set; }
    public string VpcId { get; public set; }
    public NetworkInterfaceAssociation get_Association();
    public void set_Association(NetworkInterfaceAssociation value);
    internal bool IsSetAssociation();
    public NetworkInterfaceAttachment get_Attachment();
    public void set_Attachment(NetworkInterfaceAttachment value);
    internal bool IsSetAttachment();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public string get_MacAddress();
    public void set_MacAddress(string value);
    internal bool IsSetMacAddress();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public List`1<NetworkInterfacePrivateIpAddress> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<NetworkInterfacePrivateIpAddress> value);
    internal bool IsSetPrivateIpAddresses();
    public string get_RequesterId();
    public void set_RequesterId(string value);
    internal bool IsSetRequesterId();
    public bool get_RequesterManaged();
    public void set_RequesterManaged(bool value);
    internal bool IsSetRequesterManaged();
    public bool get_SourceDestCheck();
    public void set_SourceDestCheck(bool value);
    internal bool IsSetSourceDestCheck();
    public NetworkInterfaceStatus get_Status();
    public void set_Status(NetworkInterfaceStatus value);
    internal bool IsSetStatus();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<Tag> get_TagSet();
    public void set_TagSet(List`1<Tag> value);
    internal bool IsSetTagSet();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.NetworkInterfaceAssociation : object {
    private string _allocationId;
    private string _associationId;
    private string _ipOwnerId;
    private string _publicDnsName;
    private string _publicIp;
    public string AllocationId { get; public set; }
    public string AssociationId { get; public set; }
    public string IpOwnerId { get; public set; }
    public string PublicDnsName { get; public set; }
    public string PublicIp { get; public set; }
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_IpOwnerId();
    public void set_IpOwnerId(string value);
    internal bool IsSetIpOwnerId();
    public string get_PublicDnsName();
    public void set_PublicDnsName(string value);
    internal bool IsSetPublicDnsName();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.NetworkInterfaceAttachment : object {
    private string _attachmentId;
    private Nullable`1<DateTime> _attachTime;
    private Nullable`1<bool> _deleteOnTermination;
    private Nullable`1<int> _deviceIndex;
    private string _instanceId;
    private string _instanceOwnerId;
    private AttachmentStatus _status;
    public string AttachmentId { get; public set; }
    public DateTime AttachTime { get; public set; }
    public bool DeleteOnTermination { get; public set; }
    public int DeviceIndex { get; public set; }
    public string InstanceId { get; public set; }
    public string InstanceOwnerId { get; public set; }
    public AttachmentStatus Status { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
    public DateTime get_AttachTime();
    public void set_AttachTime(DateTime value);
    internal bool IsSetAttachTime();
    public bool get_DeleteOnTermination();
    public void set_DeleteOnTermination(bool value);
    internal bool IsSetDeleteOnTermination();
    public int get_DeviceIndex();
    public void set_DeviceIndex(int value);
    internal bool IsSetDeviceIndex();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceOwnerId();
    public void set_InstanceOwnerId(string value);
    internal bool IsSetInstanceOwnerId();
    public AttachmentStatus get_Status();
    public void set_Status(AttachmentStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.NetworkInterfaceAttachmentChanges : object {
    private string _attachmentId;
    private Nullable`1<bool> _deleteOnTermination;
    public string AttachmentId { get; public set; }
    public bool DeleteOnTermination { get; public set; }
    public string get_AttachmentId();
    public void set_AttachmentId(string value);
    internal bool IsSetAttachmentId();
    public bool get_DeleteOnTermination();
    public void set_DeleteOnTermination(bool value);
    internal bool IsSetDeleteOnTermination();
}
public class Amazon.EC2.Model.NetworkInterfacePrivateIpAddress : object {
    private NetworkInterfaceAssociation _association;
    private Nullable`1<bool> _primary;
    private string _privateDnsName;
    private string _privateIpAddress;
    public NetworkInterfaceAssociation Association { get; public set; }
    public bool Primary { get; public set; }
    public string PrivateDnsName { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public NetworkInterfaceAssociation get_Association();
    public void set_Association(NetworkInterfaceAssociation value);
    internal bool IsSetAssociation();
    public bool get_Primary();
    public void set_Primary(bool value);
    internal bool IsSetPrimary();
    public string get_PrivateDnsName();
    public void set_PrivateDnsName(string value);
    internal bool IsSetPrivateDnsName();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
}
public class Amazon.EC2.Model.Placement : object {
    private string _availabilityZone;
    private string _groupName;
    private Tenancy _tenancy;
    public string AvailabilityZone { get; public set; }
    public string GroupName { get; public set; }
    public Tenancy Tenancy { get; public set; }
    public Placement(string availabilityZone);
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public Tenancy get_Tenancy();
    public void set_Tenancy(Tenancy value);
    internal bool IsSetTenancy();
}
public class Amazon.EC2.Model.PlacementGroup : object {
    private string _groupName;
    private PlacementGroupState _state;
    private PlacementStrategy _strategy;
    public string GroupName { get; public set; }
    public PlacementGroupState State { get; public set; }
    public PlacementStrategy Strategy { get; public set; }
    public PlacementGroup(string groupName);
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public PlacementGroupState get_State();
    public void set_State(PlacementGroupState value);
    internal bool IsSetState();
    public PlacementStrategy get_Strategy();
    public void set_Strategy(PlacementStrategy value);
    internal bool IsSetStrategy();
}
public class Amazon.EC2.Model.PortRange : object {
    private Nullable`1<int> _from;
    private Nullable`1<int> _to;
    public int From { get; public set; }
    public int To { get; public set; }
    public int get_From();
    public void set_From(int value);
    internal bool IsSetFrom();
    public int get_To();
    public void set_To(int value);
    internal bool IsSetTo();
}
public class Amazon.EC2.Model.PrefixList : object {
    private List`1<string> _cidrs;
    private string _prefixListId;
    private string _prefixListName;
    public List`1<string> Cidrs { get; public set; }
    public string PrefixListId { get; public set; }
    public string PrefixListName { get; public set; }
    public List`1<string> get_Cidrs();
    public void set_Cidrs(List`1<string> value);
    internal bool IsSetCidrs();
    public string get_PrefixListId();
    public void set_PrefixListId(string value);
    internal bool IsSetPrefixListId();
    public string get_PrefixListName();
    public void set_PrefixListName(string value);
    internal bool IsSetPrefixListName();
}
public class Amazon.EC2.Model.PrefixListId : object {
    private string _id;
    public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.EC2.Model.PriceSchedule : object {
    private Nullable`1<bool> _active;
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<double> _price;
    private Nullable`1<long> _term;
    public bool Active { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public double Price { get; public set; }
    public long Term { get; public set; }
    public bool get_Active();
    public void set_Active(bool value);
    internal bool IsSetActive();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public double get_Price();
    public void set_Price(double value);
    internal bool IsSetPrice();
    public long get_Term();
    public void set_Term(long value);
    internal bool IsSetTerm();
}
public class Amazon.EC2.Model.PriceScheduleSpecification : object {
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<double> _price;
    private Nullable`1<long> _term;
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public double Price { get; public set; }
    public long Term { get; public set; }
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public double get_Price();
    public void set_Price(double value);
    internal bool IsSetPrice();
    public long get_Term();
    public void set_Term(long value);
    internal bool IsSetTerm();
}
public class Amazon.EC2.Model.PricingDetail : object {
    private Nullable`1<int> _count;
    private Nullable`1<double> _price;
    public int Count { get; public set; }
    public double Price { get; public set; }
    public int get_Count();
    public void set_Count(int value);
    internal bool IsSetCount();
    public double get_Price();
    public void set_Price(double value);
    internal bool IsSetPrice();
}
public class Amazon.EC2.Model.PrivateIpAddressSpecification : object {
    private Nullable`1<bool> _primary;
    private string _privateIpAddress;
    public bool Primary { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public bool get_Primary();
    public void set_Primary(bool value);
    internal bool IsSetPrimary();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
}
public class Amazon.EC2.Model.ProductCode : object {
    private string _productCodeId;
    private ProductCodeValues _productCodeType;
    public string ProductCodeId { get; public set; }
    public ProductCodeValues ProductCodeType { get; public set; }
    public string get_ProductCodeId();
    public void set_ProductCodeId(string value);
    internal bool IsSetProductCodeId();
    public ProductCodeValues get_ProductCodeType();
    public void set_ProductCodeType(ProductCodeValues value);
    internal bool IsSetProductCodeType();
}
public class Amazon.EC2.Model.PropagatingVgw : object {
    private string _gatewayId;
    public string GatewayId { get; public set; }
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
}
public class Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest : AmazonEC2Request {
    private Nullable`1<int> _instanceCount;
    private ReservedInstanceLimitPrice _limitPrice;
    private string _reservedInstancesOfferingId;
    public int InstanceCount { get; public set; }
    public ReservedInstanceLimitPrice LimitPrice { get; public set; }
    public string ReservedInstancesOfferingId { get; public set; }
    public PurchaseReservedInstancesOfferingRequest(string reservedInstancesOfferingId, int instanceCount);
    public int get_InstanceCount();
    public void set_InstanceCount(int value);
    internal bool IsSetInstanceCount();
    public ReservedInstanceLimitPrice get_LimitPrice();
    public void set_LimitPrice(ReservedInstanceLimitPrice value);
    internal bool IsSetLimitPrice();
    public string get_ReservedInstancesOfferingId();
    public void set_ReservedInstancesOfferingId(string value);
    internal bool IsSetReservedInstancesOfferingId();
}
public class Amazon.EC2.Model.PurchaseReservedInstancesOfferingResponse : PurchaseReservedInstancesOfferingResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the PurchaseReservedInstancesOfferingResult class are now available on the PurchaseReservedInstancesOfferingResponse class. You should use the properties on PurchaseReservedInstancesOfferingResponse instead of accessing them through PurchaseReservedInstancesOfferingResult.")]
public PurchaseReservedInstancesOfferingResult PurchaseReservedInstancesOfferingResult { get; }
    public PurchaseReservedInstancesOfferingResult get_PurchaseReservedInstancesOfferingResult();
}
public class Amazon.EC2.Model.PurchaseReservedInstancesOfferingResult : AmazonWebServiceResponse {
    private string _reservedInstancesId;
    public string ReservedInstancesId { get; public set; }
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
}
public class Amazon.EC2.Model.RebootInstancesRequest : AmazonEC2Request {
    private List`1<string> _instanceIds;
    public List`1<string> InstanceIds { get; public set; }
    public RebootInstancesRequest(List`1<string> instanceIds);
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.RebootInstancesResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.RecurringCharge : object {
    private Nullable`1<double> _amount;
    private RecurringChargeFrequency _frequency;
    public double Amount { get; public set; }
    public RecurringChargeFrequency Frequency { get; public set; }
    public double get_Amount();
    public void set_Amount(double value);
    internal bool IsSetAmount();
    public RecurringChargeFrequency get_Frequency();
    public void set_Frequency(RecurringChargeFrequency value);
    internal bool IsSetFrequency();
}
public class Amazon.EC2.Model.Region : object {
    private string _endpoint;
    private string _regionName;
    public string Endpoint { get; public set; }
    public string RegionName { get; public set; }
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.EC2.Model.RegisterImageRequest : AmazonEC2Request {
    private ArchitectureValues _architecture;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private string _description;
    private string _imageLocation;
    private string _kernelId;
    private string _name;
    private string _ramdiskId;
    private string _rootDeviceName;
    private string _sriovNetSupport;
    private string _virtualizationType;
    public ArchitectureValues Architecture { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public string Description { get; public set; }
    public string ImageLocation { get; public set; }
    public string KernelId { get; public set; }
    public string Name { get; public set; }
    public string RamdiskId { get; public set; }
    public string RootDeviceName { get; public set; }
    public string SriovNetSupport { get; public set; }
    public string VirtualizationType { get; public set; }
    public RegisterImageRequest(string imageLocation);
    public ArchitectureValues get_Architecture();
    public void set_Architecture(ArchitectureValues value);
    internal bool IsSetArchitecture();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ImageLocation();
    public void set_ImageLocation(string value);
    internal bool IsSetImageLocation();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public string get_RootDeviceName();
    public void set_RootDeviceName(string value);
    internal bool IsSetRootDeviceName();
    public string get_SriovNetSupport();
    public void set_SriovNetSupport(string value);
    internal bool IsSetSriovNetSupport();
    public string get_VirtualizationType();
    public void set_VirtualizationType(string value);
    internal bool IsSetVirtualizationType();
}
public class Amazon.EC2.Model.RegisterImageResponse : RegisterImageResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the RegisterImageResult class are now available on the RegisterImageResponse class. You should use the properties on RegisterImageResponse instead of accessing them through RegisterImageResult.")]
public RegisterImageResult RegisterImageResult { get; }
    public RegisterImageResult get_RegisterImageResult();
}
public class Amazon.EC2.Model.RegisterImageResult : AmazonWebServiceResponse {
    private string _imageId;
    public string ImageId { get; public set; }
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.RejectVpcPeeringConnectionRequest : AmazonEC2Request {
    private string _vpcPeeringConnectionId;
    public string VpcPeeringConnectionId { get; public set; }
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.RejectVpcPeeringConnectionResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ReleaseAddressRequest : AmazonEC2Request {
    private string _allocationId;
    private string _publicIp;
    public string AllocationId { get; public set; }
    public string PublicIp { get; public set; }
    public ReleaseAddressRequest(string publicIp);
    public string get_AllocationId();
    public void set_AllocationId(string value);
    internal bool IsSetAllocationId();
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.ReleaseAddressResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest : AmazonEC2Request {
    private string _associationId;
    private string _networkAclId;
    public string AssociationId { get; public set; }
    public string NetworkAclId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
}
public class Amazon.EC2.Model.ReplaceNetworkAclAssociationResponse : ReplaceNetworkAclAssociationResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ReplaceNetworkAclAssociationResult class are now available on the ReplaceNetworkAclAssociationResponse class. You should use the properties on ReplaceNetworkAclAssociationResponse instead of accessing them through ReplaceNetworkAclAssociationResult.")]
public ReplaceNetworkAclAssociationResult ReplaceNetworkAclAssociationResult { get; }
    public ReplaceNetworkAclAssociationResult get_ReplaceNetworkAclAssociationResult();
}
public class Amazon.EC2.Model.ReplaceNetworkAclAssociationResult : AmazonWebServiceResponse {
    private string _newAssociationId;
    public string NewAssociationId { get; public set; }
    public string get_NewAssociationId();
    public void set_NewAssociationId(string value);
    internal bool IsSetNewAssociationId();
}
public class Amazon.EC2.Model.ReplaceNetworkAclEntryRequest : AmazonEC2Request {
    private string _cidrBlock;
    private Nullable`1<bool> _egress;
    private IcmpTypeCode _icmpTypeCode;
    private string _networkAclId;
    private PortRange _portRange;
    private string _protocol;
    private RuleAction _ruleAction;
    private Nullable`1<int> _ruleNumber;
    public string CidrBlock { get; public set; }
    public bool Egress { get; public set; }
    public IcmpTypeCode IcmpTypeCode { get; public set; }
    public string NetworkAclId { get; public set; }
    public PortRange PortRange { get; public set; }
    public string Protocol { get; public set; }
    public RuleAction RuleAction { get; public set; }
    public int RuleNumber { get; public set; }
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public bool get_Egress();
    public void set_Egress(bool value);
    internal bool IsSetEgress();
    public IcmpTypeCode get_IcmpTypeCode();
    public void set_IcmpTypeCode(IcmpTypeCode value);
    internal bool IsSetIcmpTypeCode();
    public string get_NetworkAclId();
    public void set_NetworkAclId(string value);
    internal bool IsSetNetworkAclId();
    public PortRange get_PortRange();
    public void set_PortRange(PortRange value);
    internal bool IsSetPortRange();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public RuleAction get_RuleAction();
    public void set_RuleAction(RuleAction value);
    internal bool IsSetRuleAction();
    public int get_RuleNumber();
    public void set_RuleNumber(int value);
    internal bool IsSetRuleNumber();
}
public class Amazon.EC2.Model.ReplaceNetworkAclEntryResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ReplaceRouteRequest : AmazonEC2Request {
    private string _destinationCidrBlock;
    private string _gatewayId;
    private string _instanceId;
    private string _networkInterfaceId;
    private string _routeTableId;
    private string _vpcPeeringConnectionId;
    public string DestinationCidrBlock { get; public set; }
    public string GatewayId { get; public set; }
    public string InstanceId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public string RouteTableId { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.ReplaceRouteResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ReplaceRouteTableAssociationRequest : AmazonEC2Request {
    private string _associationId;
    private string _routeTableId;
    public string AssociationId { get; public set; }
    public string RouteTableId { get; public set; }
    public string get_AssociationId();
    public void set_AssociationId(string value);
    internal bool IsSetAssociationId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
}
public class Amazon.EC2.Model.ReplaceRouteTableAssociationResponse : ReplaceRouteTableAssociationResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ReplaceRouteTableAssociationResult class are now available on the ReplaceRouteTableAssociationResponse class. You should use the properties on ReplaceRouteTableAssociationResponse instead of accessing them through ReplaceRouteTableAssociationResult.")]
public ReplaceRouteTableAssociationResult ReplaceRouteTableAssociationResult { get; }
    public ReplaceRouteTableAssociationResult get_ReplaceRouteTableAssociationResult();
}
public class Amazon.EC2.Model.ReplaceRouteTableAssociationResult : AmazonWebServiceResponse {
    private string _newAssociationId;
    public string NewAssociationId { get; public set; }
    public string get_NewAssociationId();
    public void set_NewAssociationId(string value);
    internal bool IsSetNewAssociationId();
}
public class Amazon.EC2.Model.ReportInstanceStatusRequest : AmazonEC2Request {
    private string _description;
    private Nullable`1<DateTime> _endTime;
    private List`1<string> _instances;
    private List`1<string> _reasonCodes;
    private Nullable`1<DateTime> _startTime;
    private ReportStatusType _status;
    public string Description { get; public set; }
    public DateTime EndTime { get; public set; }
    public List`1<string> Instances { get; public set; }
    public List`1<string> ReasonCodes { get; public set; }
    public DateTime StartTime { get; public set; }
    public ReportStatusType Status { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public DateTime get_EndTime();
    public void set_EndTime(DateTime value);
    internal bool IsSetEndTime();
    public List`1<string> get_Instances();
    public void set_Instances(List`1<string> value);
    internal bool IsSetInstances();
    public List`1<string> get_ReasonCodes();
    public void set_ReasonCodes(List`1<string> value);
    internal bool IsSetReasonCodes();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
    public ReportStatusType get_Status();
    public void set_Status(ReportStatusType value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.ReportInstanceStatusResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.RequestSpotFleetRequest : AmazonEC2Request {
    private SpotFleetRequestConfigData _spotFleetRequestConfig;
    public SpotFleetRequestConfigData SpotFleetRequestConfig { get; public set; }
    public SpotFleetRequestConfigData get_SpotFleetRequestConfig();
    public void set_SpotFleetRequestConfig(SpotFleetRequestConfigData value);
    internal bool IsSetSpotFleetRequestConfig();
}
public class Amazon.EC2.Model.RequestSpotFleetResponse : RequestSpotFleetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the RequestSpotFleetResult class are now available on the RequestSpotFleetResponse class. You should use the properties on RequestSpotFleetResponse instead of accessing them through RequestSpotFleetResult.")]
public RequestSpotFleetResult RequestSpotFleetResult { get; }
    public RequestSpotFleetResult get_RequestSpotFleetResult();
}
public class Amazon.EC2.Model.RequestSpotFleetResult : AmazonWebServiceResponse {
    private string _spotFleetRequestId;
    public string SpotFleetRequestId { get; public set; }
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
}
public class Amazon.EC2.Model.RequestSpotInstancesRequest : AmazonEC2Request {
    private string _availabilityZoneGroup;
    private string _clientToken;
    private Nullable`1<int> _instanceCount;
    private string _launchGroup;
    private LaunchSpecification _launchSpecification;
    private string _spotPrice;
    private SpotInstanceType _type;
    private Nullable`1<DateTime> _validFrom;
    private Nullable`1<DateTime> _validUntil;
    public string AvailabilityZoneGroup { get; public set; }
    public string ClientToken { get; public set; }
    public int InstanceCount { get; public set; }
    public string LaunchGroup { get; public set; }
    public LaunchSpecification LaunchSpecification { get; public set; }
    public string SpotPrice { get; public set; }
    public SpotInstanceType Type { get; public set; }
    public DateTime ValidFrom { get; public set; }
    public DateTime ValidUntil { get; public set; }
    public RequestSpotInstancesRequest(string spotPrice);
    public string get_AvailabilityZoneGroup();
    public void set_AvailabilityZoneGroup(string value);
    internal bool IsSetAvailabilityZoneGroup();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public int get_InstanceCount();
    public void set_InstanceCount(int value);
    internal bool IsSetInstanceCount();
    public string get_LaunchGroup();
    public void set_LaunchGroup(string value);
    internal bool IsSetLaunchGroup();
    public LaunchSpecification get_LaunchSpecification();
    public void set_LaunchSpecification(LaunchSpecification value);
    internal bool IsSetLaunchSpecification();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public SpotInstanceType get_Type();
    public void set_Type(SpotInstanceType value);
    internal bool IsSetType();
    public DateTime get_ValidFrom();
    public void set_ValidFrom(DateTime value);
    internal bool IsSetValidFrom();
    public DateTime get_ValidUntil();
    public void set_ValidUntil(DateTime value);
    internal bool IsSetValidUntil();
}
public class Amazon.EC2.Model.RequestSpotInstancesResponse : RequestSpotInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the RequestSpotInstancesResult class are now available on the RequestSpotInstancesResponse class. You should use the properties on RequestSpotInstancesResponse instead of accessing them through RequestSpotInstancesResult.")]
public RequestSpotInstancesResult RequestSpotInstancesResult { get; }
    public RequestSpotInstancesResult get_RequestSpotInstancesResult();
}
public class Amazon.EC2.Model.RequestSpotInstancesResult : AmazonWebServiceResponse {
    private List`1<SpotInstanceRequest> _spotInstanceRequests;
    public List`1<SpotInstanceRequest> SpotInstanceRequests { get; public set; }
    public List`1<SpotInstanceRequest> get_SpotInstanceRequests();
    public void set_SpotInstanceRequests(List`1<SpotInstanceRequest> value);
    internal bool IsSetSpotInstanceRequests();
}
public class Amazon.EC2.Model.Reservation : object {
    private List`1<string> _groupNames;
    private List`1<GroupIdentifier> _groups;
    private List`1<Instance> _instances;
    private string _ownerId;
    private string _requesterId;
    private string _reservationId;
    public List`1<string> GroupNames { get; public set; }
    public List`1<GroupIdentifier> Groups { get; public set; }
    public List`1<Instance> Instances { get; public set; }
    public string OwnerId { get; public set; }
    public string RequesterId { get; public set; }
    public string ReservationId { get; public set; }
    public List`1<string> get_GroupNames();
    public void set_GroupNames(List`1<string> value);
    internal bool IsSetGroupNames();
    public List`1<GroupIdentifier> get_Groups();
    public void set_Groups(List`1<GroupIdentifier> value);
    internal bool IsSetGroups();
    public List`1<Instance> get_Instances();
    public void set_Instances(List`1<Instance> value);
    internal bool IsSetInstances();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_RequesterId();
    public void set_RequesterId(string value);
    internal bool IsSetRequesterId();
    public string get_ReservationId();
    public void set_ReservationId(string value);
    internal bool IsSetReservationId();
}
public class Amazon.EC2.Model.ReservedInstanceLimitPrice : object {
    private Nullable`1<double> _amount;
    private CurrencyCodeValues _currencyCode;
    public double Amount { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public double get_Amount();
    public void set_Amount(double value);
    internal bool IsSetAmount();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
}
public class Amazon.EC2.Model.ReservedInstances : object {
    private string _availabilityZone;
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<long> _duration;
    private Nullable`1<DateTime> _end;
    private Nullable`1<float> _fixedPrice;
    private Nullable`1<int> _instanceCount;
    private Tenancy _instanceTenancy;
    private InstanceType _instanceType;
    private OfferingTypeValues _offeringType;
    private RIProductDescription _productDescription;
    private List`1<RecurringCharge> _recurringCharges;
    private string _reservedInstancesId;
    private Nullable`1<DateTime> _start;
    private ReservedInstanceState _state;
    private List`1<Tag> _tags;
    private Nullable`1<float> _usagePrice;
    public string AvailabilityZone { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public long Duration { get; public set; }
    public DateTime End { get; public set; }
    public float FixedPrice { get; public set; }
    public int InstanceCount { get; public set; }
    public Tenancy InstanceTenancy { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public OfferingTypeValues OfferingType { get; public set; }
    public RIProductDescription ProductDescription { get; public set; }
    public List`1<RecurringCharge> RecurringCharges { get; public set; }
    public string ReservedInstancesId { get; public set; }
    public DateTime Start { get; public set; }
    public ReservedInstanceState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public float UsagePrice { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public long get_Duration();
    public void set_Duration(long value);
    internal bool IsSetDuration();
    public DateTime get_End();
    public void set_End(DateTime value);
    internal bool IsSetEnd();
    public float get_FixedPrice();
    public void set_FixedPrice(float value);
    internal bool IsSetFixedPrice();
    public int get_InstanceCount();
    public void set_InstanceCount(int value);
    internal bool IsSetInstanceCount();
    public Tenancy get_InstanceTenancy();
    public void set_InstanceTenancy(Tenancy value);
    internal bool IsSetInstanceTenancy();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public OfferingTypeValues get_OfferingType();
    public void set_OfferingType(OfferingTypeValues value);
    internal bool IsSetOfferingType();
    public RIProductDescription get_ProductDescription();
    public void set_ProductDescription(RIProductDescription value);
    internal bool IsSetProductDescription();
    public List`1<RecurringCharge> get_RecurringCharges();
    public void set_RecurringCharges(List`1<RecurringCharge> value);
    internal bool IsSetRecurringCharges();
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
    public DateTime get_Start();
    public void set_Start(DateTime value);
    internal bool IsSetStart();
    public ReservedInstanceState get_State();
    public void set_State(ReservedInstanceState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public float get_UsagePrice();
    public void set_UsagePrice(float value);
    internal bool IsSetUsagePrice();
}
public class Amazon.EC2.Model.ReservedInstancesConfiguration : object {
    private string _availabilityZone;
    private Nullable`1<int> _instanceCount;
    private InstanceType _instanceType;
    private string _platform;
    public string AvailabilityZone { get; public set; }
    public int InstanceCount { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string Platform { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public int get_InstanceCount();
    public void set_InstanceCount(int value);
    internal bool IsSetInstanceCount();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
}
public class Amazon.EC2.Model.ReservedInstancesId : object {
    private string _id;
    public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.EC2.Model.ReservedInstancesListing : object {
    private string _clientToken;
    private Nullable`1<DateTime> _createDate;
    private List`1<InstanceCount> _instanceCounts;
    private List`1<PriceSchedule> _priceSchedules;
    private string _reservedInstancesId;
    private string _reservedInstancesListingId;
    private ListingStatus _status;
    private string _statusMessage;
    private List`1<Tag> _tags;
    private Nullable`1<DateTime> _updateDate;
    public string ClientToken { get; public set; }
    public DateTime CreateDate { get; public set; }
    public List`1<InstanceCount> InstanceCounts { get; public set; }
    public List`1<PriceSchedule> PriceSchedules { get; public set; }
    public string ReservedInstancesId { get; public set; }
    public string ReservedInstancesListingId { get; public set; }
    public ListingStatus Status { get; public set; }
    public string StatusMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public DateTime UpdateDate { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public DateTime get_CreateDate();
    public void set_CreateDate(DateTime value);
    internal bool IsSetCreateDate();
    public List`1<InstanceCount> get_InstanceCounts();
    public void set_InstanceCounts(List`1<InstanceCount> value);
    internal bool IsSetInstanceCounts();
    public List`1<PriceSchedule> get_PriceSchedules();
    public void set_PriceSchedules(List`1<PriceSchedule> value);
    internal bool IsSetPriceSchedules();
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
    public string get_ReservedInstancesListingId();
    public void set_ReservedInstancesListingId(string value);
    internal bool IsSetReservedInstancesListingId();
    public ListingStatus get_Status();
    public void set_Status(ListingStatus value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public DateTime get_UpdateDate();
    public void set_UpdateDate(DateTime value);
    internal bool IsSetUpdateDate();
}
public class Amazon.EC2.Model.ReservedInstancesModification : object {
    private string _clientToken;
    private Nullable`1<DateTime> _createDate;
    private Nullable`1<DateTime> _effectiveDate;
    private List`1<ReservedInstancesModificationResult> _modificationResults;
    private List`1<ReservedInstancesId> _reservedInstancesIds;
    private string _reservedInstancesModificationId;
    private string _status;
    private string _statusMessage;
    private Nullable`1<DateTime> _updateDate;
    public string ClientToken { get; public set; }
    public DateTime CreateDate { get; public set; }
    public DateTime EffectiveDate { get; public set; }
    public List`1<ReservedInstancesModificationResult> ModificationResults { get; public set; }
    public List`1<ReservedInstancesId> ReservedInstancesIds { get; public set; }
    public string ReservedInstancesModificationId { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public DateTime UpdateDate { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public DateTime get_CreateDate();
    public void set_CreateDate(DateTime value);
    internal bool IsSetCreateDate();
    public DateTime get_EffectiveDate();
    public void set_EffectiveDate(DateTime value);
    internal bool IsSetEffectiveDate();
    public List`1<ReservedInstancesModificationResult> get_ModificationResults();
    public void set_ModificationResults(List`1<ReservedInstancesModificationResult> value);
    internal bool IsSetModificationResults();
    public List`1<ReservedInstancesId> get_ReservedInstancesIds();
    public void set_ReservedInstancesIds(List`1<ReservedInstancesId> value);
    internal bool IsSetReservedInstancesIds();
    public string get_ReservedInstancesModificationId();
    public void set_ReservedInstancesModificationId(string value);
    internal bool IsSetReservedInstancesModificationId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public DateTime get_UpdateDate();
    public void set_UpdateDate(DateTime value);
    internal bool IsSetUpdateDate();
}
public class Amazon.EC2.Model.ReservedInstancesModificationResult : object {
    private string _reservedInstancesId;
    private ReservedInstancesConfiguration _targetConfiguration;
    public string ReservedInstancesId { get; public set; }
    public ReservedInstancesConfiguration TargetConfiguration { get; public set; }
    public string get_ReservedInstancesId();
    public void set_ReservedInstancesId(string value);
    internal bool IsSetReservedInstancesId();
    public ReservedInstancesConfiguration get_TargetConfiguration();
    public void set_TargetConfiguration(ReservedInstancesConfiguration value);
    internal bool IsSetTargetConfiguration();
}
public class Amazon.EC2.Model.ReservedInstancesOffering : object {
    private string _availabilityZone;
    private CurrencyCodeValues _currencyCode;
    private Nullable`1<long> _duration;
    private Nullable`1<float> _fixedPrice;
    private Tenancy _instanceTenancy;
    private InstanceType _instanceType;
    private Nullable`1<bool> _marketplace;
    private OfferingTypeValues _offeringType;
    private List`1<PricingDetail> _pricingDetails;
    private RIProductDescription _productDescription;
    private List`1<RecurringCharge> _recurringCharges;
    private string _reservedInstancesOfferingId;
    private Nullable`1<float> _usagePrice;
    public string AvailabilityZone { get; public set; }
    public CurrencyCodeValues CurrencyCode { get; public set; }
    public long Duration { get; public set; }
    public float FixedPrice { get; public set; }
    public Tenancy InstanceTenancy { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public bool Marketplace { get; public set; }
    public OfferingTypeValues OfferingType { get; public set; }
    public List`1<PricingDetail> PricingDetails { get; public set; }
    public RIProductDescription ProductDescription { get; public set; }
    public List`1<RecurringCharge> RecurringCharges { get; public set; }
    public string ReservedInstancesOfferingId { get; public set; }
    public float UsagePrice { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public CurrencyCodeValues get_CurrencyCode();
    public void set_CurrencyCode(CurrencyCodeValues value);
    internal bool IsSetCurrencyCode();
    public long get_Duration();
    public void set_Duration(long value);
    internal bool IsSetDuration();
    public float get_FixedPrice();
    public void set_FixedPrice(float value);
    internal bool IsSetFixedPrice();
    public Tenancy get_InstanceTenancy();
    public void set_InstanceTenancy(Tenancy value);
    internal bool IsSetInstanceTenancy();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public bool get_Marketplace();
    public void set_Marketplace(bool value);
    internal bool IsSetMarketplace();
    public OfferingTypeValues get_OfferingType();
    public void set_OfferingType(OfferingTypeValues value);
    internal bool IsSetOfferingType();
    public List`1<PricingDetail> get_PricingDetails();
    public void set_PricingDetails(List`1<PricingDetail> value);
    internal bool IsSetPricingDetails();
    public RIProductDescription get_ProductDescription();
    public void set_ProductDescription(RIProductDescription value);
    internal bool IsSetProductDescription();
    public List`1<RecurringCharge> get_RecurringCharges();
    public void set_RecurringCharges(List`1<RecurringCharge> value);
    internal bool IsSetRecurringCharges();
    public string get_ReservedInstancesOfferingId();
    public void set_ReservedInstancesOfferingId(string value);
    internal bool IsSetReservedInstancesOfferingId();
    public float get_UsagePrice();
    public void set_UsagePrice(float value);
    internal bool IsSetUsagePrice();
}
public class Amazon.EC2.Model.ResetImageAttributeRequest : AmazonEC2Request {
    private ResetImageAttributeName _attribute;
    private string _imageId;
    public ResetImageAttributeName Attribute { get; public set; }
    public string ImageId { get; public set; }
    public ResetImageAttributeRequest(string imageId, ResetImageAttributeName attribute);
    public ResetImageAttributeName get_Attribute();
    public void set_Attribute(ResetImageAttributeName value);
    internal bool IsSetAttribute();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
}
public class Amazon.EC2.Model.ResetImageAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ResetInstanceAttributeRequest : AmazonEC2Request {
    private InstanceAttributeName _attribute;
    private string _instanceId;
    public InstanceAttributeName Attribute { get; public set; }
    public string InstanceId { get; public set; }
    public ResetInstanceAttributeRequest(string instanceId, InstanceAttributeName attribute);
    public InstanceAttributeName get_Attribute();
    public void set_Attribute(InstanceAttributeName value);
    internal bool IsSetAttribute();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.EC2.Model.ResetInstanceAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest : AmazonEC2Request {
    private string _networkInterfaceId;
    private string _sourceDestCheck;
    public string NetworkInterfaceId { get; public set; }
    public string SourceDestCheck { get; public set; }
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public string get_SourceDestCheck();
    public void set_SourceDestCheck(string value);
    internal bool IsSetSourceDestCheck();
}
public class Amazon.EC2.Model.ResetNetworkInterfaceAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.ResetSnapshotAttributeRequest : AmazonEC2Request {
    private SnapshotAttributeName _attribute;
    private string _snapshotId;
    public SnapshotAttributeName Attribute { get; public set; }
    public string SnapshotId { get; public set; }
    public ResetSnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute);
    public SnapshotAttributeName get_Attribute();
    public void set_Attribute(SnapshotAttributeName value);
    internal bool IsSetAttribute();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
}
public class Amazon.EC2.Model.ResetSnapshotAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.RestoreAddressToClassicRequest : AmazonEC2Request {
    private string _publicIp;
    public string PublicIp { get; public set; }
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
}
public class Amazon.EC2.Model.RestoreAddressToClassicResponse : RestoreAddressToClassicResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the RestoreAddressToClassicResult class are now available on the RestoreAddressToClassicResponse class. You should use the properties on RestoreAddressToClassicResponse instead of accessing them through RestoreAddressToClassicResult.")]
public RestoreAddressToClassicResult RestoreAddressToClassicResult { get; }
    public RestoreAddressToClassicResult get_RestoreAddressToClassicResult();
}
public class Amazon.EC2.Model.RestoreAddressToClassicResult : AmazonWebServiceResponse {
    private string _publicIp;
    private Status _status;
    public string PublicIp { get; public set; }
    public Status Status { get; public set; }
    public string get_PublicIp();
    public void set_PublicIp(string value);
    internal bool IsSetPublicIp();
    public Status get_Status();
    public void set_Status(Status value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.RevokeSecurityGroupEgressRequest : AmazonEC2Request {
    private string _groupId;
    private List`1<IpPermission> _ipPermissions;
    public string GroupId { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
}
public class Amazon.EC2.Model.RevokeSecurityGroupEgressResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.RevokeSecurityGroupIngressRequest : AmazonEC2Request {
    private string _groupId;
    private string _groupName;
    private List`1<IpPermission> _ipPermissions;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public RevokeSecurityGroupIngressRequest(string groupName, List`1<IpPermission> ipPermissions);
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
}
public class Amazon.EC2.Model.RevokeSecurityGroupIngressResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.Route : object {
    private string _destinationCidrBlock;
    private string _destinationPrefixListId;
    private string _gatewayId;
    private string _instanceId;
    private string _instanceOwnerId;
    private string _networkInterfaceId;
    private RouteOrigin _origin;
    private RouteState _state;
    private string _vpcPeeringConnectionId;
    public string DestinationCidrBlock { get; public set; }
    public string DestinationPrefixListId { get; public set; }
    public string GatewayId { get; public set; }
    public string InstanceId { get; public set; }
    public string InstanceOwnerId { get; public set; }
    public string NetworkInterfaceId { get; public set; }
    public RouteOrigin Origin { get; public set; }
    public RouteState State { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public string get_DestinationPrefixListId();
    public void set_DestinationPrefixListId(string value);
    internal bool IsSetDestinationPrefixListId();
    public string get_GatewayId();
    public void set_GatewayId(string value);
    internal bool IsSetGatewayId();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_InstanceOwnerId();
    public void set_InstanceOwnerId(string value);
    internal bool IsSetInstanceOwnerId();
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public RouteOrigin get_Origin();
    public void set_Origin(RouteOrigin value);
    internal bool IsSetOrigin();
    public RouteState get_State();
    public void set_State(RouteState value);
    internal bool IsSetState();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.RouteTable : object {
    private List`1<RouteTableAssociation> _associations;
    private List`1<PropagatingVgw> _propagatingVgws;
    private List`1<Route> _routes;
    private string _routeTableId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public List`1<RouteTableAssociation> Associations { get; public set; }
    public List`1<PropagatingVgw> PropagatingVgws { get; public set; }
    public List`1<Route> Routes { get; public set; }
    public string RouteTableId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public List`1<RouteTableAssociation> get_Associations();
    public void set_Associations(List`1<RouteTableAssociation> value);
    internal bool IsSetAssociations();
    public List`1<PropagatingVgw> get_PropagatingVgws();
    public void set_PropagatingVgws(List`1<PropagatingVgw> value);
    internal bool IsSetPropagatingVgws();
    public List`1<Route> get_Routes();
    public void set_Routes(List`1<Route> value);
    internal bool IsSetRoutes();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.RouteTableAssociation : object {
    private Nullable`1<bool> _main;
    private string _routeTableAssociationId;
    private string _routeTableId;
    private string _subnetId;
    public bool Main { get; public set; }
    public string RouteTableAssociationId { get; public set; }
    public string RouteTableId { get; public set; }
    public string SubnetId { get; public set; }
    public bool get_Main();
    public void set_Main(bool value);
    internal bool IsSetMain();
    public string get_RouteTableAssociationId();
    public void set_RouteTableAssociationId(string value);
    internal bool IsSetRouteTableAssociationId();
    public string get_RouteTableId();
    public void set_RouteTableId(string value);
    internal bool IsSetRouteTableId();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
}
public class Amazon.EC2.Model.RunInstancesRequest : AmazonEC2Request {
    private string _additionalInfo;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private string _clientToken;
    private Nullable`1<bool> _disableApiTermination;
    private Nullable`1<bool> _ebsOptimized;
    private IamInstanceProfileSpecification _iamInstanceProfile;
    private string _imageId;
    private ShutdownBehavior _instanceInitiatedShutdownBehavior;
    private InstanceType _instanceType;
    private string _kernelId;
    private string _keyName;
    private Nullable`1<int> _maxCount;
    private Nullable`1<int> _minCount;
    private Nullable`1<bool> _monitoring;
    private List`1<InstanceNetworkInterfaceSpecification> _networkInterfaces;
    private Placement _placement;
    private string _privateIpAddress;
    private string _ramdiskId;
    private List`1<string> _securityGroupIds;
    private List`1<string> _securityGroups;
    private string _subnetId;
    private string _userData;
    public string AdditionalInfo { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public string ClientToken { get; public set; }
    public bool DisableApiTermination { get; public set; }
    public bool EbsOptimized { get; public set; }
    public IamInstanceProfileSpecification IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public ShutdownBehavior InstanceInitiatedShutdownBehavior { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public int MaxCount { get; public set; }
    public int MinCount { get; public set; }
    public bool Monitoring { get; public set; }
    public List`1<InstanceNetworkInterfaceSpecification> NetworkInterfaces { get; public set; }
    public Placement Placement { get; public set; }
    public string PrivateIpAddress { get; public set; }
    public string RamdiskId { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public string SubnetId { get; public set; }
    public string UserData { get; public set; }
    public RunInstancesRequest(string imageId, int minCount, int maxCount);
    public string get_AdditionalInfo();
    public void set_AdditionalInfo(string value);
    internal bool IsSetAdditionalInfo();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public bool get_DisableApiTermination();
    public void set_DisableApiTermination(bool value);
    internal bool IsSetDisableApiTermination();
    public bool get_EbsOptimized();
    public void set_EbsOptimized(bool value);
    internal bool IsSetEbsOptimized();
    public IamInstanceProfileSpecification get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfileSpecification value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public ShutdownBehavior get_InstanceInitiatedShutdownBehavior();
    public void set_InstanceInitiatedShutdownBehavior(ShutdownBehavior value);
    internal bool IsSetInstanceInitiatedShutdownBehavior();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public int get_MaxCount();
    public void set_MaxCount(int value);
    internal bool IsSetMaxCount();
    public int get_MinCount();
    public void set_MinCount(int value);
    internal bool IsSetMinCount();
    public bool get_Monitoring();
    public void set_Monitoring(bool value);
    internal bool IsSetMonitoring();
    public List`1<InstanceNetworkInterfaceSpecification> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<InstanceNetworkInterfaceSpecification> value);
    internal bool IsSetNetworkInterfaces();
    public Placement get_Placement();
    public void set_Placement(Placement value);
    internal bool IsSetPlacement();
    public string get_PrivateIpAddress();
    public void set_PrivateIpAddress(string value);
    internal bool IsSetPrivateIpAddress();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
}
public class Amazon.EC2.Model.RunInstancesResponse : RunInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the RunInstancesResult class are now available on the RunInstancesResponse class. You should use the properties on RunInstancesResponse instead of accessing them through RunInstancesResult.")]
public RunInstancesResult RunInstancesResult { get; }
    public RunInstancesResult get_RunInstancesResult();
}
public class Amazon.EC2.Model.RunInstancesResult : AmazonWebServiceResponse {
    private Reservation _reservation;
    public Reservation Reservation { get; public set; }
    public Reservation get_Reservation();
    public void set_Reservation(Reservation value);
    internal bool IsSetReservation();
}
public class Amazon.EC2.Model.S3Storage : object {
    private string _awsAccessKeyId;
    private string _bucket;
    private string _prefix;
    private string _uploadPolicy;
    private string _uploadPolicySignature;
    public string AWSAccessKeyId { get; public set; }
    public string Bucket { get; public set; }
    public string Prefix { get; public set; }
    public string UploadPolicy { get; public set; }
    public string UploadPolicySignature { get; public set; }
    public string get_AWSAccessKeyId();
    public void set_AWSAccessKeyId(string value);
    internal bool IsSetAWSAccessKeyId();
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public string get_UploadPolicy();
    public void set_UploadPolicy(string value);
    internal bool IsSetUploadPolicy();
    public string get_UploadPolicySignature();
    public void set_UploadPolicySignature(string value);
    internal bool IsSetUploadPolicySignature();
}
public class Amazon.EC2.Model.SecurityGroup : object {
    private string _description;
    private string _groupId;
    private string _groupName;
    private List`1<IpPermission> _ipPermissions;
    private List`1<IpPermission> _ipPermissionsEgress;
    private string _ownerId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public string Description { get; public set; }
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public List`1<IpPermission> IpPermissions { get; public set; }
    public List`1<IpPermission> IpPermissionsEgress { get; public set; }
    public string OwnerId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public List`1<IpPermission> get_IpPermissions();
    public void set_IpPermissions(List`1<IpPermission> value);
    internal bool IsSetIpPermissions();
    public List`1<IpPermission> get_IpPermissionsEgress();
    public void set_IpPermissionsEgress(List`1<IpPermission> value);
    internal bool IsSetIpPermissionsEgress();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.Snapshot : object {
    private string _dataEncryptionKeyId;
    private string _description;
    private Nullable`1<bool> _encrypted;
    private string _kmsKeyId;
    private string _ownerAlias;
    private string _ownerId;
    private string _progress;
    private string _snapshotId;
    private Nullable`1<DateTime> _startTime;
    private SnapshotState _state;
    private string _stateMessage;
    private List`1<Tag> _tags;
    private string _volumeId;
    private Nullable`1<int> _volumeSize;
    public string DataEncryptionKeyId { get; public set; }
    public string Description { get; public set; }
    public bool Encrypted { get; public set; }
    public string KmsKeyId { get; public set; }
    public string OwnerAlias { get; public set; }
    public string OwnerId { get; public set; }
    public string Progress { get; public set; }
    public string SnapshotId { get; public set; }
    public DateTime StartTime { get; public set; }
    public SnapshotState State { get; public set; }
    public string StateMessage { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VolumeId { get; public set; }
    public int VolumeSize { get; public set; }
    public string get_DataEncryptionKeyId();
    public void set_DataEncryptionKeyId(string value);
    internal bool IsSetDataEncryptionKeyId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public bool get_Encrypted();
    public void set_Encrypted(bool value);
    internal bool IsSetEncrypted();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_OwnerAlias();
    public void set_OwnerAlias(string value);
    internal bool IsSetOwnerAlias();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public DateTime get_StartTime();
    public void set_StartTime(DateTime value);
    internal bool IsSetStartTime();
    public SnapshotState get_State();
    public void set_State(SnapshotState value);
    internal bool IsSetState();
    public string get_StateMessage();
    public void set_StateMessage(string value);
    internal bool IsSetStateMessage();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public int get_VolumeSize();
    public void set_VolumeSize(int value);
    internal bool IsSetVolumeSize();
}
public class Amazon.EC2.Model.SnapshotDetail : object {
    private string _description;
    private string _deviceName;
    private Nullable`1<double> _diskImageSize;
    private string _format;
    private string _progress;
    private string _snapshotId;
    private string _status;
    private string _statusMessage;
    private string _url;
    private UserBucketDetails _userBucket;
    public string Description { get; public set; }
    public string DeviceName { get; public set; }
    public double DiskImageSize { get; public set; }
    public string Format { get; public set; }
    public string Progress { get; public set; }
    public string SnapshotId { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public string Url { get; public set; }
    public UserBucketDetails UserBucket { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public double get_DiskImageSize();
    public void set_DiskImageSize(double value);
    internal bool IsSetDiskImageSize();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
    public UserBucketDetails get_UserBucket();
    public void set_UserBucket(UserBucketDetails value);
    internal bool IsSetUserBucket();
}
public class Amazon.EC2.Model.SnapshotDiskContainer : object {
    private string _description;
    private string _format;
    private string _url;
    private UserBucket _userBucket;
    public string Description { get; public set; }
    public string Format { get; public set; }
    public string Url { get; public set; }
    public UserBucket UserBucket { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
    public UserBucket get_UserBucket();
    public void set_UserBucket(UserBucket value);
    internal bool IsSetUserBucket();
}
public class Amazon.EC2.Model.SnapshotTaskDetail : object {
    private string _description;
    private Nullable`1<double> _diskImageSize;
    private string _format;
    private string _progress;
    private string _snapshotId;
    private string _status;
    private string _statusMessage;
    private string _url;
    private UserBucketDetails _userBucket;
    public string Description { get; public set; }
    public double DiskImageSize { get; public set; }
    public string Format { get; public set; }
    public string Progress { get; public set; }
    public string SnapshotId { get; public set; }
    public string Status { get; public set; }
    public string StatusMessage { get; public set; }
    public string Url { get; public set; }
    public UserBucketDetails UserBucket { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public double get_DiskImageSize();
    public void set_DiskImageSize(double value);
    internal bool IsSetDiskImageSize();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
    public string get_Progress();
    public void set_Progress(string value);
    internal bool IsSetProgress();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public string get_Url();
    public void set_Url(string value);
    internal bool IsSetUrl();
    public UserBucketDetails get_UserBucket();
    public void set_UserBucket(UserBucketDetails value);
    internal bool IsSetUserBucket();
}
public class Amazon.EC2.Model.SpotDatafeedSubscription : object {
    private string _bucket;
    private SpotInstanceStateFault _fault;
    private string _ownerId;
    private string _prefix;
    private DatafeedSubscriptionState _state;
    public string Bucket { get; public set; }
    public SpotInstanceStateFault Fault { get; public set; }
    public string OwnerId { get; public set; }
    public string Prefix { get; public set; }
    public DatafeedSubscriptionState State { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public SpotInstanceStateFault get_Fault();
    public void set_Fault(SpotInstanceStateFault value);
    internal bool IsSetFault();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public DatafeedSubscriptionState get_State();
    public void set_State(DatafeedSubscriptionState value);
    internal bool IsSetState();
}
public class Amazon.EC2.Model.SpotFleetLaunchSpecification : object {
    private string _addressingType;
    private List`1<BlockDeviceMapping> _blockDeviceMappings;
    private Nullable`1<bool> _ebsOptimized;
    private IamInstanceProfileSpecification _iamInstanceProfile;
    private string _imageId;
    private InstanceType _instanceType;
    private string _kernelId;
    private string _keyName;
    private SpotFleetMonitoring _monitoring;
    private List`1<InstanceNetworkInterfaceSpecification> _networkInterfaces;
    private SpotPlacement _placement;
    private string _ramdiskId;
    private List`1<GroupIdentifier> _securityGroups;
    private string _spotPrice;
    private string _subnetId;
    private string _userData;
    private Nullable`1<double> _weightedCapacity;
    public string AddressingType { get; public set; }
    public List`1<BlockDeviceMapping> BlockDeviceMappings { get; public set; }
    public bool EbsOptimized { get; public set; }
    public IamInstanceProfileSpecification IamInstanceProfile { get; public set; }
    public string ImageId { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string KernelId { get; public set; }
    public string KeyName { get; public set; }
    public SpotFleetMonitoring Monitoring { get; public set; }
    public List`1<InstanceNetworkInterfaceSpecification> NetworkInterfaces { get; public set; }
    public SpotPlacement Placement { get; public set; }
    public string RamdiskId { get; public set; }
    public List`1<GroupIdentifier> SecurityGroups { get; public set; }
    public string SpotPrice { get; public set; }
    public string SubnetId { get; public set; }
    public string UserData { get; public set; }
    public double WeightedCapacity { get; public set; }
    public string get_AddressingType();
    public void set_AddressingType(string value);
    internal bool IsSetAddressingType();
    public List`1<BlockDeviceMapping> get_BlockDeviceMappings();
    public void set_BlockDeviceMappings(List`1<BlockDeviceMapping> value);
    internal bool IsSetBlockDeviceMappings();
    public bool get_EbsOptimized();
    public void set_EbsOptimized(bool value);
    internal bool IsSetEbsOptimized();
    public IamInstanceProfileSpecification get_IamInstanceProfile();
    public void set_IamInstanceProfile(IamInstanceProfileSpecification value);
    internal bool IsSetIamInstanceProfile();
    public string get_ImageId();
    public void set_ImageId(string value);
    internal bool IsSetImageId();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_KernelId();
    public void set_KernelId(string value);
    internal bool IsSetKernelId();
    public string get_KeyName();
    public void set_KeyName(string value);
    internal bool IsSetKeyName();
    public SpotFleetMonitoring get_Monitoring();
    public void set_Monitoring(SpotFleetMonitoring value);
    internal bool IsSetMonitoring();
    public List`1<InstanceNetworkInterfaceSpecification> get_NetworkInterfaces();
    public void set_NetworkInterfaces(List`1<InstanceNetworkInterfaceSpecification> value);
    internal bool IsSetNetworkInterfaces();
    public SpotPlacement get_Placement();
    public void set_Placement(SpotPlacement value);
    internal bool IsSetPlacement();
    public string get_RamdiskId();
    public void set_RamdiskId(string value);
    internal bool IsSetRamdiskId();
    public List`1<GroupIdentifier> get_SecurityGroups();
    public void set_SecurityGroups(List`1<GroupIdentifier> value);
    internal bool IsSetSecurityGroups();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public string get_UserData();
    public void set_UserData(string value);
    internal bool IsSetUserData();
    public double get_WeightedCapacity();
    public void set_WeightedCapacity(double value);
    internal bool IsSetWeightedCapacity();
}
public class Amazon.EC2.Model.SpotFleetMonitoring : object {
    private Nullable`1<bool> _enabled;
    public bool Enabled { get; public set; }
    public bool get_Enabled();
    public void set_Enabled(bool value);
    internal bool IsSetEnabled();
}
public class Amazon.EC2.Model.SpotFleetRequestConfig : object {
    private SpotFleetRequestConfigData _configData;
    private string _spotFleetRequestId;
    private BatchState _spotFleetRequestState;
    public SpotFleetRequestConfigData ConfigData { get; public set; }
    public string SpotFleetRequestId { get; public set; }
    public BatchState SpotFleetRequestState { get; public set; }
    public SpotFleetRequestConfigData get_ConfigData();
    public void set_ConfigData(SpotFleetRequestConfigData value);
    internal bool IsSetConfigData();
    public string get_SpotFleetRequestId();
    public void set_SpotFleetRequestId(string value);
    internal bool IsSetSpotFleetRequestId();
    public BatchState get_SpotFleetRequestState();
    public void set_SpotFleetRequestState(BatchState value);
    internal bool IsSetSpotFleetRequestState();
}
public class Amazon.EC2.Model.SpotFleetRequestConfigData : object {
    private AllocationStrategy _allocationStrategy;
    private string _clientToken;
    private string _iamFleetRole;
    private List`1<SpotFleetLaunchSpecification> _launchSpecifications;
    private string _spotPrice;
    private Nullable`1<int> _targetCapacity;
    private Nullable`1<bool> _terminateInstancesWithExpiration;
    private Nullable`1<DateTime> _validFrom;
    private Nullable`1<DateTime> _validUntil;
    public AllocationStrategy AllocationStrategy { get; public set; }
    public string ClientToken { get; public set; }
    public string IamFleetRole { get; public set; }
    public List`1<SpotFleetLaunchSpecification> LaunchSpecifications { get; public set; }
    public string SpotPrice { get; public set; }
    public int TargetCapacity { get; public set; }
    public bool TerminateInstancesWithExpiration { get; public set; }
    public DateTime ValidFrom { get; public set; }
    public DateTime ValidUntil { get; public set; }
    public AllocationStrategy get_AllocationStrategy();
    public void set_AllocationStrategy(AllocationStrategy value);
    internal bool IsSetAllocationStrategy();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_IamFleetRole();
    public void set_IamFleetRole(string value);
    internal bool IsSetIamFleetRole();
    public List`1<SpotFleetLaunchSpecification> get_LaunchSpecifications();
    public void set_LaunchSpecifications(List`1<SpotFleetLaunchSpecification> value);
    internal bool IsSetLaunchSpecifications();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public int get_TargetCapacity();
    public void set_TargetCapacity(int value);
    internal bool IsSetTargetCapacity();
    public bool get_TerminateInstancesWithExpiration();
    public void set_TerminateInstancesWithExpiration(bool value);
    internal bool IsSetTerminateInstancesWithExpiration();
    public DateTime get_ValidFrom();
    public void set_ValidFrom(DateTime value);
    internal bool IsSetValidFrom();
    public DateTime get_ValidUntil();
    public void set_ValidUntil(DateTime value);
    internal bool IsSetValidUntil();
}
public class Amazon.EC2.Model.SpotInstanceRequest : object {
    private string _availabilityZoneGroup;
    private Nullable`1<DateTime> _createTime;
    private SpotInstanceStateFault _fault;
    private string _instanceId;
    private string _launchedAvailabilityZone;
    private string _launchGroup;
    private LaunchSpecification _launchSpecification;
    private RIProductDescription _productDescription;
    private string _spotInstanceRequestId;
    private string _spotPrice;
    private SpotInstanceState _state;
    private SpotInstanceStatus _status;
    private List`1<Tag> _tags;
    private SpotInstanceType _type;
    private Nullable`1<DateTime> _validFrom;
    private Nullable`1<DateTime> _validUntil;
    public string AvailabilityZoneGroup { get; public set; }
    public DateTime CreateTime { get; public set; }
    public SpotInstanceStateFault Fault { get; public set; }
    public string InstanceId { get; public set; }
    public string LaunchedAvailabilityZone { get; public set; }
    public string LaunchGroup { get; public set; }
    public LaunchSpecification LaunchSpecification { get; public set; }
    public RIProductDescription ProductDescription { get; public set; }
    public string SpotInstanceRequestId { get; public set; }
    public string SpotPrice { get; public set; }
    public SpotInstanceState State { get; public set; }
    public SpotInstanceStatus Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public SpotInstanceType Type { get; public set; }
    public DateTime ValidFrom { get; public set; }
    public DateTime ValidUntil { get; public set; }
    public string get_AvailabilityZoneGroup();
    public void set_AvailabilityZoneGroup(string value);
    internal bool IsSetAvailabilityZoneGroup();
    public DateTime get_CreateTime();
    public void set_CreateTime(DateTime value);
    internal bool IsSetCreateTime();
    public SpotInstanceStateFault get_Fault();
    public void set_Fault(SpotInstanceStateFault value);
    internal bool IsSetFault();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_LaunchedAvailabilityZone();
    public void set_LaunchedAvailabilityZone(string value);
    internal bool IsSetLaunchedAvailabilityZone();
    public string get_LaunchGroup();
    public void set_LaunchGroup(string value);
    internal bool IsSetLaunchGroup();
    public LaunchSpecification get_LaunchSpecification();
    public void set_LaunchSpecification(LaunchSpecification value);
    internal bool IsSetLaunchSpecification();
    public RIProductDescription get_ProductDescription();
    public void set_ProductDescription(RIProductDescription value);
    internal bool IsSetProductDescription();
    public string get_SpotInstanceRequestId();
    public void set_SpotInstanceRequestId(string value);
    internal bool IsSetSpotInstanceRequestId();
    public string get_SpotPrice();
    public void set_SpotPrice(string value);
    internal bool IsSetSpotPrice();
    public SpotInstanceState get_State();
    public void set_State(SpotInstanceState value);
    internal bool IsSetState();
    public SpotInstanceStatus get_Status();
    public void set_Status(SpotInstanceStatus value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public SpotInstanceType get_Type();
    public void set_Type(SpotInstanceType value);
    internal bool IsSetType();
    public DateTime get_ValidFrom();
    public void set_ValidFrom(DateTime value);
    internal bool IsSetValidFrom();
    public DateTime get_ValidUntil();
    public void set_ValidUntil(DateTime value);
    internal bool IsSetValidUntil();
}
public class Amazon.EC2.Model.SpotInstanceStateFault : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.SpotInstanceStatus : object {
    private string _code;
    private string _message;
    private Nullable`1<DateTime> _updateTime;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public DateTime UpdateTime { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public DateTime get_UpdateTime();
    public void set_UpdateTime(DateTime value);
    internal bool IsSetUpdateTime();
}
public class Amazon.EC2.Model.SpotPlacement : object {
    private string _availabilityZone;
    private string _groupName;
    public string AvailabilityZone { get; public set; }
    public string GroupName { get; public set; }
    public SpotPlacement(string availabilityZone);
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
}
public class Amazon.EC2.Model.SpotPrice : object {
    private string _availabilityZone;
    private InstanceType _instanceType;
    private string _price;
    private RIProductDescription _productDescription;
    private Nullable`1<DateTime> _timestamp;
    public string AvailabilityZone { get; public set; }
    public InstanceType InstanceType { get; public set; }
    public string Price { get; public set; }
    public RIProductDescription ProductDescription { get; public set; }
    public DateTime Timestamp { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public InstanceType get_InstanceType();
    public void set_InstanceType(InstanceType value);
    internal bool IsSetInstanceType();
    public string get_Price();
    public void set_Price(string value);
    internal bool IsSetPrice();
    public RIProductDescription get_ProductDescription();
    public void set_ProductDescription(RIProductDescription value);
    internal bool IsSetProductDescription();
    public DateTime get_Timestamp();
    public void set_Timestamp(DateTime value);
    internal bool IsSetTimestamp();
}
public class Amazon.EC2.Model.StartInstancesRequest : AmazonEC2Request {
    private string _additionalInfo;
    private List`1<string> _instanceIds;
    public string AdditionalInfo { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public StartInstancesRequest(List`1<string> instanceIds);
    public string get_AdditionalInfo();
    public void set_AdditionalInfo(string value);
    internal bool IsSetAdditionalInfo();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.StartInstancesResponse : StartInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the StartInstancesResult class are now available on the StartInstancesResponse class. You should use the properties on StartInstancesResponse instead of accessing them through StartInstancesResult.")]
public StartInstancesResult StartInstancesResult { get; }
    public StartInstancesResult get_StartInstancesResult();
}
public class Amazon.EC2.Model.StartInstancesResult : AmazonWebServiceResponse {
    private List`1<InstanceStateChange> _startingInstances;
    public List`1<InstanceStateChange> StartingInstances { get; public set; }
    public List`1<InstanceStateChange> get_StartingInstances();
    public void set_StartingInstances(List`1<InstanceStateChange> value);
    internal bool IsSetStartingInstances();
}
public class Amazon.EC2.Model.StateReason : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.StopInstancesRequest : AmazonEC2Request {
    private Nullable`1<bool> _force;
    private List`1<string> _instanceIds;
    public bool Force { get; public set; }
    public List`1<string> InstanceIds { get; public set; }
    public StopInstancesRequest(List`1<string> instanceIds);
    public bool get_Force();
    public void set_Force(bool value);
    internal bool IsSetForce();
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.StopInstancesResponse : StopInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the StopInstancesResult class are now available on the StopInstancesResponse class. You should use the properties on StopInstancesResponse instead of accessing them through StopInstancesResult.")]
public StopInstancesResult StopInstancesResult { get; }
    public StopInstancesResult get_StopInstancesResult();
}
public class Amazon.EC2.Model.StopInstancesResult : AmazonWebServiceResponse {
    private List`1<InstanceStateChange> _stoppingInstances;
    public List`1<InstanceStateChange> StoppingInstances { get; public set; }
    public List`1<InstanceStateChange> get_StoppingInstances();
    public void set_StoppingInstances(List`1<InstanceStateChange> value);
    internal bool IsSetStoppingInstances();
}
public class Amazon.EC2.Model.Storage : object {
    private S3Storage _s3;
    public S3Storage S3 { get; public set; }
    public S3Storage get_S3();
    public void set_S3(S3Storage value);
    internal bool IsSetS3();
}
public class Amazon.EC2.Model.Subnet : object {
    private string _availabilityZone;
    private Nullable`1<int> _availableIpAddressCount;
    private string _cidrBlock;
    private Nullable`1<bool> _defaultForAz;
    private Nullable`1<bool> _mapPublicIpOnLaunch;
    private SubnetState _state;
    private string _subnetId;
    private List`1<Tag> _tags;
    private string _vpcId;
    public string AvailabilityZone { get; public set; }
    public int AvailableIpAddressCount { get; public set; }
    public string CidrBlock { get; public set; }
    public bool DefaultForAz { get; public set; }
    public bool MapPublicIpOnLaunch { get; public set; }
    public SubnetState State { get; public set; }
    public string SubnetId { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public int get_AvailableIpAddressCount();
    public void set_AvailableIpAddressCount(int value);
    internal bool IsSetAvailableIpAddressCount();
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public bool get_DefaultForAz();
    public void set_DefaultForAz(bool value);
    internal bool IsSetDefaultForAz();
    public bool get_MapPublicIpOnLaunch();
    public void set_MapPublicIpOnLaunch(bool value);
    internal bool IsSetMapPublicIpOnLaunch();
    public SubnetState get_State();
    public void set_State(SubnetState value);
    internal bool IsSetState();
    public string get_SubnetId();
    public void set_SubnetId(string value);
    internal bool IsSetSubnetId();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.Tag : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public Tag(string key, string value);
    public Tag(string key);
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.TagDescription : object {
    private string _key;
    private string _resourceId;
    private ResourceType _resourceType;
    private string _value;
    public string Key { get; public set; }
    public string ResourceId { get; public set; }
    public ResourceType ResourceType { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.EC2.Model.TerminateInstancesRequest : AmazonEC2Request {
    private List`1<string> _instanceIds;
    public List`1<string> InstanceIds { get; public set; }
    public TerminateInstancesRequest(List`1<string> instanceIds);
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.TerminateInstancesResponse : TerminateInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the TerminateInstancesResult class are now available on the TerminateInstancesResponse class. You should use the properties on TerminateInstancesResponse instead of accessing them through TerminateInstancesResult.")]
public TerminateInstancesResult TerminateInstancesResult { get; }
    public TerminateInstancesResult get_TerminateInstancesResult();
}
public class Amazon.EC2.Model.TerminateInstancesResult : AmazonWebServiceResponse {
    private List`1<InstanceStateChange> _terminatingInstances;
    public List`1<InstanceStateChange> TerminatingInstances { get; public set; }
    public List`1<InstanceStateChange> get_TerminatingInstances();
    public void set_TerminatingInstances(List`1<InstanceStateChange> value);
    internal bool IsSetTerminatingInstances();
}
public class Amazon.EC2.Model.UnassignPrivateIpAddressesRequest : AmazonEC2Request {
    private string _networkInterfaceId;
    private List`1<string> _privateIpAddresses;
    public string NetworkInterfaceId { get; public set; }
    public List`1<string> PrivateIpAddresses { get; public set; }
    public string get_NetworkInterfaceId();
    public void set_NetworkInterfaceId(string value);
    internal bool IsSetNetworkInterfaceId();
    public List`1<string> get_PrivateIpAddresses();
    public void set_PrivateIpAddresses(List`1<string> value);
    internal bool IsSetPrivateIpAddresses();
}
public class Amazon.EC2.Model.UnassignPrivateIpAddressesResponse : AmazonWebServiceResponse {
}
public class Amazon.EC2.Model.UnmonitorInstancesRequest : AmazonEC2Request {
    private List`1<string> _instanceIds;
    public List`1<string> InstanceIds { get; public set; }
    public UnmonitorInstancesRequest(List`1<string> instanceIds);
    public List`1<string> get_InstanceIds();
    public void set_InstanceIds(List`1<string> value);
    internal bool IsSetInstanceIds();
}
public class Amazon.EC2.Model.UnmonitorInstancesResponse : UnmonitorInstancesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UnmonitorInstancesResult class are now available on the UnmonitorInstancesResponse class. You should use the properties on UnmonitorInstancesResponse instead of accessing them through UnmonitorInstancesResult.")]
public UnmonitorInstancesResult UnmonitorInstancesResult { get; }
    public UnmonitorInstancesResult get_UnmonitorInstancesResult();
}
public class Amazon.EC2.Model.UnmonitorInstancesResult : AmazonWebServiceResponse {
    private List`1<InstanceMonitoring> _instanceMonitorings;
    public List`1<InstanceMonitoring> InstanceMonitorings { get; public set; }
    public List`1<InstanceMonitoring> get_InstanceMonitorings();
    public void set_InstanceMonitorings(List`1<InstanceMonitoring> value);
    internal bool IsSetInstanceMonitorings();
}
public class Amazon.EC2.Model.UnsuccessfulItem : object {
    private UnsuccessfulItemError _error;
    private string _resourceId;
    public UnsuccessfulItemError Error { get; public set; }
    public string ResourceId { get; public set; }
    public UnsuccessfulItemError get_Error();
    public void set_Error(UnsuccessfulItemError value);
    internal bool IsSetError();
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
}
public class Amazon.EC2.Model.UnsuccessfulItemError : object {
    private string _code;
    private string _message;
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.UserBucket : object {
    private string _s3Bucket;
    private string _s3Key;
    public string S3Bucket { get; public set; }
    public string S3Key { get; public set; }
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
}
public class Amazon.EC2.Model.UserBucketDetails : object {
    private string _s3Bucket;
    private string _s3Key;
    public string S3Bucket { get; public set; }
    public string S3Key { get; public set; }
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
}
public class Amazon.EC2.Model.UserData : object {
    private string _data;
    public string Data { get; public set; }
    public string get_Data();
    public void set_Data(string value);
    internal bool IsSetData();
}
public class Amazon.EC2.Model.UserIdGroupPair : object {
    private string _groupId;
    private string _groupName;
    private string _userId;
    public string GroupId { get; public set; }
    public string GroupName { get; public set; }
    public string UserId { get; public set; }
    public string get_GroupId();
    public void set_GroupId(string value);
    internal bool IsSetGroupId();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_UserId();
    public void set_UserId(string value);
    internal bool IsSetUserId();
}
public class Amazon.EC2.Model.VgwTelemetry : object {
    private Nullable`1<int> _acceptedRouteCount;
    private Nullable`1<DateTime> _lastStatusChange;
    private string _outsideIpAddress;
    private TelemetryStatus _status;
    private string _statusMessage;
    public int AcceptedRouteCount { get; public set; }
    public DateTime LastStatusChange { get; public set; }
    public string OutsideIpAddress { get; public set; }
    public TelemetryStatus Status { get; public set; }
    public string StatusMessage { get; public set; }
    public int get_AcceptedRouteCount();
    public void set_AcceptedRouteCount(int value);
    internal bool IsSetAcceptedRouteCount();
    public DateTime get_LastStatusChange();
    public void set_LastStatusChange(DateTime value);
    internal bool IsSetLastStatusChange();
    public string get_OutsideIpAddress();
    public void set_OutsideIpAddress(string value);
    internal bool IsSetOutsideIpAddress();
    public TelemetryStatus get_Status();
    public void set_Status(TelemetryStatus value);
    internal bool IsSetStatus();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
}
public class Amazon.EC2.Model.Volume : object {
    private List`1<VolumeAttachment> _attachments;
    private string _availabilityZone;
    private Nullable`1<DateTime> _createTime;
    private Nullable`1<bool> _encrypted;
    private Nullable`1<int> _iops;
    private string _kmsKeyId;
    private Nullable`1<int> _size;
    private string _snapshotId;
    private VolumeState _state;
    private List`1<Tag> _tags;
    private string _volumeId;
    private VolumeType _volumeType;
    public List`1<VolumeAttachment> Attachments { get; public set; }
    public string AvailabilityZone { get; public set; }
    public DateTime CreateTime { get; public set; }
    public bool Encrypted { get; public set; }
    public int Iops { get; public set; }
    public string KmsKeyId { get; public set; }
    public int Size { get; public set; }
    public string SnapshotId { get; public set; }
    public VolumeState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VolumeId { get; public set; }
    public VolumeType VolumeType { get; public set; }
    public List`1<VolumeAttachment> get_Attachments();
    public void set_Attachments(List`1<VolumeAttachment> value);
    internal bool IsSetAttachments();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public DateTime get_CreateTime();
    public void set_CreateTime(DateTime value);
    internal bool IsSetCreateTime();
    public bool get_Encrypted();
    public void set_Encrypted(bool value);
    internal bool IsSetEncrypted();
    public int get_Iops();
    public void set_Iops(int value);
    internal bool IsSetIops();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public int get_Size();
    public void set_Size(int value);
    internal bool IsSetSize();
    public string get_SnapshotId();
    public void set_SnapshotId(string value);
    internal bool IsSetSnapshotId();
    public VolumeState get_State();
    public void set_State(VolumeState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public VolumeType get_VolumeType();
    public void set_VolumeType(VolumeType value);
    internal bool IsSetVolumeType();
}
public class Amazon.EC2.Model.VolumeAttachment : object {
    private Nullable`1<DateTime> _attachTime;
    private Nullable`1<bool> _deleteOnTermination;
    private string _device;
    private string _instanceId;
    private VolumeAttachmentState _state;
    private string _volumeId;
    public DateTime AttachTime { get; public set; }
    public bool DeleteOnTermination { get; public set; }
    public string Device { get; public set; }
    public string InstanceId { get; public set; }
    public VolumeAttachmentState State { get; public set; }
    public string VolumeId { get; public set; }
    public DateTime get_AttachTime();
    public void set_AttachTime(DateTime value);
    internal bool IsSetAttachTime();
    public bool get_DeleteOnTermination();
    public void set_DeleteOnTermination(bool value);
    internal bool IsSetDeleteOnTermination();
    public string get_Device();
    public void set_Device(string value);
    internal bool IsSetDevice();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public VolumeAttachmentState get_State();
    public void set_State(VolumeAttachmentState value);
    internal bool IsSetState();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
}
public class Amazon.EC2.Model.VolumeDetail : object {
    private Nullable`1<long> _size;
    public long Size { get; public set; }
    public long get_Size();
    public void set_Size(long value);
    internal bool IsSetSize();
}
public class Amazon.EC2.Model.VolumeStatusAction : object {
    private string _code;
    private string _description;
    private string _eventId;
    private string _eventType;
    public string Code { get; public set; }
    public string Description { get; public set; }
    public string EventId { get; public set; }
    public string EventType { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_EventId();
    public void set_EventId(string value);
    internal bool IsSetEventId();
    public string get_EventType();
    public void set_EventType(string value);
    internal bool IsSetEventType();
}
public class Amazon.EC2.Model.VolumeStatusDetails : object {
    private VolumeStatusName _name;
    private string _status;
    public VolumeStatusName Name { get; public set; }
    public string Status { get; public set; }
    public VolumeStatusName get_Name();
    public void set_Name(VolumeStatusName value);
    internal bool IsSetName();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.VolumeStatusEvent : object {
    private string _description;
    private string _eventId;
    private string _eventType;
    private Nullable`1<DateTime> _notAfter;
    private Nullable`1<DateTime> _notBefore;
    public string Description { get; public set; }
    public string EventId { get; public set; }
    public string EventType { get; public set; }
    public DateTime NotAfter { get; public set; }
    public DateTime NotBefore { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_EventId();
    public void set_EventId(string value);
    internal bool IsSetEventId();
    public string get_EventType();
    public void set_EventType(string value);
    internal bool IsSetEventType();
    public DateTime get_NotAfter();
    public void set_NotAfter(DateTime value);
    internal bool IsSetNotAfter();
    public DateTime get_NotBefore();
    public void set_NotBefore(DateTime value);
    internal bool IsSetNotBefore();
}
public class Amazon.EC2.Model.VolumeStatusInfo : object {
    private List`1<VolumeStatusDetails> _details;
    private VolumeStatusInfoStatus _status;
    public List`1<VolumeStatusDetails> Details { get; public set; }
    public VolumeStatusInfoStatus Status { get; public set; }
    public List`1<VolumeStatusDetails> get_Details();
    public void set_Details(List`1<VolumeStatusDetails> value);
    internal bool IsSetDetails();
    public VolumeStatusInfoStatus get_Status();
    public void set_Status(VolumeStatusInfoStatus value);
    internal bool IsSetStatus();
}
public class Amazon.EC2.Model.VolumeStatusItem : object {
    private List`1<VolumeStatusAction> _actions;
    private string _availabilityZone;
    private List`1<VolumeStatusEvent> _events;
    private string _volumeId;
    private VolumeStatusInfo _volumeStatus;
    public List`1<VolumeStatusAction> Actions { get; public set; }
    public string AvailabilityZone { get; public set; }
    public List`1<VolumeStatusEvent> Events { get; public set; }
    public string VolumeId { get; public set; }
    public VolumeStatusInfo VolumeStatus { get; public set; }
    public List`1<VolumeStatusAction> get_Actions();
    public void set_Actions(List`1<VolumeStatusAction> value);
    internal bool IsSetActions();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public List`1<VolumeStatusEvent> get_Events();
    public void set_Events(List`1<VolumeStatusEvent> value);
    internal bool IsSetEvents();
    public string get_VolumeId();
    public void set_VolumeId(string value);
    internal bool IsSetVolumeId();
    public VolumeStatusInfo get_VolumeStatus();
    public void set_VolumeStatus(VolumeStatusInfo value);
    internal bool IsSetVolumeStatus();
}
public class Amazon.EC2.Model.Vpc : object {
    private string _cidrBlock;
    private string _dhcpOptionsId;
    private Tenancy _instanceTenancy;
    private Nullable`1<bool> _isDefault;
    private VpcState _state;
    private List`1<Tag> _tags;
    private string _vpcId;
    public string CidrBlock { get; public set; }
    public string DhcpOptionsId { get; public set; }
    public Tenancy InstanceTenancy { get; public set; }
    public bool IsDefault { get; public set; }
    public VpcState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public string get_DhcpOptionsId();
    public void set_DhcpOptionsId(string value);
    internal bool IsSetDhcpOptionsId();
    public Tenancy get_InstanceTenancy();
    public void set_InstanceTenancy(Tenancy value);
    internal bool IsSetInstanceTenancy();
    public bool get_IsDefault();
    public void set_IsDefault(bool value);
    internal bool IsSetIsDefault();
    public VpcState get_State();
    public void set_State(VpcState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.VpcAttachment : object {
    private AttachmentStatus _state;
    private string _vpcId;
    public AttachmentStatus State { get; public set; }
    public string VpcId { get; public set; }
    public AttachmentStatus get_State();
    public void set_State(AttachmentStatus value);
    internal bool IsSetState();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.VpcClassicLink : object {
    private Nullable`1<bool> _classicLinkEnabled;
    private List`1<Tag> _tags;
    private string _vpcId;
    public bool ClassicLinkEnabled { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcId { get; public set; }
    public bool get_ClassicLinkEnabled();
    public void set_ClassicLinkEnabled(bool value);
    internal bool IsSetClassicLinkEnabled();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.VpcEndpoint : object {
    private Nullable`1<DateTime> _creationTimestamp;
    private string _policyDocument;
    private List`1<string> _routeTableIds;
    private string _serviceName;
    private State _state;
    private string _vpcEndpointId;
    private string _vpcId;
    public DateTime CreationTimestamp { get; public set; }
    public string PolicyDocument { get; public set; }
    public List`1<string> RouteTableIds { get; public set; }
    public string ServiceName { get; public set; }
    public State State { get; public set; }
    public string VpcEndpointId { get; public set; }
    public string VpcId { get; public set; }
    public DateTime get_CreationTimestamp();
    public void set_CreationTimestamp(DateTime value);
    internal bool IsSetCreationTimestamp();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public List`1<string> get_RouteTableIds();
    public void set_RouteTableIds(List`1<string> value);
    internal bool IsSetRouteTableIds();
    public string get_ServiceName();
    public void set_ServiceName(string value);
    internal bool IsSetServiceName();
    public State get_State();
    public void set_State(State value);
    internal bool IsSetState();
    public string get_VpcEndpointId();
    public void set_VpcEndpointId(string value);
    internal bool IsSetVpcEndpointId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.VpcPeeringConnection : object {
    private VpcPeeringConnectionVpcInfo _accepterVpcInfo;
    private Nullable`1<DateTime> _expirationTime;
    private VpcPeeringConnectionVpcInfo _requesterVpcInfo;
    private VpcPeeringConnectionStateReason _status;
    private List`1<Tag> _tags;
    private string _vpcPeeringConnectionId;
    public VpcPeeringConnectionVpcInfo AccepterVpcInfo { get; public set; }
    public DateTime ExpirationTime { get; public set; }
    public VpcPeeringConnectionVpcInfo RequesterVpcInfo { get; public set; }
    public VpcPeeringConnectionStateReason Status { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string VpcPeeringConnectionId { get; public set; }
    public VpcPeeringConnectionVpcInfo get_AccepterVpcInfo();
    public void set_AccepterVpcInfo(VpcPeeringConnectionVpcInfo value);
    internal bool IsSetAccepterVpcInfo();
    public DateTime get_ExpirationTime();
    public void set_ExpirationTime(DateTime value);
    internal bool IsSetExpirationTime();
    public VpcPeeringConnectionVpcInfo get_RequesterVpcInfo();
    public void set_RequesterVpcInfo(VpcPeeringConnectionVpcInfo value);
    internal bool IsSetRequesterVpcInfo();
    public VpcPeeringConnectionStateReason get_Status();
    public void set_Status(VpcPeeringConnectionStateReason value);
    internal bool IsSetStatus();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_VpcPeeringConnectionId();
    public void set_VpcPeeringConnectionId(string value);
    internal bool IsSetVpcPeeringConnectionId();
}
public class Amazon.EC2.Model.VpcPeeringConnectionStateReason : object {
    private VpcPeeringConnectionStateReasonCode _code;
    private string _message;
    public VpcPeeringConnectionStateReasonCode Code { get; public set; }
    public string Message { get; public set; }
    public VpcPeeringConnectionStateReasonCode get_Code();
    public void set_Code(VpcPeeringConnectionStateReasonCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.EC2.Model.VpcPeeringConnectionVpcInfo : object {
    private string _cidrBlock;
    private string _ownerId;
    private string _vpcId;
    public string CidrBlock { get; public set; }
    public string OwnerId { get; public set; }
    public string VpcId { get; public set; }
    public string get_CidrBlock();
    public void set_CidrBlock(string value);
    internal bool IsSetCidrBlock();
    public string get_OwnerId();
    public void set_OwnerId(string value);
    internal bool IsSetOwnerId();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.EC2.Model.VpnConnection : object {
    private string _customerGatewayConfiguration;
    private string _customerGatewayId;
    private VpnConnectionOptions _options;
    private List`1<VpnStaticRoute> _routes;
    private VpnState _state;
    private List`1<Tag> _tags;
    private GatewayType _type;
    private List`1<VgwTelemetry> _vgwTelemetry;
    private string _vpnConnectionId;
    private string _vpnGatewayId;
    public string CustomerGatewayConfiguration { get; public set; }
    public string CustomerGatewayId { get; public set; }
    public VpnConnectionOptions Options { get; public set; }
    public List`1<VpnStaticRoute> Routes { get; public set; }
    public VpnState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public GatewayType Type { get; public set; }
    public List`1<VgwTelemetry> VgwTelemetry { get; public set; }
    public string VpnConnectionId { get; public set; }
    public string VpnGatewayId { get; public set; }
    public string get_CustomerGatewayConfiguration();
    public void set_CustomerGatewayConfiguration(string value);
    internal bool IsSetCustomerGatewayConfiguration();
    public string get_CustomerGatewayId();
    public void set_CustomerGatewayId(string value);
    internal bool IsSetCustomerGatewayId();
    public VpnConnectionOptions get_Options();
    public void set_Options(VpnConnectionOptions value);
    internal bool IsSetOptions();
    public List`1<VpnStaticRoute> get_Routes();
    public void set_Routes(List`1<VpnStaticRoute> value);
    internal bool IsSetRoutes();
    public VpnState get_State();
    public void set_State(VpnState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public GatewayType get_Type();
    public void set_Type(GatewayType value);
    internal bool IsSetType();
    public List`1<VgwTelemetry> get_VgwTelemetry();
    public void set_VgwTelemetry(List`1<VgwTelemetry> value);
    internal bool IsSetVgwTelemetry();
    public string get_VpnConnectionId();
    public void set_VpnConnectionId(string value);
    internal bool IsSetVpnConnectionId();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.VpnConnectionOptions : object {
    private Nullable`1<bool> _staticRoutesOnly;
    public bool StaticRoutesOnly { get; public set; }
    public bool get_StaticRoutesOnly();
    public void set_StaticRoutesOnly(bool value);
    internal bool IsSetStaticRoutesOnly();
}
public class Amazon.EC2.Model.VpnConnectionOptionsSpecification : object {
    private Nullable`1<bool> _staticRoutesOnly;
    public bool StaticRoutesOnly { get; public set; }
    public bool get_StaticRoutesOnly();
    public void set_StaticRoutesOnly(bool value);
    internal bool IsSetStaticRoutesOnly();
}
public class Amazon.EC2.Model.VpnGateway : object {
    private string _availabilityZone;
    private VpnState _state;
    private List`1<Tag> _tags;
    private GatewayType _type;
    private List`1<VpcAttachment> _vpcAttachments;
    private string _vpnGatewayId;
    public string AvailabilityZone { get; public set; }
    public VpnState State { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public GatewayType Type { get; public set; }
    public List`1<VpcAttachment> VpcAttachments { get; public set; }
    public string VpnGatewayId { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public VpnState get_State();
    public void set_State(VpnState value);
    internal bool IsSetState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public GatewayType get_Type();
    public void set_Type(GatewayType value);
    internal bool IsSetType();
    public List`1<VpcAttachment> get_VpcAttachments();
    public void set_VpcAttachments(List`1<VpcAttachment> value);
    internal bool IsSetVpcAttachments();
    public string get_VpnGatewayId();
    public void set_VpnGatewayId(string value);
    internal bool IsSetVpnGatewayId();
}
public class Amazon.EC2.Model.VpnStaticRoute : object {
    private string _destinationCidrBlock;
    private VpnStaticRouteSource _source;
    private VpnState _state;
    public string DestinationCidrBlock { get; public set; }
    public VpnStaticRouteSource Source { get; public set; }
    public VpnState State { get; public set; }
    public string get_DestinationCidrBlock();
    public void set_DestinationCidrBlock(string value);
    internal bool IsSetDestinationCidrBlock();
    public VpnStaticRouteSource get_Source();
    public void set_Source(VpnStaticRouteSource value);
    internal bool IsSetSource();
    public VpnState get_State();
    public void set_State(VpnState value);
    internal bool IsSetState();
}
public class Amazon.EC2.MonitoringState : ConstantClass {
    public static MonitoringState Disabled;
    public static MonitoringState Disabling;
    public static MonitoringState Enabled;
    public static MonitoringState Pending;
    public MonitoringState(string value);
    private static MonitoringState();
    public static MonitoringState FindValue(string value);
    public static MonitoringState op_Implicit(string value);
}
public class Amazon.EC2.MoveStatus : ConstantClass {
    public static MoveStatus MovingToVpc;
    public static MoveStatus RestoringToClassic;
    public MoveStatus(string value);
    private static MoveStatus();
    public static MoveStatus FindValue(string value);
    public static MoveStatus op_Implicit(string value);
}
public class Amazon.EC2.NetworkInterfaceAttribute : ConstantClass {
    public static NetworkInterfaceAttribute Attachment;
    public static NetworkInterfaceAttribute Description;
    public static NetworkInterfaceAttribute GroupSet;
    public static NetworkInterfaceAttribute SourceDestCheck;
    public NetworkInterfaceAttribute(string value);
    private static NetworkInterfaceAttribute();
    public static NetworkInterfaceAttribute FindValue(string value);
    public static NetworkInterfaceAttribute op_Implicit(string value);
}
public class Amazon.EC2.NetworkInterfaceStatus : ConstantClass {
    public static NetworkInterfaceStatus Attaching;
    public static NetworkInterfaceStatus Available;
    public static NetworkInterfaceStatus Detaching;
    public static NetworkInterfaceStatus InUse;
    public NetworkInterfaceStatus(string value);
    private static NetworkInterfaceStatus();
    public static NetworkInterfaceStatus FindValue(string value);
    public static NetworkInterfaceStatus op_Implicit(string value);
}
public class Amazon.EC2.OfferingTypeValues : ConstantClass {
    public static OfferingTypeValues AllUpfront;
    public static OfferingTypeValues HeavyUtilization;
    public static OfferingTypeValues LightUtilization;
    public static OfferingTypeValues MediumUtilization;
    public static OfferingTypeValues NoUpfront;
    public static OfferingTypeValues PartialUpfront;
    public OfferingTypeValues(string value);
    private static OfferingTypeValues();
    public static OfferingTypeValues FindValue(string value);
    public static OfferingTypeValues op_Implicit(string value);
}
public class Amazon.EC2.OperationType : ConstantClass {
    public static OperationType Add;
    public static OperationType Remove;
    public OperationType(string value);
    private static OperationType();
    public static OperationType FindValue(string value);
    public static OperationType op_Implicit(string value);
}
public class Amazon.EC2.PermissionGroup : ConstantClass {
    public static PermissionGroup All;
    public PermissionGroup(string value);
    private static PermissionGroup();
    public static PermissionGroup FindValue(string value);
    public static PermissionGroup op_Implicit(string value);
}
public class Amazon.EC2.PlacementGroupState : ConstantClass {
    public static PlacementGroupState Available;
    public static PlacementGroupState Deleted;
    public static PlacementGroupState Deleting;
    public static PlacementGroupState Pending;
    public PlacementGroupState(string value);
    private static PlacementGroupState();
    public static PlacementGroupState FindValue(string value);
    public static PlacementGroupState op_Implicit(string value);
}
public class Amazon.EC2.PlacementStrategy : ConstantClass {
    public static PlacementStrategy Cluster;
    public PlacementStrategy(string value);
    private static PlacementStrategy();
    public static PlacementStrategy FindValue(string value);
    public static PlacementStrategy op_Implicit(string value);
}
public class Amazon.EC2.PlatformValues : ConstantClass {
    public static PlatformValues Windows;
    public PlatformValues(string value);
    private static PlatformValues();
    public static PlatformValues FindValue(string value);
    public static PlatformValues op_Implicit(string value);
}
public class Amazon.EC2.ProductCodeValues : ConstantClass {
    public static ProductCodeValues Devpay;
    public static ProductCodeValues Marketplace;
    public ProductCodeValues(string value);
    private static ProductCodeValues();
    public static ProductCodeValues FindValue(string value);
    public static ProductCodeValues op_Implicit(string value);
}
public class Amazon.EC2.RecurringChargeFrequency : ConstantClass {
    public static RecurringChargeFrequency Hourly;
    public RecurringChargeFrequency(string value);
    private static RecurringChargeFrequency();
    public static RecurringChargeFrequency FindValue(string value);
    public static RecurringChargeFrequency op_Implicit(string value);
}
public class Amazon.EC2.ReportInstanceReasonCodes : ConstantClass {
    public static ReportInstanceReasonCodes InstanceStuckInState;
    public static ReportInstanceReasonCodes NotAcceptingCredentials;
    public static ReportInstanceReasonCodes Other;
    public static ReportInstanceReasonCodes PasswordNotAvailable;
    public static ReportInstanceReasonCodes PerformanceEbsVolume;
    public static ReportInstanceReasonCodes PerformanceInstanceStore;
    public static ReportInstanceReasonCodes PerformanceNetwork;
    public static ReportInstanceReasonCodes PerformanceOther;
    public static ReportInstanceReasonCodes Unresponsive;
    public ReportInstanceReasonCodes(string value);
    private static ReportInstanceReasonCodes();
    public static ReportInstanceReasonCodes FindValue(string value);
    public static ReportInstanceReasonCodes op_Implicit(string value);
}
public class Amazon.EC2.ReportStatusType : ConstantClass {
    public static ReportStatusType Impaired;
    public static ReportStatusType Ok;
    public ReportStatusType(string value);
    private static ReportStatusType();
    public static ReportStatusType FindValue(string value);
    public static ReportStatusType op_Implicit(string value);
}
public class Amazon.EC2.ReservedInstanceState : ConstantClass {
    public static ReservedInstanceState Active;
    public static ReservedInstanceState PaymentFailed;
    public static ReservedInstanceState PaymentPending;
    public static ReservedInstanceState Retired;
    public ReservedInstanceState(string value);
    private static ReservedInstanceState();
    public static ReservedInstanceState FindValue(string value);
    public static ReservedInstanceState op_Implicit(string value);
}
public class Amazon.EC2.ResetImageAttributeName : ConstantClass {
    public static ResetImageAttributeName LaunchPermission;
    public ResetImageAttributeName(string value);
    private static ResetImageAttributeName();
    public static ResetImageAttributeName FindValue(string value);
    public static ResetImageAttributeName op_Implicit(string value);
}
public class Amazon.EC2.ResourceType : ConstantClass {
    public static ResourceType CustomerGateway;
    public static ResourceType DhcpOptions;
    public static ResourceType Image;
    public static ResourceType Instance;
    public static ResourceType InternetGateway;
    public static ResourceType NetworkAcl;
    public static ResourceType NetworkInterface;
    public static ResourceType ReservedInstances;
    public static ResourceType RouteTable;
    public static ResourceType SecurityGroup;
    public static ResourceType Snapshot;
    public static ResourceType SpotInstancesRequest;
    public static ResourceType Subnet;
    public static ResourceType Volume;
    public static ResourceType Vpc;
    public static ResourceType VpnConnection;
    public static ResourceType VpnGateway;
    public ResourceType(string value);
    private static ResourceType();
    public static ResourceType FindValue(string value);
    public static ResourceType op_Implicit(string value);
}
public class Amazon.EC2.RIProductDescription : ConstantClass {
    public static RIProductDescription LinuxUNIX;
    public static RIProductDescription LinuxUNIXAmazonVPC;
    public static RIProductDescription Windows;
    public static RIProductDescription WindowsAmazonVPC;
    public RIProductDescription(string value);
    private static RIProductDescription();
    public static RIProductDescription FindValue(string value);
    public static RIProductDescription op_Implicit(string value);
}
public class Amazon.EC2.RouteOrigin : ConstantClass {
    public static RouteOrigin CreateRoute;
    public static RouteOrigin CreateRouteTable;
    public static RouteOrigin EnableVgwRoutePropagation;
    public RouteOrigin(string value);
    private static RouteOrigin();
    public static RouteOrigin FindValue(string value);
    public static RouteOrigin op_Implicit(string value);
}
public class Amazon.EC2.RouteState : ConstantClass {
    public static RouteState Active;
    public static RouteState Blackhole;
    public RouteState(string value);
    private static RouteState();
    public static RouteState FindValue(string value);
    public static RouteState op_Implicit(string value);
}
public class Amazon.EC2.RuleAction : ConstantClass {
    public static RuleAction Allow;
    public static RuleAction Deny;
    public RuleAction(string value);
    private static RuleAction();
    public static RuleAction FindValue(string value);
    public static RuleAction op_Implicit(string value);
}
public class Amazon.EC2.ShutdownBehavior : ConstantClass {
    public static ShutdownBehavior Stop;
    public static ShutdownBehavior Terminate;
    public ShutdownBehavior(string value);
    private static ShutdownBehavior();
    public static ShutdownBehavior FindValue(string value);
    public static ShutdownBehavior op_Implicit(string value);
}
public class Amazon.EC2.SnapshotAttributeName : ConstantClass {
    public static SnapshotAttributeName CreateVolumePermission;
    public static SnapshotAttributeName ProductCodes;
    public SnapshotAttributeName(string value);
    private static SnapshotAttributeName();
    public static SnapshotAttributeName FindValue(string value);
    public static SnapshotAttributeName op_Implicit(string value);
}
public class Amazon.EC2.SnapshotState : ConstantClass {
    public static SnapshotState Completed;
    public static SnapshotState Error;
    public static SnapshotState Pending;
    public SnapshotState(string value);
    private static SnapshotState();
    public static SnapshotState FindValue(string value);
    public static SnapshotState op_Implicit(string value);
}
public class Amazon.EC2.SpotInstanceState : ConstantClass {
    public static SpotInstanceState Active;
    public static SpotInstanceState Cancelled;
    public static SpotInstanceState Closed;
    public static SpotInstanceState Failed;
    public static SpotInstanceState Open;
    public SpotInstanceState(string value);
    private static SpotInstanceState();
    public static SpotInstanceState FindValue(string value);
    public static SpotInstanceState op_Implicit(string value);
}
public class Amazon.EC2.SpotInstanceType : ConstantClass {
    public static SpotInstanceType OneTime;
    public static SpotInstanceType Persistent;
    public SpotInstanceType(string value);
    private static SpotInstanceType();
    public static SpotInstanceType FindValue(string value);
    public static SpotInstanceType op_Implicit(string value);
}
public class Amazon.EC2.State : ConstantClass {
    public static State Available;
    public static State Deleted;
    public static State Deleting;
    public static State Pending;
    public State(string value);
    private static State();
    public static State FindValue(string value);
    public static State op_Implicit(string value);
}
public class Amazon.EC2.Status : ConstantClass {
    public static Status InClassic;
    public static Status InVpc;
    public static Status MoveInProgress;
    public Status(string value);
    private static Status();
    public static Status FindValue(string value);
    public static Status op_Implicit(string value);
}
public class Amazon.EC2.StatusName : ConstantClass {
    public static StatusName Reachability;
    public StatusName(string value);
    private static StatusName();
    public static StatusName FindValue(string value);
    public static StatusName op_Implicit(string value);
}
public class Amazon.EC2.StatusType : ConstantClass {
    public static StatusType Failed;
    public static StatusType Initializing;
    public static StatusType InsufficientData;
    public static StatusType Passed;
    public StatusType(string value);
    private static StatusType();
    public static StatusType FindValue(string value);
    public static StatusType op_Implicit(string value);
}
public class Amazon.EC2.SubnetState : ConstantClass {
    public static SubnetState Available;
    public static SubnetState Pending;
    public SubnetState(string value);
    private static SubnetState();
    public static SubnetState FindValue(string value);
    public static SubnetState op_Implicit(string value);
}
public class Amazon.EC2.SummaryStatus : ConstantClass {
    public static SummaryStatus Impaired;
    public static SummaryStatus Initializing;
    public static SummaryStatus InsufficientData;
    public static SummaryStatus NotApplicable;
    public static SummaryStatus Ok;
    public SummaryStatus(string value);
    private static SummaryStatus();
    public static SummaryStatus FindValue(string value);
    public static SummaryStatus op_Implicit(string value);
}
public class Amazon.EC2.TelemetryStatus : ConstantClass {
    public static TelemetryStatus DOWN;
    public static TelemetryStatus UP;
    public TelemetryStatus(string value);
    private static TelemetryStatus();
    public static TelemetryStatus FindValue(string value);
    public static TelemetryStatus op_Implicit(string value);
}
public class Amazon.EC2.Tenancy : ConstantClass {
    public static Tenancy Dedicated;
    public static Tenancy Default;
    public Tenancy(string value);
    private static Tenancy();
    public static Tenancy FindValue(string value);
    public static Tenancy op_Implicit(string value);
}
public class Amazon.EC2.TrafficType : ConstantClass {
    public static TrafficType ACCEPT;
    public static TrafficType ALL;
    public static TrafficType REJECT;
    public TrafficType(string value);
    private static TrafficType();
    public static TrafficType FindValue(string value);
    public static TrafficType op_Implicit(string value);
}
public class Amazon.EC2.Util.S3UploadPolicy : object {
    private string policySignature;
    private string policyString;
    private string awsSecretAccessKey;
    public string PolicyString { get; }
    public string PolicySignature { get; }
    public S3UploadPolicy(string awsSecretAccessKey, string bucketName, string prefix, int expireInMinutes);
    private static string BuildPolicyString(string bucketName, string prefix, int expireInMinutes);
    public string get_PolicyString();
    public string get_PolicySignature();
}
public class Amazon.EC2.VirtualizationType : ConstantClass {
    public static VirtualizationType Hvm;
    public static VirtualizationType Paravirtual;
    public VirtualizationType(string value);
    private static VirtualizationType();
    public static VirtualizationType FindValue(string value);
    public static VirtualizationType op_Implicit(string value);
}
public class Amazon.EC2.VolumeAttachmentState : ConstantClass {
    public static VolumeAttachmentState Attached;
    public static VolumeAttachmentState Attaching;
    public static VolumeAttachmentState Detached;
    public static VolumeAttachmentState Detaching;
    public VolumeAttachmentState(string value);
    private static VolumeAttachmentState();
    public static VolumeAttachmentState FindValue(string value);
    public static VolumeAttachmentState op_Implicit(string value);
}
public class Amazon.EC2.VolumeAttributeName : ConstantClass {
    public static VolumeAttributeName AutoEnableIO;
    public static VolumeAttributeName ProductCodes;
    public VolumeAttributeName(string value);
    private static VolumeAttributeName();
    public static VolumeAttributeName FindValue(string value);
    public static VolumeAttributeName op_Implicit(string value);
}
public class Amazon.EC2.VolumeState : ConstantClass {
    public static VolumeState Available;
    public static VolumeState Creating;
    public static VolumeState Deleted;
    public static VolumeState Deleting;
    public static VolumeState Error;
    public static VolumeState InUse;
    public VolumeState(string value);
    private static VolumeState();
    public static VolumeState FindValue(string value);
    public static VolumeState op_Implicit(string value);
}
public class Amazon.EC2.VolumeStatusInfoStatus : ConstantClass {
    public static VolumeStatusInfoStatus Impaired;
    public static VolumeStatusInfoStatus InsufficientData;
    public static VolumeStatusInfoStatus Ok;
    public VolumeStatusInfoStatus(string value);
    private static VolumeStatusInfoStatus();
    public static VolumeStatusInfoStatus FindValue(string value);
    public static VolumeStatusInfoStatus op_Implicit(string value);
}
public class Amazon.EC2.VolumeStatusName : ConstantClass {
    public static VolumeStatusName IoEnabled;
    public static VolumeStatusName IoPerformance;
    public VolumeStatusName(string value);
    private static VolumeStatusName();
    public static VolumeStatusName FindValue(string value);
    public static VolumeStatusName op_Implicit(string value);
}
public class Amazon.EC2.VolumeType : ConstantClass {
    public static VolumeType Gp2;
    public static VolumeType Io1;
    public static VolumeType Standard;
    public VolumeType(string value);
    private static VolumeType();
    public static VolumeType FindValue(string value);
    public static VolumeType op_Implicit(string value);
}
public class Amazon.EC2.VpcAttributeName : ConstantClass {
    public static VpcAttributeName EnableDnsHostnames;
    public static VpcAttributeName EnableDnsSupport;
    public VpcAttributeName(string value);
    private static VpcAttributeName();
    public static VpcAttributeName FindValue(string value);
    public static VpcAttributeName op_Implicit(string value);
}
public class Amazon.EC2.VpcPeeringConnectionStateReasonCode : ConstantClass {
    public static VpcPeeringConnectionStateReasonCode Active;
    public static VpcPeeringConnectionStateReasonCode Deleted;
    public static VpcPeeringConnectionStateReasonCode Deleting;
    public static VpcPeeringConnectionStateReasonCode Expired;
    public static VpcPeeringConnectionStateReasonCode Failed;
    public static VpcPeeringConnectionStateReasonCode InitiatingRequest;
    public static VpcPeeringConnectionStateReasonCode PendingAcceptance;
    public static VpcPeeringConnectionStateReasonCode Provisioning;
    public static VpcPeeringConnectionStateReasonCode Rejected;
    public VpcPeeringConnectionStateReasonCode(string value);
    private static VpcPeeringConnectionStateReasonCode();
    public static VpcPeeringConnectionStateReasonCode FindValue(string value);
    public static VpcPeeringConnectionStateReasonCode op_Implicit(string value);
}
public class Amazon.EC2.VpcState : ConstantClass {
    public static VpcState Available;
    public static VpcState Pending;
    public VpcState(string value);
    private static VpcState();
    public static VpcState FindValue(string value);
    public static VpcState op_Implicit(string value);
}
public class Amazon.EC2.VpnState : ConstantClass {
    public static VpnState Available;
    public static VpnState Deleted;
    public static VpnState Deleting;
    public static VpnState Pending;
    public VpnState(string value);
    private static VpnState();
    public static VpnState FindValue(string value);
    public static VpnState op_Implicit(string value);
}
public class Amazon.EC2.VpnStaticRouteSource : ConstantClass {
    public static VpnStaticRouteSource Static;
    public VpnStaticRouteSource(string value);
    private static VpnStaticRouteSource();
    public static VpnStaticRouteSource FindValue(string value);
    public static VpnStaticRouteSource op_Implicit(string value);
}
public class Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient : AmazonServiceClient {
    public AmazonElasticLoadBalancingClient(AWSCredentials credentials);
    public AmazonElasticLoadBalancingClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonElasticLoadBalancingClient(AWSCredentials credentials, AmazonElasticLoadBalancingConfig clientConfig);
    public AmazonElasticLoadBalancingClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonElasticLoadBalancingClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonElasticLoadBalancingClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonElasticLoadBalancingConfig clientConfig);
    public AmazonElasticLoadBalancingClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonElasticLoadBalancingClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonElasticLoadBalancingClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonElasticLoadBalancingConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual void Dispose(bool disposing);
    internal AddTagsResponse AddTags(AddTagsRequest request);
    public sealed virtual Task`1<AddTagsResponse> AddTagsAsync(AddTagsRequest request, CancellationToken cancellationToken);
    internal ApplySecurityGroupsToLoadBalancerResponse ApplySecurityGroupsToLoadBalancer(ApplySecurityGroupsToLoadBalancerRequest request);
    public sealed virtual Task`1<ApplySecurityGroupsToLoadBalancerResponse> ApplySecurityGroupsToLoadBalancerAsync(ApplySecurityGroupsToLoadBalancerRequest request, CancellationToken cancellationToken);
    internal AttachLoadBalancerToSubnetsResponse AttachLoadBalancerToSubnets(AttachLoadBalancerToSubnetsRequest request);
    public sealed virtual Task`1<AttachLoadBalancerToSubnetsResponse> AttachLoadBalancerToSubnetsAsync(AttachLoadBalancerToSubnetsRequest request, CancellationToken cancellationToken);
    internal ConfigureHealthCheckResponse ConfigureHealthCheck(ConfigureHealthCheckRequest request);
    public sealed virtual Task`1<ConfigureHealthCheckResponse> ConfigureHealthCheckAsync(ConfigureHealthCheckRequest request, CancellationToken cancellationToken);
    internal CreateAppCookieStickinessPolicyResponse CreateAppCookieStickinessPolicy(CreateAppCookieStickinessPolicyRequest request);
    public sealed virtual Task`1<CreateAppCookieStickinessPolicyResponse> CreateAppCookieStickinessPolicyAsync(CreateAppCookieStickinessPolicyRequest request, CancellationToken cancellationToken);
    internal CreateLBCookieStickinessPolicyResponse CreateLBCookieStickinessPolicy(CreateLBCookieStickinessPolicyRequest request);
    public sealed virtual Task`1<CreateLBCookieStickinessPolicyResponse> CreateLBCookieStickinessPolicyAsync(CreateLBCookieStickinessPolicyRequest request, CancellationToken cancellationToken);
    internal CreateLoadBalancerResponse CreateLoadBalancer(CreateLoadBalancerRequest request);
    public sealed virtual Task`1<CreateLoadBalancerResponse> CreateLoadBalancerAsync(CreateLoadBalancerRequest request, CancellationToken cancellationToken);
    internal CreateLoadBalancerListenersResponse CreateLoadBalancerListeners(CreateLoadBalancerListenersRequest request);
    public sealed virtual Task`1<CreateLoadBalancerListenersResponse> CreateLoadBalancerListenersAsync(CreateLoadBalancerListenersRequest request, CancellationToken cancellationToken);
    internal CreateLoadBalancerPolicyResponse CreateLoadBalancerPolicy(CreateLoadBalancerPolicyRequest request);
    public sealed virtual Task`1<CreateLoadBalancerPolicyResponse> CreateLoadBalancerPolicyAsync(CreateLoadBalancerPolicyRequest request, CancellationToken cancellationToken);
    internal DeleteLoadBalancerResponse DeleteLoadBalancer(DeleteLoadBalancerRequest request);
    public sealed virtual Task`1<DeleteLoadBalancerResponse> DeleteLoadBalancerAsync(DeleteLoadBalancerRequest request, CancellationToken cancellationToken);
    internal DeleteLoadBalancerListenersResponse DeleteLoadBalancerListeners(DeleteLoadBalancerListenersRequest request);
    public sealed virtual Task`1<DeleteLoadBalancerListenersResponse> DeleteLoadBalancerListenersAsync(DeleteLoadBalancerListenersRequest request, CancellationToken cancellationToken);
    internal DeleteLoadBalancerPolicyResponse DeleteLoadBalancerPolicy(DeleteLoadBalancerPolicyRequest request);
    public sealed virtual Task`1<DeleteLoadBalancerPolicyResponse> DeleteLoadBalancerPolicyAsync(DeleteLoadBalancerPolicyRequest request, CancellationToken cancellationToken);
    internal DeregisterInstancesFromLoadBalancerResponse DeregisterInstancesFromLoadBalancer(DeregisterInstancesFromLoadBalancerRequest request);
    public sealed virtual Task`1<DeregisterInstancesFromLoadBalancerResponse> DeregisterInstancesFromLoadBalancerAsync(DeregisterInstancesFromLoadBalancerRequest request, CancellationToken cancellationToken);
    internal DescribeInstanceHealthResponse DescribeInstanceHealth(DescribeInstanceHealthRequest request);
    public sealed virtual Task`1<DescribeInstanceHealthResponse> DescribeInstanceHealthAsync(DescribeInstanceHealthRequest request, CancellationToken cancellationToken);
    internal DescribeLoadBalancerAttributesResponse DescribeLoadBalancerAttributes(DescribeLoadBalancerAttributesRequest request);
    public sealed virtual Task`1<DescribeLoadBalancerAttributesResponse> DescribeLoadBalancerAttributesAsync(DescribeLoadBalancerAttributesRequest request, CancellationToken cancellationToken);
    internal DescribeLoadBalancerPoliciesResponse DescribeLoadBalancerPolicies();
    internal DescribeLoadBalancerPoliciesResponse DescribeLoadBalancerPolicies(DescribeLoadBalancerPoliciesRequest request);
    public sealed virtual Task`1<DescribeLoadBalancerPoliciesResponse> DescribeLoadBalancerPoliciesAsync(DescribeLoadBalancerPoliciesRequest request, CancellationToken cancellationToken);
    internal DescribeLoadBalancerPolicyTypesResponse DescribeLoadBalancerPolicyTypes();
    internal DescribeLoadBalancerPolicyTypesResponse DescribeLoadBalancerPolicyTypes(DescribeLoadBalancerPolicyTypesRequest request);
    public sealed virtual Task`1<DescribeLoadBalancerPolicyTypesResponse> DescribeLoadBalancerPolicyTypesAsync(DescribeLoadBalancerPolicyTypesRequest request, CancellationToken cancellationToken);
    internal DescribeLoadBalancersResponse DescribeLoadBalancers();
    internal DescribeLoadBalancersResponse DescribeLoadBalancers(DescribeLoadBalancersRequest request);
    public sealed virtual Task`1<DescribeLoadBalancersResponse> DescribeLoadBalancersAsync(DescribeLoadBalancersRequest request, CancellationToken cancellationToken);
    internal DescribeTagsResponse DescribeTags(DescribeTagsRequest request);
    public sealed virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    internal DetachLoadBalancerFromSubnetsResponse DetachLoadBalancerFromSubnets(DetachLoadBalancerFromSubnetsRequest request);
    public sealed virtual Task`1<DetachLoadBalancerFromSubnetsResponse> DetachLoadBalancerFromSubnetsAsync(DetachLoadBalancerFromSubnetsRequest request, CancellationToken cancellationToken);
    internal DisableAvailabilityZonesForLoadBalancerResponse DisableAvailabilityZonesForLoadBalancer(DisableAvailabilityZonesForLoadBalancerRequest request);
    public sealed virtual Task`1<DisableAvailabilityZonesForLoadBalancerResponse> DisableAvailabilityZonesForLoadBalancerAsync(DisableAvailabilityZonesForLoadBalancerRequest request, CancellationToken cancellationToken);
    internal EnableAvailabilityZonesForLoadBalancerResponse EnableAvailabilityZonesForLoadBalancer(EnableAvailabilityZonesForLoadBalancerRequest request);
    public sealed virtual Task`1<EnableAvailabilityZonesForLoadBalancerResponse> EnableAvailabilityZonesForLoadBalancerAsync(EnableAvailabilityZonesForLoadBalancerRequest request, CancellationToken cancellationToken);
    internal ModifyLoadBalancerAttributesResponse ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request);
    public sealed virtual Task`1<ModifyLoadBalancerAttributesResponse> ModifyLoadBalancerAttributesAsync(ModifyLoadBalancerAttributesRequest request, CancellationToken cancellationToken);
    internal RegisterInstancesWithLoadBalancerResponse RegisterInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request);
    public sealed virtual Task`1<RegisterInstancesWithLoadBalancerResponse> RegisterInstancesWithLoadBalancerAsync(RegisterInstancesWithLoadBalancerRequest request, CancellationToken cancellationToken);
    internal RemoveTagsResponse RemoveTags(RemoveTagsRequest request);
    public sealed virtual Task`1<RemoveTagsResponse> RemoveTagsAsync(RemoveTagsRequest request, CancellationToken cancellationToken);
    internal SetLoadBalancerListenerSSLCertificateResponse SetLoadBalancerListenerSSLCertificate(SetLoadBalancerListenerSSLCertificateRequest request);
    public sealed virtual Task`1<SetLoadBalancerListenerSSLCertificateResponse> SetLoadBalancerListenerSSLCertificateAsync(SetLoadBalancerListenerSSLCertificateRequest request, CancellationToken cancellationToken);
    internal SetLoadBalancerPoliciesForBackendServerResponse SetLoadBalancerPoliciesForBackendServer(SetLoadBalancerPoliciesForBackendServerRequest request);
    public sealed virtual Task`1<SetLoadBalancerPoliciesForBackendServerResponse> SetLoadBalancerPoliciesForBackendServerAsync(SetLoadBalancerPoliciesForBackendServerRequest request, CancellationToken cancellationToken);
    internal SetLoadBalancerPoliciesOfListenerResponse SetLoadBalancerPoliciesOfListener(SetLoadBalancerPoliciesOfListenerRequest request);
    public sealed virtual Task`1<SetLoadBalancerPoliciesOfListenerResponse> SetLoadBalancerPoliciesOfListenerAsync(SetLoadBalancerPoliciesOfListenerRequest request, CancellationToken cancellationToken);
}
public class Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingException : AmazonServiceException {
    public AmazonElasticLoadBalancingException(string message);
    public AmazonElasticLoadBalancingException(string message, Exception innerException);
    public AmazonElasticLoadBalancingException(Exception innerException);
    public AmazonElasticLoadBalancingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonElasticLoadBalancingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingRequest : AmazonWebServiceRequest {
}
public interface Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing {
    public abstract virtual Task`1<AddTagsResponse> AddTagsAsync(AddTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ApplySecurityGroupsToLoadBalancerResponse> ApplySecurityGroupsToLoadBalancerAsync(ApplySecurityGroupsToLoadBalancerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AttachLoadBalancerToSubnetsResponse> AttachLoadBalancerToSubnetsAsync(AttachLoadBalancerToSubnetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ConfigureHealthCheckResponse> ConfigureHealthCheckAsync(ConfigureHealthCheckRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAppCookieStickinessPolicyResponse> CreateAppCookieStickinessPolicyAsync(CreateAppCookieStickinessPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLBCookieStickinessPolicyResponse> CreateLBCookieStickinessPolicyAsync(CreateLBCookieStickinessPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLoadBalancerResponse> CreateLoadBalancerAsync(CreateLoadBalancerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLoadBalancerListenersResponse> CreateLoadBalancerListenersAsync(CreateLoadBalancerListenersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateLoadBalancerPolicyResponse> CreateLoadBalancerPolicyAsync(CreateLoadBalancerPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLoadBalancerResponse> DeleteLoadBalancerAsync(DeleteLoadBalancerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLoadBalancerListenersResponse> DeleteLoadBalancerListenersAsync(DeleteLoadBalancerListenersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLoadBalancerPolicyResponse> DeleteLoadBalancerPolicyAsync(DeleteLoadBalancerPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterInstancesFromLoadBalancerResponse> DeregisterInstancesFromLoadBalancerAsync(DeregisterInstancesFromLoadBalancerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceHealthResponse> DescribeInstanceHealthAsync(DescribeInstanceHealthRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLoadBalancerAttributesResponse> DescribeLoadBalancerAttributesAsync(DescribeLoadBalancerAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLoadBalancerPoliciesResponse> DescribeLoadBalancerPoliciesAsync(DescribeLoadBalancerPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLoadBalancerPolicyTypesResponse> DescribeLoadBalancerPolicyTypesAsync(DescribeLoadBalancerPolicyTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLoadBalancersResponse> DescribeLoadBalancersAsync(DescribeLoadBalancersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTagsResponse> DescribeTagsAsync(DescribeTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DetachLoadBalancerFromSubnetsResponse> DetachLoadBalancerFromSubnetsAsync(DetachLoadBalancerFromSubnetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableAvailabilityZonesForLoadBalancerResponse> DisableAvailabilityZonesForLoadBalancerAsync(DisableAvailabilityZonesForLoadBalancerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableAvailabilityZonesForLoadBalancerResponse> EnableAvailabilityZonesForLoadBalancerAsync(EnableAvailabilityZonesForLoadBalancerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyLoadBalancerAttributesResponse> ModifyLoadBalancerAttributesAsync(ModifyLoadBalancerAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterInstancesWithLoadBalancerResponse> RegisterInstancesWithLoadBalancerAsync(RegisterInstancesWithLoadBalancerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTagsResponse> RemoveTagsAsync(RemoveTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetLoadBalancerListenerSSLCertificateResponse> SetLoadBalancerListenerSSLCertificateAsync(SetLoadBalancerListenerSSLCertificateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetLoadBalancerPoliciesForBackendServerResponse> SetLoadBalancerPoliciesForBackendServerAsync(SetLoadBalancerPoliciesForBackendServerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetLoadBalancerPoliciesOfListenerResponse> SetLoadBalancerPoliciesOfListenerAsync(SetLoadBalancerPoliciesOfListenerRequest request, CancellationToken cancellationToken);
}
public class Amazon.ElasticLoadBalancing.Internal.ProcessRequestHandler : PipelineHandler {
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
    private static void SetPolicyNames(IRequest request);
    [CompilerGeneratedAttribute]
private static bool <SetPolicyNames>b__0(KeyValuePair`2<string, string> x);
}
public class Amazon.ElasticLoadBalancing.Model.AccessLog : object {
    private Nullable`1<int> _emitInterval;
    private Nullable`1<bool> _enabled;
    private string _s3BucketName;
    private string _s3BucketPrefix;
    public int EmitInterval { get; public set; }
    public bool Enabled { get; public set; }
    public string S3BucketName { get; public set; }
    public string S3BucketPrefix { get; public set; }
    public int get_EmitInterval();
    public void set_EmitInterval(int value);
    internal bool IsSetEmitInterval();
    public bool get_Enabled();
    public void set_Enabled(bool value);
    internal bool IsSetEnabled();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_S3BucketPrefix();
    public void set_S3BucketPrefix(string value);
    internal bool IsSetS3BucketPrefix();
}
public class Amazon.ElasticLoadBalancing.Model.AccessPointNotFoundException : AmazonElasticLoadBalancingException {
    public AccessPointNotFoundException(string message);
    public AccessPointNotFoundException(string message, Exception innerException);
    public AccessPointNotFoundException(Exception innerException);
    public AccessPointNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public AccessPointNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.AdditionalAttribute : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.ElasticLoadBalancing.Model.AddTagsRequest : AmazonElasticLoadBalancingRequest {
    private List`1<string> _loadBalancerNames;
    private List`1<Tag> _tags;
    public List`1<string> LoadBalancerNames { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<string> get_LoadBalancerNames();
    public void set_LoadBalancerNames(List`1<string> value);
    internal bool IsSetLoadBalancerNames();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticLoadBalancing.Model.AddTagsResponse : AddTagsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AddTagsResult class are now available on the AddTagsResponse class. You should use the properties on AddTagsResponse instead of accessing them through AddTagsResult.")]
public AddTagsResult AddTagsResult { get; }
    public AddTagsResult get_AddTagsResult();
}
public class Amazon.ElasticLoadBalancing.Model.AddTagsResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.AppCookieStickinessPolicy : object {
    private string _cookieName;
    private string _policyName;
    public string CookieName { get; public set; }
    public string PolicyName { get; public set; }
    public AppCookieStickinessPolicy(string policyName, string cookieName);
    public string get_CookieName();
    public void set_CookieName(string value);
    internal bool IsSetCookieName();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    private List`1<string> _securityGroups;
    public string LoadBalancerName { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
}
public class Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerResponse : ApplySecurityGroupsToLoadBalancerResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ApplySecurityGroupsToLoadBalancerResult class are now available on the ApplySecurityGroupsToLoadBalancerResponse class. You should use the properties on ApplySecurityGroupsToLoadBalancerResponse instead of accessing them through ApplySecurityGroupsToLoadBalancerResult.")]
public ApplySecurityGroupsToLoadBalancerResult ApplySecurityGroupsToLoadBalancerResult { get; }
    public ApplySecurityGroupsToLoadBalancerResult get_ApplySecurityGroupsToLoadBalancerResult();
}
public class Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerResult : AmazonWebServiceResponse {
    private List`1<string> _securityGroups;
    public List`1<string> SecurityGroups { get; public set; }
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
}
public class Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    private List`1<string> _subnets;
    public string LoadBalancerName { get; public set; }
    public List`1<string> Subnets { get; public set; }
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public List`1<string> get_Subnets();
    public void set_Subnets(List`1<string> value);
    internal bool IsSetSubnets();
}
public class Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsResponse : AttachLoadBalancerToSubnetsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AttachLoadBalancerToSubnetsResult class are now available on the AttachLoadBalancerToSubnetsResponse class. You should use the properties on AttachLoadBalancerToSubnetsResponse instead of accessing them through AttachLoadBalancerToSubnetsResult.")]
public AttachLoadBalancerToSubnetsResult AttachLoadBalancerToSubnetsResult { get; }
    public AttachLoadBalancerToSubnetsResult get_AttachLoadBalancerToSubnetsResult();
}
public class Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsResult : AmazonWebServiceResponse {
    private List`1<string> _subnets;
    public List`1<string> Subnets { get; public set; }
    public List`1<string> get_Subnets();
    public void set_Subnets(List`1<string> value);
    internal bool IsSetSubnets();
}
public class Amazon.ElasticLoadBalancing.Model.BackendServerDescription : object {
    private Nullable`1<int> _instancePort;
    private List`1<string> _policyNames;
    public int InstancePort { get; public set; }
    public List`1<string> PolicyNames { get; public set; }
    public int get_InstancePort();
    public void set_InstancePort(int value);
    internal bool IsSetInstancePort();
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
}
public class Amazon.ElasticLoadBalancing.Model.CertificateNotFoundException : AmazonElasticLoadBalancingException {
    public CertificateNotFoundException(string message);
    public CertificateNotFoundException(string message, Exception innerException);
    public CertificateNotFoundException(Exception innerException);
    public CertificateNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public CertificateNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckRequest : AmazonElasticLoadBalancingRequest {
    private HealthCheck _healthCheck;
    private string _loadBalancerName;
    public HealthCheck HealthCheck { get; public set; }
    public string LoadBalancerName { get; public set; }
    public ConfigureHealthCheckRequest(string loadBalancerName, HealthCheck healthCheck);
    public HealthCheck get_HealthCheck();
    public void set_HealthCheck(HealthCheck value);
    internal bool IsSetHealthCheck();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckResponse : ConfigureHealthCheckResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ConfigureHealthCheckResult class are now available on the ConfigureHealthCheckResponse class. You should use the properties on ConfigureHealthCheckResponse instead of accessing them through ConfigureHealthCheckResult.")]
public ConfigureHealthCheckResult ConfigureHealthCheckResult { get; }
    public ConfigureHealthCheckResult get_ConfigureHealthCheckResult();
}
public class Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckResult : AmazonWebServiceResponse {
    private HealthCheck _healthCheck;
    public HealthCheck HealthCheck { get; public set; }
    public HealthCheck get_HealthCheck();
    public void set_HealthCheck(HealthCheck value);
    internal bool IsSetHealthCheck();
}
public class Amazon.ElasticLoadBalancing.Model.ConnectionDraining : object {
    private Nullable`1<bool> _enabled;
    private Nullable`1<int> _timeout;
    public bool Enabled { get; public set; }
    public int Timeout { get; public set; }
    public bool get_Enabled();
    public void set_Enabled(bool value);
    internal bool IsSetEnabled();
    public int get_Timeout();
    public void set_Timeout(int value);
    internal bool IsSetTimeout();
}
public class Amazon.ElasticLoadBalancing.Model.ConnectionSettings : object {
    private Nullable`1<int> _idleTimeout;
    public int IdleTimeout { get; public set; }
    public int get_IdleTimeout();
    public void set_IdleTimeout(int value);
    internal bool IsSetIdleTimeout();
}
public class Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyRequest : AmazonElasticLoadBalancingRequest {
    private string _cookieName;
    private string _loadBalancerName;
    private string _policyName;
    public string CookieName { get; public set; }
    public string LoadBalancerName { get; public set; }
    public string PolicyName { get; public set; }
    public CreateAppCookieStickinessPolicyRequest(string loadBalancerName, string policyName, string cookieName);
    public string get_CookieName();
    public void set_CookieName(string value);
    internal bool IsSetCookieName();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyResponse : CreateAppCookieStickinessPolicyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateAppCookieStickinessPolicyResult class are now available on the CreateAppCookieStickinessPolicyResponse class. You should use the properties on CreateAppCookieStickinessPolicyResponse instead of accessing them through CreateAppCookieStickinessPolicyResult.")]
public CreateAppCookieStickinessPolicyResult CreateAppCookieStickinessPolicyResult { get; }
    public CreateAppCookieStickinessPolicyResult get_CreateAppCookieStickinessPolicyResult();
}
public class Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyRequest : AmazonElasticLoadBalancingRequest {
    private Nullable`1<long> _cookieExpirationPeriod;
    private string _loadBalancerName;
    private string _policyName;
    public long CookieExpirationPeriod { get; public set; }
    public string LoadBalancerName { get; public set; }
    public string PolicyName { get; public set; }
    public CreateLBCookieStickinessPolicyRequest(string loadBalancerName, string policyName);
    public long get_CookieExpirationPeriod();
    public void set_CookieExpirationPeriod(long value);
    internal bool IsSetCookieExpirationPeriod();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyResponse : CreateLBCookieStickinessPolicyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateLBCookieStickinessPolicyResult class are now available on the CreateLBCookieStickinessPolicyResponse class. You should use the properties on CreateLBCookieStickinessPolicyResponse instead of accessing them through CreateLBCookieStickinessPolicyResult.")]
public CreateLBCookieStickinessPolicyResult CreateLBCookieStickinessPolicyResult { get; }
    public CreateLBCookieStickinessPolicyResult get_CreateLBCookieStickinessPolicyResult();
}
public class Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersRequest : AmazonElasticLoadBalancingRequest {
    private List`1<Listener> _listeners;
    private string _loadBalancerName;
    public List`1<Listener> Listeners { get; public set; }
    public string LoadBalancerName { get; public set; }
    public CreateLoadBalancerListenersRequest(string loadBalancerName, List`1<Listener> listeners);
    public List`1<Listener> get_Listeners();
    public void set_Listeners(List`1<Listener> value);
    internal bool IsSetListeners();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersResponse : CreateLoadBalancerListenersResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateLoadBalancerListenersResult class are now available on the CreateLoadBalancerListenersResponse class. You should use the properties on CreateLoadBalancerListenersResponse instead of accessing them through CreateLoadBalancerListenersResult.")]
public CreateLoadBalancerListenersResult CreateLoadBalancerListenersResult { get; }
    public CreateLoadBalancerListenersResult get_CreateLoadBalancerListenersResult();
}
public class Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    private List`1<PolicyAttribute> _policyAttributes;
    private string _policyName;
    private string _policyTypeName;
    public string LoadBalancerName { get; public set; }
    public List`1<PolicyAttribute> PolicyAttributes { get; public set; }
    public string PolicyName { get; public set; }
    public string PolicyTypeName { get; public set; }
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public List`1<PolicyAttribute> get_PolicyAttributes();
    public void set_PolicyAttributes(List`1<PolicyAttribute> value);
    internal bool IsSetPolicyAttributes();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public string get_PolicyTypeName();
    public void set_PolicyTypeName(string value);
    internal bool IsSetPolicyTypeName();
}
public class Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyResponse : CreateLoadBalancerPolicyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateLoadBalancerPolicyResult class are now available on the CreateLoadBalancerPolicyResponse class. You should use the properties on CreateLoadBalancerPolicyResponse instead of accessing them through CreateLoadBalancerPolicyResult.")]
public CreateLoadBalancerPolicyResult CreateLoadBalancerPolicyResult { get; }
    public CreateLoadBalancerPolicyResult get_CreateLoadBalancerPolicyResult();
}
public class Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest : AmazonElasticLoadBalancingRequest {
    private List`1<string> _availabilityZones;
    private List`1<Listener> _listeners;
    private string _loadBalancerName;
    private string _scheme;
    private List`1<string> _securityGroups;
    private List`1<string> _subnets;
    private List`1<Tag> _tags;
    public List`1<string> AvailabilityZones { get; public set; }
    public List`1<Listener> Listeners { get; public set; }
    public string LoadBalancerName { get; public set; }
    public string Scheme { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public List`1<string> Subnets { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public CreateLoadBalancerRequest(string loadBalancerName);
    public CreateLoadBalancerRequest(string loadBalancerName, List`1<Listener> listeners, List`1<string> availabilityZones);
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public List`1<Listener> get_Listeners();
    public void set_Listeners(List`1<Listener> value);
    internal bool IsSetListeners();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public string get_Scheme();
    public void set_Scheme(string value);
    internal bool IsSetScheme();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public List`1<string> get_Subnets();
    public void set_Subnets(List`1<string> value);
    internal bool IsSetSubnets();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerResponse : CreateLoadBalancerResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateLoadBalancerResult class are now available on the CreateLoadBalancerResponse class. You should use the properties on CreateLoadBalancerResponse instead of accessing them through CreateLoadBalancerResult.")]
public CreateLoadBalancerResult CreateLoadBalancerResult { get; }
    public CreateLoadBalancerResult get_CreateLoadBalancerResult();
}
public class Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerResult : AmazonWebServiceResponse {
    private string _dnsName;
    public string DNSName { get; public set; }
    public string get_DNSName();
    public void set_DNSName(string value);
    internal bool IsSetDNSName();
}
public class Amazon.ElasticLoadBalancing.Model.CrossZoneLoadBalancing : object {
    private Nullable`1<bool> _enabled;
    public bool Enabled { get; public set; }
    public bool get_Enabled();
    public void set_Enabled(bool value);
    internal bool IsSetEnabled();
}
public class Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    private List`1<int> _loadBalancerPorts;
    public string LoadBalancerName { get; public set; }
    public List`1<int> LoadBalancerPorts { get; public set; }
    public DeleteLoadBalancerListenersRequest(string loadBalancerName, List`1<int> loadBalancerPorts);
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public List`1<int> get_LoadBalancerPorts();
    public void set_LoadBalancerPorts(List`1<int> value);
    internal bool IsSetLoadBalancerPorts();
}
public class Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersResponse : DeleteLoadBalancerListenersResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteLoadBalancerListenersResult class are now available on the DeleteLoadBalancerListenersResponse class. You should use the properties on DeleteLoadBalancerListenersResponse instead of accessing them through DeleteLoadBalancerListenersResult.")]
public DeleteLoadBalancerListenersResult DeleteLoadBalancerListenersResult { get; }
    public DeleteLoadBalancerListenersResult get_DeleteLoadBalancerListenersResult();
}
public class Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    private string _policyName;
    public string LoadBalancerName { get; public set; }
    public string PolicyName { get; public set; }
    public DeleteLoadBalancerPolicyRequest(string loadBalancerName, string policyName);
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyResponse : DeleteLoadBalancerPolicyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteLoadBalancerPolicyResult class are now available on the DeleteLoadBalancerPolicyResponse class. You should use the properties on DeleteLoadBalancerPolicyResponse instead of accessing them through DeleteLoadBalancerPolicyResult.")]
public DeleteLoadBalancerPolicyResult DeleteLoadBalancerPolicyResult { get; }
    public DeleteLoadBalancerPolicyResult get_DeleteLoadBalancerPolicyResult();
}
public class Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    public string LoadBalancerName { get; public set; }
    public DeleteLoadBalancerRequest(string loadBalancerName);
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerResponse : DeleteLoadBalancerResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteLoadBalancerResult class are now available on the DeleteLoadBalancerResponse class. You should use the properties on DeleteLoadBalancerResponse instead of accessing them through DeleteLoadBalancerResult.")]
public DeleteLoadBalancerResult DeleteLoadBalancerResult { get; }
    public DeleteLoadBalancerResult get_DeleteLoadBalancerResult();
}
public class Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerRequest : AmazonElasticLoadBalancingRequest {
    private List`1<Instance> _instances;
    private string _loadBalancerName;
    public List`1<Instance> Instances { get; public set; }
    public string LoadBalancerName { get; public set; }
    public DeregisterInstancesFromLoadBalancerRequest(string loadBalancerName, List`1<Instance> instances);
    public List`1<Instance> get_Instances();
    public void set_Instances(List`1<Instance> value);
    internal bool IsSetInstances();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerResponse : DeregisterInstancesFromLoadBalancerResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeregisterInstancesFromLoadBalancerResult class are now available on the DeregisterInstancesFromLoadBalancerResponse class. You should use the properties on DeregisterInstancesFromLoadBalancerResponse instead of accessing them through DeregisterInstancesFromLoadBalancerResult.")]
public DeregisterInstancesFromLoadBalancerResult DeregisterInstancesFromLoadBalancerResult { get; }
    public DeregisterInstancesFromLoadBalancerResult get_DeregisterInstancesFromLoadBalancerResult();
}
public class Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerResult : AmazonWebServiceResponse {
    private List`1<Instance> _instances;
    public List`1<Instance> Instances { get; public set; }
    public List`1<Instance> get_Instances();
    public void set_Instances(List`1<Instance> value);
    internal bool IsSetInstances();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthRequest : AmazonElasticLoadBalancingRequest {
    private List`1<Instance> _instances;
    private string _loadBalancerName;
    public List`1<Instance> Instances { get; public set; }
    public string LoadBalancerName { get; public set; }
    public DescribeInstanceHealthRequest(string loadBalancerName);
    public List`1<Instance> get_Instances();
    public void set_Instances(List`1<Instance> value);
    internal bool IsSetInstances();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthResponse : DescribeInstanceHealthResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeInstanceHealthResult class are now available on the DescribeInstanceHealthResponse class. You should use the properties on DescribeInstanceHealthResponse instead of accessing them through DescribeInstanceHealthResult.")]
public DescribeInstanceHealthResult DescribeInstanceHealthResult { get; }
    public DescribeInstanceHealthResult get_DescribeInstanceHealthResult();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthResult : AmazonWebServiceResponse {
    private List`1<InstanceState> _instanceStates;
    public List`1<InstanceState> InstanceStates { get; public set; }
    public List`1<InstanceState> get_InstanceStates();
    public void set_InstanceStates(List`1<InstanceState> value);
    internal bool IsSetInstanceStates();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    public string LoadBalancerName { get; public set; }
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesResponse : DescribeLoadBalancerAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeLoadBalancerAttributesResult class are now available on the DescribeLoadBalancerAttributesResponse class. You should use the properties on DescribeLoadBalancerAttributesResponse instead of accessing them through DescribeLoadBalancerAttributesResult.")]
public DescribeLoadBalancerAttributesResult DescribeLoadBalancerAttributesResult { get; }
    public DescribeLoadBalancerAttributesResult get_DescribeLoadBalancerAttributesResult();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesResult : AmazonWebServiceResponse {
    private LoadBalancerAttributes _loadBalancerAttributes;
    public LoadBalancerAttributes LoadBalancerAttributes { get; public set; }
    public LoadBalancerAttributes get_LoadBalancerAttributes();
    public void set_LoadBalancerAttributes(LoadBalancerAttributes value);
    internal bool IsSetLoadBalancerAttributes();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    private List`1<string> _policyNames;
    public string LoadBalancerName { get; public set; }
    public List`1<string> PolicyNames { get; public set; }
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesResponse : DescribeLoadBalancerPoliciesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeLoadBalancerPoliciesResult class are now available on the DescribeLoadBalancerPoliciesResponse class. You should use the properties on DescribeLoadBalancerPoliciesResponse instead of accessing them through DescribeLoadBalancerPoliciesResult.")]
public DescribeLoadBalancerPoliciesResult DescribeLoadBalancerPoliciesResult { get; }
    public DescribeLoadBalancerPoliciesResult get_DescribeLoadBalancerPoliciesResult();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesResult : AmazonWebServiceResponse {
    private List`1<PolicyDescription> _policyDescriptions;
    public List`1<PolicyDescription> PolicyDescriptions { get; public set; }
    public List`1<PolicyDescription> get_PolicyDescriptions();
    public void set_PolicyDescriptions(List`1<PolicyDescription> value);
    internal bool IsSetPolicyDescriptions();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesRequest : AmazonElasticLoadBalancingRequest {
    private List`1<string> _policyTypeNames;
    public List`1<string> PolicyTypeNames { get; public set; }
    public List`1<string> get_PolicyTypeNames();
    public void set_PolicyTypeNames(List`1<string> value);
    internal bool IsSetPolicyTypeNames();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesResponse : DescribeLoadBalancerPolicyTypesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeLoadBalancerPolicyTypesResult class are now available on the DescribeLoadBalancerPolicyTypesResponse class. You should use the properties on DescribeLoadBalancerPolicyTypesResponse instead of accessing them through DescribeLoadBalancerPolicyTypesResult.")]
public DescribeLoadBalancerPolicyTypesResult DescribeLoadBalancerPolicyTypesResult { get; }
    public DescribeLoadBalancerPolicyTypesResult get_DescribeLoadBalancerPolicyTypesResult();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesResult : AmazonWebServiceResponse {
    private List`1<PolicyTypeDescription> _policyTypeDescriptions;
    public List`1<PolicyTypeDescription> PolicyTypeDescriptions { get; public set; }
    public List`1<PolicyTypeDescription> get_PolicyTypeDescriptions();
    public void set_PolicyTypeDescriptions(List`1<PolicyTypeDescription> value);
    internal bool IsSetPolicyTypeDescriptions();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersRequest : AmazonElasticLoadBalancingRequest {
    private List`1<string> _loadBalancerNames;
    private string _marker;
    private Nullable`1<int> _pageSize;
    public List`1<string> LoadBalancerNames { get; public set; }
    public string Marker { get; public set; }
    public int PageSize { get; public set; }
    public DescribeLoadBalancersRequest(List`1<string> loadBalancerNames);
    public List`1<string> get_LoadBalancerNames();
    public void set_LoadBalancerNames(List`1<string> value);
    internal bool IsSetLoadBalancerNames();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public int get_PageSize();
    public void set_PageSize(int value);
    internal bool IsSetPageSize();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersResponse : DescribeLoadBalancersResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeLoadBalancersResult class are now available on the DescribeLoadBalancersResponse class. You should use the properties on DescribeLoadBalancersResponse instead of accessing them through DescribeLoadBalancersResult.")]
public DescribeLoadBalancersResult DescribeLoadBalancersResult { get; }
    public DescribeLoadBalancersResult get_DescribeLoadBalancersResult();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersResult : AmazonWebServiceResponse {
    private List`1<LoadBalancerDescription> _loadBalancerDescriptions;
    private string _nextMarker;
    public List`1<LoadBalancerDescription> LoadBalancerDescriptions { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<LoadBalancerDescription> get_LoadBalancerDescriptions();
    public void set_LoadBalancerDescriptions(List`1<LoadBalancerDescription> value);
    internal bool IsSetLoadBalancerDescriptions();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeTagsRequest : AmazonElasticLoadBalancingRequest {
    private List`1<string> _loadBalancerNames;
    public List`1<string> LoadBalancerNames { get; public set; }
    public List`1<string> get_LoadBalancerNames();
    public void set_LoadBalancerNames(List`1<string> value);
    internal bool IsSetLoadBalancerNames();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeTagsResponse : DescribeTagsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeTagsResult class are now available on the DescribeTagsResponse class. You should use the properties on DescribeTagsResponse instead of accessing them through DescribeTagsResult.")]
public DescribeTagsResult DescribeTagsResult { get; }
    public DescribeTagsResult get_DescribeTagsResult();
}
public class Amazon.ElasticLoadBalancing.Model.DescribeTagsResult : AmazonWebServiceResponse {
    private List`1<TagDescription> _tagDescriptions;
    public List`1<TagDescription> TagDescriptions { get; public set; }
    public List`1<TagDescription> get_TagDescriptions();
    public void set_TagDescriptions(List`1<TagDescription> value);
    internal bool IsSetTagDescriptions();
}
public class Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    private List`1<string> _subnets;
    public string LoadBalancerName { get; public set; }
    public List`1<string> Subnets { get; public set; }
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public List`1<string> get_Subnets();
    public void set_Subnets(List`1<string> value);
    internal bool IsSetSubnets();
}
public class Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsResponse : DetachLoadBalancerFromSubnetsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DetachLoadBalancerFromSubnetsResult class are now available on the DetachLoadBalancerFromSubnetsResponse class. You should use the properties on DetachLoadBalancerFromSubnetsResponse instead of accessing them through DetachLoadBalancerFromSubnetsResult.")]
public DetachLoadBalancerFromSubnetsResult DetachLoadBalancerFromSubnetsResult { get; }
    public DetachLoadBalancerFromSubnetsResult get_DetachLoadBalancerFromSubnetsResult();
}
public class Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsResult : AmazonWebServiceResponse {
    private List`1<string> _subnets;
    public List`1<string> Subnets { get; public set; }
    public List`1<string> get_Subnets();
    public void set_Subnets(List`1<string> value);
    internal bool IsSetSubnets();
}
public class Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerRequest : AmazonElasticLoadBalancingRequest {
    private List`1<string> _availabilityZones;
    private string _loadBalancerName;
    public List`1<string> AvailabilityZones { get; public set; }
    public string LoadBalancerName { get; public set; }
    public DisableAvailabilityZonesForLoadBalancerRequest(string loadBalancerName, List`1<string> availabilityZones);
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerResponse : DisableAvailabilityZonesForLoadBalancerResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DisableAvailabilityZonesForLoadBalancerResult class are now available on the DisableAvailabilityZonesForLoadBalancerResponse class. You should use the properties on DisableAvailabilityZonesForLoadBalancerResponse instead of accessing them through DisableAvailabilityZonesForLoadBalancerResult.")]
public DisableAvailabilityZonesForLoadBalancerResult DisableAvailabilityZonesForLoadBalancerResult { get; }
    public DisableAvailabilityZonesForLoadBalancerResult get_DisableAvailabilityZonesForLoadBalancerResult();
}
public class Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerResult : AmazonWebServiceResponse {
    private List`1<string> _availabilityZones;
    public List`1<string> AvailabilityZones { get; public set; }
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
}
public class Amazon.ElasticLoadBalancing.Model.DuplicateAccessPointNameException : AmazonElasticLoadBalancingException {
    public DuplicateAccessPointNameException(string message);
    public DuplicateAccessPointNameException(string message, Exception innerException);
    public DuplicateAccessPointNameException(Exception innerException);
    public DuplicateAccessPointNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DuplicateAccessPointNameException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.DuplicateListenerException : AmazonElasticLoadBalancingException {
    public DuplicateListenerException(string message);
    public DuplicateListenerException(string message, Exception innerException);
    public DuplicateListenerException(Exception innerException);
    public DuplicateListenerException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DuplicateListenerException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.DuplicateLoadBalancerNameException : AmazonElasticLoadBalancingException {
    public DuplicateLoadBalancerNameException(string message);
    public DuplicateLoadBalancerNameException(string message, Exception innerException);
    public DuplicateLoadBalancerNameException(Exception innerException);
    public DuplicateLoadBalancerNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DuplicateLoadBalancerNameException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.DuplicatePolicyNameException : AmazonElasticLoadBalancingException {
    public DuplicatePolicyNameException(string message);
    public DuplicatePolicyNameException(string message, Exception innerException);
    public DuplicatePolicyNameException(Exception innerException);
    public DuplicatePolicyNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DuplicatePolicyNameException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.DuplicateTagKeysException : AmazonElasticLoadBalancingException {
    public DuplicateTagKeysException(string message);
    public DuplicateTagKeysException(string message, Exception innerException);
    public DuplicateTagKeysException(Exception innerException);
    public DuplicateTagKeysException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DuplicateTagKeysException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerRequest : AmazonElasticLoadBalancingRequest {
    private List`1<string> _availabilityZones;
    private string _loadBalancerName;
    public List`1<string> AvailabilityZones { get; public set; }
    public string LoadBalancerName { get; public set; }
    public EnableAvailabilityZonesForLoadBalancerRequest(string loadBalancerName, List`1<string> availabilityZones);
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerResponse : EnableAvailabilityZonesForLoadBalancerResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the EnableAvailabilityZonesForLoadBalancerResult class are now available on the EnableAvailabilityZonesForLoadBalancerResponse class. You should use the properties on EnableAvailabilityZonesForLoadBalancerResponse instead of accessing them through EnableAvailabilityZonesForLoadBalancerResult.")]
public EnableAvailabilityZonesForLoadBalancerResult EnableAvailabilityZonesForLoadBalancerResult { get; }
    public EnableAvailabilityZonesForLoadBalancerResult get_EnableAvailabilityZonesForLoadBalancerResult();
}
public class Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerResult : AmazonWebServiceResponse {
    private List`1<string> _availabilityZones;
    public List`1<string> AvailabilityZones { get; public set; }
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
}
public class Amazon.ElasticLoadBalancing.Model.HealthCheck : object {
    private Nullable`1<int> _healthyThreshold;
    private Nullable`1<int> _interval;
    private string _target;
    private Nullable`1<int> _timeout;
    private Nullable`1<int> _unhealthyThreshold;
    public int HealthyThreshold { get; public set; }
    public int Interval { get; public set; }
    public string Target { get; public set; }
    public int Timeout { get; public set; }
    public int UnhealthyThreshold { get; public set; }
    public HealthCheck(string target, int interval, int timeout, int unhealthyThreshold, int healthyThreshold);
    public int get_HealthyThreshold();
    public void set_HealthyThreshold(int value);
    internal bool IsSetHealthyThreshold();
    public int get_Interval();
    public void set_Interval(int value);
    internal bool IsSetInterval();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
    public int get_Timeout();
    public void set_Timeout(int value);
    internal bool IsSetTimeout();
    public int get_UnhealthyThreshold();
    public void set_UnhealthyThreshold(int value);
    internal bool IsSetUnhealthyThreshold();
}
public class Amazon.ElasticLoadBalancing.Model.Instance : object {
    private string _instanceId;
    public string InstanceId { get; public set; }
    public Instance(string instanceId);
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
}
public class Amazon.ElasticLoadBalancing.Model.InstanceState : object {
    private string _description;
    private string _instanceId;
    private string _reasonCode;
    private string _state;
    public string Description { get; public set; }
    public string InstanceId { get; public set; }
    public string ReasonCode { get; public set; }
    public string State { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceId();
    public void set_InstanceId(string value);
    internal bool IsSetInstanceId();
    public string get_ReasonCode();
    public void set_ReasonCode(string value);
    internal bool IsSetReasonCode();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AccessLogUnmarshaller : object {
    private static AccessLogUnmarshaller _instance;
    public static AccessLogUnmarshaller Instance { get; }
    private static AccessLogUnmarshaller();
    public sealed virtual AccessLog Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessLog Unmarshall(JsonUnmarshallerContext context);
    public static AccessLogUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AdditionalAttributeUnmarshaller : object {
    private static AdditionalAttributeUnmarshaller _instance;
    public static AdditionalAttributeUnmarshaller Instance { get; }
    private static AdditionalAttributeUnmarshaller();
    public sealed virtual AdditionalAttribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AdditionalAttribute Unmarshall(JsonUnmarshallerContext context);
    public static AdditionalAttributeUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AddTagsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTagsRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AddTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AddTagsResponseUnmarshaller _instance;
    public static AddTagsResponseUnmarshaller Instance { get; }
    private static AddTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AddTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTagsResponseUnmarshaller GetInstance();
    public static AddTagsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AppCookieStickinessPolicyUnmarshaller : object {
    private static AppCookieStickinessPolicyUnmarshaller _instance;
    public static AppCookieStickinessPolicyUnmarshaller Instance { get; }
    private static AppCookieStickinessPolicyUnmarshaller();
    public sealed virtual AppCookieStickinessPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AppCookieStickinessPolicy Unmarshall(JsonUnmarshallerContext context);
    public static AppCookieStickinessPolicyUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ApplySecurityGroupsToLoadBalancerRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ApplySecurityGroupsToLoadBalancerRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ApplySecurityGroupsToLoadBalancerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ApplySecurityGroupsToLoadBalancerResponseUnmarshaller _instance;
    public static ApplySecurityGroupsToLoadBalancerResponseUnmarshaller Instance { get; }
    private static ApplySecurityGroupsToLoadBalancerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ApplySecurityGroupsToLoadBalancerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ApplySecurityGroupsToLoadBalancerResponseUnmarshaller GetInstance();
    public static ApplySecurityGroupsToLoadBalancerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AttachLoadBalancerToSubnetsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AttachLoadBalancerToSubnetsRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AttachLoadBalancerToSubnetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AttachLoadBalancerToSubnetsResponseUnmarshaller _instance;
    public static AttachLoadBalancerToSubnetsResponseUnmarshaller Instance { get; }
    private static AttachLoadBalancerToSubnetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AttachLoadBalancerToSubnetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AttachLoadBalancerToSubnetsResponseUnmarshaller GetInstance();
    public static AttachLoadBalancerToSubnetsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.BackendServerDescriptionUnmarshaller : object {
    private static BackendServerDescriptionUnmarshaller _instance;
    public static BackendServerDescriptionUnmarshaller Instance { get; }
    private static BackendServerDescriptionUnmarshaller();
    public sealed virtual BackendServerDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BackendServerDescription Unmarshall(JsonUnmarshallerContext context);
    public static BackendServerDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ConfigureHealthCheckRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ConfigureHealthCheckRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ConfigureHealthCheckResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ConfigureHealthCheckResponseUnmarshaller _instance;
    public static ConfigureHealthCheckResponseUnmarshaller Instance { get; }
    private static ConfigureHealthCheckResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ConfigureHealthCheckResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ConfigureHealthCheckResponseUnmarshaller GetInstance();
    public static ConfigureHealthCheckResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ConnectionDrainingUnmarshaller : object {
    private static ConnectionDrainingUnmarshaller _instance;
    public static ConnectionDrainingUnmarshaller Instance { get; }
    private static ConnectionDrainingUnmarshaller();
    public sealed virtual ConnectionDraining Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionDraining Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionDrainingUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ConnectionSettingsUnmarshaller : object {
    private static ConnectionSettingsUnmarshaller _instance;
    public static ConnectionSettingsUnmarshaller Instance { get; }
    private static ConnectionSettingsUnmarshaller();
    public sealed virtual ConnectionSettings Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConnectionSettings Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionSettingsUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateAppCookieStickinessPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAppCookieStickinessPolicyRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateAppCookieStickinessPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateAppCookieStickinessPolicyResponseUnmarshaller _instance;
    public static CreateAppCookieStickinessPolicyResponseUnmarshaller Instance { get; }
    private static CreateAppCookieStickinessPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateAppCookieStickinessPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAppCookieStickinessPolicyResponseUnmarshaller GetInstance();
    public static CreateAppCookieStickinessPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLBCookieStickinessPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLBCookieStickinessPolicyRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLBCookieStickinessPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateLBCookieStickinessPolicyResponseUnmarshaller _instance;
    public static CreateLBCookieStickinessPolicyResponseUnmarshaller Instance { get; }
    private static CreateLBCookieStickinessPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateLBCookieStickinessPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLBCookieStickinessPolicyResponseUnmarshaller GetInstance();
    public static CreateLBCookieStickinessPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerListenersRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLoadBalancerListenersRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerListenersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateLoadBalancerListenersResponseUnmarshaller _instance;
    public static CreateLoadBalancerListenersResponseUnmarshaller Instance { get; }
    private static CreateLoadBalancerListenersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateLoadBalancerListenersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLoadBalancerListenersResponseUnmarshaller GetInstance();
    public static CreateLoadBalancerListenersResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLoadBalancerPolicyRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateLoadBalancerPolicyResponseUnmarshaller _instance;
    public static CreateLoadBalancerPolicyResponseUnmarshaller Instance { get; }
    private static CreateLoadBalancerPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateLoadBalancerPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLoadBalancerPolicyResponseUnmarshaller GetInstance();
    public static CreateLoadBalancerPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLoadBalancerRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateLoadBalancerResponseUnmarshaller _instance;
    public static CreateLoadBalancerResponseUnmarshaller Instance { get; }
    private static CreateLoadBalancerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateLoadBalancerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLoadBalancerResponseUnmarshaller GetInstance();
    public static CreateLoadBalancerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CrossZoneLoadBalancingUnmarshaller : object {
    private static CrossZoneLoadBalancingUnmarshaller _instance;
    public static CrossZoneLoadBalancingUnmarshaller Instance { get; }
    private static CrossZoneLoadBalancingUnmarshaller();
    public sealed virtual CrossZoneLoadBalancing Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CrossZoneLoadBalancing Unmarshall(JsonUnmarshallerContext context);
    public static CrossZoneLoadBalancingUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerListenersRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLoadBalancerListenersRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerListenersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteLoadBalancerListenersResponseUnmarshaller _instance;
    public static DeleteLoadBalancerListenersResponseUnmarshaller Instance { get; }
    private static DeleteLoadBalancerListenersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteLoadBalancerListenersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLoadBalancerListenersResponseUnmarshaller GetInstance();
    public static DeleteLoadBalancerListenersResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLoadBalancerPolicyRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteLoadBalancerPolicyResponseUnmarshaller _instance;
    public static DeleteLoadBalancerPolicyResponseUnmarshaller Instance { get; }
    private static DeleteLoadBalancerPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteLoadBalancerPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLoadBalancerPolicyResponseUnmarshaller GetInstance();
    public static DeleteLoadBalancerPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLoadBalancerRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteLoadBalancerResponseUnmarshaller _instance;
    public static DeleteLoadBalancerResponseUnmarshaller Instance { get; }
    private static DeleteLoadBalancerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteLoadBalancerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLoadBalancerResponseUnmarshaller GetInstance();
    public static DeleteLoadBalancerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeregisterInstancesFromLoadBalancerRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterInstancesFromLoadBalancerRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeregisterInstancesFromLoadBalancerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeregisterInstancesFromLoadBalancerResponseUnmarshaller _instance;
    public static DeregisterInstancesFromLoadBalancerResponseUnmarshaller Instance { get; }
    private static DeregisterInstancesFromLoadBalancerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeregisterInstancesFromLoadBalancerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterInstancesFromLoadBalancerResponseUnmarshaller GetInstance();
    public static DeregisterInstancesFromLoadBalancerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeInstanceHealthRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceHealthRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeInstanceHealthResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeInstanceHealthResponseUnmarshaller _instance;
    public static DescribeInstanceHealthResponseUnmarshaller Instance { get; }
    private static DescribeInstanceHealthResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeInstanceHealthResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceHealthResponseUnmarshaller GetInstance();
    public static DescribeInstanceHealthResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLoadBalancerAttributesRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeLoadBalancerAttributesResponseUnmarshaller _instance;
    public static DescribeLoadBalancerAttributesResponseUnmarshaller Instance { get; }
    private static DescribeLoadBalancerAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeLoadBalancerAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLoadBalancerAttributesResponseUnmarshaller GetInstance();
    public static DescribeLoadBalancerAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerPoliciesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLoadBalancerPoliciesRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerPoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeLoadBalancerPoliciesResponseUnmarshaller _instance;
    public static DescribeLoadBalancerPoliciesResponseUnmarshaller Instance { get; }
    private static DescribeLoadBalancerPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeLoadBalancerPoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLoadBalancerPoliciesResponseUnmarshaller GetInstance();
    public static DescribeLoadBalancerPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerPolicyTypesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLoadBalancerPolicyTypesRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerPolicyTypesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeLoadBalancerPolicyTypesResponseUnmarshaller _instance;
    public static DescribeLoadBalancerPolicyTypesResponseUnmarshaller Instance { get; }
    private static DescribeLoadBalancerPolicyTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeLoadBalancerPolicyTypesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLoadBalancerPolicyTypesResponseUnmarshaller GetInstance();
    public static DescribeLoadBalancerPolicyTypesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancersRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLoadBalancersRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeLoadBalancersResponseUnmarshaller _instance;
    public static DescribeLoadBalancersResponseUnmarshaller Instance { get; }
    private static DescribeLoadBalancersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeLoadBalancersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLoadBalancersResponseUnmarshaller GetInstance();
    public static DescribeLoadBalancersResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTagsRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeTagsResponseUnmarshaller _instance;
    public static DescribeTagsResponseUnmarshaller Instance { get; }
    private static DescribeTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTagsResponseUnmarshaller GetInstance();
    public static DescribeTagsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DetachLoadBalancerFromSubnetsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DetachLoadBalancerFromSubnetsRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DetachLoadBalancerFromSubnetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DetachLoadBalancerFromSubnetsResponseUnmarshaller _instance;
    public static DetachLoadBalancerFromSubnetsResponseUnmarshaller Instance { get; }
    private static DetachLoadBalancerFromSubnetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DetachLoadBalancerFromSubnetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DetachLoadBalancerFromSubnetsResponseUnmarshaller GetInstance();
    public static DetachLoadBalancerFromSubnetsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DisableAvailabilityZonesForLoadBalancerRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableAvailabilityZonesForLoadBalancerRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DisableAvailabilityZonesForLoadBalancerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DisableAvailabilityZonesForLoadBalancerResponseUnmarshaller _instance;
    public static DisableAvailabilityZonesForLoadBalancerResponseUnmarshaller Instance { get; }
    private static DisableAvailabilityZonesForLoadBalancerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DisableAvailabilityZonesForLoadBalancerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableAvailabilityZonesForLoadBalancerResponseUnmarshaller GetInstance();
    public static DisableAvailabilityZonesForLoadBalancerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.EnableAvailabilityZonesForLoadBalancerRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableAvailabilityZonesForLoadBalancerRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.EnableAvailabilityZonesForLoadBalancerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static EnableAvailabilityZonesForLoadBalancerResponseUnmarshaller _instance;
    public static EnableAvailabilityZonesForLoadBalancerResponseUnmarshaller Instance { get; }
    private static EnableAvailabilityZonesForLoadBalancerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, EnableAvailabilityZonesForLoadBalancerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableAvailabilityZonesForLoadBalancerResponseUnmarshaller GetInstance();
    public static EnableAvailabilityZonesForLoadBalancerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.HealthCheckUnmarshaller : object {
    private static HealthCheckUnmarshaller _instance;
    public static HealthCheckUnmarshaller Instance { get; }
    private static HealthCheckUnmarshaller();
    public sealed virtual HealthCheck Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HealthCheck Unmarshall(JsonUnmarshallerContext context);
    public static HealthCheckUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller : object {
    private static InstanceStateUnmarshaller _instance;
    public static InstanceStateUnmarshaller Instance { get; }
    private static InstanceStateUnmarshaller();
    public sealed virtual InstanceState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceState Unmarshall(JsonUnmarshallerContext context);
    public static InstanceStateUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.InstanceUnmarshaller : object {
    private static InstanceUnmarshaller _instance;
    public static InstanceUnmarshaller Instance { get; }
    private static InstanceUnmarshaller();
    public sealed virtual Instance Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Instance Unmarshall(JsonUnmarshallerContext context);
    public static InstanceUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.LBCookieStickinessPolicyUnmarshaller : object {
    private static LBCookieStickinessPolicyUnmarshaller _instance;
    public static LBCookieStickinessPolicyUnmarshaller Instance { get; }
    private static LBCookieStickinessPolicyUnmarshaller();
    public sealed virtual LBCookieStickinessPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LBCookieStickinessPolicy Unmarshall(JsonUnmarshallerContext context);
    public static LBCookieStickinessPolicyUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ListenerDescriptionUnmarshaller : object {
    private static ListenerDescriptionUnmarshaller _instance;
    public static ListenerDescriptionUnmarshaller Instance { get; }
    private static ListenerDescriptionUnmarshaller();
    public sealed virtual ListenerDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ListenerDescription Unmarshall(JsonUnmarshallerContext context);
    public static ListenerDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ListenerUnmarshaller : object {
    private static ListenerUnmarshaller _instance;
    public static ListenerUnmarshaller Instance { get; }
    private static ListenerUnmarshaller();
    public sealed virtual Listener Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Listener Unmarshall(JsonUnmarshallerContext context);
    public static ListenerUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.LoadBalancerAttributesUnmarshaller : object {
    private static LoadBalancerAttributesUnmarshaller _instance;
    public static LoadBalancerAttributesUnmarshaller Instance { get; }
    private static LoadBalancerAttributesUnmarshaller();
    public sealed virtual LoadBalancerAttributes Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoadBalancerAttributes Unmarshall(JsonUnmarshallerContext context);
    public static LoadBalancerAttributesUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.LoadBalancerDescriptionUnmarshaller : object {
    private static LoadBalancerDescriptionUnmarshaller _instance;
    public static LoadBalancerDescriptionUnmarshaller Instance { get; }
    private static LoadBalancerDescriptionUnmarshaller();
    public sealed virtual LoadBalancerDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoadBalancerDescription Unmarshall(JsonUnmarshallerContext context);
    public static LoadBalancerDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ModifyLoadBalancerAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyLoadBalancerAttributesRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ModifyLoadBalancerAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ModifyLoadBalancerAttributesResponseUnmarshaller _instance;
    public static ModifyLoadBalancerAttributesResponseUnmarshaller Instance { get; }
    private static ModifyLoadBalancerAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ModifyLoadBalancerAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyLoadBalancerAttributesResponseUnmarshaller GetInstance();
    public static ModifyLoadBalancerAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.PoliciesUnmarshaller : object {
    private static PoliciesUnmarshaller _instance;
    public static PoliciesUnmarshaller Instance { get; }
    private static PoliciesUnmarshaller();
    public sealed virtual Policies Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Policies Unmarshall(JsonUnmarshallerContext context);
    public static PoliciesUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.PolicyAttributeDescriptionUnmarshaller : object {
    private static PolicyAttributeDescriptionUnmarshaller _instance;
    public static PolicyAttributeDescriptionUnmarshaller Instance { get; }
    private static PolicyAttributeDescriptionUnmarshaller();
    public sealed virtual PolicyAttributeDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PolicyAttributeDescription Unmarshall(JsonUnmarshallerContext context);
    public static PolicyAttributeDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.PolicyAttributeTypeDescriptionUnmarshaller : object {
    private static PolicyAttributeTypeDescriptionUnmarshaller _instance;
    public static PolicyAttributeTypeDescriptionUnmarshaller Instance { get; }
    private static PolicyAttributeTypeDescriptionUnmarshaller();
    public sealed virtual PolicyAttributeTypeDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PolicyAttributeTypeDescription Unmarshall(JsonUnmarshallerContext context);
    public static PolicyAttributeTypeDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.PolicyDescriptionUnmarshaller : object {
    private static PolicyDescriptionUnmarshaller _instance;
    public static PolicyDescriptionUnmarshaller Instance { get; }
    private static PolicyDescriptionUnmarshaller();
    public sealed virtual PolicyDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PolicyDescription Unmarshall(JsonUnmarshallerContext context);
    public static PolicyDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.PolicyTypeDescriptionUnmarshaller : object {
    private static PolicyTypeDescriptionUnmarshaller _instance;
    public static PolicyTypeDescriptionUnmarshaller Instance { get; }
    private static PolicyTypeDescriptionUnmarshaller();
    public sealed virtual PolicyTypeDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PolicyTypeDescription Unmarshall(JsonUnmarshallerContext context);
    public static PolicyTypeDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.RegisterInstancesWithLoadBalancerRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterInstancesWithLoadBalancerRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.RegisterInstancesWithLoadBalancerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RegisterInstancesWithLoadBalancerResponseUnmarshaller _instance;
    public static RegisterInstancesWithLoadBalancerResponseUnmarshaller Instance { get; }
    private static RegisterInstancesWithLoadBalancerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RegisterInstancesWithLoadBalancerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterInstancesWithLoadBalancerResponseUnmarshaller GetInstance();
    public static RegisterInstancesWithLoadBalancerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.RemoveTagsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTagsRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.RemoveTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemoveTagsResponseUnmarshaller _instance;
    public static RemoveTagsResponseUnmarshaller Instance { get; }
    private static RemoveTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemoveTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTagsResponseUnmarshaller GetInstance();
    public static RemoveTagsResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerListenerSSLCertificateRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetLoadBalancerListenerSSLCertificateRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerListenerSSLCertificateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetLoadBalancerListenerSSLCertificateResponseUnmarshaller _instance;
    public static SetLoadBalancerListenerSSLCertificateResponseUnmarshaller Instance { get; }
    private static SetLoadBalancerListenerSSLCertificateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetLoadBalancerListenerSSLCertificateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetLoadBalancerListenerSSLCertificateResponseUnmarshaller GetInstance();
    public static SetLoadBalancerListenerSSLCertificateResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerPoliciesForBackendServerRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetLoadBalancerPoliciesForBackendServerRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerPoliciesForBackendServerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetLoadBalancerPoliciesForBackendServerResponseUnmarshaller _instance;
    public static SetLoadBalancerPoliciesForBackendServerResponseUnmarshaller Instance { get; }
    private static SetLoadBalancerPoliciesForBackendServerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetLoadBalancerPoliciesForBackendServerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetLoadBalancerPoliciesForBackendServerResponseUnmarshaller GetInstance();
    public static SetLoadBalancerPoliciesForBackendServerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerPoliciesOfListenerRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetLoadBalancerPoliciesOfListenerRequest publicRequest);
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerPoliciesOfListenerResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetLoadBalancerPoliciesOfListenerResponseUnmarshaller _instance;
    public static SetLoadBalancerPoliciesOfListenerResponseUnmarshaller Instance { get; }
    private static SetLoadBalancerPoliciesOfListenerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetLoadBalancerPoliciesOfListenerResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetLoadBalancerPoliciesOfListenerResponseUnmarshaller GetInstance();
    public static SetLoadBalancerPoliciesOfListenerResponseUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SourceSecurityGroupUnmarshaller : object {
    private static SourceSecurityGroupUnmarshaller _instance;
    public static SourceSecurityGroupUnmarshaller Instance { get; }
    private static SourceSecurityGroupUnmarshaller();
    public sealed virtual SourceSecurityGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceSecurityGroup Unmarshall(JsonUnmarshallerContext context);
    public static SourceSecurityGroupUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller : object {
    private static TagDescriptionUnmarshaller _instance;
    public static TagDescriptionUnmarshaller Instance { get; }
    private static TagDescriptionUnmarshaller();
    public sealed virtual TagDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TagDescription Unmarshall(JsonUnmarshallerContext context);
    public static TagDescriptionUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    public sealed virtual Tag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.ElasticLoadBalancing.Model.InvalidConfigurationRequestException : AmazonElasticLoadBalancingException {
    public InvalidConfigurationRequestException(string message);
    public InvalidConfigurationRequestException(string message, Exception innerException);
    public InvalidConfigurationRequestException(Exception innerException);
    public InvalidConfigurationRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidConfigurationRequestException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.InvalidEndPointException : AmazonElasticLoadBalancingException {
    public InvalidEndPointException(string message);
    public InvalidEndPointException(string message, Exception innerException);
    public InvalidEndPointException(Exception innerException);
    public InvalidEndPointException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidEndPointException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.InvalidInstanceException : AmazonElasticLoadBalancingException {
    public InvalidInstanceException(string message);
    public InvalidInstanceException(string message, Exception innerException);
    public InvalidInstanceException(Exception innerException);
    public InvalidInstanceException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidInstanceException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.InvalidSchemeException : AmazonElasticLoadBalancingException {
    public InvalidSchemeException(string message);
    public InvalidSchemeException(string message, Exception innerException);
    public InvalidSchemeException(Exception innerException);
    public InvalidSchemeException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidSchemeException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.InvalidSecurityGroupException : AmazonElasticLoadBalancingException {
    public InvalidSecurityGroupException(string message);
    public InvalidSecurityGroupException(string message, Exception innerException);
    public InvalidSecurityGroupException(Exception innerException);
    public InvalidSecurityGroupException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidSecurityGroupException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.InvalidSubnetException : AmazonElasticLoadBalancingException {
    public InvalidSubnetException(string message);
    public InvalidSubnetException(string message, Exception innerException);
    public InvalidSubnetException(Exception innerException);
    public InvalidSubnetException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidSubnetException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.LBCookieStickinessPolicy : object {
    private Nullable`1<long> _cookieExpirationPeriod;
    private string _policyName;
    public long CookieExpirationPeriod { get; public set; }
    public string PolicyName { get; public set; }
    public LBCookieStickinessPolicy(string policyName, long cookieExpirationPeriod);
    public long get_CookieExpirationPeriod();
    public void set_CookieExpirationPeriod(long value);
    internal bool IsSetCookieExpirationPeriod();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.ElasticLoadBalancing.Model.Listener : object {
    private Nullable`1<int> _instancePort;
    private string _instanceProtocol;
    private Nullable`1<int> _loadBalancerPort;
    private string _protocol;
    private string _sslCertificateId;
    public int InstancePort { get; public set; }
    public string InstanceProtocol { get; public set; }
    public int LoadBalancerPort { get; public set; }
    public string Protocol { get; public set; }
    public string SSLCertificateId { get; public set; }
    public Listener(string protocol, int loadBalancerPort, int instancePort);
    public int get_InstancePort();
    public void set_InstancePort(int value);
    internal bool IsSetInstancePort();
    public string get_InstanceProtocol();
    public void set_InstanceProtocol(string value);
    internal bool IsSetInstanceProtocol();
    public int get_LoadBalancerPort();
    public void set_LoadBalancerPort(int value);
    internal bool IsSetLoadBalancerPort();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public string get_SSLCertificateId();
    public void set_SSLCertificateId(string value);
    internal bool IsSetSSLCertificateId();
}
public class Amazon.ElasticLoadBalancing.Model.ListenerDescription : object {
    private Listener _listener;
    private List`1<string> _policyNames;
    public Listener Listener { get; public set; }
    public List`1<string> PolicyNames { get; public set; }
    public Listener get_Listener();
    public void set_Listener(Listener value);
    internal bool IsSetListener();
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
}
public class Amazon.ElasticLoadBalancing.Model.ListenerNotFoundException : AmazonElasticLoadBalancingException {
    public ListenerNotFoundException(string message);
    public ListenerNotFoundException(string message, Exception innerException);
    public ListenerNotFoundException(Exception innerException);
    public ListenerNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ListenerNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.LoadBalancerAttributeNotFoundException : AmazonElasticLoadBalancingException {
    public LoadBalancerAttributeNotFoundException(string message);
    public LoadBalancerAttributeNotFoundException(string message, Exception innerException);
    public LoadBalancerAttributeNotFoundException(Exception innerException);
    public LoadBalancerAttributeNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LoadBalancerAttributeNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.LoadBalancerAttributes : object {
    private AccessLog _accessLog;
    private List`1<AdditionalAttribute> _additionalAttributes;
    private ConnectionDraining _connectionDraining;
    private ConnectionSettings _connectionSettings;
    private CrossZoneLoadBalancing _crossZoneLoadBalancing;
    public AccessLog AccessLog { get; public set; }
    public List`1<AdditionalAttribute> AdditionalAttributes { get; public set; }
    public ConnectionDraining ConnectionDraining { get; public set; }
    public ConnectionSettings ConnectionSettings { get; public set; }
    public CrossZoneLoadBalancing CrossZoneLoadBalancing { get; public set; }
    public AccessLog get_AccessLog();
    public void set_AccessLog(AccessLog value);
    internal bool IsSetAccessLog();
    public List`1<AdditionalAttribute> get_AdditionalAttributes();
    public void set_AdditionalAttributes(List`1<AdditionalAttribute> value);
    internal bool IsSetAdditionalAttributes();
    public ConnectionDraining get_ConnectionDraining();
    public void set_ConnectionDraining(ConnectionDraining value);
    internal bool IsSetConnectionDraining();
    public ConnectionSettings get_ConnectionSettings();
    public void set_ConnectionSettings(ConnectionSettings value);
    internal bool IsSetConnectionSettings();
    public CrossZoneLoadBalancing get_CrossZoneLoadBalancing();
    public void set_CrossZoneLoadBalancing(CrossZoneLoadBalancing value);
    internal bool IsSetCrossZoneLoadBalancing();
}
public class Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription : object {
    private List`1<string> _availabilityZones;
    private List`1<BackendServerDescription> _backendServerDescriptions;
    private string _canonicalHostedZoneName;
    private string _canonicalHostedZoneNameID;
    private Nullable`1<DateTime> _createdTime;
    private string _dnsName;
    private HealthCheck _healthCheck;
    private List`1<Instance> _instances;
    private List`1<ListenerDescription> _listenerDescriptions;
    private string _loadBalancerName;
    private Policies _policies;
    private string _scheme;
    private List`1<string> _securityGroups;
    private SourceSecurityGroup _sourceSecurityGroup;
    private List`1<string> _subnets;
    private string _vpcId;
    public List`1<string> AvailabilityZones { get; public set; }
    public List`1<BackendServerDescription> BackendServerDescriptions { get; public set; }
    public string CanonicalHostedZoneName { get; public set; }
    public string CanonicalHostedZoneNameID { get; public set; }
    public DateTime CreatedTime { get; public set; }
    public string DNSName { get; public set; }
    public HealthCheck HealthCheck { get; public set; }
    public List`1<Instance> Instances { get; public set; }
    public List`1<ListenerDescription> ListenerDescriptions { get; public set; }
    public string LoadBalancerName { get; public set; }
    public Policies Policies { get; public set; }
    public string Scheme { get; public set; }
    public List`1<string> SecurityGroups { get; public set; }
    public SourceSecurityGroup SourceSecurityGroup { get; public set; }
    public List`1<string> Subnets { get; public set; }
    public string VPCId { get; public set; }
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public List`1<BackendServerDescription> get_BackendServerDescriptions();
    public void set_BackendServerDescriptions(List`1<BackendServerDescription> value);
    internal bool IsSetBackendServerDescriptions();
    public string get_CanonicalHostedZoneName();
    public void set_CanonicalHostedZoneName(string value);
    internal bool IsSetCanonicalHostedZoneName();
    public string get_CanonicalHostedZoneNameID();
    public void set_CanonicalHostedZoneNameID(string value);
    internal bool IsSetCanonicalHostedZoneNameID();
    public DateTime get_CreatedTime();
    public void set_CreatedTime(DateTime value);
    internal bool IsSetCreatedTime();
    public string get_DNSName();
    public void set_DNSName(string value);
    internal bool IsSetDNSName();
    public HealthCheck get_HealthCheck();
    public void set_HealthCheck(HealthCheck value);
    internal bool IsSetHealthCheck();
    public List`1<Instance> get_Instances();
    public void set_Instances(List`1<Instance> value);
    internal bool IsSetInstances();
    public List`1<ListenerDescription> get_ListenerDescriptions();
    public void set_ListenerDescriptions(List`1<ListenerDescription> value);
    internal bool IsSetListenerDescriptions();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public Policies get_Policies();
    public void set_Policies(Policies value);
    internal bool IsSetPolicies();
    public string get_Scheme();
    public void set_Scheme(string value);
    internal bool IsSetScheme();
    public List`1<string> get_SecurityGroups();
    public void set_SecurityGroups(List`1<string> value);
    internal bool IsSetSecurityGroups();
    public SourceSecurityGroup get_SourceSecurityGroup();
    public void set_SourceSecurityGroup(SourceSecurityGroup value);
    internal bool IsSetSourceSecurityGroup();
    public List`1<string> get_Subnets();
    public void set_Subnets(List`1<string> value);
    internal bool IsSetSubnets();
    public string get_VPCId();
    public void set_VPCId(string value);
    internal bool IsSetVPCId();
}
public class Amazon.ElasticLoadBalancing.Model.LoadBalancerNotFoundException : AmazonElasticLoadBalancingException {
    public LoadBalancerNotFoundException(string message);
    public LoadBalancerNotFoundException(string message, Exception innerException);
    public LoadBalancerNotFoundException(Exception innerException);
    public LoadBalancerNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LoadBalancerNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesRequest : AmazonElasticLoadBalancingRequest {
    private LoadBalancerAttributes _loadBalancerAttributes;
    private string _loadBalancerName;
    public LoadBalancerAttributes LoadBalancerAttributes { get; public set; }
    public string LoadBalancerName { get; public set; }
    public LoadBalancerAttributes get_LoadBalancerAttributes();
    public void set_LoadBalancerAttributes(LoadBalancerAttributes value);
    internal bool IsSetLoadBalancerAttributes();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesResponse : ModifyLoadBalancerAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ModifyLoadBalancerAttributesResult class are now available on the ModifyLoadBalancerAttributesResponse class. You should use the properties on ModifyLoadBalancerAttributesResponse instead of accessing them through ModifyLoadBalancerAttributesResult.")]
public ModifyLoadBalancerAttributesResult ModifyLoadBalancerAttributesResult { get; }
    public ModifyLoadBalancerAttributesResult get_ModifyLoadBalancerAttributesResult();
}
public class Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesResult : AmazonWebServiceResponse {
    private LoadBalancerAttributes _loadBalancerAttributes;
    private string _loadBalancerName;
    public LoadBalancerAttributes LoadBalancerAttributes { get; public set; }
    public string LoadBalancerName { get; public set; }
    public LoadBalancerAttributes get_LoadBalancerAttributes();
    public void set_LoadBalancerAttributes(LoadBalancerAttributes value);
    internal bool IsSetLoadBalancerAttributes();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.Policies : object {
    private List`1<AppCookieStickinessPolicy> _appCookieStickinessPolicies;
    private List`1<LBCookieStickinessPolicy> _lbCookieStickinessPolicies;
    private List`1<string> _otherPolicies;
    public List`1<AppCookieStickinessPolicy> AppCookieStickinessPolicies { get; public set; }
    public List`1<LBCookieStickinessPolicy> LBCookieStickinessPolicies { get; public set; }
    public List`1<string> OtherPolicies { get; public set; }
    public List`1<AppCookieStickinessPolicy> get_AppCookieStickinessPolicies();
    public void set_AppCookieStickinessPolicies(List`1<AppCookieStickinessPolicy> value);
    internal bool IsSetAppCookieStickinessPolicies();
    public List`1<LBCookieStickinessPolicy> get_LBCookieStickinessPolicies();
    public void set_LBCookieStickinessPolicies(List`1<LBCookieStickinessPolicy> value);
    internal bool IsSetLBCookieStickinessPolicies();
    public List`1<string> get_OtherPolicies();
    public void set_OtherPolicies(List`1<string> value);
    internal bool IsSetOtherPolicies();
}
public class Amazon.ElasticLoadBalancing.Model.PolicyAttribute : object {
    private string _attributeName;
    private string _attributeValue;
    public string AttributeName { get; public set; }
    public string AttributeValue { get; public set; }
    public PolicyAttribute(string attributeName, string attributeValue);
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public string get_AttributeValue();
    public void set_AttributeValue(string value);
    internal bool IsSetAttributeValue();
}
public class Amazon.ElasticLoadBalancing.Model.PolicyAttributeDescription : object {
    private string _attributeName;
    private string _attributeValue;
    public string AttributeName { get; public set; }
    public string AttributeValue { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public string get_AttributeValue();
    public void set_AttributeValue(string value);
    internal bool IsSetAttributeValue();
}
public class Amazon.ElasticLoadBalancing.Model.PolicyAttributeTypeDescription : object {
    private string _attributeName;
    private string _attributeType;
    private string _cardinality;
    private string _defaultValue;
    private string _description;
    public string AttributeName { get; public set; }
    public string AttributeType { get; public set; }
    public string Cardinality { get; public set; }
    public string DefaultValue { get; public set; }
    public string Description { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public string get_AttributeType();
    public void set_AttributeType(string value);
    internal bool IsSetAttributeType();
    public string get_Cardinality();
    public void set_Cardinality(string value);
    internal bool IsSetCardinality();
    public string get_DefaultValue();
    public void set_DefaultValue(string value);
    internal bool IsSetDefaultValue();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.ElasticLoadBalancing.Model.PolicyDescription : object {
    private List`1<PolicyAttributeDescription> _policyAttributeDescriptions;
    private string _policyName;
    private string _policyTypeName;
    public List`1<PolicyAttributeDescription> PolicyAttributeDescriptions { get; public set; }
    public string PolicyName { get; public set; }
    public string PolicyTypeName { get; public set; }
    public List`1<PolicyAttributeDescription> get_PolicyAttributeDescriptions();
    public void set_PolicyAttributeDescriptions(List`1<PolicyAttributeDescription> value);
    internal bool IsSetPolicyAttributeDescriptions();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public string get_PolicyTypeName();
    public void set_PolicyTypeName(string value);
    internal bool IsSetPolicyTypeName();
}
public class Amazon.ElasticLoadBalancing.Model.PolicyNotFoundException : AmazonElasticLoadBalancingException {
    public PolicyNotFoundException(string message);
    public PolicyNotFoundException(string message, Exception innerException);
    public PolicyNotFoundException(Exception innerException);
    public PolicyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public PolicyNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.PolicyTypeDescription : object {
    private string _description;
    private List`1<PolicyAttributeTypeDescription> _policyAttributeTypeDescriptions;
    private string _policyTypeName;
    public string Description { get; public set; }
    public List`1<PolicyAttributeTypeDescription> PolicyAttributeTypeDescriptions { get; public set; }
    public string PolicyTypeName { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public List`1<PolicyAttributeTypeDescription> get_PolicyAttributeTypeDescriptions();
    public void set_PolicyAttributeTypeDescriptions(List`1<PolicyAttributeTypeDescription> value);
    internal bool IsSetPolicyAttributeTypeDescriptions();
    public string get_PolicyTypeName();
    public void set_PolicyTypeName(string value);
    internal bool IsSetPolicyTypeName();
}
public class Amazon.ElasticLoadBalancing.Model.PolicyTypeNotFoundException : AmazonElasticLoadBalancingException {
    public PolicyTypeNotFoundException(string message);
    public PolicyTypeNotFoundException(string message, Exception innerException);
    public PolicyTypeNotFoundException(Exception innerException);
    public PolicyTypeNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public PolicyTypeNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerRequest : AmazonElasticLoadBalancingRequest {
    private List`1<Instance> _instances;
    private string _loadBalancerName;
    public List`1<Instance> Instances { get; public set; }
    public string LoadBalancerName { get; public set; }
    public RegisterInstancesWithLoadBalancerRequest(string loadBalancerName, List`1<Instance> instances);
    public List`1<Instance> get_Instances();
    public void set_Instances(List`1<Instance> value);
    internal bool IsSetInstances();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
}
public class Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerResponse : RegisterInstancesWithLoadBalancerResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the RegisterInstancesWithLoadBalancerResult class are now available on the RegisterInstancesWithLoadBalancerResponse class. You should use the properties on RegisterInstancesWithLoadBalancerResponse instead of accessing them through RegisterInstancesWithLoadBalancerResult.")]
public RegisterInstancesWithLoadBalancerResult RegisterInstancesWithLoadBalancerResult { get; }
    public RegisterInstancesWithLoadBalancerResult get_RegisterInstancesWithLoadBalancerResult();
}
public class Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerResult : AmazonWebServiceResponse {
    private List`1<Instance> _instances;
    public List`1<Instance> Instances { get; public set; }
    public List`1<Instance> get_Instances();
    public void set_Instances(List`1<Instance> value);
    internal bool IsSetInstances();
}
public class Amazon.ElasticLoadBalancing.Model.RemoveTagsRequest : AmazonElasticLoadBalancingRequest {
    private List`1<string> _loadBalancerNames;
    private List`1<TagKeyOnly> _tags;
    public List`1<string> LoadBalancerNames { get; public set; }
    public List`1<TagKeyOnly> Tags { get; public set; }
    public List`1<string> get_LoadBalancerNames();
    public void set_LoadBalancerNames(List`1<string> value);
    internal bool IsSetLoadBalancerNames();
    public List`1<TagKeyOnly> get_Tags();
    public void set_Tags(List`1<TagKeyOnly> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticLoadBalancing.Model.RemoveTagsResponse : RemoveTagsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the RemoveTagsResult class are now available on the RemoveTagsResponse class. You should use the properties on RemoveTagsResponse instead of accessing them through RemoveTagsResult.")]
public RemoveTagsResult RemoveTagsResult { get; }
    public RemoveTagsResult get_RemoveTagsResult();
}
public class Amazon.ElasticLoadBalancing.Model.RemoveTagsResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    private Nullable`1<int> _loadBalancerPort;
    private string _sslCertificateId;
    public string LoadBalancerName { get; public set; }
    public int LoadBalancerPort { get; public set; }
    public string SSLCertificateId { get; public set; }
    public SetLoadBalancerListenerSSLCertificateRequest(string loadBalancerName, int loadBalancerPort, string sslCertificateId);
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public int get_LoadBalancerPort();
    public void set_LoadBalancerPort(int value);
    internal bool IsSetLoadBalancerPort();
    public string get_SSLCertificateId();
    public void set_SSLCertificateId(string value);
    internal bool IsSetSSLCertificateId();
}
public class Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateResponse : SetLoadBalancerListenerSSLCertificateResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SetLoadBalancerListenerSSLCertificateResult class are now available on the SetLoadBalancerListenerSSLCertificateResponse class. You should use the properties on SetLoadBalancerListenerSSLCertificateResponse instead of accessing them through SetLoadBalancerListenerSSLCertificateResult.")]
public SetLoadBalancerListenerSSLCertificateResult SetLoadBalancerListenerSSLCertificateResult { get; }
    public SetLoadBalancerListenerSSLCertificateResult get_SetLoadBalancerListenerSSLCertificateResult();
}
public class Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerRequest : AmazonElasticLoadBalancingRequest {
    private Nullable`1<int> _instancePort;
    private string _loadBalancerName;
    private List`1<string> _policyNames;
    public int InstancePort { get; public set; }
    public string LoadBalancerName { get; public set; }
    public List`1<string> PolicyNames { get; public set; }
    public int get_InstancePort();
    public void set_InstancePort(int value);
    internal bool IsSetInstancePort();
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
}
public class Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerResponse : SetLoadBalancerPoliciesForBackendServerResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SetLoadBalancerPoliciesForBackendServerResult class are now available on the SetLoadBalancerPoliciesForBackendServerResponse class. You should use the properties on SetLoadBalancerPoliciesForBackendServerResponse instead of accessing them through SetLoadBalancerPoliciesForBackendServerResult.")]
public SetLoadBalancerPoliciesForBackendServerResult SetLoadBalancerPoliciesForBackendServerResult { get; }
    public SetLoadBalancerPoliciesForBackendServerResult get_SetLoadBalancerPoliciesForBackendServerResult();
}
public class Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerRequest : AmazonElasticLoadBalancingRequest {
    private string _loadBalancerName;
    private Nullable`1<int> _loadBalancerPort;
    private List`1<string> _policyNames;
    public string LoadBalancerName { get; public set; }
    public int LoadBalancerPort { get; public set; }
    public List`1<string> PolicyNames { get; public set; }
    public SetLoadBalancerPoliciesOfListenerRequest(string loadBalancerName, int loadBalancerPort, List`1<string> policyNames);
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public int get_LoadBalancerPort();
    public void set_LoadBalancerPort(int value);
    internal bool IsSetLoadBalancerPort();
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
}
public class Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerResponse : SetLoadBalancerPoliciesOfListenerResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SetLoadBalancerPoliciesOfListenerResult class are now available on the SetLoadBalancerPoliciesOfListenerResponse class. You should use the properties on SetLoadBalancerPoliciesOfListenerResponse instead of accessing them through SetLoadBalancerPoliciesOfListenerResult.")]
public SetLoadBalancerPoliciesOfListenerResult SetLoadBalancerPoliciesOfListenerResult { get; }
    public SetLoadBalancerPoliciesOfListenerResult get_SetLoadBalancerPoliciesOfListenerResult();
}
public class Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerResult : AmazonWebServiceResponse {
}
public class Amazon.ElasticLoadBalancing.Model.SourceSecurityGroup : object {
    private string _groupName;
    private string _ownerAlias;
    public string GroupName { get; public set; }
    public string OwnerAlias { get; public set; }
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_OwnerAlias();
    public void set_OwnerAlias(string value);
    internal bool IsSetOwnerAlias();
}
public class Amazon.ElasticLoadBalancing.Model.SubnetNotFoundException : AmazonElasticLoadBalancingException {
    public SubnetNotFoundException(string message);
    public SubnetNotFoundException(string message, Exception innerException);
    public SubnetNotFoundException(Exception innerException);
    public SubnetNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public SubnetNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.Tag : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.ElasticLoadBalancing.Model.TagDescription : object {
    private string _loadBalancerName;
    private List`1<Tag> _tags;
    public string LoadBalancerName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_LoadBalancerName();
    public void set_LoadBalancerName(string value);
    internal bool IsSetLoadBalancerName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.ElasticLoadBalancing.Model.TagKeyOnly : object {
    private string _key;
    public string Key { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
}
public class Amazon.ElasticLoadBalancing.Model.TooManyAccessPointsException : AmazonElasticLoadBalancingException {
    public TooManyAccessPointsException(string message);
    public TooManyAccessPointsException(string message, Exception innerException);
    public TooManyAccessPointsException(Exception innerException);
    public TooManyAccessPointsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TooManyAccessPointsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.TooManyLoadBalancersException : AmazonElasticLoadBalancingException {
    public TooManyLoadBalancersException(string message);
    public TooManyLoadBalancersException(string message, Exception innerException);
    public TooManyLoadBalancersException(Exception innerException);
    public TooManyLoadBalancersException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TooManyLoadBalancersException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.TooManyPoliciesException : AmazonElasticLoadBalancingException {
    public TooManyPoliciesException(string message);
    public TooManyPoliciesException(string message, Exception innerException);
    public TooManyPoliciesException(Exception innerException);
    public TooManyPoliciesException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TooManyPoliciesException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.ElasticLoadBalancing.Model.TooManyTagsException : AmazonElasticLoadBalancingException {
    public TooManyTagsException(string message);
    public TooManyTagsException(string message, Exception innerException);
    public TooManyTagsException(Exception innerException);
    public TooManyTagsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TooManyTagsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.AmazonKeyManagementServiceClient : AmazonServiceClient {
    public AmazonKeyManagementServiceClient(AWSCredentials credentials);
    public AmazonKeyManagementServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonKeyManagementServiceClient(AWSCredentials credentials, AmazonKeyManagementServiceConfig clientConfig);
    public AmazonKeyManagementServiceClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonKeyManagementServiceClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonKeyManagementServiceClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonKeyManagementServiceConfig clientConfig);
    public AmazonKeyManagementServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonKeyManagementServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonKeyManagementServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonKeyManagementServiceConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void Dispose(bool disposing);
    internal CancelKeyDeletionResponse CancelKeyDeletion(CancelKeyDeletionRequest request);
    public sealed virtual Task`1<CancelKeyDeletionResponse> CancelKeyDeletionAsync(CancelKeyDeletionRequest request, CancellationToken cancellationToken);
    internal CreateAliasResponse CreateAlias(CreateAliasRequest request);
    public sealed virtual Task`1<CreateAliasResponse> CreateAliasAsync(CreateAliasRequest request, CancellationToken cancellationToken);
    internal CreateGrantResponse CreateGrant(CreateGrantRequest request);
    public sealed virtual Task`1<CreateGrantResponse> CreateGrantAsync(CreateGrantRequest request, CancellationToken cancellationToken);
    internal CreateKeyResponse CreateKey(CreateKeyRequest request);
    public sealed virtual Task`1<CreateKeyResponse> CreateKeyAsync(CreateKeyRequest request, CancellationToken cancellationToken);
    internal DecryptResponse Decrypt(DecryptRequest request);
    public sealed virtual Task`1<DecryptResponse> DecryptAsync(DecryptRequest request, CancellationToken cancellationToken);
    internal DeleteAliasResponse DeleteAlias(DeleteAliasRequest request);
    public sealed virtual Task`1<DeleteAliasResponse> DeleteAliasAsync(DeleteAliasRequest request, CancellationToken cancellationToken);
    internal DescribeKeyResponse DescribeKey(DescribeKeyRequest request);
    public sealed virtual Task`1<DescribeKeyResponse> DescribeKeyAsync(DescribeKeyRequest request, CancellationToken cancellationToken);
    internal DisableKeyResponse DisableKey(DisableKeyRequest request);
    public sealed virtual Task`1<DisableKeyResponse> DisableKeyAsync(DisableKeyRequest request, CancellationToken cancellationToken);
    internal DisableKeyRotationResponse DisableKeyRotation(DisableKeyRotationRequest request);
    public sealed virtual Task`1<DisableKeyRotationResponse> DisableKeyRotationAsync(DisableKeyRotationRequest request, CancellationToken cancellationToken);
    internal EnableKeyResponse EnableKey(EnableKeyRequest request);
    public sealed virtual Task`1<EnableKeyResponse> EnableKeyAsync(EnableKeyRequest request, CancellationToken cancellationToken);
    internal EnableKeyRotationResponse EnableKeyRotation(EnableKeyRotationRequest request);
    public sealed virtual Task`1<EnableKeyRotationResponse> EnableKeyRotationAsync(EnableKeyRotationRequest request, CancellationToken cancellationToken);
    internal EncryptResponse Encrypt(EncryptRequest request);
    public sealed virtual Task`1<EncryptResponse> EncryptAsync(EncryptRequest request, CancellationToken cancellationToken);
    internal GenerateDataKeyResponse GenerateDataKey(GenerateDataKeyRequest request);
    public sealed virtual Task`1<GenerateDataKeyResponse> GenerateDataKeyAsync(GenerateDataKeyRequest request, CancellationToken cancellationToken);
    internal GenerateDataKeyWithoutPlaintextResponse GenerateDataKeyWithoutPlaintext(GenerateDataKeyWithoutPlaintextRequest request);
    public sealed virtual Task`1<GenerateDataKeyWithoutPlaintextResponse> GenerateDataKeyWithoutPlaintextAsync(GenerateDataKeyWithoutPlaintextRequest request, CancellationToken cancellationToken);
    internal GenerateRandomResponse GenerateRandom(GenerateRandomRequest request);
    public sealed virtual Task`1<GenerateRandomResponse> GenerateRandomAsync(GenerateRandomRequest request, CancellationToken cancellationToken);
    internal GetKeyPolicyResponse GetKeyPolicy(GetKeyPolicyRequest request);
    public sealed virtual Task`1<GetKeyPolicyResponse> GetKeyPolicyAsync(GetKeyPolicyRequest request, CancellationToken cancellationToken);
    internal GetKeyRotationStatusResponse GetKeyRotationStatus(GetKeyRotationStatusRequest request);
    public sealed virtual Task`1<GetKeyRotationStatusResponse> GetKeyRotationStatusAsync(GetKeyRotationStatusRequest request, CancellationToken cancellationToken);
    internal ListAliasesResponse ListAliases(ListAliasesRequest request);
    public sealed virtual Task`1<ListAliasesResponse> ListAliasesAsync(ListAliasesRequest request, CancellationToken cancellationToken);
    internal ListGrantsResponse ListGrants(ListGrantsRequest request);
    public sealed virtual Task`1<ListGrantsResponse> ListGrantsAsync(ListGrantsRequest request, CancellationToken cancellationToken);
    internal ListKeyPoliciesResponse ListKeyPolicies(ListKeyPoliciesRequest request);
    public sealed virtual Task`1<ListKeyPoliciesResponse> ListKeyPoliciesAsync(ListKeyPoliciesRequest request, CancellationToken cancellationToken);
    internal ListKeysResponse ListKeys(ListKeysRequest request);
    public sealed virtual Task`1<ListKeysResponse> ListKeysAsync(ListKeysRequest request, CancellationToken cancellationToken);
    internal ListRetirableGrantsResponse ListRetirableGrants(ListRetirableGrantsRequest request);
    public sealed virtual Task`1<ListRetirableGrantsResponse> ListRetirableGrantsAsync(ListRetirableGrantsRequest request, CancellationToken cancellationToken);
    internal PutKeyPolicyResponse PutKeyPolicy(PutKeyPolicyRequest request);
    public sealed virtual Task`1<PutKeyPolicyResponse> PutKeyPolicyAsync(PutKeyPolicyRequest request, CancellationToken cancellationToken);
    internal ReEncryptResponse ReEncrypt(ReEncryptRequest request);
    public sealed virtual Task`1<ReEncryptResponse> ReEncryptAsync(ReEncryptRequest request, CancellationToken cancellationToken);
    internal RetireGrantResponse RetireGrant(RetireGrantRequest request);
    public sealed virtual Task`1<RetireGrantResponse> RetireGrantAsync(RetireGrantRequest request, CancellationToken cancellationToken);
    internal RevokeGrantResponse RevokeGrant(RevokeGrantRequest request);
    public sealed virtual Task`1<RevokeGrantResponse> RevokeGrantAsync(RevokeGrantRequest request, CancellationToken cancellationToken);
    internal ScheduleKeyDeletionResponse ScheduleKeyDeletion(ScheduleKeyDeletionRequest request);
    public sealed virtual Task`1<ScheduleKeyDeletionResponse> ScheduleKeyDeletionAsync(ScheduleKeyDeletionRequest request, CancellationToken cancellationToken);
    internal UpdateAliasResponse UpdateAlias(UpdateAliasRequest request);
    public sealed virtual Task`1<UpdateAliasResponse> UpdateAliasAsync(UpdateAliasRequest request, CancellationToken cancellationToken);
    internal UpdateKeyDescriptionResponse UpdateKeyDescription(UpdateKeyDescriptionRequest request);
    public sealed virtual Task`1<UpdateKeyDescriptionResponse> UpdateKeyDescriptionAsync(UpdateKeyDescriptionRequest request, CancellationToken cancellationToken);
}
public class Amazon.KeyManagementService.AmazonKeyManagementServiceConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.KeyManagementService.AmazonKeyManagementServiceException : AmazonServiceException {
    public AmazonKeyManagementServiceException(string message);
    public AmazonKeyManagementServiceException(string message, Exception innerException);
    public AmazonKeyManagementServiceException(Exception innerException);
    public AmazonKeyManagementServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonKeyManagementServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.AmazonKeyManagementServiceRequest : AmazonWebServiceRequest {
}
public class Amazon.KeyManagementService.DataKeySpec : ConstantClass {
    public static DataKeySpec AES_128;
    public static DataKeySpec AES_256;
    public DataKeySpec(string value);
    private static DataKeySpec();
    public static DataKeySpec FindValue(string value);
    public static DataKeySpec op_Implicit(string value);
}
public class Amazon.KeyManagementService.GrantOperation : ConstantClass {
    public static GrantOperation CreateGrant;
    public static GrantOperation Decrypt;
    public static GrantOperation DescribeKey;
    public static GrantOperation Encrypt;
    public static GrantOperation GenerateDataKey;
    public static GrantOperation GenerateDataKeyWithoutPlaintext;
    public static GrantOperation ReEncryptFrom;
    public static GrantOperation ReEncryptTo;
    public static GrantOperation RetireGrant;
    public GrantOperation(string value);
    private static GrantOperation();
    public static GrantOperation FindValue(string value);
    public static GrantOperation op_Implicit(string value);
}
public interface Amazon.KeyManagementService.IAmazonKeyManagementService {
    public abstract virtual Task`1<CancelKeyDeletionResponse> CancelKeyDeletionAsync(CancelKeyDeletionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAliasResponse> CreateAliasAsync(CreateAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateGrantResponse> CreateGrantAsync(CreateGrantRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateKeyResponse> CreateKeyAsync(CreateKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DecryptResponse> DecryptAsync(DecryptRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAliasResponse> DeleteAliasAsync(DeleteAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeKeyResponse> DescribeKeyAsync(DescribeKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableKeyResponse> DisableKeyAsync(DisableKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableKeyRotationResponse> DisableKeyRotationAsync(DisableKeyRotationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableKeyResponse> EnableKeyAsync(EnableKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableKeyRotationResponse> EnableKeyRotationAsync(EnableKeyRotationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EncryptResponse> EncryptAsync(EncryptRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GenerateDataKeyResponse> GenerateDataKeyAsync(GenerateDataKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GenerateDataKeyWithoutPlaintextResponse> GenerateDataKeyWithoutPlaintextAsync(GenerateDataKeyWithoutPlaintextRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GenerateRandomResponse> GenerateRandomAsync(GenerateRandomRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetKeyPolicyResponse> GetKeyPolicyAsync(GetKeyPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetKeyRotationStatusResponse> GetKeyRotationStatusAsync(GetKeyRotationStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAliasesResponse> ListAliasesAsync(ListAliasesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListGrantsResponse> ListGrantsAsync(ListGrantsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListKeyPoliciesResponse> ListKeyPoliciesAsync(ListKeyPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListKeysResponse> ListKeysAsync(ListKeysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListRetirableGrantsResponse> ListRetirableGrantsAsync(ListRetirableGrantsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutKeyPolicyResponse> PutKeyPolicyAsync(PutKeyPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReEncryptResponse> ReEncryptAsync(ReEncryptRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RetireGrantResponse> RetireGrantAsync(RetireGrantRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RevokeGrantResponse> RevokeGrantAsync(RevokeGrantRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ScheduleKeyDeletionResponse> ScheduleKeyDeletionAsync(ScheduleKeyDeletionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateAliasResponse> UpdateAliasAsync(UpdateAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateKeyDescriptionResponse> UpdateKeyDescriptionAsync(UpdateKeyDescriptionRequest request, CancellationToken cancellationToken);
}
public class Amazon.KeyManagementService.KeyState : ConstantClass {
    public static KeyState Disabled;
    public static KeyState Enabled;
    public static KeyState PendingDeletion;
    public KeyState(string value);
    private static KeyState();
    public static KeyState FindValue(string value);
    public static KeyState op_Implicit(string value);
}
public class Amazon.KeyManagementService.KeyUsageType : ConstantClass {
    public static KeyUsageType ENCRYPT_DECRYPT;
    public KeyUsageType(string value);
    private static KeyUsageType();
    public static KeyUsageType FindValue(string value);
    public static KeyUsageType op_Implicit(string value);
}
public class Amazon.KeyManagementService.Model.AliasListEntry : object {
    private string _aliasArn;
    private string _aliasName;
    private string _targetKeyId;
    public string AliasArn { get; public set; }
    public string AliasName { get; public set; }
    public string TargetKeyId { get; public set; }
    public string get_AliasArn();
    public void set_AliasArn(string value);
    internal bool IsSetAliasArn();
    public string get_AliasName();
    public void set_AliasName(string value);
    internal bool IsSetAliasName();
    public string get_TargetKeyId();
    public void set_TargetKeyId(string value);
    internal bool IsSetTargetKeyId();
}
public class Amazon.KeyManagementService.Model.AlreadyExistsException : AmazonKeyManagementServiceException {
    public AlreadyExistsException(string message);
    public AlreadyExistsException(string message, Exception innerException);
    public AlreadyExistsException(Exception innerException);
    public AlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public AlreadyExistsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.CancelKeyDeletionRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    public string KeyId { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.CancelKeyDeletionResponse : CancelKeyDeletionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CancelKeyDeletionResult class are now available on the CancelKeyDeletionResponse class. You should use the properties on CancelKeyDeletionResponse instead of accessing them through CancelKeyDeletionResult.")]
public CancelKeyDeletionResult CancelKeyDeletionResult { get; }
    public CancelKeyDeletionResult get_CancelKeyDeletionResult();
}
public class Amazon.KeyManagementService.Model.CancelKeyDeletionResult : AmazonWebServiceResponse {
    private string _keyId;
    public string KeyId { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.CreateAliasRequest : AmazonKeyManagementServiceRequest {
    private string _aliasName;
    private string _targetKeyId;
    public string AliasName { get; public set; }
    public string TargetKeyId { get; public set; }
    public string get_AliasName();
    public void set_AliasName(string value);
    internal bool IsSetAliasName();
    public string get_TargetKeyId();
    public void set_TargetKeyId(string value);
    internal bool IsSetTargetKeyId();
}
public class Amazon.KeyManagementService.Model.CreateAliasResponse : AmazonWebServiceResponse {
}
public class Amazon.KeyManagementService.Model.CreateGrantRequest : AmazonKeyManagementServiceRequest {
    private GrantConstraints _constraints;
    private string _granteePrincipal;
    private List`1<string> _grantTokens;
    private string _keyId;
    private string _name;
    private List`1<string> _operations;
    private string _retiringPrincipal;
    public GrantConstraints Constraints { get; public set; }
    public string GranteePrincipal { get; public set; }
    public List`1<string> GrantTokens { get; public set; }
    public string KeyId { get; public set; }
    public string Name { get; public set; }
    public List`1<string> Operations { get; public set; }
    public string RetiringPrincipal { get; public set; }
    public GrantConstraints get_Constraints();
    public void set_Constraints(GrantConstraints value);
    internal bool IsSetConstraints();
    public string get_GranteePrincipal();
    public void set_GranteePrincipal(string value);
    internal bool IsSetGranteePrincipal();
    public List`1<string> get_GrantTokens();
    public void set_GrantTokens(List`1<string> value);
    internal bool IsSetGrantTokens();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Operations();
    public void set_Operations(List`1<string> value);
    internal bool IsSetOperations();
    public string get_RetiringPrincipal();
    public void set_RetiringPrincipal(string value);
    internal bool IsSetRetiringPrincipal();
}
public class Amazon.KeyManagementService.Model.CreateGrantResponse : CreateGrantResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateGrantResult class are now available on the CreateGrantResponse class. You should use the properties on CreateGrantResponse instead of accessing them through CreateGrantResult.")]
public CreateGrantResult CreateGrantResult { get; }
    public CreateGrantResult get_CreateGrantResult();
}
public class Amazon.KeyManagementService.Model.CreateGrantResult : AmazonWebServiceResponse {
    private string _grantId;
    private string _grantToken;
    public string GrantId { get; public set; }
    public string GrantToken { get; public set; }
    public string get_GrantId();
    public void set_GrantId(string value);
    internal bool IsSetGrantId();
    public string get_GrantToken();
    public void set_GrantToken(string value);
    internal bool IsSetGrantToken();
}
public class Amazon.KeyManagementService.Model.CreateKeyRequest : AmazonKeyManagementServiceRequest {
    private string _description;
    private KeyUsageType _keyUsage;
    private string _policy;
    public string Description { get; public set; }
    public KeyUsageType KeyUsage { get; public set; }
    public string Policy { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public KeyUsageType get_KeyUsage();
    public void set_KeyUsage(KeyUsageType value);
    internal bool IsSetKeyUsage();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.KeyManagementService.Model.CreateKeyResponse : CreateKeyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateKeyResult class are now available on the CreateKeyResponse class. You should use the properties on CreateKeyResponse instead of accessing them through CreateKeyResult.")]
public CreateKeyResult CreateKeyResult { get; }
    public CreateKeyResult get_CreateKeyResult();
}
public class Amazon.KeyManagementService.Model.CreateKeyResult : AmazonWebServiceResponse {
    private KeyMetadata _keyMetadata;
    public KeyMetadata KeyMetadata { get; public set; }
    public KeyMetadata get_KeyMetadata();
    public void set_KeyMetadata(KeyMetadata value);
    internal bool IsSetKeyMetadata();
}
public class Amazon.KeyManagementService.Model.DecryptRequest : AmazonKeyManagementServiceRequest {
    private MemoryStream _ciphertextBlob;
    private Dictionary`2<string, string> _encryptionContext;
    private List`1<string> _grantTokens;
    public MemoryStream CiphertextBlob { get; public set; }
    public Dictionary`2<string, string> EncryptionContext { get; public set; }
    public List`1<string> GrantTokens { get; public set; }
    public MemoryStream get_CiphertextBlob();
    public void set_CiphertextBlob(MemoryStream value);
    internal bool IsSetCiphertextBlob();
    public Dictionary`2<string, string> get_EncryptionContext();
    public void set_EncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetEncryptionContext();
    public List`1<string> get_GrantTokens();
    public void set_GrantTokens(List`1<string> value);
    internal bool IsSetGrantTokens();
}
public class Amazon.KeyManagementService.Model.DecryptResponse : DecryptResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DecryptResult class are now available on the DecryptResponse class. You should use the properties on DecryptResponse instead of accessing them through DecryptResult.")]
public DecryptResult DecryptResult { get; }
    public DecryptResult get_DecryptResult();
}
public class Amazon.KeyManagementService.Model.DecryptResult : AmazonWebServiceResponse {
    private string _keyId;
    private MemoryStream _plaintext;
    public string KeyId { get; public set; }
    public MemoryStream Plaintext { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public MemoryStream get_Plaintext();
    public void set_Plaintext(MemoryStream value);
    internal bool IsSetPlaintext();
}
public class Amazon.KeyManagementService.Model.DeleteAliasRequest : AmazonKeyManagementServiceRequest {
    private string _aliasName;
    public string AliasName { get; public set; }
    public string get_AliasName();
    public void set_AliasName(string value);
    internal bool IsSetAliasName();
}
public class Amazon.KeyManagementService.Model.DeleteAliasResponse : AmazonWebServiceResponse {
}
public class Amazon.KeyManagementService.Model.DependencyTimeoutException : AmazonKeyManagementServiceException {
    public DependencyTimeoutException(string message);
    public DependencyTimeoutException(string message, Exception innerException);
    public DependencyTimeoutException(Exception innerException);
    public DependencyTimeoutException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DependencyTimeoutException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.DescribeKeyRequest : AmazonKeyManagementServiceRequest {
    private List`1<string> _grantTokens;
    private string _keyId;
    public List`1<string> GrantTokens { get; public set; }
    public string KeyId { get; public set; }
    public List`1<string> get_GrantTokens();
    public void set_GrantTokens(List`1<string> value);
    internal bool IsSetGrantTokens();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.DescribeKeyResponse : DescribeKeyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeKeyResult class are now available on the DescribeKeyResponse class. You should use the properties on DescribeKeyResponse instead of accessing them through DescribeKeyResult.")]
public DescribeKeyResult DescribeKeyResult { get; }
    public DescribeKeyResult get_DescribeKeyResult();
}
public class Amazon.KeyManagementService.Model.DescribeKeyResult : AmazonWebServiceResponse {
    private KeyMetadata _keyMetadata;
    public KeyMetadata KeyMetadata { get; public set; }
    public KeyMetadata get_KeyMetadata();
    public void set_KeyMetadata(KeyMetadata value);
    internal bool IsSetKeyMetadata();
}
public class Amazon.KeyManagementService.Model.DisabledException : AmazonKeyManagementServiceException {
    public DisabledException(string message);
    public DisabledException(string message, Exception innerException);
    public DisabledException(Exception innerException);
    public DisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DisabledException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.DisableKeyRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    public string KeyId { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.DisableKeyResponse : AmazonWebServiceResponse {
}
public class Amazon.KeyManagementService.Model.DisableKeyRotationRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    public string KeyId { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.DisableKeyRotationResponse : AmazonWebServiceResponse {
}
public class Amazon.KeyManagementService.Model.EnableKeyRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    public string KeyId { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.EnableKeyResponse : AmazonWebServiceResponse {
}
public class Amazon.KeyManagementService.Model.EnableKeyRotationRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    public string KeyId { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.EnableKeyRotationResponse : AmazonWebServiceResponse {
}
public class Amazon.KeyManagementService.Model.EncryptRequest : AmazonKeyManagementServiceRequest {
    private Dictionary`2<string, string> _encryptionContext;
    private List`1<string> _grantTokens;
    private string _keyId;
    private MemoryStream _plaintext;
    public Dictionary`2<string, string> EncryptionContext { get; public set; }
    public List`1<string> GrantTokens { get; public set; }
    public string KeyId { get; public set; }
    public MemoryStream Plaintext { get; public set; }
    public Dictionary`2<string, string> get_EncryptionContext();
    public void set_EncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetEncryptionContext();
    public List`1<string> get_GrantTokens();
    public void set_GrantTokens(List`1<string> value);
    internal bool IsSetGrantTokens();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public MemoryStream get_Plaintext();
    public void set_Plaintext(MemoryStream value);
    internal bool IsSetPlaintext();
}
public class Amazon.KeyManagementService.Model.EncryptResponse : EncryptResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the EncryptResult class are now available on the EncryptResponse class. You should use the properties on EncryptResponse instead of accessing them through EncryptResult.")]
public EncryptResult EncryptResult { get; }
    public EncryptResult get_EncryptResult();
}
public class Amazon.KeyManagementService.Model.EncryptResult : AmazonWebServiceResponse {
    private MemoryStream _ciphertextBlob;
    private string _keyId;
    public MemoryStream CiphertextBlob { get; public set; }
    public string KeyId { get; public set; }
    public MemoryStream get_CiphertextBlob();
    public void set_CiphertextBlob(MemoryStream value);
    internal bool IsSetCiphertextBlob();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.GenerateDataKeyRequest : AmazonKeyManagementServiceRequest {
    private Dictionary`2<string, string> _encryptionContext;
    private List`1<string> _grantTokens;
    private string _keyId;
    private DataKeySpec _keySpec;
    private Nullable`1<int> _numberOfBytes;
    public Dictionary`2<string, string> EncryptionContext { get; public set; }
    public List`1<string> GrantTokens { get; public set; }
    public string KeyId { get; public set; }
    public DataKeySpec KeySpec { get; public set; }
    public int NumberOfBytes { get; public set; }
    public Dictionary`2<string, string> get_EncryptionContext();
    public void set_EncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetEncryptionContext();
    public List`1<string> get_GrantTokens();
    public void set_GrantTokens(List`1<string> value);
    internal bool IsSetGrantTokens();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public DataKeySpec get_KeySpec();
    public void set_KeySpec(DataKeySpec value);
    internal bool IsSetKeySpec();
    public int get_NumberOfBytes();
    public void set_NumberOfBytes(int value);
    internal bool IsSetNumberOfBytes();
}
public class Amazon.KeyManagementService.Model.GenerateDataKeyResponse : GenerateDataKeyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GenerateDataKeyResult class are now available on the GenerateDataKeyResponse class. You should use the properties on GenerateDataKeyResponse instead of accessing them through GenerateDataKeyResult.")]
public GenerateDataKeyResult GenerateDataKeyResult { get; }
    public GenerateDataKeyResult get_GenerateDataKeyResult();
}
public class Amazon.KeyManagementService.Model.GenerateDataKeyResult : AmazonWebServiceResponse {
    private MemoryStream _ciphertextBlob;
    private string _keyId;
    private MemoryStream _plaintext;
    public MemoryStream CiphertextBlob { get; public set; }
    public string KeyId { get; public set; }
    public MemoryStream Plaintext { get; public set; }
    public MemoryStream get_CiphertextBlob();
    public void set_CiphertextBlob(MemoryStream value);
    internal bool IsSetCiphertextBlob();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public MemoryStream get_Plaintext();
    public void set_Plaintext(MemoryStream value);
    internal bool IsSetPlaintext();
}
public class Amazon.KeyManagementService.Model.GenerateDataKeyWithoutPlaintextRequest : AmazonKeyManagementServiceRequest {
    private Dictionary`2<string, string> _encryptionContext;
    private List`1<string> _grantTokens;
    private string _keyId;
    private DataKeySpec _keySpec;
    private Nullable`1<int> _numberOfBytes;
    public Dictionary`2<string, string> EncryptionContext { get; public set; }
    public List`1<string> GrantTokens { get; public set; }
    public string KeyId { get; public set; }
    public DataKeySpec KeySpec { get; public set; }
    public int NumberOfBytes { get; public set; }
    public Dictionary`2<string, string> get_EncryptionContext();
    public void set_EncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetEncryptionContext();
    public List`1<string> get_GrantTokens();
    public void set_GrantTokens(List`1<string> value);
    internal bool IsSetGrantTokens();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public DataKeySpec get_KeySpec();
    public void set_KeySpec(DataKeySpec value);
    internal bool IsSetKeySpec();
    public int get_NumberOfBytes();
    public void set_NumberOfBytes(int value);
    internal bool IsSetNumberOfBytes();
}
public class Amazon.KeyManagementService.Model.GenerateDataKeyWithoutPlaintextResponse : GenerateDataKeyWithoutPlaintextResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GenerateDataKeyWithoutPlaintextResult class are now available on the GenerateDataKeyWithoutPlaintextResponse class. You should use the properties on GenerateDataKeyWithoutPlaintextResponse instead of accessing them through GenerateDataKeyWithoutPlaintextResult.")]
public GenerateDataKeyWithoutPlaintextResult GenerateDataKeyWithoutPlaintextResult { get; }
    public GenerateDataKeyWithoutPlaintextResult get_GenerateDataKeyWithoutPlaintextResult();
}
public class Amazon.KeyManagementService.Model.GenerateDataKeyWithoutPlaintextResult : AmazonWebServiceResponse {
    private MemoryStream _ciphertextBlob;
    private string _keyId;
    public MemoryStream CiphertextBlob { get; public set; }
    public string KeyId { get; public set; }
    public MemoryStream get_CiphertextBlob();
    public void set_CiphertextBlob(MemoryStream value);
    internal bool IsSetCiphertextBlob();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.GenerateRandomRequest : AmazonKeyManagementServiceRequest {
    private Nullable`1<int> _numberOfBytes;
    public int NumberOfBytes { get; public set; }
    public int get_NumberOfBytes();
    public void set_NumberOfBytes(int value);
    internal bool IsSetNumberOfBytes();
}
public class Amazon.KeyManagementService.Model.GenerateRandomResponse : GenerateRandomResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GenerateRandomResult class are now available on the GenerateRandomResponse class. You should use the properties on GenerateRandomResponse instead of accessing them through GenerateRandomResult.")]
public GenerateRandomResult GenerateRandomResult { get; }
    public GenerateRandomResult get_GenerateRandomResult();
}
public class Amazon.KeyManagementService.Model.GenerateRandomResult : AmazonWebServiceResponse {
    private MemoryStream _plaintext;
    public MemoryStream Plaintext { get; public set; }
    public MemoryStream get_Plaintext();
    public void set_Plaintext(MemoryStream value);
    internal bool IsSetPlaintext();
}
public class Amazon.KeyManagementService.Model.GetKeyPolicyRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    private string _policyName;
    public string KeyId { get; public set; }
    public string PolicyName { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.KeyManagementService.Model.GetKeyPolicyResponse : GetKeyPolicyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetKeyPolicyResult class are now available on the GetKeyPolicyResponse class. You should use the properties on GetKeyPolicyResponse instead of accessing them through GetKeyPolicyResult.")]
public GetKeyPolicyResult GetKeyPolicyResult { get; }
    public GetKeyPolicyResult get_GetKeyPolicyResult();
}
public class Amazon.KeyManagementService.Model.GetKeyPolicyResult : AmazonWebServiceResponse {
    private string _policy;
    public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.KeyManagementService.Model.GetKeyRotationStatusRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    public string KeyId { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.GetKeyRotationStatusResponse : GetKeyRotationStatusResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetKeyRotationStatusResult class are now available on the GetKeyRotationStatusResponse class. You should use the properties on GetKeyRotationStatusResponse instead of accessing them through GetKeyRotationStatusResult.")]
public GetKeyRotationStatusResult GetKeyRotationStatusResult { get; }
    public GetKeyRotationStatusResult get_GetKeyRotationStatusResult();
}
public class Amazon.KeyManagementService.Model.GetKeyRotationStatusResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _keyRotationEnabled;
    public bool KeyRotationEnabled { get; public set; }
    public bool get_KeyRotationEnabled();
    public void set_KeyRotationEnabled(bool value);
    internal bool IsSetKeyRotationEnabled();
}
public class Amazon.KeyManagementService.Model.GrantConstraints : object {
    private Dictionary`2<string, string> _encryptionContextEquals;
    private Dictionary`2<string, string> _encryptionContextSubset;
    public Dictionary`2<string, string> EncryptionContextEquals { get; public set; }
    public Dictionary`2<string, string> EncryptionContextSubset { get; public set; }
    public Dictionary`2<string, string> get_EncryptionContextEquals();
    public void set_EncryptionContextEquals(Dictionary`2<string, string> value);
    internal bool IsSetEncryptionContextEquals();
    public Dictionary`2<string, string> get_EncryptionContextSubset();
    public void set_EncryptionContextSubset(Dictionary`2<string, string> value);
    internal bool IsSetEncryptionContextSubset();
}
public class Amazon.KeyManagementService.Model.GrantListEntry : object {
    private GrantConstraints _constraints;
    private Nullable`1<DateTime> _creationDate;
    private string _granteePrincipal;
    private string _grantId;
    private string _issuingAccount;
    private string _keyId;
    private string _name;
    private List`1<string> _operations;
    private string _retiringPrincipal;
    public GrantConstraints Constraints { get; public set; }
    public DateTime CreationDate { get; public set; }
    public string GranteePrincipal { get; public set; }
    public string GrantId { get; public set; }
    public string IssuingAccount { get; public set; }
    public string KeyId { get; public set; }
    public string Name { get; public set; }
    public List`1<string> Operations { get; public set; }
    public string RetiringPrincipal { get; public set; }
    public GrantConstraints get_Constraints();
    public void set_Constraints(GrantConstraints value);
    internal bool IsSetConstraints();
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public string get_GranteePrincipal();
    public void set_GranteePrincipal(string value);
    internal bool IsSetGranteePrincipal();
    public string get_GrantId();
    public void set_GrantId(string value);
    internal bool IsSetGrantId();
    public string get_IssuingAccount();
    public void set_IssuingAccount(string value);
    internal bool IsSetIssuingAccount();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Operations();
    public void set_Operations(List`1<string> value);
    internal bool IsSetOperations();
    public string get_RetiringPrincipal();
    public void set_RetiringPrincipal(string value);
    internal bool IsSetRetiringPrincipal();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.AliasListEntryUnmarshaller : object {
    private static AliasListEntryUnmarshaller _instance;
    public static AliasListEntryUnmarshaller Instance { get; }
    private static AliasListEntryUnmarshaller();
    private sealed virtual override AliasListEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KeyManagementService.Model.AliasListEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AliasListEntry Unmarshall(JsonUnmarshallerContext context);
    public static AliasListEntryUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.CancelKeyDeletionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelKeyDeletionRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.CancelKeyDeletionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelKeyDeletionResponseUnmarshaller _instance;
    public static CancelKeyDeletionResponseUnmarshaller Instance { get; }
    private static CancelKeyDeletionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelKeyDeletionResponseUnmarshaller GetInstance();
    public static CancelKeyDeletionResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAliasRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateAliasResponseUnmarshaller _instance;
    public static CreateAliasResponseUnmarshaller Instance { get; }
    private static CreateAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAliasResponseUnmarshaller GetInstance();
    public static CreateAliasResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.CreateGrantRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateGrantRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.CreateGrantResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateGrantResponseUnmarshaller _instance;
    public static CreateGrantResponseUnmarshaller Instance { get; }
    private static CreateGrantResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateGrantResponseUnmarshaller GetInstance();
    public static CreateGrantResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.CreateKeyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateKeyRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.CreateKeyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateKeyResponseUnmarshaller _instance;
    public static CreateKeyResponseUnmarshaller Instance { get; }
    private static CreateKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateKeyResponseUnmarshaller GetInstance();
    public static CreateKeyResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.DecryptRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DecryptRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.DecryptResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DecryptResponseUnmarshaller _instance;
    public static DecryptResponseUnmarshaller Instance { get; }
    private static DecryptResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DecryptResponseUnmarshaller GetInstance();
    public static DecryptResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.DeleteAliasRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAliasRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.DeleteAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAliasResponseUnmarshaller _instance;
    public static DeleteAliasResponseUnmarshaller Instance { get; }
    private static DeleteAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAliasResponseUnmarshaller GetInstance();
    public static DeleteAliasResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.DescribeKeyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeKeyRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.DescribeKeyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeKeyResponseUnmarshaller _instance;
    public static DescribeKeyResponseUnmarshaller Instance { get; }
    private static DescribeKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeKeyResponseUnmarshaller GetInstance();
    public static DescribeKeyResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.DisableKeyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableKeyRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.DisableKeyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisableKeyResponseUnmarshaller _instance;
    public static DisableKeyResponseUnmarshaller Instance { get; }
    private static DisableKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableKeyResponseUnmarshaller GetInstance();
    public static DisableKeyResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.DisableKeyRotationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableKeyRotationRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.DisableKeyRotationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisableKeyRotationResponseUnmarshaller _instance;
    public static DisableKeyRotationResponseUnmarshaller Instance { get; }
    private static DisableKeyRotationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableKeyRotationResponseUnmarshaller GetInstance();
    public static DisableKeyRotationResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.EnableKeyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableKeyRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.EnableKeyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static EnableKeyResponseUnmarshaller _instance;
    public static EnableKeyResponseUnmarshaller Instance { get; }
    private static EnableKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableKeyResponseUnmarshaller GetInstance();
    public static EnableKeyResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.EnableKeyRotationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableKeyRotationRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.EnableKeyRotationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static EnableKeyRotationResponseUnmarshaller _instance;
    public static EnableKeyRotationResponseUnmarshaller Instance { get; }
    private static EnableKeyRotationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableKeyRotationResponseUnmarshaller GetInstance();
    public static EnableKeyRotationResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.EncryptRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EncryptRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.EncryptResponseUnmarshaller : JsonResponseUnmarshaller {
    private static EncryptResponseUnmarshaller _instance;
    public static EncryptResponseUnmarshaller Instance { get; }
    private static EncryptResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EncryptResponseUnmarshaller GetInstance();
    public static EncryptResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GenerateDataKeyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GenerateDataKeyRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GenerateDataKeyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GenerateDataKeyResponseUnmarshaller _instance;
    public static GenerateDataKeyResponseUnmarshaller Instance { get; }
    private static GenerateDataKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GenerateDataKeyResponseUnmarshaller GetInstance();
    public static GenerateDataKeyResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GenerateDataKeyWithoutPlaintextRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GenerateDataKeyWithoutPlaintextRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GenerateDataKeyWithoutPlaintextResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GenerateDataKeyWithoutPlaintextResponseUnmarshaller _instance;
    public static GenerateDataKeyWithoutPlaintextResponseUnmarshaller Instance { get; }
    private static GenerateDataKeyWithoutPlaintextResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GenerateDataKeyWithoutPlaintextResponseUnmarshaller GetInstance();
    public static GenerateDataKeyWithoutPlaintextResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GenerateRandomRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GenerateRandomRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GenerateRandomResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GenerateRandomResponseUnmarshaller _instance;
    public static GenerateRandomResponseUnmarshaller Instance { get; }
    private static GenerateRandomResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GenerateRandomResponseUnmarshaller GetInstance();
    public static GenerateRandomResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GetKeyPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetKeyPolicyRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GetKeyPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetKeyPolicyResponseUnmarshaller _instance;
    public static GetKeyPolicyResponseUnmarshaller Instance { get; }
    private static GetKeyPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetKeyPolicyResponseUnmarshaller GetInstance();
    public static GetKeyPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GetKeyRotationStatusRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetKeyRotationStatusRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GetKeyRotationStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetKeyRotationStatusResponseUnmarshaller _instance;
    public static GetKeyRotationStatusResponseUnmarshaller Instance { get; }
    private static GetKeyRotationStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetKeyRotationStatusResponseUnmarshaller GetInstance();
    public static GetKeyRotationStatusResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GrantConstraintsMarshaller : object {
    public static GrantConstraintsMarshaller Instance;
    private static GrantConstraintsMarshaller();
    public sealed virtual void Marshall(GrantConstraints requestObject, JsonMarshallerContext context);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GrantConstraintsUnmarshaller : object {
    private static GrantConstraintsUnmarshaller _instance;
    public static GrantConstraintsUnmarshaller Instance { get; }
    private static GrantConstraintsUnmarshaller();
    private sealed virtual override GrantConstraints Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KeyManagementService.Model.GrantConstraints,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GrantConstraints Unmarshall(JsonUnmarshallerContext context);
    public static GrantConstraintsUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.GrantListEntryUnmarshaller : object {
    private static GrantListEntryUnmarshaller _instance;
    public static GrantListEntryUnmarshaller Instance { get; }
    private static GrantListEntryUnmarshaller();
    private sealed virtual override GrantListEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KeyManagementService.Model.GrantListEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GrantListEntry Unmarshall(JsonUnmarshallerContext context);
    public static GrantListEntryUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.KeyListEntryUnmarshaller : object {
    private static KeyListEntryUnmarshaller _instance;
    public static KeyListEntryUnmarshaller Instance { get; }
    private static KeyListEntryUnmarshaller();
    private sealed virtual override KeyListEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KeyManagementService.Model.KeyListEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyListEntry Unmarshall(JsonUnmarshallerContext context);
    public static KeyListEntryUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.KeyMetadataUnmarshaller : object {
    private static KeyMetadataUnmarshaller _instance;
    public static KeyMetadataUnmarshaller Instance { get; }
    private static KeyMetadataUnmarshaller();
    private sealed virtual override KeyMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.KeyManagementService.Model.KeyMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyMetadata Unmarshall(JsonUnmarshallerContext context);
    public static KeyMetadataUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ListAliasesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAliasesRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ListAliasesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAliasesResponseUnmarshaller _instance;
    public static ListAliasesResponseUnmarshaller Instance { get; }
    private static ListAliasesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAliasesResponseUnmarshaller GetInstance();
    public static ListAliasesResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ListGrantsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListGrantsRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ListGrantsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListGrantsResponseUnmarshaller _instance;
    public static ListGrantsResponseUnmarshaller Instance { get; }
    private static ListGrantsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListGrantsResponseUnmarshaller GetInstance();
    public static ListGrantsResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ListKeyPoliciesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListKeyPoliciesRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ListKeyPoliciesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListKeyPoliciesResponseUnmarshaller _instance;
    public static ListKeyPoliciesResponseUnmarshaller Instance { get; }
    private static ListKeyPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListKeyPoliciesResponseUnmarshaller GetInstance();
    public static ListKeyPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ListKeysRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListKeysRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ListKeysResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListKeysResponseUnmarshaller _instance;
    public static ListKeysResponseUnmarshaller Instance { get; }
    private static ListKeysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListKeysResponseUnmarshaller GetInstance();
    public static ListKeysResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ListRetirableGrantsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListRetirableGrantsRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ListRetirableGrantsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListRetirableGrantsResponseUnmarshaller _instance;
    public static ListRetirableGrantsResponseUnmarshaller Instance { get; }
    private static ListRetirableGrantsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListRetirableGrantsResponseUnmarshaller GetInstance();
    public static ListRetirableGrantsResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.PutKeyPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutKeyPolicyRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.PutKeyPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutKeyPolicyResponseUnmarshaller _instance;
    public static PutKeyPolicyResponseUnmarshaller Instance { get; }
    private static PutKeyPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutKeyPolicyResponseUnmarshaller GetInstance();
    public static PutKeyPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ReEncryptRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReEncryptRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ReEncryptResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ReEncryptResponseUnmarshaller _instance;
    public static ReEncryptResponseUnmarshaller Instance { get; }
    private static ReEncryptResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReEncryptResponseUnmarshaller GetInstance();
    public static ReEncryptResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.RetireGrantRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RetireGrantRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.RetireGrantResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RetireGrantResponseUnmarshaller _instance;
    public static RetireGrantResponseUnmarshaller Instance { get; }
    private static RetireGrantResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RetireGrantResponseUnmarshaller GetInstance();
    public static RetireGrantResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.RevokeGrantRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RevokeGrantRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.RevokeGrantResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RevokeGrantResponseUnmarshaller _instance;
    public static RevokeGrantResponseUnmarshaller Instance { get; }
    private static RevokeGrantResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RevokeGrantResponseUnmarshaller GetInstance();
    public static RevokeGrantResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ScheduleKeyDeletionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ScheduleKeyDeletionRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.ScheduleKeyDeletionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ScheduleKeyDeletionResponseUnmarshaller _instance;
    public static ScheduleKeyDeletionResponseUnmarshaller Instance { get; }
    private static ScheduleKeyDeletionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ScheduleKeyDeletionResponseUnmarshaller GetInstance();
    public static ScheduleKeyDeletionResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.UpdateAliasRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAliasRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.UpdateAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateAliasResponseUnmarshaller _instance;
    public static UpdateAliasResponseUnmarshaller Instance { get; }
    private static UpdateAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAliasResponseUnmarshaller GetInstance();
    public static UpdateAliasResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.UpdateKeyDescriptionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateKeyDescriptionRequest publicRequest);
}
public class Amazon.KeyManagementService.Model.Internal.MarshallTransformations.UpdateKeyDescriptionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateKeyDescriptionResponseUnmarshaller _instance;
    public static UpdateKeyDescriptionResponseUnmarshaller Instance { get; }
    private static UpdateKeyDescriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateKeyDescriptionResponseUnmarshaller GetInstance();
    public static UpdateKeyDescriptionResponseUnmarshaller get_Instance();
}
public class Amazon.KeyManagementService.Model.InvalidAliasNameException : AmazonKeyManagementServiceException {
    public InvalidAliasNameException(string message);
    public InvalidAliasNameException(string message, Exception innerException);
    public InvalidAliasNameException(Exception innerException);
    public InvalidAliasNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidAliasNameException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.InvalidArnException : AmazonKeyManagementServiceException {
    public InvalidArnException(string message);
    public InvalidArnException(string message, Exception innerException);
    public InvalidArnException(Exception innerException);
    public InvalidArnException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidArnException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.InvalidCiphertextException : AmazonKeyManagementServiceException {
    public InvalidCiphertextException(string message);
    public InvalidCiphertextException(string message, Exception innerException);
    public InvalidCiphertextException(Exception innerException);
    public InvalidCiphertextException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidCiphertextException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.InvalidGrantIdException : AmazonKeyManagementServiceException {
    public InvalidGrantIdException(string message);
    public InvalidGrantIdException(string message, Exception innerException);
    public InvalidGrantIdException(Exception innerException);
    public InvalidGrantIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidGrantIdException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.InvalidGrantTokenException : AmazonKeyManagementServiceException {
    public InvalidGrantTokenException(string message);
    public InvalidGrantTokenException(string message, Exception innerException);
    public InvalidGrantTokenException(Exception innerException);
    public InvalidGrantTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidGrantTokenException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.InvalidKeyUsageException : AmazonKeyManagementServiceException {
    public InvalidKeyUsageException(string message);
    public InvalidKeyUsageException(string message, Exception innerException);
    public InvalidKeyUsageException(Exception innerException);
    public InvalidKeyUsageException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidKeyUsageException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.InvalidMarkerException : AmazonKeyManagementServiceException {
    public InvalidMarkerException(string message);
    public InvalidMarkerException(string message, Exception innerException);
    public InvalidMarkerException(Exception innerException);
    public InvalidMarkerException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidMarkerException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.KeyListEntry : object {
    private string _keyArn;
    private string _keyId;
    public string KeyArn { get; public set; }
    public string KeyId { get; public set; }
    public string get_KeyArn();
    public void set_KeyArn(string value);
    internal bool IsSetKeyArn();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.KeyMetadata : object {
    private string _arn;
    private string _awsAccountId;
    private Nullable`1<DateTime> _creationDate;
    private Nullable`1<DateTime> _deletionDate;
    private string _description;
    private Nullable`1<bool> _enabled;
    private string _keyId;
    private KeyState _keyState;
    private KeyUsageType _keyUsage;
    public string Arn { get; public set; }
    public string AWSAccountId { get; public set; }
    public DateTime CreationDate { get; public set; }
    public DateTime DeletionDate { get; public set; }
    public string Description { get; public set; }
    public bool Enabled { get; public set; }
    public string KeyId { get; public set; }
    public KeyState KeyState { get; public set; }
    public KeyUsageType KeyUsage { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_AWSAccountId();
    public void set_AWSAccountId(string value);
    internal bool IsSetAWSAccountId();
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public DateTime get_DeletionDate();
    public void set_DeletionDate(DateTime value);
    internal bool IsSetDeletionDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public bool get_Enabled();
    public void set_Enabled(bool value);
    internal bool IsSetEnabled();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public KeyState get_KeyState();
    public void set_KeyState(KeyState value);
    internal bool IsSetKeyState();
    public KeyUsageType get_KeyUsage();
    public void set_KeyUsage(KeyUsageType value);
    internal bool IsSetKeyUsage();
}
public class Amazon.KeyManagementService.Model.KeyUnavailableException : AmazonKeyManagementServiceException {
    public KeyUnavailableException(string message);
    public KeyUnavailableException(string message, Exception innerException);
    public KeyUnavailableException(Exception innerException);
    public KeyUnavailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public KeyUnavailableException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.KMSInternalException : AmazonKeyManagementServiceException {
    public KMSInternalException(string message);
    public KMSInternalException(string message, Exception innerException);
    public KMSInternalException(Exception innerException);
    public KMSInternalException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public KMSInternalException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.KMSInvalidStateException : AmazonKeyManagementServiceException {
    public KMSInvalidStateException(string message);
    public KMSInvalidStateException(string message, Exception innerException);
    public KMSInvalidStateException(Exception innerException);
    public KMSInvalidStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public KMSInvalidStateException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.LimitExceededException : AmazonKeyManagementServiceException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.ListAliasesRequest : AmazonKeyManagementServiceRequest {
    private Nullable`1<int> _limit;
    private string _marker;
    public int Limit { get; public set; }
    public string Marker { get; public set; }
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.KeyManagementService.Model.ListAliasesResponse : ListAliasesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListAliasesResult class are now available on the ListAliasesResponse class. You should use the properties on ListAliasesResponse instead of accessing them through ListAliasesResult.")]
public ListAliasesResult ListAliasesResult { get; }
    public ListAliasesResult get_ListAliasesResult();
}
public class Amazon.KeyManagementService.Model.ListAliasesResult : AmazonWebServiceResponse {
    private List`1<AliasListEntry> _aliases;
    private string _nextMarker;
    private Nullable`1<bool> _truncated;
    public List`1<AliasListEntry> Aliases { get; public set; }
    public string NextMarker { get; public set; }
    public bool Truncated { get; public set; }
    public List`1<AliasListEntry> get_Aliases();
    public void set_Aliases(List`1<AliasListEntry> value);
    internal bool IsSetAliases();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public bool get_Truncated();
    public void set_Truncated(bool value);
    internal bool IsSetTruncated();
}
public class Amazon.KeyManagementService.Model.ListGrantsRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    private Nullable`1<int> _limit;
    private string _marker;
    public string KeyId { get; public set; }
    public int Limit { get; public set; }
    public string Marker { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.KeyManagementService.Model.ListGrantsResponse : ListGrantsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListGrantsResult class are now available on the ListGrantsResponse class. You should use the properties on ListGrantsResponse instead of accessing them through ListGrantsResult.")]
public ListGrantsResult ListGrantsResult { get; }
    public ListGrantsResult get_ListGrantsResult();
}
public class Amazon.KeyManagementService.Model.ListGrantsResult : AmazonWebServiceResponse {
    private List`1<GrantListEntry> _grants;
    private string _nextMarker;
    private Nullable`1<bool> _truncated;
    public List`1<GrantListEntry> Grants { get; public set; }
    public string NextMarker { get; public set; }
    public bool Truncated { get; public set; }
    public List`1<GrantListEntry> get_Grants();
    public void set_Grants(List`1<GrantListEntry> value);
    internal bool IsSetGrants();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public bool get_Truncated();
    public void set_Truncated(bool value);
    internal bool IsSetTruncated();
}
public class Amazon.KeyManagementService.Model.ListKeyPoliciesRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    private Nullable`1<int> _limit;
    private string _marker;
    public string KeyId { get; public set; }
    public int Limit { get; public set; }
    public string Marker { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.KeyManagementService.Model.ListKeyPoliciesResponse : ListKeyPoliciesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListKeyPoliciesResult class are now available on the ListKeyPoliciesResponse class. You should use the properties on ListKeyPoliciesResponse instead of accessing them through ListKeyPoliciesResult.")]
public ListKeyPoliciesResult ListKeyPoliciesResult { get; }
    public ListKeyPoliciesResult get_ListKeyPoliciesResult();
}
public class Amazon.KeyManagementService.Model.ListKeyPoliciesResult : AmazonWebServiceResponse {
    private string _nextMarker;
    private List`1<string> _policyNames;
    private Nullable`1<bool> _truncated;
    public string NextMarker { get; public set; }
    public List`1<string> PolicyNames { get; public set; }
    public bool Truncated { get; public set; }
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
    public bool get_Truncated();
    public void set_Truncated(bool value);
    internal bool IsSetTruncated();
}
public class Amazon.KeyManagementService.Model.ListKeysRequest : AmazonKeyManagementServiceRequest {
    private Nullable`1<int> _limit;
    private string _marker;
    public int Limit { get; public set; }
    public string Marker { get; public set; }
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.KeyManagementService.Model.ListKeysResponse : ListKeysResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListKeysResult class are now available on the ListKeysResponse class. You should use the properties on ListKeysResponse instead of accessing them through ListKeysResult.")]
public ListKeysResult ListKeysResult { get; }
    public ListKeysResult get_ListKeysResult();
}
public class Amazon.KeyManagementService.Model.ListKeysResult : AmazonWebServiceResponse {
    private List`1<KeyListEntry> _keys;
    private string _nextMarker;
    private Nullable`1<bool> _truncated;
    public List`1<KeyListEntry> Keys { get; public set; }
    public string NextMarker { get; public set; }
    public bool Truncated { get; public set; }
    public List`1<KeyListEntry> get_Keys();
    public void set_Keys(List`1<KeyListEntry> value);
    internal bool IsSetKeys();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public bool get_Truncated();
    public void set_Truncated(bool value);
    internal bool IsSetTruncated();
}
public class Amazon.KeyManagementService.Model.ListRetirableGrantsRequest : AmazonKeyManagementServiceRequest {
    private Nullable`1<int> _limit;
    private string _marker;
    private string _retiringPrincipal;
    public int Limit { get; public set; }
    public string Marker { get; public set; }
    public string RetiringPrincipal { get; public set; }
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_RetiringPrincipal();
    public void set_RetiringPrincipal(string value);
    internal bool IsSetRetiringPrincipal();
}
public class Amazon.KeyManagementService.Model.ListRetirableGrantsResponse : ListRetirableGrantsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListRetirableGrantsResult class are now available on the ListRetirableGrantsResponse class. You should use the properties on ListRetirableGrantsResponse instead of accessing them through ListRetirableGrantsResult.")]
public ListRetirableGrantsResult ListRetirableGrantsResult { get; }
    public ListRetirableGrantsResult get_ListRetirableGrantsResult();
}
public class Amazon.KeyManagementService.Model.ListRetirableGrantsResult : AmazonWebServiceResponse {
    private List`1<GrantListEntry> _grants;
    private string _nextMarker;
    private Nullable`1<bool> _truncated;
    public List`1<GrantListEntry> Grants { get; public set; }
    public string NextMarker { get; public set; }
    public bool Truncated { get; public set; }
    public List`1<GrantListEntry> get_Grants();
    public void set_Grants(List`1<GrantListEntry> value);
    internal bool IsSetGrants();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public bool get_Truncated();
    public void set_Truncated(bool value);
    internal bool IsSetTruncated();
}
public class Amazon.KeyManagementService.Model.MalformedPolicyDocumentException : AmazonKeyManagementServiceException {
    public MalformedPolicyDocumentException(string message);
    public MalformedPolicyDocumentException(string message, Exception innerException);
    public MalformedPolicyDocumentException(Exception innerException);
    public MalformedPolicyDocumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public MalformedPolicyDocumentException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.NotFoundException : AmazonKeyManagementServiceException {
    public NotFoundException(string message);
    public NotFoundException(string message, Exception innerException);
    public NotFoundException(Exception innerException);
    public NotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.PutKeyPolicyRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    private string _policy;
    private string _policyName;
    public string KeyId { get; public set; }
    public string Policy { get; public set; }
    public string PolicyName { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.KeyManagementService.Model.PutKeyPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.KeyManagementService.Model.ReEncryptRequest : AmazonKeyManagementServiceRequest {
    private MemoryStream _ciphertextBlob;
    private Dictionary`2<string, string> _destinationEncryptionContext;
    private string _destinationKeyId;
    private List`1<string> _grantTokens;
    private Dictionary`2<string, string> _sourceEncryptionContext;
    public MemoryStream CiphertextBlob { get; public set; }
    public Dictionary`2<string, string> DestinationEncryptionContext { get; public set; }
    public string DestinationKeyId { get; public set; }
    public List`1<string> GrantTokens { get; public set; }
    public Dictionary`2<string, string> SourceEncryptionContext { get; public set; }
    public MemoryStream get_CiphertextBlob();
    public void set_CiphertextBlob(MemoryStream value);
    internal bool IsSetCiphertextBlob();
    public Dictionary`2<string, string> get_DestinationEncryptionContext();
    public void set_DestinationEncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetDestinationEncryptionContext();
    public string get_DestinationKeyId();
    public void set_DestinationKeyId(string value);
    internal bool IsSetDestinationKeyId();
    public List`1<string> get_GrantTokens();
    public void set_GrantTokens(List`1<string> value);
    internal bool IsSetGrantTokens();
    public Dictionary`2<string, string> get_SourceEncryptionContext();
    public void set_SourceEncryptionContext(Dictionary`2<string, string> value);
    internal bool IsSetSourceEncryptionContext();
}
public class Amazon.KeyManagementService.Model.ReEncryptResponse : ReEncryptResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ReEncryptResult class are now available on the ReEncryptResponse class. You should use the properties on ReEncryptResponse instead of accessing them through ReEncryptResult.")]
public ReEncryptResult ReEncryptResult { get; }
    public ReEncryptResult get_ReEncryptResult();
}
public class Amazon.KeyManagementService.Model.ReEncryptResult : AmazonWebServiceResponse {
    private MemoryStream _ciphertextBlob;
    private string _keyId;
    private string _sourceKeyId;
    public MemoryStream CiphertextBlob { get; public set; }
    public string KeyId { get; public set; }
    public string SourceKeyId { get; public set; }
    public MemoryStream get_CiphertextBlob();
    public void set_CiphertextBlob(MemoryStream value);
    internal bool IsSetCiphertextBlob();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public string get_SourceKeyId();
    public void set_SourceKeyId(string value);
    internal bool IsSetSourceKeyId();
}
public class Amazon.KeyManagementService.Model.RetireGrantRequest : AmazonKeyManagementServiceRequest {
    private string _grantId;
    private string _grantToken;
    private string _keyId;
    public string GrantId { get; public set; }
    public string GrantToken { get; public set; }
    public string KeyId { get; public set; }
    public string get_GrantId();
    public void set_GrantId(string value);
    internal bool IsSetGrantId();
    public string get_GrantToken();
    public void set_GrantToken(string value);
    internal bool IsSetGrantToken();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.RetireGrantResponse : AmazonWebServiceResponse {
}
public class Amazon.KeyManagementService.Model.RevokeGrantRequest : AmazonKeyManagementServiceRequest {
    private string _grantId;
    private string _keyId;
    public string GrantId { get; public set; }
    public string KeyId { get; public set; }
    public string get_GrantId();
    public void set_GrantId(string value);
    internal bool IsSetGrantId();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.RevokeGrantResponse : AmazonWebServiceResponse {
}
public class Amazon.KeyManagementService.Model.ScheduleKeyDeletionRequest : AmazonKeyManagementServiceRequest {
    private string _keyId;
    private Nullable`1<int> _pendingWindowInDays;
    public string KeyId { get; public set; }
    public int PendingWindowInDays { get; public set; }
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
    public int get_PendingWindowInDays();
    public void set_PendingWindowInDays(int value);
    internal bool IsSetPendingWindowInDays();
}
public class Amazon.KeyManagementService.Model.ScheduleKeyDeletionResponse : ScheduleKeyDeletionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ScheduleKeyDeletionResult class are now available on the ScheduleKeyDeletionResponse class. You should use the properties on ScheduleKeyDeletionResponse instead of accessing them through ScheduleKeyDeletionResult.")]
public ScheduleKeyDeletionResult ScheduleKeyDeletionResult { get; }
    public ScheduleKeyDeletionResult get_ScheduleKeyDeletionResult();
}
public class Amazon.KeyManagementService.Model.ScheduleKeyDeletionResult : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _deletionDate;
    private string _keyId;
    public DateTime DeletionDate { get; public set; }
    public string KeyId { get; public set; }
    public DateTime get_DeletionDate();
    public void set_DeletionDate(DateTime value);
    internal bool IsSetDeletionDate();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.UnsupportedOperationException : AmazonKeyManagementServiceException {
    public UnsupportedOperationException(string message);
    public UnsupportedOperationException(string message, Exception innerException);
    public UnsupportedOperationException(Exception innerException);
    public UnsupportedOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public UnsupportedOperationException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.KeyManagementService.Model.UpdateAliasRequest : AmazonKeyManagementServiceRequest {
    private string _aliasName;
    private string _targetKeyId;
    public string AliasName { get; public set; }
    public string TargetKeyId { get; public set; }
    public string get_AliasName();
    public void set_AliasName(string value);
    internal bool IsSetAliasName();
    public string get_TargetKeyId();
    public void set_TargetKeyId(string value);
    internal bool IsSetTargetKeyId();
}
public class Amazon.KeyManagementService.Model.UpdateAliasResponse : AmazonWebServiceResponse {
}
public class Amazon.KeyManagementService.Model.UpdateKeyDescriptionRequest : AmazonKeyManagementServiceRequest {
    private string _description;
    private string _keyId;
    public string Description { get; public set; }
    public string KeyId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_KeyId();
    public void set_KeyId(string value);
    internal bool IsSetKeyId();
}
public class Amazon.KeyManagementService.Model.UpdateKeyDescriptionResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.AmazonKinesisClient : AmazonServiceClient {
    public AmazonKinesisClient(AWSCredentials credentials);
    public AmazonKinesisClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonKinesisClient(AWSCredentials credentials, AmazonKinesisConfig clientConfig);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonKinesisConfig clientConfig);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonKinesisClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonKinesisConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void Dispose(bool disposing);
    internal AddTagsToStreamResponse AddTagsToStream(AddTagsToStreamRequest request);
    public sealed virtual Task`1<AddTagsToStreamResponse> AddTagsToStreamAsync(AddTagsToStreamRequest request, CancellationToken cancellationToken);
    internal CreateStreamResponse CreateStream(CreateStreamRequest request);
    public sealed virtual Task`1<CreateStreamResponse> CreateStreamAsync(CreateStreamRequest request, CancellationToken cancellationToken);
    internal DecreaseStreamRetentionPeriodResponse DecreaseStreamRetentionPeriod(DecreaseStreamRetentionPeriodRequest request);
    public sealed virtual Task`1<DecreaseStreamRetentionPeriodResponse> DecreaseStreamRetentionPeriodAsync(DecreaseStreamRetentionPeriodRequest request, CancellationToken cancellationToken);
    internal DeleteStreamResponse DeleteStream(DeleteStreamRequest request);
    public sealed virtual Task`1<DeleteStreamResponse> DeleteStreamAsync(DeleteStreamRequest request, CancellationToken cancellationToken);
    internal DescribeStreamResponse DescribeStream(DescribeStreamRequest request);
    public sealed virtual Task`1<DescribeStreamResponse> DescribeStreamAsync(DescribeStreamRequest request, CancellationToken cancellationToken);
    internal GetRecordsResponse GetRecords(GetRecordsRequest request);
    public sealed virtual Task`1<GetRecordsResponse> GetRecordsAsync(GetRecordsRequest request, CancellationToken cancellationToken);
    internal GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request);
    public sealed virtual Task`1<GetShardIteratorResponse> GetShardIteratorAsync(GetShardIteratorRequest request, CancellationToken cancellationToken);
    internal IncreaseStreamRetentionPeriodResponse IncreaseStreamRetentionPeriod(IncreaseStreamRetentionPeriodRequest request);
    public sealed virtual Task`1<IncreaseStreamRetentionPeriodResponse> IncreaseStreamRetentionPeriodAsync(IncreaseStreamRetentionPeriodRequest request, CancellationToken cancellationToken);
    internal ListStreamsResponse ListStreams();
    internal ListStreamsResponse ListStreams(ListStreamsRequest request);
    public sealed virtual Task`1<ListStreamsResponse> ListStreamsAsync(ListStreamsRequest request, CancellationToken cancellationToken);
    internal ListTagsForStreamResponse ListTagsForStream(ListTagsForStreamRequest request);
    public sealed virtual Task`1<ListTagsForStreamResponse> ListTagsForStreamAsync(ListTagsForStreamRequest request, CancellationToken cancellationToken);
    internal MergeShardsResponse MergeShards(MergeShardsRequest request);
    public sealed virtual Task`1<MergeShardsResponse> MergeShardsAsync(MergeShardsRequest request, CancellationToken cancellationToken);
    internal PutRecordResponse PutRecord(PutRecordRequest request);
    public sealed virtual Task`1<PutRecordResponse> PutRecordAsync(PutRecordRequest request, CancellationToken cancellationToken);
    internal PutRecordsResponse PutRecords(PutRecordsRequest request);
    public sealed virtual Task`1<PutRecordsResponse> PutRecordsAsync(PutRecordsRequest request, CancellationToken cancellationToken);
    internal RemoveTagsFromStreamResponse RemoveTagsFromStream(RemoveTagsFromStreamRequest request);
    public sealed virtual Task`1<RemoveTagsFromStreamResponse> RemoveTagsFromStreamAsync(RemoveTagsFromStreamRequest request, CancellationToken cancellationToken);
    internal SplitShardResponse SplitShard(SplitShardRequest request);
    public sealed virtual Task`1<SplitShardResponse> SplitShardAsync(SplitShardRequest request, CancellationToken cancellationToken);
}
public class Amazon.Kinesis.AmazonKinesisConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.Kinesis.AmazonKinesisException : AmazonServiceException {
    public AmazonKinesisException(string message);
    public AmazonKinesisException(string message, Exception innerException);
    public AmazonKinesisException(Exception innerException);
    public AmazonKinesisException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonKinesisException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.AmazonKinesisRequest : AmazonWebServiceRequest {
}
public interface Amazon.Kinesis.IAmazonKinesis {
    public abstract virtual Task`1<AddTagsToStreamResponse> AddTagsToStreamAsync(AddTagsToStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateStreamResponse> CreateStreamAsync(CreateStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DecreaseStreamRetentionPeriodResponse> DecreaseStreamRetentionPeriodAsync(DecreaseStreamRetentionPeriodRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteStreamResponse> DeleteStreamAsync(DeleteStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeStreamResponse> DescribeStreamAsync(DescribeStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetRecordsResponse> GetRecordsAsync(GetRecordsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetShardIteratorResponse> GetShardIteratorAsync(GetShardIteratorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<IncreaseStreamRetentionPeriodResponse> IncreaseStreamRetentionPeriodAsync(IncreaseStreamRetentionPeriodRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStreamsResponse> ListStreamsAsync(ListStreamsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForStreamResponse> ListTagsForStreamAsync(ListTagsForStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MergeShardsResponse> MergeShardsAsync(MergeShardsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutRecordResponse> PutRecordAsync(PutRecordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutRecordsResponse> PutRecordsAsync(PutRecordsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTagsFromStreamResponse> RemoveTagsFromStreamAsync(RemoveTagsFromStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SplitShardResponse> SplitShardAsync(SplitShardRequest request, CancellationToken cancellationToken);
}
public class Amazon.Kinesis.Model.AddTagsToStreamRequest : AmazonKinesisRequest {
    private string _streamName;
    private Dictionary`2<string, string> _tags;
    public string StreamName { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.Kinesis.Model.AddTagsToStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.CreateStreamRequest : AmazonKinesisRequest {
    private Nullable`1<int> _shardCount;
    private string _streamName;
    public int ShardCount { get; public set; }
    public string StreamName { get; public set; }
    public int get_ShardCount();
    public void set_ShardCount(int value);
    internal bool IsSetShardCount();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.CreateStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.DecreaseStreamRetentionPeriodRequest : AmazonKinesisRequest {
    private Nullable`1<int> _retentionPeriodHours;
    private string _streamName;
    public int RetentionPeriodHours { get; public set; }
    public string StreamName { get; public set; }
    public int get_RetentionPeriodHours();
    public void set_RetentionPeriodHours(int value);
    internal bool IsSetRetentionPeriodHours();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.DecreaseStreamRetentionPeriodResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.DeleteStreamRequest : AmazonKinesisRequest {
    private string _streamName;
    public string StreamName { get; public set; }
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.DeleteStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.DescribeStreamRequest : AmazonKinesisRequest {
    private string _exclusiveStartShardId;
    private Nullable`1<int> _limit;
    private string _streamName;
    public string ExclusiveStartShardId { get; public set; }
    public int Limit { get; public set; }
    public string StreamName { get; public set; }
    public string get_ExclusiveStartShardId();
    public void set_ExclusiveStartShardId(string value);
    internal bool IsSetExclusiveStartShardId();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.DescribeStreamResponse : DescribeStreamResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeStreamResult class are now available on the DescribeStreamResponse class. You should use the properties on DescribeStreamResponse instead of accessing them through DescribeStreamResult.")]
public DescribeStreamResult DescribeStreamResult { get; }
    public DescribeStreamResult get_DescribeStreamResult();
}
public class Amazon.Kinesis.Model.DescribeStreamResult : AmazonWebServiceResponse {
    private StreamDescription _streamDescription;
    public StreamDescription StreamDescription { get; public set; }
    public StreamDescription get_StreamDescription();
    public void set_StreamDescription(StreamDescription value);
    internal bool IsSetStreamDescription();
}
public class Amazon.Kinesis.Model.ExpiredIteratorException : AmazonKinesisException {
    public ExpiredIteratorException(string message);
    public ExpiredIteratorException(string message, Exception innerException);
    public ExpiredIteratorException(Exception innerException);
    public ExpiredIteratorException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ExpiredIteratorException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.GetRecordsRequest : AmazonKinesisRequest {
    private Nullable`1<int> _limit;
    private string _shardIterator;
    public int Limit { get; public set; }
    public string ShardIterator { get; public set; }
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_ShardIterator();
    public void set_ShardIterator(string value);
    internal bool IsSetShardIterator();
}
public class Amazon.Kinesis.Model.GetRecordsResponse : GetRecordsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetRecordsResult class are now available on the GetRecordsResponse class. You should use the properties on GetRecordsResponse instead of accessing them through GetRecordsResult.")]
public GetRecordsResult GetRecordsResult { get; }
    public GetRecordsResult get_GetRecordsResult();
}
public class Amazon.Kinesis.Model.GetRecordsResult : AmazonWebServiceResponse {
    private Nullable`1<long> _millisBehindLatest;
    private string _nextShardIterator;
    private List`1<Record> _records;
    public long MillisBehindLatest { get; public set; }
    public string NextShardIterator { get; public set; }
    public List`1<Record> Records { get; public set; }
    public long get_MillisBehindLatest();
    public void set_MillisBehindLatest(long value);
    internal bool IsSetMillisBehindLatest();
    public string get_NextShardIterator();
    public void set_NextShardIterator(string value);
    internal bool IsSetNextShardIterator();
    public List`1<Record> get_Records();
    public void set_Records(List`1<Record> value);
    internal bool IsSetRecords();
}
public class Amazon.Kinesis.Model.GetShardIteratorRequest : AmazonKinesisRequest {
    private string _shardId;
    private ShardIteratorType _shardIteratorType;
    private string _startingSequenceNumber;
    private string _streamName;
    public string ShardId { get; public set; }
    public ShardIteratorType ShardIteratorType { get; public set; }
    public string StartingSequenceNumber { get; public set; }
    public string StreamName { get; public set; }
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
    public ShardIteratorType get_ShardIteratorType();
    public void set_ShardIteratorType(ShardIteratorType value);
    internal bool IsSetShardIteratorType();
    public string get_StartingSequenceNumber();
    public void set_StartingSequenceNumber(string value);
    internal bool IsSetStartingSequenceNumber();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.GetShardIteratorResponse : GetShardIteratorResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetShardIteratorResult class are now available on the GetShardIteratorResponse class. You should use the properties on GetShardIteratorResponse instead of accessing them through GetShardIteratorResult.")]
public GetShardIteratorResult GetShardIteratorResult { get; }
    public GetShardIteratorResult get_GetShardIteratorResult();
}
public class Amazon.Kinesis.Model.GetShardIteratorResult : AmazonWebServiceResponse {
    private string _shardIterator;
    public string ShardIterator { get; public set; }
    public string get_ShardIterator();
    public void set_ShardIterator(string value);
    internal bool IsSetShardIterator();
}
public class Amazon.Kinesis.Model.HashKeyRange : object {
    private string _endingHashKey;
    private string _startingHashKey;
    public string EndingHashKey { get; public set; }
    public string StartingHashKey { get; public set; }
    public string get_EndingHashKey();
    public void set_EndingHashKey(string value);
    internal bool IsSetEndingHashKey();
    public string get_StartingHashKey();
    public void set_StartingHashKey(string value);
    internal bool IsSetStartingHashKey();
}
public class Amazon.Kinesis.Model.IncreaseStreamRetentionPeriodRequest : AmazonKinesisRequest {
    private Nullable`1<int> _retentionPeriodHours;
    private string _streamName;
    public int RetentionPeriodHours { get; public set; }
    public string StreamName { get; public set; }
    public int get_RetentionPeriodHours();
    public void set_RetentionPeriodHours(int value);
    internal bool IsSetRetentionPeriodHours();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.IncreaseStreamRetentionPeriodResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.AddTagsToStreamRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTagsToStreamRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.AddTagsToStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddTagsToStreamResponseUnmarshaller _instance;
    public static AddTagsToStreamResponseUnmarshaller Instance { get; }
    private static AddTagsToStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTagsToStreamResponseUnmarshaller GetInstance();
    public static AddTagsToStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.CreateStreamRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateStreamRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.CreateStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateStreamResponseUnmarshaller _instance;
    public static CreateStreamResponseUnmarshaller Instance { get; }
    private static CreateStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateStreamResponseUnmarshaller GetInstance();
    public static CreateStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DecreaseStreamRetentionPeriodRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DecreaseStreamRetentionPeriodRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DecreaseStreamRetentionPeriodResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DecreaseStreamRetentionPeriodResponseUnmarshaller _instance;
    public static DecreaseStreamRetentionPeriodResponseUnmarshaller Instance { get; }
    private static DecreaseStreamRetentionPeriodResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DecreaseStreamRetentionPeriodResponseUnmarshaller GetInstance();
    public static DecreaseStreamRetentionPeriodResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DeleteStreamRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteStreamRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DeleteStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteStreamResponseUnmarshaller _instance;
    public static DeleteStreamResponseUnmarshaller Instance { get; }
    private static DeleteStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteStreamResponseUnmarshaller GetInstance();
    public static DeleteStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeStreamRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeStreamRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeStreamResponseUnmarshaller _instance;
    public static DescribeStreamResponseUnmarshaller Instance { get; }
    private static DescribeStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeStreamResponseUnmarshaller GetInstance();
    public static DescribeStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.GetRecordsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRecordsRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.GetRecordsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRecordsResponseUnmarshaller _instance;
    public static GetRecordsResponseUnmarshaller Instance { get; }
    private static GetRecordsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRecordsResponseUnmarshaller GetInstance();
    public static GetRecordsResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.GetShardIteratorRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetShardIteratorRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.GetShardIteratorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetShardIteratorResponseUnmarshaller _instance;
    public static GetShardIteratorResponseUnmarshaller Instance { get; }
    private static GetShardIteratorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetShardIteratorResponseUnmarshaller GetInstance();
    public static GetShardIteratorResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.HashKeyRangeUnmarshaller : object {
    private static HashKeyRangeUnmarshaller _instance;
    public static HashKeyRangeUnmarshaller Instance { get; }
    private static HashKeyRangeUnmarshaller();
    private sealed virtual override HashKeyRange Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.HashKeyRange,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual HashKeyRange Unmarshall(JsonUnmarshallerContext context);
    public static HashKeyRangeUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.IncreaseStreamRetentionPeriodRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(IncreaseStreamRetentionPeriodRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.IncreaseStreamRetentionPeriodResponseUnmarshaller : JsonResponseUnmarshaller {
    private static IncreaseStreamRetentionPeriodResponseUnmarshaller _instance;
    public static IncreaseStreamRetentionPeriodResponseUnmarshaller Instance { get; }
    private static IncreaseStreamRetentionPeriodResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static IncreaseStreamRetentionPeriodResponseUnmarshaller GetInstance();
    public static IncreaseStreamRetentionPeriodResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListStreamsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListStreamsRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListStreamsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListStreamsResponseUnmarshaller _instance;
    public static ListStreamsResponseUnmarshaller Instance { get; }
    private static ListStreamsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListStreamsResponseUnmarshaller GetInstance();
    public static ListStreamsResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListTagsForStreamRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForStreamRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ListTagsForStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForStreamResponseUnmarshaller _instance;
    public static ListTagsForStreamResponseUnmarshaller Instance { get; }
    private static ListTagsForStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForStreamResponseUnmarshaller GetInstance();
    public static ListTagsForStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.MergeShardsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MergeShardsRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.MergeShardsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static MergeShardsResponseUnmarshaller _instance;
    public static MergeShardsResponseUnmarshaller Instance { get; }
    private static MergeShardsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MergeShardsResponseUnmarshaller GetInstance();
    public static MergeShardsResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutRecordRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutRecordResponseUnmarshaller _instance;
    public static PutRecordResponseUnmarshaller Instance { get; }
    private static PutRecordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutRecordResponseUnmarshaller GetInstance();
    public static PutRecordResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordsRequestEntryMarshaller : object {
    public static PutRecordsRequestEntryMarshaller Instance;
    private static PutRecordsRequestEntryMarshaller();
    public sealed virtual void Marshall(PutRecordsRequestEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutRecordsRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutRecordsResponseUnmarshaller _instance;
    public static PutRecordsResponseUnmarshaller Instance { get; }
    private static PutRecordsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutRecordsResponseUnmarshaller GetInstance();
    public static PutRecordsResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordsResultEntryUnmarshaller : object {
    private static PutRecordsResultEntryUnmarshaller _instance;
    public static PutRecordsResultEntryUnmarshaller Instance { get; }
    private static PutRecordsResultEntryUnmarshaller();
    private sealed virtual override PutRecordsResultEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.PutRecordsResultEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PutRecordsResultEntry Unmarshall(JsonUnmarshallerContext context);
    public static PutRecordsResultEntryUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.RecordUnmarshaller : object {
    private static RecordUnmarshaller _instance;
    public static RecordUnmarshaller Instance { get; }
    private static RecordUnmarshaller();
    private sealed virtual override Record Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.Record,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Record Unmarshall(JsonUnmarshallerContext context);
    public static RecordUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.RemoveTagsFromStreamRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTagsFromStreamRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.RemoveTagsFromStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveTagsFromStreamResponseUnmarshaller _instance;
    public static RemoveTagsFromStreamResponseUnmarshaller Instance { get; }
    private static RemoveTagsFromStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTagsFromStreamResponseUnmarshaller GetInstance();
    public static RemoveTagsFromStreamResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.SequenceNumberRangeUnmarshaller : object {
    private static SequenceNumberRangeUnmarshaller _instance;
    public static SequenceNumberRangeUnmarshaller Instance { get; }
    private static SequenceNumberRangeUnmarshaller();
    private sealed virtual override SequenceNumberRange Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.SequenceNumberRange,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SequenceNumberRange Unmarshall(JsonUnmarshallerContext context);
    public static SequenceNumberRangeUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.ShardUnmarshaller : object {
    private static ShardUnmarshaller _instance;
    public static ShardUnmarshaller Instance { get; }
    private static ShardUnmarshaller();
    private sealed virtual override Shard Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.Shard,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Shard Unmarshall(JsonUnmarshallerContext context);
    public static ShardUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.SplitShardRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SplitShardRequest publicRequest);
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.SplitShardResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SplitShardResponseUnmarshaller _instance;
    public static SplitShardResponseUnmarshaller Instance { get; }
    private static SplitShardResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SplitShardResponseUnmarshaller GetInstance();
    public static SplitShardResponseUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.StreamDescriptionUnmarshaller : object {
    private static StreamDescriptionUnmarshaller _instance;
    public static StreamDescriptionUnmarshaller Instance { get; }
    private static StreamDescriptionUnmarshaller();
    private sealed virtual override StreamDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.StreamDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamDescription Unmarshall(JsonUnmarshallerContext context);
    public static StreamDescriptionUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Kinesis.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.Kinesis.Model.InvalidArgumentException : AmazonKinesisException {
    public InvalidArgumentException(string message);
    public InvalidArgumentException(string message, Exception innerException);
    public InvalidArgumentException(Exception innerException);
    public InvalidArgumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidArgumentException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.LimitExceededException : AmazonKinesisException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.ListStreamsRequest : AmazonKinesisRequest {
    private string _exclusiveStartStreamName;
    private Nullable`1<int> _limit;
    public string ExclusiveStartStreamName { get; public set; }
    public int Limit { get; public set; }
    public string get_ExclusiveStartStreamName();
    public void set_ExclusiveStartStreamName(string value);
    internal bool IsSetExclusiveStartStreamName();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
}
public class Amazon.Kinesis.Model.ListStreamsResponse : ListStreamsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListStreamsResult class are now available on the ListStreamsResponse class. You should use the properties on ListStreamsResponse instead of accessing them through ListStreamsResult.")]
public ListStreamsResult ListStreamsResult { get; }
    public ListStreamsResult get_ListStreamsResult();
}
public class Amazon.Kinesis.Model.ListStreamsResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _hasMoreStreams;
    private List`1<string> _streamNames;
    public bool HasMoreStreams { get; public set; }
    public List`1<string> StreamNames { get; public set; }
    public bool get_HasMoreStreams();
    public void set_HasMoreStreams(bool value);
    internal bool IsSetHasMoreStreams();
    public List`1<string> get_StreamNames();
    public void set_StreamNames(List`1<string> value);
    internal bool IsSetStreamNames();
}
public class Amazon.Kinesis.Model.ListTagsForStreamRequest : AmazonKinesisRequest {
    private string _exclusiveStartTagKey;
    private Nullable`1<int> _limit;
    private string _streamName;
    public string ExclusiveStartTagKey { get; public set; }
    public int Limit { get; public set; }
    public string StreamName { get; public set; }
    public string get_ExclusiveStartTagKey();
    public void set_ExclusiveStartTagKey(string value);
    internal bool IsSetExclusiveStartTagKey();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.ListTagsForStreamResponse : ListTagsForStreamResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListTagsForStreamResult class are now available on the ListTagsForStreamResponse class. You should use the properties on ListTagsForStreamResponse instead of accessing them through ListTagsForStreamResult.")]
public ListTagsForStreamResult ListTagsForStreamResult { get; }
    public ListTagsForStreamResult get_ListTagsForStreamResult();
}
public class Amazon.Kinesis.Model.ListTagsForStreamResult : AmazonWebServiceResponse {
    private Nullable`1<bool> _hasMoreTags;
    private List`1<Tag> _tags;
    public bool HasMoreTags { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public bool get_HasMoreTags();
    public void set_HasMoreTags(bool value);
    internal bool IsSetHasMoreTags();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.Kinesis.Model.MergeShardsRequest : AmazonKinesisRequest {
    private string _adjacentShardToMerge;
    private string _shardToMerge;
    private string _streamName;
    public string AdjacentShardToMerge { get; public set; }
    public string ShardToMerge { get; public set; }
    public string StreamName { get; public set; }
    public string get_AdjacentShardToMerge();
    public void set_AdjacentShardToMerge(string value);
    internal bool IsSetAdjacentShardToMerge();
    public string get_ShardToMerge();
    public void set_ShardToMerge(string value);
    internal bool IsSetShardToMerge();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.MergeShardsResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.ProvisionedThroughputExceededException : AmazonKinesisException {
    public ProvisionedThroughputExceededException(string message);
    public ProvisionedThroughputExceededException(string message, Exception innerException);
    public ProvisionedThroughputExceededException(Exception innerException);
    public ProvisionedThroughputExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ProvisionedThroughputExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.PutRecordRequest : AmazonKinesisRequest {
    private MemoryStream _data;
    private string _explicitHashKey;
    private string _partitionKey;
    private string _sequenceNumberForOrdering;
    private string _streamName;
    public MemoryStream Data { get; public set; }
    public string ExplicitHashKey { get; public set; }
    public string PartitionKey { get; public set; }
    public string SequenceNumberForOrdering { get; public set; }
    public string StreamName { get; public set; }
    public MemoryStream get_Data();
    public void set_Data(MemoryStream value);
    internal bool IsSetData();
    public string get_ExplicitHashKey();
    public void set_ExplicitHashKey(string value);
    internal bool IsSetExplicitHashKey();
    public string get_PartitionKey();
    public void set_PartitionKey(string value);
    internal bool IsSetPartitionKey();
    public string get_SequenceNumberForOrdering();
    public void set_SequenceNumberForOrdering(string value);
    internal bool IsSetSequenceNumberForOrdering();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.PutRecordResponse : PutRecordResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the PutRecordResult class are now available on the PutRecordResponse class. You should use the properties on PutRecordResponse instead of accessing them through PutRecordResult.")]
public PutRecordResult PutRecordResult { get; }
    public PutRecordResult get_PutRecordResult();
}
public class Amazon.Kinesis.Model.PutRecordResult : AmazonWebServiceResponse {
    private string _sequenceNumber;
    private string _shardId;
    public string SequenceNumber { get; public set; }
    public string ShardId { get; public set; }
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
}
public class Amazon.Kinesis.Model.PutRecordsRequest : AmazonKinesisRequest {
    private List`1<PutRecordsRequestEntry> _records;
    private string _streamName;
    public List`1<PutRecordsRequestEntry> Records { get; public set; }
    public string StreamName { get; public set; }
    public List`1<PutRecordsRequestEntry> get_Records();
    public void set_Records(List`1<PutRecordsRequestEntry> value);
    internal bool IsSetRecords();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.PutRecordsRequestEntry : object {
    private MemoryStream _data;
    private string _explicitHashKey;
    private string _partitionKey;
    public MemoryStream Data { get; public set; }
    public string ExplicitHashKey { get; public set; }
    public string PartitionKey { get; public set; }
    public MemoryStream get_Data();
    public void set_Data(MemoryStream value);
    internal bool IsSetData();
    public string get_ExplicitHashKey();
    public void set_ExplicitHashKey(string value);
    internal bool IsSetExplicitHashKey();
    public string get_PartitionKey();
    public void set_PartitionKey(string value);
    internal bool IsSetPartitionKey();
}
public class Amazon.Kinesis.Model.PutRecordsResponse : PutRecordsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the PutRecordsResult class are now available on the PutRecordsResponse class. You should use the properties on PutRecordsResponse instead of accessing them through PutRecordsResult.")]
public PutRecordsResult PutRecordsResult { get; }
    public PutRecordsResult get_PutRecordsResult();
}
public class Amazon.Kinesis.Model.PutRecordsResult : AmazonWebServiceResponse {
    private Nullable`1<int> _failedRecordCount;
    private List`1<PutRecordsResultEntry> _records;
    public int FailedRecordCount { get; public set; }
    public List`1<PutRecordsResultEntry> Records { get; public set; }
    public int get_FailedRecordCount();
    public void set_FailedRecordCount(int value);
    internal bool IsSetFailedRecordCount();
    public List`1<PutRecordsResultEntry> get_Records();
    public void set_Records(List`1<PutRecordsResultEntry> value);
    internal bool IsSetRecords();
}
public class Amazon.Kinesis.Model.PutRecordsResultEntry : object {
    private string _errorCode;
    private string _errorMessage;
    private string _sequenceNumber;
    private string _shardId;
    public string ErrorCode { get; public set; }
    public string ErrorMessage { get; public set; }
    public string SequenceNumber { get; public set; }
    public string ShardId { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
}
public class Amazon.Kinesis.Model.Record : object {
    private Nullable`1<DateTime> _approximateArrivalTimestamp;
    private MemoryStream _data;
    private string _partitionKey;
    private string _sequenceNumber;
    public DateTime ApproximateArrivalTimestamp { get; public set; }
    public MemoryStream Data { get; public set; }
    public string PartitionKey { get; public set; }
    public string SequenceNumber { get; public set; }
    public DateTime get_ApproximateArrivalTimestamp();
    public void set_ApproximateArrivalTimestamp(DateTime value);
    internal bool IsSetApproximateArrivalTimestamp();
    public MemoryStream get_Data();
    public void set_Data(MemoryStream value);
    internal bool IsSetData();
    public string get_PartitionKey();
    public void set_PartitionKey(string value);
    internal bool IsSetPartitionKey();
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
}
public class Amazon.Kinesis.Model.RemoveTagsFromStreamRequest : AmazonKinesisRequest {
    private string _streamName;
    private List`1<string> _tagKeys;
    public string StreamName { get; public set; }
    public List`1<string> TagKeys { get; public set; }
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.Kinesis.Model.RemoveTagsFromStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.ResourceInUseException : AmazonKinesisException {
    public ResourceInUseException(string message);
    public ResourceInUseException(string message, Exception innerException);
    public ResourceInUseException(Exception innerException);
    public ResourceInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceInUseException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.ResourceNotFoundException : AmazonKinesisException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Kinesis.Model.SequenceNumberRange : object {
    private string _endingSequenceNumber;
    private string _startingSequenceNumber;
    public string EndingSequenceNumber { get; public set; }
    public string StartingSequenceNumber { get; public set; }
    public string get_EndingSequenceNumber();
    public void set_EndingSequenceNumber(string value);
    internal bool IsSetEndingSequenceNumber();
    public string get_StartingSequenceNumber();
    public void set_StartingSequenceNumber(string value);
    internal bool IsSetStartingSequenceNumber();
}
public class Amazon.Kinesis.Model.Shard : object {
    private string _adjacentParentShardId;
    private HashKeyRange _hashKeyRange;
    private string _parentShardId;
    private SequenceNumberRange _sequenceNumberRange;
    private string _shardId;
    public string AdjacentParentShardId { get; public set; }
    public HashKeyRange HashKeyRange { get; public set; }
    public string ParentShardId { get; public set; }
    public SequenceNumberRange SequenceNumberRange { get; public set; }
    public string ShardId { get; public set; }
    public string get_AdjacentParentShardId();
    public void set_AdjacentParentShardId(string value);
    internal bool IsSetAdjacentParentShardId();
    public HashKeyRange get_HashKeyRange();
    public void set_HashKeyRange(HashKeyRange value);
    internal bool IsSetHashKeyRange();
    public string get_ParentShardId();
    public void set_ParentShardId(string value);
    internal bool IsSetParentShardId();
    public SequenceNumberRange get_SequenceNumberRange();
    public void set_SequenceNumberRange(SequenceNumberRange value);
    internal bool IsSetSequenceNumberRange();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
}
public class Amazon.Kinesis.Model.SplitShardRequest : AmazonKinesisRequest {
    private string _newStartingHashKey;
    private string _shardToSplit;
    private string _streamName;
    public string NewStartingHashKey { get; public set; }
    public string ShardToSplit { get; public set; }
    public string StreamName { get; public set; }
    public string get_NewStartingHashKey();
    public void set_NewStartingHashKey(string value);
    internal bool IsSetNewStartingHashKey();
    public string get_ShardToSplit();
    public void set_ShardToSplit(string value);
    internal bool IsSetShardToSplit();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
}
public class Amazon.Kinesis.Model.SplitShardResponse : AmazonWebServiceResponse {
}
public class Amazon.Kinesis.Model.StreamDescription : object {
    private Nullable`1<bool> _hasMoreShards;
    private Nullable`1<int> _retentionPeriodHours;
    private List`1<Shard> _shards;
    private string _streamARN;
    private string _streamName;
    private StreamStatus _streamStatus;
    public bool HasMoreShards { get; public set; }
    public int RetentionPeriodHours { get; public set; }
    public List`1<Shard> Shards { get; public set; }
    public string StreamARN { get; public set; }
    public string StreamName { get; public set; }
    public StreamStatus StreamStatus { get; public set; }
    public bool get_HasMoreShards();
    public void set_HasMoreShards(bool value);
    internal bool IsSetHasMoreShards();
    public int get_RetentionPeriodHours();
    public void set_RetentionPeriodHours(int value);
    internal bool IsSetRetentionPeriodHours();
    public List`1<Shard> get_Shards();
    public void set_Shards(List`1<Shard> value);
    internal bool IsSetShards();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
    public string get_StreamName();
    public void set_StreamName(string value);
    internal bool IsSetStreamName();
    public StreamStatus get_StreamStatus();
    public void set_StreamStatus(StreamStatus value);
    internal bool IsSetStreamStatus();
}
public class Amazon.Kinesis.Model.Tag : object {
    private string _key;
    private string _value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.Kinesis.ShardIteratorType : ConstantClass {
    public static ShardIteratorType AFTER_SEQUENCE_NUMBER;
    public static ShardIteratorType AT_SEQUENCE_NUMBER;
    public static ShardIteratorType LATEST;
    public static ShardIteratorType TRIM_HORIZON;
    public ShardIteratorType(string value);
    private static ShardIteratorType();
    public static ShardIteratorType FindValue(string value);
    public static ShardIteratorType op_Implicit(string value);
}
public class Amazon.Kinesis.StreamStatus : ConstantClass {
    public static StreamStatus ACTIVE;
    public static StreamStatus CREATING;
    public static StreamStatus DELETING;
    public static StreamStatus UPDATING;
    public StreamStatus(string value);
    private static StreamStatus();
    public static StreamStatus FindValue(string value);
    public static StreamStatus op_Implicit(string value);
}
public class Amazon.Lambda.AmazonLambdaClient : AmazonServiceClient {
    public AmazonLambdaClient(AWSCredentials credentials);
    public AmazonLambdaClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonLambdaClient(AWSCredentials credentials, AmazonLambdaConfig clientConfig);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonLambdaConfig clientConfig);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonLambdaClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonLambdaConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void Dispose(bool disposing);
    internal AddPermissionResponse AddPermission(AddPermissionRequest request);
    public sealed virtual Task`1<AddPermissionResponse> AddPermissionAsync(AddPermissionRequest request, CancellationToken cancellationToken);
    internal CreateAliasResponse CreateAlias(CreateAliasRequest request);
    public sealed virtual Task`1<CreateAliasResponse> CreateAliasAsync(CreateAliasRequest request, CancellationToken cancellationToken);
    internal CreateEventSourceMappingResponse CreateEventSourceMapping(CreateEventSourceMappingRequest request);
    public sealed virtual Task`1<CreateEventSourceMappingResponse> CreateEventSourceMappingAsync(CreateEventSourceMappingRequest request, CancellationToken cancellationToken);
    internal CreateFunctionResponse CreateFunction(CreateFunctionRequest request);
    public sealed virtual Task`1<CreateFunctionResponse> CreateFunctionAsync(CreateFunctionRequest request, CancellationToken cancellationToken);
    internal DeleteAliasResponse DeleteAlias(DeleteAliasRequest request);
    public sealed virtual Task`1<DeleteAliasResponse> DeleteAliasAsync(DeleteAliasRequest request, CancellationToken cancellationToken);
    internal DeleteEventSourceMappingResponse DeleteEventSourceMapping(DeleteEventSourceMappingRequest request);
    public sealed virtual Task`1<DeleteEventSourceMappingResponse> DeleteEventSourceMappingAsync(DeleteEventSourceMappingRequest request, CancellationToken cancellationToken);
    internal DeleteFunctionResponse DeleteFunction(DeleteFunctionRequest request);
    public sealed virtual Task`1<DeleteFunctionResponse> DeleteFunctionAsync(DeleteFunctionRequest request, CancellationToken cancellationToken);
    internal GetAliasResponse GetAlias(GetAliasRequest request);
    public sealed virtual Task`1<GetAliasResponse> GetAliasAsync(GetAliasRequest request, CancellationToken cancellationToken);
    internal GetEventSourceMappingResponse GetEventSourceMapping(GetEventSourceMappingRequest request);
    public sealed virtual Task`1<GetEventSourceMappingResponse> GetEventSourceMappingAsync(GetEventSourceMappingRequest request, CancellationToken cancellationToken);
    internal GetFunctionResponse GetFunction(GetFunctionRequest request);
    public sealed virtual Task`1<GetFunctionResponse> GetFunctionAsync(GetFunctionRequest request, CancellationToken cancellationToken);
    internal GetFunctionConfigurationResponse GetFunctionConfiguration(GetFunctionConfigurationRequest request);
    public sealed virtual Task`1<GetFunctionConfigurationResponse> GetFunctionConfigurationAsync(GetFunctionConfigurationRequest request, CancellationToken cancellationToken);
    internal GetPolicyResponse GetPolicy(GetPolicyRequest request);
    public sealed virtual Task`1<GetPolicyResponse> GetPolicyAsync(GetPolicyRequest request, CancellationToken cancellationToken);
    internal InvokeResponse Invoke(InvokeRequest request);
    public sealed virtual Task`1<InvokeResponse> InvokeAsync(InvokeRequest request, CancellationToken cancellationToken);
    internal InvokeAsyncResponse InvokeAsync(InvokeAsyncRequest request);
    public sealed virtual Task`1<InvokeAsyncResponse> InvokeAsyncAsync(InvokeAsyncRequest request, CancellationToken cancellationToken);
    internal ListAliasesResponse ListAliases(ListAliasesRequest request);
    public sealed virtual Task`1<ListAliasesResponse> ListAliasesAsync(ListAliasesRequest request, CancellationToken cancellationToken);
    internal ListEventSourceMappingsResponse ListEventSourceMappings(ListEventSourceMappingsRequest request);
    public sealed virtual Task`1<ListEventSourceMappingsResponse> ListEventSourceMappingsAsync(ListEventSourceMappingsRequest request, CancellationToken cancellationToken);
    internal ListFunctionsResponse ListFunctions(ListFunctionsRequest request);
    public sealed virtual Task`1<ListFunctionsResponse> ListFunctionsAsync(ListFunctionsRequest request, CancellationToken cancellationToken);
    internal ListVersionsByFunctionResponse ListVersionsByFunction(ListVersionsByFunctionRequest request);
    public sealed virtual Task`1<ListVersionsByFunctionResponse> ListVersionsByFunctionAsync(ListVersionsByFunctionRequest request, CancellationToken cancellationToken);
    internal PublishVersionResponse PublishVersion(PublishVersionRequest request);
    public sealed virtual Task`1<PublishVersionResponse> PublishVersionAsync(PublishVersionRequest request, CancellationToken cancellationToken);
    internal RemovePermissionResponse RemovePermission(RemovePermissionRequest request);
    public sealed virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(RemovePermissionRequest request, CancellationToken cancellationToken);
    internal UpdateAliasResponse UpdateAlias(UpdateAliasRequest request);
    public sealed virtual Task`1<UpdateAliasResponse> UpdateAliasAsync(UpdateAliasRequest request, CancellationToken cancellationToken);
    internal UpdateEventSourceMappingResponse UpdateEventSourceMapping(UpdateEventSourceMappingRequest request);
    public sealed virtual Task`1<UpdateEventSourceMappingResponse> UpdateEventSourceMappingAsync(UpdateEventSourceMappingRequest request, CancellationToken cancellationToken);
    internal UpdateFunctionCodeResponse UpdateFunctionCode(UpdateFunctionCodeRequest request);
    public sealed virtual Task`1<UpdateFunctionCodeResponse> UpdateFunctionCodeAsync(UpdateFunctionCodeRequest request, CancellationToken cancellationToken);
    internal UpdateFunctionConfigurationResponse UpdateFunctionConfiguration(UpdateFunctionConfigurationRequest request);
    public sealed virtual Task`1<UpdateFunctionConfigurationResponse> UpdateFunctionConfigurationAsync(UpdateFunctionConfigurationRequest request, CancellationToken cancellationToken);
}
public class Amazon.Lambda.AmazonLambdaConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.Lambda.AmazonLambdaException : AmazonServiceException {
    public AmazonLambdaException(string message);
    public AmazonLambdaException(string message, Exception innerException);
    public AmazonLambdaException(Exception innerException);
    public AmazonLambdaException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonLambdaException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.AmazonLambdaRequest : AmazonWebServiceRequest {
}
public class Amazon.Lambda.EventSourcePosition : ConstantClass {
    public static EventSourcePosition LATEST;
    public static EventSourcePosition TRIM_HORIZON;
    public EventSourcePosition(string value);
    private static EventSourcePosition();
    public static EventSourcePosition FindValue(string value);
    public static EventSourcePosition op_Implicit(string value);
}
public interface Amazon.Lambda.IAmazonLambda {
    public abstract virtual Task`1<AddPermissionResponse> AddPermissionAsync(AddPermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAliasResponse> CreateAliasAsync(CreateAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateEventSourceMappingResponse> CreateEventSourceMappingAsync(CreateEventSourceMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFunctionResponse> CreateFunctionAsync(CreateFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAliasResponse> DeleteAliasAsync(DeleteAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteEventSourceMappingResponse> DeleteEventSourceMappingAsync(DeleteEventSourceMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFunctionResponse> DeleteFunctionAsync(DeleteFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAliasResponse> GetAliasAsync(GetAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetEventSourceMappingResponse> GetEventSourceMappingAsync(GetEventSourceMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionResponse> GetFunctionAsync(GetFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionConfigurationResponse> GetFunctionConfigurationAsync(GetFunctionConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPolicyResponse> GetPolicyAsync(GetPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<InvokeResponse> InvokeAsync(InvokeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<InvokeAsyncResponse> InvokeAsyncAsync(InvokeAsyncRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAliasesResponse> ListAliasesAsync(ListAliasesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListEventSourceMappingsResponse> ListEventSourceMappingsAsync(ListEventSourceMappingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFunctionsResponse> ListFunctionsAsync(ListFunctionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVersionsByFunctionResponse> ListVersionsByFunctionAsync(ListVersionsByFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PublishVersionResponse> PublishVersionAsync(PublishVersionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(RemovePermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateAliasResponse> UpdateAliasAsync(UpdateAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateEventSourceMappingResponse> UpdateEventSourceMappingAsync(UpdateEventSourceMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFunctionCodeResponse> UpdateFunctionCodeAsync(UpdateFunctionCodeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFunctionConfigurationResponse> UpdateFunctionConfigurationAsync(UpdateFunctionConfigurationRequest request, CancellationToken cancellationToken);
}
public class Amazon.Lambda.InvocationType : ConstantClass {
    public static InvocationType DryRun;
    public static InvocationType Event;
    public static InvocationType RequestResponse;
    public InvocationType(string value);
    private static InvocationType();
    public static InvocationType FindValue(string value);
    public static InvocationType op_Implicit(string value);
}
public class Amazon.Lambda.LogType : ConstantClass {
    public static LogType None;
    public static LogType Tail;
    public LogType(string value);
    private static LogType();
    public static LogType FindValue(string value);
    public static LogType op_Implicit(string value);
}
public class Amazon.Lambda.Model.AddPermissionRequest : AmazonLambdaRequest {
    private string _action;
    private string _functionName;
    private string _principal;
    private string _qualifier;
    private string _sourceAccount;
    private string _sourceArn;
    private string _statementId;
    public string Action { get; public set; }
    public string FunctionName { get; public set; }
    public string Principal { get; public set; }
    public string Qualifier { get; public set; }
    public string SourceAccount { get; public set; }
    public string SourceArn { get; public set; }
    public string StatementId { get; public set; }
    public string get_Action();
    public void set_Action(string value);
    internal bool IsSetAction();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Principal();
    public void set_Principal(string value);
    internal bool IsSetPrincipal();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
    public string get_SourceAccount();
    public void set_SourceAccount(string value);
    internal bool IsSetSourceAccount();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
    public string get_StatementId();
    public void set_StatementId(string value);
    internal bool IsSetStatementId();
}
public class Amazon.Lambda.Model.AddPermissionResponse : AddPermissionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AddPermissionResult class are now available on the AddPermissionResponse class. You should use the properties on AddPermissionResponse instead of accessing them through AddPermissionResult.")]
public AddPermissionResult AddPermissionResult { get; }
    public AddPermissionResult get_AddPermissionResult();
}
public class Amazon.Lambda.Model.AddPermissionResult : AmazonWebServiceResponse {
    private string _statement;
    public string Statement { get; public set; }
    public string get_Statement();
    public void set_Statement(string value);
    internal bool IsSetStatement();
}
public class Amazon.Lambda.Model.AliasConfiguration : object {
    private string _aliasArn;
    private string _description;
    private string _functionVersion;
    private string _name;
    public string AliasArn { get; public set; }
    public string Description { get; public set; }
    public string FunctionVersion { get; public set; }
    public string Name { get; public set; }
    public string get_AliasArn();
    public void set_AliasArn(string value);
    internal bool IsSetAliasArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Lambda.Model.CodeStorageExceededException : AmazonLambdaException {
    public CodeStorageExceededException(string message);
    public CodeStorageExceededException(string message, Exception innerException);
    public CodeStorageExceededException(Exception innerException);
    public CodeStorageExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public CodeStorageExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.CreateAliasRequest : AmazonLambdaRequest {
    private string _description;
    private string _functionName;
    private string _functionVersion;
    private string _name;
    public string Description { get; public set; }
    public string FunctionName { get; public set; }
    public string FunctionVersion { get; public set; }
    public string Name { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Lambda.Model.CreateAliasResponse : CreateAliasResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateAliasResult class are now available on the CreateAliasResponse class. You should use the properties on CreateAliasResponse instead of accessing them through CreateAliasResult.")]
public CreateAliasResult CreateAliasResult { get; }
    public CreateAliasResult get_CreateAliasResult();
}
public class Amazon.Lambda.Model.CreateAliasResult : AmazonWebServiceResponse {
    private string _aliasArn;
    private string _description;
    private string _functionVersion;
    private string _name;
    public string AliasArn { get; public set; }
    public string Description { get; public set; }
    public string FunctionVersion { get; public set; }
    public string Name { get; public set; }
    public string get_AliasArn();
    public void set_AliasArn(string value);
    internal bool IsSetAliasArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Lambda.Model.CreateEventSourceMappingRequest : AmazonLambdaRequest {
    private Nullable`1<int> _batchSize;
    private Nullable`1<bool> _enabled;
    private string _eventSourceArn;
    private string _functionName;
    private EventSourcePosition _startingPosition;
    public int BatchSize { get; public set; }
    public bool Enabled { get; public set; }
    public string EventSourceArn { get; public set; }
    public string FunctionName { get; public set; }
    public EventSourcePosition StartingPosition { get; public set; }
    public int get_BatchSize();
    public void set_BatchSize(int value);
    internal bool IsSetBatchSize();
    public bool get_Enabled();
    public void set_Enabled(bool value);
    internal bool IsSetEnabled();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public EventSourcePosition get_StartingPosition();
    public void set_StartingPosition(EventSourcePosition value);
    internal bool IsSetStartingPosition();
}
public class Amazon.Lambda.Model.CreateEventSourceMappingResponse : CreateEventSourceMappingResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateEventSourceMappingResult class are now available on the CreateEventSourceMappingResponse class. You should use the properties on CreateEventSourceMappingResponse instead of accessing them through CreateEventSourceMappingResult.")]
public CreateEventSourceMappingResult CreateEventSourceMappingResult { get; }
    public CreateEventSourceMappingResult get_CreateEventSourceMappingResult();
}
public class Amazon.Lambda.Model.CreateEventSourceMappingResult : AmazonWebServiceResponse {
    private Nullable`1<int> _batchSize;
    private string _eventSourceArn;
    private string _functionArn;
    private Nullable`1<DateTime> _lastModified;
    private string _lastProcessingResult;
    private string _state;
    private string _stateTransitionReason;
    private string _uuid;
    public int BatchSize { get; public set; }
    public string EventSourceArn { get; public set; }
    public string FunctionArn { get; public set; }
    public DateTime LastModified { get; public set; }
    public string LastProcessingResult { get; public set; }
    public string State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public string UUID { get; public set; }
    public int get_BatchSize();
    public void set_BatchSize(int value);
    internal bool IsSetBatchSize();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public DateTime get_LastModified();
    public void set_LastModified(DateTime value);
    internal bool IsSetLastModified();
    public string get_LastProcessingResult();
    public void set_LastProcessingResult(string value);
    internal bool IsSetLastProcessingResult();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.CreateFunctionRequest : AmazonLambdaRequest {
    private FunctionCode _code;
    private string _description;
    private string _functionName;
    private string _handler;
    private Nullable`1<int> _memorySize;
    private Nullable`1<bool> _publish;
    private string _role;
    private Runtime _runtime;
    private Nullable`1<int> _timeout;
    private VpcConfig _vpcConfig;
    public FunctionCode Code { get; public set; }
    public string Description { get; public set; }
    public string FunctionName { get; public set; }
    public string Handler { get; public set; }
    public int MemorySize { get; public set; }
    public bool Publish { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public int Timeout { get; public set; }
    public VpcConfig VpcConfig { get; public set; }
    public EventHandler`1<StreamTransferProgressArgs> StreamTransferProgress { get; public set; }
    public FunctionCode get_Code();
    public void set_Code(FunctionCode value);
    internal bool IsSetCode();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public int get_MemorySize();
    public void set_MemorySize(int value);
    internal bool IsSetMemorySize();
    public bool get_Publish();
    public void set_Publish(bool value);
    internal bool IsSetPublish();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public int get_Timeout();
    public void set_Timeout(int value);
    internal bool IsSetTimeout();
    public VpcConfig get_VpcConfig();
    public void set_VpcConfig(VpcConfig value);
    internal bool IsSetVpcConfig();
    public EventHandler`1<StreamTransferProgressArgs> get_StreamTransferProgress();
    public void set_StreamTransferProgress(EventHandler`1<StreamTransferProgressArgs> value);
}
public class Amazon.Lambda.Model.CreateFunctionResponse : CreateFunctionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateFunctionResult class are now available on the CreateFunctionResponse class. You should use the properties on CreateFunctionResponse instead of accessing them through CreateFunctionResult.")]
public CreateFunctionResult CreateFunctionResult { get; }
    public CreateFunctionResult get_CreateFunctionResult();
}
public class Amazon.Lambda.Model.CreateFunctionResult : AmazonWebServiceResponse {
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private string _description;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private string _lastModified;
    private Nullable`1<int> _memorySize;
    private string _role;
    private Runtime _runtime;
    private Nullable`1<int> _timeout;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    public string CodeSha256 { get; public set; }
    public long CodeSize { get; public set; }
    public string Description { get; public set; }
    public string FunctionArn { get; public set; }
    public string FunctionName { get; public set; }
    public string Handler { get; public set; }
    public string LastModified { get; public set; }
    public int MemorySize { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public int Timeout { get; public set; }
    public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public long get_CodeSize();
    public void set_CodeSize(long value);
    internal bool IsSetCodeSize();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public int get_MemorySize();
    public void set_MemorySize(int value);
    internal bool IsSetMemorySize();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public int get_Timeout();
    public void set_Timeout(int value);
    internal bool IsSetTimeout();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.DeleteAliasRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _name;
    public string FunctionName { get; public set; }
    public string Name { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Lambda.Model.DeleteAliasResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.DeleteEventSourceMappingRequest : AmazonLambdaRequest {
    private string _uuid;
    public string UUID { get; public set; }
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.DeleteEventSourceMappingResponse : DeleteEventSourceMappingResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteEventSourceMappingResult class are now available on the DeleteEventSourceMappingResponse class. You should use the properties on DeleteEventSourceMappingResponse instead of accessing them through DeleteEventSourceMappingResult.")]
public DeleteEventSourceMappingResult DeleteEventSourceMappingResult { get; }
    public DeleteEventSourceMappingResult get_DeleteEventSourceMappingResult();
}
public class Amazon.Lambda.Model.DeleteEventSourceMappingResult : AmazonWebServiceResponse {
    private Nullable`1<int> _batchSize;
    private string _eventSourceArn;
    private string _functionArn;
    private Nullable`1<DateTime> _lastModified;
    private string _lastProcessingResult;
    private string _state;
    private string _stateTransitionReason;
    private string _uuid;
    public int BatchSize { get; public set; }
    public string EventSourceArn { get; public set; }
    public string FunctionArn { get; public set; }
    public DateTime LastModified { get; public set; }
    public string LastProcessingResult { get; public set; }
    public string State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public string UUID { get; public set; }
    public int get_BatchSize();
    public void set_BatchSize(int value);
    internal bool IsSetBatchSize();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public DateTime get_LastModified();
    public void set_LastModified(DateTime value);
    internal bool IsSetLastModified();
    public string get_LastProcessingResult();
    public void set_LastProcessingResult(string value);
    internal bool IsSetLastProcessingResult();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.DeleteFunctionRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    public string FunctionName { get; public set; }
    public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.DeleteFunctionResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.EC2AccessDeniedException : AmazonLambdaException {
    public EC2AccessDeniedException(string message);
    public EC2AccessDeniedException(string message, Exception innerException);
    public EC2AccessDeniedException(Exception innerException);
    public EC2AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public EC2AccessDeniedException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.EC2ThrottledException : AmazonLambdaException {
    public EC2ThrottledException(string message);
    public EC2ThrottledException(string message, Exception innerException);
    public EC2ThrottledException(Exception innerException);
    public EC2ThrottledException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public EC2ThrottledException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.EC2UnexpectedException : AmazonLambdaException {
    public EC2UnexpectedException(string message);
    public EC2UnexpectedException(string message, Exception innerException);
    public EC2UnexpectedException(Exception innerException);
    public EC2UnexpectedException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public EC2UnexpectedException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.ENILimitReachedException : AmazonLambdaException {
    public ENILimitReachedException(string message);
    public ENILimitReachedException(string message, Exception innerException);
    public ENILimitReachedException(Exception innerException);
    public ENILimitReachedException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ENILimitReachedException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.EventSourceMappingConfiguration : object {
    private Nullable`1<int> _batchSize;
    private string _eventSourceArn;
    private string _functionArn;
    private Nullable`1<DateTime> _lastModified;
    private string _lastProcessingResult;
    private string _state;
    private string _stateTransitionReason;
    private string _uuid;
    public int BatchSize { get; public set; }
    public string EventSourceArn { get; public set; }
    public string FunctionArn { get; public set; }
    public DateTime LastModified { get; public set; }
    public string LastProcessingResult { get; public set; }
    public string State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public string UUID { get; public set; }
    public int get_BatchSize();
    public void set_BatchSize(int value);
    internal bool IsSetBatchSize();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public DateTime get_LastModified();
    public void set_LastModified(DateTime value);
    internal bool IsSetLastModified();
    public string get_LastProcessingResult();
    public void set_LastProcessingResult(string value);
    internal bool IsSetLastProcessingResult();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.FunctionCode : object {
    private string _s3Bucket;
    private string _s3Key;
    private string _s3ObjectVersion;
    private MemoryStream _zipFile;
    public string S3Bucket { get; public set; }
    public string S3Key { get; public set; }
    public string S3ObjectVersion { get; public set; }
    public MemoryStream ZipFile { get; public set; }
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
    public string get_S3ObjectVersion();
    public void set_S3ObjectVersion(string value);
    internal bool IsSetS3ObjectVersion();
    public MemoryStream get_ZipFile();
    public void set_ZipFile(MemoryStream value);
    internal bool IsSetZipFile();
}
public class Amazon.Lambda.Model.FunctionCodeLocation : object {
    private string _location;
    private string _repositoryType;
    public string Location { get; public set; }
    public string RepositoryType { get; public set; }
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public string get_RepositoryType();
    public void set_RepositoryType(string value);
    internal bool IsSetRepositoryType();
}
public class Amazon.Lambda.Model.FunctionConfiguration : object {
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private string _description;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private string _lastModified;
    private Nullable`1<int> _memorySize;
    private string _role;
    private Runtime _runtime;
    private Nullable`1<int> _timeout;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    public string CodeSha256 { get; public set; }
    public long CodeSize { get; public set; }
    public string Description { get; public set; }
    public string FunctionArn { get; public set; }
    public string FunctionName { get; public set; }
    public string Handler { get; public set; }
    public string LastModified { get; public set; }
    public int MemorySize { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public int Timeout { get; public set; }
    public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public long get_CodeSize();
    public void set_CodeSize(long value);
    internal bool IsSetCodeSize();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public int get_MemorySize();
    public void set_MemorySize(int value);
    internal bool IsSetMemorySize();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public int get_Timeout();
    public void set_Timeout(int value);
    internal bool IsSetTimeout();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.GetAliasRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _name;
    public string FunctionName { get; public set; }
    public string Name { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Lambda.Model.GetAliasResponse : GetAliasResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetAliasResult class are now available on the GetAliasResponse class. You should use the properties on GetAliasResponse instead of accessing them through GetAliasResult.")]
public GetAliasResult GetAliasResult { get; }
    public GetAliasResult get_GetAliasResult();
}
public class Amazon.Lambda.Model.GetAliasResult : AmazonWebServiceResponse {
    private string _aliasArn;
    private string _description;
    private string _functionVersion;
    private string _name;
    public string AliasArn { get; public set; }
    public string Description { get; public set; }
    public string FunctionVersion { get; public set; }
    public string Name { get; public set; }
    public string get_AliasArn();
    public void set_AliasArn(string value);
    internal bool IsSetAliasArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Lambda.Model.GetEventSourceMappingRequest : AmazonLambdaRequest {
    private string _uuid;
    public string UUID { get; public set; }
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.GetEventSourceMappingResponse : GetEventSourceMappingResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetEventSourceMappingResult class are now available on the GetEventSourceMappingResponse class. You should use the properties on GetEventSourceMappingResponse instead of accessing them through GetEventSourceMappingResult.")]
public GetEventSourceMappingResult GetEventSourceMappingResult { get; }
    public GetEventSourceMappingResult get_GetEventSourceMappingResult();
}
public class Amazon.Lambda.Model.GetEventSourceMappingResult : AmazonWebServiceResponse {
    private Nullable`1<int> _batchSize;
    private string _eventSourceArn;
    private string _functionArn;
    private Nullable`1<DateTime> _lastModified;
    private string _lastProcessingResult;
    private string _state;
    private string _stateTransitionReason;
    private string _uuid;
    public int BatchSize { get; public set; }
    public string EventSourceArn { get; public set; }
    public string FunctionArn { get; public set; }
    public DateTime LastModified { get; public set; }
    public string LastProcessingResult { get; public set; }
    public string State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public string UUID { get; public set; }
    public int get_BatchSize();
    public void set_BatchSize(int value);
    internal bool IsSetBatchSize();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public DateTime get_LastModified();
    public void set_LastModified(DateTime value);
    internal bool IsSetLastModified();
    public string get_LastProcessingResult();
    public void set_LastProcessingResult(string value);
    internal bool IsSetLastProcessingResult();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.GetFunctionConfigurationRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    public string FunctionName { get; public set; }
    public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.GetFunctionConfigurationResponse : GetFunctionConfigurationResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetFunctionConfigurationResult class are now available on the GetFunctionConfigurationResponse class. You should use the properties on GetFunctionConfigurationResponse instead of accessing them through GetFunctionConfigurationResult.")]
public GetFunctionConfigurationResult GetFunctionConfigurationResult { get; }
    public GetFunctionConfigurationResult get_GetFunctionConfigurationResult();
}
public class Amazon.Lambda.Model.GetFunctionConfigurationResult : AmazonWebServiceResponse {
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private string _description;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private string _lastModified;
    private Nullable`1<int> _memorySize;
    private string _role;
    private Runtime _runtime;
    private Nullable`1<int> _timeout;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    public string CodeSha256 { get; public set; }
    public long CodeSize { get; public set; }
    public string Description { get; public set; }
    public string FunctionArn { get; public set; }
    public string FunctionName { get; public set; }
    public string Handler { get; public set; }
    public string LastModified { get; public set; }
    public int MemorySize { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public int Timeout { get; public set; }
    public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public long get_CodeSize();
    public void set_CodeSize(long value);
    internal bool IsSetCodeSize();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public int get_MemorySize();
    public void set_MemorySize(int value);
    internal bool IsSetMemorySize();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public int get_Timeout();
    public void set_Timeout(int value);
    internal bool IsSetTimeout();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.GetFunctionRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    public string FunctionName { get; public set; }
    public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.GetFunctionResponse : GetFunctionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetFunctionResult class are now available on the GetFunctionResponse class. You should use the properties on GetFunctionResponse instead of accessing them through GetFunctionResult.")]
public GetFunctionResult GetFunctionResult { get; }
    public GetFunctionResult get_GetFunctionResult();
}
public class Amazon.Lambda.Model.GetFunctionResult : AmazonWebServiceResponse {
    private FunctionCodeLocation _code;
    private FunctionConfiguration _configuration;
    public FunctionCodeLocation Code { get; public set; }
    public FunctionConfiguration Configuration { get; public set; }
    public FunctionCodeLocation get_Code();
    public void set_Code(FunctionCodeLocation value);
    internal bool IsSetCode();
    public FunctionConfiguration get_Configuration();
    public void set_Configuration(FunctionConfiguration value);
    internal bool IsSetConfiguration();
}
public class Amazon.Lambda.Model.GetPolicyRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    public string FunctionName { get; public set; }
    public string Qualifier { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
}
public class Amazon.Lambda.Model.GetPolicyResponse : GetPolicyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetPolicyResult class are now available on the GetPolicyResponse class. You should use the properties on GetPolicyResponse instead of accessing them through GetPolicyResult.")]
public GetPolicyResult GetPolicyResult { get; }
    public GetPolicyResult get_GetPolicyResult();
}
public class Amazon.Lambda.Model.GetPolicyResult : AmazonWebServiceResponse {
    private string _policy;
    public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AddPermissionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddPermissionRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddPermissionResponseUnmarshaller _instance;
    public static AddPermissionResponseUnmarshaller Instance { get; }
    private static AddPermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddPermissionResponseUnmarshaller GetInstance();
    public static AddPermissionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.AliasConfigurationUnmarshaller : object {
    private static AliasConfigurationUnmarshaller _instance;
    public static AliasConfigurationUnmarshaller Instance { get; }
    private static AliasConfigurationUnmarshaller();
    private sealed virtual override AliasConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.AliasConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AliasConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static AliasConfigurationUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAliasRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateAliasResponseUnmarshaller _instance;
    public static CreateAliasResponseUnmarshaller Instance { get; }
    private static CreateAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAliasResponseUnmarshaller GetInstance();
    public static CreateAliasResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateEventSourceMappingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateEventSourceMappingRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateEventSourceMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateEventSourceMappingResponseUnmarshaller _instance;
    public static CreateEventSourceMappingResponseUnmarshaller Instance { get; }
    private static CreateEventSourceMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateEventSourceMappingResponseUnmarshaller GetInstance();
    public static CreateEventSourceMappingResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateFunctionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFunctionRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.CreateFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateFunctionResponseUnmarshaller _instance;
    public static CreateFunctionResponseUnmarshaller Instance { get; }
    private static CreateFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFunctionResponseUnmarshaller GetInstance();
    public static CreateFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteAliasRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAliasRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAliasResponseUnmarshaller _instance;
    public static DeleteAliasResponseUnmarshaller Instance { get; }
    private static DeleteAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAliasResponseUnmarshaller GetInstance();
    public static DeleteAliasResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteEventSourceMappingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteEventSourceMappingRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteEventSourceMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteEventSourceMappingResponseUnmarshaller _instance;
    public static DeleteEventSourceMappingResponseUnmarshaller Instance { get; }
    private static DeleteEventSourceMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteEventSourceMappingResponseUnmarshaller GetInstance();
    public static DeleteEventSourceMappingResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFunctionRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.DeleteFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFunctionResponseUnmarshaller _instance;
    public static DeleteFunctionResponseUnmarshaller Instance { get; }
    private static DeleteFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFunctionResponseUnmarshaller GetInstance();
    public static DeleteFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.EventSourceMappingConfigurationUnmarshaller : object {
    private static EventSourceMappingConfigurationUnmarshaller _instance;
    public static EventSourceMappingConfigurationUnmarshaller Instance { get; }
    private static EventSourceMappingConfigurationUnmarshaller();
    private sealed virtual override EventSourceMappingConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.EventSourceMappingConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventSourceMappingConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EventSourceMappingConfigurationUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FunctionCodeLocationUnmarshaller : object {
    private static FunctionCodeLocationUnmarshaller _instance;
    public static FunctionCodeLocationUnmarshaller Instance { get; }
    private static FunctionCodeLocationUnmarshaller();
    private sealed virtual override FunctionCodeLocation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.FunctionCodeLocation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionCodeLocation Unmarshall(JsonUnmarshallerContext context);
    public static FunctionCodeLocationUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FunctionCodeMarshaller : object {
    public static FunctionCodeMarshaller Instance;
    private static FunctionCodeMarshaller();
    public sealed virtual void Marshall(FunctionCode requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.FunctionConfigurationUnmarshaller : object {
    private static FunctionConfigurationUnmarshaller _instance;
    public static FunctionConfigurationUnmarshaller Instance { get; }
    private static FunctionConfigurationUnmarshaller();
    private sealed virtual override FunctionConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.FunctionConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static FunctionConfigurationUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetAliasRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAliasRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetAliasResponseUnmarshaller _instance;
    public static GetAliasResponseUnmarshaller Instance { get; }
    private static GetAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAliasResponseUnmarshaller GetInstance();
    public static GetAliasResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetEventSourceMappingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetEventSourceMappingRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetEventSourceMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetEventSourceMappingResponseUnmarshaller _instance;
    public static GetEventSourceMappingResponseUnmarshaller Instance { get; }
    private static GetEventSourceMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetEventSourceMappingResponseUnmarshaller GetInstance();
    public static GetEventSourceMappingResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFunctionConfigurationRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFunctionConfigurationResponseUnmarshaller _instance;
    public static GetFunctionConfigurationResponseUnmarshaller Instance { get; }
    private static GetFunctionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFunctionConfigurationResponseUnmarshaller GetInstance();
    public static GetFunctionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFunctionRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFunctionResponseUnmarshaller _instance;
    public static GetFunctionResponseUnmarshaller Instance { get; }
    private static GetFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFunctionResponseUnmarshaller GetInstance();
    public static GetFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPolicyRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.GetPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetPolicyResponseUnmarshaller _instance;
    public static GetPolicyResponseUnmarshaller Instance { get; }
    private static GetPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPolicyResponseUnmarshaller GetInstance();
    public static GetPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeAsyncRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InvokeAsyncRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeAsyncResponseUnmarshaller : JsonResponseUnmarshaller {
    private static InvokeAsyncResponseUnmarshaller _instance;
    public static InvokeAsyncResponseUnmarshaller Instance { get; }
    private static InvokeAsyncResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static InvokeAsyncResponseUnmarshaller GetInstance();
    public static InvokeAsyncResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InvokeRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.InvokeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static InvokeResponseUnmarshaller _instance;
    public static InvokeResponseUnmarshaller Instance { get; }
    private static InvokeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static InvokeResponseUnmarshaller GetInstance();
    public static InvokeResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListAliasesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAliasesRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListAliasesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAliasesResponseUnmarshaller _instance;
    public static ListAliasesResponseUnmarshaller Instance { get; }
    private static ListAliasesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAliasesResponseUnmarshaller GetInstance();
    public static ListAliasesResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListEventSourceMappingsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListEventSourceMappingsRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListEventSourceMappingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListEventSourceMappingsResponseUnmarshaller _instance;
    public static ListEventSourceMappingsResponseUnmarshaller Instance { get; }
    private static ListEventSourceMappingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListEventSourceMappingsResponseUnmarshaller GetInstance();
    public static ListEventSourceMappingsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListFunctionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFunctionsRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListFunctionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFunctionsResponseUnmarshaller _instance;
    public static ListFunctionsResponseUnmarshaller Instance { get; }
    private static ListFunctionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFunctionsResponseUnmarshaller GetInstance();
    public static ListFunctionsResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListVersionsByFunctionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVersionsByFunctionRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.ListVersionsByFunctionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListVersionsByFunctionResponseUnmarshaller _instance;
    public static ListVersionsByFunctionResponseUnmarshaller Instance { get; }
    private static ListVersionsByFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVersionsByFunctionResponseUnmarshaller GetInstance();
    public static ListVersionsByFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PublishVersionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PublishVersionRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.PublishVersionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PublishVersionResponseUnmarshaller _instance;
    public static PublishVersionResponseUnmarshaller Instance { get; }
    private static PublishVersionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PublishVersionResponseUnmarshaller GetInstance();
    public static PublishVersionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemovePermissionRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemovePermissionResponseUnmarshaller _instance;
    public static RemovePermissionResponseUnmarshaller Instance { get; }
    private static RemovePermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemovePermissionResponseUnmarshaller GetInstance();
    public static RemovePermissionResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateAliasRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAliasRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateAliasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateAliasResponseUnmarshaller _instance;
    public static UpdateAliasResponseUnmarshaller Instance { get; }
    private static UpdateAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAliasResponseUnmarshaller GetInstance();
    public static UpdateAliasResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateEventSourceMappingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateEventSourceMappingRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateEventSourceMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateEventSourceMappingResponseUnmarshaller _instance;
    public static UpdateEventSourceMappingResponseUnmarshaller Instance { get; }
    private static UpdateEventSourceMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateEventSourceMappingResponseUnmarshaller GetInstance();
    public static UpdateEventSourceMappingResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionCodeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFunctionCodeRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionCodeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFunctionCodeResponseUnmarshaller _instance;
    public static UpdateFunctionCodeResponseUnmarshaller Instance { get; }
    private static UpdateFunctionCodeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFunctionCodeResponseUnmarshaller GetInstance();
    public static UpdateFunctionCodeResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFunctionConfigurationRequest publicRequest);
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.UpdateFunctionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFunctionConfigurationResponseUnmarshaller _instance;
    public static UpdateFunctionConfigurationResponseUnmarshaller Instance { get; }
    private static UpdateFunctionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFunctionConfigurationResponseUnmarshaller GetInstance();
    public static UpdateFunctionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.VpcConfigDetailUnmarshaller : object {
    private static VpcConfigDetailUnmarshaller _instance;
    public static VpcConfigDetailUnmarshaller Instance { get; }
    private static VpcConfigDetailUnmarshaller();
    private sealed virtual override VpcConfigDetail Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Lambda.Model.VpcConfigDetail,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConfigDetail Unmarshall(JsonUnmarshallerContext context);
    public static VpcConfigDetailUnmarshaller get_Instance();
}
public class Amazon.Lambda.Model.Internal.MarshallTransformations.VpcConfigMarshaller : object {
    public static VpcConfigMarshaller Instance;
    private static VpcConfigMarshaller();
    public sealed virtual void Marshall(VpcConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Lambda.Model.InvalidParameterValueException : AmazonLambdaException {
    public InvalidParameterValueException(string message);
    public InvalidParameterValueException(string message, Exception innerException);
    public InvalidParameterValueException(Exception innerException);
    public InvalidParameterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidParameterValueException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.InvalidRequestContentException : AmazonLambdaException {
    public InvalidRequestContentException(string message);
    public InvalidRequestContentException(string message, Exception innerException);
    public InvalidRequestContentException(Exception innerException);
    public InvalidRequestContentException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidRequestContentException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.InvalidSecurityGroupIDException : AmazonLambdaException {
    public InvalidSecurityGroupIDException(string message);
    public InvalidSecurityGroupIDException(string message, Exception innerException);
    public InvalidSecurityGroupIDException(Exception innerException);
    public InvalidSecurityGroupIDException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidSecurityGroupIDException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.InvalidSubnetIDException : AmazonLambdaException {
    public InvalidSubnetIDException(string message);
    public InvalidSubnetIDException(string message, Exception innerException);
    public InvalidSubnetIDException(Exception innerException);
    public InvalidSubnetIDException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidSubnetIDException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.InvokeAsyncRequest : AmazonLambdaRequest {
    private string _functionName;
    private Stream _invokeArgsStream;
    public string FunctionName { get; public set; }
    public Stream InvokeArgsStream { get; public set; }
    public string InvokeArgs { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public Stream get_InvokeArgsStream();
    public void set_InvokeArgsStream(Stream value);
    internal bool IsSetInvokeArgsStream();
    public string get_InvokeArgs();
    public void set_InvokeArgs(string value);
}
public class Amazon.Lambda.Model.InvokeAsyncResponse : InvokeAsyncResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the InvokeAsyncResult class are now available on the InvokeAsyncResponse class. You should use the properties on InvokeAsyncResponse instead of accessing them through InvokeAsyncResult.")]
public InvokeAsyncResult InvokeAsyncResult { get; }
    public InvokeAsyncResult get_InvokeAsyncResult();
}
public class Amazon.Lambda.Model.InvokeAsyncResult : AmazonWebServiceResponse {
    private Nullable`1<int> _status;
    public int Status { get; public set; }
    public int get_Status();
    public void set_Status(int value);
    internal bool IsSetStatus();
}
public class Amazon.Lambda.Model.InvokeRequest : AmazonLambdaRequest {
    private string _clientContextBase64;
    private string _functionName;
    private InvocationType _invocationType;
    private LogType _logType;
    private MemoryStream _payloadStream;
    private string _qualifier;
    public string ClientContextBase64 { get; public set; }
    public string FunctionName { get; public set; }
    public InvocationType InvocationType { get; public set; }
    public LogType LogType { get; public set; }
    public MemoryStream PayloadStream { get; public set; }
    public string Qualifier { get; public set; }
    public string Payload { get; public set; }
    public string ClientContext { get; public set; }
    public string get_ClientContextBase64();
    public void set_ClientContextBase64(string value);
    internal bool IsSetClientContextBase64();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public InvocationType get_InvocationType();
    public void set_InvocationType(InvocationType value);
    internal bool IsSetInvocationType();
    public LogType get_LogType();
    public void set_LogType(LogType value);
    internal bool IsSetLogType();
    public MemoryStream get_PayloadStream();
    public void set_PayloadStream(MemoryStream value);
    internal bool IsSetPayloadStream();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
    public string get_Payload();
    public void set_Payload(string value);
    public string get_ClientContext();
    public void set_ClientContext(string value);
}
public class Amazon.Lambda.Model.InvokeResponse : InvokeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the InvokeResult class are now available on the InvokeResponse class. You should use the properties on InvokeResponse instead of accessing them through InvokeResult.")]
public InvokeResult InvokeResult { get; }
    public InvokeResult get_InvokeResult();
}
public class Amazon.Lambda.Model.InvokeResult : AmazonWebServiceResponse {
    private string _functionError;
    private string _logResult;
    private MemoryStream _payload;
    private Nullable`1<int> _statusCode;
    public string FunctionError { get; public set; }
    public string LogResult { get; public set; }
    public MemoryStream Payload { get; public set; }
    public int StatusCode { get; public set; }
    public string get_FunctionError();
    public void set_FunctionError(string value);
    internal bool IsSetFunctionError();
    public string get_LogResult();
    public void set_LogResult(string value);
    internal bool IsSetLogResult();
    public MemoryStream get_Payload();
    public void set_Payload(MemoryStream value);
    internal bool IsSetPayload();
    public int get_StatusCode();
    public void set_StatusCode(int value);
    internal bool IsSetStatusCode();
}
public class Amazon.Lambda.Model.ListAliasesRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _functionVersion;
    private string _marker;
    private Nullable`1<int> _maxItems;
    public string FunctionName { get; public set; }
    public string FunctionVersion { get; public set; }
    public string Marker { get; public set; }
    public int MaxItems { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public int get_MaxItems();
    public void set_MaxItems(int value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListAliasesResponse : ListAliasesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListAliasesResult class are now available on the ListAliasesResponse class. You should use the properties on ListAliasesResponse instead of accessing them through ListAliasesResult.")]
public ListAliasesResult ListAliasesResult { get; }
    public ListAliasesResult get_ListAliasesResult();
}
public class Amazon.Lambda.Model.ListAliasesResult : AmazonWebServiceResponse {
    private List`1<AliasConfiguration> _aliases;
    private string _nextMarker;
    public List`1<AliasConfiguration> Aliases { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<AliasConfiguration> get_Aliases();
    public void set_Aliases(List`1<AliasConfiguration> value);
    internal bool IsSetAliases();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
public class Amazon.Lambda.Model.ListEventSourceMappingsRequest : AmazonLambdaRequest {
    private string _eventSourceArn;
    private string _functionName;
    private string _marker;
    private Nullable`1<int> _maxItems;
    public string EventSourceArn { get; public set; }
    public string FunctionName { get; public set; }
    public string Marker { get; public set; }
    public int MaxItems { get; public set; }
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public int get_MaxItems();
    public void set_MaxItems(int value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListEventSourceMappingsResponse : ListEventSourceMappingsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListEventSourceMappingsResult class are now available on the ListEventSourceMappingsResponse class. You should use the properties on ListEventSourceMappingsResponse instead of accessing them through ListEventSourceMappingsResult.")]
public ListEventSourceMappingsResult ListEventSourceMappingsResult { get; }
    public ListEventSourceMappingsResult get_ListEventSourceMappingsResult();
}
public class Amazon.Lambda.Model.ListEventSourceMappingsResult : AmazonWebServiceResponse {
    private List`1<EventSourceMappingConfiguration> _eventSourceMappings;
    private string _nextMarker;
    public List`1<EventSourceMappingConfiguration> EventSourceMappings { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<EventSourceMappingConfiguration> get_EventSourceMappings();
    public void set_EventSourceMappings(List`1<EventSourceMappingConfiguration> value);
    internal bool IsSetEventSourceMappings();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
public class Amazon.Lambda.Model.ListFunctionsRequest : AmazonLambdaRequest {
    private string _marker;
    private Nullable`1<int> _maxItems;
    public string Marker { get; public set; }
    public int MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public int get_MaxItems();
    public void set_MaxItems(int value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListFunctionsResponse : ListFunctionsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListFunctionsResult class are now available on the ListFunctionsResponse class. You should use the properties on ListFunctionsResponse instead of accessing them through ListFunctionsResult.")]
public ListFunctionsResult ListFunctionsResult { get; }
    public ListFunctionsResult get_ListFunctionsResult();
}
public class Amazon.Lambda.Model.ListFunctionsResult : AmazonWebServiceResponse {
    private List`1<FunctionConfiguration> _functions;
    private string _nextMarker;
    public List`1<FunctionConfiguration> Functions { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<FunctionConfiguration> get_Functions();
    public void set_Functions(List`1<FunctionConfiguration> value);
    internal bool IsSetFunctions();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
public class Amazon.Lambda.Model.ListVersionsByFunctionRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _marker;
    private Nullable`1<int> _maxItems;
    public string FunctionName { get; public set; }
    public string Marker { get; public set; }
    public int MaxItems { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public int get_MaxItems();
    public void set_MaxItems(int value);
    internal bool IsSetMaxItems();
}
public class Amazon.Lambda.Model.ListVersionsByFunctionResponse : ListVersionsByFunctionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListVersionsByFunctionResult class are now available on the ListVersionsByFunctionResponse class. You should use the properties on ListVersionsByFunctionResponse instead of accessing them through ListVersionsByFunctionResult.")]
public ListVersionsByFunctionResult ListVersionsByFunctionResult { get; }
    public ListVersionsByFunctionResult get_ListVersionsByFunctionResult();
}
public class Amazon.Lambda.Model.ListVersionsByFunctionResult : AmazonWebServiceResponse {
    private string _nextMarker;
    private List`1<FunctionConfiguration> _versions;
    public string NextMarker { get; public set; }
    public List`1<FunctionConfiguration> Versions { get; public set; }
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<FunctionConfiguration> get_Versions();
    public void set_Versions(List`1<FunctionConfiguration> value);
    internal bool IsSetVersions();
}
public class Amazon.Lambda.Model.PolicyLengthExceededException : AmazonLambdaException {
    public PolicyLengthExceededException(string message);
    public PolicyLengthExceededException(string message, Exception innerException);
    public PolicyLengthExceededException(Exception innerException);
    public PolicyLengthExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public PolicyLengthExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.PublishVersionRequest : AmazonLambdaRequest {
    private string _codeSha256;
    private string _description;
    private string _functionName;
    public string CodeSha256 { get; public set; }
    public string Description { get; public set; }
    public string FunctionName { get; public set; }
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
}
public class Amazon.Lambda.Model.PublishVersionResponse : PublishVersionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the PublishVersionResult class are now available on the PublishVersionResponse class. You should use the properties on PublishVersionResponse instead of accessing them through PublishVersionResult.")]
public PublishVersionResult PublishVersionResult { get; }
    public PublishVersionResult get_PublishVersionResult();
}
public class Amazon.Lambda.Model.PublishVersionResult : AmazonWebServiceResponse {
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private string _description;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private string _lastModified;
    private Nullable`1<int> _memorySize;
    private string _role;
    private Runtime _runtime;
    private Nullable`1<int> _timeout;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    public string CodeSha256 { get; public set; }
    public long CodeSize { get; public set; }
    public string Description { get; public set; }
    public string FunctionArn { get; public set; }
    public string FunctionName { get; public set; }
    public string Handler { get; public set; }
    public string LastModified { get; public set; }
    public int MemorySize { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public int Timeout { get; public set; }
    public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public long get_CodeSize();
    public void set_CodeSize(long value);
    internal bool IsSetCodeSize();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public int get_MemorySize();
    public void set_MemorySize(int value);
    internal bool IsSetMemorySize();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public int get_Timeout();
    public void set_Timeout(int value);
    internal bool IsSetTimeout();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.RemovePermissionRequest : AmazonLambdaRequest {
    private string _functionName;
    private string _qualifier;
    private string _statementId;
    public string FunctionName { get; public set; }
    public string Qualifier { get; public set; }
    public string StatementId { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Qualifier();
    public void set_Qualifier(string value);
    internal bool IsSetQualifier();
    public string get_StatementId();
    public void set_StatementId(string value);
    internal bool IsSetStatementId();
}
public class Amazon.Lambda.Model.RemovePermissionResponse : AmazonWebServiceResponse {
}
public class Amazon.Lambda.Model.RequestTooLargeException : AmazonLambdaException {
    public RequestTooLargeException(string message);
    public RequestTooLargeException(string message, Exception innerException);
    public RequestTooLargeException(Exception innerException);
    public RequestTooLargeException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public RequestTooLargeException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.ResourceConflictException : AmazonLambdaException {
    public ResourceConflictException(string message);
    public ResourceConflictException(string message, Exception innerException);
    public ResourceConflictException(Exception innerException);
    public ResourceConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceConflictException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.ResourceNotFoundException : AmazonLambdaException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.ServiceException : AmazonLambdaException {
    public ServiceException(string message);
    public ServiceException(string message, Exception innerException);
    public ServiceException(Exception innerException);
    public ServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ServiceException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.SubnetIPAddressLimitReachedException : AmazonLambdaException {
    public SubnetIPAddressLimitReachedException(string message);
    public SubnetIPAddressLimitReachedException(string message, Exception innerException);
    public SubnetIPAddressLimitReachedException(Exception innerException);
    public SubnetIPAddressLimitReachedException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public SubnetIPAddressLimitReachedException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.TooManyRequestsException : AmazonLambdaException {
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.UnsupportedMediaTypeException : AmazonLambdaException {
    public UnsupportedMediaTypeException(string message);
    public UnsupportedMediaTypeException(string message, Exception innerException);
    public UnsupportedMediaTypeException(Exception innerException);
    public UnsupportedMediaTypeException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public UnsupportedMediaTypeException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.Lambda.Model.UpdateAliasRequest : AmazonLambdaRequest {
    private string _description;
    private string _functionName;
    private string _functionVersion;
    private string _name;
    public string Description { get; public set; }
    public string FunctionName { get; public set; }
    public string FunctionVersion { get; public set; }
    public string Name { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Lambda.Model.UpdateAliasResponse : UpdateAliasResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UpdateAliasResult class are now available on the UpdateAliasResponse class. You should use the properties on UpdateAliasResponse instead of accessing them through UpdateAliasResult.")]
public UpdateAliasResult UpdateAliasResult { get; }
    public UpdateAliasResult get_UpdateAliasResult();
}
public class Amazon.Lambda.Model.UpdateAliasResult : AmazonWebServiceResponse {
    private string _aliasArn;
    private string _description;
    private string _functionVersion;
    private string _name;
    public string AliasArn { get; public set; }
    public string Description { get; public set; }
    public string FunctionVersion { get; public set; }
    public string Name { get; public set; }
    public string get_AliasArn();
    public void set_AliasArn(string value);
    internal bool IsSetAliasArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionVersion();
    public void set_FunctionVersion(string value);
    internal bool IsSetFunctionVersion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Lambda.Model.UpdateEventSourceMappingRequest : AmazonLambdaRequest {
    private Nullable`1<int> _batchSize;
    private Nullable`1<bool> _enabled;
    private string _functionName;
    private string _uuid;
    public int BatchSize { get; public set; }
    public bool Enabled { get; public set; }
    public string FunctionName { get; public set; }
    public string UUID { get; public set; }
    public int get_BatchSize();
    public void set_BatchSize(int value);
    internal bool IsSetBatchSize();
    public bool get_Enabled();
    public void set_Enabled(bool value);
    internal bool IsSetEnabled();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.UpdateEventSourceMappingResponse : UpdateEventSourceMappingResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UpdateEventSourceMappingResult class are now available on the UpdateEventSourceMappingResponse class. You should use the properties on UpdateEventSourceMappingResponse instead of accessing them through UpdateEventSourceMappingResult.")]
public UpdateEventSourceMappingResult UpdateEventSourceMappingResult { get; }
    public UpdateEventSourceMappingResult get_UpdateEventSourceMappingResult();
}
public class Amazon.Lambda.Model.UpdateEventSourceMappingResult : AmazonWebServiceResponse {
    private Nullable`1<int> _batchSize;
    private string _eventSourceArn;
    private string _functionArn;
    private Nullable`1<DateTime> _lastModified;
    private string _lastProcessingResult;
    private string _state;
    private string _stateTransitionReason;
    private string _uuid;
    public int BatchSize { get; public set; }
    public string EventSourceArn { get; public set; }
    public string FunctionArn { get; public set; }
    public DateTime LastModified { get; public set; }
    public string LastProcessingResult { get; public set; }
    public string State { get; public set; }
    public string StateTransitionReason { get; public set; }
    public string UUID { get; public set; }
    public int get_BatchSize();
    public void set_BatchSize(int value);
    internal bool IsSetBatchSize();
    public string get_EventSourceArn();
    public void set_EventSourceArn(string value);
    internal bool IsSetEventSourceArn();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public DateTime get_LastModified();
    public void set_LastModified(DateTime value);
    internal bool IsSetLastModified();
    public string get_LastProcessingResult();
    public void set_LastProcessingResult(string value);
    internal bool IsSetLastProcessingResult();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public string get_StateTransitionReason();
    public void set_StateTransitionReason(string value);
    internal bool IsSetStateTransitionReason();
    public string get_UUID();
    public void set_UUID(string value);
    internal bool IsSetUUID();
}
public class Amazon.Lambda.Model.UpdateFunctionCodeRequest : AmazonLambdaRequest {
    private string _functionName;
    private Nullable`1<bool> _publish;
    private string _s3Bucket;
    private string _s3Key;
    private string _s3ObjectVersion;
    private MemoryStream _zipFile;
    public string FunctionName { get; public set; }
    public bool Publish { get; public set; }
    public string S3Bucket { get; public set; }
    public string S3Key { get; public set; }
    public string S3ObjectVersion { get; public set; }
    public MemoryStream ZipFile { get; public set; }
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public bool get_Publish();
    public void set_Publish(bool value);
    internal bool IsSetPublish();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3Key();
    public void set_S3Key(string value);
    internal bool IsSetS3Key();
    public string get_S3ObjectVersion();
    public void set_S3ObjectVersion(string value);
    internal bool IsSetS3ObjectVersion();
    public MemoryStream get_ZipFile();
    public void set_ZipFile(MemoryStream value);
    internal bool IsSetZipFile();
}
public class Amazon.Lambda.Model.UpdateFunctionCodeResponse : UpdateFunctionCodeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UpdateFunctionCodeResult class are now available on the UpdateFunctionCodeResponse class. You should use the properties on UpdateFunctionCodeResponse instead of accessing them through UpdateFunctionCodeResult.")]
public UpdateFunctionCodeResult UpdateFunctionCodeResult { get; }
    public UpdateFunctionCodeResult get_UpdateFunctionCodeResult();
}
public class Amazon.Lambda.Model.UpdateFunctionCodeResult : AmazonWebServiceResponse {
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private string _description;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private string _lastModified;
    private Nullable`1<int> _memorySize;
    private string _role;
    private Runtime _runtime;
    private Nullable`1<int> _timeout;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    public string CodeSha256 { get; public set; }
    public long CodeSize { get; public set; }
    public string Description { get; public set; }
    public string FunctionArn { get; public set; }
    public string FunctionName { get; public set; }
    public string Handler { get; public set; }
    public string LastModified { get; public set; }
    public int MemorySize { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public int Timeout { get; public set; }
    public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public long get_CodeSize();
    public void set_CodeSize(long value);
    internal bool IsSetCodeSize();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public int get_MemorySize();
    public void set_MemorySize(int value);
    internal bool IsSetMemorySize();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public int get_Timeout();
    public void set_Timeout(int value);
    internal bool IsSetTimeout();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.UpdateFunctionConfigurationRequest : AmazonLambdaRequest {
    private string _description;
    private string _functionName;
    private string _handler;
    private Nullable`1<int> _memorySize;
    private string _role;
    private Nullable`1<int> _timeout;
    private VpcConfig _vpcConfig;
    public string Description { get; public set; }
    public string FunctionName { get; public set; }
    public string Handler { get; public set; }
    public int MemorySize { get; public set; }
    public string Role { get; public set; }
    public int Timeout { get; public set; }
    public VpcConfig VpcConfig { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public int get_MemorySize();
    public void set_MemorySize(int value);
    internal bool IsSetMemorySize();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public int get_Timeout();
    public void set_Timeout(int value);
    internal bool IsSetTimeout();
    public VpcConfig get_VpcConfig();
    public void set_VpcConfig(VpcConfig value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.UpdateFunctionConfigurationResponse : UpdateFunctionConfigurationResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UpdateFunctionConfigurationResult class are now available on the UpdateFunctionConfigurationResponse class. You should use the properties on UpdateFunctionConfigurationResponse instead of accessing them through UpdateFunctionConfigurationResult.")]
public UpdateFunctionConfigurationResult UpdateFunctionConfigurationResult { get; }
    public UpdateFunctionConfigurationResult get_UpdateFunctionConfigurationResult();
}
public class Amazon.Lambda.Model.UpdateFunctionConfigurationResult : AmazonWebServiceResponse {
    private string _codeSha256;
    private Nullable`1<long> _codeSize;
    private string _description;
    private string _functionArn;
    private string _functionName;
    private string _handler;
    private string _lastModified;
    private Nullable`1<int> _memorySize;
    private string _role;
    private Runtime _runtime;
    private Nullable`1<int> _timeout;
    private string _version;
    private VpcConfigDetail _vpcConfig;
    public string CodeSha256 { get; public set; }
    public long CodeSize { get; public set; }
    public string Description { get; public set; }
    public string FunctionArn { get; public set; }
    public string FunctionName { get; public set; }
    public string Handler { get; public set; }
    public string LastModified { get; public set; }
    public int MemorySize { get; public set; }
    public string Role { get; public set; }
    public Runtime Runtime { get; public set; }
    public int Timeout { get; public set; }
    public string Version { get; public set; }
    public VpcConfigDetail VpcConfig { get; public set; }
    public string get_CodeSha256();
    public void set_CodeSha256(string value);
    internal bool IsSetCodeSha256();
    public long get_CodeSize();
    public void set_CodeSize(long value);
    internal bool IsSetCodeSize();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public string get_FunctionName();
    public void set_FunctionName(string value);
    internal bool IsSetFunctionName();
    public string get_Handler();
    public void set_Handler(string value);
    internal bool IsSetHandler();
    public string get_LastModified();
    public void set_LastModified(string value);
    internal bool IsSetLastModified();
    public int get_MemorySize();
    public void set_MemorySize(int value);
    internal bool IsSetMemorySize();
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public Runtime get_Runtime();
    public void set_Runtime(Runtime value);
    internal bool IsSetRuntime();
    public int get_Timeout();
    public void set_Timeout(int value);
    internal bool IsSetTimeout();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public VpcConfigDetail get_VpcConfig();
    public void set_VpcConfig(VpcConfigDetail value);
    internal bool IsSetVpcConfig();
}
public class Amazon.Lambda.Model.VpcConfig : object {
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    public List`1<string> SecurityGroupIds { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.Lambda.Model.VpcConfigDetail : object {
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    private string _vpcId;
    public List`1<string> SecurityGroupIds { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public string VpcId { get; public set; }
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.Lambda.Runtime : ConstantClass {
    public static Runtime Java8;
    public static Runtime Nodejs;
    public static Runtime Python27;
    public Runtime(string value);
    private static Runtime();
    public static Runtime FindValue(string value);
    public static Runtime op_Implicit(string value);
}
[FlagsAttribute]
public enum Amazon.LoggingOptions : Enum {
    public int value__;
    public static LoggingOptions None;
    public static LoggingOptions Log4Net;
    public static LoggingOptions SystemDiagnostics;
}
public enum Amazon.LogMetricsFormatOption : Enum {
    public int value__;
    public static LogMetricsFormatOption Standard;
    public static LogMetricsFormatOption JSON;
}
public interface Amazon.MissingTypes.ICloneable {
    public abstract virtual object Clone();
}
[DefaultMemberAttribute("Item")]
public interface Amazon.MissingTypes.IOrderedDictionary {
    public object Item { get; public set; }
    public abstract virtual object get_Item(int index);
    public abstract virtual void set_Item(int index, object value);
    public abstract virtual IDictionaryEnumerator GetEnumerator();
    public abstract virtual void Insert(int index, object key, object value);
    public abstract virtual void RemoveAt(int index);
}
public class Amazon.RegionEndpoint : object {
    private static string REGIONS_FILE;
    private static int MAX_DOWNLOAD_RETRIES;
    private static Dictionary`2<string, RegionEndpoint> hashBySystemName;
    private static bool loaded;
    private static object LOCK_OBJECT;
    public static RegionEndpoint USEast1;
    public static RegionEndpoint USWest1;
    public static RegionEndpoint USWest2;
    public static RegionEndpoint EUWest1;
    public static RegionEndpoint EUCentral1;
    public static RegionEndpoint APNortheast1;
    public static RegionEndpoint APNortheast2;
    public static RegionEndpoint APSoutheast1;
    public static RegionEndpoint APSoutheast2;
    public static RegionEndpoint SAEast1;
    public static RegionEndpoint USGovCloudWest1;
    public static RegionEndpoint CNNorth1;
    private string regionDomain;
    private Dictionary`2<string, Endpoint> endpoints;
    [CompilerGeneratedAttribute]
private string <SystemName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public static IEnumerable`1<RegionEndpoint> EnumerableAllRegions { get; }
    public string SystemName { get; private set; }
    public string DisplayName { get; private set; }
    private RegionEndpoint(string systemName, string displayName);
    private static RegionEndpoint();
    private static RegionEndpoint NewEndpoint(string systemName, string displayName);
    private static RegionEndpoint NewEndpoint(string systemName, string displayName, string domain);
    public static IEnumerable`1<RegionEndpoint> get_EnumerableAllRegions();
    public static RegionEndpoint GetBySystemName(string systemName);
    private static void LoadEndpointDefinitions();
    private static void LoadEndpointDefinitionsFromEmbeddedResource();
    private static void LoadEndpointDefinitionFromWeb(string url);
    public static void LoadEndpointDefinitions(TextReader reader);
    public static void UnloadEndpointDefinitions();
    [CompilerGeneratedAttribute]
public string get_SystemName();
    [CompilerGeneratedAttribute]
private void set_SystemName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
private void set_DisplayName(string value);
    public Endpoint GetEndpointForService(string serviceName);
    public Endpoint GuessEndpointForService(string serviceName);
    public virtual string ToString();
}
public enum Amazon.ResponseLoggingOption : Enum {
    public int value__;
    public static ResponseLoggingOption Never;
    public static ResponseLoggingOption OnError;
    public static ResponseLoggingOption Always;
}
public class Amazon.Runtime.AmazonClientException : Exception {
    public AmazonClientException(string message);
    public AmazonClientException(string message, Exception innerException);
}
public abstract class Amazon.Runtime.AmazonServiceClient : object {
    private bool _disposed;
    private Logger _logger;
    private PreRequestEventHandler BeforeMarshallingEvent;
    private RequestEventHandler BeforeRequestEvent;
    private ResponseEventHandler AfterResponseEvent;
    private ExceptionEventHandler ExceptionEvent;
    [CompilerGeneratedAttribute]
private RuntimePipeline <RuntimePipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private AWSCredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private AbstractAWSSigner <Signer>k__BackingField;
    protected RuntimePipeline RuntimePipeline { get; protected set; }
    protected internal AWSCredentials Credentials { get; private set; }
    protected internal ClientConfig Config { get; private set; }
    protected bool SupportResponseLogging { get; }
    protected AbstractAWSSigner Signer { get; private set; }
    internal AmazonServiceClient(AWSCredentials credentials, ClientConfig config);
    internal AmazonServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, ClientConfig config);
    internal AmazonServiceClient(string awsAccessKeyId, string awsSecretAccessKey, ClientConfig config);
    [CompilerGeneratedAttribute]
protected RuntimePipeline get_RuntimePipeline();
    [CompilerGeneratedAttribute]
protected void set_RuntimePipeline(RuntimePipeline value);
    [CompilerGeneratedAttribute]
protected internal AWSCredentials get_Credentials();
    [CompilerGeneratedAttribute]
private void set_Credentials(AWSCredentials value);
    [CompilerGeneratedAttribute]
protected internal ClientConfig get_Config();
    [CompilerGeneratedAttribute]
private void set_Config(ClientConfig value);
    protected virtual bool get_SupportResponseLogging();
    internal void add_BeforeMarshallingEvent(PreRequestEventHandler value);
    internal void remove_BeforeMarshallingEvent(PreRequestEventHandler value);
    public void add_BeforeRequestEvent(RequestEventHandler value);
    public void remove_BeforeRequestEvent(RequestEventHandler value);
    public void add_AfterResponseEvent(ResponseEventHandler value);
    public void remove_AfterResponseEvent(ResponseEventHandler value);
    public void add_ExceptionEvent(ExceptionEventHandler value);
    public void remove_ExceptionEvent(ExceptionEventHandler value);
    [CompilerGeneratedAttribute]
protected AbstractAWSSigner get_Signer();
    [CompilerGeneratedAttribute]
private void set_Signer(AbstractAWSSigner value);
    protected virtual void Initialize();
    protected TResponse Invoke(TRequest request, IMarshaller`2<IRequest, AmazonWebServiceRequest> marshaller, ResponseUnmarshaller unmarshaller);
    protected Task`1<TResponse> InvokeAsync(TRequest request, IMarshaller`2<IRequest, AmazonWebServiceRequest> marshaller, ResponseUnmarshaller unmarshaller, CancellationToken cancellationToken);
    protected void ProcessPreRequestHandlers(IExecutionContext executionContext);
    protected void ProcessRequestHandlers(IExecutionContext executionContext);
    protected void ProcessResponseHandlers(IExecutionContext executionContext);
    protected virtual void ProcessExceptionHandlers(IExecutionContext executionContext, Exception exception);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    private void ThrowIfDisposed();
    protected abstract virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    private void BuildRuntimePipeline();
    internal static Uri ComposeUrl(IRequest iRequest);
    private static void DontUnescapePathDotsAndSlashes(Uri uri);
    internal C CloneConfig();
}
public class Amazon.Runtime.AmazonServiceException : Exception {
    private ErrorType errorType;
    private string errorCode;
    private string requestId;
    private HttpStatusCode statusCode;
    public ErrorType ErrorType { get; public set; }
    public string ErrorCode { get; public set; }
    public string RequestId { get; public set; }
    public HttpStatusCode StatusCode { get; public set; }
    public AmazonServiceException(string message);
    public AmazonServiceException(string message, Exception innerException);
    public AmazonServiceException(string message, Exception innerException, HttpStatusCode statusCode);
    public AmazonServiceException(Exception innerException);
    public AmazonServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    private static string BuildGenericErrorMessage(string errorCode, HttpStatusCode statusCode);
    public ErrorType get_ErrorType();
    public void set_ErrorType(ErrorType value);
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    public string get_RequestId();
    public void set_RequestId(string value);
    public HttpStatusCode get_StatusCode();
    public void set_StatusCode(HttpStatusCode value);
}
public class Amazon.Runtime.AmazonUnmarshallingException : AmazonServiceException {
    [CompilerGeneratedAttribute]
private string <LastKnownLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseBody>k__BackingField;
    public string LastKnownLocation { get; private set; }
    public string ResponseBody { get; private set; }
    public string Message { get; }
    public AmazonUnmarshallingException(string requestId, string lastKnownLocation, Exception innerException);
    public AmazonUnmarshallingException(string requestId, string lastKnownLocation, string responseBody, Exception innerException);
    [CompilerGeneratedAttribute]
public string get_LastKnownLocation();
    [CompilerGeneratedAttribute]
private void set_LastKnownLocation(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseBody();
    [CompilerGeneratedAttribute]
private void set_ResponseBody(string value);
    public virtual string get_Message();
    private static void AppendFormat(StringBuilder sb, string format, string value);
}
public abstract class Amazon.Runtime.AmazonWebServiceRequest : object {
    private RequestEventHandler BeforeRequestEvent;
    internal EventHandler`1<StreamTransferProgressArgs> StreamUploadProgressCallback;
    private Dictionary`2<string, object> requestState;
    private Nullable`1<TimeSpan> timeoutInternal;
    private Nullable`1<TimeSpan> readWriteTimeoutInternal;
    [CompilerGeneratedAttribute]
private bool <UseSigV4>k__BackingField;
    internal Dictionary`2<string, object> RequestState { get; }
    internal Nullable`1<TimeSpan> TimeoutInternal { get; internal set; }
    internal Nullable`1<TimeSpan> ReadWriteTimeoutInternal { get; internal set; }
    internal bool UseSigV4 { get; internal set; }
    internal bool Expect100Continue { get; }
    internal bool IncludeSHA256Header { get; }
    internal void add_BeforeRequestEvent(RequestEventHandler value);
    internal void remove_BeforeRequestEvent(RequestEventHandler value);
    internal Dictionary`2<string, object> get_RequestState();
    internal AmazonWebServiceRequest WithBeforeRequestHandler(RequestEventHandler handler);
    internal void FireBeforeRequestEvent(object sender, RequestEventArgs args);
    internal Nullable`1<TimeSpan> get_TimeoutInternal();
    internal void set_TimeoutInternal(Nullable`1<TimeSpan> value);
    internal Nullable`1<TimeSpan> get_ReadWriteTimeoutInternal();
    internal void set_ReadWriteTimeoutInternal(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
internal bool get_UseSigV4();
    [CompilerGeneratedAttribute]
internal void set_UseSigV4(bool value);
    internal virtual bool get_Expect100Continue();
    internal virtual bool get_IncludeSHA256Header();
    private sealed virtual override void Amazon.Runtime.Internal.IRequestEvents.AddBeforeRequestHandler(RequestEventHandler handler);
    private sealed virtual override void Amazon.Runtime.Internal.IRequestEvents.FireBeforeRequestEvent(object sender, RequestEventArgs args);
}
public class Amazon.Runtime.AmazonWebServiceResponse : object {
    private ResponseMetadata responseMetadataField;
    private long contentLength;
    private HttpStatusCode httpStatusCode;
    public ResponseMetadata ResponseMetadata { get; public set; }
    public long ContentLength { get; public set; }
    public HttpStatusCode HttpStatusCode { get; public set; }
    public ResponseMetadata get_ResponseMetadata();
    public void set_ResponseMetadata(ResponseMetadata value);
    public long get_ContentLength();
    public void set_ContentLength(long value);
    public HttpStatusCode get_HttpStatusCode();
    public void set_HttpStatusCode(HttpStatusCode value);
}
public class Amazon.Runtime.AnonymousAWSCredentials : AWSCredentials {
    public virtual ImmutableCredentials GetCredentials();
}
[ObsoleteAttribute("This class has been moved to the Amazon.SecurityToken namespace since it has a dependency on that service. Please update your code to point to Amazon.SecurityToken.STSAssumeRoleAWSCredentials.")]
public class Amazon.Runtime.AssumeRoleAWSCredentials : STSAssumeRoleAWSCredentials {
    public AssumeRoleAWSCredentials(IAmazonSecurityTokenService sts, AssumeRoleRequest assumeRoleRequest);
    public AssumeRoleAWSCredentials(AssumeRoleWithSAMLRequest assumeRoleWithSamlRequest);
}
public abstract class Amazon.Runtime.AWSCredentials : object {
    public abstract virtual ImmutableCredentials GetCredentials();
    public virtual Task`1<ImmutableCredentials> GetCredentialsAsync();
    [CompilerGeneratedAttribute]
private ImmutableCredentials <GetCredentialsAsync>b__0();
}
public class Amazon.Runtime.BasicAWSCredentials : AWSCredentials {
    private ImmutableCredentials _credentials;
    public BasicAWSCredentials(string accessKey, string secretKey);
    public virtual ImmutableCredentials GetCredentials();
}
public abstract class Amazon.Runtime.ClientConfig : object {
    internal static TimeSpan InfiniteTimeout;
    internal static TimeSpan MaxTimeout;
    private RegionEndpoint regionEndpoint;
    private bool useHttp;
    private string serviceURL;
    private string authRegion;
    private string authServiceName;
    private string userAgent;
    private string signatureVersion;
    private SigningAlgorithm signatureMethod;
    private int maxErrorRetry;
    private bool readEntireResponse;
    private bool logResponse;
    private int bufferSize;
    private long progressUpdateInterval;
    private bool resignRetries;
    private ICredentials proxyCredentials;
    private bool logMetrics;
    private bool disableLogging;
    private Nullable`1<TimeSpan> timeout;
    private bool allowAutoRedirect;
    public string ServiceVersion { get; }
    public SigningAlgorithm SignatureMethod { get; public set; }
    public string SignatureVersion { get; public set; }
    public string UserAgent { get; public set; }
    public RegionEndpoint RegionEndpoint { get; public set; }
    internal string RegionEndpointServiceName { get; }
    public string ServiceURL { get; public set; }
    public bool UseHttp { get; public set; }
    public string AuthenticationRegion { get; public set; }
    public string AuthenticationServiceName { get; public set; }
    public int MaxErrorRetry { get; public set; }
    public bool LogResponse { get; public set; }
    public bool ReadEntireResponse { get; public set; }
    public int BufferSize { get; public set; }
    public long ProgressUpdateInterval { get; public set; }
    internal bool ResignRetries { get; internal set; }
    internal bool AllowAutoRedirect { get; internal set; }
    public bool LogMetrics { get; public set; }
    internal bool DisableLogging { get; internal set; }
    public ICredentials ProxyCredentials { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    private static ClientConfig();
    public abstract virtual string get_ServiceVersion();
    public SigningAlgorithm get_SignatureMethod();
    public void set_SignatureMethod(SigningAlgorithm value);
    public string get_SignatureVersion();
    public void set_SignatureVersion(string value);
    public string get_UserAgent();
    public void set_UserAgent(string value);
    public RegionEndpoint get_RegionEndpoint();
    public void set_RegionEndpoint(RegionEndpoint value);
    internal abstract virtual string get_RegionEndpointServiceName();
    public string get_ServiceURL();
    public void set_ServiceURL(string value);
    public bool get_UseHttp();
    public void set_UseHttp(bool value);
    internal string DetermineServiceURL();
    internal static string GetUrl(RegionEndpoint regionEndpoint, string regionEndpointServiceName, bool useHttp);
    public string get_AuthenticationRegion();
    public void set_AuthenticationRegion(string value);
    public string get_AuthenticationServiceName();
    public void set_AuthenticationServiceName(string value);
    public int get_MaxErrorRetry();
    public void set_MaxErrorRetry(int value);
    public bool get_LogResponse();
    public void set_LogResponse(bool value);
    public bool get_ReadEntireResponse();
    public void set_ReadEntireResponse(bool value);
    public int get_BufferSize();
    public void set_BufferSize(int value);
    public long get_ProgressUpdateInterval();
    public void set_ProgressUpdateInterval(long value);
    internal bool get_ResignRetries();
    internal void set_ResignRetries(bool value);
    internal bool get_AllowAutoRedirect();
    internal void set_AllowAutoRedirect(bool value);
    public bool get_LogMetrics();
    public void set_LogMetrics(bool value);
    internal bool get_DisableLogging();
    internal void set_DisableLogging(bool value);
    public ICredentials get_ProxyCredentials();
    public void set_ProxyCredentials(ICredentials value);
    protected virtual void Initialize();
    public Nullable`1<TimeSpan> get_Timeout();
    public void set_Timeout(Nullable`1<TimeSpan> value);
    internal void SetUseNagleIfAvailable(bool useNagle);
    internal virtual void Validate();
    internal static void ValidateTimeout(Nullable`1<TimeSpan> timeout);
    internal static Nullable`1<TimeSpan> GetTimeoutValue(Nullable`1<TimeSpan> clientTimeout, Nullable`1<TimeSpan> requestTimeout);
}
public class Amazon.Runtime.ConstantClass : object {
    private static object staticFieldsLock;
    private static Dictionary`2<Type, Dictionary`2<string, ConstantClass>> staticFields;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; private set; }
    protected ConstantClass(string value);
    private static ConstantClass();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    public virtual string ToString();
    public string ToString(IFormatProvider provider);
    public static string op_Implicit(ConstantClass value);
    internal ConstantClass Intern();
    protected static T FindValue(string value);
    private static void LoadFields(Type t);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public bool Equals(ConstantClass obj);
    public static bool op_Equality(ConstantClass a, ConstantClass b);
    public static bool op_Inequality(ConstantClass a, ConstantClass b);
    public static bool op_Equality(ConstantClass a, string b);
    public static bool op_Equality(string a, ConstantClass b);
    public static bool op_Inequality(ConstantClass a, string b);
    public static bool op_Inequality(string a, ConstantClass b);
}
public enum Amazon.Runtime.ErrorType : Enum {
    public int value__;
    public static ErrorType Sender;
    public static ErrorType Receiver;
    public static ErrorType Unknown;
}
public class Amazon.Runtime.ExceptionEventArgs : EventArgs {
}
public class Amazon.Runtime.ExceptionEventHandler : MulticastDelegate {
    public ExceptionEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, ExceptionEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, ExceptionEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal static class Amazon.Runtime.FallbackCredentialsFactory : object {
    private static AWSCredentials cachedCredentials;
    [CompilerGeneratedAttribute]
private static List`1<CredentialsGenerator> <CredentialsGenerators>k__BackingField;
    [CompilerGeneratedAttribute]
private static CredentialsGenerator CS$<>9__CachedAnonymousMethodDelegate2;
    public static List`1<CredentialsGenerator> CredentialsGenerators { get; public set; }
    private static FallbackCredentialsFactory();
    [CompilerGeneratedAttribute]
public static List`1<CredentialsGenerator> get_CredentialsGenerators();
    [CompilerGeneratedAttribute]
public static void set_CredentialsGenerators(List`1<CredentialsGenerator> value);
    public static void Reset();
    internal static AWSCredentials GetCredentials(bool fallbackToAnonymous);
    [CompilerGeneratedAttribute]
private static AWSCredentials <Reset>b__1();
}
public class Amazon.Runtime.HeadersRequestEventArgs : RequestEventArgs {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Headers>k__BackingField;
    public IDictionary`2<string, string> Headers { get; protected set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
protected void set_Headers(IDictionary`2<string, string> value);
    internal static HeadersRequestEventArgs Create(IDictionary`2<string, string> headers);
}
public class Amazon.Runtime.HttpRequestMessageFactory : object {
    private ClientConfig _clientConfig;
    public HttpRequestMessageFactory(ClientConfig clientConfig);
    public sealed virtual IHttpRequest`1<HttpContent> CreateHttpRequest(Uri requestUri);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
public class Amazon.Runtime.HttpWebRequestMessage : object {
    private static HashSet`1<string> ContentHeaderNames;
    private bool _disposed;
    private HttpRequestMessage _request;
    private HttpClient _httpClient;
    private ClientConfig _clientConfig;
    public HttpClient HttpClient { get; }
    public HttpRequestMessage Request { get; }
    public string Method { get; public set; }
    public Uri RequestUri { get; }
    public HttpWebRequestMessage(Uri requestUri, ClientConfig config);
    private static HttpWebRequestMessage();
    public HttpClient get_HttpClient();
    public HttpRequestMessage get_Request();
    public sealed virtual string get_Method();
    public sealed virtual void set_Method(string value);
    public sealed virtual Uri get_RequestUri();
    public sealed virtual void ConfigureRequest(IRequestContext requestContext);
    public sealed virtual void SetRequestHeaders(IDictionary`2<string, string> headers);
    public sealed virtual HttpContent GetRequestContent();
    public sealed virtual IWebResponseData GetResponse();
    public sealed virtual void Abort();
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.Runtime.HttpWebRequestMessage/<GetResponseAsync>d__0")]
public sealed virtual Task`1<IWebResponseData> GetResponseAsync(CancellationToken cancellationToken);
    public sealed virtual void WriteToRequestBody(HttpContent requestContent, Stream contentStream, IDictionary`2<string, string> contentHeaders, IRequestContext requestContext);
    public sealed virtual void WriteToRequestBody(HttpContent requestContent, Byte[] content, IDictionary`2<string, string> contentHeaders);
    public sealed virtual Task`1<HttpContent> GetRequestContentAsync();
    private void WriteContentHeaders(IDictionary`2<string, string> contentHeaders);
    public sealed virtual void Dispose();
    private HttpClient CreateHttpClient();
    protected virtual void Dispose(bool disposing);
}
public interface Amazon.Runtime.IAsyncExecutionContext {
    public IAsyncResponseContext ResponseContext { get; }
    public IAsyncRequestContext RequestContext { get; }
    public object RuntimeState { get; public set; }
    public abstract virtual IAsyncResponseContext get_ResponseContext();
    public abstract virtual IAsyncRequestContext get_RequestContext();
    public abstract virtual object get_RuntimeState();
    public abstract virtual void set_RuntimeState(object value);
}
public interface Amazon.Runtime.IAsyncRequestContext {
    public AsyncCallback Callback { get; }
    public object State { get; }
    public abstract virtual AsyncCallback get_Callback();
    public abstract virtual object get_State();
}
public interface Amazon.Runtime.IAsyncResponseContext {
    public RuntimeAsyncResult AsyncResult { get; public set; }
    public abstract virtual RuntimeAsyncResult get_AsyncResult();
    public abstract virtual void set_AsyncResult(RuntimeAsyncResult value);
}
public interface Amazon.Runtime.IExceptionHandler {
    public abstract virtual bool Handle(IExecutionContext executionContext, Exception exception);
}
public interface Amazon.Runtime.IExceptionHandler`1 {
    public abstract virtual bool HandleException(IExecutionContext executionContext, T exception);
}
public interface Amazon.Runtime.IExecutionContext {
    public IResponseContext ResponseContext { get; }
    public IRequestContext RequestContext { get; }
    public abstract virtual IResponseContext get_ResponseContext();
    public abstract virtual IRequestContext get_RequestContext();
}
public interface Amazon.Runtime.IHttpRequest`1 {
    public string Method { get; public set; }
    public Uri RequestUri { get; }
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string value);
    public abstract virtual Uri get_RequestUri();
    public abstract virtual void ConfigureRequest(IRequestContext requestContext);
    public abstract virtual void SetRequestHeaders(IDictionary`2<string, string> headers);
    public abstract virtual TRequestContent GetRequestContent();
    public abstract virtual IWebResponseData GetResponse();
    public abstract virtual void WriteToRequestBody(TRequestContent requestContent, Stream contentStream, IDictionary`2<string, string> contentHeaders, IRequestContext requestContext);
    public abstract virtual void WriteToRequestBody(TRequestContent requestContent, Byte[] content, IDictionary`2<string, string> contentHeaders);
    public abstract virtual void Abort();
    public abstract virtual Task`1<TRequestContent> GetRequestContentAsync();
    public abstract virtual Task`1<IWebResponseData> GetResponseAsync(CancellationToken cancellationToken);
}
public interface Amazon.Runtime.IHttpRequestFactory`1 {
    public abstract virtual IHttpRequest`1<TRequestContent> CreateHttpRequest(Uri requestUri);
}
public interface Amazon.Runtime.IMetricsFormatter {
    public abstract virtual string FormatMetrics(IRequestMetrics metrics);
}
public interface Amazon.Runtime.IMetricsTiming {
    public bool IsFinished { get; }
    public long ElapsedTicks { get; }
    public TimeSpan ElapsedTime { get; }
    public abstract virtual bool get_IsFinished();
    public abstract virtual long get_ElapsedTicks();
    public abstract virtual TimeSpan get_ElapsedTime();
}
public class Amazon.Runtime.ImmutableCredentials : object {
    [CompilerGeneratedAttribute]
private string <AccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public string AccessKey { get; private set; }
    public string SecretKey { get; private set; }
    public string Token { get; private set; }
    public bool UseToken { get; }
    public ImmutableCredentials(string awsAccessKeyId, string awsSecretAccessKey, string token);
    [CompilerGeneratedAttribute]
public string get_AccessKey();
    [CompilerGeneratedAttribute]
private void set_AccessKey(string value);
    [CompilerGeneratedAttribute]
public string get_SecretKey();
    [CompilerGeneratedAttribute]
private void set_SecretKey(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
private void set_Token(string value);
    public bool get_UseToken();
    public ImmutableCredentials Copy();
}
public class Amazon.Runtime.InstanceProfileAWSCredentials : RefreshingAWSCredentials {
    private static TimeSpan _preemptExpiryTime;
    private CredentialsRefreshState _currentRefreshState;
    private static TimeSpan _refreshAttemptPeriod;
    private static String[] AliasSeparators;
    private static string Server;
    private static string RolesPath;
    private static string InfoPath;
    private static string SuccessCode;
    [CompilerGeneratedAttribute]
private string <Role>k__BackingField;
    public string Role { get; public set; }
    private static Uri RolesUri { get; }
    private Uri CurrentRoleUri { get; }
    private static Uri InfoUri { get; }
    public InstanceProfileAWSCredentials(string role);
    private static InstanceProfileAWSCredentials();
    [CompilerGeneratedAttribute]
public string get_Role();
    [CompilerGeneratedAttribute]
public void set_Role(string value);
    protected virtual CredentialsRefreshState GenerateNewCredentials();
    public static IEnumerable`1<string> GetAvailableRoles();
    private static Uri get_RolesUri();
    private Uri get_CurrentRoleUri();
    private static Uri get_InfoUri();
    private CredentialsRefreshState GetEarlyRefreshState(CredentialsRefreshState state);
    private CredentialsRefreshState GetRefreshState();
    private static SecurityInfo GetServiceInfo();
    private SecurityCredentials GetRoleCredentials();
    private static void ValidateResponse(SecurityBase response);
    private static string GetContents(Uri uri);
    private static string GetFirstRole();
}
public class Amazon.Runtime.Internal.AsyncExecutionContext : object {
    [CompilerGeneratedAttribute]
private IAsyncResponseContext <ResponseContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IAsyncRequestContext <RequestContext>k__BackingField;
    [CompilerGeneratedAttribute]
private object <RuntimeState>k__BackingField;
    public IAsyncResponseContext ResponseContext { get; private set; }
    public IAsyncRequestContext RequestContext { get; private set; }
    public object RuntimeState { get; public set; }
    public AsyncExecutionContext(bool enableMetrics);
    public AsyncExecutionContext(IAsyncRequestContext requestContext, IAsyncResponseContext responseContext);
    [CompilerGeneratedAttribute]
public sealed virtual IAsyncResponseContext get_ResponseContext();
    [CompilerGeneratedAttribute]
private void set_ResponseContext(IAsyncResponseContext value);
    [CompilerGeneratedAttribute]
public sealed virtual IAsyncRequestContext get_RequestContext();
    [CompilerGeneratedAttribute]
private void set_RequestContext(IAsyncRequestContext value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_RuntimeState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RuntimeState(object value);
}
public class Amazon.Runtime.Internal.AsyncRequestContext : RequestContext {
    [CompilerGeneratedAttribute]
private AsyncCallback <Callback>k__BackingField;
    [CompilerGeneratedAttribute]
private object <State>k__BackingField;
    public AsyncCallback Callback { get; public set; }
    public object State { get; public set; }
    public AsyncRequestContext(bool enableMetrics);
    [CompilerGeneratedAttribute]
public sealed virtual AsyncCallback get_Callback();
    [CompilerGeneratedAttribute]
public void set_Callback(AsyncCallback value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_State();
    [CompilerGeneratedAttribute]
public void set_State(object value);
}
public class Amazon.Runtime.Internal.AsyncResponseContext : ResponseContext {
    [CompilerGeneratedAttribute]
private RuntimeAsyncResult <AsyncResult>k__BackingField;
    public RuntimeAsyncResult AsyncResult { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual RuntimeAsyncResult get_AsyncResult();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AsyncResult(RuntimeAsyncResult value);
}
public class Amazon.Runtime.Internal.AsyncResult : object {
    private ManualResetEvent _waitHandle;
    private object _lockObj;
    private Stopwatch _stopWatch;
    private bool _callbackInvoked;
    private bool _disposed;
    private Guid id;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RetriesAttempt>k__BackingField;
    [CompilerGeneratedAttribute]
private AsyncRequestState <RequestState>k__BackingField;
    [CompilerGeneratedAttribute]
private object <FinalResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseUnmarshaller <Unmarshaller>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private AsyncCallback <Callback>k__BackingField;
    [CompilerGeneratedAttribute]
private AbstractAWSSigner <Signer>k__BackingField;
    [CompilerGeneratedAttribute]
private object <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestName>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMetrics <Metrics>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CompletedSynchronously>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    internal Exception Exception { get; internal set; }
    public int RetriesAttempt { get; public set; }
    internal AsyncRequestState RequestState { get; internal set; }
    internal object FinalResponse { get; internal set; }
    public ResponseUnmarshaller Unmarshaller { get; private set; }
    public IRequest Request { get; private set; }
    internal AsyncCallback Callback { get; private set; }
    public AbstractAWSSigner Signer { get; private set; }
    internal object State { get; private set; }
    internal string RequestName { get; private set; }
    public RequestMetrics Metrics { get; private set; }
    public bool CompletedSynchronously { get; private set; }
    public bool IsCompleted { get; private set; }
    public object AsyncState { get; }
    public WaitHandle AsyncWaitHandle { get; }
    internal Guid Id { get; }
    internal AsyncResult(IRequest request, AsyncCallback callback, object state, bool completeSynchronized, AbstractAWSSigner signer, ResponseUnmarshaller unmarshaller);
    [CompilerGeneratedAttribute]
internal Exception get_Exception();
    [CompilerGeneratedAttribute]
internal void set_Exception(Exception value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_RetriesAttempt();
    [CompilerGeneratedAttribute]
public void set_RetriesAttempt(int value);
    [CompilerGeneratedAttribute]
internal AsyncRequestState get_RequestState();
    [CompilerGeneratedAttribute]
internal void set_RequestState(AsyncRequestState value);
    [CompilerGeneratedAttribute]
internal object get_FinalResponse();
    [CompilerGeneratedAttribute]
internal void set_FinalResponse(object value);
    [CompilerGeneratedAttribute]
public sealed virtual ResponseUnmarshaller get_Unmarshaller();
    [CompilerGeneratedAttribute]
private void set_Unmarshaller(ResponseUnmarshaller value);
    [CompilerGeneratedAttribute]
public sealed virtual IRequest get_Request();
    [CompilerGeneratedAttribute]
private void set_Request(IRequest value);
    [CompilerGeneratedAttribute]
internal AsyncCallback get_Callback();
    [CompilerGeneratedAttribute]
private void set_Callback(AsyncCallback value);
    [CompilerGeneratedAttribute]
public sealed virtual AbstractAWSSigner get_Signer();
    [CompilerGeneratedAttribute]
private void set_Signer(AbstractAWSSigner value);
    [CompilerGeneratedAttribute]
internal object get_State();
    [CompilerGeneratedAttribute]
private void set_State(object value);
    [CompilerGeneratedAttribute]
internal string get_RequestName();
    [CompilerGeneratedAttribute]
private void set_RequestName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual RequestMetrics get_Metrics();
    [CompilerGeneratedAttribute]
private void set_Metrics(RequestMetrics value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_CompletedSynchronously();
    [CompilerGeneratedAttribute]
private void set_CompletedSynchronously(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual object get_AsyncState();
    public sealed virtual WaitHandle get_AsyncWaitHandle();
    internal void SetCompletedSynchronously(bool completedSynchronously);
    internal void SignalWaitHandle();
    internal void HandleException(Exception exception);
    internal void InvokeCallback();
    internal Guid get_Id();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
internal static class Amazon.Runtime.Internal.AsyncRunner : object {
    public static Task Run(Action action, CancellationToken cancellationToken);
    public static Task`1<T> Run(Func`1<T> action, CancellationToken cancellationToken);
}
public abstract class Amazon.Runtime.Internal.Auth.AbstractAWSSigner : object {
    private AWS4Signer _aws4Signer;
    private AWS4Signer AWS4SignerInstance { get; }
    public ClientProtocol Protocol { get; }
    private AWS4Signer get_AWS4SignerInstance();
    protected static string ComputeHash(string data, string secretkey, SigningAlgorithm algorithm);
    protected static string ComputeHash(Byte[] data, string secretkey, SigningAlgorithm algorithm);
    public abstract virtual void Sign(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    public abstract virtual ClientProtocol get_Protocol();
    protected static bool UseV4Signing(bool useSigV4Setting, IRequest request, ClientConfig config);
    protected AbstractAWSSigner SelectSigner(IRequest request, ClientConfig config);
    protected AbstractAWSSigner SelectSigner(AbstractAWSSigner defaultSigner, bool useSigV4Setting, IRequest request, ClientConfig config);
}
internal class Amazon.Runtime.Internal.Auth.AWS3HTTPSigner : AWS3Signer {
}
internal class Amazon.Runtime.Internal.Auth.AWS3Signer : AbstractAWSSigner {
    private static string HTTP_SCHEME;
    private static string HTTPS_SCHEME;
    [CompilerGeneratedAttribute]
private bool <UseAws3Https>k__BackingField;
    private bool UseAws3Https { get; private set; }
    public ClientProtocol Protocol { get; }
    public AWS3Signer(bool useAws3Https);
    [CompilerGeneratedAttribute]
private bool get_UseAws3Https();
    [CompilerGeneratedAttribute]
private void set_UseAws3Https(bool value);
    public virtual ClientProtocol get_Protocol();
    public virtual void Sign(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    private static void SignHttps(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    private static void SignHttp(IRequest request, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    private static string GetCanonicalizedResourcePath(Uri endpoint);
    private static bool IsHttpsRequest(IRequest request);
    private static string GetCanonicalizedQueryString(IDictionary`2<string, string> parameters);
    private static string GetRequestPayload(IRequest request);
    private static string GetSignedHeadersComponent(IRequest request);
    private static List`1<string> GetHeadersForStringToSign(IRequest request);
    private static string GetCanonicalizedHeadersForStringToSign(IRequest request);
}
internal class Amazon.Runtime.Internal.Auth.AWS4PreSignedUrlSigner : AWS4Signer {
    public static long MaxAWS4PreSignedUrlExpiry;
    internal static string XAmzSignature;
    internal static string XAmzAlgorithm;
    internal static string XAmzCredential;
    internal static string XAmzExpires;
    public static string UnsignedPayload;
    public virtual void Sign(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    public AWS4SigningResult SignRequest(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    public static AWS4SigningResult SignRequest(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey, string service, string overrideSigningRegion);
}
internal class Amazon.Runtime.Internal.Auth.AWS4Signer : AbstractAWSSigner {
    public static string Scheme;
    public static string Algorithm;
    public static string AWS4AlgorithmTag;
    public static string Terminator;
    public static string Credential;
    public static string SignedHeaders;
    public static string Signature;
    public static string EmptyBodySha256;
    public static string StreamingBodySha256;
    public static string AWSChunkedEncoding;
    private static SigningAlgorithm SignerAlgorithm;
    public static Byte[] TerminatorBytes;
    private static Regex CompressWhitespaceRegex;
    [CompilerGeneratedAttribute]
private static Func`2<string, string> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate3;
    public ClientProtocol Protocol { get; }
    private static AWS4Signer();
    public virtual ClientProtocol get_Protocol();
    public virtual void Sign(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    public AWS4SigningResult SignRequest(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    public static DateTime InitializeHeaders(IDictionary`2<string, string> headers, Uri requestEndpoint);
    public static DateTime InitializeHeaders(IDictionary`2<string, string> headers, Uri requestEndpoint, DateTime requestDateTime);
    private static void CleanHeaders(IDictionary`2<string, string> headers);
    public static AWS4SigningResult ComputeSignature(ImmutableCredentials credentials, string region, DateTime signedAt, string service, string signedHeaders, string canonicalRequest);
    public static AWS4SigningResult ComputeSignature(string awsAccessKey, string awsSecretAccessKey, string region, DateTime signedAt, string service, string signedHeaders, string canonicalRequest, RequestMetrics metrics);
    public static string FormatDateTime(DateTime dt, string formatString);
    public static Byte[] ComposeSigningKey(string awsSecretAccessKey, string region, string date, string service);
    public static string SetRequestBodyHash(IRequest request);
    public static Byte[] SignBlob(Byte[] key, string data);
    public static Byte[] SignBlob(Byte[] key, Byte[] data);
    public static Byte[] ComputeKeyedHash(SigningAlgorithm algorithm, Byte[] key, string data);
    public static Byte[] ComputeKeyedHash(SigningAlgorithm algorithm, Byte[] key, Byte[] data);
    public static Byte[] ComputeHash(string data);
    public static Byte[] ComputeHash(Byte[] data);
    internal static string DetermineSigningRegion(ClientConfig clientConfig, string serviceName, RegionEndpoint alternateEndpoint, IRequest request);
    internal static string DetermineService(ClientConfig clientConfig);
    protected static string CanonicalizeRequest(string resourcePath, string httpMethod, IDictionary`2<string, string> sortedHeaders, string canonicalQueryString, string precomputedBodyHash);
    protected static string CanonicalizeResourcePath(string resourcePath);
    protected static IDictionary`2<string, string> SortHeaders(IEnumerable`1<KeyValuePair`2<string, string>> requestHeaders);
    protected static string CanonicalizeHeaders(ICollection`1<KeyValuePair`2<string, string>> sortedHeaders);
    protected static string CanonicalizeHeaderNames(IEnumerable`1<KeyValuePair`2<string, string>> sortedHeaders);
    protected static IDictionary`2<string, string> GetParametersToCanonicalize(IRequest request);
    protected static string CanonicalizeQueryParameters(string queryString, bool uriEncodeParameters);
    protected static string CanonicalizeQueryParameters(IDictionary`2<string, string> parameters, bool uriEncodeParameters);
    private static string CompressSpaces(string data);
    private static Byte[] GetRequestPayloadBytes(IRequest request);
    [CompilerGeneratedAttribute]
private static string <CanonicalizeResourcePath>b__0(string segment);
    [CompilerGeneratedAttribute]
private static bool <GetParametersToCanonicalize>b__2(KeyValuePair`2<string, string> queryParameter);
}
public class Amazon.Runtime.Internal.Auth.AWS4SigningResult : object {
    private string _awsAccessKeyId;
    private DateTime _originalDateTime;
    private string _signedHeaders;
    private string _scope;
    private Byte[] _signingKey;
    private Byte[] _signature;
    public string AccessKeyId { get; }
    public string ISO8601DateTime { get; }
    public string ISO8601Date { get; }
    public string SignedHeaders { get; }
    public string Scope { get; }
    public Byte[] SigningKey { get; }
    public string Signature { get; }
    public Byte[] SignatureBytes { get; }
    public string ForAuthorizationHeader { get; }
    public string ForQueryParameters { get; }
    public AWS4SigningResult(string awsAccessKeyId, DateTime signedAt, string signedHeaders, string scope, Byte[] signingKey, Byte[] signature);
    public string get_AccessKeyId();
    public string get_ISO8601DateTime();
    public string get_ISO8601Date();
    public string get_SignedHeaders();
    public string get_Scope();
    public Byte[] get_SigningKey();
    public string get_Signature();
    public Byte[] get_SignatureBytes();
    public string get_ForAuthorizationHeader();
    public string get_ForQueryParameters();
}
public enum Amazon.Runtime.Internal.Auth.ClientProtocol : Enum {
    public int value__;
    public static ClientProtocol QueryStringProtocol;
    public static ClientProtocol RestProtocol;
    public static ClientProtocol Unknown;
}
internal class Amazon.Runtime.Internal.Auth.CloudFrontSigner : AbstractAWSSigner {
    public ClientProtocol Protocol { get; }
    public virtual ClientProtocol get_Protocol();
    public virtual void Sign(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
}
internal class Amazon.Runtime.Internal.Auth.EC2Signer : AbstractAWSSigner {
    private QueryStringSigner querySigner;
    private bool _useSigV4;
    public ClientProtocol Protocol { get; }
    public virtual ClientProtocol get_Protocol();
    public virtual void Sign(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
}
internal class Amazon.Runtime.Internal.Auth.NullSigner : AbstractAWSSigner {
    public ClientProtocol Protocol { get; }
    public virtual void Sign(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    public virtual ClientProtocol get_Protocol();
}
internal class Amazon.Runtime.Internal.Auth.QueryStringSigner : AbstractAWSSigner {
    public ClientProtocol Protocol { get; }
    public virtual ClientProtocol get_Protocol();
    public virtual void Sign(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
}
internal class Amazon.Runtime.Internal.Auth.S3Signer : AbstractAWSSigner {
    private bool _useSigV4;
    private static HashSet`1<string> SignableParameters;
    [CompilerGeneratedAttribute]
private static Func`2<string, string> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate4;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, string> CS$<>9__CachedAnonymousMethodDelegate5;
    public ClientProtocol Protocol { get; }
    private static S3Signer();
    public virtual ClientProtocol get_Protocol();
    public virtual void Sign(IRequest request, ClientConfig clientConfig, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    internal void SignRequest(IRequest request, RequestMetrics metrics, string awsAccessKeyId, string awsSecretAccessKey);
    private static string BuildStringToSign(IRequest request);
    private static string BuildCanonicalizedHeaders(IDictionary`2<string, string> headers);
    private static string BuildCanonicalizedResource(IRequest request);
    [CompilerGeneratedAttribute]
private static string <BuildCanonicalizedHeaders>b__0(string x);
    [CompilerGeneratedAttribute]
private static bool <BuildCanonicalizedResource>b__2(KeyValuePair`2<string, string> kvp);
    [CompilerGeneratedAttribute]
private static string <BuildCanonicalizedResource>b__3(KeyValuePair`2<string, string> r);
}
public class Amazon.Runtime.Internal.Auth.SignatureException : Exception {
    public SignatureException(string message);
    public SignatureException(string message, Exception innerException);
}
internal class Amazon.Runtime.Internal.AutoConstructedList`1 : List`1<T> {
}
public class Amazon.Runtime.Internal.CallbackHandler : PipelineHandler {
    [CompilerGeneratedAttribute]
private Action`1<IExecutionContext> <OnPreInvoke>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<IExecutionContext> <OnPostInvoke>k__BackingField;
    public Action`1<IExecutionContext> OnPreInvoke { get; public set; }
    public Action`1<IExecutionContext> OnPostInvoke { get; public set; }
    [CompilerGeneratedAttribute]
public Action`1<IExecutionContext> get_OnPreInvoke();
    [CompilerGeneratedAttribute]
public void set_OnPreInvoke(Action`1<IExecutionContext> value);
    [CompilerGeneratedAttribute]
public Action`1<IExecutionContext> get_OnPostInvoke();
    [CompilerGeneratedAttribute]
public void set_OnPostInvoke(Action`1<IExecutionContext> value);
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.Runtime.Internal.CallbackHandler/<InvokeAsync>d__0`1")]
[DebuggerStepThroughAttribute]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected void PreInvoke(IExecutionContext executionContext);
    protected void PostInvoke(IExecutionContext executionContext);
    private void RaiseOnPreInvoke(IExecutionContext context);
    private void RaiseOnPostInvoke(IExecutionContext context);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod3(IExecutionContext );
}
public class Amazon.Runtime.Internal.CredentialsRetriever : PipelineHandler {
    [CompilerGeneratedAttribute]
private AWSCredentials <Credentials>k__BackingField;
    protected AWSCredentials Credentials { get; private set; }
    public CredentialsRetriever(AWSCredentials credentials);
    [CompilerGeneratedAttribute]
protected AWSCredentials get_Credentials();
    [CompilerGeneratedAttribute]
private void set_Credentials(AWSCredentials value);
    protected virtual void PreInvoke(IExecutionContext executionContext);
    public virtual void InvokeSync(IExecutionContext executionContext);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.Runtime.Internal.CredentialsRetriever/<InvokeAsync>d__0`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod5(IExecutionContext );
}
internal class Amazon.Runtime.Internal.DefaultRequest : object {
    private IDictionary`2<string, string> parameters;
    private IDictionary`2<string, string> headers;
    private IDictionary`2<string, string> subResources;
    private Uri endpoint;
    private string resourcePath;
    private string serviceName;
    private AmazonWebServiceRequest originalRequest;
    private Byte[] content;
    private Stream contentStream;
    private string contentStreamHash;
    private string httpMethod;
    private bool useQueryString;
    private string requestName;
    private string canonicalResource;
    private RegionEndpoint alternateRegion;
    private long originalStreamLength;
    [CompilerGeneratedAttribute]
private bool <SetContentFromParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Suppress404Exceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private AWS4SigningResult <AWS4SignerResult>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseChunkEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CanonicalResourcePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseSigV4>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<Stream, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public string RequestName { get; }
    public string HttpMethod { get; public set; }
    public bool UseQueryString { get; public set; }
    public AmazonWebServiceRequest OriginalRequest { get; }
    public IDictionary`2<string, string> Headers { get; }
    public IDictionary`2<string, string> Parameters { get; }
    public IDictionary`2<string, string> SubResources { get; }
    public Uri Endpoint { get; public set; }
    public string ResourcePath { get; public set; }
    public string CanonicalResource { get; public set; }
    public Byte[] Content { get; public set; }
    public bool SetContentFromParameters { get; public set; }
    public Stream ContentStream { get; public set; }
    public long OriginalStreamPosition { get; public set; }
    public string ServiceName { get; }
    public RegionEndpoint AlternateEndpoint { get; public set; }
    public bool Suppress404Exceptions { get; public set; }
    public AWS4SigningResult AWS4SignerResult { get; public set; }
    public bool UseChunkEncoding { get; public set; }
    public string CanonicalResourcePrefix { get; public set; }
    public bool UseSigV4 { get; public set; }
    public string AuthenticationRegion { get; public set; }
    public DefaultRequest(AmazonWebServiceRequest request, string serviceName);
    public sealed virtual string get_RequestName();
    public sealed virtual string get_HttpMethod();
    public sealed virtual void set_HttpMethod(string value);
    public sealed virtual bool get_UseQueryString();
    public sealed virtual void set_UseQueryString(bool value);
    public sealed virtual AmazonWebServiceRequest get_OriginalRequest();
    public sealed virtual IDictionary`2<string, string> get_Headers();
    public sealed virtual IDictionary`2<string, string> get_Parameters();
    public sealed virtual IDictionary`2<string, string> get_SubResources();
    public sealed virtual void AddSubResource(string subResource);
    public sealed virtual void AddSubResource(string subResource, string value);
    public sealed virtual Uri get_Endpoint();
    public sealed virtual void set_Endpoint(Uri value);
    public sealed virtual string get_ResourcePath();
    public sealed virtual void set_ResourcePath(string value);
    public string get_CanonicalResource();
    public void set_CanonicalResource(string value);
    public sealed virtual Byte[] get_Content();
    public sealed virtual void set_Content(Byte[] value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_SetContentFromParameters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SetContentFromParameters(bool value);
    public sealed virtual Stream get_ContentStream();
    public sealed virtual void set_ContentStream(Stream value);
    public sealed virtual long get_OriginalStreamPosition();
    public sealed virtual void set_OriginalStreamPosition(long value);
    public sealed virtual string ComputeContentStreamHash();
    public sealed virtual string get_ServiceName();
    public sealed virtual RegionEndpoint get_AlternateEndpoint();
    public sealed virtual void set_AlternateEndpoint(RegionEndpoint value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Suppress404Exceptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Suppress404Exceptions(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual AWS4SigningResult get_AWS4SignerResult();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AWS4SignerResult(AWS4SigningResult value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseChunkEncoding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseChunkEncoding(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CanonicalResourcePrefix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CanonicalResourcePrefix(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseSigV4();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseSigV4(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AuthenticationRegion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthenticationRegion(string value);
    public sealed virtual bool IsRequestStreamRewindable();
    public sealed virtual bool MayContainRequestBody();
    public sealed virtual bool HasRequestBody();
    [CompilerGeneratedAttribute]
private static bool <ComputeContentStreamHash>b__0(Stream s);
}
public class Amazon.Runtime.Internal.DefaultRetryPolicy : RetryPolicy {
    private int _maxBackoffInMilliseconds;
    private ICollection`1<WebExceptionStatus> _webExceptionStatusesToRetryOn;
    private ICollection`1<string> _errorCodesToRetryOn;
    public int MaxBackoffInMilliseconds { get; public set; }
    public ICollection`1<string> ErrorCodesToRetryOn { get; }
    public ICollection`1<WebExceptionStatus> WebExceptionStatusesToRetryOn { get; }
    public DefaultRetryPolicy(int maxRetries);
    public int get_MaxBackoffInMilliseconds();
    public void set_MaxBackoffInMilliseconds(int value);
    public ICollection`1<string> get_ErrorCodesToRetryOn();
    public ICollection`1<WebExceptionStatus> get_WebExceptionStatusesToRetryOn();
    public virtual bool CanRetry(IExecutionContext executionContext);
    public virtual bool RetryForException(IExecutionContext executionContext, Exception exception);
    public virtual bool RetryLimitReached(IExecutionContext executionContext);
    public virtual void WaitBeforeRetry(IExecutionContext executionContext);
    public static void WaitBeforeRetry(int retries, int maxBackoffInMilliseconds);
    protected static bool IsInnerException(Exception exception);
    protected static bool IsInnerException(Exception exception, T& inner);
}
public class Amazon.Runtime.Internal.EndpointResolver : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected void PreInvoke(IExecutionContext executionContext);
    protected virtual Uri DetermineEndpoint(IRequestContext requestContext);
    internal static Uri DetermineEndpoint(ClientConfig config, IRequest request);
}
public class Amazon.Runtime.Internal.ErrorCallbackHandler : PipelineHandler {
    [CompilerGeneratedAttribute]
private Action`2<IExecutionContext, Exception> <OnError>k__BackingField;
    public Action`2<IExecutionContext, Exception> OnError { get; public set; }
    [CompilerGeneratedAttribute]
public Action`2<IExecutionContext, Exception> get_OnError();
    [CompilerGeneratedAttribute]
public void set_OnError(Action`2<IExecutionContext, Exception> value);
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.Runtime.Internal.ErrorCallbackHandler/<InvokeAsync>d__0`1")]
[DebuggerStepThroughAttribute]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected void HandleException(IExecutionContext executionContext, Exception exception);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod2(IExecutionContext );
}
public class Amazon.Runtime.Internal.ErrorHandler : PipelineHandler {
    private IDictionary`2<Type, IExceptionHandler> _exceptionHandlers;
    public IDictionary`2<Type, IExceptionHandler> ExceptionHandlers { get; }
    public ErrorHandler(ILogger logger);
    public IDictionary`2<Type, IExceptionHandler> get_ExceptionHandlers();
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.Runtime.Internal.ErrorHandler/<InvokeAsync>d__1`1")]
[DebuggerStepThroughAttribute]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    private static void DisposeReponse(IResponseContext responseContext);
    private bool ProcessException(IExecutionContext executionContext, Exception exception);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod3(IExecutionContext );
}
public class Amazon.Runtime.Internal.ErrorResponse : object {
    private ErrorType type;
    private string code;
    private string message;
    private string requestId;
    public ErrorType Type { get; public set; }
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string RequestId { get; public set; }
    public ErrorType get_Type();
    public void set_Type(ErrorType value);
    public string get_Code();
    public void set_Code(string value);
    public string get_Message();
    public void set_Message(string value);
    public string get_RequestId();
    public void set_RequestId(string value);
}
public abstract class Amazon.Runtime.Internal.ExceptionHandler`1 : object {
    private ILogger _logger;
    protected ILogger Logger { get; }
    protected ExceptionHandler`1(ILogger logger);
    protected ILogger get_Logger();
    public sealed virtual bool Handle(IExecutionContext executionContext, Exception exception);
    public abstract virtual bool HandleException(IExecutionContext executionContext, T exception);
}
public class Amazon.Runtime.Internal.ExecutionContext : object {
    [CompilerGeneratedAttribute]
private IRequestContext <RequestContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IResponseContext <ResponseContext>k__BackingField;
    public IRequestContext RequestContext { get; private set; }
    public IResponseContext ResponseContext { get; private set; }
    public ExecutionContext(bool enableMetrics);
    public ExecutionContext(IRequestContext requestContext, IResponseContext responseContext);
    [CompilerGeneratedAttribute]
public sealed virtual IRequestContext get_RequestContext();
    [CompilerGeneratedAttribute]
private void set_RequestContext(IRequestContext value);
    [CompilerGeneratedAttribute]
public sealed virtual IResponseContext get_ResponseContext();
    [CompilerGeneratedAttribute]
private void set_ResponseContext(IResponseContext value);
    public static IExecutionContext CreateFromAsyncContext(IAsyncExecutionContext asyncContext);
}
public class Amazon.Runtime.Internal.HttpErrorResponseException : Exception {
    [CompilerGeneratedAttribute]
private IWebResponseData <Response>k__BackingField;
    public IWebResponseData Response { get; private set; }
    public HttpErrorResponseException(IWebResponseData response);
    public HttpErrorResponseException(string message, IWebResponseData response);
    public HttpErrorResponseException(string message, Exception innerException, IWebResponseData response);
    [CompilerGeneratedAttribute]
public IWebResponseData get_Response();
    [CompilerGeneratedAttribute]
private void set_Response(IWebResponseData value);
}
public class Amazon.Runtime.Internal.HttpErrorResponseExceptionHandler : ExceptionHandler`1<HttpErrorResponseException> {
    public HttpErrorResponseExceptionHandler(ILogger logger);
    public virtual bool HandleException(IExecutionContext executionContext, HttpErrorResponseException exception);
    private bool HandleSuppressed404(IExecutionContext executionContext, IWebResponseData httpErrorResponse);
}
public class Amazon.Runtime.Internal.HttpHandler`1 : PipelineHandler {
    private bool _disposed;
    private IHttpRequestFactory`1<TRequestContent> _requestFactory;
    [CompilerGeneratedAttribute]
private object <CallbackSender>k__BackingField;
    public object CallbackSender { get; private set; }
    public HttpHandler`1(IHttpRequestFactory`1<TRequestContent> requestFactory, object callbackSender);
    [CompilerGeneratedAttribute]
public object get_CallbackSender();
    [CompilerGeneratedAttribute]
private void set_CallbackSender(object value);
    public virtual void InvokeSync(IExecutionContext executionContext);
    private static void CompleteFailedRequest(IHttpRequest`1<TRequestContent> httpRequest);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.Runtime.Internal.HttpHandler`1/<InvokeAsync>d__0`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.Runtime.Internal.HttpHandler`1/<CompleteFailedRequest>d__b")]
private static Task CompleteFailedRequest(IExecutionContext executionContext, IHttpRequest`1<TRequestContent> httpRequest);
    private static void SetMetrics(IRequestContext requestContext);
    private void WriteContentToRequestBody(TRequestContent requestContent, IHttpRequest`1<TRequestContent> httpRequest, IRequestContext requestContext);
    protected virtual IHttpRequest`1<TRequestContent> CreateWebRequest(IRequestContext requestContext);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
public interface Amazon.Runtime.Internal.IRequest {
    public string RequestName { get; }
    public IDictionary`2<string, string> Headers { get; }
    public bool UseQueryString { get; public set; }
    public IDictionary`2<string, string> Parameters { get; }
    public IDictionary`2<string, string> SubResources { get; }
    public string HttpMethod { get; public set; }
    public Uri Endpoint { get; public set; }
    public string ResourcePath { get; public set; }
    public Byte[] Content { get; public set; }
    public bool SetContentFromParameters { get; public set; }
    public Stream ContentStream { get; public set; }
    public long OriginalStreamPosition { get; public set; }
    public string ServiceName { get; }
    public AmazonWebServiceRequest OriginalRequest { get; }
    public RegionEndpoint AlternateEndpoint { get; public set; }
    public bool Suppress404Exceptions { get; public set; }
    public AWS4SigningResult AWS4SignerResult { get; public set; }
    public bool UseChunkEncoding { get; public set; }
    public string CanonicalResourcePrefix { get; public set; }
    public bool UseSigV4 { get; public set; }
    public string AuthenticationRegion { get; public set; }
    public abstract virtual string get_RequestName();
    public abstract virtual IDictionary`2<string, string> get_Headers();
    public abstract virtual bool get_UseQueryString();
    public abstract virtual void set_UseQueryString(bool value);
    public abstract virtual IDictionary`2<string, string> get_Parameters();
    public abstract virtual IDictionary`2<string, string> get_SubResources();
    public abstract virtual void AddSubResource(string subResource);
    public abstract virtual void AddSubResource(string subResource, string value);
    public abstract virtual string get_HttpMethod();
    public abstract virtual void set_HttpMethod(string value);
    public abstract virtual Uri get_Endpoint();
    public abstract virtual void set_Endpoint(Uri value);
    public abstract virtual string get_ResourcePath();
    public abstract virtual void set_ResourcePath(string value);
    public abstract virtual Byte[] get_Content();
    public abstract virtual void set_Content(Byte[] value);
    public abstract virtual bool get_SetContentFromParameters();
    public abstract virtual void set_SetContentFromParameters(bool value);
    public abstract virtual Stream get_ContentStream();
    public abstract virtual void set_ContentStream(Stream value);
    public abstract virtual long get_OriginalStreamPosition();
    public abstract virtual void set_OriginalStreamPosition(long value);
    public abstract virtual string ComputeContentStreamHash();
    public abstract virtual string get_ServiceName();
    public abstract virtual AmazonWebServiceRequest get_OriginalRequest();
    public abstract virtual RegionEndpoint get_AlternateEndpoint();
    public abstract virtual void set_AlternateEndpoint(RegionEndpoint value);
    public abstract virtual bool get_Suppress404Exceptions();
    public abstract virtual void set_Suppress404Exceptions(bool value);
    public abstract virtual AWS4SigningResult get_AWS4SignerResult();
    public abstract virtual void set_AWS4SignerResult(AWS4SigningResult value);
    public abstract virtual bool get_UseChunkEncoding();
    public abstract virtual void set_UseChunkEncoding(bool value);
    public abstract virtual string get_CanonicalResourcePrefix();
    public abstract virtual void set_CanonicalResourcePrefix(string value);
    public abstract virtual bool get_UseSigV4();
    public abstract virtual void set_UseSigV4(bool value);
    public abstract virtual string get_AuthenticationRegion();
    public abstract virtual void set_AuthenticationRegion(string value);
    public abstract virtual bool IsRequestStreamRewindable();
    public abstract virtual bool MayContainRequestBody();
    public abstract virtual bool HasRequestBody();
}
public interface Amazon.Runtime.Internal.IRequestData {
    public ResponseUnmarshaller Unmarshaller { get; }
    public RequestMetrics Metrics { get; }
    public IRequest Request { get; }
    public AbstractAWSSigner Signer { get; }
    public int RetriesAttempt { get; }
    public abstract virtual ResponseUnmarshaller get_Unmarshaller();
    public abstract virtual RequestMetrics get_Metrics();
    public abstract virtual IRequest get_Request();
    public abstract virtual AbstractAWSSigner get_Signer();
    public abstract virtual int get_RetriesAttempt();
}
public interface Amazon.Runtime.Internal.IRequestEvents {
    public abstract virtual void AddBeforeRequestHandler(RequestEventHandler handler);
    public abstract virtual void FireBeforeRequestEvent(object sender, RequestEventArgs args);
}
public class Amazon.Runtime.Internal.Marshaller : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
}
public class Amazon.Runtime.Internal.MetricsHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.Runtime.Internal.MetricsHandler/<InvokeAsync>d__0`1")]
[DebuggerStepThroughAttribute]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod3(IExecutionContext );
}
public abstract class Amazon.Runtime.Internal.PipelineHandler : object {
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IPipelineHandler <InnerHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private IPipelineHandler <OuterHandler>k__BackingField;
    public ILogger Logger { get; public set; }
    public IPipelineHandler InnerHandler { get; public set; }
    public IPipelineHandler OuterHandler { get; public set; }
    [CompilerGeneratedAttribute]
public virtual ILogger get_Logger();
    [CompilerGeneratedAttribute]
public virtual void set_Logger(ILogger value);
    [CompilerGeneratedAttribute]
public sealed virtual IPipelineHandler get_InnerHandler();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InnerHandler(IPipelineHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual IPipelineHandler get_OuterHandler();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OuterHandler(IPipelineHandler value);
    [DebuggerHiddenAttribute]
public virtual void InvokeSync(IExecutionContext executionContext);
    [DebuggerHiddenAttribute]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected void LogMetrics(IExecutionContext executionContext);
}
public class Amazon.Runtime.Internal.RedirectHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.Runtime.Internal.RedirectHandler/<InvokeAsync>d__0`1")]
[DebuggerStepThroughAttribute]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    private bool HandleRedirect(IExecutionContext executionContext);
    protected virtual void FinalizeForRedirect(IExecutionContext executionContext, string redirectedLocation);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod3(IExecutionContext );
}
public class Amazon.Runtime.Internal.RequestContext : object {
    [CompilerGeneratedAttribute]
private IRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMetrics <Metrics>k__BackingField;
    [CompilerGeneratedAttribute]
private AbstractAWSSigner <Signer>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientConfig <ClientConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Retries>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSigned>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAsync>k__BackingField;
    [CompilerGeneratedAttribute]
private AmazonWebServiceRequest <OriginalRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private IMarshaller`2<IRequest, AmazonWebServiceRequest> <Marshaller>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseUnmarshaller <Unmarshaller>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableCredentials <ImmutableCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    public IRequest Request { get; public set; }
    public RequestMetrics Metrics { get; private set; }
    public AbstractAWSSigner Signer { get; public set; }
    public ClientConfig ClientConfig { get; public set; }
    public int Retries { get; public set; }
    public bool IsSigned { get; public set; }
    public bool IsAsync { get; public set; }
    public AmazonWebServiceRequest OriginalRequest { get; public set; }
    public IMarshaller`2<IRequest, AmazonWebServiceRequest> Marshaller { get; public set; }
    public ResponseUnmarshaller Unmarshaller { get; public set; }
    public ImmutableCredentials ImmutableCredentials { get; public set; }
    public CancellationToken CancellationToken { get; public set; }
    public string RequestName { get; }
    public RequestContext(bool enableMetrics);
    [CompilerGeneratedAttribute]
public sealed virtual IRequest get_Request();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Request(IRequest value);
    [CompilerGeneratedAttribute]
public sealed virtual RequestMetrics get_Metrics();
    [CompilerGeneratedAttribute]
private void set_Metrics(RequestMetrics value);
    [CompilerGeneratedAttribute]
public sealed virtual AbstractAWSSigner get_Signer();
    [CompilerGeneratedAttribute]
public void set_Signer(AbstractAWSSigner value);
    [CompilerGeneratedAttribute]
public sealed virtual ClientConfig get_ClientConfig();
    [CompilerGeneratedAttribute]
public void set_ClientConfig(ClientConfig value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Retries();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Retries(int value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsSigned();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsSigned(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsAsync();
    [CompilerGeneratedAttribute]
public void set_IsAsync(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual AmazonWebServiceRequest get_OriginalRequest();
    [CompilerGeneratedAttribute]
public void set_OriginalRequest(AmazonWebServiceRequest value);
    [CompilerGeneratedAttribute]
public sealed virtual IMarshaller`2<IRequest, AmazonWebServiceRequest> get_Marshaller();
    [CompilerGeneratedAttribute]
public void set_Marshaller(IMarshaller`2<IRequest, AmazonWebServiceRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual ResponseUnmarshaller get_Unmarshaller();
    [CompilerGeneratedAttribute]
public void set_Unmarshaller(ResponseUnmarshaller value);
    [CompilerGeneratedAttribute]
public sealed virtual ImmutableCredentials get_ImmutableCredentials();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ImmutableCredentials(ImmutableCredentials value);
    [CompilerGeneratedAttribute]
public sealed virtual CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
public void set_CancellationToken(CancellationToken value);
    public sealed virtual string get_RequestName();
}
public class Amazon.Runtime.Internal.ResponseContext : object {
    [CompilerGeneratedAttribute]
private AmazonWebServiceResponse <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebResponseData <HttpResponse>k__BackingField;
    public AmazonWebServiceResponse Response { get; public set; }
    public IWebResponseData HttpResponse { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual AmazonWebServiceResponse get_Response();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Response(AmazonWebServiceResponse value);
    [CompilerGeneratedAttribute]
public sealed virtual IWebResponseData get_HttpResponse();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HttpResponse(IWebResponseData value);
}
public class Amazon.Runtime.Internal.RetryHandler : PipelineHandler {
    private ILogger _logger;
    [CompilerGeneratedAttribute]
private RetryPolicy <RetryPolicy>k__BackingField;
    public ILogger Logger { get; public set; }
    public RetryPolicy RetryPolicy { get; private set; }
    public RetryHandler(RetryPolicy retryPolicy);
    public virtual ILogger get_Logger();
    public virtual void set_Logger(ILogger value);
    [CompilerGeneratedAttribute]
public RetryPolicy get_RetryPolicy();
    [CompilerGeneratedAttribute]
private void set_RetryPolicy(RetryPolicy value);
    public virtual void InvokeSync(IExecutionContext executionContext);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.Runtime.Internal.RetryHandler/<InvokeAsync>d__0`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    internal static void PrepareForRetry(IRequestContext requestContext);
    private void LogForRetry(IRequestContext requestContext, Exception exception);
    private void LogForError(IRequestContext requestContext, Exception exception);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod4(IExecutionContext );
}
public class Amazon.Runtime.Internal.RuntimeAsyncResult : object {
    private object _lockObj;
    private ManualResetEvent _waitHandle;
    private bool _disposed;
    private bool _callbackInvoked;
    [CompilerGeneratedAttribute]
private AsyncCallback <AsyncCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private object <AsyncState>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CompletedSynchronously>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private AmazonWebServiceResponse <Response>k__BackingField;
    public AsyncCallback AsyncCallback { get; private set; }
    public object AsyncState { get; private set; }
    public WaitHandle AsyncWaitHandle { get; }
    public bool CompletedSynchronously { get; private set; }
    public bool IsCompleted { get; private set; }
    public Exception Exception { get; public set; }
    public AmazonWebServiceResponse Response { get; public set; }
    public RuntimeAsyncResult(AsyncCallback asyncCallback, object asyncState);
    [CompilerGeneratedAttribute]
public AsyncCallback get_AsyncCallback();
    [CompilerGeneratedAttribute]
private void set_AsyncCallback(AsyncCallback value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_AsyncState();
    [CompilerGeneratedAttribute]
private void set_AsyncState(object value);
    public sealed virtual WaitHandle get_AsyncWaitHandle();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_CompletedSynchronously();
    [CompilerGeneratedAttribute]
private void set_CompletedSynchronously(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    [CompilerGeneratedAttribute]
public AmazonWebServiceResponse get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(AmazonWebServiceResponse value);
    internal void SignalWaitHandle();
    internal void HandleException(Exception exception);
    internal void InvokeCallback();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
public class Amazon.Runtime.Internal.RuntimePipeline : object {
    private bool _disposed;
    private ILogger _logger;
    private IPipelineHandler _handler;
    public IPipelineHandler Handler { get; }
    public List`1<IPipelineHandler> Handlers { get; }
    public RuntimePipeline(IPipelineHandler handler);
    public RuntimePipeline(IList`1<IPipelineHandler> handlers);
    public RuntimePipeline(IList`1<IPipelineHandler> handlers, ILogger logger);
    public RuntimePipeline(IPipelineHandler handler, ILogger logger);
    public IPipelineHandler get_Handler();
    public IResponseContext InvokeSync(IExecutionContext executionContext);
    public Task`1<T> InvokeAsync(IExecutionContext executionContext);
    public void AddHandler(IPipelineHandler handler);
    public void AddHandlerAfter(IPipelineHandler handler);
    public void AddHandlerBefore(IPipelineHandler handler);
    public void RemoveHandler();
    public void ReplaceHandler(IPipelineHandler handler);
    private static void InsertHandler(IPipelineHandler handler, IPipelineHandler current);
    private static IPipelineHandler GetInnermostHandler(IPipelineHandler handler);
    private void SetHandlerProperties(IPipelineHandler handler);
    public List`1<IPipelineHandler> get_Handlers();
    public IEnumerable`1<IPipelineHandler> EnumerateHandlers();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    private void ThrowIfDisposed();
}
public class Amazon.Runtime.Internal.Signer : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
    private static bool ShouldSign(IRequestContext requestContext);
    internal static void SignRequest(IRequestContext requestContext);
}
internal class Amazon.Runtime.Internal.StreamReadTracker : object {
    private object sender;
    private EventHandler`1<StreamTransferProgressArgs> callback;
    private long contentLength;
    private long totalBytesRead;
    private long totalIncrementTransferred;
    private long progressUpdateInterval;
    internal StreamReadTracker(object sender, EventHandler`1<StreamTransferProgressArgs> callback, long contentLength, long progressUpdateInterval);
    public void ReadProgress(int bytesRead);
}
public class Amazon.Runtime.Internal.Transform.BoolUnmarshaller : object {
    private static BoolUnmarshaller _instance;
    public static BoolUnmarshaller Instance { get; }
    private static BoolUnmarshaller();
    public static BoolUnmarshaller get_Instance();
    public static BoolUnmarshaller GetInstance();
    public sealed virtual bool Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual bool Unmarshall(JsonUnmarshallerContext context);
}
public class Amazon.Runtime.Internal.Transform.ByteUnmarshaller : object {
    private static ByteUnmarshaller _instance;
    public static ByteUnmarshaller Instance { get; }
    private static ByteUnmarshaller();
    public static ByteUnmarshaller get_Instance();
    public static ByteUnmarshaller GetInstance();
    public sealed virtual byte Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual byte Unmarshall(JsonUnmarshallerContext context);
}
public static class Amazon.Runtime.Internal.Transform.CustomMarshallTransformations : object {
    public static long ConvertDateTimeToEpochMilliseconds(DateTime dateTime);
}
public class Amazon.Runtime.Internal.Transform.DateTimeEpochLongMillisecondsUnmarshaller : object {
    private static DateTimeEpochLongMillisecondsUnmarshaller _instance;
    public static DateTimeEpochLongMillisecondsUnmarshaller Instance { get; }
    private static DateTimeEpochLongMillisecondsUnmarshaller();
    public static DateTimeEpochLongMillisecondsUnmarshaller get_Instance();
    public static DateTimeEpochLongMillisecondsUnmarshaller GetInstance();
    public sealed virtual DateTime Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DateTime Unmarshall(JsonUnmarshallerContext context);
}
public class Amazon.Runtime.Internal.Transform.DateTimeUnmarshaller : object {
    private static DateTimeUnmarshaller _instance;
    public static DateTimeUnmarshaller Instance { get; }
    private static DateTimeUnmarshaller();
    public static DateTimeUnmarshaller get_Instance();
    public static DateTimeUnmarshaller GetInstance();
    public sealed virtual DateTime Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DateTime Unmarshall(JsonUnmarshallerContext context);
}
public class Amazon.Runtime.Internal.Transform.DictionaryUnmarshaller`4 : object {
    private KeyValueUnmarshaller`4<K, V, KUnmarshaller, VUnmarshaller> KVUnmarshaller;
    public DictionaryUnmarshaller`4(KUnmarshaller kUnmarshaller, VUnmarshaller vUnmarshaller);
    private sealed virtual override Dictionary`2<K, V> Amazon.Runtime.Internal.Transform.IUnmarshaller<System.Collections.Generic.Dictionary<K,V>,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Dictionary`2<K, V> Unmarshall(JsonUnmarshallerContext context);
}
public class Amazon.Runtime.Internal.Transform.DoubleUnmarshaller : object {
    private static DoubleUnmarshaller _instance;
    public static DoubleUnmarshaller Instance { get; }
    private static DoubleUnmarshaller();
    public static DoubleUnmarshaller get_Instance();
    public static DoubleUnmarshaller GetInstance();
    public sealed virtual double Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual double Unmarshall(JsonUnmarshallerContext context);
}
public abstract class Amazon.Runtime.Internal.Transform.EC2ResponseUnmarshaller : XmlResponseUnmarshaller {
    public virtual AmazonWebServiceResponse Unmarshall(UnmarshallerContext input);
    protected virtual UnmarshallerContext ConstructUnmarshallerContext(Stream responseStream, bool maintainResponseBody, IWebResponseData response);
}
public class Amazon.Runtime.Internal.Transform.EC2UnmarshallerContext : XmlUnmarshallerContext {
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    public string RequestId { get; private set; }
    public EC2UnmarshallerContext(Stream responseStream, bool maintainResponseBody, IWebResponseData responseData);
    [CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
private void set_RequestId(string value);
    public virtual bool Read();
}
public class Amazon.Runtime.Internal.Transform.ErrorResponseUnmarshaller : object {
    private static ErrorResponseUnmarshaller instance;
    public sealed virtual ErrorResponse Unmarshall(XmlUnmarshallerContext context);
    public static ErrorResponseUnmarshaller GetInstance();
}
public class Amazon.Runtime.Internal.Transform.FloatUnmarshaller : object {
    private static FloatUnmarshaller _instance;
    public static FloatUnmarshaller Instance { get; }
    private static FloatUnmarshaller();
    public static FloatUnmarshaller get_Instance();
    public static FloatUnmarshaller GetInstance();
    public sealed virtual float Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual float Unmarshall(JsonUnmarshallerContext context);
}
public class Amazon.Runtime.Internal.Transform.HttpClientResponseData : object {
    private HttpClient _httpClient;
    private HttpResponseMessage _response;
    private String[] _headerNames;
    private HashSet`1<string> _headerNamesSet;
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSuccessStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ContentLength>k__BackingField;
    public HttpStatusCode StatusCode { get; private set; }
    public bool IsSuccessStatusCode { get; private set; }
    public string ContentType { get; private set; }
    public long ContentLength { get; private set; }
    public IHttpResponseBody ResponseBody { get; }
    internal HttpClientResponseData(HttpResponseMessage response);
    internal HttpClientResponseData(HttpResponseMessage response, HttpClient httpClient);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_StatusCode();
    [CompilerGeneratedAttribute]
private void set_StatusCode(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsSuccessStatusCode();
    [CompilerGeneratedAttribute]
private void set_IsSuccessStatusCode(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
private void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_ContentLength();
    [CompilerGeneratedAttribute]
private void set_ContentLength(long value);
    public sealed virtual string GetHeaderValue(string headerName);
    public sealed virtual bool IsHeaderPresent(string headerName);
    public sealed virtual String[] GetHeaderNames();
    private void SetHeaderNames();
    public sealed virtual IHttpResponseBody get_ResponseBody();
}
public class Amazon.Runtime.Internal.Transform.HttpResponseMessageBody : object {
    private HttpClient _httpClient;
    private HttpResponseMessage _response;
    private bool _disposed;
    public HttpResponseMessageBody(HttpResponseMessage response, HttpClient httpClient);
    public sealed virtual Stream OpenResponse();
    public sealed virtual Task`1<Stream> OpenResponseAsync();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
public interface Amazon.Runtime.Internal.Transform.IHttpResponseBody {
    public abstract virtual Stream OpenResponse();
    public abstract virtual Task`1<Stream> OpenResponseAsync();
}
public interface Amazon.Runtime.Internal.Transform.IMarshaller`2 {
    public abstract virtual T Marshall(R input);
}
public class Amazon.Runtime.Internal.Transform.IntUnmarshaller : object {
    private static IntUnmarshaller _instance;
    public static IntUnmarshaller Instance { get; }
    private static IntUnmarshaller();
    public static IntUnmarshaller get_Instance();
    public static IntUnmarshaller GetInstance();
    public sealed virtual int Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual int Unmarshall(JsonUnmarshallerContext context);
}
public interface Amazon.Runtime.Internal.Transform.IRequestMarshaller`2 {
    public abstract virtual void Marshall(R requestObject, T context);
}
public interface Amazon.Runtime.Internal.Transform.IResponseUnmarshaller`2 {
    public abstract virtual AmazonServiceException UnmarshallException(R input, Exception innerException, HttpStatusCode statusCode);
}
public interface Amazon.Runtime.Internal.Transform.IUnmarshaller`2 {
    public abstract virtual T Unmarshall(R input);
}
public interface Amazon.Runtime.Internal.Transform.IWebResponseData {
    public long ContentLength { get; }
    public string ContentType { get; }
    public HttpStatusCode StatusCode { get; }
    public bool IsSuccessStatusCode { get; }
    public IHttpResponseBody ResponseBody { get; }
    public abstract virtual long get_ContentLength();
    public abstract virtual string get_ContentType();
    public abstract virtual HttpStatusCode get_StatusCode();
    public abstract virtual bool get_IsSuccessStatusCode();
    public abstract virtual String[] GetHeaderNames();
    public abstract virtual bool IsHeaderPresent(string headerName);
    public abstract virtual string GetHeaderValue(string headerName);
    public abstract virtual IHttpResponseBody get_ResponseBody();
}
public class Amazon.Runtime.Internal.Transform.JsonErrorResponseUnmarshaller : object {
    private static JsonErrorResponseUnmarshaller instance;
    public sealed virtual ErrorResponse Unmarshall(JsonUnmarshallerContext context);
    public static JsonErrorResponseUnmarshaller GetInstance();
}
public class Amazon.Runtime.Internal.Transform.JsonMarshallerContext : MarshallerContext {
    [CompilerGeneratedAttribute]
private JsonWriter <Writer>k__BackingField;
    public JsonWriter Writer { get; private set; }
    public JsonMarshallerContext(IRequest request, JsonWriter writer);
    [CompilerGeneratedAttribute]
public JsonWriter get_Writer();
    [CompilerGeneratedAttribute]
private void set_Writer(JsonWriter value);
}
public abstract class Amazon.Runtime.Internal.Transform.JsonResponseUnmarshaller : ResponseUnmarshaller {
    public virtual AmazonWebServiceResponse Unmarshall(UnmarshallerContext input);
    public virtual AmazonServiceException UnmarshallException(UnmarshallerContext input, Exception innerException, HttpStatusCode statusCode);
    public abstract virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext input);
    public abstract virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext input, Exception innerException, HttpStatusCode statusCode);
    protected virtual UnmarshallerContext ConstructUnmarshallerContext(Stream responseStream, bool maintainResponseBody, IWebResponseData response);
    protected virtual bool ShouldReadEntireResponse(IWebResponseData response, bool readEntireResponse);
}
public class Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext : UnmarshallerContext {
    private static string DELIMITER;
    private StreamReader streamReader;
    private JsonReader jsonReader;
    private JsonPathStack stack;
    private string currentField;
    private Nullable`1<JsonToken> currentToken;
    private bool disposed;
    private bool wasPeeked;
    public bool IsStartOfDocument { get; }
    public bool IsEndElement { get; }
    public bool IsStartElement { get; }
    public int CurrentDepth { get; }
    public string CurrentPath { get; }
    public JsonToken CurrentTokenType { get; }
    internal Stream Stream { get; }
    public JsonUnmarshallerContext(Stream responseStream, bool maintainResponseBody, IWebResponseData responseData);
    public virtual bool get_IsStartOfDocument();
    public virtual bool get_IsEndElement();
    public virtual bool get_IsStartElement();
    public virtual int get_CurrentDepth();
    public virtual string get_CurrentPath();
    public virtual bool Read();
    public bool Peek(JsonToken token);
    public virtual string ReadText();
    public JsonToken get_CurrentTokenType();
    internal Stream get_Stream();
    internal int Peek();
    private int StreamPeek();
    private void UpdateContext();
    protected virtual void Dispose(bool disposing);
}
public class Amazon.Runtime.Internal.Transform.KeyValueUnmarshaller`4 : object {
    private KUnmarshaller keyUnmarshaller;
    private VUnmarshaller valueUnmarshaller;
    public KeyValueUnmarshaller`4(KUnmarshaller keyUnmarshaller, VUnmarshaller valueUnmarshaller);
    public sealed virtual KeyValuePair`2<K, V> Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyValuePair`2<K, V> Unmarshall(JsonUnmarshallerContext context);
}
public class Amazon.Runtime.Internal.Transform.ListUnmarshaller`2 : object {
    private IUnmarshaller iUnmarshaller;
    public ListUnmarshaller`2(IUnmarshaller iUnmarshaller);
    public sealed virtual List`1<I> Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual List`1<I> Unmarshall(JsonUnmarshallerContext context);
}
public class Amazon.Runtime.Internal.Transform.LongUnmarshaller : object {
    private static LongUnmarshaller _instance;
    public static LongUnmarshaller Instance { get; }
    private static LongUnmarshaller();
    public static LongUnmarshaller get_Instance();
    public static LongUnmarshaller GetInstance();
    public sealed virtual long Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual long Unmarshall(JsonUnmarshallerContext context);
}
public abstract class Amazon.Runtime.Internal.Transform.MarshallerContext : object {
    [CompilerGeneratedAttribute]
private IRequest <Request>k__BackingField;
    public IRequest Request { get; private set; }
    protected MarshallerContext(IRequest request);
    [CompilerGeneratedAttribute]
public IRequest get_Request();
    [CompilerGeneratedAttribute]
private void set_Request(IRequest value);
}
public class Amazon.Runtime.Internal.Transform.MemoryStreamUnmarshaller : object {
    private static MemoryStreamUnmarshaller _instance;
    public static MemoryStreamUnmarshaller Instance { get; }
    private static MemoryStreamUnmarshaller();
    public static MemoryStreamUnmarshaller get_Instance();
    public static MemoryStreamUnmarshaller GetInstance();
    public sealed virtual MemoryStream Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MemoryStream Unmarshall(JsonUnmarshallerContext context);
}
public class Amazon.Runtime.Internal.Transform.ResponseMetadataUnmarshaller : object {
    private static ResponseMetadataUnmarshaller _instance;
    public static ResponseMetadataUnmarshaller Instance { get; }
    private static ResponseMetadataUnmarshaller();
    public static ResponseMetadataUnmarshaller get_Instance();
    public static ResponseMetadataUnmarshaller GetInstance();
    public sealed virtual ResponseMetadata Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseMetadata Unmarshall(JsonUnmarshallerContext context);
}
public abstract class Amazon.Runtime.Internal.Transform.ResponseUnmarshaller : object {
    internal bool HasStreamingProperty { get; }
    public virtual UnmarshallerContext CreateContext(IWebResponseData response, bool readEntireResponse, Stream stream, RequestMetrics metrics);
    internal virtual bool get_HasStreamingProperty();
    public virtual AmazonServiceException UnmarshallException(UnmarshallerContext input, Exception innerException, HttpStatusCode statusCode);
    public AmazonWebServiceResponse UnmarshallResponse(UnmarshallerContext context);
    public abstract virtual AmazonWebServiceResponse Unmarshall(UnmarshallerContext input);
    protected abstract virtual UnmarshallerContext ConstructUnmarshallerContext(Stream responseStream, bool maintainResponseBody, IWebResponseData response);
    protected virtual bool ShouldReadEntireResponse(IWebResponseData response, bool readEntireResponse);
}
public abstract class Amazon.Runtime.Internal.Transform.S3ReponseUnmarshaller : XmlResponseUnmarshaller {
    private static string AMZ_ID_2;
    private static S3ReponseUnmarshaller();
    public virtual UnmarshallerContext CreateContext(IWebResponseData response, bool readEntireResponse, Stream stream, RequestMetrics metrics);
    public virtual AmazonWebServiceResponse Unmarshall(UnmarshallerContext input);
    protected virtual UnmarshallerContext ConstructUnmarshallerContext(Stream responseStream, bool maintainResponseBody, IWebResponseData response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
}
public class Amazon.Runtime.Internal.Transform.S3UnmarshallerContext : XmlUnmarshallerContext {
    private bool _checkedForErrorResponse;
    public S3UnmarshallerContext(Stream responseStream, bool maintainResponseBody, IWebResponseData responseData);
    public virtual bool Read();
}
internal static class Amazon.Runtime.Internal.Transform.SimpleTypeUnmarshaller`1 : object {
    public static T Unmarshall(XmlUnmarshallerContext context);
    public static T Unmarshall(JsonUnmarshallerContext context);
}
public class Amazon.Runtime.Internal.Transform.StringUnmarshaller : object {
    private static StringUnmarshaller _instance;
    public static StringUnmarshaller Instance { get; }
    private static StringUnmarshaller();
    public static StringUnmarshaller get_Instance();
    public static StringUnmarshaller GetInstance();
    public sealed virtual string Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual string Unmarshall(JsonUnmarshallerContext context);
}
public abstract class Amazon.Runtime.Internal.Transform.UnmarshallerContext : object {
    private bool disposed;
    [CompilerGeneratedAttribute]
private bool <MaintainResponseBody>k__BackingField;
    [CompilerGeneratedAttribute]
private CrcCalculatorStream <CrcStream>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Crc32Result>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebResponseData <WebResponseData>k__BackingField;
    [CompilerGeneratedAttribute]
private CachingWrapperStream <WrappingStream>k__BackingField;
    protected bool MaintainResponseBody { get; protected set; }
    protected CrcCalculatorStream CrcStream { get; protected set; }
    protected int Crc32Result { get; protected set; }
    protected IWebResponseData WebResponseData { get; protected set; }
    protected CachingWrapperStream WrappingStream { get; protected set; }
    public string ResponseBody { get; }
    public IWebResponseData ResponseData { get; }
    public string CurrentPath { get; }
    public int CurrentDepth { get; }
    public bool IsStartElement { get; }
    public bool IsEndElement { get; }
    public bool IsStartOfDocument { get; }
    [CompilerGeneratedAttribute]
protected bool get_MaintainResponseBody();
    [CompilerGeneratedAttribute]
protected void set_MaintainResponseBody(bool value);
    [CompilerGeneratedAttribute]
protected CrcCalculatorStream get_CrcStream();
    [CompilerGeneratedAttribute]
protected void set_CrcStream(CrcCalculatorStream value);
    [CompilerGeneratedAttribute]
protected int get_Crc32Result();
    [CompilerGeneratedAttribute]
protected void set_Crc32Result(int value);
    [CompilerGeneratedAttribute]
protected IWebResponseData get_WebResponseData();
    [CompilerGeneratedAttribute]
protected void set_WebResponseData(IWebResponseData value);
    [CompilerGeneratedAttribute]
protected CachingWrapperStream get_WrappingStream();
    [CompilerGeneratedAttribute]
protected void set_WrappingStream(CachingWrapperStream value);
    public string get_ResponseBody();
    public IWebResponseData get_ResponseData();
    internal void ValidateCRC32IfAvailable();
    protected void SetupCRCStream(IWebResponseData responseData, Stream responseStream, long contentLength);
    public bool TestExpression(string expression);
    public bool TestExpression(string expression, int startingStackDepth);
    public bool ReadAtDepth(int targetDepth);
    private static bool TestExpression(string expression, string currentPath);
    private static bool TestExpression(string expression, int startingStackDepth, string currentPath, int currentDepth);
    public abstract virtual string get_CurrentPath();
    public abstract virtual int get_CurrentDepth();
    public abstract virtual bool Read();
    public abstract virtual string ReadText();
    public abstract virtual bool get_IsStartElement();
    public abstract virtual bool get_IsEndElement();
    public abstract virtual bool get_IsStartOfDocument();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
[ExtensionAttribute]
internal static class Amazon.Runtime.Internal.Transform.UnmarshallerExtensions : object {
    [ExtensionAttribute]
public static void Add(Dictionary`2<K, V> dict, KeyValuePair`2<K, V> item);
}
public class Amazon.Runtime.Internal.Transform.XmlMarshallerContext : MarshallerContext {
    [CompilerGeneratedAttribute]
private XmlWriter <Writer>k__BackingField;
    public XmlWriter Writer { get; private set; }
    public XmlMarshallerContext(IRequest request, XmlWriter writer);
    [CompilerGeneratedAttribute]
public XmlWriter get_Writer();
    [CompilerGeneratedAttribute]
private void set_Writer(XmlWriter value);
}
public abstract class Amazon.Runtime.Internal.Transform.XmlResponseUnmarshaller : ResponseUnmarshaller {
    public virtual AmazonWebServiceResponse Unmarshall(UnmarshallerContext input);
    public virtual AmazonServiceException UnmarshallException(UnmarshallerContext input, Exception innerException, HttpStatusCode statusCode);
    public abstract virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext input);
    public abstract virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext input, Exception innerException, HttpStatusCode statusCode);
    protected virtual UnmarshallerContext ConstructUnmarshallerContext(Stream responseStream, bool maintainResponseBody, IWebResponseData response);
}
public class Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext : UnmarshallerContext {
    private static XmlReaderSettings READER_SETTINGS;
    private static HashSet`1<XmlNodeType> nodesToSkip;
    private StreamReader streamReader;
    private XmlReader _xmlReader;
    private Stack`1<string> stack;
    private string stackString;
    private Dictionary`2<string, string> attributeValues;
    private List`1<string> attributeNames;
    private IEnumerator`1<string> attributeEnumerator;
    private XmlNodeType nodeType;
    private string nodeContent;
    private bool disposed;
    internal Stream Stream { get; }
    private XmlReader XmlReader { get; }
    public string CurrentPath { get; }
    public int CurrentDepth { get; }
    public bool IsStartElement { get; }
    public bool IsEndElement { get; }
    public bool IsStartOfDocument { get; }
    public bool IsAttribute { get; }
    public XmlUnmarshallerContext(Stream responseStream, bool maintainResponseBody, IWebResponseData responseData);
    private static XmlUnmarshallerContext();
    internal Stream get_Stream();
    private XmlReader get_XmlReader();
    public virtual string get_CurrentPath();
    public virtual int get_CurrentDepth();
    public virtual bool Read();
    public virtual string ReadText();
    public virtual bool get_IsStartElement();
    public virtual bool get_IsEndElement();
    public virtual bool get_IsStartOfDocument();
    public bool get_IsAttribute();
    private static string StackToPath(Stack`1<string> stack);
    private void ReadElement();
    protected virtual void Dispose(bool disposing);
}
public class Amazon.Runtime.Internal.Unmarshaller : PipelineHandler {
    private bool _supportsResponseLogging;
    public Unmarshaller(bool supportsResponseLogging);
    public virtual void InvokeSync(IExecutionContext executionContext);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.Runtime.Internal.Unmarshaller/<InvokeAsync>d__0`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    private void Unmarshall(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.Runtime.Internal.Unmarshaller/<UnmarshallAsync>d__5")]
[DebuggerStepThroughAttribute]
private Task UnmarshallAsync(IExecutionContext executionContext);
    private AmazonWebServiceResponse UnmarshallResponse(UnmarshallerContext context, IRequestContext requestContext);
    private static bool ShouldLogResponseBody(bool supportsResponseLogging, IRequestContext requestContext);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod3(IExecutionContext );
}
internal class Amazon.Runtime.Internal.Util.AlwaysSendDictionary`2 : Dictionary`2<TKey, TValue> {
    public AlwaysSendDictionary`2(IEqualityComparer`1<TKey> comparer);
    public AlwaysSendDictionary`2(IDictionary`2<TKey, TValue> dictionary);
}
internal class Amazon.Runtime.Internal.Util.AlwaysSendList`1 : List`1<T> {
    public AlwaysSendList`1(IEnumerable`1<T> collection);
}
public static class Amazon.Runtime.Internal.Util.AsyncHelpers : object {
    public static void RunSync(Func`1<Task> task);
    public static T RunSync(Func`1<Task`1<T>> task);
}
internal class Amazon.Runtime.Internal.Util.BackgroundDispatcher`1 : object {
    private bool isDisposed;
    private Action`1<T> action;
    private Queue`1<T> queue;
    private Thread backgroundThread;
    private AutoResetEvent resetEvent;
    private bool shouldStop;
    [CompilerGeneratedAttribute]
private bool <IsRunning>k__BackingField;
    public bool IsRunning { get; private set; }
    public BackgroundDispatcher`1(Action`1<T> action);
    [CompilerGeneratedAttribute]
public bool get_IsRunning();
    [CompilerGeneratedAttribute]
private void set_IsRunning(bool value);
    protected virtual void Finalize();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    public void Dispatch(T data);
    public void Stop();
    private void Run();
    private void HandleInvoked();
}
internal class Amazon.Runtime.Internal.Util.BackgroundInvoker : BackgroundDispatcher`1<Action> {
    [CompilerGeneratedAttribute]
private static Action`1<Action> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static void <.ctor>b__0(Action action);
}
public class Amazon.Runtime.Internal.Util.CachingWrapperStream : WrapperStream {
    private int _cacheLimit;
    private int _cachedBytes;
    [CompilerGeneratedAttribute]
private List`1<byte> <AllReadBytes>k__BackingField;
    public List`1<byte> AllReadBytes { get; private set; }
    public bool CanSeek { get; }
    public long Position { get; public set; }
    public CachingWrapperStream(Stream baseStream, int cacheLimit);
    [CompilerGeneratedAttribute]
public List`1<byte> get_AllReadBytes();
    [CompilerGeneratedAttribute]
private void set_AllReadBytes(List`1<byte> value);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual bool get_CanSeek();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual long Seek(long offset, SeekOrigin origin);
}
public class Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream : WrapperStream {
    private static string CLRF;
    private static string CHUNK_STRING_TO_SIGN_PREFIX;
    private static string CHUNK_SIGNATURE_HEADER;
    private static int SIGNATURE_LENGTH;
    public static int DefaultChunkSize;
    private Byte[] _inputBuffer;
    private Byte[] _outputBuffer;
    private int _outputBufferPos;
    private int _outputBufferDataLen;
    private int _wrappedStreamBufferSize;
    private bool _wrappedStreamConsumed;
    private bool _outputBufferIsTerminatingChunk;
    private ReadStrategy _readStrategy;
    [CompilerGeneratedAttribute]
private AWS4SigningResult <HeaderSigningResult>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreviousChunkSignature>k__BackingField;
    private AWS4SigningResult HeaderSigningResult { get; private set; }
    private string PreviousChunkSignature { get; private set; }
    public long Length { get; }
    public bool CanSeek { get; }
    internal ChunkedUploadWrapperStream(Stream stream, int wrappedStreamBufferSize, AWS4SigningResult headerSigningResult);
    private static ChunkedUploadWrapperStream();
    public virtual int Read(Byte[] buffer, int offset, int count);
    [CompilerGeneratedAttribute]
private AWS4SigningResult get_HeaderSigningResult();
    [CompilerGeneratedAttribute]
private void set_HeaderSigningResult(AWS4SigningResult value);
    [CompilerGeneratedAttribute]
private string get_PreviousChunkSignature();
    [CompilerGeneratedAttribute]
private void set_PreviousChunkSignature(string value);
    private void ConstructOutputBufferChunk(int dataLen);
    public virtual long get_Length();
    public virtual bool get_CanSeek();
    public static long ComputeChunkedContentLength(long originalLength);
    private static long CalculateChunkHeaderLength(long chunkDataSize);
    private int FillInputBuffer();
}
internal class Amazon.Runtime.Internal.Util.EventStream : WrapperStream {
    private ReadProgress OnRead;
    private bool disableClose;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanTimeout { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public int ReadTimeout { get; public set; }
    public int WriteTimeout { get; public set; }
    internal EventStream(Stream stream, bool disableClose);
    internal void add_OnRead(ReadProgress value);
    internal void remove_OnRead(ReadProgress value);
    protected virtual void Dispose(bool disposing);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanTimeout();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int value);
    public virtual int get_WriteTimeout();
    public virtual void set_WriteTimeout(int value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void WriteByte(byte value);
    public virtual IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual void Close();
    public virtual int EndRead(IAsyncResult asyncResult);
    public virtual void EndWrite(IAsyncResult asyncResult);
}
[ExtensionAttribute]
internal static class Amazon.Runtime.Internal.Util.Extensions : object {
    private static long ticksPerSecond;
    private static double tickFrequency;
    private static Extensions();
    [ExtensionAttribute]
public static long GetElapsedDateTimeTicks(Stopwatch self);
    [ExtensionAttribute]
public static bool HasRequestData(IRequest request);
}
public static class Amazon.Runtime.Internal.Util.Hashing : object {
    public static int Hash(Object[] value);
    public static int CombineHashes(Int32[] hashes);
    private static int CombineHashesInternal(int a, int b);
}
public class Amazon.Runtime.Internal.Util.HashingWrapperMD5 : object {
    private MD5Managed algorithm;
    public sealed virtual void Clear();
    public sealed virtual Byte[] ComputeHash(Byte[] buffer);
    public sealed virtual Byte[] ComputeHash(Stream stream);
    public sealed virtual void AppendBlock(Byte[] buffer, int offset, int count);
    public sealed virtual Byte[] AppendLastBlock(Byte[] buffer, int offset, int count);
    public sealed virtual void AppendBlock(Byte[] buffer);
    public sealed virtual Byte[] AppendLastBlock(Byte[] buffer);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
public abstract class Amazon.Runtime.Internal.Util.HashStream : WrapperStream {
    [CompilerGeneratedAttribute]
private IHashingWrapper <Algorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CurrentPosition>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <CalculatedHash>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ExpectedHash>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ExpectedLength>k__BackingField;
    protected IHashingWrapper Algorithm { get; protected set; }
    protected bool FinishedHashing { get; }
    protected long CurrentPosition { get; private set; }
    public Byte[] CalculatedHash { get; private set; }
    public Byte[] ExpectedHash { get; private set; }
    public long ExpectedLength { get; protected set; }
    public bool CanSeek { get; }
    public long Position { get; public set; }
    public long Length { get; }
    protected HashStream(Stream baseStream, Byte[] expectedHash, long expectedLength);
    [CompilerGeneratedAttribute]
protected IHashingWrapper get_Algorithm();
    [CompilerGeneratedAttribute]
protected void set_Algorithm(IHashingWrapper value);
    protected bool get_FinishedHashing();
    [CompilerGeneratedAttribute]
protected long get_CurrentPosition();
    [CompilerGeneratedAttribute]
private void set_CurrentPosition(long value);
    [CompilerGeneratedAttribute]
public Byte[] get_CalculatedHash();
    [CompilerGeneratedAttribute]
private void set_CalculatedHash(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_ExpectedHash();
    [CompilerGeneratedAttribute]
private void set_ExpectedHash(Byte[] value);
    [CompilerGeneratedAttribute]
public long get_ExpectedLength();
    [CompilerGeneratedAttribute]
protected void set_ExpectedLength(long value);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual void Close();
    protected virtual void Dispose(bool disposing);
    public virtual bool get_CanSeek();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual long get_Length();
    public void CalculateHash();
    public void Reset();
    private void ValidateBaseStream();
    private static bool CompareHashes(Byte[] expected, Byte[] actual);
}
public class Amazon.Runtime.Internal.Util.HashStream`1 : HashStream {
    public HashStream`1(Stream baseStream, Byte[] expectedHash, long expectedLength);
}
public interface Amazon.Runtime.Internal.Util.IHashingWrapper {
    public abstract virtual void Clear();
    public abstract virtual Byte[] ComputeHash(Byte[] buffer);
    public abstract virtual Byte[] ComputeHash(Stream stream);
    public abstract virtual void AppendBlock(Byte[] buffer);
    public abstract virtual void AppendBlock(Byte[] buffer, int offset, int count);
    public abstract virtual Byte[] AppendLastBlock(Byte[] buffer);
    public abstract virtual Byte[] AppendLastBlock(Byte[] buffer, int offset, int count);
}
public interface Amazon.Runtime.Internal.Util.ILogger {
    public abstract virtual void InfoFormat(string messageFormat, Object[] args);
    public abstract virtual void Debug(Exception exception, string messageFormat, Object[] args);
    public abstract virtual void DebugFormat(string messageFormat, Object[] args);
    public abstract virtual void Error(Exception exception, string messageFormat, Object[] args);
    public abstract virtual void Flush();
}
internal class Amazon.Runtime.Internal.Util.InternalLog4netLogger : InternalLogger {
    private static LoadState loadState;
    private static object LOCK;
    private static Type logMangerType;
    private static ITypeInfo logMangerTypeInfo;
    private static MethodInfo getLoggerWithTypeMethod;
    private static Type logType;
    private static ITypeInfo logTypeInfo;
    private static MethodInfo logMethod;
    private static Type levelType;
    private static ITypeInfo levelTypeInfo;
    private static object debugLevelPropertyValue;
    private static object infoLevelPropertyValue;
    private static object errorLevelPropertyValue;
    private static MethodInfo isEnabledForMethod;
    private static Type systemStringFormatType;
    private static Type loggerType;
    private object internalLogger;
    private Nullable`1<bool> isErrorEnabled;
    private Nullable`1<bool> isDebugEnabled;
    private Nullable`1<bool> isInfoEnabled;
    public bool IsErrorEnabled { get; }
    public bool IsDebugEnabled { get; }
    public bool IsInfoEnabled { get; }
    public InternalLog4netLogger(Type declaringType);
    private static InternalLog4netLogger();
    private static void loadStatics();
    public virtual void Flush();
    public virtual bool get_IsErrorEnabled();
    public virtual void Error(Exception exception, string messageFormat, Object[] args);
    public virtual bool get_IsDebugEnabled();
    public virtual void Debug(Exception exception, string messageFormat, Object[] args);
    public virtual void DebugFormat(string message, Object[] arguments);
    public virtual bool get_IsInfoEnabled();
    public virtual void InfoFormat(string message, Object[] arguments);
}
internal abstract class Amazon.Runtime.Internal.Util.InternalLogger : object {
    [CompilerGeneratedAttribute]
private Type <DeclaringType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public Type DeclaringType { get; private set; }
    public bool IsEnabled { get; public set; }
    public bool IsErrorEnabled { get; }
    public bool IsDebugEnabled { get; }
    public bool IsInfoEnabled { get; }
    public InternalLogger(Type declaringType);
    [CompilerGeneratedAttribute]
public Type get_DeclaringType();
    [CompilerGeneratedAttribute]
private void set_DeclaringType(Type value);
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
    public abstract virtual void Flush();
    public virtual bool get_IsErrorEnabled();
    public virtual bool get_IsDebugEnabled();
    public virtual bool get_IsInfoEnabled();
    public abstract virtual void Error(Exception exception, string messageFormat, Object[] args);
    public abstract virtual void Debug(Exception exception, string messageFormat, Object[] args);
    public abstract virtual void DebugFormat(string message, Object[] arguments);
    public abstract virtual void InfoFormat(string message, Object[] arguments);
}
public class Amazon.Runtime.Internal.Util.Logger : object {
    private static IDictionary`2<Type, Logger> cachedLoggers;
    private List`1<InternalLogger> loggers;
    private static Logger emptyLogger;
    public static Logger EmptyLogger { get; }
    private Logger(Type type);
    private static Logger();
    private void ConfigsChanged(object sender, PropertyChangedEventArgs e);
    private void ConfigureLoggers();
    public static Logger GetLogger(Type type);
    public static void ClearLoggerCache();
    public static Logger get_EmptyLogger();
    public sealed virtual void Flush();
    public sealed virtual void Error(Exception exception, string messageFormat, Object[] args);
    public sealed virtual void Debug(Exception exception, string messageFormat, Object[] args);
    public sealed virtual void DebugFormat(string messageFormat, Object[] args);
    public sealed virtual void InfoFormat(string messageFormat, Object[] args);
}
public class Amazon.Runtime.Internal.Util.LogMessage : object {
    [CompilerGeneratedAttribute]
private Object[] <Args>k__BackingField;
    [CompilerGeneratedAttribute]
private IFormatProvider <Provider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    public Object[] Args { get; private set; }
    public IFormatProvider Provider { get; private set; }
    public string Format { get; private set; }
    public LogMessage(string message);
    public LogMessage(string format, Object[] args);
    public LogMessage(IFormatProvider provider, string format, Object[] args);
    [CompilerGeneratedAttribute]
public Object[] get_Args();
    [CompilerGeneratedAttribute]
private void set_Args(Object[] value);
    [CompilerGeneratedAttribute]
public IFormatProvider get_Provider();
    [CompilerGeneratedAttribute]
private void set_Provider(IFormatProvider value);
    [CompilerGeneratedAttribute]
public string get_Format();
    [CompilerGeneratedAttribute]
private void set_Format(string value);
    public virtual string ToString();
}
public class Amazon.Runtime.Internal.Util.MD5Stream : HashStream`1<HashingWrapperMD5> {
    public MD5Stream(Stream baseStream, Byte[] expectedHash, long expectedLength);
}
internal class Amazon.Runtime.Internal.Util.MetricError : object {
    [CompilerGeneratedAttribute]
private Metric <Metric>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Time>k__BackingField;
    public Metric Metric { get; private set; }
    public string Message { get; private set; }
    public Exception Exception { get; private set; }
    public DateTime Time { get; private set; }
    public MetricError(Metric metric, string messageFormat, Object[] args);
    public MetricError(Metric metric, Exception exception, string messageFormat, Object[] args);
    [CompilerGeneratedAttribute]
public Metric get_Metric();
    [CompilerGeneratedAttribute]
private void set_Metric(Metric value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
private void set_Exception(Exception value);
    [CompilerGeneratedAttribute]
public DateTime get_Time();
    [CompilerGeneratedAttribute]
private void set_Time(DateTime value);
}
public class Amazon.Runtime.Internal.Util.NonDisposingWrapperStream : WrapperStream {
    public NonDisposingWrapperStream(Stream baseStream);
    public virtual void Close();
    protected virtual void Dispose(bool disposing);
}
public class Amazon.Runtime.Internal.Util.PartialReadOnlyWrapperStream : ReadOnlyWrapperStream {
    private long _currentPosition;
    private long _size;
    private long RemainingSize { get; }
    public long Length { get; }
    public long Position { get; }
    public PartialReadOnlyWrapperStream(Stream baseStream, long size);
    private long get_RemainingSize();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long get_Length();
    public virtual long get_Position();
}
public class Amazon.Runtime.Internal.Util.PartialWrapperStream : WrapperStream {
    private long initialPosition;
    private long partSize;
    private long RemainingPartSize { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal PartialWrapperStream(Stream stream, long partSize);
    private long get_RemainingPartSize();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void WriteByte(byte value);
    public virtual IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual int EndRead(IAsyncResult asyncResult);
    public virtual void EndWrite(IAsyncResult asyncResult);
}
public class Amazon.Runtime.Internal.Util.ReadOnlyWrapperStream : WrapperStream {
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public ReadOnlyWrapperStream(Stream baseStream);
    public virtual IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual void EndWrite(IAsyncResult asyncResult);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void SetLength(long value);
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
}
public class Amazon.Runtime.Internal.Util.RequestMetrics : object {
    private object metricsLock;
    private Stopwatch stopWatch;
    private Dictionary`2<Metric, Timing> inFlightTimings;
    private List`1<MetricError> errors;
    [CompilerGeneratedAttribute]
private Dictionary`2<Metric, List`1<object>> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<Metric, List`1<IMetricsTiming>> <Timings>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<Metric, long> <Counters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<Metric, string> CS$<>9__CachedAnonymousMethodDelegate7;
    private long CurrentTime { get; }
    public Dictionary`2<Metric, List`1<object>> Properties { get; public set; }
    public Dictionary`2<Metric, List`1<IMetricsTiming>> Timings { get; public set; }
    public Dictionary`2<Metric, long> Counters { get; public set; }
    public bool IsEnabled { get; internal set; }
    private long get_CurrentTime();
    private void LogError_Locked(Metric metric, string messageFormat, Object[] args);
    private static void Log(StringBuilder builder, Metric metric, object metricValue);
    private static void Log(StringBuilder builder, Metric metric, List`1<object> metricValues);
    private static void LogHelper(StringBuilder builder, Metric metric, Object[] metricValues);
    private static string ObjectToString(object data);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<Metric, List`1<object>> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<Metric, List`1<object>> value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<Metric, List`1<IMetricsTiming>> get_Timings();
    [CompilerGeneratedAttribute]
public void set_Timings(Dictionary`2<Metric, List`1<IMetricsTiming>> value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<Metric, long> get_Counters();
    [CompilerGeneratedAttribute]
public void set_Counters(Dictionary`2<Metric, long> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsEnabled();
    [CompilerGeneratedAttribute]
internal void set_IsEnabled(bool value);
    internal TimingEvent StartEvent(Metric metric);
    internal Timing StopEvent(Metric metric);
    internal void AddProperty(Metric metric, object property);
    internal void SetCounter(Metric metric, long value);
    internal void IncrementCounter(Metric metric);
    internal string GetErrors();
    public virtual string ToString();
    public sealed virtual string ToJSON();
    [CompilerGeneratedAttribute]
private static string <GetErrors>b__6(Metric k);
}
public static class Amazon.Runtime.Internal.Util.StringUtils : object {
    public static string FromString(string value);
    public static string FromString(ConstantClass value);
    public static string FromMemoryStream(MemoryStream value);
    public static string FromInt(int value);
    public static string FromInt(Nullable`1<int> value);
    public static string FromLong(long value);
    public static string FromBool(bool value);
    public static string FromDateTime(DateTime value);
    public static string FromDouble(double value);
}
internal class Amazon.Runtime.Internal.Util.Timing : object {
    private long startTime;
    private long endTime;
    [CompilerGeneratedAttribute]
private bool <IsFinished>k__BackingField;
    public bool IsFinished { get; private set; }
    public long ElapsedTicks { get; }
    public TimeSpan ElapsedTime { get; }
    public Timing(long currentTime);
    public void Stop(long currentTime);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsFinished();
    [CompilerGeneratedAttribute]
private void set_IsFinished(bool value);
    public sealed virtual long get_ElapsedTicks();
    public sealed virtual TimeSpan get_ElapsedTime();
}
internal class Amazon.Runtime.Internal.Util.TimingEvent : object {
    private Metric metric;
    private RequestMetrics metrics;
    private bool disposed;
    internal TimingEvent(RequestMetrics metrics, Metric metric);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    protected virtual void Finalize();
}
public class Amazon.Runtime.Internal.Util.WrapperStream : Stream {
    [CompilerGeneratedAttribute]
private Stream <BaseStream>k__BackingField;
    protected Stream BaseStream { get; private set; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public int ReadTimeout { get; public set; }
    public int WriteTimeout { get; public set; }
    public WrapperStream(Stream baseStream);
    [CompilerGeneratedAttribute]
protected Stream get_BaseStream();
    [CompilerGeneratedAttribute]
private void set_BaseStream(Stream value);
    public Stream GetNonWrapperBaseStream();
    public Stream GetSeekableBaseStream();
    public static Stream GetNonWrapperBaseStream(Stream stream);
    public Stream SearchWrappedStream(Func`2<Stream, bool> condition);
    public static Stream SearchWrappedStream(Stream stream, Func`2<Stream, bool> condition);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual void Close();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int value);
    public virtual int get_WriteTimeout();
    public virtual void set_WriteTimeout(int value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
}
public class Amazon.Runtime.Internal.WebExceptionHandler : ExceptionHandler`1<WebException> {
    public WebExceptionHandler(ILogger logger);
    public virtual bool HandleException(IExecutionContext executionContext, WebException exception);
}
public interface Amazon.Runtime.IPipelineHandler {
    public ILogger Logger { get; public set; }
    public IPipelineHandler InnerHandler { get; public set; }
    public IPipelineHandler OuterHandler { get; public set; }
    public abstract virtual ILogger get_Logger();
    public abstract virtual void set_Logger(ILogger value);
    public abstract virtual IPipelineHandler get_InnerHandler();
    public abstract virtual void set_InnerHandler(IPipelineHandler value);
    public abstract virtual IPipelineHandler get_OuterHandler();
    public abstract virtual void set_OuterHandler(IPipelineHandler value);
    public abstract virtual void InvokeSync(IExecutionContext executionContext);
    public abstract virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
}
public interface Amazon.Runtime.IRequestContext {
    public AmazonWebServiceRequest OriginalRequest { get; }
    public string RequestName { get; }
    public IMarshaller`2<IRequest, AmazonWebServiceRequest> Marshaller { get; }
    public ResponseUnmarshaller Unmarshaller { get; }
    public RequestMetrics Metrics { get; }
    public AbstractAWSSigner Signer { get; }
    public ClientConfig ClientConfig { get; }
    public ImmutableCredentials ImmutableCredentials { get; public set; }
    public IRequest Request { get; public set; }
    public bool IsSigned { get; public set; }
    public bool IsAsync { get; }
    public int Retries { get; public set; }
    public CancellationToken CancellationToken { get; }
    public abstract virtual AmazonWebServiceRequest get_OriginalRequest();
    public abstract virtual string get_RequestName();
    public abstract virtual IMarshaller`2<IRequest, AmazonWebServiceRequest> get_Marshaller();
    public abstract virtual ResponseUnmarshaller get_Unmarshaller();
    public abstract virtual RequestMetrics get_Metrics();
    public abstract virtual AbstractAWSSigner get_Signer();
    public abstract virtual ClientConfig get_ClientConfig();
    public abstract virtual ImmutableCredentials get_ImmutableCredentials();
    public abstract virtual void set_ImmutableCredentials(ImmutableCredentials value);
    public abstract virtual IRequest get_Request();
    public abstract virtual void set_Request(IRequest value);
    public abstract virtual bool get_IsSigned();
    public abstract virtual void set_IsSigned(bool value);
    public abstract virtual bool get_IsAsync();
    public abstract virtual int get_Retries();
    public abstract virtual void set_Retries(int value);
    public abstract virtual CancellationToken get_CancellationToken();
}
public interface Amazon.Runtime.IRequestMetrics {
    public Dictionary`2<Metric, List`1<object>> Properties { get; }
    public Dictionary`2<Metric, List`1<IMetricsTiming>> Timings { get; }
    public Dictionary`2<Metric, long> Counters { get; }
    public bool IsEnabled { get; }
    public abstract virtual Dictionary`2<Metric, List`1<object>> get_Properties();
    public abstract virtual Dictionary`2<Metric, List`1<IMetricsTiming>> get_Timings();
    public abstract virtual Dictionary`2<Metric, long> get_Counters();
    public abstract virtual bool get_IsEnabled();
    public abstract virtual string ToJSON();
}
public interface Amazon.Runtime.IResponseContext {
    public AmazonWebServiceResponse Response { get; public set; }
    public IWebResponseData HttpResponse { get; public set; }
    public abstract virtual AmazonWebServiceResponse get_Response();
    public abstract virtual void set_Response(AmazonWebServiceResponse value);
    public abstract virtual IWebResponseData get_HttpResponse();
    public abstract virtual void set_HttpResponse(IWebResponseData value);
}
public enum Amazon.Runtime.Metric : Enum {
    public int value__;
    public static Metric AWSErrorCode;
    public static Metric AWSRequestID;
    public static Metric AmzId2;
    public static Metric BytesProcessed;
    public static Metric Exception;
    public static Metric RedirectLocation;
    public static Metric ResponseProcessingTime;
    public static Metric ResponseUnmarshallTime;
    public static Metric ResponseReadTime;
    public static Metric StatusCode;
    public static Metric AttemptCount;
    public static Metric CredentialsRequestTime;
    public static Metric HttpRequestTime;
    public static Metric ProxyHost;
    public static Metric ProxyPort;
    public static Metric RequestSigningTime;
    public static Metric RetryPauseTime;
    public static Metric StringToSign;
    public static Metric CanonicalRequest;
    public static Metric AsyncCall;
    public static Metric ClientExecuteTime;
    public static Metric MethodName;
    public static Metric ServiceEndpoint;
    public static Metric ServiceName;
    public static Metric RequestSize;
}
public class Amazon.Runtime.PreRequestEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private AmazonWebServiceRequest <Request>k__BackingField;
    public AmazonWebServiceRequest Request { get; protected set; }
    [CompilerGeneratedAttribute]
public AmazonWebServiceRequest get_Request();
    [CompilerGeneratedAttribute]
protected void set_Request(AmazonWebServiceRequest value);
    internal static PreRequestEventArgs Create(AmazonWebServiceRequest request);
}
public class Amazon.Runtime.PreRequestEventHandler : MulticastDelegate {
    public PreRequestEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, PreRequestEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, PreRequestEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public abstract class Amazon.Runtime.RefreshingAWSCredentials : AWSCredentials {
    private CredentialsRefreshState _currentState;
    private object _refreshLock;
    private TimeSpan _preemptExpiryTime;
    public TimeSpan PreemptExpiryTime { get; public set; }
    private bool ShouldUpdate { get; }
    public TimeSpan get_PreemptExpiryTime();
    public void set_PreemptExpiryTime(TimeSpan value);
    public virtual ImmutableCredentials GetCredentials();
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.Runtime.RefreshingAWSCredentials/<GetCredentialsAsync>d__2")]
public virtual Task`1<ImmutableCredentials> GetCredentialsAsync();
    private void UpdateToGeneratedCredentials(CredentialsRefreshState state);
    private bool get_ShouldUpdate();
    protected virtual CredentialsRefreshState GenerateNewCredentials();
    protected virtual Task`1<CredentialsRefreshState> GenerateNewCredentialsAsync();
    protected void ClearCredentials();
    [CompilerGeneratedAttribute]
private CredentialsRefreshState <GenerateNewCredentialsAsync>b__7();
}
public class Amazon.Runtime.RequestEventArgs : EventArgs {
}
public class Amazon.Runtime.RequestEventHandler : MulticastDelegate {
    public RequestEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, RequestEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, RequestEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Amazon.Runtime.ResponseEventArgs : EventArgs {
}
public class Amazon.Runtime.ResponseEventHandler : MulticastDelegate {
    public ResponseEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, ResponseEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, ResponseEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Amazon.Runtime.ResponseMetadata : object {
    private string requestIdField;
    private IDictionary`2<string, string> _metadata;
    public string RequestId { get; public set; }
    public IDictionary`2<string, string> Metadata { get; }
    public string get_RequestId();
    public void set_RequestId(string value);
    public IDictionary`2<string, string> get_Metadata();
}
public abstract class Amazon.Runtime.RetryPolicy : object {
    private static string dateHeaderName;
    private static string clockSkewMessageFormat;
    private static string clockSkewUpdatedFormat;
    private static string clockSkewMessageParen;
    private static string clockSkewMessagePlusSeparator;
    private static string clockSkewMessageMinusSeparator;
    private static HashSet`1<string> clockSkewErrorCodes;
    private static TimeSpan clockSkewMaxThreshold;
    [CompilerGeneratedAttribute]
private int <MaxRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    public int MaxRetries { get; protected set; }
    public ILogger Logger { get; public set; }
    private static RetryPolicy();
    [CompilerGeneratedAttribute]
public int get_MaxRetries();
    [CompilerGeneratedAttribute]
protected void set_MaxRetries(int value);
    [CompilerGeneratedAttribute]
public ILogger get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger value);
    public bool Retry(IExecutionContext executionContext, Exception exception);
    public abstract virtual bool CanRetry(IExecutionContext executionContext);
    public abstract virtual bool RetryForException(IExecutionContext executionContext, Exception exception);
    public abstract virtual bool RetryLimitReached(IExecutionContext executionContext);
    public abstract virtual void WaitBeforeRetry(IExecutionContext executionContext);
    private bool RetryForExceptionHelper(IExecutionContext executionContext, Exception exception);
    private bool IsClockskew(IExecutionContext executionContext, Exception exception);
    private static bool TryParseDateHeader(AmazonServiceException ase, DateTime& serverTime);
    private static bool TryParseExceptionMessage(AmazonServiceException ase, DateTime& serverTime);
    private static IWebResponseData GetWebData(AmazonServiceException ase);
}
public class Amazon.Runtime.SessionAWSCredentials : AWSCredentials {
    private ImmutableCredentials _lastCredentials;
    public SessionAWSCredentials(string awsAccessKeyId, string awsSecretAccessKey, string token);
    public virtual ImmutableCredentials GetCredentials();
}
public class Amazon.Runtime.SignatureException : SignatureException {
    public SignatureException(string message);
    public SignatureException(string message, Exception innerException);
}
public enum Amazon.Runtime.SigningAlgorithm : Enum {
    public int value__;
    public static SigningAlgorithm HmacSHA1;
    public static SigningAlgorithm HmacSHA256;
}
public class Amazon.Runtime.StreamTransferProgressArgs : EventArgs {
    private long _incrementTransferred;
    private long _total;
    private long _transferred;
    public int PercentDone { get; }
    internal long IncrementTransferred { get; }
    public long TransferredBytes { get; }
    public long TotalBytes { get; }
    public StreamTransferProgressArgs(long incrementTransferred, long transferred, long total);
    public int get_PercentDone();
    internal long get_IncrementTransferred();
    public long get_TransferredBytes();
    public long get_TotalBytes();
    public virtual string ToString();
}
public class Amazon.Runtime.WebServiceExceptionEventArgs : ExceptionEventArgs {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private AmazonWebServiceRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public IDictionary`2<string, string> Headers { get; protected set; }
    public IDictionary`2<string, string> Parameters { get; protected set; }
    public string ServiceName { get; protected set; }
    public Uri Endpoint { get; protected set; }
    public AmazonWebServiceRequest Request { get; protected set; }
    public Exception Exception { get; protected set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
protected void set_Headers(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Parameters();
    [CompilerGeneratedAttribute]
protected void set_Parameters(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
protected void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public Uri get_Endpoint();
    [CompilerGeneratedAttribute]
protected void set_Endpoint(Uri value);
    [CompilerGeneratedAttribute]
public AmazonWebServiceRequest get_Request();
    [CompilerGeneratedAttribute]
protected void set_Request(AmazonWebServiceRequest value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
protected void set_Exception(Exception value);
    internal static WebServiceExceptionEventArgs Create(Exception exception, IRequest request);
}
public class Amazon.Runtime.WebServiceRequestEventArgs : RequestEventArgs {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private AmazonWebServiceRequest <Request>k__BackingField;
    public IDictionary`2<string, string> Headers { get; protected set; }
    public IDictionary`2<string, string> Parameters { get; protected set; }
    public string ServiceName { get; protected set; }
    public Uri Endpoint { get; protected set; }
    public AmazonWebServiceRequest Request { get; protected set; }
    [ObsoleteAttribute("OriginalRequest property has been deprecated in favor of the Request property")]
public AmazonWebServiceRequest OriginalRequest { get; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
protected void set_Headers(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Parameters();
    [CompilerGeneratedAttribute]
protected void set_Parameters(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
protected void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public Uri get_Endpoint();
    [CompilerGeneratedAttribute]
protected void set_Endpoint(Uri value);
    [CompilerGeneratedAttribute]
public AmazonWebServiceRequest get_Request();
    [CompilerGeneratedAttribute]
protected void set_Request(AmazonWebServiceRequest value);
    public AmazonWebServiceRequest get_OriginalRequest();
    internal static WebServiceRequestEventArgs Create(IRequest request);
}
public class Amazon.Runtime.WebServiceResponseEventArgs : ResponseEventArgs {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <RequestHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <ResponseHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private AmazonWebServiceRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private AmazonWebServiceResponse <Response>k__BackingField;
    public IDictionary`2<string, string> RequestHeaders { get; private set; }
    public IDictionary`2<string, string> ResponseHeaders { get; private set; }
    public IDictionary`2<string, string> Parameters { get; private set; }
    public string ServiceName { get; private set; }
    public Uri Endpoint { get; private set; }
    public AmazonWebServiceRequest Request { get; private set; }
    public AmazonWebServiceResponse Response { get; private set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_RequestHeaders();
    [CompilerGeneratedAttribute]
private void set_RequestHeaders(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_ResponseHeaders();
    [CompilerGeneratedAttribute]
private void set_ResponseHeaders(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Parameters();
    [CompilerGeneratedAttribute]
private void set_Parameters(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
private void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public Uri get_Endpoint();
    [CompilerGeneratedAttribute]
private void set_Endpoint(Uri value);
    [CompilerGeneratedAttribute]
public AmazonWebServiceRequest get_Request();
    [CompilerGeneratedAttribute]
private void set_Request(AmazonWebServiceRequest value);
    [CompilerGeneratedAttribute]
public AmazonWebServiceResponse get_Response();
    [CompilerGeneratedAttribute]
private void set_Response(AmazonWebServiceResponse value);
    internal static WebServiceResponseEventArgs Create(AmazonWebServiceResponse response, IRequest request, IWebResponseData webResponseData);
}
public class Amazon.S3.AmazonS3Client : AmazonServiceClient {
    public AmazonS3Client(AWSCredentials credentials);
    public AmazonS3Client(AWSCredentials credentials, RegionEndpoint region);
    public AmazonS3Client(AWSCredentials credentials, AmazonS3Config clientConfig);
    public AmazonS3Client(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonS3Client(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonS3Client(string awsAccessKeyId, string awsSecretAccessKey, AmazonS3Config clientConfig);
    public AmazonS3Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonS3Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonS3Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonS3Config clientConfig);
    public sealed virtual string GetPreSignedURL(GetPreSignedUrlRequest request);
    private static IRequest Marshall(GetPreSignedUrlRequest getPreSignedUrlRequest, string accessKey, string token, bool aws4Signing);
    private Protocol DetermineProtocol();
    internal void ConfigureProxy(HttpWebRequest httpRequest);
    internal static void CleanupRequest(IRequest request);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual void Dispose(bool disposing);
    internal AbortMultipartUploadResponse AbortMultipartUpload(AbortMultipartUploadRequest request);
    public sealed virtual Task`1<AbortMultipartUploadResponse> AbortMultipartUploadAsync(AbortMultipartUploadRequest request, CancellationToken cancellationToken);
    internal CompleteMultipartUploadResponse CompleteMultipartUpload(CompleteMultipartUploadRequest request);
    public sealed virtual Task`1<CompleteMultipartUploadResponse> CompleteMultipartUploadAsync(CompleteMultipartUploadRequest request, CancellationToken cancellationToken);
    internal CopyObjectResponse CopyObject(CopyObjectRequest request);
    public sealed virtual Task`1<CopyObjectResponse> CopyObjectAsync(CopyObjectRequest request, CancellationToken cancellationToken);
    internal CopyPartResponse CopyPart(CopyPartRequest request);
    public sealed virtual Task`1<CopyPartResponse> CopyPartAsync(CopyPartRequest request, CancellationToken cancellationToken);
    internal DeleteBucketResponse DeleteBucket(DeleteBucketRequest request);
    public sealed virtual Task`1<DeleteBucketResponse> DeleteBucketAsync(DeleteBucketRequest request, CancellationToken cancellationToken);
    internal DeleteBucketPolicyResponse DeleteBucketPolicy(DeleteBucketPolicyRequest request);
    public sealed virtual Task`1<DeleteBucketPolicyResponse> DeleteBucketPolicyAsync(DeleteBucketPolicyRequest request, CancellationToken cancellationToken);
    internal DeleteBucketReplicationResponse DeleteBucketReplication(DeleteBucketReplicationRequest request);
    public sealed virtual Task`1<DeleteBucketReplicationResponse> DeleteBucketReplicationAsync(DeleteBucketReplicationRequest request, CancellationToken cancellationToken);
    internal DeleteBucketTaggingResponse DeleteBucketTagging(DeleteBucketTaggingRequest request);
    public sealed virtual Task`1<DeleteBucketTaggingResponse> DeleteBucketTaggingAsync(DeleteBucketTaggingRequest request, CancellationToken cancellationToken);
    internal DeleteBucketWebsiteResponse DeleteBucketWebsite(DeleteBucketWebsiteRequest request);
    public sealed virtual Task`1<DeleteBucketWebsiteResponse> DeleteBucketWebsiteAsync(DeleteBucketWebsiteRequest request, CancellationToken cancellationToken);
    internal DeleteCORSConfigurationResponse DeleteCORSConfiguration(DeleteCORSConfigurationRequest request);
    public sealed virtual Task`1<DeleteCORSConfigurationResponse> DeleteCORSConfigurationAsync(DeleteCORSConfigurationRequest request, CancellationToken cancellationToken);
    internal DeleteLifecycleConfigurationResponse DeleteLifecycleConfiguration(DeleteLifecycleConfigurationRequest request);
    public sealed virtual Task`1<DeleteLifecycleConfigurationResponse> DeleteLifecycleConfigurationAsync(DeleteLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    internal DeleteObjectResponse DeleteObject(DeleteObjectRequest request);
    public sealed virtual Task`1<DeleteObjectResponse> DeleteObjectAsync(DeleteObjectRequest request, CancellationToken cancellationToken);
    internal DeleteObjectsResponse DeleteObjects(DeleteObjectsRequest request);
    public sealed virtual Task`1<DeleteObjectsResponse> DeleteObjectsAsync(DeleteObjectsRequest request, CancellationToken cancellationToken);
    internal GetACLResponse GetACL(GetACLRequest request);
    public sealed virtual Task`1<GetACLResponse> GetACLAsync(GetACLRequest request, CancellationToken cancellationToken);
    internal GetBucketLocationResponse GetBucketLocation(GetBucketLocationRequest request);
    public sealed virtual Task`1<GetBucketLocationResponse> GetBucketLocationAsync(GetBucketLocationRequest request, CancellationToken cancellationToken);
    internal GetBucketLoggingResponse GetBucketLogging(GetBucketLoggingRequest request);
    public sealed virtual Task`1<GetBucketLoggingResponse> GetBucketLoggingAsync(GetBucketLoggingRequest request, CancellationToken cancellationToken);
    internal GetBucketNotificationResponse GetBucketNotification(GetBucketNotificationRequest request);
    public sealed virtual Task`1<GetBucketNotificationResponse> GetBucketNotificationAsync(GetBucketNotificationRequest request, CancellationToken cancellationToken);
    internal GetBucketPolicyResponse GetBucketPolicy(GetBucketPolicyRequest request);
    public sealed virtual Task`1<GetBucketPolicyResponse> GetBucketPolicyAsync(GetBucketPolicyRequest request, CancellationToken cancellationToken);
    internal GetBucketReplicationResponse GetBucketReplication(GetBucketReplicationRequest request);
    public sealed virtual Task`1<GetBucketReplicationResponse> GetBucketReplicationAsync(GetBucketReplicationRequest request, CancellationToken cancellationToken);
    internal GetBucketRequestPaymentResponse GetBucketRequestPayment(GetBucketRequestPaymentRequest request);
    public sealed virtual Task`1<GetBucketRequestPaymentResponse> GetBucketRequestPaymentAsync(GetBucketRequestPaymentRequest request, CancellationToken cancellationToken);
    internal GetBucketTaggingResponse GetBucketTagging(GetBucketTaggingRequest request);
    public sealed virtual Task`1<GetBucketTaggingResponse> GetBucketTaggingAsync(GetBucketTaggingRequest request, CancellationToken cancellationToken);
    internal GetBucketVersioningResponse GetBucketVersioning(GetBucketVersioningRequest request);
    public sealed virtual Task`1<GetBucketVersioningResponse> GetBucketVersioningAsync(GetBucketVersioningRequest request, CancellationToken cancellationToken);
    internal GetBucketWebsiteResponse GetBucketWebsite(GetBucketWebsiteRequest request);
    public sealed virtual Task`1<GetBucketWebsiteResponse> GetBucketWebsiteAsync(GetBucketWebsiteRequest request, CancellationToken cancellationToken);
    internal GetCORSConfigurationResponse GetCORSConfiguration(GetCORSConfigurationRequest request);
    public sealed virtual Task`1<GetCORSConfigurationResponse> GetCORSConfigurationAsync(GetCORSConfigurationRequest request, CancellationToken cancellationToken);
    internal GetLifecycleConfigurationResponse GetLifecycleConfiguration(GetLifecycleConfigurationRequest request);
    public sealed virtual Task`1<GetLifecycleConfigurationResponse> GetLifecycleConfigurationAsync(GetLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    internal GetObjectResponse GetObject(GetObjectRequest request);
    public sealed virtual Task`1<GetObjectResponse> GetObjectAsync(GetObjectRequest request, CancellationToken cancellationToken);
    internal GetObjectMetadataResponse GetObjectMetadata(GetObjectMetadataRequest request);
    public sealed virtual Task`1<GetObjectMetadataResponse> GetObjectMetadataAsync(GetObjectMetadataRequest request, CancellationToken cancellationToken);
    internal GetObjectTorrentResponse GetObjectTorrent(GetObjectTorrentRequest request);
    public sealed virtual Task`1<GetObjectTorrentResponse> GetObjectTorrentAsync(GetObjectTorrentRequest request, CancellationToken cancellationToken);
    internal HeadBucketResponse HeadBucket(HeadBucketRequest request);
    internal Task`1<HeadBucketResponse> HeadBucketAsync(HeadBucketRequest request, CancellationToken cancellationToken);
    internal InitiateMultipartUploadResponse InitiateMultipartUpload(InitiateMultipartUploadRequest request);
    public sealed virtual Task`1<InitiateMultipartUploadResponse> InitiateMultipartUploadAsync(InitiateMultipartUploadRequest request, CancellationToken cancellationToken);
    internal ListBucketsResponse ListBuckets();
    internal ListBucketsResponse ListBuckets(ListBucketsRequest request);
    public sealed virtual Task`1<ListBucketsResponse> ListBucketsAsync(ListBucketsRequest request, CancellationToken cancellationToken);
    internal ListMultipartUploadsResponse ListMultipartUploads(ListMultipartUploadsRequest request);
    public sealed virtual Task`1<ListMultipartUploadsResponse> ListMultipartUploadsAsync(ListMultipartUploadsRequest request, CancellationToken cancellationToken);
    internal ListObjectsResponse ListObjects(ListObjectsRequest request);
    public sealed virtual Task`1<ListObjectsResponse> ListObjectsAsync(ListObjectsRequest request, CancellationToken cancellationToken);
    internal ListPartsResponse ListParts(ListPartsRequest request);
    public sealed virtual Task`1<ListPartsResponse> ListPartsAsync(ListPartsRequest request, CancellationToken cancellationToken);
    internal ListVersionsResponse ListVersions(ListVersionsRequest request);
    public sealed virtual Task`1<ListVersionsResponse> ListVersionsAsync(ListVersionsRequest request, CancellationToken cancellationToken);
    internal PutACLResponse PutACL(PutACLRequest request);
    public sealed virtual Task`1<PutACLResponse> PutACLAsync(PutACLRequest request, CancellationToken cancellationToken);
    internal PutBucketResponse PutBucket(PutBucketRequest request);
    public sealed virtual Task`1<PutBucketResponse> PutBucketAsync(PutBucketRequest request, CancellationToken cancellationToken);
    internal PutBucketLoggingResponse PutBucketLogging(PutBucketLoggingRequest request);
    public sealed virtual Task`1<PutBucketLoggingResponse> PutBucketLoggingAsync(PutBucketLoggingRequest request, CancellationToken cancellationToken);
    internal PutBucketNotificationResponse PutBucketNotification(PutBucketNotificationRequest request);
    public sealed virtual Task`1<PutBucketNotificationResponse> PutBucketNotificationAsync(PutBucketNotificationRequest request, CancellationToken cancellationToken);
    internal PutBucketPolicyResponse PutBucketPolicy(PutBucketPolicyRequest request);
    public sealed virtual Task`1<PutBucketPolicyResponse> PutBucketPolicyAsync(PutBucketPolicyRequest request, CancellationToken cancellationToken);
    internal PutBucketReplicationResponse PutBucketReplication(PutBucketReplicationRequest request);
    public sealed virtual Task`1<PutBucketReplicationResponse> PutBucketReplicationAsync(PutBucketReplicationRequest request, CancellationToken cancellationToken);
    internal PutBucketRequestPaymentResponse PutBucketRequestPayment(PutBucketRequestPaymentRequest request);
    public sealed virtual Task`1<PutBucketRequestPaymentResponse> PutBucketRequestPaymentAsync(PutBucketRequestPaymentRequest request, CancellationToken cancellationToken);
    internal PutBucketTaggingResponse PutBucketTagging(PutBucketTaggingRequest request);
    public sealed virtual Task`1<PutBucketTaggingResponse> PutBucketTaggingAsync(PutBucketTaggingRequest request, CancellationToken cancellationToken);
    internal PutBucketVersioningResponse PutBucketVersioning(PutBucketVersioningRequest request);
    public sealed virtual Task`1<PutBucketVersioningResponse> PutBucketVersioningAsync(PutBucketVersioningRequest request, CancellationToken cancellationToken);
    internal PutBucketWebsiteResponse PutBucketWebsite(PutBucketWebsiteRequest request);
    public sealed virtual Task`1<PutBucketWebsiteResponse> PutBucketWebsiteAsync(PutBucketWebsiteRequest request, CancellationToken cancellationToken);
    internal PutCORSConfigurationResponse PutCORSConfiguration(PutCORSConfigurationRequest request);
    public sealed virtual Task`1<PutCORSConfigurationResponse> PutCORSConfigurationAsync(PutCORSConfigurationRequest request, CancellationToken cancellationToken);
    internal PutLifecycleConfigurationResponse PutLifecycleConfiguration(PutLifecycleConfigurationRequest request);
    public sealed virtual Task`1<PutLifecycleConfigurationResponse> PutLifecycleConfigurationAsync(PutLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    internal PutObjectResponse PutObject(PutObjectRequest request);
    public sealed virtual Task`1<PutObjectResponse> PutObjectAsync(PutObjectRequest request, CancellationToken cancellationToken);
    internal RestoreObjectResponse RestoreObject(RestoreObjectRequest request);
    public sealed virtual Task`1<RestoreObjectResponse> RestoreObjectAsync(RestoreObjectRequest request, CancellationToken cancellationToken);
    internal UploadPartResponse UploadPart(UploadPartRequest request);
    public sealed virtual Task`1<UploadPartResponse> UploadPartAsync(UploadPartRequest request, CancellationToken cancellationToken);
}
public class Amazon.S3.AmazonS3Config : ClientConfig {
    private bool forcePathStyle;
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public bool ForcePathStyle { get; public set; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public bool get_ForcePathStyle();
    public void set_ForcePathStyle(bool value);
}
public class Amazon.S3.AmazonS3Exception : AmazonServiceException {
    [CompilerGeneratedAttribute]
private string <AmazonId2>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseBody>k__BackingField;
    public string AmazonId2 { get; protected set; }
    public string ResponseBody { get; internal set; }
    public string Message { get; }
    public AmazonS3Exception(string message);
    public AmazonS3Exception(string message, Exception innerException);
    public AmazonS3Exception(Exception innerException);
    public AmazonS3Exception(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonS3Exception(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonS3Exception(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode, string amazonId2);
    [CompilerGeneratedAttribute]
public string get_AmazonId2();
    [CompilerGeneratedAttribute]
protected void set_AmazonId2(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseBody();
    [CompilerGeneratedAttribute]
internal void set_ResponseBody(string value);
    public virtual string get_Message();
}
public class Amazon.S3.DeleteObjectsException : AmazonS3Exception {
    private DeleteObjectsResponse response;
    public DeleteObjectsResponse Response { get; public set; }
    public DeleteObjectsException(DeleteObjectsResponse response);
    public DeleteObjectsResponse get_Response();
    public void set_Response(DeleteObjectsResponse value);
    private static string CreateMessage(DeleteObjectsResponse response);
}
public class Amazon.S3.EncodingType : ConstantClass {
    public static EncodingType Url;
    public EncodingType(string value);
    private static EncodingType();
    public static EncodingType FindValue(string value);
    public static EncodingType op_Implicit(string value);
}
public class Amazon.S3.EventType : ConstantClass {
    public static EventType ObjectCreatedAll;
    public static EventType ObjectCreatedPut;
    public static EventType ObjectCreatedPost;
    public static EventType ObjectCreatedCopy;
    public static EventType ObjectCreatedCompleteMultipartUpload;
    public static EventType ObjectRemovedAll;
    public static EventType ObjectRemovedDelete;
    public static EventType ObjectRemovedDeleteMarkerCreated;
    public static EventType ReducedRedundancyLostObject;
    public EventType(string value);
    private static EventType();
    public static EventType FindValue(string value);
    public static EventType op_Implicit(string value);
}
public class Amazon.S3.GranteeType : ConstantClass {
    public static GranteeType Group;
    public static GranteeType Email;
    public static GranteeType CanonicalUser;
    public GranteeType(string value);
    private static GranteeType();
    public static GranteeType FindValue(string value);
    public static GranteeType op_Implicit(string value);
}
public enum Amazon.S3.HttpVerb : Enum {
    public int value__;
    public static HttpVerb GET;
    public static HttpVerb HEAD;
    public static HttpVerb PUT;
    public static HttpVerb DELETE;
}
public interface Amazon.S3.IAmazonS3 {
    public abstract virtual string GetPreSignedURL(GetPreSignedUrlRequest request);
    public abstract virtual Task`1<AbortMultipartUploadResponse> AbortMultipartUploadAsync(AbortMultipartUploadRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CompleteMultipartUploadResponse> CompleteMultipartUploadAsync(CompleteMultipartUploadRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyObjectResponse> CopyObjectAsync(CopyObjectRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyPartResponse> CopyPartAsync(CopyPartRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBucketResponse> DeleteBucketAsync(DeleteBucketRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBucketPolicyResponse> DeleteBucketPolicyAsync(DeleteBucketPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBucketReplicationResponse> DeleteBucketReplicationAsync(DeleteBucketReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBucketTaggingResponse> DeleteBucketTaggingAsync(DeleteBucketTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBucketWebsiteResponse> DeleteBucketWebsiteAsync(DeleteBucketWebsiteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCORSConfigurationResponse> DeleteCORSConfigurationAsync(DeleteCORSConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteLifecycleConfigurationResponse> DeleteLifecycleConfigurationAsync(DeleteLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteObjectResponse> DeleteObjectAsync(DeleteObjectRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteObjectsResponse> DeleteObjectsAsync(DeleteObjectsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetACLResponse> GetACLAsync(GetACLRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketLocationResponse> GetBucketLocationAsync(GetBucketLocationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketLoggingResponse> GetBucketLoggingAsync(GetBucketLoggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketNotificationResponse> GetBucketNotificationAsync(GetBucketNotificationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketPolicyResponse> GetBucketPolicyAsync(GetBucketPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketReplicationResponse> GetBucketReplicationAsync(GetBucketReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketRequestPaymentResponse> GetBucketRequestPaymentAsync(GetBucketRequestPaymentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketTaggingResponse> GetBucketTaggingAsync(GetBucketTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketVersioningResponse> GetBucketVersioningAsync(GetBucketVersioningRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetBucketWebsiteResponse> GetBucketWebsiteAsync(GetBucketWebsiteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCORSConfigurationResponse> GetCORSConfigurationAsync(GetCORSConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetLifecycleConfigurationResponse> GetLifecycleConfigurationAsync(GetLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetObjectResponse> GetObjectAsync(GetObjectRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetObjectMetadataResponse> GetObjectMetadataAsync(GetObjectMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetObjectTorrentResponse> GetObjectTorrentAsync(GetObjectTorrentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<InitiateMultipartUploadResponse> InitiateMultipartUploadAsync(InitiateMultipartUploadRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListBucketsResponse> ListBucketsAsync(ListBucketsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListMultipartUploadsResponse> ListMultipartUploadsAsync(ListMultipartUploadsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListObjectsResponse> ListObjectsAsync(ListObjectsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListPartsResponse> ListPartsAsync(ListPartsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVersionsResponse> ListVersionsAsync(ListVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutACLResponse> PutACLAsync(PutACLRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketResponse> PutBucketAsync(PutBucketRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketLoggingResponse> PutBucketLoggingAsync(PutBucketLoggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketNotificationResponse> PutBucketNotificationAsync(PutBucketNotificationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketPolicyResponse> PutBucketPolicyAsync(PutBucketPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketReplicationResponse> PutBucketReplicationAsync(PutBucketReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketRequestPaymentResponse> PutBucketRequestPaymentAsync(PutBucketRequestPaymentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketTaggingResponse> PutBucketTaggingAsync(PutBucketTaggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketVersioningResponse> PutBucketVersioningAsync(PutBucketVersioningRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutBucketWebsiteResponse> PutBucketWebsiteAsync(PutBucketWebsiteRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutCORSConfigurationResponse> PutCORSConfigurationAsync(PutCORSConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutLifecycleConfigurationResponse> PutLifecycleConfigurationAsync(PutLifecycleConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutObjectResponse> PutObjectAsync(PutObjectRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreObjectResponse> RestoreObjectAsync(RestoreObjectRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UploadPartResponse> UploadPartAsync(UploadPartRequest request, CancellationToken cancellationToken);
}
public class Amazon.S3.Internal.AmazonS3ExceptionHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.S3.Internal.AmazonS3ExceptionHandler/<InvokeAsync>d__0`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void HandleException(IExecutionContext executionContext, Exception exception);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod2(IExecutionContext );
}
public class Amazon.S3.Internal.AmazonS3KmsHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
    internal static void EvaluateIfSigV4Required(IRequest request);
}
public class Amazon.S3.Internal.AmazonS3PostMarshallHandler : PipelineHandler {
    private static HashSet`1<string> sseKeyHeaders;
    private static Char[] separators;
    private static Regex bucketValidationRegex;
    private static Regex dnsValidationRegex1;
    private static Regex dnsValidationRegex2;
    private static String[] invalidPatterns;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, string> CS$<>9__CachedAnonymousMethodDelegate3;
    private static AmazonS3PostMarshallHandler();
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
    public static void ProcessRequestHandlers(IExecutionContext executionContext);
    private static void ValidateHttpsOnlyHeaders(IRequest request);
    private static void ValidateSseHeaderValue(IRequest request);
    private static void ValidateSseKeyHeaders(IRequest request);
    internal static string GetBucketName(string resourcePath);
    public static bool IsValidBucketName(string bucketName);
    public static bool IsDnsCompatibleBucketName(string bucketName);
    private static bool StringContainsAny(string toCheck, String[] values, StringComparison stringComparison);
    [CompilerGeneratedAttribute]
private static bool <ValidateSseKeyHeaders>b__0(KeyValuePair`2<string, string> kvp);
    [CompilerGeneratedAttribute]
private static string <ValidateSseKeyHeaders>b__1(KeyValuePair`2<string, string> kvp);
}
public class Amazon.S3.Internal.AmazonS3PreMarshallHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
    private static void ProcessPreRequestHandlers(IExecutionContext executionContext);
    private static string DetermineBucketRegionCode(ClientConfig config);
}
public class Amazon.S3.Internal.AmazonS3RedirectHandler : RedirectHandler {
    protected virtual void FinalizeForRedirect(IExecutionContext executionContext, string redirectedLocation);
}
public class Amazon.S3.Internal.AmazonS3ResponseHandler : PipelineHandler {
    private static Char[] etagTrimChars;
    private static AmazonS3ResponseHandler();
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("Amazon.S3.Internal.AmazonS3ResponseHandler/<InvokeAsync>d__0`1")]
[DebuggerStepThroughAttribute]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PostInvoke(IExecutionContext executionContext);
    private static void ProcessResponseHandlers(IExecutionContext executionContext);
    private static bool HasSSEHeaders(IWebResponseData webResponseData);
    private static void CompareHashes(string etag, Byte[] hash);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod3(IExecutionContext );
}
public class Amazon.S3.Internal.AmazonS3RetryPolicy : DefaultRetryPolicy {
    private static string AWS_KMS_Signature_Error;
    private static ICollection`1<Type> RequestsWith200Error;
    public AmazonS3RetryPolicy(int maxRetries);
    private static AmazonS3RetryPolicy();
    public virtual bool RetryForException(IExecutionContext executionContext, Exception exception);
}
public class Amazon.S3.LifecycleRuleStatus : ConstantClass {
    public static LifecycleRuleStatus Enabled;
    public static LifecycleRuleStatus Disabled;
    public LifecycleRuleStatus(string value);
    private static LifecycleRuleStatus();
    public static LifecycleRuleStatus FindValue(string value);
    public static LifecycleRuleStatus op_Implicit(string value);
}
public class Amazon.S3.Model.AbortMultipartUploadRequest : AmazonWebServiceRequest {
    private string bucketName;
    private string key;
    private string uploadId;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string UploadId { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
}
public class Amazon.S3.Model.AbortMultipartUploadResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.ByteRange : object {
    [CompilerGeneratedAttribute]
private long <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private long <End>k__BackingField;
    public long Start { get; public set; }
    public long End { get; public set; }
    public string FormattedByteRange { get; }
    public ByteRange(long start, long end);
    [CompilerGeneratedAttribute]
public long get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(long value);
    [CompilerGeneratedAttribute]
public long get_End();
    [CompilerGeneratedAttribute]
public void set_End(long value);
    public string get_FormattedByteRange();
}
[ObsoleteAttribute("CloudFunctionConfiguration is obsolete and will be removed in the upcoming version 3 of the SDK. LambdaFunctionConfiguration should be used instead, along with using IAmazonLambda.AddPermission for setting up permissions.")]
public class Amazon.S3.Model.CloudFunctionConfiguration : NotificationConfiguration {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CloudFunction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InvocationRole>k__BackingField;
    public string Id { get; public set; }
    public string CloudFunction { get; public set; }
    public string InvocationRole { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    internal bool IsSetId();
    [CompilerGeneratedAttribute]
public string get_CloudFunction();
    [CompilerGeneratedAttribute]
public void set_CloudFunction(string value);
    internal bool IsSetCloudFunction();
    [CompilerGeneratedAttribute]
public string get_InvocationRole();
    [CompilerGeneratedAttribute]
public void set_InvocationRole(string value);
    internal bool IsSetInvocationRole();
}
public class Amazon.S3.Model.CompleteMultipartUploadRequest : AmazonWebServiceRequest {
    private string bucketName;
    private string key;
    private List`1<PartETag> partETags;
    private string uploadId;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public List`1<PartETag> PartETags { get; public set; }
    public string UploadId { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public List`1<PartETag> get_PartETags();
    public void set_PartETags(List`1<PartETag> value);
    public void AddPartETags(PartETag[] partETags);
    public void AddPartETags(IEnumerable`1<PartETag> partETags);
    public void AddPartETags(UploadPartResponse[] responses);
    public void AddPartETags(IEnumerable`1<UploadPartResponse> responses);
    public void AddPartETags(CopyPartResponse[] responses);
    public void AddPartETags(IEnumerable`1<CopyPartResponse> responses);
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
}
public class Amazon.S3.Model.CompleteMultipartUploadResponse : AmazonWebServiceResponse {
    private string location;
    private string bucketName;
    private string key;
    private string eTag;
    private string versionId;
    private Expiration expiration;
    private ServerSideEncryptionMethod serverSideEncryption;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    public string Location { get; public set; }
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string ETag { get; public set; }
    public Expiration Expiration { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public string VersionId { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public Expiration get_Expiration();
    public void set_Expiration(Expiration value);
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
}
public class Amazon.S3.Model.CopyObjectRequest : PutWithACLRequest {
    private string srcBucket;
    private string srcKey;
    private string srcVersionId;
    private string dstBucket;
    private string dstKey;
    private S3CannedACL cannedACL;
    private string etagToMatch;
    private string etagToNotMatch;
    private Nullable`1<DateTime> modifiedSinceDate;
    private Nullable`1<DateTime> unmodifiedSinceDate;
    private S3MetadataDirective metadataDirective;
    private S3StorageClass storageClass;
    private string websiteRedirectLocation;
    private HeadersCollection headersCollection;
    private MetadataCollection metadataCollection;
    private ServerSideEncryptionMethod serverSideEncryption;
    private ServerSideEncryptionCustomerMethod serverSideCustomerEncryption;
    private string serverSideEncryptionCustomerProvidedKey;
    private string serverSideEncryptionCustomerProvidedKeyMD5;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    private ServerSideEncryptionCustomerMethod copySourceServerSideCustomerEncryption;
    private string copySourceServerSideEncryptionCustomerProvidedKey;
    private string copySourceServerSideEncryptionCustomerProvidedKeyMD5;
    public string SourceBucket { get; public set; }
    public string SourceKey { get; public set; }
    public string SourceVersionId { get; public set; }
    public string DestinationBucket { get; public set; }
    public string DestinationKey { get; public set; }
    public S3CannedACL CannedACL { get; public set; }
    public string ETagToMatch { get; public set; }
    public string ETagToNotMatch { get; public set; }
    public DateTime ModifiedSinceDate { get; public set; }
    public DateTime UnmodifiedSinceDate { get; public set; }
    public S3MetadataDirective MetadataDirective { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public string WebsiteRedirectLocation { get; public set; }
    public HeadersCollection Headers { get; }
    public MetadataCollection Metadata { get; }
    public string ContentType { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    public ServerSideEncryptionCustomerMethod CopySourceServerSideEncryptionCustomerMethod { get; public set; }
    public string CopySourceServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string CopySourceServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    public string get_SourceBucket();
    public void set_SourceBucket(string value);
    internal bool IsSetSourceBucket();
    public string get_SourceKey();
    public void set_SourceKey(string value);
    internal bool IsSetSourceKey();
    public string get_SourceVersionId();
    public void set_SourceVersionId(string value);
    internal bool IsSetSourceVersionId();
    public string get_DestinationBucket();
    public void set_DestinationBucket(string value);
    internal bool IsSetDestinationBucket();
    public string get_DestinationKey();
    public void set_DestinationKey(string value);
    internal bool IsSetDestinationKey();
    public S3CannedACL get_CannedACL();
    public void set_CannedACL(S3CannedACL value);
    internal bool IsSetCannedACL();
    public string get_ETagToMatch();
    public void set_ETagToMatch(string value);
    internal bool IsSetETagToMatch();
    public string get_ETagToNotMatch();
    public void set_ETagToNotMatch(string value);
    internal bool IsSetETagToNotMatch();
    public DateTime get_ModifiedSinceDate();
    public void set_ModifiedSinceDate(DateTime value);
    internal bool IsSetModifiedSinceDate();
    public DateTime get_UnmodifiedSinceDate();
    public void set_UnmodifiedSinceDate(DateTime value);
    internal bool IsSetUnmodifiedSinceDate();
    public S3MetadataDirective get_MetadataDirective();
    public void set_MetadataDirective(S3MetadataDirective value);
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    internal bool IsSetServerSideEncryptionMethod();
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
    public string get_WebsiteRedirectLocation();
    public void set_WebsiteRedirectLocation(string value);
    internal bool IsSetWebsiteRedirectLocation();
    public HeadersCollection get_Headers();
    public MetadataCollection get_Metadata();
    public string get_ContentType();
    public void set_ContentType(string value);
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetServerSideEncryptionCustomerMethod();
    public string get_ServerSideEncryptionCustomerProvidedKey();
    public void set_ServerSideEncryptionCustomerProvidedKey(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKey();
    public string get_ServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_ServerSideEncryptionCustomerProvidedKeyMD5(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKeyMD5();
    public ServerSideEncryptionCustomerMethod get_CopySourceServerSideEncryptionCustomerMethod();
    public void set_CopySourceServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetCopySourceServerSideEncryptionCustomerMethod();
    public string get_CopySourceServerSideEncryptionCustomerProvidedKey();
    public void set_CopySourceServerSideEncryptionCustomerProvidedKey(string value);
    internal bool IsSetCopySourceServerSideEncryptionCustomerProvidedKey();
    public string get_CopySourceServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_CopySourceServerSideEncryptionCustomerProvidedKeyMD5(string value);
    internal bool IsSetCopySourceServerSideEncryptionCustomerProvidedKeyMD5();
}
public class Amazon.S3.Model.CopyObjectResponse : AmazonWebServiceResponse {
    private string eTag;
    private string lastModified;
    private Expiration expiration;
    private string srcVersionId;
    private ServerSideEncryptionMethod serverSideEncryption;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    public string ETag { get; public set; }
    public string LastModified { get; public set; }
    public Expiration Expiration { get; public set; }
    public string SourceVersionId { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    public string get_LastModified();
    public void set_LastModified(string value);
    public Expiration get_Expiration();
    public void set_Expiration(Expiration value);
    public string get_SourceVersionId();
    public void set_SourceVersionId(string value);
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
}
public class Amazon.S3.Model.CopyPartRequest : AmazonWebServiceRequest {
    private string srcBucket;
    private string srcKey;
    private string srcVersionId;
    private string dstBucket;
    private string dstKey;
    private string uploadId;
    private List`1<string> etagsToMatch;
    private List`1<string> etagsToNotMatch;
    private Nullable`1<DateTime> modifiedSinceDate;
    private Nullable`1<DateTime> unmodifiedSinceDate;
    private Nullable`1<int> partNumber;
    private Nullable`1<long> firstByte;
    private Nullable`1<long> lastByte;
    private ServerSideEncryptionMethod serverSideEncryption;
    private ServerSideEncryptionCustomerMethod serverSideCustomerEncryption;
    private string serverSideEncryptionCustomerProvidedKey;
    private string serverSideEncryptionCustomerProvidedKeyMD5;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    private ServerSideEncryptionCustomerMethod copySourceServerSideCustomerEncryption;
    private string copySourceServerSideEncryptionCustomerProvidedKey;
    private string copySourceServerSideEncryptionCustomerProvidedKeyMD5;
    public string SourceBucket { get; public set; }
    public string SourceKey { get; public set; }
    public string SourceVersionId { get; public set; }
    public string DestinationBucket { get; public set; }
    public string DestinationKey { get; public set; }
    public string UploadId { get; public set; }
    public List`1<string> ETagToMatch { get; public set; }
    public List`1<string> ETagsToNotMatch { get; public set; }
    public DateTime ModifiedSinceDate { get; public set; }
    public DateTime UnmodifiedSinceDate { get; public set; }
    public int PartNumber { get; public set; }
    public long FirstByte { get; public set; }
    public long LastByte { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public ServerSideEncryptionCustomerMethod CopySourceServerSideEncryptionCustomerMethod { get; public set; }
    public string CopySourceServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string CopySourceServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    public string get_SourceBucket();
    public void set_SourceBucket(string value);
    internal bool IsSetSourceBucket();
    public string get_SourceKey();
    public void set_SourceKey(string value);
    internal bool IsSetSourceKey();
    public string get_SourceVersionId();
    public void set_SourceVersionId(string value);
    internal bool IsSetSourceVersionId();
    public string get_DestinationBucket();
    public void set_DestinationBucket(string value);
    internal bool IsSetDestinationBucket();
    public string get_DestinationKey();
    public void set_DestinationKey(string value);
    internal bool IsSetDestinationKey();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
    public List`1<string> get_ETagToMatch();
    public void set_ETagToMatch(List`1<string> value);
    internal bool IsSetETagToMatch();
    public List`1<string> get_ETagsToNotMatch();
    public void set_ETagsToNotMatch(List`1<string> value);
    internal bool IsSetETagToNotMatch();
    public DateTime get_ModifiedSinceDate();
    public void set_ModifiedSinceDate(DateTime value);
    internal bool IsSetModifiedSinceDate();
    public DateTime get_UnmodifiedSinceDate();
    public void set_UnmodifiedSinceDate(DateTime value);
    internal bool IsSetUnmodifiedSinceDate();
    public int get_PartNumber();
    public void set_PartNumber(int value);
    internal bool IsSetPartNumber();
    public long get_FirstByte();
    public void set_FirstByte(long value);
    internal bool IsSetFirstByte();
    public long get_LastByte();
    public void set_LastByte(long value);
    internal bool IsSetLastByte();
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    internal bool IsSetServerSideEncryptionMethod();
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetServerSideEncryptionCustomerMethod();
    public string get_ServerSideEncryptionCustomerProvidedKey();
    public void set_ServerSideEncryptionCustomerProvidedKey(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKey();
    public string get_ServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_ServerSideEncryptionCustomerProvidedKeyMD5(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKeyMD5();
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
    public ServerSideEncryptionCustomerMethod get_CopySourceServerSideEncryptionCustomerMethod();
    public void set_CopySourceServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetCopySourceServerSideEncryptionCustomerMethod();
    public string get_CopySourceServerSideEncryptionCustomerProvidedKey();
    public void set_CopySourceServerSideEncryptionCustomerProvidedKey(string value);
    internal bool IsSetCopySourceServerSideEncryptionCustomerProvidedKey();
    public string get_CopySourceServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_CopySourceServerSideEncryptionCustomerProvidedKeyMD5(string value);
    internal bool IsSetCopySourceServerSideEncryptionCustomerProvidedKeyMD5();
}
public class Amazon.S3.Model.CopyPartResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> lastModified;
    private string eTag;
    private string copySourceVersionId;
    private int partNumber;
    private ServerSideEncryptionMethod serverSideEncryption;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    public string CopySourceVersionId { get; public set; }
    public string ETag { get; public set; }
    public DateTime LastModified { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public int PartNumber { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public string get_CopySourceVersionId();
    public void set_CopySourceVersionId(string value);
    internal bool IsSetCopySourceVersionId();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public DateTime get_LastModified();
    public void set_LastModified(DateTime value);
    internal bool IsSetLastModified();
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    internal bool IsSetServerSideEncryptionMethod();
    public int get_PartNumber();
    public void set_PartNumber(int value);
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
}
public class Amazon.S3.Model.CORSConfiguration : object {
    private List`1<CORSRule> rules;
    public List`1<CORSRule> Rules { get; public set; }
    public List`1<CORSRule> get_Rules();
    public void set_Rules(List`1<CORSRule> value);
    internal bool IsSetRules();
}
public class Amazon.S3.Model.CORSRule : object {
    private string id;
    private List`1<string> allowedMethods;
    private List`1<string> allowedOrigins;
    private List`1<string> exposeHeaders;
    private List`1<string> allowedHeaders;
    private Nullable`1<int> maxAgeSeconds;
    public List`1<string> AllowedMethods { get; public set; }
    public List`1<string> AllowedOrigins { get; public set; }
    public string Id { get; public set; }
    public List`1<string> ExposeHeaders { get; public set; }
    public int MaxAgeSeconds { get; public set; }
    public List`1<string> AllowedHeaders { get; public set; }
    public List`1<string> get_AllowedMethods();
    public void set_AllowedMethods(List`1<string> value);
    internal bool IsSetAllowedMethods();
    public List`1<string> get_AllowedOrigins();
    public void set_AllowedOrigins(List`1<string> value);
    internal bool IsSetAllowedOrigins();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public List`1<string> get_ExposeHeaders();
    public void set_ExposeHeaders(List`1<string> value);
    internal bool IsSetExposeHeaders();
    public int get_MaxAgeSeconds();
    public void set_MaxAgeSeconds(int value);
    internal bool IsSetMaxAgeSeconds();
    public List`1<string> get_AllowedHeaders();
    public void set_AllowedHeaders(List`1<string> value);
    internal bool IsSetAllowedHeaders();
}
public class Amazon.S3.Model.DeleteBucketPolicyRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.DeleteBucketPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.DeleteBucketReplicationRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.DeleteBucketReplicationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.DeleteBucketRequest : AmazonWebServiceRequest {
    private string bucketName;
    private S3Region bucketRegion;
    private bool useClientRegion;
    public string BucketName { get; public set; }
    public S3Region BucketRegion { get; public set; }
    public bool UseClientRegion { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public S3Region get_BucketRegion();
    public void set_BucketRegion(S3Region value);
    internal bool IsSetBucketRegion();
    public bool get_UseClientRegion();
    public void set_UseClientRegion(bool value);
}
public class Amazon.S3.Model.DeleteBucketResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.DeleteBucketTaggingRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.DeleteBucketTaggingResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.DeleteBucketWebsiteRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.DeleteBucketWebsiteResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.DeleteCORSConfigurationRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.DeleteCORSConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.DeletedObject : object {
    private Nullable`1<bool> deleteMarker;
    private string deleteMarkerVersionId;
    private string key;
    private string versionId;
    public bool DeleteMarker { get; public set; }
    public string DeleteMarkerVersionId { get; public set; }
    public string Key { get; public set; }
    public string VersionId { get; public set; }
    public bool get_DeleteMarker();
    public void set_DeleteMarker(bool value);
    internal bool IsSetDeleteMarker();
    public string get_DeleteMarkerVersionId();
    public void set_DeleteMarkerVersionId(string value);
    internal bool IsSetDeleteMarkerVersionId();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.S3.Model.DeleteError : object {
    private string code;
    private string key;
    private string message;
    private string versionId;
    public string Key { get; public set; }
    public string VersionId { get; public set; }
    public string Code { get; public set; }
    public string Message { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    public string get_VersionId();
    public void set_VersionId(string value);
    public string get_Code();
    public void set_Code(string value);
    public string get_Message();
    public void set_Message(string value);
}
public class Amazon.S3.Model.DeleteLifecycleConfigurationRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.DeleteLifecycleConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.DeleteObjectRequest : AmazonWebServiceRequest {
    private string bucketName;
    private string key;
    private string versionId;
    private MfaCodes mfaCodes;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string VersionId { get; public set; }
    public MfaCodes MfaCodes { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public MfaCodes get_MfaCodes();
    public void set_MfaCodes(MfaCodes value);
    internal bool IsSetMfaCodes();
}
public class Amazon.S3.Model.DeleteObjectResponse : AmazonWebServiceResponse {
    private string deleteMarker;
    private string versionId;
    public string DeleteMarker { get; public set; }
    public string VersionId { get; public set; }
    public string get_DeleteMarker();
    public void set_DeleteMarker(string value);
    internal bool IsSetDeleteMarker();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.S3.Model.DeleteObjectsRequest : AmazonWebServiceRequest {
    private string bucketName;
    private List`1<KeyVersion> objects;
    private Nullable`1<bool> quiet;
    private MfaCodes mfaCodes;
    public string BucketName { get; public set; }
    public List`1<KeyVersion> Objects { get; public set; }
    public bool Quiet { get; public set; }
    [XmlIgnoreAttribute]
public MfaCodes MfaCodes { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public List`1<KeyVersion> get_Objects();
    public void set_Objects(List`1<KeyVersion> value);
    internal bool IsSetObjects();
    public bool get_Quiet();
    public void set_Quiet(bool value);
    internal bool IsSetQuiet();
    public MfaCodes get_MfaCodes();
    public void set_MfaCodes(MfaCodes value);
    internal bool IsSetMfaCodes();
    public void AddKey(string key);
    public void AddKey(string key, string version);
    private void AddKey(KeyVersion keyVersion);
}
public class Amazon.S3.Model.DeleteObjectsResponse : AmazonWebServiceResponse {
    private List`1<DeletedObject> deleted;
    private List`1<DeleteError> errors;
    public List`1<DeletedObject> DeletedObjects { get; public set; }
    public List`1<DeleteError> DeleteErrors { get; public set; }
    public List`1<DeletedObject> get_DeletedObjects();
    public void set_DeletedObjects(List`1<DeletedObject> value);
    internal bool IsSetDeletedObjects();
    public List`1<DeleteError> get_DeleteErrors();
    public void set_DeleteErrors(List`1<DeleteError> value);
    internal bool IsSetDeleteErrors();
}
public class Amazon.S3.Model.Expiration : object {
    private DateTime expiryDate;
    private string ruleId;
    private static Regex expiryRegex;
    private static Regex ruleRegex;
    public DateTime ExpiryDate { get; public set; }
    public string RuleId { get; public set; }
    internal Expiration(string headerValue);
    private static Expiration();
    public DateTime get_ExpiryDate();
    public void set_ExpiryDate(DateTime value);
    public string get_RuleId();
    public void set_RuleId(string value);
    private static string UrlDecode(string url);
}
public class Amazon.S3.Model.Filter : object {
    private S3KeyFilter s3KeyFilter;
    public S3KeyFilter S3KeyFilter { get; public set; }
    public S3KeyFilter get_S3KeyFilter();
    public void set_S3KeyFilter(S3KeyFilter value);
    internal bool IsSetS3KeyFilter();
}
public class Amazon.S3.Model.FilterRule : object {
    private string _name;
    private string _value;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public FilterRule(string name, string value);
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.S3.Model.GetACLRequest : AmazonWebServiceRequest {
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersionId>k__BackingField;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string VersionId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    internal bool IsSetBucket();
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    internal bool IsSetKey();
    [CompilerGeneratedAttribute]
public string get_VersionId();
    [CompilerGeneratedAttribute]
public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.S3.Model.GetACLResponse : AmazonWebServiceResponse {
    [CompilerGeneratedAttribute]
private S3AccessControlList <AccessControlList>k__BackingField;
    public S3AccessControlList AccessControlList { get; public set; }
    [CompilerGeneratedAttribute]
public S3AccessControlList get_AccessControlList();
    [CompilerGeneratedAttribute]
public void set_AccessControlList(S3AccessControlList value);
}
public class Amazon.S3.Model.GetBucketLocationRequest : AmazonWebServiceRequest {
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    public string BucketName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.GetBucketLocationResponse : AmazonWebServiceResponse {
    private string location;
    public S3Region Location { get; public set; }
    public S3Region get_Location();
    public void set_Location(S3Region value);
}
public class Amazon.S3.Model.GetBucketLoggingRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.GetBucketLoggingResponse : AmazonWebServiceResponse {
    private S3BucketLoggingConfig bucketLoggingConfig;
    public S3BucketLoggingConfig BucketLoggingConfig { get; public set; }
    public S3BucketLoggingConfig get_BucketLoggingConfig();
    public void set_BucketLoggingConfig(S3BucketLoggingConfig value);
}
public class Amazon.S3.Model.GetBucketNotificationRequest : AmazonWebServiceRequest {
    private string bucket;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.GetBucketNotificationResponse : AmazonWebServiceResponse {
    private List`1<TopicConfiguration> _topicConfigurations;
    private List`1<QueueConfiguration> _queueConfigurations;
    private List`1<CloudFunctionConfiguration> _cloudFunctionConfigurations;
    private List`1<LambdaFunctionConfiguration> _lambdaFunctionConfigurations;
    public List`1<TopicConfiguration> TopicConfigurations { get; public set; }
    public List`1<QueueConfiguration> QueueConfigurations { get; public set; }
    [ObsoleteAttribute("CloudFunctionConfiguration is obsolete and will be removed in the upcoming version 3 of the SDK. LambdaFunctionConfiguration should be used instead, along with using IAmazonLambda.AddPermission for setting up permissions.")]
public List`1<CloudFunctionConfiguration> CloudFunctionConfigurations { get; public set; }
    public List`1<LambdaFunctionConfiguration> LambdaFunctionConfigurations { get; public set; }
    public List`1<TopicConfiguration> get_TopicConfigurations();
    public void set_TopicConfigurations(List`1<TopicConfiguration> value);
    public List`1<QueueConfiguration> get_QueueConfigurations();
    public void set_QueueConfigurations(List`1<QueueConfiguration> value);
    public List`1<CloudFunctionConfiguration> get_CloudFunctionConfigurations();
    public void set_CloudFunctionConfigurations(List`1<CloudFunctionConfiguration> value);
    public List`1<LambdaFunctionConfiguration> get_LambdaFunctionConfigurations();
    public void set_LambdaFunctionConfigurations(List`1<LambdaFunctionConfiguration> value);
}
public class Amazon.S3.Model.GetBucketPolicyRequest : AmazonWebServiceRequest {
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    public string BucketName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    internal bool IsSetBucket();
}
public class Amazon.S3.Model.GetBucketPolicyResponse : AmazonWebServiceResponse {
    [CompilerGeneratedAttribute]
private string <Policy>k__BackingField;
    public string Policy { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Policy();
    [CompilerGeneratedAttribute]
public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.S3.Model.GetBucketReplicationRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.GetBucketReplicationResponse : AmazonWebServiceResponse {
    private ReplicationConfiguration configuration;
    public ReplicationConfiguration Configuration { get; public set; }
    public ReplicationConfiguration get_Configuration();
    public void set_Configuration(ReplicationConfiguration value);
}
public class Amazon.S3.Model.GetBucketRequestPaymentRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.GetBucketRequestPaymentResponse : AmazonWebServiceResponse {
    private string payer;
    public string Payer { get; public set; }
    public string get_Payer();
    public void set_Payer(string value);
    internal bool IsSetPayer();
}
public class Amazon.S3.Model.GetBucketTaggingRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.GetBucketTaggingResponse : AmazonWebServiceResponse {
    private List`1<Tag> tagSet;
    public List`1<Tag> TagSet { get; public set; }
    public List`1<Tag> get_TagSet();
    public void set_TagSet(List`1<Tag> value);
    internal bool IsSetTagSet();
}
public class Amazon.S3.Model.GetBucketVersioningRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.GetBucketVersioningResponse : AmazonWebServiceResponse {
    private S3BucketVersioningConfig config;
    public S3BucketVersioningConfig VersioningConfig { get; public set; }
    public S3BucketVersioningConfig get_VersioningConfig();
    public void set_VersioningConfig(S3BucketVersioningConfig value);
}
public class Amazon.S3.Model.GetBucketWebsiteRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.GetBucketWebsiteResponse : AmazonWebServiceResponse {
    private WebsiteConfiguration websiteConfiguration;
    public WebsiteConfiguration WebsiteConfiguration { get; public set; }
    public WebsiteConfiguration get_WebsiteConfiguration();
    public void set_WebsiteConfiguration(WebsiteConfiguration value);
}
public class Amazon.S3.Model.GetCORSConfigurationRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.GetCORSConfigurationResponse : AmazonWebServiceResponse {
    private CORSConfiguration configuration;
    public CORSConfiguration Configuration { get; public set; }
    public CORSConfiguration get_Configuration();
    public void set_Configuration(CORSConfiguration value);
    internal bool IsSetConfiguration();
}
public class Amazon.S3.Model.GetLifecycleConfigurationRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.GetLifecycleConfigurationResponse : AmazonWebServiceResponse {
    private LifecycleConfiguration configuration;
    public LifecycleConfiguration Configuration { get; public set; }
    public LifecycleConfiguration get_Configuration();
    public void set_Configuration(LifecycleConfiguration value);
}
public class Amazon.S3.Model.GetObjectMetadataRequest : AmazonWebServiceRequest {
    private string bucketName;
    private Nullable`1<DateTime> modifiedSinceDate;
    private Nullable`1<DateTime> unmodifiedSinceDate;
    private string etagToMatch;
    private string etagToNotMatch;
    private string key;
    private string versionId;
    private ServerSideEncryptionCustomerMethod serverSideCustomerEncryption;
    private string serverSideEncryptionCustomerProvidedKey;
    private string serverSideEncryptionCustomerProvidedKeyMD5;
    public string BucketName { get; public set; }
    public string EtagToMatch { get; public set; }
    public DateTime ModifiedSinceDate { get; public set; }
    public string EtagToNotMatch { get; public set; }
    public DateTime UnmodifiedSinceDate { get; public set; }
    public string Key { get; public set; }
    public string VersionId { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_EtagToMatch();
    public void set_EtagToMatch(string value);
    internal bool IsSetEtagToMatch();
    public DateTime get_ModifiedSinceDate();
    public void set_ModifiedSinceDate(DateTime value);
    internal bool IsSetModifiedSinceDate();
    public string get_EtagToNotMatch();
    public void set_EtagToNotMatch(string value);
    internal bool IsSetEtagToNotMatch();
    public DateTime get_UnmodifiedSinceDate();
    public void set_UnmodifiedSinceDate(DateTime value);
    internal bool IsSetUnmodifiedSinceDate();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetServerSideEncryptionCustomerMethod();
    public string get_ServerSideEncryptionCustomerProvidedKey();
    public void set_ServerSideEncryptionCustomerProvidedKey(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKey();
    public string get_ServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_ServerSideEncryptionCustomerProvidedKeyMD5(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKeyMD5();
}
public class Amazon.S3.Model.GetObjectMetadataResponse : AmazonWebServiceResponse {
    private string deleteMarker;
    private string acceptRanges;
    private Expiration expiration;
    private Nullable`1<DateTime> restoreExpiration;
    private bool restoreInProgress;
    private Nullable`1<DateTime> lastModified;
    private string eTag;
    private Nullable`1<int> missingMeta;
    private string versionId;
    private Nullable`1<DateTime> expires;
    private string websiteRedirectLocation;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    private ServerSideEncryptionMethod serverSideEncryption;
    private ServerSideEncryptionCustomerMethod serverSideEncryptionCustomerMethod;
    private HeadersCollection headersCollection;
    private MetadataCollection metadataCollection;
    private ReplicationStatus replicationStatus;
    private S3StorageClass storageClass;
    public HeadersCollection Headers { get; }
    public MetadataCollection Metadata { get; }
    public string DeleteMarker { get; public set; }
    public string AcceptRanges { get; public set; }
    public Expiration Expiration { get; public set; }
    public Nullable`1<DateTime> RestoreExpiration { get; public set; }
    public bool RestoreInProgress { get; public set; }
    public DateTime LastModified { get; public set; }
    public string ETag { get; public set; }
    public int MissingMeta { get; public set; }
    public string VersionId { get; public set; }
    public DateTime Expires { get; public set; }
    public string WebsiteRedirectLocation { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public ReplicationStatus ReplicationStatus { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public HeadersCollection get_Headers();
    public MetadataCollection get_Metadata();
    public string get_DeleteMarker();
    public void set_DeleteMarker(string value);
    internal bool IsSetDeleteMarker();
    public string get_AcceptRanges();
    public void set_AcceptRanges(string value);
    internal bool IsSetAcceptRanges();
    public Expiration get_Expiration();
    public void set_Expiration(Expiration value);
    internal bool IsSetExpiration();
    public Nullable`1<DateTime> get_RestoreExpiration();
    public void set_RestoreExpiration(Nullable`1<DateTime> value);
    public bool get_RestoreInProgress();
    public void set_RestoreInProgress(bool value);
    public DateTime get_LastModified();
    public void set_LastModified(DateTime value);
    internal bool IsSetLastModified();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public int get_MissingMeta();
    public void set_MissingMeta(int value);
    internal bool IsSetMissingMeta();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public DateTime get_Expires();
    public void set_Expires(DateTime value);
    internal bool IsSetExpires();
    public string get_WebsiteRedirectLocation();
    public void set_WebsiteRedirectLocation(string value);
    internal bool IsSetWebsiteRedirectLocation();
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    internal bool IsSetServerSideEncryptionMethod();
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetServerSideEncryptionCustomerMethod();
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
    public ReplicationStatus get_ReplicationStatus();
    public void set_ReplicationStatus(ReplicationStatus value);
    internal bool IsSetReplicationStatus();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
}
public class Amazon.S3.Model.GetObjectRequest : AmazonWebServiceRequest {
    private string bucketName;
    private Nullable`1<DateTime> modifiedSinceDate;
    private Nullable`1<DateTime> unmodifiedSinceDate;
    private string etagToMatch;
    private string etagToNotMatch;
    private string key;
    private ByteRange byteRange;
    private Nullable`1<DateTime> responseExpires;
    private string versionId;
    private ResponseHeaderOverrides responseHeaders;
    private ServerSideEncryptionCustomerMethod serverSideCustomerEncryption;
    private string serverSideEncryptionCustomerProvidedKey;
    private string serverSideEncryptionCustomerProvidedKeyMD5;
    public string BucketName { get; public set; }
    public string EtagToMatch { get; public set; }
    public DateTime ModifiedSinceDate { get; public set; }
    public string EtagToNotMatch { get; public set; }
    public DateTime UnmodifiedSinceDate { get; public set; }
    public string Key { get; public set; }
    public ByteRange ByteRange { get; public set; }
    public ResponseHeaderOverrides ResponseHeaderOverrides { get; public set; }
    public DateTime ResponseExpires { get; public set; }
    public string VersionId { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_EtagToMatch();
    public void set_EtagToMatch(string value);
    internal bool IsSetEtagToMatch();
    public DateTime get_ModifiedSinceDate();
    public void set_ModifiedSinceDate(DateTime value);
    internal bool IsSetModifiedSinceDate();
    public string get_EtagToNotMatch();
    public void set_EtagToNotMatch(string value);
    internal bool IsSetEtagToNotMatch();
    public DateTime get_UnmodifiedSinceDate();
    public void set_UnmodifiedSinceDate(DateTime value);
    internal bool IsSetUnmodifiedSinceDate();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public ByteRange get_ByteRange();
    public void set_ByteRange(ByteRange value);
    internal bool IsSetByteRange();
    public ResponseHeaderOverrides get_ResponseHeaderOverrides();
    public void set_ResponseHeaderOverrides(ResponseHeaderOverrides value);
    public DateTime get_ResponseExpires();
    public void set_ResponseExpires(DateTime value);
    internal bool IsSetResponseExpires();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetServerSideEncryptionCustomerMethod();
    public string get_ServerSideEncryptionCustomerProvidedKey();
    public void set_ServerSideEncryptionCustomerProvidedKey(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKey();
    public string get_ServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_ServerSideEncryptionCustomerProvidedKeyMD5(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKeyMD5();
}
public class Amazon.S3.Model.GetObjectResponse : StreamResponse {
    private string deleteMarker;
    private string acceptRanges;
    private Expiration expiration;
    private Nullable`1<DateTime> restoreExpiration;
    private bool restoreInProgress;
    private Nullable`1<DateTime> lastModified;
    private string eTag;
    private Nullable`1<int> missingMeta;
    private string versionId;
    private Nullable`1<DateTime> expires;
    private string websiteRedirectLocation;
    private ServerSideEncryptionMethod serverSideEncryption;
    private ServerSideEncryptionCustomerMethod serverSideEncryptionCustomerMethod;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    private HeadersCollection headersCollection;
    private MetadataCollection metadataCollection;
    private ReplicationStatus replicationStatus;
    private S3StorageClass storageClass;
    private string bucketName;
    private string key;
    private EventHandler`1<WriteObjectProgressArgs> WriteObjectProgressEvent;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string DeleteMarker { get; public set; }
    public HeadersCollection Headers { get; }
    public MetadataCollection Metadata { get; }
    public string AcceptRanges { get; public set; }
    public Expiration Expiration { get; public set; }
    public Nullable`1<DateTime> RestoreExpiration { get; public set; }
    public bool RestoreInProgress { get; public set; }
    public DateTime LastModified { get; public set; }
    public string ETag { get; public set; }
    public int MissingMeta { get; public set; }
    public string VersionId { get; public set; }
    public DateTime Expires { get; public set; }
    public string WebsiteRedirectLocation { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public ReplicationStatus ReplicationStatus { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_Key();
    public void set_Key(string value);
    public string get_DeleteMarker();
    public void set_DeleteMarker(string value);
    internal bool IsSetDeleteMarker();
    public HeadersCollection get_Headers();
    public MetadataCollection get_Metadata();
    public string get_AcceptRanges();
    public void set_AcceptRanges(string value);
    internal bool IsSetAcceptRanges();
    public Expiration get_Expiration();
    public void set_Expiration(Expiration value);
    internal bool IsSetExpiration();
    public Nullable`1<DateTime> get_RestoreExpiration();
    public void set_RestoreExpiration(Nullable`1<DateTime> value);
    public bool get_RestoreInProgress();
    public void set_RestoreInProgress(bool value);
    public DateTime get_LastModified();
    public void set_LastModified(DateTime value);
    internal bool IsSetLastModified();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public int get_MissingMeta();
    public void set_MissingMeta(int value);
    internal bool IsSetMissingMeta();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public DateTime get_Expires();
    public void set_Expires(DateTime value);
    internal bool IsSetExpires();
    public string get_WebsiteRedirectLocation();
    public void set_WebsiteRedirectLocation(string value);
    internal bool IsSetWebsiteRedirectLocation();
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    internal bool IsSetServerSideEncryptionMethod();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
    public ReplicationStatus get_ReplicationStatus();
    public void set_ReplicationStatus(ReplicationStatus value);
    internal bool IsSetReplicationStatus();
    public void add_WriteObjectProgressEvent(EventHandler`1<WriteObjectProgressArgs> value);
    public void remove_WriteObjectProgressEvent(EventHandler`1<WriteObjectProgressArgs> value);
    internal void OnRaiseProgressEvent(string file, long incrementTransferred, long transferred, long total);
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    private void ValidateWrittenStreamSize(long bytesWritten);
    [AsyncStateMachineAttribute("Amazon.S3.Model.GetObjectResponse/<WriteResponseStreamToFileAsync>d__0")]
[ObsoleteAttribute("This method is obsolete and will be removed in a future update.")]
[DebuggerStepThroughAttribute]
[CLSCompliantAttribute("False")]
public Task WriteResponseStreamToFileAsync(IStorageFile storageFile, bool append, CancellationToken cancellationToken);
}
public class Amazon.S3.Model.GetObjectTorrentRequest : AmazonWebServiceRequest {
    private string bucketName;
    private string key;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
}
public class Amazon.S3.Model.GetObjectTorrentResponse : StreamResponse {
}
public class Amazon.S3.Model.GetPreSignedUrlRequest : AmazonWebServiceRequest {
    private ResponseHeaderOverrides _responseHeaders;
    private string bucketName;
    private string key;
    private Nullable`1<DateTime> expires;
    private Protocol protocol;
    private HttpVerb verb;
    private string versionId;
    private ServerSideEncryptionMethod encryption;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    private HeadersCollection headersCollection;
    private MetadataCollection metadataCollection;
    private ServerSideEncryptionCustomerMethod serverSideCustomerEncryption;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string ContentType { get; public set; }
    public DateTime Expires { get; public set; }
    public Protocol Protocol { get; public set; }
    public HttpVerb Verb { get; public set; }
    public string VersionId { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public ResponseHeaderOverrides ResponseHeaderOverrides { get; public set; }
    public HeadersCollection Headers { get; internal set; }
    public MetadataCollection Metadata { get; internal set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_ContentType();
    public void set_ContentType(string value);
    public DateTime get_Expires();
    public void set_Expires(DateTime value);
    public bool IsSetExpires();
    public Protocol get_Protocol();
    public void set_Protocol(Protocol value);
    public HttpVerb get_Verb();
    public void set_Verb(HttpVerb value);
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetServerSideEncryptionCustomerMethod();
    public ResponseHeaderOverrides get_ResponseHeaderOverrides();
    public void set_ResponseHeaderOverrides(ResponseHeaderOverrides value);
    public HeadersCollection get_Headers();
    internal void set_Headers(HeadersCollection value);
    public MetadataCollection get_Metadata();
    internal void set_Metadata(MetadataCollection value);
}
internal class Amazon.S3.Model.HeadBucketRequest : AmazonWebServiceRequest {
    private string bucketName;
    public string BucketName { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
internal class Amazon.S3.Model.HeadBucketResponse : AmazonWebServiceResponse {
}
[DefaultMemberAttribute("Item")]
public class Amazon.S3.Model.HeadersCollection : object {
    private IDictionary`2<string, string> _values;
    public string Item { get; public set; }
    public int Count { get; }
    public ICollection`1<string> Keys { get; }
    public string CacheControl { get; public set; }
    public string ContentDisposition { get; public set; }
    public string ContentEncoding { get; public set; }
    public long ContentLength { get; public set; }
    public string ContentMD5 { get; public set; }
    public string ContentType { get; public set; }
    public Nullable`1<DateTime> Expires { get; public set; }
    public string get_Item(string name);
    public void set_Item(string name, string value);
    public int get_Count();
    public ICollection`1<string> get_Keys();
    public string get_CacheControl();
    public void set_CacheControl(string value);
    public string get_ContentDisposition();
    public void set_ContentDisposition(string value);
    public string get_ContentEncoding();
    public void set_ContentEncoding(string value);
    public long get_ContentLength();
    public void set_ContentLength(long value);
    public string get_ContentMD5();
    public void set_ContentMD5(string value);
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public Nullable`1<DateTime> get_Expires();
    public void set_Expires(Nullable`1<DateTime> value);
}
public class Amazon.S3.Model.InitiateMultipartUploadRequest : PutWithACLRequest {
    private S3CannedACL cannedACL;
    private string bucketName;
    private string key;
    private S3StorageClass storageClass;
    private string websiteRedirectLocation;
    private HeadersCollection headersCollection;
    private MetadataCollection metadataCollection;
    private ServerSideEncryptionMethod serverSideEncryption;
    private ServerSideEncryptionCustomerMethod serverSideCustomerEncryption;
    private string serverSideEncryptionCustomerProvidedKey;
    private string serverSideEncryptionCustomerProvidedKeyMD5;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    private Byte[] envelopeKey;
    private Byte[] iv;
    internal Byte[] EnvelopeKey { get; internal set; }
    internal Byte[] IV { get; internal set; }
    public S3CannedACL CannedACL { get; public set; }
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public string WebsiteRedirectLocation { get; public set; }
    public HeadersCollection Headers { get; internal set; }
    public MetadataCollection Metadata { get; internal set; }
    public string ContentType { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    internal Byte[] get_EnvelopeKey();
    internal void set_EnvelopeKey(Byte[] value);
    internal Byte[] get_IV();
    internal void set_IV(Byte[] value);
    public S3CannedACL get_CannedACL();
    public void set_CannedACL(S3CannedACL value);
    internal bool IsSetCannedACL();
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
    public string get_WebsiteRedirectLocation();
    public void set_WebsiteRedirectLocation(string value);
    internal bool IsSetWebsiteRedirectLocation();
    public HeadersCollection get_Headers();
    internal void set_Headers(HeadersCollection value);
    public MetadataCollection get_Metadata();
    internal void set_Metadata(MetadataCollection value);
    public string get_ContentType();
    public void set_ContentType(string value);
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    internal bool IsSetServerSideEncryptionMethod();
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetServerSideEncryptionCustomerMethod();
    public string get_ServerSideEncryptionCustomerProvidedKey();
    public void set_ServerSideEncryptionCustomerProvidedKey(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKey();
    public string get_ServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_ServerSideEncryptionCustomerProvidedKeyMD5(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKeyMD5();
}
public class Amazon.S3.Model.InitiateMultipartUploadResponse : AmazonWebServiceResponse {
    private string bucketName;
    private string key;
    private string uploadId;
    private ServerSideEncryptionMethod serverSideEncryption;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string UploadId { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
}
public class Amazon.S3.Model.Initiator : object {
    private string displayName;
    private string iD;
    public string DisplayName { get; public set; }
    public string Id { get; public set; }
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.AbortMultipartUploadRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AbortMultipartUploadRequest abortMultipartUploadRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.AbortMultipartUploadResponseUnmarshaller : S3ReponseUnmarshaller {
    private static AbortMultipartUploadResponseUnmarshaller _instance;
    public static AbortMultipartUploadResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static AbortMultipartUploadResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.BucketUnmarshaller : object {
    private static BucketUnmarshaller _instance;
    public static BucketUnmarshaller Instance { get; }
    public sealed virtual S3Bucket Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Bucket Unmarshall(JsonUnmarshallerContext context);
    public static BucketUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.CloudFunctionConfigurationUnmarshaller : object {
    private static CloudFunctionConfigurationUnmarshaller _instance;
    public static CloudFunctionConfigurationUnmarshaller Instance { get; }
    public sealed virtual CloudFunctionConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudFunctionConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static CloudFunctionConfigurationUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.CommonPrefixesItemUnmarshaller : object {
    private static CommonPrefixesItemUnmarshaller _instance;
    public static CommonPrefixesItemUnmarshaller Instance { get; }
    public sealed virtual string Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual string Unmarshall(JsonUnmarshallerContext context);
    public static CommonPrefixesItemUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.CompleteMultipartUploadRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CompleteMultipartUploadRequest completeMultipartUploadRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.CompleteMultipartUploadResponseUnmarshaller : S3ReponseUnmarshaller {
    private static CompleteMultipartUploadResponseUnmarshaller _instance;
    public static CompleteMultipartUploadResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CompleteMultipartUploadResponse response);
    public static CompleteMultipartUploadResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.ContentsItemUnmarshaller : object {
    private static ContentsItemUnmarshaller _instance;
    public static ContentsItemUnmarshaller Instance { get; }
    public sealed virtual S3Object Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Object Unmarshall(JsonUnmarshallerContext context);
    public static ContentsItemUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.CopyObjectRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyObjectRequest copyObjectRequest);
    private static string ConstructCopySourceHeaderValue(string bucket, string key, string version);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.CopyObjectResponseUnmarshaller : S3ReponseUnmarshaller {
    private static CopyObjectResponseUnmarshaller _instance;
    public static CopyObjectResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CopyObjectResponse response);
    public static CopyObjectResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.CopyPartRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyPartRequest copyPartRequest);
    private static string ConstructCopySourceHeaderValue(string bucket, string key, string version);
    private static string ConstructCopySourceRangeHeader(long firstByte, long lastByte);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.CopyPartResponseUnmarshaller : S3ReponseUnmarshaller {
    private static CopyPartResponseUnmarshaller _instance;
    public static CopyPartResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CopyPartResponse response);
    public static CopyPartResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.CORSRuleUnmarshaller : object {
    private static CORSRuleUnmarshaller _instance;
    public static CORSRuleUnmarshaller Instance { get; }
    public sealed virtual CORSRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CORSRule Unmarshall(JsonUnmarshallerContext context);
    public static CORSRuleUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBucketPolicyRequest deleteBucketPolicyRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketPolicyResponseUnmarshaller : S3ReponseUnmarshaller {
    private static DeleteBucketPolicyResponseUnmarshaller _instance;
    public static DeleteBucketPolicyResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static DeleteBucketPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketReplicationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBucketReplicationRequest deleteBucketReplicationRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketReplicationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static DeleteBucketReplicationResponseUnmarshaller _instance;
    public static DeleteBucketReplicationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static DeleteBucketReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBucketRequest deleteBucketRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketResponseUnmarshaller : S3ReponseUnmarshaller {
    private static DeleteBucketResponseUnmarshaller _instance;
    public static DeleteBucketResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static DeleteBucketResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketTaggingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBucketTaggingRequest deleteBucketTaggingRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketTaggingResponseUnmarshaller : S3ReponseUnmarshaller {
    private static DeleteBucketTaggingResponseUnmarshaller _instance;
    public static DeleteBucketTaggingResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static DeleteBucketTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketWebsiteRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBucketWebsiteRequest deleteBucketWebsiteRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketWebsiteResponseUnmarshaller : S3ReponseUnmarshaller {
    private static DeleteBucketWebsiteResponseUnmarshaller _instance;
    public static DeleteBucketWebsiteResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static DeleteBucketWebsiteResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.DeleteCORSConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCORSConfigurationRequest deleteCORSConfigurationRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.DeleteCORSConfigurationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static DeleteCORSConfigurationResponseUnmarshaller _instance;
    public static DeleteCORSConfigurationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static DeleteCORSConfigurationResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.DeletedObjectUnmarshaller : object {
    private static DeletedObjectUnmarshaller _instance;
    public static DeletedObjectUnmarshaller Instance { get; }
    public sealed virtual DeletedObject Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeletedObject Unmarshall(JsonUnmarshallerContext context);
    public static DeletedObjectUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.DeleteLifecycleConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLifecycleConfigurationRequest deleteLifecycleConfigurationRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.DeleteLifecycleConfigurationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static DeleteLifecycleConfigurationResponseUnmarshaller _instance;
    public static DeleteLifecycleConfigurationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static DeleteLifecycleConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteObjectRequest deleteObjectRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectResponseUnmarshaller : S3ReponseUnmarshaller {
    private static DeleteObjectResponseUnmarshaller _instance;
    public static DeleteObjectResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteObjectResponse response);
    public static DeleteObjectResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteObjectsRequest deleteObjectsRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectsResponseUnmarshaller : S3ReponseUnmarshaller {
    private static DeleteObjectsResponseUnmarshaller _instance;
    public static DeleteObjectsResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteObjectsResponse response);
    public static DeleteObjectsResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.ErrorsItemUnmarshaller : object {
    private static ErrorsItemUnmarshaller _instance;
    public static ErrorsItemUnmarshaller Instance { get; }
    public sealed virtual DeleteError Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteError Unmarshall(JsonUnmarshallerContext context);
    public static ErrorsItemUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.ExpirationUnmarshaller : object {
    private static ExpirationUnmarshaller _instance;
    public static ExpirationUnmarshaller Instance { get; }
    public sealed virtual LifecycleRuleExpiration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecycleRuleExpiration Unmarshall(JsonUnmarshallerContext context);
    public static ExpirationUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.FilterRuleUnmarshaller : object {
    private static FilterRuleUnmarshaller _instance;
    public static FilterRuleUnmarshaller Instance { get; }
    public sealed virtual FilterRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FilterRule Unmarshall(JsonUnmarshallerContext context);
    public static FilterRuleUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.FilterUnmarshaller : object {
    private static FilterUnmarshaller _instance;
    public static FilterUnmarshaller Instance { get; }
    public sealed virtual Filter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Filter Unmarshall(JsonUnmarshallerContext context);
    public static FilterUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetACLRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetACLRequest getObjectAclRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetACLResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetACLResponseUnmarshaller _instance;
    public static GetACLResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetACLResponse response);
    public static GetACLResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLocationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketLocationRequest getBucketLocationRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLocationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetBucketLocationResponseUnmarshaller _instance;
    public static GetBucketLocationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketLocationResponse response);
    public static GetBucketLocationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLoggingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketLoggingRequest getBucketLoggingRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLoggingResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetBucketLoggingResponseUnmarshaller _instance;
    public static GetBucketLoggingResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketLoggingResponse response);
    public static GetBucketLoggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketNotificationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketNotificationRequest getBucketNotificationRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketNotificationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetBucketNotificationResponseUnmarshaller _instance;
    public static GetBucketNotificationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketNotificationResponse response);
    public static GetBucketNotificationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketPolicyRequest getBucketPolicyRequest);
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketPolicyResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetBucketPolicyResponseUnmarshaller _instance;
    public static GetBucketPolicyResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketPolicyResponse response);
    public static GetBucketPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketReplicationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketReplicationRequest getBucketReplicationConfigurationRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketReplicationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetBucketReplicationResponseUnmarshaller _instance;
    public static GetBucketReplicationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketReplicationResponse response);
    public static GetBucketReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketRequestPaymentRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketRequestPaymentRequest getBucketRequestPaymentRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketRequestPaymentResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetBucketRequestPaymentResponseUnmarshaller _instance;
    public static GetBucketRequestPaymentResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketRequestPaymentResponse response);
    public static GetBucketRequestPaymentResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketTaggingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketTaggingRequest getBucketTaggingRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketTaggingResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetBucketTaggingResponseUnmarshaller _instance;
    public static GetBucketTaggingResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketTaggingResponse response);
    public static GetBucketTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketVersioningRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketVersioningRequest getBucketVersioningRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketVersioningResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetBucketVersioningResponseUnmarshaller _instance;
    public static GetBucketVersioningResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketVersioningResponse response);
    public static GetBucketVersioningResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketWebsiteRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetBucketWebsiteRequest getBucketWebsiteRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetBucketWebsiteResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetBucketWebsiteResponseUnmarshaller _instance;
    public static GetBucketWebsiteResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetBucketWebsiteResponse response);
    public static GetBucketWebsiteResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetCORSConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCORSConfigurationRequest getCORSConfigurationRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetCORSConfigurationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetCORSConfigurationResponseUnmarshaller _instance;
    public static GetCORSConfigurationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetCORSConfigurationResponse response);
    public static GetCORSConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetLifecycleConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetLifecycleConfigurationRequest getLifecycleConfiguration);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetLifecycleConfigurationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetLifecycleConfigurationResponseUnmarshaller _instance;
    public static GetLifecycleConfigurationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetLifecycleConfigurationResponse response);
    public static GetLifecycleConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetObjectMetadataRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetObjectMetadataRequest headObjectRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetObjectMetadataResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetObjectMetadataResponseUnmarshaller _instance;
    public static GetObjectMetadataResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetObjectMetadataResponse response);
    public static GetObjectMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetObjectRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetObjectRequest getObjectRequest);
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetObjectResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetObjectResponseUnmarshaller _instance;
    internal bool HasStreamingProperty { get; }
    public static GetObjectResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetObjectResponse response);
    internal virtual bool get_HasStreamingProperty();
    public static GetObjectResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.GetObjectTorrentRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetObjectTorrentRequest getObjectTorrentRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GetObjectTorrentResponseUnmarshaller : S3ReponseUnmarshaller {
    private static GetObjectTorrentResponseUnmarshaller _instance;
    internal bool HasStreamingProperty { get; }
    public static GetObjectTorrentResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetObjectTorrentResponse response);
    internal virtual bool get_HasStreamingProperty();
    public static GetObjectTorrentResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GranteeUnmarshaller : object {
    private static GranteeUnmarshaller _instance;
    public static GranteeUnmarshaller Instance { get; }
    public sealed virtual S3Grantee Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Grantee Unmarshall(JsonUnmarshallerContext context);
    public static GranteeUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.GrantUnmarshaller : object {
    private static GrantUnmarshaller _instance;
    public static GrantUnmarshaller Instance { get; }
    public sealed virtual S3Grant Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Grant Unmarshall(JsonUnmarshallerContext context);
    public static GrantUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.HeadBucketRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(HeadBucketRequest headBucketRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.HeadBucketResponseUnmarshaller : S3ReponseUnmarshaller {
    private static HeadBucketResponseUnmarshaller _instance;
    public static HeadBucketResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static HeadBucketResponseUnmarshaller get_Instance();
}
public static class Amazon.S3.Model.Internal.MarshallTransformations.HeaderACLRequestMarshaller : object {
    public static void Marshall(IRequest request, PutWithACLRequest aclRequest);
}
public class Amazon.S3.Model.Internal.MarshallTransformations.InitiateMultipartUploadRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InitiateMultipartUploadRequest initiateMultipartUploadRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.InitiateMultipartUploadResponseUnmarshaller : S3ReponseUnmarshaller {
    private static InitiateMultipartUploadResponseUnmarshaller _instance;
    public static InitiateMultipartUploadResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, InitiateMultipartUploadResponse response);
    public static InitiateMultipartUploadResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.InitiatorUnmarshaller : object {
    private static InitiatorUnmarshaller _instance;
    public static InitiatorUnmarshaller Instance { get; }
    public sealed virtual Initiator Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Initiator Unmarshall(JsonUnmarshallerContext context);
    public static InitiatorUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.LifecycleRuleNoncurrentVersionExpirationUnmarshaller : object {
    private static LifecycleRuleNoncurrentVersionExpirationUnmarshaller _instance;
    public static LifecycleRuleNoncurrentVersionExpirationUnmarshaller Instance { get; }
    public sealed virtual LifecycleRuleNoncurrentVersionExpiration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecycleRuleNoncurrentVersionExpiration Unmarshall(JsonUnmarshallerContext context);
    public static LifecycleRuleNoncurrentVersionExpirationUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.LifecycleRuleNoncurrentVersionTransitionUnmarshaller : object {
    private static LifecycleRuleNoncurrentVersionTransitionUnmarshaller _instance;
    public static LifecycleRuleNoncurrentVersionTransitionUnmarshaller Instance { get; }
    public sealed virtual LifecycleRuleNoncurrentVersionTransition Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecycleRuleNoncurrentVersionTransition Unmarshall(JsonUnmarshallerContext context);
    public static LifecycleRuleNoncurrentVersionTransitionUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.ListBucketsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListBucketsRequest listBucketsRequest);
}
public class Amazon.S3.Model.Internal.MarshallTransformations.ListBucketsResponseUnmarshaller : S3ReponseUnmarshaller {
    private static ListBucketsResponseUnmarshaller _instance;
    public static ListBucketsResponseUnmarshaller Instance { get; }
    private static ListBucketsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListBucketsResponse response);
    public static ListBucketsResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.ListMultipartUploadsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMultipartUploadsRequest listMultipartUploadsRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.ListMultipartUploadsResponseUnmarshaller : S3ReponseUnmarshaller {
    private static ListMultipartUploadsResponseUnmarshaller _instance;
    public static ListMultipartUploadsResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListMultipartUploadsResponse response);
    public static ListMultipartUploadsResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.ListObjectsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListObjectsRequest listObjectsRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.ListObjectsResponseUnmarshaller : S3ReponseUnmarshaller {
    private static ListObjectsResponseUnmarshaller _instance;
    public static ListObjectsResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListObjectsResponse response);
    public static ListObjectsResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.ListPartsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListPartsRequest listPartsRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.ListPartsResponseUnmarshaller : S3ReponseUnmarshaller {
    private static ListPartsResponseUnmarshaller _instance;
    public static ListPartsResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListPartsResponse response);
    public static ListPartsResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.ListVersionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVersionsRequest listVersionsRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.ListVersionsResponseUnmarshaller : S3ReponseUnmarshaller {
    private static ListVersionsResponseUnmarshaller _instance;
    public static ListVersionsResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListVersionsResponse response);
    public static ListVersionsResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.LoggingEnabledUnmarshaller : object {
    private static LoggingEnabledUnmarshaller _instance;
    public static LoggingEnabledUnmarshaller Instance { get; }
    public sealed virtual S3BucketLoggingConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3BucketLoggingConfig Unmarshall(JsonUnmarshallerContext context);
    public static LoggingEnabledUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.MultipartUploadUnmarshaller : object {
    private static MultipartUploadUnmarshaller _instance;
    public static MultipartUploadUnmarshaller Instance { get; }
    public sealed virtual MultipartUpload Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MultipartUpload Unmarshall(JsonUnmarshallerContext context);
    public static MultipartUploadUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.OwnerUnmarshaller : object {
    private static OwnerUnmarshaller _instance;
    public static OwnerUnmarshaller Instance { get; }
    public sealed virtual Owner Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Owner Unmarshall(JsonUnmarshallerContext context);
    public static OwnerUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PartDetailUnmarshaller : object {
    private static PartDetailUnmarshaller _instance;
    public static PartDetailUnmarshaller Instance { get; }
    public sealed virtual PartDetail Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PartDetail Unmarshall(JsonUnmarshallerContext context);
    public static PartDetailUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutACLRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutACLRequest putObjectAclRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutACLResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutACLResponseUnmarshaller _instance;
    public static PutACLResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutACLResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketLoggingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketLoggingRequest putBucketLoggingRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketLoggingResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutBucketLoggingResponseUnmarshaller _instance;
    public static PutBucketLoggingResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutBucketLoggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketNotificationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketNotificationRequest putBucketNotificationRequest);
    private static void WriteConfigurationCommon(XmlWriter xmlWriter, NotificationConfiguration notificationConfiguration);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketNotificationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutBucketNotificationResponseUnmarshaller _instance;
    public static PutBucketNotificationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutBucketNotificationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketPolicyRequest putBucketPolicyRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketPolicyResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutBucketPolicyResponseUnmarshaller _instance;
    public static PutBucketPolicyResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutBucketPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketReplicationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketReplicationRequest putBucketreplicationRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketReplicationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutBucketReplicationResponseUnmarshaller _instance;
    public static PutBucketReplicationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutBucketReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketRequest putBucketRequest);
    protected internal static void ConvertPutWithACLRequest(PutWithACLRequest request, IRequest irequest);
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketRequestPaymentRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketRequestPaymentRequest putBucketRequestPaymentRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketRequestPaymentResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutBucketRequestPaymentResponseUnmarshaller _instance;
    public static PutBucketRequestPaymentResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutBucketRequestPaymentResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutBucketResponseUnmarshaller _instance;
    public static PutBucketResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutBucketResponse response);
    public static PutBucketResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketTaggingRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketTaggingRequest putBucketTaggingRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketTaggingResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutBucketTaggingResponseUnmarshaller _instance;
    public static PutBucketTaggingResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutBucketTaggingResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketVersioningRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketVersioningRequest putBucketVersioningRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketVersioningResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutBucketVersioningResponseUnmarshaller _instance;
    public static PutBucketVersioningResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutBucketVersioningResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketWebsiteRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutBucketWebsiteRequest putBucketWebsiteRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutBucketWebsiteResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutBucketWebsiteResponseUnmarshaller _instance;
    public static PutBucketWebsiteResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutBucketWebsiteResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutCORSConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutCORSConfigurationRequest putCORSConfigurationRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutCORSConfigurationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutCORSConfigurationResponseUnmarshaller _instance;
    public static PutCORSConfigurationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutCORSConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutLifecycleConfigurationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutLifecycleConfigurationRequest putLifecycleConfigurationRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.PutLifecycleConfigurationResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutLifecycleConfigurationResponseUnmarshaller _instance;
    public static PutLifecycleConfigurationResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static PutLifecycleConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutObjectRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutObjectRequest putObjectRequest);
    private static Stream GetStreamWithLength(Stream baseStream, long hintLength);
}
public class Amazon.S3.Model.Internal.MarshallTransformations.PutObjectResponseUnmarshaller : S3ReponseUnmarshaller {
    private static PutObjectResponseUnmarshaller _instance;
    public static PutObjectResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutObjectResponse response);
    public static PutObjectResponseUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.QueueConfigurationUnmarshaller : object {
    private static QueueConfigurationUnmarshaller _instance;
    public static QueueConfigurationUnmarshaller Instance { get; }
    public sealed virtual QueueConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueueConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static QueueConfigurationUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.ReplicationDestinationUnmarshaller : object {
    private static ReplicationDestinationUnmarshaller _instance;
    public static ReplicationDestinationUnmarshaller Instance { get; }
    public sealed virtual ReplicationDestination Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationDestination Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationDestinationUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.ReplicationRuleUnmarshaller : object {
    private static ReplicationRuleUnmarshaller _instance;
    public static ReplicationRuleUnmarshaller Instance { get; }
    public sealed virtual ReplicationRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationRule Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationRuleUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.RestoreObjectRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreObjectRequest restoreObjectRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.RestoreObjectResponseUnmarshaller : S3ReponseUnmarshaller {
    private static RestoreObjectResponseUnmarshaller _instance;
    public static RestoreObjectResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public static RestoreObjectResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.RoutingRuleConditionUnmarshaller : object {
    private static RoutingRuleConditionUnmarshaller _instance;
    public static RoutingRuleConditionUnmarshaller Instance { get; }
    public sealed virtual RoutingRuleCondition Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RoutingRuleCondition Unmarshall(JsonUnmarshallerContext context);
    public static RoutingRuleConditionUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.RoutingRuleRedirectUnmarshaller : object {
    private static RoutingRuleRedirectUnmarshaller _instance;
    public static RoutingRuleRedirectUnmarshaller Instance { get; }
    public sealed virtual RoutingRuleRedirect Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RoutingRuleRedirect Unmarshall(JsonUnmarshallerContext context);
    public static RoutingRuleRedirectUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.RoutingRuleUnmarshaller : object {
    private static RoutingRuleUnmarshaller _instance;
    public static RoutingRuleUnmarshaller Instance { get; }
    public sealed virtual RoutingRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RoutingRule Unmarshall(JsonUnmarshallerContext context);
    public static RoutingRuleUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.RulesItemUnmarshaller : object {
    private static RulesItemUnmarshaller _instance;
    public static RulesItemUnmarshaller Instance { get; }
    public sealed virtual LifecycleRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecycleRule Unmarshall(JsonUnmarshallerContext context);
    public static RulesItemUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.S3ErrorResponse : ErrorResponse {
    [CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id2>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <ParsingException>k__BackingField;
    public string Resource { get; public set; }
    public string Id2 { get; public set; }
    public Exception ParsingException { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(string value);
    [CompilerGeneratedAttribute]
public string get_Id2();
    [CompilerGeneratedAttribute]
public void set_Id2(string value);
    [CompilerGeneratedAttribute]
public Exception get_ParsingException();
    [CompilerGeneratedAttribute]
public void set_ParsingException(Exception value);
}
public class Amazon.S3.Model.Internal.MarshallTransformations.S3ErrorResponseUnmarshaller : object {
    private static S3ErrorResponseUnmarshaller _instance;
    public static S3ErrorResponseUnmarshaller Instance { get; }
    public sealed virtual S3ErrorResponse Unmarshall(XmlUnmarshallerContext context);
    public static S3ErrorResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.S3KeyFilterUnmarshaller : object {
    private static S3KeyFilterUnmarshaller _instance;
    public static S3KeyFilterUnmarshaller Instance { get; }
    public sealed virtual S3KeyFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3KeyFilter Unmarshall(JsonUnmarshallerContext context);
    public static S3KeyFilterUnmarshaller get_Instance();
}
public static class Amazon.S3.Model.Internal.MarshallTransformations.S3Transforms : object {
    internal static string ToURLEncodedValue(string value, bool path);
    internal static string ToURLEncodedValue(int value, bool path);
    internal static string ToURLEncodedValue(DateTime value, bool path);
    internal static string ToStringValue(string value);
    internal static string ToStringValue(int value);
    internal static string ToStringValue(DateTime value);
    internal static string ToXmlStringValue(string value);
    internal static string ToXmlStringValue(DateTime value);
    internal static string ToXmlStringValue(int value);
    internal static DateTime ToDateTime(string value);
    internal static int ToInt(string value);
    internal static string ToString(string value);
    internal static T Unmarshall(string text);
    internal static void BuildQueryParameterMap(IRequest request, IDictionary`2<string, string> queryParameters, string queryString, String[] unusedIfNullValueParams);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    public sealed virtual Tag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.TopicConfigurationUnmarshaller : object {
    private static TopicConfigurationUnmarshaller _instance;
    public static TopicConfigurationUnmarshaller Instance { get; }
    public sealed virtual TopicConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TopicConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static TopicConfigurationUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.TransitionUnmarshaller : object {
    private static TransitionUnmarshaller _instance;
    public static TransitionUnmarshaller Instance { get; }
    public sealed virtual LifecycleTransition Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LifecycleTransition Unmarshall(JsonUnmarshallerContext context);
    public static TransitionUnmarshaller get_Instance();
}
public class Amazon.S3.Model.Internal.MarshallTransformations.UploadPartRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UploadPartRequest uploadPartRequest);
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.UploadPartResponseUnmarshaller : S3ReponseUnmarshaller {
    private static UploadPartResponseUnmarshaller _instance;
    public static UploadPartResponseUnmarshaller Instance { get; }
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UploadPartResponse response);
    public static UploadPartResponseUnmarshaller get_Instance();
}
internal class Amazon.S3.Model.Internal.MarshallTransformations.VersionsItemUnmarshaller : object {
    private static VersionsItemUnmarshaller _instance;
    public static VersionsItemUnmarshaller Instance { get; }
    public sealed virtual S3ObjectVersion Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3ObjectVersion Unmarshall(JsonUnmarshallerContext context);
    public static VersionsItemUnmarshaller get_Instance();
}
public class Amazon.S3.Model.KeyVersion : object {
    private string key;
    private string versionId;
    public string Key { get; public set; }
    public string VersionId { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.S3.Model.LambdaFunctionConfiguration : NotificationConfiguration {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FunctionArn>k__BackingField;
    public string Id { get; public set; }
    public string FunctionArn { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    internal bool IsSetId();
    [CompilerGeneratedAttribute]
public string get_FunctionArn();
    [CompilerGeneratedAttribute]
public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
}
public class Amazon.S3.Model.LifecycleConfiguration : object {
    private List`1<LifecycleRule> rules;
    public List`1<LifecycleRule> Rules { get; public set; }
    public List`1<LifecycleRule> get_Rules();
    public void set_Rules(List`1<LifecycleRule> value);
    internal bool IsSetRules();
}
public class Amazon.S3.Model.LifecycleRule : object {
    private string id;
    private string prefix;
    private LifecycleRuleExpiration expiration;
    private LifecycleRuleStatus status;
    private LifecycleRuleNoncurrentVersionExpiration noncurrentVersionExpiration;
    private List`1<LifecycleTransition> transitions;
    private List`1<LifecycleRuleNoncurrentVersionTransition> noncurrentVersionTransitions;
    public LifecycleRuleExpiration Expiration { get; public set; }
    public string Id { get; public set; }
    public string Prefix { get; public set; }
    public LifecycleRuleStatus Status { get; public set; }
    [ObsoleteAttribute("The Transition property is now obsolete in favor the Transitions property.")]
public LifecycleTransition Transition { get; public set; }
    public LifecycleRuleNoncurrentVersionExpiration NoncurrentVersionExpiration { get; public set; }
    [ObsoleteAttribute("The NoncurrentVersionTransition property is now obsolete in favor the NoncurrentVersionTransitions property.")]
public LifecycleRuleNoncurrentVersionTransition NoncurrentVersionTransition { get; public set; }
    public List`1<LifecycleTransition> Transitions { get; public set; }
    public List`1<LifecycleRuleNoncurrentVersionTransition> NoncurrentVersionTransitions { get; public set; }
    public LifecycleRuleExpiration get_Expiration();
    public void set_Expiration(LifecycleRuleExpiration value);
    internal bool IsSetExpiration();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public LifecycleRuleStatus get_Status();
    public void set_Status(LifecycleRuleStatus value);
    internal bool IsSetStatus();
    public LifecycleTransition get_Transition();
    public void set_Transition(LifecycleTransition value);
    public LifecycleRuleNoncurrentVersionExpiration get_NoncurrentVersionExpiration();
    public void set_NoncurrentVersionExpiration(LifecycleRuleNoncurrentVersionExpiration value);
    internal bool IsSetNoncurrentVersionExpiration();
    public LifecycleRuleNoncurrentVersionTransition get_NoncurrentVersionTransition();
    public void set_NoncurrentVersionTransition(LifecycleRuleNoncurrentVersionTransition value);
    public List`1<LifecycleTransition> get_Transitions();
    public void set_Transitions(List`1<LifecycleTransition> value);
    internal bool IsSetTransitions();
    public List`1<LifecycleRuleNoncurrentVersionTransition> get_NoncurrentVersionTransitions();
    public void set_NoncurrentVersionTransitions(List`1<LifecycleRuleNoncurrentVersionTransition> value);
    internal bool IsSetNoncurrentVersionTransitions();
}
public class Amazon.S3.Model.LifecycleRuleExpiration : object {
    private Nullable`1<DateTime> date;
    private Nullable`1<int> days;
    public DateTime Date { get; public set; }
    public int Days { get; public set; }
    public DateTime get_Date();
    public void set_Date(DateTime value);
    internal bool IsSetDate();
    public int get_Days();
    public void set_Days(int value);
    internal bool IsSetDays();
}
public class Amazon.S3.Model.LifecycleRuleNoncurrentVersionExpiration : object {
    private Nullable`1<int> noncurrentDays;
    public int NoncurrentDays { get; public set; }
    public int get_NoncurrentDays();
    public void set_NoncurrentDays(int value);
    internal bool IsSetNoncurrentDays();
}
public class Amazon.S3.Model.LifecycleRuleNoncurrentVersionTransition : object {
    private Nullable`1<int> noncurrentDays;
    private S3StorageClass storageClass;
    public int NoncurrentDays { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public int get_NoncurrentDays();
    public void set_NoncurrentDays(int value);
    internal bool IsSetNoncurrentDays();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
}
public class Amazon.S3.Model.LifecycleTransition : object {
    private Nullable`1<DateTime> date;
    private Nullable`1<int> days;
    private S3StorageClass storageClass;
    public DateTime Date { get; public set; }
    public int Days { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public DateTime get_Date();
    public void set_Date(DateTime value);
    internal bool IsSetDate();
    public int get_Days();
    public void set_Days(int value);
    internal bool IsSetDays();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
}
public class Amazon.S3.Model.ListBucketsRequest : AmazonWebServiceRequest {
}
public class Amazon.S3.Model.ListBucketsResponse : AmazonWebServiceResponse {
    private List`1<S3Bucket> buckets;
    private Owner owner;
    public List`1<S3Bucket> Buckets { get; public set; }
    public Owner Owner { get; public set; }
    public List`1<S3Bucket> get_Buckets();
    public void set_Buckets(List`1<S3Bucket> value);
    internal bool IsSetBuckets();
    public Owner get_Owner();
    public void set_Owner(Owner value);
    internal bool IsSetOwner();
}
public class Amazon.S3.Model.ListMultipartUploadsRequest : AmazonWebServiceRequest {
    private string bucketName;
    private string delimiter;
    private string keyMarker;
    private Nullable`1<int> maxUploads;
    private string prefix;
    private string uploadIdMarker;
    private EncodingType encoding;
    public string BucketName { get; public set; }
    public string Delimiter { get; public set; }
    public string KeyMarker { get; public set; }
    public int MaxUploads { get; public set; }
    public string Prefix { get; public set; }
    public string UploadIdMarker { get; public set; }
    public EncodingType Encoding { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Delimiter();
    public void set_Delimiter(string value);
    internal bool IsSetDelimiter();
    public string get_KeyMarker();
    public void set_KeyMarker(string value);
    internal bool IsSetKeyMarker();
    public int get_MaxUploads();
    public void set_MaxUploads(int value);
    internal bool IsSetMaxUploads();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public string get_UploadIdMarker();
    public void set_UploadIdMarker(string value);
    internal bool IsSetUploadIdMarker();
    public EncodingType get_Encoding();
    public void set_Encoding(EncodingType value);
    internal bool IsSetEncoding();
}
public class Amazon.S3.Model.ListMultipartUploadsResponse : AmazonWebServiceResponse {
    private string bucketName;
    private string keyMarker;
    private string uploadIdMarker;
    private string nextKeyMarker;
    private string nextUploadIdMarker;
    private Nullable`1<int> maxUploads;
    private Nullable`1<bool> isTruncated;
    private List`1<MultipartUpload> multipartUploads;
    private string delimiter;
    private List`1<string> commonPrefixes;
    private string prefix;
    public string BucketName { get; public set; }
    public string KeyMarker { get; public set; }
    public string UploadIdMarker { get; public set; }
    public string NextKeyMarker { get; public set; }
    public string NextUploadIdMarker { get; public set; }
    public int MaxUploads { get; public set; }
    public bool IsTruncated { get; public set; }
    public List`1<MultipartUpload> MultipartUploads { get; public set; }
    public string Prefix { get; public set; }
    public string Delimiter { get; public set; }
    public List`1<string> CommonPrefixes { get; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_KeyMarker();
    public void set_KeyMarker(string value);
    internal bool IsSetKeyMarker();
    public string get_UploadIdMarker();
    public void set_UploadIdMarker(string value);
    internal bool IsSetUploadIdMarker();
    public string get_NextKeyMarker();
    public void set_NextKeyMarker(string value);
    internal bool IsSetNextKeyMarker();
    public string get_NextUploadIdMarker();
    public void set_NextUploadIdMarker(string value);
    internal bool IsSetNextUploadIdMarker();
    public int get_MaxUploads();
    public void set_MaxUploads(int value);
    internal bool IsSetMaxUploads();
    public bool get_IsTruncated();
    public void set_IsTruncated(bool value);
    internal bool IsSetIsTruncated();
    public List`1<MultipartUpload> get_MultipartUploads();
    public void set_MultipartUploads(List`1<MultipartUpload> value);
    public string get_Prefix();
    public void set_Prefix(string value);
    public string get_Delimiter();
    public void set_Delimiter(string value);
    public List`1<string> get_CommonPrefixes();
}
public class Amazon.S3.Model.ListObjectsRequest : AmazonWebServiceRequest {
    private string bucketName;
    private string delimiter;
    private string marker;
    private Nullable`1<int> maxKeys;
    private string prefix;
    private EncodingType encoding;
    public string BucketName { get; public set; }
    public string Delimiter { get; public set; }
    public string Marker { get; public set; }
    public int MaxKeys { get; public set; }
    public string Prefix { get; public set; }
    public EncodingType Encoding { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Delimiter();
    public void set_Delimiter(string value);
    internal bool IsSetDelimiter();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public int get_MaxKeys();
    public void set_MaxKeys(int value);
    internal bool IsSetMaxKeys();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public EncodingType get_Encoding();
    public void set_Encoding(EncodingType value);
    internal bool IsSetEncoding();
}
public class Amazon.S3.Model.ListObjectsResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> isTruncated;
    private string nextMarker;
    private List`1<S3Object> contents;
    private string name;
    private string prefix;
    private Nullable`1<int> maxKeys;
    private List`1<string> commonPrefixes;
    private string delimiter;
    public bool IsTruncated { get; public set; }
    public string NextMarker { get; public set; }
    public List`1<S3Object> S3Objects { get; public set; }
    public string Name { get; public set; }
    public string Prefix { get; public set; }
    public int MaxKeys { get; public set; }
    public List`1<string> CommonPrefixes { get; public set; }
    public string Delimiter { get; public set; }
    public bool get_IsTruncated();
    public void set_IsTruncated(bool value);
    internal bool IsSetIsTruncated();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public List`1<S3Object> get_S3Objects();
    public void set_S3Objects(List`1<S3Object> value);
    internal bool IsSetContents();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public int get_MaxKeys();
    public void set_MaxKeys(int value);
    internal bool IsSetMaxKeys();
    public List`1<string> get_CommonPrefixes();
    public void set_CommonPrefixes(List`1<string> value);
    internal bool IsSetCommonPrefixes();
    public string get_Delimiter();
    public void set_Delimiter(string value);
}
public class Amazon.S3.Model.ListPartsRequest : AmazonWebServiceRequest {
    private string bucketName;
    private string key;
    private Nullable`1<int> maxParts;
    private string partNumberMarker;
    private string uploadId;
    private EncodingType encoding;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public int MaxParts { get; public set; }
    public string PartNumberMarker { get; public set; }
    public string UploadId { get; public set; }
    public EncodingType Encoding { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public int get_MaxParts();
    public void set_MaxParts(int value);
    internal bool IsSetMaxParts();
    public string get_PartNumberMarker();
    public void set_PartNumberMarker(string value);
    internal bool IsSetPartNumberMarker();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
    public EncodingType get_Encoding();
    public void set_Encoding(EncodingType value);
    internal bool IsSetEncoding();
}
public class Amazon.S3.Model.ListPartsResponse : AmazonWebServiceResponse {
    private string bucketName;
    private string key;
    private string uploadId;
    private Owner owner;
    private Initiator initiator;
    private S3StorageClass storageClass;
    private Nullable`1<int> partNumberMarker;
    private Nullable`1<int> nextPartNumberMarker;
    private Nullable`1<int> maxParts;
    private Nullable`1<bool> isTruncated;
    private List`1<PartDetail> parts;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string UploadId { get; public set; }
    public int PartNumberMarker { get; public set; }
    public int NextPartNumberMarker { get; public set; }
    public int MaxParts { get; public set; }
    public bool IsTruncated { get; public set; }
    public List`1<PartDetail> Parts { get; public set; }
    public Initiator Initiator { get; public set; }
    public Owner Owner { get; public set; }
    public string StorageClass { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
    public int get_PartNumberMarker();
    public void set_PartNumberMarker(int value);
    internal bool IsSetPartNumberMarker();
    public int get_NextPartNumberMarker();
    public void set_NextPartNumberMarker(int value);
    internal bool IsSetNextPartNumberMarker();
    public int get_MaxParts();
    public void set_MaxParts(int value);
    internal bool IsSetMaxParts();
    public bool get_IsTruncated();
    public void set_IsTruncated(bool value);
    internal bool IsSetIsTruncated();
    public List`1<PartDetail> get_Parts();
    public void set_Parts(List`1<PartDetail> value);
    internal bool IsSetParts();
    public Initiator get_Initiator();
    public void set_Initiator(Initiator value);
    internal bool IsSetInitiator();
    public Owner get_Owner();
    public void set_Owner(Owner value);
    internal bool IsSetOwner();
    public string get_StorageClass();
    public void set_StorageClass(string value);
    internal bool IsSetStorageClass();
}
public class Amazon.S3.Model.ListVersionsRequest : AmazonWebServiceRequest {
    private string bucketName;
    private string delimiter;
    private string keyMarker;
    private Nullable`1<int> maxKeys;
    private string prefix;
    private string versionIdMarker;
    private EncodingType encoding;
    public string BucketName { get; public set; }
    public string Delimiter { get; public set; }
    public string KeyMarker { get; public set; }
    public int MaxKeys { get; public set; }
    public string Prefix { get; public set; }
    public string VersionIdMarker { get; public set; }
    public EncodingType Encoding { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Delimiter();
    public void set_Delimiter(string value);
    internal bool IsSetDelimiter();
    public string get_KeyMarker();
    public void set_KeyMarker(string value);
    internal bool IsSetKeyMarker();
    public int get_MaxKeys();
    public void set_MaxKeys(int value);
    internal bool IsSetMaxKeys();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public string get_VersionIdMarker();
    public void set_VersionIdMarker(string value);
    internal bool IsSetVersionIdMarker();
    public EncodingType get_Encoding();
    public void set_Encoding(EncodingType value);
    internal bool IsSetEncoding();
}
public class Amazon.S3.Model.ListVersionsResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> isTruncated;
    private string keyMarker;
    private string versionIdMarker;
    private string nextKeyMarker;
    private string nextVersionIdMarker;
    private List`1<S3ObjectVersion> versions;
    private string name;
    private string prefix;
    private Nullable`1<int> maxKeys;
    private List`1<string> commonPrefixes;
    private string delimiter;
    public bool IsTruncated { get; public set; }
    public string KeyMarker { get; public set; }
    public string VersionIdMarker { get; public set; }
    public string NextKeyMarker { get; public set; }
    public string NextVersionIdMarker { get; public set; }
    public List`1<S3ObjectVersion> Versions { get; public set; }
    public string Name { get; public set; }
    public string Prefix { get; public set; }
    public int MaxKeys { get; public set; }
    public List`1<string> CommonPrefixes { get; public set; }
    public string Delimiter { get; public set; }
    public bool get_IsTruncated();
    public void set_IsTruncated(bool value);
    internal bool IsSetIsTruncated();
    public string get_KeyMarker();
    public void set_KeyMarker(string value);
    internal bool IsSetKeyMarker();
    public string get_VersionIdMarker();
    public void set_VersionIdMarker(string value);
    internal bool IsSetVersionIdMarker();
    public string get_NextKeyMarker();
    public void set_NextKeyMarker(string value);
    internal bool IsSetNextKeyMarker();
    public string get_NextVersionIdMarker();
    public void set_NextVersionIdMarker(string value);
    internal bool IsSetNextVersionIdMarker();
    public List`1<S3ObjectVersion> get_Versions();
    public void set_Versions(List`1<S3ObjectVersion> value);
    internal bool IsSetVersions();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public int get_MaxKeys();
    public void set_MaxKeys(int value);
    internal bool IsSetMaxKeys();
    public List`1<string> get_CommonPrefixes();
    public void set_CommonPrefixes(List`1<string> value);
    internal bool IsSetCommonPrefixes();
    public string get_Delimiter();
    public void set_Delimiter(string value);
}
[DefaultMemberAttribute("Item")]
public class Amazon.S3.Model.MetadataCollection : object {
    private IDictionary`2<string, string> values;
    public string Item { get; public set; }
    public int Count { get; }
    public ICollection`1<string> Keys { get; }
    public string get_Item(string name);
    public void set_Item(string name, string value);
    public void Add(string name, string value);
    public int get_Count();
    public ICollection`1<string> get_Keys();
}
public class Amazon.S3.Model.MfaCodes : object {
    [CompilerGeneratedAttribute]
private string <SerialNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationValue>k__BackingField;
    public string SerialNumber { get; public set; }
    public string AuthenticationValue { get; public set; }
    public string FormattedMfaCodes { get; }
    [CompilerGeneratedAttribute]
public string get_SerialNumber();
    [CompilerGeneratedAttribute]
public void set_SerialNumber(string value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationValue();
    [CompilerGeneratedAttribute]
public void set_AuthenticationValue(string value);
    public string get_FormattedMfaCodes();
}
public class Amazon.S3.Model.MultipartUpload : object {
    private string key;
    private string uploadId;
    private Owner owner;
    private Initiator initiator;
    private Nullable`1<DateTime> initiated;
    private S3StorageClass storageClass;
    public DateTime Initiated { get; public set; }
    public Initiator Initiator { get; public set; }
    public string Key { get; public set; }
    public Owner Owner { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public string UploadId { get; public set; }
    public DateTime get_Initiated();
    public void set_Initiated(DateTime value);
    internal bool IsSetInitiated();
    public Initiator get_Initiator();
    public void set_Initiator(Initiator value);
    internal bool IsSetInitiator();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public Owner get_Owner();
    public void set_Owner(Owner value);
    internal bool IsSetOwner();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
}
public abstract class Amazon.S3.Model.NotificationConfiguration : object {
    private List`1<EventType> _events;
    private Filter filter;
    public List`1<EventType> Events { get; public set; }
    public Filter Filter { get; public set; }
    public List`1<EventType> get_Events();
    public void set_Events(List`1<EventType> value);
    internal bool IsSetEvents();
    public Filter get_Filter();
    public void set_Filter(Filter value);
    internal bool IsSetFilter();
}
public class Amazon.S3.Model.Owner : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string DisplayName { get; public set; }
    public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    internal bool IsSetDisplayName();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.S3.Model.PartDetail : PartETag {
    private Nullable`1<DateTime> lastModified;
    private Nullable`1<long> size;
    public DateTime LastModified { get; public set; }
    public long Size { get; public set; }
    public DateTime get_LastModified();
    public void set_LastModified(DateTime value);
    internal bool IsLastModified();
    public long get_Size();
    public void set_Size(long value);
    internal bool IsSize();
}
public class Amazon.S3.Model.PartETag : object {
    private Nullable`1<int> partNumber;
    private string eTag;
    public int PartNumber { get; public set; }
    public string ETag { get; public set; }
    public PartETag(int partNumber, string eTag);
    public sealed virtual int CompareTo(PartETag other);
    public int get_PartNumber();
    public void set_PartNumber(int value);
    internal bool IsSetPartNumber();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.S3.Model.PutACLRequest : AmazonWebServiceRequest {
    private S3CannedACL cannedACL;
    private S3AccessControlList accessControlPolicy;
    private string bucket;
    private string key;
    private string versionId;
    public S3CannedACL CannedACL { get; public set; }
    public S3AccessControlList AccessControlList { get; public set; }
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string VersionId { get; public set; }
    public S3CannedACL get_CannedACL();
    public void set_CannedACL(S3CannedACL value);
    internal bool IsSetCannedACL();
    public S3AccessControlList get_AccessControlList();
    public void set_AccessControlList(S3AccessControlList value);
    internal bool IsSetAccessControlPolicy();
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.S3.Model.PutACLResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutBucketLoggingRequest : AmazonWebServiceRequest {
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private S3BucketLoggingConfig <LoggingConfig>k__BackingField;
    public string BucketName { get; public set; }
    public S3BucketLoggingConfig LoggingConfig { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    internal bool IsSetBucketName();
    [CompilerGeneratedAttribute]
public S3BucketLoggingConfig get_LoggingConfig();
    [CompilerGeneratedAttribute]
public void set_LoggingConfig(S3BucketLoggingConfig value);
    internal bool IsSetLoggingConfig();
}
public class Amazon.S3.Model.PutBucketLoggingResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutBucketNotificationRequest : AmazonWebServiceRequest {
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TopicConfiguration> <TopicConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<QueueConfiguration> <QueueConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CloudFunctionConfiguration> <CloudFunctionConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<LambdaFunctionConfiguration> <LambdaFunctionConfigurations>k__BackingField;
    public string BucketName { get; public set; }
    public List`1<TopicConfiguration> TopicConfigurations { get; public set; }
    public List`1<QueueConfiguration> QueueConfigurations { get; public set; }
    [ObsoleteAttribute("CloudFunctionConfiguration is obsolete and will be removed in the upcoming version 3 of the SDK. LambdaFunctionConfiguration should be used instead, along with using IAmazonLambda.AddPermission for setting up permissions.")]
public List`1<CloudFunctionConfiguration> CloudFunctionConfigurations { get; public set; }
    public List`1<LambdaFunctionConfiguration> LambdaFunctionConfigurations { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    internal bool IsSetBucketName();
    [CompilerGeneratedAttribute]
public List`1<TopicConfiguration> get_TopicConfigurations();
    [CompilerGeneratedAttribute]
public void set_TopicConfigurations(List`1<TopicConfiguration> value);
    internal bool IsSetTopicConfigurations();
    [CompilerGeneratedAttribute]
public List`1<QueueConfiguration> get_QueueConfigurations();
    [CompilerGeneratedAttribute]
public void set_QueueConfigurations(List`1<QueueConfiguration> value);
    internal bool IsSetQueueConfigurations();
    [CompilerGeneratedAttribute]
public List`1<CloudFunctionConfiguration> get_CloudFunctionConfigurations();
    [CompilerGeneratedAttribute]
public void set_CloudFunctionConfigurations(List`1<CloudFunctionConfiguration> value);
    internal bool IsSetCloudFunctionConfigurations();
    [CompilerGeneratedAttribute]
public List`1<LambdaFunctionConfiguration> get_LambdaFunctionConfigurations();
    [CompilerGeneratedAttribute]
public void set_LambdaFunctionConfigurations(List`1<LambdaFunctionConfiguration> value);
    internal bool IsSetLambdaFunctionConfigurations();
}
public class Amazon.S3.Model.PutBucketNotificationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutBucketPolicyRequest : AmazonWebServiceRequest {
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentMD5>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Policy>k__BackingField;
    public string BucketName { get; public set; }
    public string ContentMD5 { get; public set; }
    public string Policy { get; public set; }
    internal bool IncludeSHA256Header { get; }
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
public void set_BucketName(string value);
    internal bool IsSetBucket();
    [CompilerGeneratedAttribute]
public string get_ContentMD5();
    [CompilerGeneratedAttribute]
public void set_ContentMD5(string value);
    internal bool IsSetContentMD5();
    [CompilerGeneratedAttribute]
public string get_Policy();
    [CompilerGeneratedAttribute]
public void set_Policy(string value);
    internal bool IsSetPolicy();
    internal virtual bool get_IncludeSHA256Header();
}
public class Amazon.S3.Model.PutBucketPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutBucketReplicationRequest : AmazonWebServiceRequest {
    private string bucketName;
    private ReplicationConfiguration configuration;
    public string BucketName { get; public set; }
    public ReplicationConfiguration Configuration { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public ReplicationConfiguration get_Configuration();
    public void set_Configuration(ReplicationConfiguration value);
    internal bool IsSetConfiguration();
}
public class Amazon.S3.Model.PutBucketReplicationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutBucketRequest : PutWithACLRequest {
    private string bucketName;
    private S3Region bucketRegion;
    private string bucketRegionName;
    private bool useClientRegion;
    private S3CannedACL cannedAcl;
    public S3CannedACL CannedACL { get; public set; }
    public bool UseClientRegion { get; public set; }
    public string BucketName { get; public set; }
    public S3Region BucketRegion { get; public set; }
    public string BucketRegionName { get; public set; }
    public S3CannedACL get_CannedACL();
    public void set_CannedACL(S3CannedACL value);
    internal bool IsSetCannedACL();
    public bool get_UseClientRegion();
    public void set_UseClientRegion(bool value);
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public S3Region get_BucketRegion();
    public void set_BucketRegion(S3Region value);
    internal bool IsSetBucketRegion();
    public string get_BucketRegionName();
    public void set_BucketRegionName(string value);
    internal bool IsSetBucketRegionName();
}
public class Amazon.S3.Model.PutBucketRequestPaymentRequest : AmazonWebServiceRequest {
    private string bucketName;
    private RequestPaymentConfiguration requestPaymentConfiguration;
    public string BucketName { get; public set; }
    public RequestPaymentConfiguration RequestPaymentConfiguration { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public RequestPaymentConfiguration get_RequestPaymentConfiguration();
    public void set_RequestPaymentConfiguration(RequestPaymentConfiguration value);
    internal bool IsSetRequestPaymentConfiguration();
}
public class Amazon.S3.Model.PutBucketRequestPaymentResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutBucketResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutBucketTaggingRequest : AmazonWebServiceRequest {
    private string bucketName;
    private List`1<Tag> tagSet;
    public string BucketName { get; public set; }
    public List`1<Tag> TagSet { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public List`1<Tag> get_TagSet();
    public void set_TagSet(List`1<Tag> value);
    internal bool IsSetTagSet();
}
public class Amazon.S3.Model.PutBucketTaggingResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutBucketVersioningRequest : AmazonWebServiceRequest {
    private string bucketName;
    private MfaCodes mfaCodes;
    private S3BucketVersioningConfig config;
    public string BucketName { get; public set; }
    public MfaCodes MfaCodes { get; public set; }
    public S3BucketVersioningConfig VersioningConfig { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public MfaCodes get_MfaCodes();
    public void set_MfaCodes(MfaCodes value);
    internal bool IsSetMfaCodes();
    public S3BucketVersioningConfig get_VersioningConfig();
    public void set_VersioningConfig(S3BucketVersioningConfig value);
    internal bool IsSetVersioningConfiguration();
}
public class Amazon.S3.Model.PutBucketVersioningResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutBucketWebsiteRequest : AmazonWebServiceRequest {
    private string bucketName;
    private WebsiteConfiguration websiteConfiguration;
    public string BucketName { get; public set; }
    public WebsiteConfiguration WebsiteConfiguration { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public WebsiteConfiguration get_WebsiteConfiguration();
    public void set_WebsiteConfiguration(WebsiteConfiguration value);
    internal bool IsSetWebsiteConfiguration();
}
public class Amazon.S3.Model.PutBucketWebsiteResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutCORSConfigurationRequest : AmazonWebServiceRequest {
    private string bucketName;
    private CORSConfiguration configuration;
    public string BucketName { get; public set; }
    public CORSConfiguration Configuration { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public CORSConfiguration get_Configuration();
    public void set_Configuration(CORSConfiguration value);
    internal bool IsSetConfiguration();
}
public class Amazon.S3.Model.PutCORSConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutLifecycleConfigurationRequest : AmazonWebServiceRequest {
    private string bucketName;
    private LifecycleConfiguration lifecycleConfiguration;
    public string BucketName { get; public set; }
    public LifecycleConfiguration Configuration { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public LifecycleConfiguration get_Configuration();
    public void set_Configuration(LifecycleConfiguration value);
    internal bool IsSetConfiguration();
}
public class Amazon.S3.Model.PutLifecycleConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.PutObjectRequest : PutWithACLRequest {
    private S3CannedACL cannedACL;
    private string bucketName;
    private string key;
    private S3StorageClass storageClass;
    private string websiteRedirectLocation;
    private HeadersCollection headersCollection;
    private MetadataCollection metadataCollection;
    private ServerSideEncryptionMethod serverSideEncryption;
    private ServerSideEncryptionCustomerMethod serverSideCustomerEncryption;
    private string serverSideEncryptionCustomerProvidedKey;
    private string serverSideEncryptionCustomerProvidedKeyMD5;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    private Stream inputStream;
    private string filePath;
    private string contentBody;
    private bool autoCloseStream;
    private bool autoResetStreamPosition;
    private string md5Digest;
    [CompilerGeneratedAttribute]
private IStorageFile <StorageFile>k__BackingField;
    public S3CannedACL CannedACL { get; public set; }
    public Stream InputStream { get; public set; }
    public string FilePath { get; public set; }
    public string ContentBody { get; public set; }
    public bool AutoCloseStream { get; public set; }
    public bool AutoResetStreamPosition { get; public set; }
    public string BucketName { get; public set; }
    public HeadersCollection Headers { get; internal set; }
    public MetadataCollection Metadata { get; internal set; }
    public string Key { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public string WebsiteRedirectLocation { get; public set; }
    public EventHandler`1<StreamTransferProgressArgs> StreamTransferProgress { get; public set; }
    public string ContentType { get; public set; }
    public string MD5Digest { get; public set; }
    internal bool IncludeSHA256Header { get; }
    internal bool Expect100Continue { get; }
    [CLSCompliantAttribute("False")]
[ObsoleteAttribute("This property is obsolete and will be removed in a future update.")]
public IStorageFile StorageFile { get; public set; }
    public S3CannedACL get_CannedACL();
    public void set_CannedACL(S3CannedACL value);
    internal bool IsSetCannedACL();
    public Stream get_InputStream();
    public void set_InputStream(Stream value);
    internal bool IsSetInputStream();
    public string get_FilePath();
    public void set_FilePath(string value);
    public string get_ContentBody();
    public void set_ContentBody(string value);
    public bool get_AutoCloseStream();
    public void set_AutoCloseStream(bool value);
    public bool get_AutoResetStreamPosition();
    public void set_AutoResetStreamPosition(bool value);
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucket();
    public HeadersCollection get_Headers();
    internal void set_Headers(HeadersCollection value);
    public MetadataCollection get_Metadata();
    internal void set_Metadata(MetadataCollection value);
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    internal bool IsSetServerSideEncryptionMethod();
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetServerSideEncryptionCustomerMethod();
    public string get_ServerSideEncryptionCustomerProvidedKey();
    public void set_ServerSideEncryptionCustomerProvidedKey(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKey();
    public string get_ServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_ServerSideEncryptionCustomerProvidedKeyMD5(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKeyMD5();
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
    public string get_WebsiteRedirectLocation();
    public void set_WebsiteRedirectLocation(string value);
    internal bool IsSetWebsiteRedirectLocation();
    public EventHandler`1<StreamTransferProgressArgs> get_StreamTransferProgress();
    public void set_StreamTransferProgress(EventHandler`1<StreamTransferProgressArgs> value);
    public string get_ContentType();
    public void set_ContentType(string value);
    public string get_MD5Digest();
    public void set_MD5Digest(string value);
    internal bool IsSetMD5Digest();
    internal virtual bool get_IncludeSHA256Header();
    internal virtual bool get_Expect100Continue();
    [CompilerGeneratedAttribute]
public IStorageFile get_StorageFile();
    [CompilerGeneratedAttribute]
public void set_StorageFile(IStorageFile value);
    internal void SetupForFilePath();
    [CompilerGeneratedAttribute]
private Task`1<StorageFile> <SetupForFilePath>b__0();
}
public class Amazon.S3.Model.PutObjectResponse : AmazonWebServiceResponse {
    private Expiration expiration;
    private ServerSideEncryptionMethod serverSideEncryption;
    private string eTag;
    private string versionId;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    public Expiration Expiration { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public string ETag { get; public set; }
    public string VersionId { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public Expiration get_Expiration();
    public void set_Expiration(Expiration value);
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
}
public abstract class Amazon.S3.Model.PutWithACLRequest : AmazonWebServiceRequest {
    private List`1<S3Grant> _grants;
    public List`1<S3Grant> Grants { get; public set; }
    public List`1<S3Grant> get_Grants();
    public void set_Grants(List`1<S3Grant> value);
}
public class Amazon.S3.Model.QueueConfiguration : NotificationConfiguration {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Queue>k__BackingField;
    public string Id { get; public set; }
    public string Queue { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    internal bool IsSetId();
    [CompilerGeneratedAttribute]
public string get_Queue();
    [CompilerGeneratedAttribute]
public void set_Queue(string value);
    internal bool IsSetQueue();
}
public class Amazon.S3.Model.ReplicationConfiguration : object {
    private string role;
    private List`1<ReplicationRule> rules;
    public string Role { get; public set; }
    public List`1<ReplicationRule> Rules { get; public set; }
    public string get_Role();
    public void set_Role(string value);
    internal bool IsSetRole();
    public List`1<ReplicationRule> get_Rules();
    public void set_Rules(List`1<ReplicationRule> value);
    internal bool IsSetRules();
}
public class Amazon.S3.Model.ReplicationDestination : object {
    private string bucketArn;
    private S3StorageClass storageClass;
    public string BucketArn { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public string get_BucketArn();
    public void set_BucketArn(string value);
    internal bool IsSetBucketArn();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
}
public class Amazon.S3.Model.ReplicationRule : object {
    private string id;
    private string prefix;
    private ReplicationRuleStatus status;
    private ReplicationDestination destination;
    public string Id { get; public set; }
    public string Prefix { get; public set; }
    public ReplicationRuleStatus Status { get; public set; }
    public ReplicationDestination Destination { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public ReplicationRuleStatus get_Status();
    public void set_Status(ReplicationRuleStatus value);
    internal bool IsSetStatus();
    public ReplicationDestination get_Destination();
    public void set_Destination(ReplicationDestination value);
    internal bool IsSetDestination();
}
public class Amazon.S3.Model.RequestPaymentConfiguration : object {
    private string payer;
    public string Payer { get; public set; }
    public string get_Payer();
    public void set_Payer(string value);
    internal bool IsSetPayer();
}
public class Amazon.S3.Model.ResponseHeaderOverrides : object {
    internal static string RESPONSE_CONTENT_TYPE;
    internal static string RESPONSE_CONTENT_LANGUAGE;
    internal static string RESPONSE_EXPIRES;
    internal static string RESPONSE_CACHE_CONTROL;
    internal static string RESPONSE_CONTENT_DISPOSITION;
    internal static string RESPONSE_CONTENT_ENCODING;
    private string _contentType;
    private string _contentLanguage;
    private string _expires;
    private string _cacheControl;
    private string _contentDisposition;
    private string _contentEncoding;
    public string ContentType { get; public set; }
    public string ContentLanguage { get; public set; }
    public string Expires { get; public set; }
    public string CacheControl { get; public set; }
    public string ContentDisposition { get; public set; }
    public string ContentEncoding { get; public set; }
    public string get_ContentType();
    public void set_ContentType(string value);
    public string get_ContentLanguage();
    public void set_ContentLanguage(string value);
    public string get_Expires();
    public void set_Expires(string value);
    public string get_CacheControl();
    public void set_CacheControl(string value);
    public string get_ContentDisposition();
    public void set_ContentDisposition(string value);
    public string get_ContentEncoding();
    public void set_ContentEncoding(string value);
}
public class Amazon.S3.Model.RestoreObjectRequest : AmazonWebServiceRequest {
    private string bucketName;
    private string key;
    private Nullable`1<int> days;
    private string versionId;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public int Days { get; public set; }
    public string VersionId { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public int get_Days();
    public void set_Days(int value);
    internal bool IsSetDays();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
}
public class Amazon.S3.Model.RestoreObjectResponse : AmazonWebServiceResponse {
}
public class Amazon.S3.Model.RoutingRule : object {
    private RoutingRuleCondition condition;
    private RoutingRuleRedirect redirect;
    public RoutingRuleCondition Condition { get; public set; }
    public RoutingRuleRedirect Redirect { get; public set; }
    public RoutingRuleCondition get_Condition();
    public void set_Condition(RoutingRuleCondition value);
    internal bool IsSetCondition();
    public RoutingRuleRedirect get_Redirect();
    public void set_Redirect(RoutingRuleRedirect value);
    internal bool IsSetRedirect();
}
public class Amazon.S3.Model.RoutingRuleCondition : object {
    private string httpErrorCodeReturnedEquals;
    private string keyPrefixEquals;
    public string HttpErrorCodeReturnedEquals { get; public set; }
    public string KeyPrefixEquals { get; public set; }
    public string get_HttpErrorCodeReturnedEquals();
    public void set_HttpErrorCodeReturnedEquals(string value);
    internal bool IsSetHttpErrorCodeReturnedEquals();
    public string get_KeyPrefixEquals();
    public void set_KeyPrefixEquals(string value);
    internal bool IsSetKeyPrefixEquals();
}
public class Amazon.S3.Model.RoutingRuleRedirect : object {
    private string hostName;
    private string httpRedirectCode;
    private string protocol;
    private string replaceKeyPrefixWith;
    private string replaceKeyWith;
    public string HostName { get; public set; }
    public string HttpRedirectCode { get; public set; }
    public string Protocol { get; public set; }
    public string ReplaceKeyPrefixWith { get; public set; }
    public string ReplaceKeyWith { get; public set; }
    public string get_HostName();
    public void set_HostName(string value);
    internal bool IsSetHostName();
    public string get_HttpRedirectCode();
    public void set_HttpRedirectCode(string value);
    internal bool IsSetHttpRedirectCode();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public string get_ReplaceKeyPrefixWith();
    public void set_ReplaceKeyPrefixWith(string value);
    internal bool IsSetReplaceKeyPrefixWith();
    public string get_ReplaceKeyWith();
    public void set_ReplaceKeyWith(string value);
    internal bool IsSetReplaceKeyWith();
}
public class Amazon.S3.Model.S3AccessControlList : object {
    private List`1<S3Grant> grantList;
    [CompilerGeneratedAttribute]
private Owner <Owner>k__BackingField;
    public Owner Owner { get; public set; }
    public List`1<S3Grant> Grants { get; public set; }
    public void AddGrant(S3Grantee grantee, S3Permission permission);
    public void RemoveGrant(S3Grantee grantee, S3Permission permission);
    public void RemoveGrant(S3Grantee grantee);
    [CompilerGeneratedAttribute]
public Owner get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(Owner value);
    internal bool IsSetOwner();
    public List`1<S3Grant> get_Grants();
    public void set_Grants(List`1<S3Grant> value);
    internal bool IsSetGrants();
}
public class Amazon.S3.Model.S3Bucket : object {
    private Nullable`1<DateTime> creationDate;
    private string bucketName;
    public DateTime CreationDate { get; public set; }
    public string BucketName { get; public set; }
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
}
public class Amazon.S3.Model.S3BucketLoggingConfig : object {
    private List`1<S3Grant> targetGrants;
    [CompilerGeneratedAttribute]
private string <TargetBucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetPrefix>k__BackingField;
    public string TargetBucketName { get; public set; }
    public List`1<S3Grant> Grants { get; public set; }
    public string TargetPrefix { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TargetBucketName();
    [CompilerGeneratedAttribute]
public void set_TargetBucketName(string value);
    internal bool IsSetTargetBucket();
    public List`1<S3Grant> get_Grants();
    public void set_Grants(List`1<S3Grant> value);
    internal bool IsSetGrants();
    [CompilerGeneratedAttribute]
public string get_TargetPrefix();
    [CompilerGeneratedAttribute]
public void set_TargetPrefix(string value);
    internal bool IsSetTargetPrefix();
    public void AddGrant(S3Grantee grantee, S3Permission permission);
    public void RemoveGrant(S3Grantee grantee, S3Permission permission);
    public void RemoveGrant(S3Grantee grantee);
}
public class Amazon.S3.Model.S3BucketVersioningConfig : object {
    private VersionStatus status;
    private Nullable`1<bool> enableMfaDelete;
    public VersionStatus Status { get; public set; }
    public bool EnableMfaDelete { get; public set; }
    public VersionStatus get_Status();
    public void set_Status(VersionStatus value);
    internal bool IsSetStatus();
    public bool get_EnableMfaDelete();
    public void set_EnableMfaDelete(bool value);
    internal bool IsSetEnableMfaDelete();
}
public class Amazon.S3.Model.S3Grant : object {
    private S3Grantee grantee;
    private S3Permission permission;
    public S3Grantee Grantee { get; public set; }
    public S3Permission Permission { get; public set; }
    public S3Grantee get_Grantee();
    public void set_Grantee(S3Grantee value);
    internal bool IsSetGrantee();
    public S3Permission get_Permission();
    public void set_Permission(S3Permission value);
    internal bool IsSetPermission();
}
public class Amazon.S3.Model.S3Grantee : object {
    private string displayName;
    private string emailAddress;
    private string canonicalUser;
    private string uRI;
    public GranteeType Type { get; }
    public string DisplayName { get; public set; }
    public string EmailAddress { get; public set; }
    public string CanonicalUser { get; public set; }
    public string URI { get; public set; }
    public GranteeType get_Type();
    internal bool IsSetType();
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
    public string get_CanonicalUser();
    public void set_CanonicalUser(string value);
    internal bool IsSetCanonicalUser();
    public string get_URI();
    public void set_URI(string value);
    internal bool IsSetURI();
}
public class Amazon.S3.Model.S3KeyFilter : object {
    private List`1<FilterRule> filterRules;
    public List`1<FilterRule> FilterRules { get; public set; }
    public List`1<FilterRule> get_FilterRules();
    public void set_FilterRules(List`1<FilterRule> value);
    internal bool IsSetFilterRules();
}
public class Amazon.S3.Model.S3Object : object {
    private string eTag;
    private string key;
    private Nullable`1<DateTime> lastModified;
    private Owner owner;
    private Nullable`1<long> size;
    private S3StorageClass storageClass;
    public string ETag { get; public set; }
    public string Key { get; public set; }
    public DateTime LastModified { get; public set; }
    public Owner Owner { get; public set; }
    public long Size { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public DateTime get_LastModified();
    public void set_LastModified(DateTime value);
    internal bool IsSetLastModified();
    public Owner get_Owner();
    public void set_Owner(Owner value);
    internal bool IsSetOwner();
    public long get_Size();
    public void set_Size(long value);
    internal bool IsSetSize();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    internal bool IsSetStorageClass();
}
public class Amazon.S3.Model.S3ObjectVersion : S3Object {
    private Nullable`1<bool> isLatest;
    private string versionId;
    private bool isDeleteMarker;
    public bool IsLatest { get; public set; }
    public string VersionId { get; public set; }
    public bool IsDeleteMarker { get; public set; }
    public bool get_IsLatest();
    public void set_IsLatest(bool value);
    public string get_VersionId();
    public void set_VersionId(string value);
    public bool get_IsDeleteMarker();
    public void set_IsDeleteMarker(bool value);
}
public abstract class Amazon.S3.Model.StreamResponse : AmazonWebServiceResponse {
    private bool disposed;
    private Stream responseStream;
    public Stream ResponseStream { get; public set; }
    public sealed virtual void Dispose();
    private void Dispose(bool disposing);
    public Stream get_ResponseStream();
    public void set_ResponseStream(Stream value);
    internal bool IsSetResponseStream();
}
public class Amazon.S3.Model.StreamSizeMismatchException : AmazonS3Exception {
    [CompilerGeneratedAttribute]
private long <ExpectedSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ActualSize>k__BackingField;
    public long ExpectedSize { get; public set; }
    public long ActualSize { get; public set; }
    public StreamSizeMismatchException(string message);
    public StreamSizeMismatchException(string message, Exception innerException);
    public StreamSizeMismatchException(string message, long expectedSize, long actualSize, string requestId, string amazonId2);
    public StreamSizeMismatchException(string message, Exception innerException, long expectedSize, long actualSize, string requestId, string amazonId2);
    public StreamSizeMismatchException(Exception innerException);
    public StreamSizeMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StreamSizeMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StreamSizeMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode, string amazonId2);
    [CompilerGeneratedAttribute]
public long get_ExpectedSize();
    [CompilerGeneratedAttribute]
public void set_ExpectedSize(long value);
    [CompilerGeneratedAttribute]
public long get_ActualSize();
    [CompilerGeneratedAttribute]
public void set_ActualSize(long value);
}
public class Amazon.S3.Model.Tag : object {
    private string key;
    private string value;
    public string Key { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.S3.Model.TopicConfiguration : NotificationConfiguration {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Topic>k__BackingField;
    public string Id { get; public set; }
    [ObsoleteAttribute("The Event property is now obsolete in favor the Events property.")]
public string Event { get; public set; }
    public string Topic { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    internal bool IsSetId();
    public string get_Event();
    public void set_Event(string value);
    [CompilerGeneratedAttribute]
public string get_Topic();
    [CompilerGeneratedAttribute]
public void set_Topic(string value);
    internal bool IsSetTopic();
}
public class Amazon.S3.Model.TransferProgressArgs : EventArgs {
    private long _incrementTransferred;
    private long _total;
    private long _transferred;
    public int PercentDone { get; }
    internal long IncrementTransferred { get; }
    public long TransferredBytes { get; }
    public long TotalBytes { get; }
    public TransferProgressArgs(long incrementTransferred, long transferred, long total);
    public int get_PercentDone();
    internal long get_IncrementTransferred();
    public long get_TransferredBytes();
    public long get_TotalBytes();
    public virtual string ToString();
}
public class Amazon.S3.Model.UploadPartRequest : AmazonWebServiceRequest {
    private Stream inputStream;
    private string bucketName;
    private string key;
    private Nullable`1<int> partNumber;
    private string uploadId;
    private Nullable`1<long> partSize;
    private string md5Digest;
    private ServerSideEncryptionCustomerMethod serverSideCustomerEncryption;
    private string serverSideEncryptionCustomerProvidedKey;
    private string serverSideEncryptionCustomerProvidedKeyMD5;
    private string filePath;
    private Nullable`1<long> filePosition;
    private bool lastPart;
    [CompilerGeneratedAttribute]
private int <IVSize>k__BackingField;
    [CompilerGeneratedAttribute]
private IStorageFile <StorageFile>k__BackingField;
    internal int IVSize { get; internal set; }
    public bool IsLastPart { get; public set; }
    public Stream InputStream { get; public set; }
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public int PartNumber { get; public set; }
    public long PartSize { get; public set; }
    public string UploadId { get; public set; }
    public string MD5Digest { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    public string FilePath { get; public set; }
    public long FilePosition { get; public set; }
    public EventHandler`1<StreamTransferProgressArgs> StreamTransferProgress { get; public set; }
    internal bool IncludeSHA256Header { get; }
    internal bool Expect100Continue { get; }
    [CLSCompliantAttribute("False")]
[ObsoleteAttribute("This property is obsolete and will be removed in a future update. Please use the FilePath property instead.")]
public IStorageFile StorageFile { get; public set; }
    [CompilerGeneratedAttribute]
internal int get_IVSize();
    [CompilerGeneratedAttribute]
internal void set_IVSize(int value);
    public bool get_IsLastPart();
    public void set_IsLastPart(bool value);
    public Stream get_InputStream();
    public void set_InputStream(Stream value);
    internal bool IsSetInputStream();
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public int get_PartNumber();
    public void set_PartNumber(int value);
    internal bool IsSetPartNumber();
    public long get_PartSize();
    public void set_PartSize(long value);
    internal bool IsSetPartSize();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
    public string get_MD5Digest();
    public void set_MD5Digest(string value);
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    internal bool IsSetServerSideEncryptionCustomerMethod();
    public string get_ServerSideEncryptionCustomerProvidedKey();
    public void set_ServerSideEncryptionCustomerProvidedKey(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKey();
    public string get_ServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_ServerSideEncryptionCustomerProvidedKeyMD5(string value);
    internal bool IsSetServerSideEncryptionCustomerProvidedKeyMD5();
    public string get_FilePath();
    public void set_FilePath(string value);
    internal bool IsSetFilePath();
    public long get_FilePosition();
    public void set_FilePosition(long value);
    internal bool IsSetFilePosition();
    internal bool IsSetMD5Digest();
    public EventHandler`1<StreamTransferProgressArgs> get_StreamTransferProgress();
    public void set_StreamTransferProgress(EventHandler`1<StreamTransferProgressArgs> value);
    internal virtual bool get_IncludeSHA256Header();
    internal virtual bool get_Expect100Continue();
    [CompilerGeneratedAttribute]
public IStorageFile get_StorageFile();
    [CompilerGeneratedAttribute]
public void set_StorageFile(IStorageFile value);
    internal void SetupForFilePath();
    [CompilerGeneratedAttribute]
private Task`1<StorageFile> <SetupForFilePath>b__0();
}
public class Amazon.S3.Model.UploadPartResponse : AmazonWebServiceResponse {
    private ServerSideEncryptionMethod serverSideEncryption;
    private string eTag;
    private int partNumber;
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public string ETag { get; public set; }
    public int PartNumber { get; public set; }
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public int get_PartNumber();
    public void set_PartNumber(int value);
}
public class Amazon.S3.Model.WebsiteConfiguration : object {
    private string errorDocument;
    private string indexDocumentSuffix;
    private RoutingRuleRedirect redirectAllRequestsTo;
    private List`1<RoutingRule> routingRules;
    public string ErrorDocument { get; public set; }
    public string IndexDocumentSuffix { get; public set; }
    public RoutingRuleRedirect RedirectAllRequestsTo { get; public set; }
    public List`1<RoutingRule> RoutingRules { get; public set; }
    public string get_ErrorDocument();
    public void set_ErrorDocument(string value);
    internal bool IsSetErrorDocument();
    public string get_IndexDocumentSuffix();
    public void set_IndexDocumentSuffix(string value);
    internal bool IsSetIndexDocumentSuffix();
    public RoutingRuleRedirect get_RedirectAllRequestsTo();
    public void set_RedirectAllRequestsTo(RoutingRuleRedirect value);
    internal bool IsSetRedirectAllRequestsTo();
    public List`1<RoutingRule> get_RoutingRules();
    public void set_RoutingRules(List`1<RoutingRule> value);
    internal bool IsSetRoutingRules();
}
public class Amazon.S3.Model.WriteObjectProgressArgs : TransferProgressArgs {
    [CompilerGeneratedAttribute]
private string <BucketName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilePath>k__BackingField;
    public string BucketName { get; private set; }
    public string Key { get; private set; }
    public string VersionId { get; private set; }
    public string FilePath { get; private set; }
    internal WriteObjectProgressArgs(string bucketName, string key, string versionId, long incrementTransferred, long transferred, long total);
    internal WriteObjectProgressArgs(string bucketName, string key, string filePath, string versionId, long incrementTransferred, long transferred, long total);
    [CompilerGeneratedAttribute]
public string get_BucketName();
    [CompilerGeneratedAttribute]
private void set_BucketName(string value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
private void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_VersionId();
    [CompilerGeneratedAttribute]
private void set_VersionId(string value);
    [CompilerGeneratedAttribute]
public string get_FilePath();
    [CompilerGeneratedAttribute]
private void set_FilePath(string value);
}
public class Amazon.S3.NotificationEvents : object {
    public static string ReducedRedundancyLostObject;
    private static NotificationEvents();
}
public enum Amazon.S3.Protocol : Enum {
    public int value__;
    public static Protocol HTTPS;
    public static Protocol HTTP;
}
public class Amazon.S3.ReplicationRuleStatus : ConstantClass {
    public static ReplicationRuleStatus Enabled;
    public static ReplicationRuleStatus Disabled;
    public ReplicationRuleStatus(string value);
    private static ReplicationRuleStatus();
    public static ReplicationRuleStatus FindValue(string value);
    public static ReplicationRuleStatus op_Implicit(string value);
}
public class Amazon.S3.ReplicationStatus : ConstantClass {
    public static ReplicationStatus Pending;
    public static ReplicationStatus Completed;
    public static ReplicationStatus Replica;
    public static ReplicationStatus Failed;
    public ReplicationStatus(string value);
    private static ReplicationStatus();
    public static ReplicationStatus FindValue(string value);
    public static ReplicationStatus op_Implicit(string value);
}
public class Amazon.S3.S3CannedACL : ConstantClass {
    public static S3CannedACL NoACL;
    public static S3CannedACL Private;
    public static S3CannedACL PublicRead;
    public static S3CannedACL PublicReadWrite;
    public static S3CannedACL AuthenticatedRead;
    public static S3CannedACL AWSExecRead;
    public static S3CannedACL BucketOwnerRead;
    public static S3CannedACL BucketOwnerFullControl;
    public static S3CannedACL LogDeliveryWrite;
    public S3CannedACL(string value);
    private static S3CannedACL();
    public static S3CannedACL FindValue(string value);
    public static S3CannedACL op_Implicit(string value);
}
public enum Amazon.S3.S3MetadataDirective : Enum {
    public int value__;
    public static S3MetadataDirective COPY;
    public static S3MetadataDirective REPLACE;
}
public class Amazon.S3.S3Permission : ConstantClass {
    public static S3Permission READ;
    public static S3Permission WRITE;
    public static S3Permission READ_ACP;
    public static S3Permission WRITE_ACP;
    public static S3Permission FULL_CONTROL;
    public static S3Permission RESTORE_OBJECT;
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    public string HeaderName { get; private set; }
    public S3Permission(string value);
    public S3Permission(string value, string headerName);
    private static S3Permission();
    [CompilerGeneratedAttribute]
public string get_HeaderName();
    [CompilerGeneratedAttribute]
private void set_HeaderName(string value);
    public static S3Permission FindValue(string value);
    public static S3Permission op_Implicit(string value);
}
internal enum Amazon.S3.S3QueryParameter : Enum {
    public int value__;
    public static S3QueryParameter Action;
    public static S3QueryParameter Authorization;
    public static S3QueryParameter BucketVersion;
    public static S3QueryParameter CanonicalizedResource;
    public static S3QueryParameter ContentBody;
    public static S3QueryParameter ContentLength;
    public static S3QueryParameter ContentType;
    public static S3QueryParameter DestinationBucket;
    public static S3QueryParameter Expires;
    public static S3QueryParameter Key;
    public static S3QueryParameter Query;
    public static S3QueryParameter QueryToSign;
    public static S3QueryParameter Range;
    public static S3QueryParameter RequestAddress;
    public static S3QueryParameter RequestTimeout;
    public static S3QueryParameter RequestReadWriteTimeout;
    public static S3QueryParameter Url;
    public static S3QueryParameter Verb;
    public static S3QueryParameter VerifyChecksum;
    public static S3QueryParameter MaxUploads;
    public static S3QueryParameter KeyMarker;
    public static S3QueryParameter UploadIdMarker;
}
public class Amazon.S3.S3Region : ConstantClass {
    public static S3Region US;
    public static S3Region EU;
    public static S3Region EUC1;
    public static S3Region USW1;
    public static S3Region USW2;
    public static S3Region GOVW1;
    public static S3Region APS1;
    public static S3Region APS2;
    public static S3Region APN1;
    public static S3Region APN2;
    public static S3Region SAE1;
    public static S3Region CN1;
    [ObsoleteAttribute("This constant is obsolete. Usags of this property should be migrated to the USW1 constant")]
public static S3Region SFO;
    [ObsoleteAttribute("This constant is obsolete. Usags of this property should be migrated to the CN1 constant")]
public static S3Region CN;
    [ObsoleteAttribute("This constant is obsolete. Usags of this property should be migrated to the GOVW1 constant")]
public static S3Region GOV;
    public S3Region(string value);
    private static S3Region();
    public static S3Region FindValue(string value);
    public static S3Region op_Implicit(string value);
}
public class Amazon.S3.S3StorageClass : ConstantClass {
    public static S3StorageClass Standard;
    public static S3StorageClass ReducedRedundancy;
    public static S3StorageClass Glacier;
    public static S3StorageClass StandardInfrequentAccess;
    public S3StorageClass(string value);
    private static S3StorageClass();
    public static S3StorageClass FindValue(string value);
    public static S3StorageClass op_Implicit(string value);
}
public class Amazon.S3.ServerSideEncryptionCustomerMethod : ConstantClass {
    public static ServerSideEncryptionCustomerMethod None;
    public static ServerSideEncryptionCustomerMethod AES256;
    public ServerSideEncryptionCustomerMethod(string value);
    private static ServerSideEncryptionCustomerMethod();
    public static ServerSideEncryptionCustomerMethod FindValue(string value);
    public static ServerSideEncryptionCustomerMethod op_Implicit(string value);
}
public class Amazon.S3.ServerSideEncryptionMethod : ConstantClass {
    public static ServerSideEncryptionMethod None;
    public static ServerSideEncryptionMethod AES256;
    public static ServerSideEncryptionMethod AWSKMS;
    public ServerSideEncryptionMethod(string value);
    private static ServerSideEncryptionMethod();
    public static ServerSideEncryptionMethod FindValue(string value);
    public static ServerSideEncryptionMethod op_Implicit(string value);
}
public abstract class Amazon.S3.Transfer.BaseDownloadRequest : object {
    private string bucketName;
    private string key;
    private string versionId;
    private Nullable`1<DateTime> modifiedSinceDate;
    private Nullable`1<DateTime> unmodifiedSinceDate;
    private ServerSideEncryptionCustomerMethod serverSideCustomerEncryption;
    private string serverSideEncryptionCustomerProvidedKey;
    private string serverSideEncryptionCustomerProvidedKeyMD5;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public string VersionId { get; public set; }
    public DateTime ModifiedSinceDate { get; public set; }
    public DateTime UnmodifiedSinceDate { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_VersionId();
    public void set_VersionId(string value);
    internal bool IsSetVersionId();
    public DateTime get_ModifiedSinceDate();
    public void set_ModifiedSinceDate(DateTime value);
    internal bool IsSetModifiedSinceDate();
    public DateTime get_UnmodifiedSinceDate();
    public void set_UnmodifiedSinceDate(DateTime value);
    internal bool IsSetUnmodifiedSinceDate();
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    public string get_ServerSideEncryptionCustomerProvidedKey();
    public void set_ServerSideEncryptionCustomerProvidedKey(string value);
    public string get_ServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_ServerSideEncryptionCustomerProvidedKeyMD5(string value);
}
public abstract class Amazon.S3.Transfer.BaseUploadRequest : object {
}
internal class Amazon.S3.Transfer.Internal.AbortMultipartUploadsCommand : BaseCommand {
    private IAmazonS3 _s3Client;
    private string _bucketName;
    private DateTime _initiatedDate;
    private TransferUtilityConfig _config;
    internal AbortMultipartUploadsCommand(IAmazonS3 s3Client, string bucketName, DateTime initiateDate);
    internal AbortMultipartUploadsCommand(IAmazonS3 s3Client, string bucketName, DateTime initiateDate, TransferUtilityConfig config);
    private ListMultipartUploadsRequest ConstructListMultipartUploadsRequest(ListMultipartUploadsResponse listResponse);
    private AbortMultipartUploadRequest ConstructAbortMultipartUploadRequest(MultipartUpload upload);
    [AsyncStateMachineAttribute("Amazon.S3.Transfer.Internal.AbortMultipartUploadsCommand/<ExecuteAsync>d__16")]
[DebuggerStepThroughAttribute]
public virtual Task ExecuteAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.S3.Transfer.Internal.AbortMultipartUploadsCommand/<AbortAsync>d__25")]
[DebuggerStepThroughAttribute]
private Task`1<AbortMultipartUploadResponse> AbortAsync(AbortMultipartUploadRequest abortRequest, CancellationTokenSource internalCts, CancellationToken cancellationToken, SemaphoreSlim asyncThrottler);
}
internal abstract class Amazon.S3.Transfer.Internal.BaseCommand : object {
    public object Return { get; }
    public virtual object get_Return();
    protected GetObjectRequest ConvertToGetObjectRequest(BaseDownloadRequest request);
    protected void RequestEventHandler(object sender, RequestEventArgs args);
    public abstract virtual Task ExecuteAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.S3.Transfer.Internal.BaseCommand/<WhenAllOrFirstExceptionAsync>d__1`1")]
[DebuggerStepThroughAttribute]
protected Task`1<List`1<T>> WhenAllOrFirstExceptionAsync(List`1<Task`1<T>> pendingTasks, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.S3.Transfer.Internal.BaseCommand/<WhenAllOrFirstExceptionAsync>d__a")]
[DebuggerStepThroughAttribute]
protected Task WhenAllOrFirstExceptionAsync(List`1<Task> pendingTasks, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.S3.Transfer.Internal.BaseCommand/<ExecuteCommandAsync>d__11")]
[DebuggerStepThroughAttribute]
protected static Task ExecuteCommandAsync(BaseCommand command, CancellationTokenSource internalCts, SemaphoreSlim throttler);
}
internal class Amazon.S3.Transfer.Internal.DownloadCommand : BaseCommand {
    private static int MAX_BACKOFF_IN_MILLISECONDS;
    private static ICollection`1<WebExceptionStatus> WebExceptionStatusesToRetryOn;
    private IAmazonS3 _s3Client;
    private TransferUtilityDownloadRequest _request;
    private static Logger Logger { get; }
    internal DownloadCommand(IAmazonS3 s3Client, TransferUtilityDownloadRequest request);
    private static DownloadCommand();
    private static Logger get_Logger();
    private void ValidateRequest();
    private void OnWriteObjectProgressEvent(object sender, WriteObjectProgressArgs e);
    private static bool HandleException(Exception exception, int retries, int maxRetries);
    private static void WaitBeforeRetry(int retries);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.S3.Transfer.Internal.DownloadCommand/<ExecuteAsync>d__0")]
public virtual Task ExecuteAsync(CancellationToken cancellationToken);
    private static bool HandleExceptionForHttpClient(Exception exception, int retries, int maxRetries);
}
internal class Amazon.S3.Transfer.Internal.MultipartUploadCommand : BaseCommand {
    private IAmazonS3 _s3Client;
    private long _partSize;
    private int _totalNumberOfParts;
    private TransferUtilityConfig _config;
    private TransferUtilityUploadRequest _fileTransporterRequest;
    private List`1<UploadPartResponse> _uploadResponses;
    private long _totalTransferredBytes;
    private Queue`1<UploadPartRequest> _partsToUpload;
    private long _contentLength;
    [CompilerGeneratedAttribute]
private SemaphoreSlim <AsyncThrottler>k__BackingField;
    private static Logger Logger { get; }
    public SemaphoreSlim AsyncThrottler { get; public set; }
    internal MultipartUploadCommand(IAmazonS3 s3Client, TransferUtilityConfig config, TransferUtilityUploadRequest fileTransporterRequest);
    private static Logger get_Logger();
    private static long calculatePartSize(long fileSize);
    private string determineContentType();
    private int CalculateConcurrentServiceRequests();
    private CompleteMultipartUploadRequest ConstructCompleteMultipartUploadRequest(InitiateMultipartUploadResponse initResponse);
    private UploadPartRequest ConstructUploadPartRequest(int partNumber, long filePosition, InitiateMultipartUploadResponse initResponse);
    private InitiateMultipartUploadRequest ConstructInitiateMultipartUploadRequest();
    private void UploadPartProgressEventCallback(object sender, UploadProgressArgs e);
    [CompilerGeneratedAttribute]
public SemaphoreSlim get_AsyncThrottler();
    [CompilerGeneratedAttribute]
public void set_AsyncThrottler(SemaphoreSlim value);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.S3.Transfer.Internal.MultipartUploadCommand/<ExecuteAsync>d__3")]
public virtual Task ExecuteAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.S3.Transfer.Internal.MultipartUploadCommand/<UploadPartAsync>d__14")]
[DebuggerStepThroughAttribute]
private Task`1<UploadPartResponse> UploadPartAsync(UploadPartRequest uploadRequest, CancellationTokenSource internalCts, SemaphoreSlim asyncThrottler);
    private void Cleanup(string uploadId, List`1<Task`1<UploadPartResponse>> tasks);
    private void AbortMultipartUpload(string uploadId);
}
internal class Amazon.S3.Transfer.Internal.OpenStreamCommand : BaseCommand {
    private IAmazonS3 _s3Client;
    private TransferUtilityOpenStreamRequest _request;
    private Stream _responseStream;
    internal Stream ResponseStream { get; }
    public object Return { get; }
    internal OpenStreamCommand(IAmazonS3 s3Client, TransferUtilityOpenStreamRequest request);
    private GetObjectRequest ConstructRequest();
    internal Stream get_ResponseStream();
    public virtual object get_Return();
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.S3.Transfer.Internal.OpenStreamCommand/<ExecuteAsync>d__0")]
public virtual Task ExecuteAsync(CancellationToken cancellationToken);
}
internal class Amazon.S3.Transfer.Internal.ProgressHandler : object {
    private StreamTransferProgressArgs _lastProgressArgs;
    private EventHandler`1<UploadProgressArgs> _callback;
    public ProgressHandler(EventHandler`1<UploadProgressArgs> callback);
    public void OnTransferProgress(object sender, StreamTransferProgressArgs e);
}
internal class Amazon.S3.Transfer.Internal.SimpleUploadCommand : BaseCommand {
    private IAmazonS3 _s3Client;
    private TransferUtilityConfig _config;
    private TransferUtilityUploadRequest _fileTransporterRequest;
    [CompilerGeneratedAttribute]
private SemaphoreSlim <AsyncThrottler>k__BackingField;
    public SemaphoreSlim AsyncThrottler { get; public set; }
    internal SimpleUploadCommand(IAmazonS3 s3Client, TransferUtilityConfig config, TransferUtilityUploadRequest fileTransporterRequest);
    private PutObjectRequest ConstructRequest();
    private void PutObjectProgressEventCallback(object sender, UploadProgressArgs e);
    [CompilerGeneratedAttribute]
public SemaphoreSlim get_AsyncThrottler();
    [CompilerGeneratedAttribute]
public void set_AsyncThrottler(SemaphoreSlim value);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.S3.Transfer.Internal.SimpleUploadCommand/<ExecuteAsync>d__1")]
public virtual Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.S3.Transfer.TransferUtility : object {
    private TransferUtilityConfig _config;
    private IAmazonS3 _s3Client;
    private bool _shouldDispose;
    private bool _isDisposed;
    public IAmazonS3 S3Client { get; }
    public TransferUtility(string awsAccessKeyId, string awsSecretAccessKey);
    public TransferUtility(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public TransferUtility(string awsAccessKeyId, string awsSecretAccessKey, TransferUtilityConfig config);
    public TransferUtility(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region, TransferUtilityConfig config);
    public TransferUtility(IAmazonS3 s3Client);
    public TransferUtility(IAmazonS3 s3Client, TransferUtilityConfig config);
    public IAmazonS3 get_S3Client();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    private static TransferUtilityUploadRequest ConstructUploadRequest(string filePath, string bucketName);
    private static TransferUtilityUploadRequest ConstructUploadRequest(string filePath, string bucketName, string key);
    private static TransferUtilityUploadRequest ConstructUploadRequest(Stream stream, string bucketName, string key);
    internal BaseCommand GetUploadCommand(TransferUtilityUploadRequest request);
    private bool IsMultipartUpload(TransferUtilityUploadRequest request);
    private static void validate(TransferUtilityUploadRequest request);
    public Task UploadAsync(string filePath, string bucketName, CancellationToken cancellationToken);
    public Task UploadAsync(string filePath, string bucketName, string key, CancellationToken cancellationToken);
    public Task UploadAsync(Stream stream, string bucketName, string key, CancellationToken cancellationToken);
    public Task UploadAsync(TransferUtilityUploadRequest request, CancellationToken cancellationToken);
    public Task AbortMultipartUploadsAsync(string bucketName, DateTime initiatedDate, CancellationToken cancellationToken);
    public Task DownloadAsync(TransferUtilityDownloadRequest request, CancellationToken cancellationToken);
    public Task`1<Stream> OpenStreamAsync(string bucketName, string key, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.S3.Transfer.TransferUtility/<OpenStreamAsync>d__8")]
[DebuggerStepThroughAttribute]
public Task`1<Stream> OpenStreamAsync(TransferUtilityOpenStreamRequest request, CancellationToken cancellationToken);
    internal BaseCommand GetUploadCommand(TransferUtilityUploadRequest request, SemaphoreSlim asyncThrottler);
}
public class Amazon.S3.Transfer.TransferUtilityConfig : object {
    private long _minSizeBeforePartUpload;
    private int _concurrentServiceRequests;
    public long MinSizeBeforePartUpload { get; public set; }
    public int ConcurrentServiceRequests { get; public set; }
    [ObsoleteAttribute("This property has been deprecated, use TransferUtilityConfig.ConcurrentServiceRequests instead.")]
public int NumberOfUploadThreads { get; public set; }
    public long get_MinSizeBeforePartUpload();
    public void set_MinSizeBeforePartUpload(long value);
    public int get_ConcurrentServiceRequests();
    public void set_ConcurrentServiceRequests(int value);
    public int get_NumberOfUploadThreads();
    public void set_NumberOfUploadThreads(int value);
}
public class Amazon.S3.Transfer.TransferUtilityDownloadRequest : BaseDownloadRequest {
    private EventHandler`1<WriteObjectProgressArgs> WriteObjectProgressEvent;
    [CompilerGeneratedAttribute]
private IStorageFile <StorageFile>k__BackingField;
    [ObsoleteAttribute("This property is obsolete and will be removed in a future update.")]
[CLSCompliantAttribute("False")]
public IStorageFile StorageFile { get; public set; }
    public void add_WriteObjectProgressEvent(EventHandler`1<WriteObjectProgressArgs> value);
    public void remove_WriteObjectProgressEvent(EventHandler`1<WriteObjectProgressArgs> value);
    internal void OnRaiseProgressEvent(WriteObjectProgressArgs progressArgs);
    [CompilerGeneratedAttribute]
public IStorageFile get_StorageFile();
    [CompilerGeneratedAttribute]
public void set_StorageFile(IStorageFile value);
    internal bool IsSetStorageFile();
}
public class Amazon.S3.Transfer.TransferUtilityOpenStreamRequest : BaseDownloadRequest {
}
public class Amazon.S3.Transfer.TransferUtilityUploadRequest : BaseUploadRequest {
    private string bucketName;
    private string key;
    private S3CannedACL cannedACL;
    private string contentType;
    private S3StorageClass storageClass;
    private Nullable`1<long> partSize;
    private bool autoCloseStream;
    private bool autoResetStreamPosition;
    private ServerSideEncryptionMethod encryption;
    private ServerSideEncryptionCustomerMethod serverSideCustomerEncryption;
    private string serverSideEncryptionCustomerProvidedKey;
    private string serverSideEncryptionCustomerProvidedKeyMD5;
    private string serverSideEncryptionKeyManagementServiceKeyId;
    private HeadersCollection headersCollection;
    private MetadataCollection metadataCollection;
    private Stream inputStream;
    private EventHandler`1<UploadProgressArgs> UploadProgressEvent;
    private IStorageFile _storageFile;
    [CompilerGeneratedAttribute]
private string <FilePath>k__BackingField;
    public string BucketName { get; public set; }
    public string Key { get; public set; }
    public S3CannedACL CannedACL { get; public set; }
    public string ContentType { get; public set; }
    public S3StorageClass StorageClass { get; public set; }
    public ServerSideEncryptionMethod ServerSideEncryptionMethod { get; public set; }
    public ServerSideEncryptionCustomerMethod ServerSideEncryptionCustomerMethod { get; public set; }
    public string ServerSideEncryptionKeyManagementServiceKeyId { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKey { get; public set; }
    public string ServerSideEncryptionCustomerProvidedKeyMD5 { get; public set; }
    public Stream InputStream { get; public set; }
    public string FilePath { get; public set; }
    public long PartSize { get; public set; }
    public HeadersCollection Headers { get; internal set; }
    public MetadataCollection Metadata { get; internal set; }
    internal long ContentLength { get; }
    public bool AutoCloseStream { get; public set; }
    public bool AutoResetStreamPosition { get; public set; }
    [ObsoleteAttribute("This property is obsolete and will be removed in a future update.")]
[CLSCompliantAttribute("False")]
public IStorageFile StorageFile { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public S3CannedACL get_CannedACL();
    public void set_CannedACL(S3CannedACL value);
    internal bool IsSetCannedACL();
    public void RemoveCannedACL();
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public S3StorageClass get_StorageClass();
    public void set_StorageClass(S3StorageClass value);
    public ServerSideEncryptionMethod get_ServerSideEncryptionMethod();
    public void set_ServerSideEncryptionMethod(ServerSideEncryptionMethod value);
    public ServerSideEncryptionCustomerMethod get_ServerSideEncryptionCustomerMethod();
    public void set_ServerSideEncryptionCustomerMethod(ServerSideEncryptionCustomerMethod value);
    public string get_ServerSideEncryptionKeyManagementServiceKeyId();
    public void set_ServerSideEncryptionKeyManagementServiceKeyId(string value);
    internal bool IsSetServerSideEncryptionKeyManagementServiceKeyId();
    public string get_ServerSideEncryptionCustomerProvidedKey();
    public void set_ServerSideEncryptionCustomerProvidedKey(string value);
    public string get_ServerSideEncryptionCustomerProvidedKeyMD5();
    public void set_ServerSideEncryptionCustomerProvidedKeyMD5(string value);
    public Stream get_InputStream();
    public void set_InputStream(Stream value);
    internal bool IsSetInputStream();
    [CompilerGeneratedAttribute]
public string get_FilePath();
    [CompilerGeneratedAttribute]
public void set_FilePath(string value);
    internal bool IsSetFilePath();
    public long get_PartSize();
    public void set_PartSize(long value);
    internal bool IsSetPartSize();
    public HeadersCollection get_Headers();
    internal void set_Headers(HeadersCollection value);
    public MetadataCollection get_Metadata();
    internal void set_Metadata(MetadataCollection value);
    public void add_UploadProgressEvent(EventHandler`1<UploadProgressArgs> value);
    public void remove_UploadProgressEvent(EventHandler`1<UploadProgressArgs> value);
    internal void OnRaiseProgressEvent(UploadProgressArgs progressArgs);
    internal long get_ContentLength();
    public bool get_AutoCloseStream();
    public void set_AutoCloseStream(bool value);
    public bool get_AutoResetStreamPosition();
    public void set_AutoResetStreamPosition(bool value);
    public TransferUtilityUploadRequest WithAutoCloseStream(bool autoCloseStream);
    public IStorageFile get_StorageFile();
    public void set_StorageFile(IStorageFile value);
    internal bool IsSetStorageFile();
    [CompilerGeneratedAttribute]
private Task`1<BasicProperties> <get_ContentLength>b__0();
}
public class Amazon.S3.Transfer.UploadProgressArgs : TransferProgressArgs {
    [CompilerGeneratedAttribute]
private string <FilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CompensationForRetry>k__BackingField;
    public string FilePath { get; private set; }
    internal long CompensationForRetry { get; internal set; }
    public UploadProgressArgs(long incrementTransferred, long transferred, long total);
    public UploadProgressArgs(long incrementTransferred, long transferred, long total, string filePath);
    internal UploadProgressArgs(long incrementTransferred, long transferred, long total, long compensationForRetry, string filePath);
    [CompilerGeneratedAttribute]
public string get_FilePath();
    [CompilerGeneratedAttribute]
private void set_FilePath(string value);
    [CompilerGeneratedAttribute]
internal long get_CompensationForRetry();
    [CompilerGeneratedAttribute]
internal void set_CompensationForRetry(long value);
}
public class Amazon.S3.Util.AmazonS3Uri : object {
    private static string EndpointPattern;
    [CompilerGeneratedAttribute]
private bool <IsPathStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Bucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private RegionEndpoint <Region>k__BackingField;
    public bool IsPathStyle { get; private set; }
    public string Bucket { get; private set; }
    public string Key { get; private set; }
    public RegionEndpoint Region { get; public set; }
    public AmazonS3Uri(string uri);
    public AmazonS3Uri(Uri uri);
    [CompilerGeneratedAttribute]
public bool get_IsPathStyle();
    [CompilerGeneratedAttribute]
private void set_IsPathStyle(bool value);
    [CompilerGeneratedAttribute]
public string get_Bucket();
    [CompilerGeneratedAttribute]
private void set_Bucket(string value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
private void set_Key(string value);
    [CompilerGeneratedAttribute]
public RegionEndpoint get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(RegionEndpoint value);
    public static bool IsAmazonS3Endpoint(string uri);
    public static bool IsAmazonS3Endpoint(Uri uri);
    private static string Decode(string s);
    private static string Decode(string s, int firstPercent);
    private static void AppendDecoded(StringBuilder builder, string s, int index);
    private static int FromHex(char c);
}
public static class Amazon.S3.Util.AmazonS3Util : object {
    private static Dictionary`2<string, string> extensionToMime;
    public static string FormattedCurrentTimestamp { get; }
    private static AmazonS3Util();
    public static string MimeTypeFromExtension(string ext);
    public static string UrlEncode(string data, bool path);
    public static Stream MakeStreamSeekable(Stream input);
    public static string get_FormattedCurrentTimestamp();
    public static string GenerateChecksumForContent(string content, bool fBase64Encode);
    internal static string ComputeEncodedMD5FromEncodedString(string base64EncodedString);
    internal static void SetMetadataHeaders(IRequest request, MetadataCollection metadata);
    public static bool ValidateV2Bucket(string bucketName);
    internal static void AddQueryStringParameter(StringBuilder queryString, string parameterName, string parameterValue);
    internal static void AddQueryStringParameter(StringBuilder queryString, string parameterName, string parameterValue, IDictionary`2<string, string> parameterMap);
    internal static void ParseAmzRestoreHeader(string header, Boolean& restoreInProgress, Nullable`1& restoreExpiration);
}
internal static class Amazon.S3.Util.S3Constants : object {
    internal static int PutObjectDefaultTimeout;
    internal static int MaxNumberOfParts;
    internal static int DefaultBufferSize;
    internal static string S3DefaultEndpoint;
    internal static string S3AlternateDefaultEndpoint;
    internal static int MinBucketLength;
    internal static int MaxBucketLength;
    internal static int MULTIPLE_OBJECT_DELETE_LIMIT;
    internal static string AmzGrantHeaderRead;
    internal static string AmzGrantHeaderWrite;
    internal static string AmzGrantHeaderReadAcp;
    internal static string AmzGrantHeaderWriteAcp;
    internal static string AmzGrantHeaderRestoreObject;
    internal static string AmzGrantHeaderFullControl;
    internal static string REGION_US_EAST_1;
    internal static string REGION_EU_WEST_1;
    internal static string VersioningOff;
    internal static string VersioningSuspended;
    internal static string VersioningEnabled;
    internal static string NoSuchBucketPolicy;
    internal static string NoSuchWebsiteConfiguration;
    internal static string NoSuchLifecycleConfiguration;
    internal static string NoSuchCORSConfiguration;
    internal static long MinPartSize;
    internal static string PostFormDataObjectKey;
    internal static string PostFormDataAcl;
    internal static string PostFormDataRedirect;
    internal static string PostFormDataStatus;
    internal static string PostFormDataContentType;
    internal static string PostFormDataMetaPrefix;
    internal static string PostFormDataXAmzPrefix;
    internal static string PostFormDataAccessKeyId;
    internal static string PostFormDataPolicy;
    internal static string PostFormDataSignature;
    internal static string PostFormDataSecurityToken;
    internal static String[] BucketVersions;
    internal static String[] LocationConstraints;
    internal static String[] MetadataDirectives;
    internal static HashSet`1<string> GetObjectExtraSubResources;
    private static S3Constants();
}
public class Amazon.S3.VersionStatus : ConstantClass {
    public static VersionStatus Off;
    public static VersionStatus Suspended;
    public static VersionStatus Enabled;
    public VersionStatus(string value);
    private static VersionStatus();
    public static VersionStatus FindValue(string value);
    public static VersionStatus op_Implicit(string value);
}
public class Amazon.SecurityToken.AmazonSecurityTokenServiceClient : AmazonServiceClient {
    public AmazonSecurityTokenServiceClient(AWSCredentials credentials);
    public AmazonSecurityTokenServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonSecurityTokenServiceClient(AWSCredentials credentials, AmazonSecurityTokenServiceConfig clientConfig);
    public AmazonSecurityTokenServiceClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonSecurityTokenServiceClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonSecurityTokenServiceClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonSecurityTokenServiceConfig clientConfig);
    public AmazonSecurityTokenServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonSecurityTokenServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonSecurityTokenServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonSecurityTokenServiceConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void Dispose(bool disposing);
    internal AssumeRoleResponse AssumeRole(AssumeRoleRequest request);
    public sealed virtual Task`1<AssumeRoleResponse> AssumeRoleAsync(AssumeRoleRequest request, CancellationToken cancellationToken);
    internal AssumeRoleWithSAMLResponse AssumeRoleWithSAML(AssumeRoleWithSAMLRequest request);
    public sealed virtual Task`1<AssumeRoleWithSAMLResponse> AssumeRoleWithSAMLAsync(AssumeRoleWithSAMLRequest request, CancellationToken cancellationToken);
    internal AssumeRoleWithWebIdentityResponse AssumeRoleWithWebIdentity(AssumeRoleWithWebIdentityRequest request);
    public sealed virtual Task`1<AssumeRoleWithWebIdentityResponse> AssumeRoleWithWebIdentityAsync(AssumeRoleWithWebIdentityRequest request, CancellationToken cancellationToken);
    internal DecodeAuthorizationMessageResponse DecodeAuthorizationMessage(DecodeAuthorizationMessageRequest request);
    public sealed virtual Task`1<DecodeAuthorizationMessageResponse> DecodeAuthorizationMessageAsync(DecodeAuthorizationMessageRequest request, CancellationToken cancellationToken);
    internal GetFederationTokenResponse GetFederationToken(GetFederationTokenRequest request);
    public sealed virtual Task`1<GetFederationTokenResponse> GetFederationTokenAsync(GetFederationTokenRequest request, CancellationToken cancellationToken);
    internal GetSessionTokenResponse GetSessionToken();
    internal GetSessionTokenResponse GetSessionToken(GetSessionTokenRequest request);
    public sealed virtual Task`1<GetSessionTokenResponse> GetSessionTokenAsync(GetSessionTokenRequest request, CancellationToken cancellationToken);
}
public class Amazon.SecurityToken.AmazonSecurityTokenServiceConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.SecurityToken.AmazonSecurityTokenServiceException : AmazonServiceException {
    public AmazonSecurityTokenServiceException(string message);
    public AmazonSecurityTokenServiceException(string message, Exception innerException);
    public AmazonSecurityTokenServiceException(Exception innerException);
    public AmazonSecurityTokenServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonSecurityTokenServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SecurityToken.AmazonSecurityTokenServiceRequest : AmazonWebServiceRequest {
}
public interface Amazon.SecurityToken.IAmazonSecurityTokenService {
    public abstract virtual Task`1<AssumeRoleResponse> AssumeRoleAsync(AssumeRoleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssumeRoleWithSAMLResponse> AssumeRoleWithSAMLAsync(AssumeRoleWithSAMLRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssumeRoleWithWebIdentityResponse> AssumeRoleWithWebIdentityAsync(AssumeRoleWithWebIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DecodeAuthorizationMessageResponse> DecodeAuthorizationMessageAsync(DecodeAuthorizationMessageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFederationTokenResponse> GetFederationTokenAsync(GetFederationTokenRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSessionTokenResponse> GetSessionTokenAsync(GetSessionTokenRequest request, CancellationToken cancellationToken);
}
public class Amazon.SecurityToken.Model.AssumedRoleUser : object {
    private string _arn;
    private string _assumedRoleId;
    public string Arn { get; public set; }
    public string AssumedRoleId { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_AssumedRoleId();
    public void set_AssumedRoleId(string value);
    internal bool IsSetAssumedRoleId();
}
public class Amazon.SecurityToken.Model.AssumeRoleRequest : AmazonSecurityTokenServiceRequest {
    private Nullable`1<int> _durationSeconds;
    private string _externalId;
    private string _policy;
    private string _roleArn;
    private string _roleSessionName;
    private string _serialNumber;
    private string _tokenCode;
    public int DurationSeconds { get; public set; }
    public string ExternalId { get; public set; }
    public string Policy { get; public set; }
    public string RoleArn { get; public set; }
    public string RoleSessionName { get; public set; }
    public string SerialNumber { get; public set; }
    public string TokenCode { get; public set; }
    public int get_DurationSeconds();
    public void set_DurationSeconds(int value);
    internal bool IsSetDurationSeconds();
    public string get_ExternalId();
    public void set_ExternalId(string value);
    internal bool IsSetExternalId();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_RoleSessionName();
    public void set_RoleSessionName(string value);
    internal bool IsSetRoleSessionName();
    public string get_SerialNumber();
    public void set_SerialNumber(string value);
    internal bool IsSetSerialNumber();
    public string get_TokenCode();
    public void set_TokenCode(string value);
    internal bool IsSetTokenCode();
}
public class Amazon.SecurityToken.Model.AssumeRoleResponse : AssumeRoleResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AssumeRoleResult class are now available on the AssumeRoleResponse class. You should use the properties on AssumeRoleResponse instead of accessing them through AssumeRoleResult.")]
public AssumeRoleResult AssumeRoleResult { get; }
    public AssumeRoleResult get_AssumeRoleResult();
}
public class Amazon.SecurityToken.Model.AssumeRoleResult : AmazonWebServiceResponse {
    private AssumedRoleUser _assumedRoleUser;
    private Credentials _credentials;
    private Nullable`1<int> _packedPolicySize;
    public AssumedRoleUser AssumedRoleUser { get; public set; }
    public Credentials Credentials { get; public set; }
    public int PackedPolicySize { get; public set; }
    public AssumedRoleUser get_AssumedRoleUser();
    public void set_AssumedRoleUser(AssumedRoleUser value);
    internal bool IsSetAssumedRoleUser();
    public Credentials get_Credentials();
    public void set_Credentials(Credentials value);
    internal bool IsSetCredentials();
    public int get_PackedPolicySize();
    public void set_PackedPolicySize(int value);
    internal bool IsSetPackedPolicySize();
}
public class Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest : AmazonSecurityTokenServiceRequest {
    private Nullable`1<int> _durationSeconds;
    private string _policy;
    private string _principalArn;
    private string _roleArn;
    private string _samlAssertion;
    public int DurationSeconds { get; public set; }
    public string Policy { get; public set; }
    public string PrincipalArn { get; public set; }
    public string RoleArn { get; public set; }
    public string SAMLAssertion { get; public set; }
    public int get_DurationSeconds();
    public void set_DurationSeconds(int value);
    internal bool IsSetDurationSeconds();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_PrincipalArn();
    public void set_PrincipalArn(string value);
    internal bool IsSetPrincipalArn();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_SAMLAssertion();
    public void set_SAMLAssertion(string value);
    internal bool IsSetSAMLAssertion();
}
public class Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse : AssumeRoleWithSAMLResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AssumeRoleWithSAMLResult class are now available on the AssumeRoleWithSAMLResponse class. You should use the properties on AssumeRoleWithSAMLResponse instead of accessing them through AssumeRoleWithSAMLResult.")]
public AssumeRoleWithSAMLResult AssumeRoleWithSAMLResult { get; }
    public AssumeRoleWithSAMLResult get_AssumeRoleWithSAMLResult();
}
public class Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult : AmazonWebServiceResponse {
    private AssumedRoleUser _assumedRoleUser;
    private string _audience;
    private Credentials _credentials;
    private string _issuer;
    private string _nameQualifier;
    private Nullable`1<int> _packedPolicySize;
    private string _subject;
    private string _subjectType;
    public AssumedRoleUser AssumedRoleUser { get; public set; }
    public string Audience { get; public set; }
    public Credentials Credentials { get; public set; }
    public string Issuer { get; public set; }
    public string NameQualifier { get; public set; }
    public int PackedPolicySize { get; public set; }
    public string Subject { get; public set; }
    public string SubjectType { get; public set; }
    public AssumedRoleUser get_AssumedRoleUser();
    public void set_AssumedRoleUser(AssumedRoleUser value);
    internal bool IsSetAssumedRoleUser();
    public string get_Audience();
    public void set_Audience(string value);
    internal bool IsSetAudience();
    public Credentials get_Credentials();
    public void set_Credentials(Credentials value);
    internal bool IsSetCredentials();
    public string get_Issuer();
    public void set_Issuer(string value);
    internal bool IsSetIssuer();
    public string get_NameQualifier();
    public void set_NameQualifier(string value);
    internal bool IsSetNameQualifier();
    public int get_PackedPolicySize();
    public void set_PackedPolicySize(int value);
    internal bool IsSetPackedPolicySize();
    public string get_Subject();
    public void set_Subject(string value);
    internal bool IsSetSubject();
    public string get_SubjectType();
    public void set_SubjectType(string value);
    internal bool IsSetSubjectType();
}
public class Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest : AmazonSecurityTokenServiceRequest {
    private Nullable`1<int> _durationSeconds;
    private string _policy;
    private string _providerId;
    private string _roleArn;
    private string _roleSessionName;
    private string _webIdentityToken;
    public int DurationSeconds { get; public set; }
    public string Policy { get; public set; }
    public string ProviderId { get; public set; }
    public string RoleArn { get; public set; }
    public string RoleSessionName { get; public set; }
    public string WebIdentityToken { get; public set; }
    public int get_DurationSeconds();
    public void set_DurationSeconds(int value);
    internal bool IsSetDurationSeconds();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_ProviderId();
    public void set_ProviderId(string value);
    internal bool IsSetProviderId();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_RoleSessionName();
    public void set_RoleSessionName(string value);
    internal bool IsSetRoleSessionName();
    public string get_WebIdentityToken();
    public void set_WebIdentityToken(string value);
    internal bool IsSetWebIdentityToken();
}
public class Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse : AssumeRoleWithWebIdentityResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the AssumeRoleWithWebIdentityResult class are now available on the AssumeRoleWithWebIdentityResponse class. You should use the properties on AssumeRoleWithWebIdentityResponse instead of accessing them through AssumeRoleWithWebIdentityResult.")]
public AssumeRoleWithWebIdentityResult AssumeRoleWithWebIdentityResult { get; }
    public AssumeRoleWithWebIdentityResult get_AssumeRoleWithWebIdentityResult();
}
public class Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult : AmazonWebServiceResponse {
    private AssumedRoleUser _assumedRoleUser;
    private string _audience;
    private Credentials _credentials;
    private Nullable`1<int> _packedPolicySize;
    private string _provider;
    private string _subjectFromWebIdentityToken;
    public AssumedRoleUser AssumedRoleUser { get; public set; }
    public string Audience { get; public set; }
    public Credentials Credentials { get; public set; }
    public int PackedPolicySize { get; public set; }
    public string Provider { get; public set; }
    public string SubjectFromWebIdentityToken { get; public set; }
    public AssumedRoleUser get_AssumedRoleUser();
    public void set_AssumedRoleUser(AssumedRoleUser value);
    internal bool IsSetAssumedRoleUser();
    public string get_Audience();
    public void set_Audience(string value);
    internal bool IsSetAudience();
    public Credentials get_Credentials();
    public void set_Credentials(Credentials value);
    internal bool IsSetCredentials();
    public int get_PackedPolicySize();
    public void set_PackedPolicySize(int value);
    internal bool IsSetPackedPolicySize();
    public string get_Provider();
    public void set_Provider(string value);
    internal bool IsSetProvider();
    public string get_SubjectFromWebIdentityToken();
    public void set_SubjectFromWebIdentityToken(string value);
    internal bool IsSetSubjectFromWebIdentityToken();
}
public class Amazon.SecurityToken.Model.Credentials : AWSCredentials {
    private string _accessKeyId;
    private Nullable`1<DateTime> _expiration;
    private string _secretAccessKey;
    private string _sessionToken;
    private ImmutableCredentials _credentials;
    public string AccessKeyId { get; public set; }
    public DateTime Expiration { get; public set; }
    public string SecretAccessKey { get; public set; }
    public string SessionToken { get; public set; }
    public Credentials(string accessKeyId, string secretAccessKey, string sessionToken, DateTime expiration);
    public string get_AccessKeyId();
    public void set_AccessKeyId(string value);
    internal bool IsSetAccessKeyId();
    public DateTime get_Expiration();
    public void set_Expiration(DateTime value);
    internal bool IsSetExpiration();
    public string get_SecretAccessKey();
    public void set_SecretAccessKey(string value);
    internal bool IsSetSecretAccessKey();
    public string get_SessionToken();
    public void set_SessionToken(string value);
    internal bool IsSetSessionToken();
    public virtual ImmutableCredentials GetCredentials();
}
public class Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest : AmazonSecurityTokenServiceRequest {
    private string _encodedMessage;
    public string EncodedMessage { get; public set; }
    public string get_EncodedMessage();
    public void set_EncodedMessage(string value);
    internal bool IsSetEncodedMessage();
}
public class Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse : DecodeAuthorizationMessageResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DecodeAuthorizationMessageResult class are now available on the DecodeAuthorizationMessageResponse class. You should use the properties on DecodeAuthorizationMessageResponse instead of accessing them through DecodeAuthorizationMessageResult.")]
public DecodeAuthorizationMessageResult DecodeAuthorizationMessageResult { get; }
    public DecodeAuthorizationMessageResult get_DecodeAuthorizationMessageResult();
}
public class Amazon.SecurityToken.Model.DecodeAuthorizationMessageResult : AmazonWebServiceResponse {
    private string _decodedMessage;
    public string DecodedMessage { get; public set; }
    public string get_DecodedMessage();
    public void set_DecodedMessage(string value);
    internal bool IsSetDecodedMessage();
}
public class Amazon.SecurityToken.Model.ExpiredTokenException : AmazonSecurityTokenServiceException {
    public ExpiredTokenException(string message);
    public ExpiredTokenException(string message, Exception innerException);
    public ExpiredTokenException(Exception innerException);
    public ExpiredTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ExpiredTokenException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SecurityToken.Model.FederatedUser : object {
    private string _arn;
    private string _federatedUserId;
    public string Arn { get; public set; }
    public string FederatedUserId { get; public set; }
    public FederatedUser(string federatedUserId, string arn);
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_FederatedUserId();
    public void set_FederatedUserId(string value);
    internal bool IsSetFederatedUserId();
}
public class Amazon.SecurityToken.Model.GetFederationTokenRequest : AmazonSecurityTokenServiceRequest {
    private Nullable`1<int> _durationSeconds;
    private string _name;
    private string _policy;
    public int DurationSeconds { get; public set; }
    public string Name { get; public set; }
    public string Policy { get; public set; }
    public GetFederationTokenRequest(string name);
    public int get_DurationSeconds();
    public void set_DurationSeconds(int value);
    internal bool IsSetDurationSeconds();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.SecurityToken.Model.GetFederationTokenResponse : GetFederationTokenResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetFederationTokenResult class are now available on the GetFederationTokenResponse class. You should use the properties on GetFederationTokenResponse instead of accessing them through GetFederationTokenResult.")]
public GetFederationTokenResult GetFederationTokenResult { get; }
    public GetFederationTokenResult get_GetFederationTokenResult();
}
public class Amazon.SecurityToken.Model.GetFederationTokenResult : AmazonWebServiceResponse {
    private Credentials _credentials;
    private FederatedUser _federatedUser;
    private Nullable`1<int> _packedPolicySize;
    public Credentials Credentials { get; public set; }
    public FederatedUser FederatedUser { get; public set; }
    public int PackedPolicySize { get; public set; }
    public Credentials get_Credentials();
    public void set_Credentials(Credentials value);
    internal bool IsSetCredentials();
    public FederatedUser get_FederatedUser();
    public void set_FederatedUser(FederatedUser value);
    internal bool IsSetFederatedUser();
    public int get_PackedPolicySize();
    public void set_PackedPolicySize(int value);
    internal bool IsSetPackedPolicySize();
}
public class Amazon.SecurityToken.Model.GetSessionTokenRequest : AmazonSecurityTokenServiceRequest {
    private Nullable`1<int> _durationSeconds;
    private string _serialNumber;
    private string _tokenCode;
    public int DurationSeconds { get; public set; }
    public string SerialNumber { get; public set; }
    public string TokenCode { get; public set; }
    public int get_DurationSeconds();
    public void set_DurationSeconds(int value);
    internal bool IsSetDurationSeconds();
    public string get_SerialNumber();
    public void set_SerialNumber(string value);
    internal bool IsSetSerialNumber();
    public string get_TokenCode();
    public void set_TokenCode(string value);
    internal bool IsSetTokenCode();
}
public class Amazon.SecurityToken.Model.GetSessionTokenResponse : GetSessionTokenResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetSessionTokenResult class are now available on the GetSessionTokenResponse class. You should use the properties on GetSessionTokenResponse instead of accessing them through GetSessionTokenResult.")]
public GetSessionTokenResult GetSessionTokenResult { get; }
    public GetSessionTokenResult get_GetSessionTokenResult();
}
public class Amazon.SecurityToken.Model.GetSessionTokenResult : AmazonWebServiceResponse {
    private Credentials _credentials;
    public Credentials Credentials { get; public set; }
    public Credentials get_Credentials();
    public void set_Credentials(Credentials value);
    internal bool IsSetCredentials();
}
public class Amazon.SecurityToken.Model.IDPCommunicationErrorException : AmazonSecurityTokenServiceException {
    public IDPCommunicationErrorException(string message);
    public IDPCommunicationErrorException(string message, Exception innerException);
    public IDPCommunicationErrorException(Exception innerException);
    public IDPCommunicationErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public IDPCommunicationErrorException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SecurityToken.Model.IDPRejectedClaimException : AmazonSecurityTokenServiceException {
    public IDPRejectedClaimException(string message);
    public IDPRejectedClaimException(string message, Exception innerException);
    public IDPRejectedClaimException(Exception innerException);
    public IDPRejectedClaimException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public IDPRejectedClaimException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumedRoleUserUnmarshaller : object {
    private static AssumedRoleUserUnmarshaller _instance;
    public static AssumedRoleUserUnmarshaller Instance { get; }
    private static AssumedRoleUserUnmarshaller();
    public sealed virtual AssumedRoleUser Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AssumedRoleUser Unmarshall(JsonUnmarshallerContext context);
    public static AssumedRoleUserUnmarshaller get_Instance();
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssumeRoleRequest publicRequest);
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AssumeRoleResponseUnmarshaller _instance;
    public static AssumeRoleResponseUnmarshaller Instance { get; }
    private static AssumeRoleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AssumeRoleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssumeRoleResponseUnmarshaller GetInstance();
    public static AssumeRoleResponseUnmarshaller get_Instance();
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithSAMLRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssumeRoleWithSAMLRequest publicRequest);
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithSAMLResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AssumeRoleWithSAMLResponseUnmarshaller _instance;
    public static AssumeRoleWithSAMLResponseUnmarshaller Instance { get; }
    private static AssumeRoleWithSAMLResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AssumeRoleWithSAMLResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssumeRoleWithSAMLResponseUnmarshaller GetInstance();
    public static AssumeRoleWithSAMLResponseUnmarshaller get_Instance();
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithWebIdentityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssumeRoleWithWebIdentityRequest publicRequest);
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithWebIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AssumeRoleWithWebIdentityResponseUnmarshaller _instance;
    public static AssumeRoleWithWebIdentityResponseUnmarshaller Instance { get; }
    private static AssumeRoleWithWebIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AssumeRoleWithWebIdentityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssumeRoleWithWebIdentityResponseUnmarshaller GetInstance();
    public static AssumeRoleWithWebIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.CredentialsUnmarshaller : object {
    private static CredentialsUnmarshaller _instance;
    public static CredentialsUnmarshaller Instance { get; }
    private static CredentialsUnmarshaller();
    public sealed virtual Credentials Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Credentials Unmarshall(JsonUnmarshallerContext context);
    public static CredentialsUnmarshaller get_Instance();
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.DecodeAuthorizationMessageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DecodeAuthorizationMessageRequest publicRequest);
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.DecodeAuthorizationMessageResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DecodeAuthorizationMessageResponseUnmarshaller _instance;
    public static DecodeAuthorizationMessageResponseUnmarshaller Instance { get; }
    private static DecodeAuthorizationMessageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DecodeAuthorizationMessageResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DecodeAuthorizationMessageResponseUnmarshaller GetInstance();
    public static DecodeAuthorizationMessageResponseUnmarshaller get_Instance();
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.FederatedUserUnmarshaller : object {
    private static FederatedUserUnmarshaller _instance;
    public static FederatedUserUnmarshaller Instance { get; }
    private static FederatedUserUnmarshaller();
    public sealed virtual FederatedUser Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FederatedUser Unmarshall(JsonUnmarshallerContext context);
    public static FederatedUserUnmarshaller get_Instance();
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetFederationTokenRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFederationTokenRequest publicRequest);
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetFederationTokenResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetFederationTokenResponseUnmarshaller _instance;
    public static GetFederationTokenResponseUnmarshaller Instance { get; }
    private static GetFederationTokenResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetFederationTokenResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFederationTokenResponseUnmarshaller GetInstance();
    public static GetFederationTokenResponseUnmarshaller get_Instance();
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetSessionTokenRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSessionTokenRequest publicRequest);
}
public class Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetSessionTokenResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetSessionTokenResponseUnmarshaller _instance;
    public static GetSessionTokenResponseUnmarshaller Instance { get; }
    private static GetSessionTokenResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetSessionTokenResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSessionTokenResponseUnmarshaller GetInstance();
    public static GetSessionTokenResponseUnmarshaller get_Instance();
}
public class Amazon.SecurityToken.Model.InvalidAuthorizationMessageException : AmazonSecurityTokenServiceException {
    public InvalidAuthorizationMessageException(string message);
    public InvalidAuthorizationMessageException(string message, Exception innerException);
    public InvalidAuthorizationMessageException(Exception innerException);
    public InvalidAuthorizationMessageException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidAuthorizationMessageException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SecurityToken.Model.InvalidIdentityTokenException : AmazonSecurityTokenServiceException {
    public InvalidIdentityTokenException(string message);
    public InvalidIdentityTokenException(string message, Exception innerException);
    public InvalidIdentityTokenException(Exception innerException);
    public InvalidIdentityTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidIdentityTokenException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SecurityToken.Model.MalformedPolicyDocumentException : AmazonSecurityTokenServiceException {
    public MalformedPolicyDocumentException(string message);
    public MalformedPolicyDocumentException(string message, Exception innerException);
    public MalformedPolicyDocumentException(Exception innerException);
    public MalformedPolicyDocumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public MalformedPolicyDocumentException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SecurityToken.Model.PackedPolicyTooLargeException : AmazonSecurityTokenServiceException {
    public PackedPolicyTooLargeException(string message);
    public PackedPolicyTooLargeException(string message, Exception innerException);
    public PackedPolicyTooLargeException(Exception innerException);
    public PackedPolicyTooLargeException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public PackedPolicyTooLargeException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SecurityToken.Model.RegionDisabledException : AmazonSecurityTokenServiceException {
    public RegionDisabledException(string message);
    public RegionDisabledException(string message, Exception innerException);
    public RegionDisabledException(Exception innerException);
    public RegionDisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public RegionDisabledException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SecurityToken.STSAssumeRoleAWSCredentials : RefreshingAWSCredentials {
    private IAmazonSecurityTokenService _stsClient;
    private AssumeRoleRequest _assumeRequest;
    private AssumeRoleWithSAMLRequest _assumeSamlRequest;
    private bool _isDisposed;
    private static TimeSpan _defaultPreemptExpiryTime;
    public STSAssumeRoleAWSCredentials(IAmazonSecurityTokenService sts, AssumeRoleRequest assumeRoleRequest);
    public STSAssumeRoleAWSCredentials(AssumeRoleWithSAMLRequest assumeRoleWithSamlRequest);
    private static STSAssumeRoleAWSCredentials();
    protected virtual CredentialsRefreshState GenerateNewCredentials();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    private Credentials GetServiceCredentials();
    [CompilerGeneratedAttribute]
private Task`1<AssumeRoleResponse> <GetServiceCredentials>b__1();
    [CompilerGeneratedAttribute]
private Task`1<AssumeRoleWithSAMLResponse> <GetServiceCredentials>b__2();
}
public class Amazon.SimpleDB.AmazonSimpleDBClient : AmazonServiceClient {
    public AmazonSimpleDBClient(AWSCredentials credentials);
    public AmazonSimpleDBClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonSimpleDBClient(AWSCredentials credentials, AmazonSimpleDBConfig clientConfig);
    public AmazonSimpleDBClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonSimpleDBClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonSimpleDBClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonSimpleDBConfig clientConfig);
    public AmazonSimpleDBClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonSimpleDBClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonSimpleDBClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonSimpleDBConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void Dispose(bool disposing);
    internal BatchDeleteAttributesResponse BatchDeleteAttributes(BatchDeleteAttributesRequest request);
    public sealed virtual Task`1<BatchDeleteAttributesResponse> BatchDeleteAttributesAsync(BatchDeleteAttributesRequest request, CancellationToken cancellationToken);
    internal BatchPutAttributesResponse BatchPutAttributes(BatchPutAttributesRequest request);
    public sealed virtual Task`1<BatchPutAttributesResponse> BatchPutAttributesAsync(BatchPutAttributesRequest request, CancellationToken cancellationToken);
    internal CreateDomainResponse CreateDomain(CreateDomainRequest request);
    public sealed virtual Task`1<CreateDomainResponse> CreateDomainAsync(CreateDomainRequest request, CancellationToken cancellationToken);
    internal DeleteAttributesResponse DeleteAttributes(DeleteAttributesRequest request);
    public sealed virtual Task`1<DeleteAttributesResponse> DeleteAttributesAsync(DeleteAttributesRequest request, CancellationToken cancellationToken);
    internal DeleteDomainResponse DeleteDomain(DeleteDomainRequest request);
    public sealed virtual Task`1<DeleteDomainResponse> DeleteDomainAsync(DeleteDomainRequest request, CancellationToken cancellationToken);
    internal DomainMetadataResponse DomainMetadata(DomainMetadataRequest request);
    public sealed virtual Task`1<DomainMetadataResponse> DomainMetadataAsync(DomainMetadataRequest request, CancellationToken cancellationToken);
    internal GetAttributesResponse GetAttributes(GetAttributesRequest request);
    public sealed virtual Task`1<GetAttributesResponse> GetAttributesAsync(GetAttributesRequest request, CancellationToken cancellationToken);
    internal ListDomainsResponse ListDomains();
    internal ListDomainsResponse ListDomains(ListDomainsRequest request);
    public sealed virtual Task`1<ListDomainsResponse> ListDomainsAsync(ListDomainsRequest request, CancellationToken cancellationToken);
    internal PutAttributesResponse PutAttributes(PutAttributesRequest request);
    public sealed virtual Task`1<PutAttributesResponse> PutAttributesAsync(PutAttributesRequest request, CancellationToken cancellationToken);
    internal SelectResponse Select(SelectRequest request);
    public sealed virtual Task`1<SelectResponse> SelectAsync(SelectRequest request, CancellationToken cancellationToken);
}
public class Amazon.SimpleDB.AmazonSimpleDBConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.SimpleDB.AmazonSimpleDBException : AmazonServiceException {
    public AmazonSimpleDBException(string message);
    public AmazonSimpleDBException(string message, Exception innerException);
    public AmazonSimpleDBException(Exception innerException);
    public AmazonSimpleDBException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonSimpleDBException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleDB.AmazonSimpleDBRequest : AmazonWebServiceRequest {
}
public interface Amazon.SimpleDB.IAmazonSimpleDB {
    public abstract virtual Task`1<BatchDeleteAttributesResponse> BatchDeleteAttributesAsync(BatchDeleteAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchPutAttributesResponse> BatchPutAttributesAsync(BatchPutAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDomainResponse> CreateDomainAsync(CreateDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAttributesResponse> DeleteAttributesAsync(DeleteAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDomainResponse> DeleteDomainAsync(DeleteDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DomainMetadataResponse> DomainMetadataAsync(DomainMetadataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAttributesResponse> GetAttributesAsync(GetAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDomainsResponse> ListDomainsAsync(ListDomainsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutAttributesResponse> PutAttributesAsync(PutAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SelectResponse> SelectAsync(SelectRequest request, CancellationToken cancellationToken);
}
public class Amazon.SimpleDB.Model.Attribute : object {
    private string _alternateNameEncoding;
    private string _alternateValueEncoding;
    private string _name;
    private string _value;
    public string AlternateNameEncoding { get; public set; }
    public string AlternateValueEncoding { get; public set; }
    public string Name { get; public set; }
    public string Value { get; public set; }
    public Attribute(string name, string value);
    public string get_AlternateNameEncoding();
    public void set_AlternateNameEncoding(string value);
    internal bool IsSetAlternateNameEncoding();
    public string get_AlternateValueEncoding();
    public void set_AlternateValueEncoding(string value);
    internal bool IsSetAlternateValueEncoding();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleDB.Model.AttributeDoesNotExistException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public AttributeDoesNotExistException(string message);
    public AttributeDoesNotExistException(string message, Exception innerException);
    public AttributeDoesNotExistException(Exception innerException);
    public AttributeDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public AttributeDoesNotExistException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.BatchDeleteAttributesRequest : AmazonSimpleDBRequest {
    private string _domainName;
    private List`1<DeletableItem> _items;
    public string DomainName { get; public set; }
    public List`1<DeletableItem> Items { get; public set; }
    public BatchDeleteAttributesRequest(string domainName, List`1<DeletableItem> items);
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public List`1<DeletableItem> get_Items();
    public void set_Items(List`1<DeletableItem> value);
    internal bool IsSetItems();
}
public class Amazon.SimpleDB.Model.BatchDeleteAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleDB.Model.BatchPutAttributesRequest : AmazonSimpleDBRequest {
    private string _domainName;
    private List`1<ReplaceableItem> _items;
    public string DomainName { get; public set; }
    public List`1<ReplaceableItem> Items { get; public set; }
    public BatchPutAttributesRequest(string domainName, List`1<ReplaceableItem> items);
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public List`1<ReplaceableItem> get_Items();
    public void set_Items(List`1<ReplaceableItem> value);
    internal bool IsSetItems();
}
public class Amazon.SimpleDB.Model.BatchPutAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleDB.Model.CreateDomainRequest : AmazonSimpleDBRequest {
    private string _domainName;
    public string DomainName { get; public set; }
    public CreateDomainRequest(string domainName);
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
}
public class Amazon.SimpleDB.Model.CreateDomainResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleDB.Model.DeletableItem : object {
    private List`1<Attribute> _attributes;
    private string _name;
    public List`1<Attribute> Attributes { get; public set; }
    public string Name { get; public set; }
    public DeletableItem(string name, List`1<Attribute> attributes);
    public List`1<Attribute> get_Attributes();
    public void set_Attributes(List`1<Attribute> value);
    internal bool IsSetAttributes();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleDB.Model.DeleteAttributesRequest : AmazonSimpleDBRequest {
    private List`1<Attribute> _attributes;
    private string _domainName;
    private UpdateCondition _expected;
    private string _itemName;
    public List`1<Attribute> Attributes { get; public set; }
    public string DomainName { get; public set; }
    public UpdateCondition Expected { get; public set; }
    public string ItemName { get; public set; }
    public DeleteAttributesRequest(string domainName, string itemName);
    public DeleteAttributesRequest(string domainName, string itemName, List`1<Attribute> attributes);
    public DeleteAttributesRequest(string domainName, string itemName, List`1<Attribute> attributes, UpdateCondition expected);
    public List`1<Attribute> get_Attributes();
    public void set_Attributes(List`1<Attribute> value);
    internal bool IsSetAttributes();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public UpdateCondition get_Expected();
    public void set_Expected(UpdateCondition value);
    internal bool IsSetExpected();
    public string get_ItemName();
    public void set_ItemName(string value);
    internal bool IsSetItemName();
}
public class Amazon.SimpleDB.Model.DeleteAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleDB.Model.DeleteDomainRequest : AmazonSimpleDBRequest {
    private string _domainName;
    public string DomainName { get; public set; }
    public DeleteDomainRequest(string domainName);
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
}
public class Amazon.SimpleDB.Model.DeleteDomainResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleDB.Model.DomainMetadataRequest : AmazonSimpleDBRequest {
    private string _domainName;
    public string DomainName { get; public set; }
    public DomainMetadataRequest(string domainName);
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
}
public class Amazon.SimpleDB.Model.DomainMetadataResponse : DomainMetadataResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DomainMetadataResult class are now available on the DomainMetadataResponse class. You should use the properties on DomainMetadataResponse instead of accessing them through DomainMetadataResult.")]
public DomainMetadataResult DomainMetadataResult { get; }
    public DomainMetadataResult get_DomainMetadataResult();
}
public class Amazon.SimpleDB.Model.DomainMetadataResult : AmazonWebServiceResponse {
    private Nullable`1<int> _attributeNameCount;
    private Nullable`1<long> _attributeNamesSizeBytes;
    private Nullable`1<int> _attributeValueCount;
    private Nullable`1<long> _attributeValuesSizeBytes;
    private Nullable`1<int> _itemCount;
    private Nullable`1<long> _itemNamesSizeBytes;
    private Nullable`1<int> _timestamp;
    public int AttributeNameCount { get; public set; }
    public long AttributeNamesSizeBytes { get; public set; }
    public int AttributeValueCount { get; public set; }
    public long AttributeValuesSizeBytes { get; public set; }
    public int ItemCount { get; public set; }
    public long ItemNamesSizeBytes { get; public set; }
    public int Timestamp { get; public set; }
    public int get_AttributeNameCount();
    public void set_AttributeNameCount(int value);
    internal bool IsSetAttributeNameCount();
    public long get_AttributeNamesSizeBytes();
    public void set_AttributeNamesSizeBytes(long value);
    internal bool IsSetAttributeNamesSizeBytes();
    public int get_AttributeValueCount();
    public void set_AttributeValueCount(int value);
    internal bool IsSetAttributeValueCount();
    public long get_AttributeValuesSizeBytes();
    public void set_AttributeValuesSizeBytes(long value);
    internal bool IsSetAttributeValuesSizeBytes();
    public int get_ItemCount();
    public void set_ItemCount(int value);
    internal bool IsSetItemCount();
    public long get_ItemNamesSizeBytes();
    public void set_ItemNamesSizeBytes(long value);
    internal bool IsSetItemNamesSizeBytes();
    public int get_Timestamp();
    public void set_Timestamp(int value);
    internal bool IsSetTimestamp();
}
public class Amazon.SimpleDB.Model.DuplicateItemNameException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public DuplicateItemNameException(string message);
    public DuplicateItemNameException(string message, Exception innerException);
    public DuplicateItemNameException(Exception innerException);
    public DuplicateItemNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public DuplicateItemNameException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.GetAttributesRequest : AmazonSimpleDBRequest {
    private List`1<string> _attributeNames;
    private Nullable`1<bool> _consistentRead;
    private string _domainName;
    private string _itemName;
    public List`1<string> AttributeNames { get; public set; }
    public bool ConsistentRead { get; public set; }
    public string DomainName { get; public set; }
    public string ItemName { get; public set; }
    public GetAttributesRequest(string domainName, string itemName);
    public List`1<string> get_AttributeNames();
    public void set_AttributeNames(List`1<string> value);
    internal bool IsSetAttributeNames();
    public bool get_ConsistentRead();
    public void set_ConsistentRead(bool value);
    internal bool IsSetConsistentRead();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public string get_ItemName();
    public void set_ItemName(string value);
    internal bool IsSetItemName();
}
public class Amazon.SimpleDB.Model.GetAttributesResponse : GetAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetAttributesResult class are now available on the GetAttributesResponse class. You should use the properties on GetAttributesResponse instead of accessing them through GetAttributesResult.")]
public GetAttributesResult GetAttributesResult { get; }
    public GetAttributesResult get_GetAttributesResult();
}
public class Amazon.SimpleDB.Model.GetAttributesResult : AmazonWebServiceResponse {
    private List`1<Attribute> _attributes;
    public List`1<Attribute> Attributes { get; public set; }
    public List`1<Attribute> get_Attributes();
    public void set_Attributes(List`1<Attribute> value);
    internal bool IsSetAttributes();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.AttributeUnmarshaller : object {
    private static AttributeUnmarshaller _instance;
    public static AttributeUnmarshaller Instance { get; }
    private static AttributeUnmarshaller();
    public sealed virtual Attribute Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Attribute Unmarshall(JsonUnmarshallerContext context);
    public static AttributeUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.BatchDeleteAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchDeleteAttributesRequest publicRequest);
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.BatchDeleteAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static BatchDeleteAttributesResponseUnmarshaller _instance;
    public static BatchDeleteAttributesResponseUnmarshaller Instance { get; }
    private static BatchDeleteAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, BatchDeleteAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchDeleteAttributesResponseUnmarshaller GetInstance();
    public static BatchDeleteAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.BatchPutAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchPutAttributesRequest publicRequest);
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.BatchPutAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static BatchPutAttributesResponseUnmarshaller _instance;
    public static BatchPutAttributesResponseUnmarshaller Instance { get; }
    private static BatchPutAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, BatchPutAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchPutAttributesResponseUnmarshaller GetInstance();
    public static BatchPutAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.CreateDomainRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDomainRequest publicRequest);
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.CreateDomainResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDomainResponseUnmarshaller _instance;
    public static CreateDomainResponseUnmarshaller Instance { get; }
    private static CreateDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDomainResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDomainResponseUnmarshaller GetInstance();
    public static CreateDomainResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAttributesRequest publicRequest);
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAttributesResponseUnmarshaller _instance;
    public static DeleteAttributesResponseUnmarshaller Instance { get; }
    private static DeleteAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAttributesResponseUnmarshaller GetInstance();
    public static DeleteAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.DeleteDomainRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDomainRequest publicRequest);
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.DeleteDomainResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDomainResponseUnmarshaller _instance;
    public static DeleteDomainResponseUnmarshaller Instance { get; }
    private static DeleteDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDomainResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDomainResponseUnmarshaller GetInstance();
    public static DeleteDomainResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.DomainMetadataRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DomainMetadataRequest publicRequest);
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.DomainMetadataResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DomainMetadataResponseUnmarshaller _instance;
    public static DomainMetadataResponseUnmarshaller Instance { get; }
    private static DomainMetadataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DomainMetadataResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DomainMetadataResponseUnmarshaller GetInstance();
    public static DomainMetadataResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.GetAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAttributesRequest publicRequest);
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.GetAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetAttributesResponseUnmarshaller _instance;
    public static GetAttributesResponseUnmarshaller Instance { get; }
    private static GetAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAttributesResponseUnmarshaller GetInstance();
    public static GetAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.ItemUnmarshaller : object {
    private static ItemUnmarshaller _instance;
    public static ItemUnmarshaller Instance { get; }
    private static ItemUnmarshaller();
    public sealed virtual Item Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Item Unmarshall(JsonUnmarshallerContext context);
    public static ItemUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.ListDomainsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDomainsRequest publicRequest);
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.ListDomainsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListDomainsResponseUnmarshaller _instance;
    public static ListDomainsResponseUnmarshaller Instance { get; }
    private static ListDomainsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListDomainsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDomainsResponseUnmarshaller GetInstance();
    public static ListDomainsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutAttributesRequest publicRequest);
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutAttributesResponseUnmarshaller _instance;
    public static PutAttributesResponseUnmarshaller Instance { get; }
    private static PutAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutAttributesResponseUnmarshaller GetInstance();
    public static PutAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.SelectRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SelectRequest publicRequest);
}
public class Amazon.SimpleDB.Model.Internal.MarshallTransformations.SelectResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SelectResponseUnmarshaller _instance;
    public static SelectResponseUnmarshaller Instance { get; }
    private static SelectResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SelectResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SelectResponseUnmarshaller GetInstance();
    public static SelectResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleDB.Model.InvalidNextTokenException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public InvalidNextTokenException(string message);
    public InvalidNextTokenException(string message, Exception innerException);
    public InvalidNextTokenException(Exception innerException);
    public InvalidNextTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidNextTokenException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.InvalidNumberPredicatesException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public InvalidNumberPredicatesException(string message);
    public InvalidNumberPredicatesException(string message, Exception innerException);
    public InvalidNumberPredicatesException(Exception innerException);
    public InvalidNumberPredicatesException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidNumberPredicatesException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.InvalidNumberValueTestsException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public InvalidNumberValueTestsException(string message);
    public InvalidNumberValueTestsException(string message, Exception innerException);
    public InvalidNumberValueTestsException(Exception innerException);
    public InvalidNumberValueTestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidNumberValueTestsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.InvalidParameterValueException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public InvalidParameterValueException(string message);
    public InvalidParameterValueException(string message, Exception innerException);
    public InvalidParameterValueException(Exception innerException);
    public InvalidParameterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidParameterValueException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.InvalidQueryExpressionException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public InvalidQueryExpressionException(string message);
    public InvalidQueryExpressionException(string message, Exception innerException);
    public InvalidQueryExpressionException(Exception innerException);
    public InvalidQueryExpressionException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidQueryExpressionException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.Item : object {
    private string _alternateNameEncoding;
    private List`1<Attribute> _attributes;
    private string _name;
    public string AlternateNameEncoding { get; public set; }
    public List`1<Attribute> Attributes { get; public set; }
    public string Name { get; public set; }
    public Item(string name, List`1<Attribute> attributes);
    public string get_AlternateNameEncoding();
    public void set_AlternateNameEncoding(string value);
    internal bool IsSetAlternateNameEncoding();
    public List`1<Attribute> get_Attributes();
    public void set_Attributes(List`1<Attribute> value);
    internal bool IsSetAttributes();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleDB.Model.ListDomainsRequest : AmazonSimpleDBRequest {
    private Nullable`1<int> _maxNumberOfDomains;
    private string _nextToken;
    public int MaxNumberOfDomains { get; public set; }
    public string NextToken { get; public set; }
    public int get_MaxNumberOfDomains();
    public void set_MaxNumberOfDomains(int value);
    internal bool IsSetMaxNumberOfDomains();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleDB.Model.ListDomainsResponse : ListDomainsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListDomainsResult class are now available on the ListDomainsResponse class. You should use the properties on ListDomainsResponse instead of accessing them through ListDomainsResult.")]
public ListDomainsResult ListDomainsResult { get; }
    public ListDomainsResult get_ListDomainsResult();
}
public class Amazon.SimpleDB.Model.ListDomainsResult : AmazonWebServiceResponse {
    private List`1<string> _domainNames;
    private string _nextToken;
    public List`1<string> DomainNames { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_DomainNames();
    public void set_DomainNames(List`1<string> value);
    internal bool IsSetDomainNames();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleDB.Model.MissingParameterException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public MissingParameterException(string message);
    public MissingParameterException(string message, Exception innerException);
    public MissingParameterException(Exception innerException);
    public MissingParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public MissingParameterException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.NoSuchDomainException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public NoSuchDomainException(string message);
    public NoSuchDomainException(string message, Exception innerException);
    public NoSuchDomainException(Exception innerException);
    public NoSuchDomainException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NoSuchDomainException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.NumberDomainAttributesExceededException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public NumberDomainAttributesExceededException(string message);
    public NumberDomainAttributesExceededException(string message, Exception innerException);
    public NumberDomainAttributesExceededException(Exception innerException);
    public NumberDomainAttributesExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NumberDomainAttributesExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.NumberDomainBytesExceededException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public NumberDomainBytesExceededException(string message);
    public NumberDomainBytesExceededException(string message, Exception innerException);
    public NumberDomainBytesExceededException(Exception innerException);
    public NumberDomainBytesExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NumberDomainBytesExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.NumberDomainsExceededException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public NumberDomainsExceededException(string message);
    public NumberDomainsExceededException(string message, Exception innerException);
    public NumberDomainsExceededException(Exception innerException);
    public NumberDomainsExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NumberDomainsExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.NumberItemAttributesExceededException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public NumberItemAttributesExceededException(string message);
    public NumberItemAttributesExceededException(string message, Exception innerException);
    public NumberItemAttributesExceededException(Exception innerException);
    public NumberItemAttributesExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NumberItemAttributesExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.NumberSubmittedAttributesExceededException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public NumberSubmittedAttributesExceededException(string message);
    public NumberSubmittedAttributesExceededException(string message, Exception innerException);
    public NumberSubmittedAttributesExceededException(Exception innerException);
    public NumberSubmittedAttributesExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NumberSubmittedAttributesExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.NumberSubmittedItemsExceededException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public NumberSubmittedItemsExceededException(string message);
    public NumberSubmittedItemsExceededException(string message, Exception innerException);
    public NumberSubmittedItemsExceededException(Exception innerException);
    public NumberSubmittedItemsExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NumberSubmittedItemsExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.PutAttributesRequest : AmazonSimpleDBRequest {
    private List`1<ReplaceableAttribute> _attributes;
    private string _domainName;
    private UpdateCondition _expected;
    private string _itemName;
    public List`1<ReplaceableAttribute> Attributes { get; public set; }
    public string DomainName { get; public set; }
    public UpdateCondition Expected { get; public set; }
    public string ItemName { get; public set; }
    public PutAttributesRequest(string domainName, string itemName, List`1<ReplaceableAttribute> attributes);
    public PutAttributesRequest(string domainName, string itemName, List`1<ReplaceableAttribute> attributes, UpdateCondition expected);
    public List`1<ReplaceableAttribute> get_Attributes();
    public void set_Attributes(List`1<ReplaceableAttribute> value);
    internal bool IsSetAttributes();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public UpdateCondition get_Expected();
    public void set_Expected(UpdateCondition value);
    internal bool IsSetExpected();
    public string get_ItemName();
    public void set_ItemName(string value);
    internal bool IsSetItemName();
}
public class Amazon.SimpleDB.Model.PutAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleDB.Model.ReplaceableAttribute : object {
    private string _name;
    private Nullable`1<bool> _replace;
    private string _value;
    public string Name { get; public set; }
    public bool Replace { get; public set; }
    public string Value { get; public set; }
    public ReplaceableAttribute(string name, string value, bool replace);
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public bool get_Replace();
    public void set_Replace(bool value);
    internal bool IsSetReplace();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleDB.Model.ReplaceableItem : object {
    private List`1<ReplaceableAttribute> _attributes;
    private string _name;
    public List`1<ReplaceableAttribute> Attributes { get; public set; }
    public string Name { get; public set; }
    public ReplaceableItem(string name);
    public ReplaceableItem(string name, List`1<ReplaceableAttribute> attributes);
    public List`1<ReplaceableAttribute> get_Attributes();
    public void set_Attributes(List`1<ReplaceableAttribute> value);
    internal bool IsSetAttributes();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleDB.Model.RequestTimeoutException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public RequestTimeoutException(string message);
    public RequestTimeoutException(string message, Exception innerException);
    public RequestTimeoutException(Exception innerException);
    public RequestTimeoutException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public RequestTimeoutException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.SelectRequest : AmazonSimpleDBRequest {
    private Nullable`1<bool> _consistentRead;
    private string _nextToken;
    private string _selectExpression;
    public bool ConsistentRead { get; public set; }
    public string NextToken { get; public set; }
    public string SelectExpression { get; public set; }
    public SelectRequest(string selectExpression);
    public SelectRequest(string selectExpression, bool consistentRead);
    public bool get_ConsistentRead();
    public void set_ConsistentRead(bool value);
    internal bool IsSetConsistentRead();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_SelectExpression();
    public void set_SelectExpression(string value);
    internal bool IsSetSelectExpression();
}
public class Amazon.SimpleDB.Model.SelectResponse : SelectResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SelectResult class are now available on the SelectResponse class. You should use the properties on SelectResponse instead of accessing them through SelectResult.")]
public SelectResult SelectResult { get; }
    public SelectResult get_SelectResult();
}
public class Amazon.SimpleDB.Model.SelectResult : AmazonWebServiceResponse {
    private List`1<Item> _items;
    private string _nextToken;
    public List`1<Item> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Item> get_Items();
    public void set_Items(List`1<Item> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleDB.Model.TooManyRequestedAttributesException : AmazonSimpleDBException {
    [CompilerGeneratedAttribute]
private float <BoxUsage>k__BackingField;
    public float BoxUsage { get; public set; }
    public TooManyRequestedAttributesException(string message);
    public TooManyRequestedAttributesException(string message, Exception innerException);
    public TooManyRequestedAttributesException(Exception innerException);
    public TooManyRequestedAttributesException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TooManyRequestedAttributesException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public float get_BoxUsage();
    [CompilerGeneratedAttribute]
public void set_BoxUsage(float value);
}
public class Amazon.SimpleDB.Model.UpdateCondition : object {
    private Nullable`1<bool> _exists;
    private string _name;
    private string _value;
    public bool Exists { get; public set; }
    public string Name { get; public set; }
    public string Value { get; public set; }
    public UpdateCondition(string name, string value, bool exists);
    public bool get_Exists();
    public void set_Exists(bool value);
    internal bool IsSetExists();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleEmail.AmazonSimpleEmailServiceClient : AmazonServiceClient {
    public AmazonSimpleEmailServiceClient(AWSCredentials credentials);
    public AmazonSimpleEmailServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonSimpleEmailServiceClient(AWSCredentials credentials, AmazonSimpleEmailServiceConfig clientConfig);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonSimpleEmailServiceConfig clientConfig);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonSimpleEmailServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonSimpleEmailServiceConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void Dispose(bool disposing);
    internal CloneReceiptRuleSetResponse CloneReceiptRuleSet(CloneReceiptRuleSetRequest request);
    public sealed virtual Task`1<CloneReceiptRuleSetResponse> CloneReceiptRuleSetAsync(CloneReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal CreateReceiptFilterResponse CreateReceiptFilter(CreateReceiptFilterRequest request);
    public sealed virtual Task`1<CreateReceiptFilterResponse> CreateReceiptFilterAsync(CreateReceiptFilterRequest request, CancellationToken cancellationToken);
    internal CreateReceiptRuleResponse CreateReceiptRule(CreateReceiptRuleRequest request);
    public sealed virtual Task`1<CreateReceiptRuleResponse> CreateReceiptRuleAsync(CreateReceiptRuleRequest request, CancellationToken cancellationToken);
    internal CreateReceiptRuleSetResponse CreateReceiptRuleSet(CreateReceiptRuleSetRequest request);
    public sealed virtual Task`1<CreateReceiptRuleSetResponse> CreateReceiptRuleSetAsync(CreateReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal DeleteIdentityResponse DeleteIdentity(DeleteIdentityRequest request);
    public sealed virtual Task`1<DeleteIdentityResponse> DeleteIdentityAsync(DeleteIdentityRequest request, CancellationToken cancellationToken);
    internal DeleteIdentityPolicyResponse DeleteIdentityPolicy(DeleteIdentityPolicyRequest request);
    public sealed virtual Task`1<DeleteIdentityPolicyResponse> DeleteIdentityPolicyAsync(DeleteIdentityPolicyRequest request, CancellationToken cancellationToken);
    internal DeleteReceiptFilterResponse DeleteReceiptFilter(DeleteReceiptFilterRequest request);
    public sealed virtual Task`1<DeleteReceiptFilterResponse> DeleteReceiptFilterAsync(DeleteReceiptFilterRequest request, CancellationToken cancellationToken);
    internal DeleteReceiptRuleResponse DeleteReceiptRule(DeleteReceiptRuleRequest request);
    public sealed virtual Task`1<DeleteReceiptRuleResponse> DeleteReceiptRuleAsync(DeleteReceiptRuleRequest request, CancellationToken cancellationToken);
    internal DeleteReceiptRuleSetResponse DeleteReceiptRuleSet(DeleteReceiptRuleSetRequest request);
    public sealed virtual Task`1<DeleteReceiptRuleSetResponse> DeleteReceiptRuleSetAsync(DeleteReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal DeleteVerifiedEmailAddressResponse DeleteVerifiedEmailAddress(DeleteVerifiedEmailAddressRequest request);
    public sealed virtual Task`1<DeleteVerifiedEmailAddressResponse> DeleteVerifiedEmailAddressAsync(DeleteVerifiedEmailAddressRequest request, CancellationToken cancellationToken);
    internal DescribeActiveReceiptRuleSetResponse DescribeActiveReceiptRuleSet(DescribeActiveReceiptRuleSetRequest request);
    public sealed virtual Task`1<DescribeActiveReceiptRuleSetResponse> DescribeActiveReceiptRuleSetAsync(DescribeActiveReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal DescribeReceiptRuleResponse DescribeReceiptRule(DescribeReceiptRuleRequest request);
    public sealed virtual Task`1<DescribeReceiptRuleResponse> DescribeReceiptRuleAsync(DescribeReceiptRuleRequest request, CancellationToken cancellationToken);
    internal DescribeReceiptRuleSetResponse DescribeReceiptRuleSet(DescribeReceiptRuleSetRequest request);
    public sealed virtual Task`1<DescribeReceiptRuleSetResponse> DescribeReceiptRuleSetAsync(DescribeReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal GetIdentityDkimAttributesResponse GetIdentityDkimAttributes(GetIdentityDkimAttributesRequest request);
    public sealed virtual Task`1<GetIdentityDkimAttributesResponse> GetIdentityDkimAttributesAsync(GetIdentityDkimAttributesRequest request, CancellationToken cancellationToken);
    internal GetIdentityNotificationAttributesResponse GetIdentityNotificationAttributes(GetIdentityNotificationAttributesRequest request);
    public sealed virtual Task`1<GetIdentityNotificationAttributesResponse> GetIdentityNotificationAttributesAsync(GetIdentityNotificationAttributesRequest request, CancellationToken cancellationToken);
    internal GetIdentityPoliciesResponse GetIdentityPolicies(GetIdentityPoliciesRequest request);
    public sealed virtual Task`1<GetIdentityPoliciesResponse> GetIdentityPoliciesAsync(GetIdentityPoliciesRequest request, CancellationToken cancellationToken);
    internal GetIdentityVerificationAttributesResponse GetIdentityVerificationAttributes(GetIdentityVerificationAttributesRequest request);
    public sealed virtual Task`1<GetIdentityVerificationAttributesResponse> GetIdentityVerificationAttributesAsync(GetIdentityVerificationAttributesRequest request, CancellationToken cancellationToken);
    internal GetSendQuotaResponse GetSendQuota();
    internal GetSendQuotaResponse GetSendQuota(GetSendQuotaRequest request);
    public sealed virtual Task`1<GetSendQuotaResponse> GetSendQuotaAsync(GetSendQuotaRequest request, CancellationToken cancellationToken);
    internal GetSendStatisticsResponse GetSendStatistics();
    internal GetSendStatisticsResponse GetSendStatistics(GetSendStatisticsRequest request);
    public sealed virtual Task`1<GetSendStatisticsResponse> GetSendStatisticsAsync(GetSendStatisticsRequest request, CancellationToken cancellationToken);
    internal ListIdentitiesResponse ListIdentities();
    internal ListIdentitiesResponse ListIdentities(ListIdentitiesRequest request);
    public sealed virtual Task`1<ListIdentitiesResponse> ListIdentitiesAsync(ListIdentitiesRequest request, CancellationToken cancellationToken);
    internal ListIdentityPoliciesResponse ListIdentityPolicies(ListIdentityPoliciesRequest request);
    public sealed virtual Task`1<ListIdentityPoliciesResponse> ListIdentityPoliciesAsync(ListIdentityPoliciesRequest request, CancellationToken cancellationToken);
    internal ListReceiptFiltersResponse ListReceiptFilters(ListReceiptFiltersRequest request);
    public sealed virtual Task`1<ListReceiptFiltersResponse> ListReceiptFiltersAsync(ListReceiptFiltersRequest request, CancellationToken cancellationToken);
    internal ListReceiptRuleSetsResponse ListReceiptRuleSets(ListReceiptRuleSetsRequest request);
    public sealed virtual Task`1<ListReceiptRuleSetsResponse> ListReceiptRuleSetsAsync(ListReceiptRuleSetsRequest request, CancellationToken cancellationToken);
    internal ListVerifiedEmailAddressesResponse ListVerifiedEmailAddresses();
    internal ListVerifiedEmailAddressesResponse ListVerifiedEmailAddresses(ListVerifiedEmailAddressesRequest request);
    public sealed virtual Task`1<ListVerifiedEmailAddressesResponse> ListVerifiedEmailAddressesAsync(ListVerifiedEmailAddressesRequest request, CancellationToken cancellationToken);
    internal PutIdentityPolicyResponse PutIdentityPolicy(PutIdentityPolicyRequest request);
    public sealed virtual Task`1<PutIdentityPolicyResponse> PutIdentityPolicyAsync(PutIdentityPolicyRequest request, CancellationToken cancellationToken);
    internal ReorderReceiptRuleSetResponse ReorderReceiptRuleSet(ReorderReceiptRuleSetRequest request);
    public sealed virtual Task`1<ReorderReceiptRuleSetResponse> ReorderReceiptRuleSetAsync(ReorderReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal SendBounceResponse SendBounce(SendBounceRequest request);
    public sealed virtual Task`1<SendBounceResponse> SendBounceAsync(SendBounceRequest request, CancellationToken cancellationToken);
    internal SendEmailResponse SendEmail(SendEmailRequest request);
    public sealed virtual Task`1<SendEmailResponse> SendEmailAsync(SendEmailRequest request, CancellationToken cancellationToken);
    internal SendRawEmailResponse SendRawEmail(SendRawEmailRequest request);
    public sealed virtual Task`1<SendRawEmailResponse> SendRawEmailAsync(SendRawEmailRequest request, CancellationToken cancellationToken);
    internal SetActiveReceiptRuleSetResponse SetActiveReceiptRuleSet(SetActiveReceiptRuleSetRequest request);
    public sealed virtual Task`1<SetActiveReceiptRuleSetResponse> SetActiveReceiptRuleSetAsync(SetActiveReceiptRuleSetRequest request, CancellationToken cancellationToken);
    internal SetIdentityDkimEnabledResponse SetIdentityDkimEnabled(SetIdentityDkimEnabledRequest request);
    public sealed virtual Task`1<SetIdentityDkimEnabledResponse> SetIdentityDkimEnabledAsync(SetIdentityDkimEnabledRequest request, CancellationToken cancellationToken);
    internal SetIdentityFeedbackForwardingEnabledResponse SetIdentityFeedbackForwardingEnabled(SetIdentityFeedbackForwardingEnabledRequest request);
    public sealed virtual Task`1<SetIdentityFeedbackForwardingEnabledResponse> SetIdentityFeedbackForwardingEnabledAsync(SetIdentityFeedbackForwardingEnabledRequest request, CancellationToken cancellationToken);
    internal SetIdentityNotificationTopicResponse SetIdentityNotificationTopic(SetIdentityNotificationTopicRequest request);
    public sealed virtual Task`1<SetIdentityNotificationTopicResponse> SetIdentityNotificationTopicAsync(SetIdentityNotificationTopicRequest request, CancellationToken cancellationToken);
    internal SetReceiptRulePositionResponse SetReceiptRulePosition(SetReceiptRulePositionRequest request);
    public sealed virtual Task`1<SetReceiptRulePositionResponse> SetReceiptRulePositionAsync(SetReceiptRulePositionRequest request, CancellationToken cancellationToken);
    internal UpdateReceiptRuleResponse UpdateReceiptRule(UpdateReceiptRuleRequest request);
    public sealed virtual Task`1<UpdateReceiptRuleResponse> UpdateReceiptRuleAsync(UpdateReceiptRuleRequest request, CancellationToken cancellationToken);
    internal VerifyDomainDkimResponse VerifyDomainDkim(VerifyDomainDkimRequest request);
    public sealed virtual Task`1<VerifyDomainDkimResponse> VerifyDomainDkimAsync(VerifyDomainDkimRequest request, CancellationToken cancellationToken);
    internal VerifyDomainIdentityResponse VerifyDomainIdentity(VerifyDomainIdentityRequest request);
    public sealed virtual Task`1<VerifyDomainIdentityResponse> VerifyDomainIdentityAsync(VerifyDomainIdentityRequest request, CancellationToken cancellationToken);
    internal VerifyEmailAddressResponse VerifyEmailAddress(VerifyEmailAddressRequest request);
    public sealed virtual Task`1<VerifyEmailAddressResponse> VerifyEmailAddressAsync(VerifyEmailAddressRequest request, CancellationToken cancellationToken);
    internal VerifyEmailIdentityResponse VerifyEmailIdentity(VerifyEmailIdentityRequest request);
    public sealed virtual Task`1<VerifyEmailIdentityResponse> VerifyEmailIdentityAsync(VerifyEmailIdentityRequest request, CancellationToken cancellationToken);
}
public class Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.SimpleEmail.AmazonSimpleEmailServiceException : AmazonServiceException {
    public AmazonSimpleEmailServiceException(string message);
    public AmazonSimpleEmailServiceException(string message, Exception innerException);
    public AmazonSimpleEmailServiceException(Exception innerException);
    public AmazonSimpleEmailServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonSimpleEmailServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.AmazonSimpleEmailServiceRequest : AmazonWebServiceRequest {
}
public class Amazon.SimpleEmail.BounceType : ConstantClass {
    public static BounceType ContentRejected;
    public static BounceType DoesNotExist;
    public static BounceType ExceededQuota;
    public static BounceType MessageTooLarge;
    public static BounceType TemporaryFailure;
    public static BounceType Undefined;
    public BounceType(string value);
    private static BounceType();
    public static BounceType FindValue(string value);
    public static BounceType op_Implicit(string value);
}
public class Amazon.SimpleEmail.DsnAction : ConstantClass {
    public static DsnAction Delayed;
    public static DsnAction Delivered;
    public static DsnAction Expanded;
    public static DsnAction Failed;
    public static DsnAction Relayed;
    public DsnAction(string value);
    private static DsnAction();
    public static DsnAction FindValue(string value);
    public static DsnAction op_Implicit(string value);
}
public interface Amazon.SimpleEmail.IAmazonSimpleEmailService {
    public abstract virtual Task`1<CloneReceiptRuleSetResponse> CloneReceiptRuleSetAsync(CloneReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReceiptFilterResponse> CreateReceiptFilterAsync(CreateReceiptFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReceiptRuleResponse> CreateReceiptRuleAsync(CreateReceiptRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReceiptRuleSetResponse> CreateReceiptRuleSetAsync(CreateReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIdentityResponse> DeleteIdentityAsync(DeleteIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIdentityPolicyResponse> DeleteIdentityPolicyAsync(DeleteIdentityPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReceiptFilterResponse> DeleteReceiptFilterAsync(DeleteReceiptFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReceiptRuleResponse> DeleteReceiptRuleAsync(DeleteReceiptRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReceiptRuleSetResponse> DeleteReceiptRuleSetAsync(DeleteReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVerifiedEmailAddressResponse> DeleteVerifiedEmailAddressAsync(DeleteVerifiedEmailAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeActiveReceiptRuleSetResponse> DescribeActiveReceiptRuleSetAsync(DescribeActiveReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReceiptRuleResponse> DescribeReceiptRuleAsync(DescribeReceiptRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReceiptRuleSetResponse> DescribeReceiptRuleSetAsync(DescribeReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityDkimAttributesResponse> GetIdentityDkimAttributesAsync(GetIdentityDkimAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityNotificationAttributesResponse> GetIdentityNotificationAttributesAsync(GetIdentityNotificationAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityPoliciesResponse> GetIdentityPoliciesAsync(GetIdentityPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityVerificationAttributesResponse> GetIdentityVerificationAttributesAsync(GetIdentityVerificationAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSendQuotaResponse> GetSendQuotaAsync(GetSendQuotaRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSendStatisticsResponse> GetSendStatisticsAsync(GetSendStatisticsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentitiesResponse> ListIdentitiesAsync(ListIdentitiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentityPoliciesResponse> ListIdentityPoliciesAsync(ListIdentityPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListReceiptFiltersResponse> ListReceiptFiltersAsync(ListReceiptFiltersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListReceiptRuleSetsResponse> ListReceiptRuleSetsAsync(ListReceiptRuleSetsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVerifiedEmailAddressesResponse> ListVerifiedEmailAddressesAsync(ListVerifiedEmailAddressesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutIdentityPolicyResponse> PutIdentityPolicyAsync(PutIdentityPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReorderReceiptRuleSetResponse> ReorderReceiptRuleSetAsync(ReorderReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendBounceResponse> SendBounceAsync(SendBounceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendEmailResponse> SendEmailAsync(SendEmailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendRawEmailResponse> SendRawEmailAsync(SendRawEmailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetActiveReceiptRuleSetResponse> SetActiveReceiptRuleSetAsync(SetActiveReceiptRuleSetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityDkimEnabledResponse> SetIdentityDkimEnabledAsync(SetIdentityDkimEnabledRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityFeedbackForwardingEnabledResponse> SetIdentityFeedbackForwardingEnabledAsync(SetIdentityFeedbackForwardingEnabledRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityNotificationTopicResponse> SetIdentityNotificationTopicAsync(SetIdentityNotificationTopicRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetReceiptRulePositionResponse> SetReceiptRulePositionAsync(SetReceiptRulePositionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateReceiptRuleResponse> UpdateReceiptRuleAsync(UpdateReceiptRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<VerifyDomainDkimResponse> VerifyDomainDkimAsync(VerifyDomainDkimRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<VerifyDomainIdentityResponse> VerifyDomainIdentityAsync(VerifyDomainIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<VerifyEmailAddressResponse> VerifyEmailAddressAsync(VerifyEmailAddressRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<VerifyEmailIdentityResponse> VerifyEmailIdentityAsync(VerifyEmailIdentityRequest request, CancellationToken cancellationToken);
}
public class Amazon.SimpleEmail.IdentityType : ConstantClass {
    public static IdentityType Domain;
    public static IdentityType EmailAddress;
    public IdentityType(string value);
    private static IdentityType();
    public static IdentityType FindValue(string value);
    public static IdentityType op_Implicit(string value);
}
public class Amazon.SimpleEmail.InvocationType : ConstantClass {
    public static InvocationType Event;
    public static InvocationType RequestResponse;
    public InvocationType(string value);
    private static InvocationType();
    public static InvocationType FindValue(string value);
    public static InvocationType op_Implicit(string value);
}
public class Amazon.SimpleEmail.Model.AddHeaderAction : object {
    private string _headerName;
    private string _headerValue;
    public string HeaderName { get; public set; }
    public string HeaderValue { get; public set; }
    public string get_HeaderName();
    public void set_HeaderName(string value);
    internal bool IsSetHeaderName();
    public string get_HeaderValue();
    public void set_HeaderValue(string value);
    internal bool IsSetHeaderValue();
}
public class Amazon.SimpleEmail.Model.AlreadyExistsException : AmazonSimpleEmailServiceException {
    public AlreadyExistsException(string message);
    public AlreadyExistsException(string message, Exception innerException);
    public AlreadyExistsException(Exception innerException);
    public AlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public AlreadyExistsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.Body : object {
    private Content _html;
    private Content _text;
    public Content Html { get; public set; }
    public Content Text { get; public set; }
    public Body(Content text);
    public Content get_Html();
    public void set_Html(Content value);
    internal bool IsSetHtml();
    public Content get_Text();
    public void set_Text(Content value);
    internal bool IsSetText();
}
public class Amazon.SimpleEmail.Model.BounceAction : object {
    private string _message;
    private string _sender;
    private string _smtpReplyCode;
    private string _statusCode;
    private string _topicArn;
    public string Message { get; public set; }
    public string Sender { get; public set; }
    public string SmtpReplyCode { get; public set; }
    public string StatusCode { get; public set; }
    public string TopicArn { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_Sender();
    public void set_Sender(string value);
    internal bool IsSetSender();
    public string get_SmtpReplyCode();
    public void set_SmtpReplyCode(string value);
    internal bool IsSetSmtpReplyCode();
    public string get_StatusCode();
    public void set_StatusCode(string value);
    internal bool IsSetStatusCode();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.Model.BouncedRecipientInfo : object {
    private BounceType _bounceType;
    private string _recipient;
    private string _recipientArn;
    private RecipientDsnFields _recipientDsnFields;
    public BounceType BounceType { get; public set; }
    public string Recipient { get; public set; }
    public string RecipientArn { get; public set; }
    public RecipientDsnFields RecipientDsnFields { get; public set; }
    public BounceType get_BounceType();
    public void set_BounceType(BounceType value);
    internal bool IsSetBounceType();
    public string get_Recipient();
    public void set_Recipient(string value);
    internal bool IsSetRecipient();
    public string get_RecipientArn();
    public void set_RecipientArn(string value);
    internal bool IsSetRecipientArn();
    public RecipientDsnFields get_RecipientDsnFields();
    public void set_RecipientDsnFields(RecipientDsnFields value);
    internal bool IsSetRecipientDsnFields();
}
public class Amazon.SimpleEmail.Model.CannotDeleteException : AmazonSimpleEmailServiceException {
    public CannotDeleteException(string message);
    public CannotDeleteException(string message, Exception innerException);
    public CannotDeleteException(Exception innerException);
    public CannotDeleteException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public CannotDeleteException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.CloneReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private string _originalRuleSetName;
    private string _ruleSetName;
    public string OriginalRuleSetName { get; public set; }
    public string RuleSetName { get; public set; }
    public string get_OriginalRuleSetName();
    public void set_OriginalRuleSetName(string value);
    internal bool IsSetOriginalRuleSetName();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.CloneReceiptRuleSetResponse : CloneReceiptRuleSetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CloneReceiptRuleSetResult class are now available on the CloneReceiptRuleSetResponse class. You should use the properties on CloneReceiptRuleSetResponse instead of accessing them through CloneReceiptRuleSetResult.")]
public CloneReceiptRuleSetResult CloneReceiptRuleSetResult { get; }
    public CloneReceiptRuleSetResult get_CloneReceiptRuleSetResult();
}
public class Amazon.SimpleEmail.Model.CloneReceiptRuleSetResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.Content : object {
    private string _charset;
    private string _data;
    public string Charset { get; public set; }
    public string Data { get; public set; }
    public Content(string data);
    public string get_Charset();
    public void set_Charset(string value);
    internal bool IsSetCharset();
    public string get_Data();
    public void set_Data(string value);
    internal bool IsSetData();
}
public class Amazon.SimpleEmail.Model.CreateReceiptFilterRequest : AmazonSimpleEmailServiceRequest {
    private ReceiptFilter _filter;
    public ReceiptFilter Filter { get; public set; }
    public ReceiptFilter get_Filter();
    public void set_Filter(ReceiptFilter value);
    internal bool IsSetFilter();
}
public class Amazon.SimpleEmail.Model.CreateReceiptFilterResponse : CreateReceiptFilterResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateReceiptFilterResult class are now available on the CreateReceiptFilterResponse class. You should use the properties on CreateReceiptFilterResponse instead of accessing them through CreateReceiptFilterResult.")]
public CreateReceiptFilterResult CreateReceiptFilterResult { get; }
    public CreateReceiptFilterResult get_CreateReceiptFilterResult();
}
public class Amazon.SimpleEmail.Model.CreateReceiptFilterResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CreateReceiptRuleRequest : AmazonSimpleEmailServiceRequest {
    private string _after;
    private ReceiptRule _rule;
    private string _ruleSetName;
    public string After { get; public set; }
    public ReceiptRule Rule { get; public set; }
    public string RuleSetName { get; public set; }
    public string get_After();
    public void set_After(string value);
    internal bool IsSetAfter();
    public ReceiptRule get_Rule();
    public void set_Rule(ReceiptRule value);
    internal bool IsSetRule();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.CreateReceiptRuleResponse : CreateReceiptRuleResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateReceiptRuleResult class are now available on the CreateReceiptRuleResponse class. You should use the properties on CreateReceiptRuleResponse instead of accessing them through CreateReceiptRuleResult.")]
public CreateReceiptRuleResult CreateReceiptRuleResult { get; }
    public CreateReceiptRuleResult get_CreateReceiptRuleResult();
}
public class Amazon.SimpleEmail.Model.CreateReceiptRuleResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.CreateReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleSetName;
    public string RuleSetName { get; public set; }
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.CreateReceiptRuleSetResponse : CreateReceiptRuleSetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateReceiptRuleSetResult class are now available on the CreateReceiptRuleSetResponse class. You should use the properties on CreateReceiptRuleSetResponse instead of accessing them through CreateReceiptRuleSetResult.")]
public CreateReceiptRuleSetResult CreateReceiptRuleSetResult { get; }
    public CreateReceiptRuleSetResult get_CreateReceiptRuleSetResult();
}
public class Amazon.SimpleEmail.Model.CreateReceiptRuleSetResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteIdentityPolicyRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    private string _policyName;
    public string Identity { get; public set; }
    public string PolicyName { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.SimpleEmail.Model.DeleteIdentityPolicyResponse : DeleteIdentityPolicyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteIdentityPolicyResult class are now available on the DeleteIdentityPolicyResponse class. You should use the properties on DeleteIdentityPolicyResponse instead of accessing them through DeleteIdentityPolicyResult.")]
public DeleteIdentityPolicyResult DeleteIdentityPolicyResult { get; }
    public DeleteIdentityPolicyResult get_DeleteIdentityPolicyResult();
}
public class Amazon.SimpleEmail.Model.DeleteIdentityPolicyResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteIdentityRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    public string Identity { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
}
public class Amazon.SimpleEmail.Model.DeleteIdentityResponse : DeleteIdentityResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteIdentityResult class are now available on the DeleteIdentityResponse class. You should use the properties on DeleteIdentityResponse instead of accessing them through DeleteIdentityResult.")]
public DeleteIdentityResult DeleteIdentityResult { get; }
    public DeleteIdentityResult get_DeleteIdentityResult();
}
public class Amazon.SimpleEmail.Model.DeleteIdentityResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteReceiptFilterRequest : AmazonSimpleEmailServiceRequest {
    private string _filterName;
    public string FilterName { get; public set; }
    public string get_FilterName();
    public void set_FilterName(string value);
    internal bool IsSetFilterName();
}
public class Amazon.SimpleEmail.Model.DeleteReceiptFilterResponse : DeleteReceiptFilterResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteReceiptFilterResult class are now available on the DeleteReceiptFilterResponse class. You should use the properties on DeleteReceiptFilterResponse instead of accessing them through DeleteReceiptFilterResult.")]
public DeleteReceiptFilterResult DeleteReceiptFilterResult { get; }
    public DeleteReceiptFilterResult get_DeleteReceiptFilterResult();
}
public class Amazon.SimpleEmail.Model.DeleteReceiptFilterResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteReceiptRuleRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleName;
    private string _ruleSetName;
    public string RuleName { get; public set; }
    public string RuleSetName { get; public set; }
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.DeleteReceiptRuleResponse : DeleteReceiptRuleResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteReceiptRuleResult class are now available on the DeleteReceiptRuleResponse class. You should use the properties on DeleteReceiptRuleResponse instead of accessing them through DeleteReceiptRuleResult.")]
public DeleteReceiptRuleResult DeleteReceiptRuleResult { get; }
    public DeleteReceiptRuleResult get_DeleteReceiptRuleResult();
}
public class Amazon.SimpleEmail.Model.DeleteReceiptRuleResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleSetName;
    public string RuleSetName { get; public set; }
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.DeleteReceiptRuleSetResponse : DeleteReceiptRuleSetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteReceiptRuleSetResult class are now available on the DeleteReceiptRuleSetResponse class. You should use the properties on DeleteReceiptRuleSetResponse instead of accessing them through DeleteReceiptRuleSetResult.")]
public DeleteReceiptRuleSetResult DeleteReceiptRuleSetResult { get; }
    public DeleteReceiptRuleSetResult get_DeleteReceiptRuleSetResult();
}
public class Amazon.SimpleEmail.Model.DeleteReceiptRuleSetResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest : AmazonSimpleEmailServiceRequest {
    private string _emailAddress;
    public string EmailAddress { get; public set; }
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
}
public class Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetResponse : DescribeActiveReceiptRuleSetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeActiveReceiptRuleSetResult class are now available on the DescribeActiveReceiptRuleSetResponse class. You should use the properties on DescribeActiveReceiptRuleSetResponse instead of accessing them through DescribeActiveReceiptRuleSetResult.")]
public DescribeActiveReceiptRuleSetResult DescribeActiveReceiptRuleSetResult { get; }
    public DescribeActiveReceiptRuleSetResult get_DescribeActiveReceiptRuleSetResult();
}
public class Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetResult : AmazonWebServiceResponse {
    private ReceiptRuleSetMetadata _metadata;
    private List`1<ReceiptRule> _rules;
    public ReceiptRuleSetMetadata Metadata { get; public set; }
    public List`1<ReceiptRule> Rules { get; public set; }
    public ReceiptRuleSetMetadata get_Metadata();
    public void set_Metadata(ReceiptRuleSetMetadata value);
    internal bool IsSetMetadata();
    public List`1<ReceiptRule> get_Rules();
    public void set_Rules(List`1<ReceiptRule> value);
    internal bool IsSetRules();
}
public class Amazon.SimpleEmail.Model.DescribeReceiptRuleRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleName;
    private string _ruleSetName;
    public string RuleName { get; public set; }
    public string RuleSetName { get; public set; }
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.DescribeReceiptRuleResponse : DescribeReceiptRuleResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeReceiptRuleResult class are now available on the DescribeReceiptRuleResponse class. You should use the properties on DescribeReceiptRuleResponse instead of accessing them through DescribeReceiptRuleResult.")]
public DescribeReceiptRuleResult DescribeReceiptRuleResult { get; }
    public DescribeReceiptRuleResult get_DescribeReceiptRuleResult();
}
public class Amazon.SimpleEmail.Model.DescribeReceiptRuleResult : AmazonWebServiceResponse {
    private ReceiptRule _rule;
    public ReceiptRule Rule { get; public set; }
    public ReceiptRule get_Rule();
    public void set_Rule(ReceiptRule value);
    internal bool IsSetRule();
}
public class Amazon.SimpleEmail.Model.DescribeReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleSetName;
    public string RuleSetName { get; public set; }
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.DescribeReceiptRuleSetResponse : DescribeReceiptRuleSetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DescribeReceiptRuleSetResult class are now available on the DescribeReceiptRuleSetResponse class. You should use the properties on DescribeReceiptRuleSetResponse instead of accessing them through DescribeReceiptRuleSetResult.")]
public DescribeReceiptRuleSetResult DescribeReceiptRuleSetResult { get; }
    public DescribeReceiptRuleSetResult get_DescribeReceiptRuleSetResult();
}
public class Amazon.SimpleEmail.Model.DescribeReceiptRuleSetResult : AmazonWebServiceResponse {
    private ReceiptRuleSetMetadata _metadata;
    private List`1<ReceiptRule> _rules;
    public ReceiptRuleSetMetadata Metadata { get; public set; }
    public List`1<ReceiptRule> Rules { get; public set; }
    public ReceiptRuleSetMetadata get_Metadata();
    public void set_Metadata(ReceiptRuleSetMetadata value);
    internal bool IsSetMetadata();
    public List`1<ReceiptRule> get_Rules();
    public void set_Rules(List`1<ReceiptRule> value);
    internal bool IsSetRules();
}
public class Amazon.SimpleEmail.Model.Destination : object {
    private List`1<string> _bccAddresses;
    private List`1<string> _ccAddresses;
    private List`1<string> _toAddresses;
    public List`1<string> BccAddresses { get; public set; }
    public List`1<string> CcAddresses { get; public set; }
    public List`1<string> ToAddresses { get; public set; }
    public Destination(List`1<string> toAddresses);
    public List`1<string> get_BccAddresses();
    public void set_BccAddresses(List`1<string> value);
    internal bool IsSetBccAddresses();
    public List`1<string> get_CcAddresses();
    public void set_CcAddresses(List`1<string> value);
    internal bool IsSetCcAddresses();
    public List`1<string> get_ToAddresses();
    public void set_ToAddresses(List`1<string> value);
    internal bool IsSetToAddresses();
}
public class Amazon.SimpleEmail.Model.ExtensionField : object {
    private string _name;
    private string _value;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _identities;
    public List`1<string> Identities { get; public set; }
    public List`1<string> get_Identities();
    public void set_Identities(List`1<string> value);
    internal bool IsSetIdentities();
}
public class Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResponse : GetIdentityDkimAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetIdentityDkimAttributesResult class are now available on the GetIdentityDkimAttributesResponse class. You should use the properties on GetIdentityDkimAttributesResponse instead of accessing them through GetIdentityDkimAttributesResult.")]
public GetIdentityDkimAttributesResult GetIdentityDkimAttributesResult { get; }
    public GetIdentityDkimAttributesResult get_GetIdentityDkimAttributesResult();
}
public class Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResult : AmazonWebServiceResponse {
    private Dictionary`2<string, IdentityDkimAttributes> _dkimAttributes;
    public Dictionary`2<string, IdentityDkimAttributes> DkimAttributes { get; public set; }
    public Dictionary`2<string, IdentityDkimAttributes> get_DkimAttributes();
    public void set_DkimAttributes(Dictionary`2<string, IdentityDkimAttributes> value);
    internal bool IsSetDkimAttributes();
}
public class Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _identities;
    public List`1<string> Identities { get; public set; }
    public List`1<string> get_Identities();
    public void set_Identities(List`1<string> value);
    internal bool IsSetIdentities();
}
public class Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResponse : GetIdentityNotificationAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetIdentityNotificationAttributesResult class are now available on the GetIdentityNotificationAttributesResponse class. You should use the properties on GetIdentityNotificationAttributesResponse instead of accessing them through GetIdentityNotificationAttributesResult.")]
public GetIdentityNotificationAttributesResult GetIdentityNotificationAttributesResult { get; }
    public GetIdentityNotificationAttributesResult get_GetIdentityNotificationAttributesResult();
}
public class Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResult : AmazonWebServiceResponse {
    private Dictionary`2<string, IdentityNotificationAttributes> _notificationAttributes;
    public Dictionary`2<string, IdentityNotificationAttributes> NotificationAttributes { get; public set; }
    public Dictionary`2<string, IdentityNotificationAttributes> get_NotificationAttributes();
    public void set_NotificationAttributes(Dictionary`2<string, IdentityNotificationAttributes> value);
    internal bool IsSetNotificationAttributes();
}
public class Amazon.SimpleEmail.Model.GetIdentityPoliciesRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    private List`1<string> _policyNames;
    public string Identity { get; public set; }
    public List`1<string> PolicyNames { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
}
public class Amazon.SimpleEmail.Model.GetIdentityPoliciesResponse : GetIdentityPoliciesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetIdentityPoliciesResult class are now available on the GetIdentityPoliciesResponse class. You should use the properties on GetIdentityPoliciesResponse instead of accessing them through GetIdentityPoliciesResult.")]
public GetIdentityPoliciesResult GetIdentityPoliciesResult { get; }
    public GetIdentityPoliciesResult get_GetIdentityPoliciesResult();
}
public class Amazon.SimpleEmail.Model.GetIdentityPoliciesResult : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _policies;
    public Dictionary`2<string, string> Policies { get; public set; }
    public Dictionary`2<string, string> get_Policies();
    public void set_Policies(Dictionary`2<string, string> value);
    internal bool IsSetPolicies();
}
public class Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _identities;
    public List`1<string> Identities { get; public set; }
    public List`1<string> get_Identities();
    public void set_Identities(List`1<string> value);
    internal bool IsSetIdentities();
}
public class Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResponse : GetIdentityVerificationAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetIdentityVerificationAttributesResult class are now available on the GetIdentityVerificationAttributesResponse class. You should use the properties on GetIdentityVerificationAttributesResponse instead of accessing them through GetIdentityVerificationAttributesResult.")]
public GetIdentityVerificationAttributesResult GetIdentityVerificationAttributesResult { get; }
    public GetIdentityVerificationAttributesResult get_GetIdentityVerificationAttributesResult();
}
public class Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResult : AmazonWebServiceResponse {
    private Dictionary`2<string, IdentityVerificationAttributes> _verificationAttributes;
    public Dictionary`2<string, IdentityVerificationAttributes> VerificationAttributes { get; public set; }
    public Dictionary`2<string, IdentityVerificationAttributes> get_VerificationAttributes();
    public void set_VerificationAttributes(Dictionary`2<string, IdentityVerificationAttributes> value);
    internal bool IsSetVerificationAttributes();
}
public class Amazon.SimpleEmail.Model.GetSendQuotaRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.GetSendQuotaResponse : GetSendQuotaResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetSendQuotaResult class are now available on the GetSendQuotaResponse class. You should use the properties on GetSendQuotaResponse instead of accessing them through GetSendQuotaResult.")]
public GetSendQuotaResult GetSendQuotaResult { get; }
    public GetSendQuotaResult get_GetSendQuotaResult();
}
public class Amazon.SimpleEmail.Model.GetSendQuotaResult : AmazonWebServiceResponse {
    private Nullable`1<double> _max24HourSend;
    private Nullable`1<double> _maxSendRate;
    private Nullable`1<double> _sentLast24Hours;
    public double Max24HourSend { get; public set; }
    public double MaxSendRate { get; public set; }
    public double SentLast24Hours { get; public set; }
    public double get_Max24HourSend();
    public void set_Max24HourSend(double value);
    internal bool IsSetMax24HourSend();
    public double get_MaxSendRate();
    public void set_MaxSendRate(double value);
    internal bool IsSetMaxSendRate();
    public double get_SentLast24Hours();
    public void set_SentLast24Hours(double value);
    internal bool IsSetSentLast24Hours();
}
public class Amazon.SimpleEmail.Model.GetSendStatisticsRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.GetSendStatisticsResponse : GetSendStatisticsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetSendStatisticsResult class are now available on the GetSendStatisticsResponse class. You should use the properties on GetSendStatisticsResponse instead of accessing them through GetSendStatisticsResult.")]
public GetSendStatisticsResult GetSendStatisticsResult { get; }
    public GetSendStatisticsResult get_GetSendStatisticsResult();
}
public class Amazon.SimpleEmail.Model.GetSendStatisticsResult : AmazonWebServiceResponse {
    private List`1<SendDataPoint> _sendDataPoints;
    public List`1<SendDataPoint> SendDataPoints { get; public set; }
    public List`1<SendDataPoint> get_SendDataPoints();
    public void set_SendDataPoints(List`1<SendDataPoint> value);
    internal bool IsSetSendDataPoints();
}
public class Amazon.SimpleEmail.Model.IdentityDkimAttributes : object {
    private Nullable`1<bool> _dkimEnabled;
    private List`1<string> _dkimTokens;
    private VerificationStatus _dkimVerificationStatus;
    public bool DkimEnabled { get; public set; }
    public List`1<string> DkimTokens { get; public set; }
    public VerificationStatus DkimVerificationStatus { get; public set; }
    public bool get_DkimEnabled();
    public void set_DkimEnabled(bool value);
    internal bool IsSetDkimEnabled();
    public List`1<string> get_DkimTokens();
    public void set_DkimTokens(List`1<string> value);
    internal bool IsSetDkimTokens();
    public VerificationStatus get_DkimVerificationStatus();
    public void set_DkimVerificationStatus(VerificationStatus value);
    internal bool IsSetDkimVerificationStatus();
}
public class Amazon.SimpleEmail.Model.IdentityNotificationAttributes : object {
    private string _bounceTopic;
    private string _complaintTopic;
    private string _deliveryTopic;
    private Nullable`1<bool> _forwardingEnabled;
    public string BounceTopic { get; public set; }
    public string ComplaintTopic { get; public set; }
    public string DeliveryTopic { get; public set; }
    public bool ForwardingEnabled { get; public set; }
    public string get_BounceTopic();
    public void set_BounceTopic(string value);
    internal bool IsSetBounceTopic();
    public string get_ComplaintTopic();
    public void set_ComplaintTopic(string value);
    internal bool IsSetComplaintTopic();
    public string get_DeliveryTopic();
    public void set_DeliveryTopic(string value);
    internal bool IsSetDeliveryTopic();
    public bool get_ForwardingEnabled();
    public void set_ForwardingEnabled(bool value);
    internal bool IsSetForwardingEnabled();
}
public class Amazon.SimpleEmail.Model.IdentityVerificationAttributes : object {
    private VerificationStatus _verificationStatus;
    private string _verificationToken;
    public VerificationStatus VerificationStatus { get; public set; }
    public string VerificationToken { get; public set; }
    public VerificationStatus get_VerificationStatus();
    public void set_VerificationStatus(VerificationStatus value);
    internal bool IsSetVerificationStatus();
    public string get_VerificationToken();
    public void set_VerificationToken(string value);
    internal bool IsSetVerificationToken();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.AddHeaderActionUnmarshaller : object {
    private static AddHeaderActionUnmarshaller _instance;
    public static AddHeaderActionUnmarshaller Instance { get; }
    private static AddHeaderActionUnmarshaller();
    public sealed virtual AddHeaderAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AddHeaderAction Unmarshall(JsonUnmarshallerContext context);
    public static AddHeaderActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.BounceActionUnmarshaller : object {
    private static BounceActionUnmarshaller _instance;
    public static BounceActionUnmarshaller Instance { get; }
    private static BounceActionUnmarshaller();
    public sealed virtual BounceAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BounceAction Unmarshall(JsonUnmarshallerContext context);
    public static BounceActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CloneReceiptRuleSetRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CloneReceiptRuleSetResponseUnmarshaller _instance;
    public static CloneReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static CloneReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CloneReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CloneReceiptRuleSetResponseUnmarshaller GetInstance();
    public static CloneReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReceiptFilterRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateReceiptFilterResponseUnmarshaller _instance;
    public static CreateReceiptFilterResponseUnmarshaller Instance { get; }
    private static CreateReceiptFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateReceiptFilterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReceiptFilterResponseUnmarshaller GetInstance();
    public static CreateReceiptFilterResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReceiptRuleRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateReceiptRuleResponseUnmarshaller _instance;
    public static CreateReceiptRuleResponseUnmarshaller Instance { get; }
    private static CreateReceiptRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateReceiptRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReceiptRuleResponseUnmarshaller GetInstance();
    public static CreateReceiptRuleResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReceiptRuleSetRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateReceiptRuleSetResponseUnmarshaller _instance;
    public static CreateReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static CreateReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReceiptRuleSetResponseUnmarshaller GetInstance();
    public static CreateReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIdentityPolicyRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteIdentityPolicyResponseUnmarshaller _instance;
    public static DeleteIdentityPolicyResponseUnmarshaller Instance { get; }
    private static DeleteIdentityPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteIdentityPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIdentityPolicyResponseUnmarshaller GetInstance();
    public static DeleteIdentityPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIdentityRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteIdentityResponseUnmarshaller _instance;
    public static DeleteIdentityResponseUnmarshaller Instance { get; }
    private static DeleteIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteIdentityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIdentityResponseUnmarshaller GetInstance();
    public static DeleteIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReceiptFilterRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteReceiptFilterResponseUnmarshaller _instance;
    public static DeleteReceiptFilterResponseUnmarshaller Instance { get; }
    private static DeleteReceiptFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteReceiptFilterResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReceiptFilterResponseUnmarshaller GetInstance();
    public static DeleteReceiptFilterResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReceiptRuleRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteReceiptRuleResponseUnmarshaller _instance;
    public static DeleteReceiptRuleResponseUnmarshaller Instance { get; }
    private static DeleteReceiptRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteReceiptRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReceiptRuleResponseUnmarshaller GetInstance();
    public static DeleteReceiptRuleResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReceiptRuleSetRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteReceiptRuleSetResponseUnmarshaller _instance;
    public static DeleteReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static DeleteReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReceiptRuleSetResponseUnmarshaller GetInstance();
    public static DeleteReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVerifiedEmailAddressRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteVerifiedEmailAddressResponseUnmarshaller _instance;
    public static DeleteVerifiedEmailAddressResponseUnmarshaller Instance { get; }
    private static DeleteVerifiedEmailAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteVerifiedEmailAddressResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVerifiedEmailAddressResponseUnmarshaller GetInstance();
    public static DeleteVerifiedEmailAddressResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeActiveReceiptRuleSetRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeActiveReceiptRuleSetResponseUnmarshaller _instance;
    public static DescribeActiveReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static DescribeActiveReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeActiveReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeActiveReceiptRuleSetResponseUnmarshaller GetInstance();
    public static DescribeActiveReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReceiptRuleRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeReceiptRuleResponseUnmarshaller _instance;
    public static DescribeReceiptRuleResponseUnmarshaller Instance { get; }
    private static DescribeReceiptRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeReceiptRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReceiptRuleResponseUnmarshaller GetInstance();
    public static DescribeReceiptRuleResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReceiptRuleSetRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeReceiptRuleSetResponseUnmarshaller _instance;
    public static DescribeReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static DescribeReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReceiptRuleSetResponseUnmarshaller GetInstance();
    public static DescribeReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityDkimAttributesRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetIdentityDkimAttributesResponseUnmarshaller _instance;
    public static GetIdentityDkimAttributesResponseUnmarshaller Instance { get; }
    private static GetIdentityDkimAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetIdentityDkimAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityDkimAttributesResponseUnmarshaller GetInstance();
    public static GetIdentityDkimAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityNotificationAttributesRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetIdentityNotificationAttributesResponseUnmarshaller _instance;
    public static GetIdentityNotificationAttributesResponseUnmarshaller Instance { get; }
    private static GetIdentityNotificationAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetIdentityNotificationAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityNotificationAttributesResponseUnmarshaller GetInstance();
    public static GetIdentityNotificationAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityPoliciesRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetIdentityPoliciesResponseUnmarshaller _instance;
    public static GetIdentityPoliciesResponseUnmarshaller Instance { get; }
    private static GetIdentityPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetIdentityPoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityPoliciesResponseUnmarshaller GetInstance();
    public static GetIdentityPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityVerificationAttributesRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetIdentityVerificationAttributesResponseUnmarshaller _instance;
    public static GetIdentityVerificationAttributesResponseUnmarshaller Instance { get; }
    private static GetIdentityVerificationAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetIdentityVerificationAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityVerificationAttributesResponseUnmarshaller GetInstance();
    public static GetIdentityVerificationAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSendQuotaRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetSendQuotaResponseUnmarshaller _instance;
    public static GetSendQuotaResponseUnmarshaller Instance { get; }
    private static GetSendQuotaResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetSendQuotaResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSendQuotaResponseUnmarshaller GetInstance();
    public static GetSendQuotaResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSendStatisticsRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetSendStatisticsResponseUnmarshaller _instance;
    public static GetSendStatisticsResponseUnmarshaller Instance { get; }
    private static GetSendStatisticsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetSendStatisticsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSendStatisticsResponseUnmarshaller GetInstance();
    public static GetSendStatisticsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityDkimAttributesUnmarshaller : object {
    private static IdentityDkimAttributesUnmarshaller _instance;
    public static IdentityDkimAttributesUnmarshaller Instance { get; }
    private static IdentityDkimAttributesUnmarshaller();
    public sealed virtual IdentityDkimAttributes Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityDkimAttributes Unmarshall(JsonUnmarshallerContext context);
    public static IdentityDkimAttributesUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityNotificationAttributesUnmarshaller : object {
    private static IdentityNotificationAttributesUnmarshaller _instance;
    public static IdentityNotificationAttributesUnmarshaller Instance { get; }
    private static IdentityNotificationAttributesUnmarshaller();
    public sealed virtual IdentityNotificationAttributes Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityNotificationAttributes Unmarshall(JsonUnmarshallerContext context);
    public static IdentityNotificationAttributesUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityVerificationAttributesUnmarshaller : object {
    private static IdentityVerificationAttributesUnmarshaller _instance;
    public static IdentityVerificationAttributesUnmarshaller Instance { get; }
    private static IdentityVerificationAttributesUnmarshaller();
    public sealed virtual IdentityVerificationAttributes Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityVerificationAttributes Unmarshall(JsonUnmarshallerContext context);
    public static IdentityVerificationAttributesUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.LambdaActionUnmarshaller : object {
    private static LambdaActionUnmarshaller _instance;
    public static LambdaActionUnmarshaller Instance { get; }
    private static LambdaActionUnmarshaller();
    public sealed virtual LambdaAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LambdaAction Unmarshall(JsonUnmarshallerContext context);
    public static LambdaActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListIdentitiesRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListIdentitiesResponseUnmarshaller _instance;
    public static ListIdentitiesResponseUnmarshaller Instance { get; }
    private static ListIdentitiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListIdentitiesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListIdentitiesResponseUnmarshaller GetInstance();
    public static ListIdentitiesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListIdentityPoliciesRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListIdentityPoliciesResponseUnmarshaller _instance;
    public static ListIdentityPoliciesResponseUnmarshaller Instance { get; }
    private static ListIdentityPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListIdentityPoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListIdentityPoliciesResponseUnmarshaller GetInstance();
    public static ListIdentityPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListReceiptFiltersRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListReceiptFiltersResponseUnmarshaller _instance;
    public static ListReceiptFiltersResponseUnmarshaller Instance { get; }
    private static ListReceiptFiltersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListReceiptFiltersResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListReceiptFiltersResponseUnmarshaller GetInstance();
    public static ListReceiptFiltersResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListReceiptRuleSetsRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListReceiptRuleSetsResponseUnmarshaller _instance;
    public static ListReceiptRuleSetsResponseUnmarshaller Instance { get; }
    private static ListReceiptRuleSetsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListReceiptRuleSetsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListReceiptRuleSetsResponseUnmarshaller GetInstance();
    public static ListReceiptRuleSetsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVerifiedEmailAddressesRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListVerifiedEmailAddressesResponseUnmarshaller _instance;
    public static ListVerifiedEmailAddressesResponseUnmarshaller Instance { get; }
    private static ListVerifiedEmailAddressesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListVerifiedEmailAddressesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVerifiedEmailAddressesResponseUnmarshaller GetInstance();
    public static ListVerifiedEmailAddressesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutIdentityPolicyRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutIdentityPolicyResponseUnmarshaller _instance;
    public static PutIdentityPolicyResponseUnmarshaller Instance { get; }
    private static PutIdentityPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutIdentityPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutIdentityPolicyResponseUnmarshaller GetInstance();
    public static PutIdentityPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptActionUnmarshaller : object {
    private static ReceiptActionUnmarshaller _instance;
    public static ReceiptActionUnmarshaller Instance { get; }
    private static ReceiptActionUnmarshaller();
    public sealed virtual ReceiptAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReceiptAction Unmarshall(JsonUnmarshallerContext context);
    public static ReceiptActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptFilterUnmarshaller : object {
    private static ReceiptFilterUnmarshaller _instance;
    public static ReceiptFilterUnmarshaller Instance { get; }
    private static ReceiptFilterUnmarshaller();
    public sealed virtual ReceiptFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReceiptFilter Unmarshall(JsonUnmarshallerContext context);
    public static ReceiptFilterUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptIpFilterUnmarshaller : object {
    private static ReceiptIpFilterUnmarshaller _instance;
    public static ReceiptIpFilterUnmarshaller Instance { get; }
    private static ReceiptIpFilterUnmarshaller();
    public sealed virtual ReceiptIpFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReceiptIpFilter Unmarshall(JsonUnmarshallerContext context);
    public static ReceiptIpFilterUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleSetMetadataUnmarshaller : object {
    private static ReceiptRuleSetMetadataUnmarshaller _instance;
    public static ReceiptRuleSetMetadataUnmarshaller Instance { get; }
    private static ReceiptRuleSetMetadataUnmarshaller();
    public sealed virtual ReceiptRuleSetMetadata Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReceiptRuleSetMetadata Unmarshall(JsonUnmarshallerContext context);
    public static ReceiptRuleSetMetadataUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleUnmarshaller : object {
    private static ReceiptRuleUnmarshaller _instance;
    public static ReceiptRuleUnmarshaller Instance { get; }
    private static ReceiptRuleUnmarshaller();
    public sealed virtual ReceiptRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReceiptRule Unmarshall(JsonUnmarshallerContext context);
    public static ReceiptRuleUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReorderReceiptRuleSetRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ReorderReceiptRuleSetResponseUnmarshaller _instance;
    public static ReorderReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static ReorderReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ReorderReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReorderReceiptRuleSetResponseUnmarshaller GetInstance();
    public static ReorderReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.S3ActionUnmarshaller : object {
    private static S3ActionUnmarshaller _instance;
    public static S3ActionUnmarshaller Instance { get; }
    private static S3ActionUnmarshaller();
    public sealed virtual S3Action Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Action Unmarshall(JsonUnmarshallerContext context);
    public static S3ActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendBounceRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendBounceResponseUnmarshaller _instance;
    public static SendBounceResponseUnmarshaller Instance { get; }
    private static SendBounceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendBounceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendBounceResponseUnmarshaller GetInstance();
    public static SendBounceResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendDataPointUnmarshaller : object {
    private static SendDataPointUnmarshaller _instance;
    public static SendDataPointUnmarshaller Instance { get; }
    private static SendDataPointUnmarshaller();
    public sealed virtual SendDataPoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SendDataPoint Unmarshall(JsonUnmarshallerContext context);
    public static SendDataPointUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendEmailRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendEmailResponseUnmarshaller _instance;
    public static SendEmailResponseUnmarshaller Instance { get; }
    private static SendEmailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendEmailResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendEmailResponseUnmarshaller GetInstance();
    public static SendEmailResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendRawEmailRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendRawEmailResponseUnmarshaller _instance;
    public static SendRawEmailResponseUnmarshaller Instance { get; }
    private static SendRawEmailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendRawEmailResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendRawEmailResponseUnmarshaller GetInstance();
    public static SendRawEmailResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetActiveReceiptRuleSetRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetActiveReceiptRuleSetResponseUnmarshaller _instance;
    public static SetActiveReceiptRuleSetResponseUnmarshaller Instance { get; }
    private static SetActiveReceiptRuleSetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetActiveReceiptRuleSetResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetActiveReceiptRuleSetResponseUnmarshaller GetInstance();
    public static SetActiveReceiptRuleSetResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityDkimEnabledRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetIdentityDkimEnabledResponseUnmarshaller _instance;
    public static SetIdentityDkimEnabledResponseUnmarshaller Instance { get; }
    private static SetIdentityDkimEnabledResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetIdentityDkimEnabledResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityDkimEnabledResponseUnmarshaller GetInstance();
    public static SetIdentityDkimEnabledResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityFeedbackForwardingEnabledRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetIdentityFeedbackForwardingEnabledResponseUnmarshaller _instance;
    public static SetIdentityFeedbackForwardingEnabledResponseUnmarshaller Instance { get; }
    private static SetIdentityFeedbackForwardingEnabledResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetIdentityFeedbackForwardingEnabledResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityFeedbackForwardingEnabledResponseUnmarshaller GetInstance();
    public static SetIdentityFeedbackForwardingEnabledResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityNotificationTopicRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetIdentityNotificationTopicResponseUnmarshaller _instance;
    public static SetIdentityNotificationTopicResponseUnmarshaller Instance { get; }
    private static SetIdentityNotificationTopicResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetIdentityNotificationTopicResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityNotificationTopicResponseUnmarshaller GetInstance();
    public static SetIdentityNotificationTopicResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetReceiptRulePositionRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetReceiptRulePositionResponseUnmarshaller _instance;
    public static SetReceiptRulePositionResponseUnmarshaller Instance { get; }
    private static SetReceiptRulePositionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetReceiptRulePositionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetReceiptRulePositionResponseUnmarshaller GetInstance();
    public static SetReceiptRulePositionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SNSActionUnmarshaller : object {
    private static SNSActionUnmarshaller _instance;
    public static SNSActionUnmarshaller Instance { get; }
    private static SNSActionUnmarshaller();
    public sealed virtual SNSAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SNSAction Unmarshall(JsonUnmarshallerContext context);
    public static SNSActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.StopActionUnmarshaller : object {
    private static StopActionUnmarshaller _instance;
    public static StopActionUnmarshaller Instance { get; }
    private static StopActionUnmarshaller();
    public sealed virtual StopAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StopAction Unmarshall(JsonUnmarshallerContext context);
    public static StopActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateReceiptRuleRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateReceiptRuleResponseUnmarshaller _instance;
    public static UpdateReceiptRuleResponseUnmarshaller Instance { get; }
    private static UpdateReceiptRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateReceiptRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateReceiptRuleResponseUnmarshaller GetInstance();
    public static UpdateReceiptRuleResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(VerifyDomainDkimRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimResponseUnmarshaller : XmlResponseUnmarshaller {
    private static VerifyDomainDkimResponseUnmarshaller _instance;
    public static VerifyDomainDkimResponseUnmarshaller Instance { get; }
    private static VerifyDomainDkimResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, VerifyDomainDkimResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static VerifyDomainDkimResponseUnmarshaller GetInstance();
    public static VerifyDomainDkimResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(VerifyDomainIdentityRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static VerifyDomainIdentityResponseUnmarshaller _instance;
    public static VerifyDomainIdentityResponseUnmarshaller Instance { get; }
    private static VerifyDomainIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, VerifyDomainIdentityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static VerifyDomainIdentityResponseUnmarshaller GetInstance();
    public static VerifyDomainIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(VerifyEmailAddressRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressResponseUnmarshaller : XmlResponseUnmarshaller {
    private static VerifyEmailAddressResponseUnmarshaller _instance;
    public static VerifyEmailAddressResponseUnmarshaller Instance { get; }
    private static VerifyEmailAddressResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, VerifyEmailAddressResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static VerifyEmailAddressResponseUnmarshaller GetInstance();
    public static VerifyEmailAddressResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(VerifyEmailIdentityRequest publicRequest);
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static VerifyEmailIdentityResponseUnmarshaller _instance;
    public static VerifyEmailIdentityResponseUnmarshaller Instance { get; }
    private static VerifyEmailIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, VerifyEmailIdentityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static VerifyEmailIdentityResponseUnmarshaller GetInstance();
    public static VerifyEmailIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.Internal.MarshallTransformations.WorkmailActionUnmarshaller : object {
    private static WorkmailActionUnmarshaller _instance;
    public static WorkmailActionUnmarshaller Instance { get; }
    private static WorkmailActionUnmarshaller();
    public sealed virtual WorkmailAction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual WorkmailAction Unmarshall(JsonUnmarshallerContext context);
    public static WorkmailActionUnmarshaller get_Instance();
}
public class Amazon.SimpleEmail.Model.InvalidLambdaFunctionException : AmazonSimpleEmailServiceException {
    public InvalidLambdaFunctionException(string message);
    public InvalidLambdaFunctionException(string message, Exception innerException);
    public InvalidLambdaFunctionException(Exception innerException);
    public InvalidLambdaFunctionException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidLambdaFunctionException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.InvalidPolicyException : AmazonSimpleEmailServiceException {
    public InvalidPolicyException(string message);
    public InvalidPolicyException(string message, Exception innerException);
    public InvalidPolicyException(Exception innerException);
    public InvalidPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidPolicyException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.InvalidS3ConfigurationException : AmazonSimpleEmailServiceException {
    public InvalidS3ConfigurationException(string message);
    public InvalidS3ConfigurationException(string message, Exception innerException);
    public InvalidS3ConfigurationException(Exception innerException);
    public InvalidS3ConfigurationException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidS3ConfigurationException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.InvalidSnsTopicException : AmazonSimpleEmailServiceException {
    public InvalidSnsTopicException(string message);
    public InvalidSnsTopicException(string message, Exception innerException);
    public InvalidSnsTopicException(Exception innerException);
    public InvalidSnsTopicException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidSnsTopicException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.LambdaAction : object {
    private string _functionArn;
    private InvocationType _invocationType;
    private string _topicArn;
    public string FunctionArn { get; public set; }
    public InvocationType InvocationType { get; public set; }
    public string TopicArn { get; public set; }
    public string get_FunctionArn();
    public void set_FunctionArn(string value);
    internal bool IsSetFunctionArn();
    public InvocationType get_InvocationType();
    public void set_InvocationType(InvocationType value);
    internal bool IsSetInvocationType();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.Model.LimitExceededException : AmazonSimpleEmailServiceException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.ListIdentitiesRequest : AmazonSimpleEmailServiceRequest {
    private IdentityType _identityType;
    private Nullable`1<int> _maxItems;
    private string _nextToken;
    public IdentityType IdentityType { get; public set; }
    public int MaxItems { get; public set; }
    public string NextToken { get; public set; }
    public IdentityType get_IdentityType();
    public void set_IdentityType(IdentityType value);
    internal bool IsSetIdentityType();
    public int get_MaxItems();
    public void set_MaxItems(int value);
    internal bool IsSetMaxItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleEmail.Model.ListIdentitiesResponse : ListIdentitiesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListIdentitiesResult class are now available on the ListIdentitiesResponse class. You should use the properties on ListIdentitiesResponse instead of accessing them through ListIdentitiesResult.")]
public ListIdentitiesResult ListIdentitiesResult { get; }
    public ListIdentitiesResult get_ListIdentitiesResult();
}
public class Amazon.SimpleEmail.Model.ListIdentitiesResult : AmazonWebServiceResponse {
    private List`1<string> _identities;
    private string _nextToken;
    public List`1<string> Identities { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_Identities();
    public void set_Identities(List`1<string> value);
    internal bool IsSetIdentities();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleEmail.Model.ListIdentityPoliciesRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    public string Identity { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
}
public class Amazon.SimpleEmail.Model.ListIdentityPoliciesResponse : ListIdentityPoliciesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListIdentityPoliciesResult class are now available on the ListIdentityPoliciesResponse class. You should use the properties on ListIdentityPoliciesResponse instead of accessing them through ListIdentityPoliciesResult.")]
public ListIdentityPoliciesResult ListIdentityPoliciesResult { get; }
    public ListIdentityPoliciesResult get_ListIdentityPoliciesResult();
}
public class Amazon.SimpleEmail.Model.ListIdentityPoliciesResult : AmazonWebServiceResponse {
    private List`1<string> _policyNames;
    public List`1<string> PolicyNames { get; public set; }
    public List`1<string> get_PolicyNames();
    public void set_PolicyNames(List`1<string> value);
    internal bool IsSetPolicyNames();
}
public class Amazon.SimpleEmail.Model.ListReceiptFiltersRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.ListReceiptFiltersResponse : ListReceiptFiltersResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListReceiptFiltersResult class are now available on the ListReceiptFiltersResponse class. You should use the properties on ListReceiptFiltersResponse instead of accessing them through ListReceiptFiltersResult.")]
public ListReceiptFiltersResult ListReceiptFiltersResult { get; }
    public ListReceiptFiltersResult get_ListReceiptFiltersResult();
}
public class Amazon.SimpleEmail.Model.ListReceiptFiltersResult : AmazonWebServiceResponse {
    private List`1<ReceiptFilter> _filters;
    public List`1<ReceiptFilter> Filters { get; public set; }
    public List`1<ReceiptFilter> get_Filters();
    public void set_Filters(List`1<ReceiptFilter> value);
    internal bool IsSetFilters();
}
public class Amazon.SimpleEmail.Model.ListReceiptRuleSetsRequest : AmazonSimpleEmailServiceRequest {
    private string _nextToken;
    public string NextToken { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleEmail.Model.ListReceiptRuleSetsResponse : ListReceiptRuleSetsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListReceiptRuleSetsResult class are now available on the ListReceiptRuleSetsResponse class. You should use the properties on ListReceiptRuleSetsResponse instead of accessing them through ListReceiptRuleSetsResult.")]
public ListReceiptRuleSetsResult ListReceiptRuleSetsResult { get; }
    public ListReceiptRuleSetsResult get_ListReceiptRuleSetsResult();
}
public class Amazon.SimpleEmail.Model.ListReceiptRuleSetsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ReceiptRuleSetMetadata> _ruleSets;
    public string NextToken { get; public set; }
    public List`1<ReceiptRuleSetMetadata> RuleSets { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ReceiptRuleSetMetadata> get_RuleSets();
    public void set_RuleSets(List`1<ReceiptRuleSetMetadata> value);
    internal bool IsSetRuleSets();
}
public class Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest : AmazonSimpleEmailServiceRequest {
}
public class Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResponse : ListVerifiedEmailAddressesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListVerifiedEmailAddressesResult class are now available on the ListVerifiedEmailAddressesResponse class. You should use the properties on ListVerifiedEmailAddressesResponse instead of accessing them through ListVerifiedEmailAddressesResult.")]
public ListVerifiedEmailAddressesResult ListVerifiedEmailAddressesResult { get; }
    public ListVerifiedEmailAddressesResult get_ListVerifiedEmailAddressesResult();
}
public class Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResult : AmazonWebServiceResponse {
    private List`1<string> _verifiedEmailAddresses;
    public List`1<string> VerifiedEmailAddresses { get; public set; }
    public List`1<string> get_VerifiedEmailAddresses();
    public void set_VerifiedEmailAddresses(List`1<string> value);
    internal bool IsSetVerifiedEmailAddresses();
}
public class Amazon.SimpleEmail.Model.Message : object {
    private Body _body;
    private Content _subject;
    public Body Body { get; public set; }
    public Content Subject { get; public set; }
    public Message(Content subject, Body body);
    public Body get_Body();
    public void set_Body(Body value);
    internal bool IsSetBody();
    public Content get_Subject();
    public void set_Subject(Content value);
    internal bool IsSetSubject();
}
public class Amazon.SimpleEmail.Model.MessageDsn : object {
    private Nullable`1<DateTime> _arrivalDate;
    private List`1<ExtensionField> _extensionFields;
    private string _reportingMta;
    public DateTime ArrivalDate { get; public set; }
    public List`1<ExtensionField> ExtensionFields { get; public set; }
    public string ReportingMta { get; public set; }
    public DateTime get_ArrivalDate();
    public void set_ArrivalDate(DateTime value);
    internal bool IsSetArrivalDate();
    public List`1<ExtensionField> get_ExtensionFields();
    public void set_ExtensionFields(List`1<ExtensionField> value);
    internal bool IsSetExtensionFields();
    public string get_ReportingMta();
    public void set_ReportingMta(string value);
    internal bool IsSetReportingMta();
}
public class Amazon.SimpleEmail.Model.MessageRejectedException : AmazonSimpleEmailServiceException {
    public MessageRejectedException(string message);
    public MessageRejectedException(string message, Exception innerException);
    public MessageRejectedException(Exception innerException);
    public MessageRejectedException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public MessageRejectedException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.PutIdentityPolicyRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    private string _policy;
    private string _policyName;
    public string Identity { get; public set; }
    public string Policy { get; public set; }
    public string PolicyName { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.SimpleEmail.Model.PutIdentityPolicyResponse : PutIdentityPolicyResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the PutIdentityPolicyResult class are now available on the PutIdentityPolicyResponse class. You should use the properties on PutIdentityPolicyResponse instead of accessing them through PutIdentityPolicyResult.")]
public PutIdentityPolicyResult PutIdentityPolicyResult { get; }
    public PutIdentityPolicyResult get_PutIdentityPolicyResult();
}
public class Amazon.SimpleEmail.Model.PutIdentityPolicyResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.RawMessage : object {
    private MemoryStream _data;
    public MemoryStream Data { get; public set; }
    public RawMessage(MemoryStream data);
    public MemoryStream get_Data();
    public void set_Data(MemoryStream value);
    internal bool IsSetData();
}
public class Amazon.SimpleEmail.Model.ReceiptAction : object {
    private AddHeaderAction _addHeaderAction;
    private BounceAction _bounceAction;
    private LambdaAction _lambdaAction;
    private S3Action _s3Action;
    private SNSAction _snsAction;
    private StopAction _stopAction;
    private WorkmailAction _workmailAction;
    public AddHeaderAction AddHeaderAction { get; public set; }
    public BounceAction BounceAction { get; public set; }
    public LambdaAction LambdaAction { get; public set; }
    public S3Action S3Action { get; public set; }
    public SNSAction SNSAction { get; public set; }
    public StopAction StopAction { get; public set; }
    public WorkmailAction WorkmailAction { get; public set; }
    public AddHeaderAction get_AddHeaderAction();
    public void set_AddHeaderAction(AddHeaderAction value);
    internal bool IsSetAddHeaderAction();
    public BounceAction get_BounceAction();
    public void set_BounceAction(BounceAction value);
    internal bool IsSetBounceAction();
    public LambdaAction get_LambdaAction();
    public void set_LambdaAction(LambdaAction value);
    internal bool IsSetLambdaAction();
    public S3Action get_S3Action();
    public void set_S3Action(S3Action value);
    internal bool IsSetS3Action();
    public SNSAction get_SNSAction();
    public void set_SNSAction(SNSAction value);
    internal bool IsSetSNSAction();
    public StopAction get_StopAction();
    public void set_StopAction(StopAction value);
    internal bool IsSetStopAction();
    public WorkmailAction get_WorkmailAction();
    public void set_WorkmailAction(WorkmailAction value);
    internal bool IsSetWorkmailAction();
}
public class Amazon.SimpleEmail.Model.ReceiptFilter : object {
    private ReceiptIpFilter _ipFilter;
    private string _name;
    public ReceiptIpFilter IpFilter { get; public set; }
    public string Name { get; public set; }
    public ReceiptIpFilter get_IpFilter();
    public void set_IpFilter(ReceiptIpFilter value);
    internal bool IsSetIpFilter();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleEmail.Model.ReceiptIpFilter : object {
    private string _cidr;
    private ReceiptFilterPolicy _policy;
    public string Cidr { get; public set; }
    public ReceiptFilterPolicy Policy { get; public set; }
    public string get_Cidr();
    public void set_Cidr(string value);
    internal bool IsSetCidr();
    public ReceiptFilterPolicy get_Policy();
    public void set_Policy(ReceiptFilterPolicy value);
    internal bool IsSetPolicy();
}
public class Amazon.SimpleEmail.Model.ReceiptRule : object {
    private List`1<ReceiptAction> _actions;
    private Nullable`1<bool> _enabled;
    private string _name;
    private List`1<string> _recipients;
    private Nullable`1<bool> _scanEnabled;
    private TlsPolicy _tlsPolicy;
    public List`1<ReceiptAction> Actions { get; public set; }
    public bool Enabled { get; public set; }
    public string Name { get; public set; }
    public List`1<string> Recipients { get; public set; }
    public bool ScanEnabled { get; public set; }
    public TlsPolicy TlsPolicy { get; public set; }
    public List`1<ReceiptAction> get_Actions();
    public void set_Actions(List`1<ReceiptAction> value);
    internal bool IsSetActions();
    public bool get_Enabled();
    public void set_Enabled(bool value);
    internal bool IsSetEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Recipients();
    public void set_Recipients(List`1<string> value);
    internal bool IsSetRecipients();
    public bool get_ScanEnabled();
    public void set_ScanEnabled(bool value);
    internal bool IsSetScanEnabled();
    public TlsPolicy get_TlsPolicy();
    public void set_TlsPolicy(TlsPolicy value);
    internal bool IsSetTlsPolicy();
}
public class Amazon.SimpleEmail.Model.ReceiptRuleSetMetadata : object {
    private Nullable`1<DateTime> _createdTimestamp;
    private string _name;
    public DateTime CreatedTimestamp { get; public set; }
    public string Name { get; public set; }
    public DateTime get_CreatedTimestamp();
    public void set_CreatedTimestamp(DateTime value);
    internal bool IsSetCreatedTimestamp();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleEmail.Model.RecipientDsnFields : object {
    private DsnAction _action;
    private string _diagnosticCode;
    private List`1<ExtensionField> _extensionFields;
    private string _finalRecipient;
    private Nullable`1<DateTime> _lastAttemptDate;
    private string _remoteMta;
    private string _status;
    public DsnAction Action { get; public set; }
    public string DiagnosticCode { get; public set; }
    public List`1<ExtensionField> ExtensionFields { get; public set; }
    public string FinalRecipient { get; public set; }
    public DateTime LastAttemptDate { get; public set; }
    public string RemoteMta { get; public set; }
    public string Status { get; public set; }
    public DsnAction get_Action();
    public void set_Action(DsnAction value);
    internal bool IsSetAction();
    public string get_DiagnosticCode();
    public void set_DiagnosticCode(string value);
    internal bool IsSetDiagnosticCode();
    public List`1<ExtensionField> get_ExtensionFields();
    public void set_ExtensionFields(List`1<ExtensionField> value);
    internal bool IsSetExtensionFields();
    public string get_FinalRecipient();
    public void set_FinalRecipient(string value);
    internal bool IsSetFinalRecipient();
    public DateTime get_LastAttemptDate();
    public void set_LastAttemptDate(DateTime value);
    internal bool IsSetLastAttemptDate();
    public string get_RemoteMta();
    public void set_RemoteMta(string value);
    internal bool IsSetRemoteMta();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.SimpleEmail.Model.ReorderReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _ruleNames;
    private string _ruleSetName;
    public List`1<string> RuleNames { get; public set; }
    public string RuleSetName { get; public set; }
    public List`1<string> get_RuleNames();
    public void set_RuleNames(List`1<string> value);
    internal bool IsSetRuleNames();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.ReorderReceiptRuleSetResponse : ReorderReceiptRuleSetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ReorderReceiptRuleSetResult class are now available on the ReorderReceiptRuleSetResponse class. You should use the properties on ReorderReceiptRuleSetResponse instead of accessing them through ReorderReceiptRuleSetResult.")]
public ReorderReceiptRuleSetResult ReorderReceiptRuleSetResult { get; }
    public ReorderReceiptRuleSetResult get_ReorderReceiptRuleSetResult();
}
public class Amazon.SimpleEmail.Model.ReorderReceiptRuleSetResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.RuleDoesNotExistException : AmazonSimpleEmailServiceException {
    public RuleDoesNotExistException(string message);
    public RuleDoesNotExistException(string message, Exception innerException);
    public RuleDoesNotExistException(Exception innerException);
    public RuleDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public RuleDoesNotExistException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.RuleSetDoesNotExistException : AmazonSimpleEmailServiceException {
    public RuleSetDoesNotExistException(string message);
    public RuleSetDoesNotExistException(string message, Exception innerException);
    public RuleSetDoesNotExistException(Exception innerException);
    public RuleSetDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public RuleSetDoesNotExistException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleEmail.Model.S3Action : object {
    private string _bucketName;
    private string _kmsKeyArn;
    private string _objectKeyPrefix;
    private string _topicArn;
    public string BucketName { get; public set; }
    public string KmsKeyArn { get; public set; }
    public string ObjectKeyPrefix { get; public set; }
    public string TopicArn { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_KmsKeyArn();
    public void set_KmsKeyArn(string value);
    internal bool IsSetKmsKeyArn();
    public string get_ObjectKeyPrefix();
    public void set_ObjectKeyPrefix(string value);
    internal bool IsSetObjectKeyPrefix();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.Model.SendBounceRequest : AmazonSimpleEmailServiceRequest {
    private List`1<BouncedRecipientInfo> _bouncedRecipientInfoList;
    private string _bounceSender;
    private string _bounceSenderArn;
    private string _explanation;
    private MessageDsn _messageDsn;
    private string _originalMessageId;
    public List`1<BouncedRecipientInfo> BouncedRecipientInfoList { get; public set; }
    public string BounceSender { get; public set; }
    public string BounceSenderArn { get; public set; }
    public string Explanation { get; public set; }
    public MessageDsn MessageDsn { get; public set; }
    public string OriginalMessageId { get; public set; }
    public List`1<BouncedRecipientInfo> get_BouncedRecipientInfoList();
    public void set_BouncedRecipientInfoList(List`1<BouncedRecipientInfo> value);
    internal bool IsSetBouncedRecipientInfoList();
    public string get_BounceSender();
    public void set_BounceSender(string value);
    internal bool IsSetBounceSender();
    public string get_BounceSenderArn();
    public void set_BounceSenderArn(string value);
    internal bool IsSetBounceSenderArn();
    public string get_Explanation();
    public void set_Explanation(string value);
    internal bool IsSetExplanation();
    public MessageDsn get_MessageDsn();
    public void set_MessageDsn(MessageDsn value);
    internal bool IsSetMessageDsn();
    public string get_OriginalMessageId();
    public void set_OriginalMessageId(string value);
    internal bool IsSetOriginalMessageId();
}
public class Amazon.SimpleEmail.Model.SendBounceResponse : SendBounceResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SendBounceResult class are now available on the SendBounceResponse class. You should use the properties on SendBounceResponse instead of accessing them through SendBounceResult.")]
public SendBounceResult SendBounceResult { get; }
    public SendBounceResult get_SendBounceResult();
}
public class Amazon.SimpleEmail.Model.SendBounceResult : AmazonWebServiceResponse {
    private string _messageId;
    public string MessageId { get; public set; }
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SimpleEmail.Model.SendDataPoint : object {
    private Nullable`1<long> _bounces;
    private Nullable`1<long> _complaints;
    private Nullable`1<long> _deliveryAttempts;
    private Nullable`1<long> _rejects;
    private Nullable`1<DateTime> _timestamp;
    public long Bounces { get; public set; }
    public long Complaints { get; public set; }
    public long DeliveryAttempts { get; public set; }
    public long Rejects { get; public set; }
    public DateTime Timestamp { get; public set; }
    public long get_Bounces();
    public void set_Bounces(long value);
    internal bool IsSetBounces();
    public long get_Complaints();
    public void set_Complaints(long value);
    internal bool IsSetComplaints();
    public long get_DeliveryAttempts();
    public void set_DeliveryAttempts(long value);
    internal bool IsSetDeliveryAttempts();
    public long get_Rejects();
    public void set_Rejects(long value);
    internal bool IsSetRejects();
    public DateTime get_Timestamp();
    public void set_Timestamp(DateTime value);
    internal bool IsSetTimestamp();
}
public class Amazon.SimpleEmail.Model.SendEmailRequest : AmazonSimpleEmailServiceRequest {
    private Destination _destination;
    private Message _message;
    private List`1<string> _replyToAddresses;
    private string _returnPath;
    private string _returnPathArn;
    private string _source;
    private string _sourceArn;
    public Destination Destination { get; public set; }
    public Message Message { get; public set; }
    public List`1<string> ReplyToAddresses { get; public set; }
    public string ReturnPath { get; public set; }
    public string ReturnPathArn { get; public set; }
    public string Source { get; public set; }
    public string SourceArn { get; public set; }
    public SendEmailRequest(string source, Destination destination, Message message);
    public Destination get_Destination();
    public void set_Destination(Destination value);
    internal bool IsSetDestination();
    public Message get_Message();
    public void set_Message(Message value);
    internal bool IsSetMessage();
    public List`1<string> get_ReplyToAddresses();
    public void set_ReplyToAddresses(List`1<string> value);
    internal bool IsSetReplyToAddresses();
    public string get_ReturnPath();
    public void set_ReturnPath(string value);
    internal bool IsSetReturnPath();
    public string get_ReturnPathArn();
    public void set_ReturnPathArn(string value);
    internal bool IsSetReturnPathArn();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
}
public class Amazon.SimpleEmail.Model.SendEmailResponse : SendEmailResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SendEmailResult class are now available on the SendEmailResponse class. You should use the properties on SendEmailResponse instead of accessing them through SendEmailResult.")]
public SendEmailResult SendEmailResult { get; }
    public SendEmailResult get_SendEmailResult();
}
public class Amazon.SimpleEmail.Model.SendEmailResult : AmazonWebServiceResponse {
    private string _messageId;
    public string MessageId { get; public set; }
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SimpleEmail.Model.SendRawEmailRequest : AmazonSimpleEmailServiceRequest {
    private List`1<string> _destinations;
    private string _fromArn;
    private RawMessage _rawMessage;
    private string _returnPathArn;
    private string _source;
    private string _sourceArn;
    public List`1<string> Destinations { get; public set; }
    public string FromArn { get; public set; }
    public RawMessage RawMessage { get; public set; }
    public string ReturnPathArn { get; public set; }
    public string Source { get; public set; }
    public string SourceArn { get; public set; }
    public SendRawEmailRequest(RawMessage rawMessage);
    public List`1<string> get_Destinations();
    public void set_Destinations(List`1<string> value);
    internal bool IsSetDestinations();
    public string get_FromArn();
    public void set_FromArn(string value);
    internal bool IsSetFromArn();
    public RawMessage get_RawMessage();
    public void set_RawMessage(RawMessage value);
    internal bool IsSetRawMessage();
    public string get_ReturnPathArn();
    public void set_ReturnPathArn(string value);
    internal bool IsSetReturnPathArn();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
}
public class Amazon.SimpleEmail.Model.SendRawEmailResponse : SendRawEmailResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SendRawEmailResult class are now available on the SendRawEmailResponse class. You should use the properties on SendRawEmailResponse instead of accessing them through SendRawEmailResult.")]
public SendRawEmailResult SendRawEmailResult { get; }
    public SendRawEmailResult get_SendRawEmailResult();
}
public class Amazon.SimpleEmail.Model.SendRawEmailResult : AmazonWebServiceResponse {
    private string _messageId;
    public string MessageId { get; public set; }
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetRequest : AmazonSimpleEmailServiceRequest {
    private string _ruleSetName;
    public string RuleSetName { get; public set; }
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetResponse : SetActiveReceiptRuleSetResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SetActiveReceiptRuleSetResult class are now available on the SetActiveReceiptRuleSetResponse class. You should use the properties on SetActiveReceiptRuleSetResponse instead of accessing them through SetActiveReceiptRuleSetResult.")]
public SetActiveReceiptRuleSetResult SetActiveReceiptRuleSetResult { get; }
    public SetActiveReceiptRuleSetResult get_SetActiveReceiptRuleSetResult();
}
public class Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest : AmazonSimpleEmailServiceRequest {
    private Nullable`1<bool> _dkimEnabled;
    private string _identity;
    public bool DkimEnabled { get; public set; }
    public string Identity { get; public set; }
    public bool get_DkimEnabled();
    public void set_DkimEnabled(bool value);
    internal bool IsSetDkimEnabled();
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
}
public class Amazon.SimpleEmail.Model.SetIdentityDkimEnabledResponse : SetIdentityDkimEnabledResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SetIdentityDkimEnabledResult class are now available on the SetIdentityDkimEnabledResponse class. You should use the properties on SetIdentityDkimEnabledResponse instead of accessing them through SetIdentityDkimEnabledResult.")]
public SetIdentityDkimEnabledResult SetIdentityDkimEnabledResult { get; }
    public SetIdentityDkimEnabledResult get_SetIdentityDkimEnabledResult();
}
public class Amazon.SimpleEmail.Model.SetIdentityDkimEnabledResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest : AmazonSimpleEmailServiceRequest {
    private Nullable`1<bool> _forwardingEnabled;
    private string _identity;
    public bool ForwardingEnabled { get; public set; }
    public string Identity { get; public set; }
    public bool get_ForwardingEnabled();
    public void set_ForwardingEnabled(bool value);
    internal bool IsSetForwardingEnabled();
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
}
public class Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledResponse : SetIdentityFeedbackForwardingEnabledResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SetIdentityFeedbackForwardingEnabledResult class are now available on the SetIdentityFeedbackForwardingEnabledResponse class. You should use the properties on SetIdentityFeedbackForwardingEnabledResponse instead of accessing them through SetIdentityFeedbackForwardingEnabledResult.")]
public SetIdentityFeedbackForwardingEnabledResult SetIdentityFeedbackForwardingEnabledResult { get; }
    public SetIdentityFeedbackForwardingEnabledResult get_SetIdentityFeedbackForwardingEnabledResult();
}
public class Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest : AmazonSimpleEmailServiceRequest {
    private string _identity;
    private NotificationType _notificationType;
    private string _snsTopic;
    public string Identity { get; public set; }
    public NotificationType NotificationType { get; public set; }
    public string SnsTopic { get; public set; }
    public string get_Identity();
    public void set_Identity(string value);
    internal bool IsSetIdentity();
    public NotificationType get_NotificationType();
    public void set_NotificationType(NotificationType value);
    internal bool IsSetNotificationType();
    public string get_SnsTopic();
    public void set_SnsTopic(string value);
    internal bool IsSetSnsTopic();
}
public class Amazon.SimpleEmail.Model.SetIdentityNotificationTopicResponse : SetIdentityNotificationTopicResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SetIdentityNotificationTopicResult class are now available on the SetIdentityNotificationTopicResponse class. You should use the properties on SetIdentityNotificationTopicResponse instead of accessing them through SetIdentityNotificationTopicResult.")]
public SetIdentityNotificationTopicResult SetIdentityNotificationTopicResult { get; }
    public SetIdentityNotificationTopicResult get_SetIdentityNotificationTopicResult();
}
public class Amazon.SimpleEmail.Model.SetIdentityNotificationTopicResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest : AmazonSimpleEmailServiceRequest {
    private string _after;
    private string _ruleName;
    private string _ruleSetName;
    public string After { get; public set; }
    public string RuleName { get; public set; }
    public string RuleSetName { get; public set; }
    public string get_After();
    public void set_After(string value);
    internal bool IsSetAfter();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.SetReceiptRulePositionResponse : SetReceiptRulePositionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SetReceiptRulePositionResult class are now available on the SetReceiptRulePositionResponse class. You should use the properties on SetReceiptRulePositionResponse instead of accessing them through SetReceiptRulePositionResult.")]
public SetReceiptRulePositionResult SetReceiptRulePositionResult { get; }
    public SetReceiptRulePositionResult get_SetReceiptRulePositionResult();
}
public class Amazon.SimpleEmail.Model.SetReceiptRulePositionResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.SNSAction : object {
    private SNSActionEncoding _encoding;
    private string _topicArn;
    public SNSActionEncoding Encoding { get; public set; }
    public string TopicArn { get; public set; }
    public SNSActionEncoding get_Encoding();
    public void set_Encoding(SNSActionEncoding value);
    internal bool IsSetEncoding();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.Model.StopAction : object {
    private StopScope _scope;
    private string _topicArn;
    public StopScope Scope { get; public set; }
    public string TopicArn { get; public set; }
    public StopScope get_Scope();
    public void set_Scope(StopScope value);
    internal bool IsSetScope();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.Model.UpdateReceiptRuleRequest : AmazonSimpleEmailServiceRequest {
    private ReceiptRule _rule;
    private string _ruleSetName;
    public ReceiptRule Rule { get; public set; }
    public string RuleSetName { get; public set; }
    public ReceiptRule get_Rule();
    public void set_Rule(ReceiptRule value);
    internal bool IsSetRule();
    public string get_RuleSetName();
    public void set_RuleSetName(string value);
    internal bool IsSetRuleSetName();
}
public class Amazon.SimpleEmail.Model.UpdateReceiptRuleResponse : UpdateReceiptRuleResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the UpdateReceiptRuleResult class are now available on the UpdateReceiptRuleResponse class. You should use the properties on UpdateReceiptRuleResponse instead of accessing them through UpdateReceiptRuleResult.")]
public UpdateReceiptRuleResult UpdateReceiptRuleResult { get; }
    public UpdateReceiptRuleResult get_UpdateReceiptRuleResult();
}
public class Amazon.SimpleEmail.Model.UpdateReceiptRuleResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.VerifyDomainDkimRequest : AmazonSimpleEmailServiceRequest {
    private string _domain;
    public string Domain { get; public set; }
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
}
public class Amazon.SimpleEmail.Model.VerifyDomainDkimResponse : VerifyDomainDkimResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the VerifyDomainDkimResult class are now available on the VerifyDomainDkimResponse class. You should use the properties on VerifyDomainDkimResponse instead of accessing them through VerifyDomainDkimResult.")]
public VerifyDomainDkimResult VerifyDomainDkimResult { get; }
    public VerifyDomainDkimResult get_VerifyDomainDkimResult();
}
public class Amazon.SimpleEmail.Model.VerifyDomainDkimResult : AmazonWebServiceResponse {
    private List`1<string> _dkimTokens;
    public List`1<string> DkimTokens { get; public set; }
    public List`1<string> get_DkimTokens();
    public void set_DkimTokens(List`1<string> value);
    internal bool IsSetDkimTokens();
}
public class Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest : AmazonSimpleEmailServiceRequest {
    private string _domain;
    public string Domain { get; public set; }
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
}
public class Amazon.SimpleEmail.Model.VerifyDomainIdentityResponse : VerifyDomainIdentityResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the VerifyDomainIdentityResult class are now available on the VerifyDomainIdentityResponse class. You should use the properties on VerifyDomainIdentityResponse instead of accessing them through VerifyDomainIdentityResult.")]
public VerifyDomainIdentityResult VerifyDomainIdentityResult { get; }
    public VerifyDomainIdentityResult get_VerifyDomainIdentityResult();
}
public class Amazon.SimpleEmail.Model.VerifyDomainIdentityResult : AmazonWebServiceResponse {
    private string _verificationToken;
    public string VerificationToken { get; public set; }
    public string get_VerificationToken();
    public void set_VerificationToken(string value);
    internal bool IsSetVerificationToken();
}
public class Amazon.SimpleEmail.Model.VerifyEmailAddressRequest : AmazonSimpleEmailServiceRequest {
    private string _emailAddress;
    public string EmailAddress { get; public set; }
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
}
public class Amazon.SimpleEmail.Model.VerifyEmailAddressResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest : AmazonSimpleEmailServiceRequest {
    private string _emailAddress;
    public string EmailAddress { get; public set; }
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
}
public class Amazon.SimpleEmail.Model.VerifyEmailIdentityResponse : VerifyEmailIdentityResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the VerifyEmailIdentityResult class are now available on the VerifyEmailIdentityResponse class. You should use the properties on VerifyEmailIdentityResponse instead of accessing them through VerifyEmailIdentityResult.")]
public VerifyEmailIdentityResult VerifyEmailIdentityResult { get; }
    public VerifyEmailIdentityResult get_VerifyEmailIdentityResult();
}
public class Amazon.SimpleEmail.Model.VerifyEmailIdentityResult : AmazonWebServiceResponse {
}
public class Amazon.SimpleEmail.Model.WorkmailAction : object {
    private string _organizationArn;
    private string _topicArn;
    public string OrganizationArn { get; public set; }
    public string TopicArn { get; public set; }
    public string get_OrganizationArn();
    public void set_OrganizationArn(string value);
    internal bool IsSetOrganizationArn();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleEmail.NotificationType : ConstantClass {
    public static NotificationType Bounce;
    public static NotificationType Complaint;
    public static NotificationType Delivery;
    public NotificationType(string value);
    private static NotificationType();
    public static NotificationType FindValue(string value);
    public static NotificationType op_Implicit(string value);
}
public class Amazon.SimpleEmail.ReceiptFilterPolicy : ConstantClass {
    public static ReceiptFilterPolicy Allow;
    public static ReceiptFilterPolicy Block;
    public ReceiptFilterPolicy(string value);
    private static ReceiptFilterPolicy();
    public static ReceiptFilterPolicy FindValue(string value);
    public static ReceiptFilterPolicy op_Implicit(string value);
}
public class Amazon.SimpleEmail.SNSActionEncoding : ConstantClass {
    public static SNSActionEncoding Base64;
    public static SNSActionEncoding UTF8;
    public SNSActionEncoding(string value);
    private static SNSActionEncoding();
    public static SNSActionEncoding FindValue(string value);
    public static SNSActionEncoding op_Implicit(string value);
}
public class Amazon.SimpleEmail.StopScope : ConstantClass {
    public static StopScope RuleSet;
    public StopScope(string value);
    private static StopScope();
    public static StopScope FindValue(string value);
    public static StopScope op_Implicit(string value);
}
public class Amazon.SimpleEmail.TlsPolicy : ConstantClass {
    public static TlsPolicy Optional;
    public static TlsPolicy Require;
    public TlsPolicy(string value);
    private static TlsPolicy();
    public static TlsPolicy FindValue(string value);
    public static TlsPolicy op_Implicit(string value);
}
public class Amazon.SimpleEmail.VerificationStatus : ConstantClass {
    public static VerificationStatus Failed;
    public static VerificationStatus NotStarted;
    public static VerificationStatus Pending;
    public static VerificationStatus Success;
    public static VerificationStatus TemporaryFailure;
    public VerificationStatus(string value);
    private static VerificationStatus();
    public static VerificationStatus FindValue(string value);
    public static VerificationStatus op_Implicit(string value);
}
public class Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient : AmazonServiceClient {
    public AmazonSimpleNotificationServiceClient(AWSCredentials credentials);
    public AmazonSimpleNotificationServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonSimpleNotificationServiceClient(AWSCredentials credentials, AmazonSimpleNotificationServiceConfig clientConfig);
    public AmazonSimpleNotificationServiceClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonSimpleNotificationServiceClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonSimpleNotificationServiceClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonSimpleNotificationServiceConfig clientConfig);
    public AmazonSimpleNotificationServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonSimpleNotificationServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonSimpleNotificationServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonSimpleNotificationServiceConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void Dispose(bool disposing);
    internal AddPermissionResponse AddPermission(AddPermissionRequest request);
    public sealed virtual Task`1<AddPermissionResponse> AddPermissionAsync(AddPermissionRequest request, CancellationToken cancellationToken);
    internal ConfirmSubscriptionResponse ConfirmSubscription(ConfirmSubscriptionRequest request);
    public sealed virtual Task`1<ConfirmSubscriptionResponse> ConfirmSubscriptionAsync(ConfirmSubscriptionRequest request, CancellationToken cancellationToken);
    internal CreatePlatformApplicationResponse CreatePlatformApplication(CreatePlatformApplicationRequest request);
    public sealed virtual Task`1<CreatePlatformApplicationResponse> CreatePlatformApplicationAsync(CreatePlatformApplicationRequest request, CancellationToken cancellationToken);
    internal CreatePlatformEndpointResponse CreatePlatformEndpoint(CreatePlatformEndpointRequest request);
    public sealed virtual Task`1<CreatePlatformEndpointResponse> CreatePlatformEndpointAsync(CreatePlatformEndpointRequest request, CancellationToken cancellationToken);
    internal CreateTopicResponse CreateTopic(CreateTopicRequest request);
    public sealed virtual Task`1<CreateTopicResponse> CreateTopicAsync(CreateTopicRequest request, CancellationToken cancellationToken);
    internal DeleteEndpointResponse DeleteEndpoint(DeleteEndpointRequest request);
    public sealed virtual Task`1<DeleteEndpointResponse> DeleteEndpointAsync(DeleteEndpointRequest request, CancellationToken cancellationToken);
    internal DeletePlatformApplicationResponse DeletePlatformApplication(DeletePlatformApplicationRequest request);
    public sealed virtual Task`1<DeletePlatformApplicationResponse> DeletePlatformApplicationAsync(DeletePlatformApplicationRequest request, CancellationToken cancellationToken);
    internal DeleteTopicResponse DeleteTopic(DeleteTopicRequest request);
    public sealed virtual Task`1<DeleteTopicResponse> DeleteTopicAsync(DeleteTopicRequest request, CancellationToken cancellationToken);
    internal GetEndpointAttributesResponse GetEndpointAttributes(GetEndpointAttributesRequest request);
    public sealed virtual Task`1<GetEndpointAttributesResponse> GetEndpointAttributesAsync(GetEndpointAttributesRequest request, CancellationToken cancellationToken);
    internal GetPlatformApplicationAttributesResponse GetPlatformApplicationAttributes(GetPlatformApplicationAttributesRequest request);
    public sealed virtual Task`1<GetPlatformApplicationAttributesResponse> GetPlatformApplicationAttributesAsync(GetPlatformApplicationAttributesRequest request, CancellationToken cancellationToken);
    internal GetSubscriptionAttributesResponse GetSubscriptionAttributes(GetSubscriptionAttributesRequest request);
    public sealed virtual Task`1<GetSubscriptionAttributesResponse> GetSubscriptionAttributesAsync(GetSubscriptionAttributesRequest request, CancellationToken cancellationToken);
    internal GetTopicAttributesResponse GetTopicAttributes(GetTopicAttributesRequest request);
    public sealed virtual Task`1<GetTopicAttributesResponse> GetTopicAttributesAsync(GetTopicAttributesRequest request, CancellationToken cancellationToken);
    internal ListEndpointsByPlatformApplicationResponse ListEndpointsByPlatformApplication(ListEndpointsByPlatformApplicationRequest request);
    public sealed virtual Task`1<ListEndpointsByPlatformApplicationResponse> ListEndpointsByPlatformApplicationAsync(ListEndpointsByPlatformApplicationRequest request, CancellationToken cancellationToken);
    internal ListPlatformApplicationsResponse ListPlatformApplications();
    internal ListPlatformApplicationsResponse ListPlatformApplications(ListPlatformApplicationsRequest request);
    public sealed virtual Task`1<ListPlatformApplicationsResponse> ListPlatformApplicationsAsync(ListPlatformApplicationsRequest request, CancellationToken cancellationToken);
    internal ListSubscriptionsResponse ListSubscriptions();
    internal ListSubscriptionsResponse ListSubscriptions(ListSubscriptionsRequest request);
    public sealed virtual Task`1<ListSubscriptionsResponse> ListSubscriptionsAsync(ListSubscriptionsRequest request, CancellationToken cancellationToken);
    internal ListSubscriptionsByTopicResponse ListSubscriptionsByTopic(ListSubscriptionsByTopicRequest request);
    public sealed virtual Task`1<ListSubscriptionsByTopicResponse> ListSubscriptionsByTopicAsync(ListSubscriptionsByTopicRequest request, CancellationToken cancellationToken);
    internal ListTopicsResponse ListTopics();
    internal ListTopicsResponse ListTopics(ListTopicsRequest request);
    public sealed virtual Task`1<ListTopicsResponse> ListTopicsAsync(ListTopicsRequest request, CancellationToken cancellationToken);
    internal PublishResponse Publish(PublishRequest request);
    public sealed virtual Task`1<PublishResponse> PublishAsync(PublishRequest request, CancellationToken cancellationToken);
    internal RemovePermissionResponse RemovePermission(RemovePermissionRequest request);
    public sealed virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(RemovePermissionRequest request, CancellationToken cancellationToken);
    internal SetEndpointAttributesResponse SetEndpointAttributes(SetEndpointAttributesRequest request);
    public sealed virtual Task`1<SetEndpointAttributesResponse> SetEndpointAttributesAsync(SetEndpointAttributesRequest request, CancellationToken cancellationToken);
    internal SetPlatformApplicationAttributesResponse SetPlatformApplicationAttributes(SetPlatformApplicationAttributesRequest request);
    public sealed virtual Task`1<SetPlatformApplicationAttributesResponse> SetPlatformApplicationAttributesAsync(SetPlatformApplicationAttributesRequest request, CancellationToken cancellationToken);
    internal SetSubscriptionAttributesResponse SetSubscriptionAttributes(SetSubscriptionAttributesRequest request);
    public sealed virtual Task`1<SetSubscriptionAttributesResponse> SetSubscriptionAttributesAsync(SetSubscriptionAttributesRequest request, CancellationToken cancellationToken);
    internal SetTopicAttributesResponse SetTopicAttributes(SetTopicAttributesRequest request);
    public sealed virtual Task`1<SetTopicAttributesResponse> SetTopicAttributesAsync(SetTopicAttributesRequest request, CancellationToken cancellationToken);
    internal SubscribeResponse Subscribe(SubscribeRequest request);
    public sealed virtual Task`1<SubscribeResponse> SubscribeAsync(SubscribeRequest request, CancellationToken cancellationToken);
    internal UnsubscribeResponse Unsubscribe(UnsubscribeRequest request);
    public sealed virtual Task`1<UnsubscribeResponse> UnsubscribeAsync(UnsubscribeRequest request, CancellationToken cancellationToken);
}
public class Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceException : AmazonServiceException {
    public AmazonSimpleNotificationServiceException(string message);
    public AmazonSimpleNotificationServiceException(string message, Exception innerException);
    public AmazonSimpleNotificationServiceException(Exception innerException);
    public AmazonSimpleNotificationServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonSimpleNotificationServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceRequest : AmazonWebServiceRequest {
}
public interface Amazon.SimpleNotificationService.IAmazonSimpleNotificationService {
    public abstract virtual Task`1<AddPermissionResponse> AddPermissionAsync(AddPermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ConfirmSubscriptionResponse> ConfirmSubscriptionAsync(ConfirmSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreatePlatformApplicationResponse> CreatePlatformApplicationAsync(CreatePlatformApplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreatePlatformEndpointResponse> CreatePlatformEndpointAsync(CreatePlatformEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTopicResponse> CreateTopicAsync(CreateTopicRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteEndpointResponse> DeleteEndpointAsync(DeleteEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePlatformApplicationResponse> DeletePlatformApplicationAsync(DeletePlatformApplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTopicResponse> DeleteTopicAsync(DeleteTopicRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetEndpointAttributesResponse> GetEndpointAttributesAsync(GetEndpointAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPlatformApplicationAttributesResponse> GetPlatformApplicationAttributesAsync(GetPlatformApplicationAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSubscriptionAttributesResponse> GetSubscriptionAttributesAsync(GetSubscriptionAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTopicAttributesResponse> GetTopicAttributesAsync(GetTopicAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListEndpointsByPlatformApplicationResponse> ListEndpointsByPlatformApplicationAsync(ListEndpointsByPlatformApplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListPlatformApplicationsResponse> ListPlatformApplicationsAsync(ListPlatformApplicationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListSubscriptionsResponse> ListSubscriptionsAsync(ListSubscriptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListSubscriptionsByTopicResponse> ListSubscriptionsByTopicAsync(ListSubscriptionsByTopicRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTopicsResponse> ListTopicsAsync(ListTopicsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PublishResponse> PublishAsync(PublishRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(RemovePermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetEndpointAttributesResponse> SetEndpointAttributesAsync(SetEndpointAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetPlatformApplicationAttributesResponse> SetPlatformApplicationAttributesAsync(SetPlatformApplicationAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetSubscriptionAttributesResponse> SetSubscriptionAttributesAsync(SetSubscriptionAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetTopicAttributesResponse> SetTopicAttributesAsync(SetTopicAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SubscribeResponse> SubscribeAsync(SubscribeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnsubscribeResponse> UnsubscribeAsync(UnsubscribeRequest request, CancellationToken cancellationToken);
}
public class Amazon.SimpleNotificationService.Model.AddPermissionRequest : AmazonSimpleNotificationServiceRequest {
    private List`1<string> _actionName;
    private List`1<string> _awsAccountId;
    private string _label;
    private string _topicArn;
    public List`1<string> ActionName { get; public set; }
    public List`1<string> AWSAccountId { get; public set; }
    public string Label { get; public set; }
    public string TopicArn { get; public set; }
    public AddPermissionRequest(string topicArn, string label, List`1<string> awsAccountId, List`1<string> actionName);
    public List`1<string> get_ActionName();
    public void set_ActionName(List`1<string> value);
    internal bool IsSetActionName();
    public List`1<string> get_AWSAccountId();
    public void set_AWSAccountId(List`1<string> value);
    internal bool IsSetAWSAccountId();
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.AddPermissionResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleNotificationService.Model.AuthorizationErrorException : AmazonSimpleNotificationServiceException {
    public AuthorizationErrorException(string message);
    public AuthorizationErrorException(string message, Exception innerException);
    public AuthorizationErrorException(Exception innerException);
    public AuthorizationErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public AuthorizationErrorException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleNotificationService.Model.ConfirmSubscriptionRequest : AmazonSimpleNotificationServiceRequest {
    private string _authenticateOnUnsubscribe;
    private string _token;
    private string _topicArn;
    public string AuthenticateOnUnsubscribe { get; public set; }
    public string Token { get; public set; }
    public string TopicArn { get; public set; }
    public ConfirmSubscriptionRequest(string topicArn, string token);
    public ConfirmSubscriptionRequest(string topicArn, string token, string authenticateOnUnsubscribe);
    public string get_AuthenticateOnUnsubscribe();
    public void set_AuthenticateOnUnsubscribe(string value);
    internal bool IsSetAuthenticateOnUnsubscribe();
    public string get_Token();
    public void set_Token(string value);
    internal bool IsSetToken();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.ConfirmSubscriptionResponse : ConfirmSubscriptionResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ConfirmSubscriptionResult class are now available on the ConfirmSubscriptionResponse class. You should use the properties on ConfirmSubscriptionResponse instead of accessing them through ConfirmSubscriptionResult.")]
public ConfirmSubscriptionResult ConfirmSubscriptionResult { get; }
    public ConfirmSubscriptionResult get_ConfirmSubscriptionResult();
}
public class Amazon.SimpleNotificationService.Model.ConfirmSubscriptionResult : AmazonWebServiceResponse {
    private string _subscriptionArn;
    public string SubscriptionArn { get; public set; }
    public string get_SubscriptionArn();
    public void set_SubscriptionArn(string value);
    internal bool IsSetSubscriptionArn();
}
public class Amazon.SimpleNotificationService.Model.CreatePlatformApplicationRequest : AmazonSimpleNotificationServiceRequest {
    private Dictionary`2<string, string> _attributes;
    private string _name;
    private string _platform;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public string Name { get; public set; }
    public string Platform { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Platform();
    public void set_Platform(string value);
    internal bool IsSetPlatform();
}
public class Amazon.SimpleNotificationService.Model.CreatePlatformApplicationResponse : CreatePlatformApplicationResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreatePlatformApplicationResult class are now available on the CreatePlatformApplicationResponse class. You should use the properties on CreatePlatformApplicationResponse instead of accessing them through CreatePlatformApplicationResult.")]
public CreatePlatformApplicationResult CreatePlatformApplicationResult { get; }
    public CreatePlatformApplicationResult get_CreatePlatformApplicationResult();
}
public class Amazon.SimpleNotificationService.Model.CreatePlatformApplicationResult : AmazonWebServiceResponse {
    private string _platformApplicationArn;
    public string PlatformApplicationArn { get; public set; }
    public string get_PlatformApplicationArn();
    public void set_PlatformApplicationArn(string value);
    internal bool IsSetPlatformApplicationArn();
}
public class Amazon.SimpleNotificationService.Model.CreatePlatformEndpointRequest : AmazonSimpleNotificationServiceRequest {
    private Dictionary`2<string, string> _attributes;
    private string _customUserData;
    private string _platformApplicationArn;
    private string _token;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public string CustomUserData { get; public set; }
    public string PlatformApplicationArn { get; public set; }
    public string Token { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_CustomUserData();
    public void set_CustomUserData(string value);
    internal bool IsSetCustomUserData();
    public string get_PlatformApplicationArn();
    public void set_PlatformApplicationArn(string value);
    internal bool IsSetPlatformApplicationArn();
    public string get_Token();
    public void set_Token(string value);
    internal bool IsSetToken();
}
public class Amazon.SimpleNotificationService.Model.CreatePlatformEndpointResponse : CreatePlatformEndpointResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreatePlatformEndpointResult class are now available on the CreatePlatformEndpointResponse class. You should use the properties on CreatePlatformEndpointResponse instead of accessing them through CreatePlatformEndpointResult.")]
public CreatePlatformEndpointResult CreatePlatformEndpointResult { get; }
    public CreatePlatformEndpointResult get_CreatePlatformEndpointResult();
}
public class Amazon.SimpleNotificationService.Model.CreatePlatformEndpointResult : AmazonWebServiceResponse {
    private string _endpointArn;
    public string EndpointArn { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
}
public class Amazon.SimpleNotificationService.Model.CreateTopicRequest : AmazonSimpleNotificationServiceRequest {
    private string _name;
    public string Name { get; public set; }
    public CreateTopicRequest(string name);
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.SimpleNotificationService.Model.CreateTopicResponse : CreateTopicResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateTopicResult class are now available on the CreateTopicResponse class. You should use the properties on CreateTopicResponse instead of accessing them through CreateTopicResult.")]
public CreateTopicResult CreateTopicResult { get; }
    public CreateTopicResult get_CreateTopicResult();
}
public class Amazon.SimpleNotificationService.Model.CreateTopicResult : AmazonWebServiceResponse {
    private string _topicArn;
    public string TopicArn { get; public set; }
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.DeleteEndpointRequest : AmazonSimpleNotificationServiceRequest {
    private string _endpointArn;
    public string EndpointArn { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
}
public class Amazon.SimpleNotificationService.Model.DeleteEndpointResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleNotificationService.Model.DeletePlatformApplicationRequest : AmazonSimpleNotificationServiceRequest {
    private string _platformApplicationArn;
    public string PlatformApplicationArn { get; public set; }
    public string get_PlatformApplicationArn();
    public void set_PlatformApplicationArn(string value);
    internal bool IsSetPlatformApplicationArn();
}
public class Amazon.SimpleNotificationService.Model.DeletePlatformApplicationResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleNotificationService.Model.DeleteTopicRequest : AmazonSimpleNotificationServiceRequest {
    private string _topicArn;
    public string TopicArn { get; public set; }
    public DeleteTopicRequest(string topicArn);
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.DeleteTopicResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleNotificationService.Model.Endpoint : object {
    private Dictionary`2<string, string> _attributes;
    private string _endpointArn;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public string EndpointArn { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
}
public class Amazon.SimpleNotificationService.Model.EndpointDisabledException : AmazonSimpleNotificationServiceException {
    public EndpointDisabledException(string message);
    public EndpointDisabledException(string message, Exception innerException);
    public EndpointDisabledException(Exception innerException);
    public EndpointDisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public EndpointDisabledException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleNotificationService.Model.GetEndpointAttributesRequest : AmazonSimpleNotificationServiceRequest {
    private string _endpointArn;
    public string EndpointArn { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
}
public class Amazon.SimpleNotificationService.Model.GetEndpointAttributesResponse : GetEndpointAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetEndpointAttributesResult class are now available on the GetEndpointAttributesResponse class. You should use the properties on GetEndpointAttributesResponse instead of accessing them through GetEndpointAttributesResult.")]
public GetEndpointAttributesResult GetEndpointAttributesResult { get; }
    public GetEndpointAttributesResult get_GetEndpointAttributesResult();
}
public class Amazon.SimpleNotificationService.Model.GetEndpointAttributesResult : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _attributes;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
}
public class Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesRequest : AmazonSimpleNotificationServiceRequest {
    private string _platformApplicationArn;
    public string PlatformApplicationArn { get; public set; }
    public string get_PlatformApplicationArn();
    public void set_PlatformApplicationArn(string value);
    internal bool IsSetPlatformApplicationArn();
}
public class Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesResponse : GetPlatformApplicationAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetPlatformApplicationAttributesResult class are now available on the GetPlatformApplicationAttributesResponse class. You should use the properties on GetPlatformApplicationAttributesResponse instead of accessing them through GetPlatformApplicationAttributesResult.")]
public GetPlatformApplicationAttributesResult GetPlatformApplicationAttributesResult { get; }
    public GetPlatformApplicationAttributesResult get_GetPlatformApplicationAttributesResult();
}
public class Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesResult : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _attributes;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
}
public class Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesRequest : AmazonSimpleNotificationServiceRequest {
    private string _subscriptionArn;
    public string SubscriptionArn { get; public set; }
    public GetSubscriptionAttributesRequest(string subscriptionArn);
    public string get_SubscriptionArn();
    public void set_SubscriptionArn(string value);
    internal bool IsSetSubscriptionArn();
}
public class Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesResponse : GetSubscriptionAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetSubscriptionAttributesResult class are now available on the GetSubscriptionAttributesResponse class. You should use the properties on GetSubscriptionAttributesResponse instead of accessing them through GetSubscriptionAttributesResult.")]
public GetSubscriptionAttributesResult GetSubscriptionAttributesResult { get; }
    public GetSubscriptionAttributesResult get_GetSubscriptionAttributesResult();
}
public class Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesResult : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _attributes;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
}
public class Amazon.SimpleNotificationService.Model.GetTopicAttributesRequest : AmazonSimpleNotificationServiceRequest {
    private string _topicArn;
    public string TopicArn { get; public set; }
    public GetTopicAttributesRequest(string topicArn);
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.GetTopicAttributesResponse : GetTopicAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetTopicAttributesResult class are now available on the GetTopicAttributesResponse class. You should use the properties on GetTopicAttributesResponse instead of accessing them through GetTopicAttributesResult.")]
public GetTopicAttributesResult GetTopicAttributesResult { get; }
    public GetTopicAttributesResult get_GetTopicAttributesResult();
}
public class Amazon.SimpleNotificationService.Model.GetTopicAttributesResult : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _attributes;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.AddPermissionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddPermissionRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AddPermissionResponseUnmarshaller _instance;
    public static AddPermissionResponseUnmarshaller Instance { get; }
    private static AddPermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AddPermissionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddPermissionResponseUnmarshaller GetInstance();
    public static AddPermissionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ConfirmSubscriptionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ConfirmSubscriptionRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ConfirmSubscriptionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ConfirmSubscriptionResponseUnmarshaller _instance;
    public static ConfirmSubscriptionResponseUnmarshaller Instance { get; }
    private static ConfirmSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ConfirmSubscriptionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ConfirmSubscriptionResponseUnmarshaller GetInstance();
    public static ConfirmSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreatePlatformApplicationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreatePlatformApplicationRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreatePlatformApplicationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreatePlatformApplicationResponseUnmarshaller _instance;
    public static CreatePlatformApplicationResponseUnmarshaller Instance { get; }
    private static CreatePlatformApplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreatePlatformApplicationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreatePlatformApplicationResponseUnmarshaller GetInstance();
    public static CreatePlatformApplicationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreatePlatformEndpointRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreatePlatformEndpointRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreatePlatformEndpointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreatePlatformEndpointResponseUnmarshaller _instance;
    public static CreatePlatformEndpointResponseUnmarshaller Instance { get; }
    private static CreatePlatformEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreatePlatformEndpointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreatePlatformEndpointResponseUnmarshaller GetInstance();
    public static CreatePlatformEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreateTopicRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTopicRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreateTopicResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateTopicResponseUnmarshaller _instance;
    public static CreateTopicResponseUnmarshaller Instance { get; }
    private static CreateTopicResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateTopicResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTopicResponseUnmarshaller GetInstance();
    public static CreateTopicResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeleteEndpointRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteEndpointRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeleteEndpointResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteEndpointResponseUnmarshaller _instance;
    public static DeleteEndpointResponseUnmarshaller Instance { get; }
    private static DeleteEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteEndpointResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteEndpointResponseUnmarshaller GetInstance();
    public static DeleteEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeletePlatformApplicationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePlatformApplicationRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeletePlatformApplicationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeletePlatformApplicationResponseUnmarshaller _instance;
    public static DeletePlatformApplicationResponseUnmarshaller Instance { get; }
    private static DeletePlatformApplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeletePlatformApplicationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePlatformApplicationResponseUnmarshaller GetInstance();
    public static DeletePlatformApplicationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeleteTopicRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTopicRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeleteTopicResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteTopicResponseUnmarshaller _instance;
    public static DeleteTopicResponseUnmarshaller Instance { get; }
    private static DeleteTopicResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteTopicResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTopicResponseUnmarshaller GetInstance();
    public static DeleteTopicResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.EndpointUnmarshaller : object {
    private static EndpointUnmarshaller _instance;
    public static EndpointUnmarshaller Instance { get; }
    private static EndpointUnmarshaller();
    public sealed virtual Endpoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Endpoint Unmarshall(JsonUnmarshallerContext context);
    public static EndpointUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetEndpointAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetEndpointAttributesRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetEndpointAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetEndpointAttributesResponseUnmarshaller _instance;
    public static GetEndpointAttributesResponseUnmarshaller Instance { get; }
    private static GetEndpointAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetEndpointAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetEndpointAttributesResponseUnmarshaller GetInstance();
    public static GetEndpointAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetPlatformApplicationAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPlatformApplicationAttributesRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetPlatformApplicationAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetPlatformApplicationAttributesResponseUnmarshaller _instance;
    public static GetPlatformApplicationAttributesResponseUnmarshaller Instance { get; }
    private static GetPlatformApplicationAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetPlatformApplicationAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPlatformApplicationAttributesResponseUnmarshaller GetInstance();
    public static GetPlatformApplicationAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetSubscriptionAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSubscriptionAttributesRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetSubscriptionAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetSubscriptionAttributesResponseUnmarshaller _instance;
    public static GetSubscriptionAttributesResponseUnmarshaller Instance { get; }
    private static GetSubscriptionAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetSubscriptionAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSubscriptionAttributesResponseUnmarshaller GetInstance();
    public static GetSubscriptionAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetTopicAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTopicAttributesRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetTopicAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetTopicAttributesResponseUnmarshaller _instance;
    public static GetTopicAttributesResponseUnmarshaller Instance { get; }
    private static GetTopicAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetTopicAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTopicAttributesResponseUnmarshaller GetInstance();
    public static GetTopicAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListEndpointsByPlatformApplicationRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListEndpointsByPlatformApplicationRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListEndpointsByPlatformApplicationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListEndpointsByPlatformApplicationResponseUnmarshaller _instance;
    public static ListEndpointsByPlatformApplicationResponseUnmarshaller Instance { get; }
    private static ListEndpointsByPlatformApplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListEndpointsByPlatformApplicationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListEndpointsByPlatformApplicationResponseUnmarshaller GetInstance();
    public static ListEndpointsByPlatformApplicationResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListPlatformApplicationsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListPlatformApplicationsRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListPlatformApplicationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListPlatformApplicationsResponseUnmarshaller _instance;
    public static ListPlatformApplicationsResponseUnmarshaller Instance { get; }
    private static ListPlatformApplicationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListPlatformApplicationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListPlatformApplicationsResponseUnmarshaller GetInstance();
    public static ListPlatformApplicationsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListSubscriptionsByTopicRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListSubscriptionsByTopicRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListSubscriptionsByTopicResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListSubscriptionsByTopicResponseUnmarshaller _instance;
    public static ListSubscriptionsByTopicResponseUnmarshaller Instance { get; }
    private static ListSubscriptionsByTopicResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListSubscriptionsByTopicResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListSubscriptionsByTopicResponseUnmarshaller GetInstance();
    public static ListSubscriptionsByTopicResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListSubscriptionsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListSubscriptionsRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListSubscriptionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListSubscriptionsResponseUnmarshaller _instance;
    public static ListSubscriptionsResponseUnmarshaller Instance { get; }
    private static ListSubscriptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListSubscriptionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListSubscriptionsResponseUnmarshaller GetInstance();
    public static ListSubscriptionsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListTopicsRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTopicsRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListTopicsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListTopicsResponseUnmarshaller _instance;
    public static ListTopicsResponseUnmarshaller Instance { get; }
    private static ListTopicsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListTopicsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTopicsResponseUnmarshaller GetInstance();
    public static ListTopicsResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.PlatformApplicationUnmarshaller : object {
    private static PlatformApplicationUnmarshaller _instance;
    public static PlatformApplicationUnmarshaller Instance { get; }
    private static PlatformApplicationUnmarshaller();
    public sealed virtual PlatformApplication Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PlatformApplication Unmarshall(JsonUnmarshallerContext context);
    public static PlatformApplicationUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.PublishRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PublishRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.PublishResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PublishResponseUnmarshaller _instance;
    public static PublishResponseUnmarshaller Instance { get; }
    private static PublishResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PublishResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PublishResponseUnmarshaller GetInstance();
    public static PublishResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemovePermissionRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemovePermissionResponseUnmarshaller _instance;
    public static RemovePermissionResponseUnmarshaller Instance { get; }
    private static RemovePermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemovePermissionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemovePermissionResponseUnmarshaller GetInstance();
    public static RemovePermissionResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetEndpointAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetEndpointAttributesRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetEndpointAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetEndpointAttributesResponseUnmarshaller _instance;
    public static SetEndpointAttributesResponseUnmarshaller Instance { get; }
    private static SetEndpointAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetEndpointAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetEndpointAttributesResponseUnmarshaller GetInstance();
    public static SetEndpointAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetPlatformApplicationAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetPlatformApplicationAttributesRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetPlatformApplicationAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetPlatformApplicationAttributesResponseUnmarshaller _instance;
    public static SetPlatformApplicationAttributesResponseUnmarshaller Instance { get; }
    private static SetPlatformApplicationAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetPlatformApplicationAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetPlatformApplicationAttributesResponseUnmarshaller GetInstance();
    public static SetPlatformApplicationAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetSubscriptionAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetSubscriptionAttributesRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetSubscriptionAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetSubscriptionAttributesResponseUnmarshaller _instance;
    public static SetSubscriptionAttributesResponseUnmarshaller Instance { get; }
    private static SetSubscriptionAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetSubscriptionAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetSubscriptionAttributesResponseUnmarshaller GetInstance();
    public static SetSubscriptionAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetTopicAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetTopicAttributesRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetTopicAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetTopicAttributesResponseUnmarshaller _instance;
    public static SetTopicAttributesResponseUnmarshaller Instance { get; }
    private static SetTopicAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetTopicAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetTopicAttributesResponseUnmarshaller GetInstance();
    public static SetTopicAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SubscribeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SubscribeRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SubscribeResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SubscribeResponseUnmarshaller _instance;
    public static SubscribeResponseUnmarshaller Instance { get; }
    private static SubscribeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SubscribeResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SubscribeResponseUnmarshaller GetInstance();
    public static SubscribeResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SubscriptionUnmarshaller : object {
    private static SubscriptionUnmarshaller _instance;
    public static SubscriptionUnmarshaller Instance { get; }
    private static SubscriptionUnmarshaller();
    public sealed virtual Subscription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Subscription Unmarshall(JsonUnmarshallerContext context);
    public static SubscriptionUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.TopicUnmarshaller : object {
    private static TopicUnmarshaller _instance;
    public static TopicUnmarshaller Instance { get; }
    private static TopicUnmarshaller();
    public sealed virtual Topic Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Topic Unmarshall(JsonUnmarshallerContext context);
    public static TopicUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.UnsubscribeRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnsubscribeRequest publicRequest);
}
public class Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.UnsubscribeResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UnsubscribeResponseUnmarshaller _instance;
    public static UnsubscribeResponseUnmarshaller Instance { get; }
    private static UnsubscribeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UnsubscribeResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnsubscribeResponseUnmarshaller GetInstance();
    public static UnsubscribeResponseUnmarshaller get_Instance();
}
public class Amazon.SimpleNotificationService.Model.InternalErrorException : AmazonSimpleNotificationServiceException {
    public InternalErrorException(string message);
    public InternalErrorException(string message, Exception innerException);
    public InternalErrorException(Exception innerException);
    public InternalErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InternalErrorException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleNotificationService.Model.InvalidParameterException : AmazonSimpleNotificationServiceException {
    public InvalidParameterException(string message);
    public InvalidParameterException(string message, Exception innerException);
    public InvalidParameterException(Exception innerException);
    public InvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidParameterException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleNotificationService.Model.InvalidParameterValueException : AmazonSimpleNotificationServiceException {
    public InvalidParameterValueException(string message);
    public InvalidParameterValueException(string message, Exception innerException);
    public InvalidParameterValueException(Exception innerException);
    public InvalidParameterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidParameterValueException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationRequest : AmazonSimpleNotificationServiceRequest {
    private string _nextToken;
    private string _platformApplicationArn;
    public string NextToken { get; public set; }
    public string PlatformApplicationArn { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_PlatformApplicationArn();
    public void set_PlatformApplicationArn(string value);
    internal bool IsSetPlatformApplicationArn();
}
public class Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationResponse : ListEndpointsByPlatformApplicationResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListEndpointsByPlatformApplicationResult class are now available on the ListEndpointsByPlatformApplicationResponse class. You should use the properties on ListEndpointsByPlatformApplicationResponse instead of accessing them through ListEndpointsByPlatformApplicationResult.")]
public ListEndpointsByPlatformApplicationResult ListEndpointsByPlatformApplicationResult { get; }
    public ListEndpointsByPlatformApplicationResult get_ListEndpointsByPlatformApplicationResult();
}
public class Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationResult : AmazonWebServiceResponse {
    private List`1<Endpoint> _endpoints;
    private string _nextToken;
    public List`1<Endpoint> Endpoints { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Endpoint> get_Endpoints();
    public void set_Endpoints(List`1<Endpoint> value);
    internal bool IsSetEndpoints();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleNotificationService.Model.ListPlatformApplicationsRequest : AmazonSimpleNotificationServiceRequest {
    private string _nextToken;
    public string NextToken { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleNotificationService.Model.ListPlatformApplicationsResponse : ListPlatformApplicationsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListPlatformApplicationsResult class are now available on the ListPlatformApplicationsResponse class. You should use the properties on ListPlatformApplicationsResponse instead of accessing them through ListPlatformApplicationsResult.")]
public ListPlatformApplicationsResult ListPlatformApplicationsResult { get; }
    public ListPlatformApplicationsResult get_ListPlatformApplicationsResult();
}
public class Amazon.SimpleNotificationService.Model.ListPlatformApplicationsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PlatformApplication> _platformApplications;
    public string NextToken { get; public set; }
    public List`1<PlatformApplication> PlatformApplications { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PlatformApplication> get_PlatformApplications();
    public void set_PlatformApplications(List`1<PlatformApplication> value);
    internal bool IsSetPlatformApplications();
}
public class Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicRequest : AmazonSimpleNotificationServiceRequest {
    private string _nextToken;
    private string _topicArn;
    public string NextToken { get; public set; }
    public string TopicArn { get; public set; }
    public ListSubscriptionsByTopicRequest(string topicArn);
    public ListSubscriptionsByTopicRequest(string topicArn, string nextToken);
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicResponse : ListSubscriptionsByTopicResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListSubscriptionsByTopicResult class are now available on the ListSubscriptionsByTopicResponse class. You should use the properties on ListSubscriptionsByTopicResponse instead of accessing them through ListSubscriptionsByTopicResult.")]
public ListSubscriptionsByTopicResult ListSubscriptionsByTopicResult { get; }
    public ListSubscriptionsByTopicResult get_ListSubscriptionsByTopicResult();
}
public class Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Subscription> _subscriptions;
    public string NextToken { get; public set; }
    public List`1<Subscription> Subscriptions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Subscription> get_Subscriptions();
    public void set_Subscriptions(List`1<Subscription> value);
    internal bool IsSetSubscriptions();
}
public class Amazon.SimpleNotificationService.Model.ListSubscriptionsRequest : AmazonSimpleNotificationServiceRequest {
    private string _nextToken;
    public string NextToken { get; public set; }
    public ListSubscriptionsRequest(string nextToken);
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleNotificationService.Model.ListSubscriptionsResponse : ListSubscriptionsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListSubscriptionsResult class are now available on the ListSubscriptionsResponse class. You should use the properties on ListSubscriptionsResponse instead of accessing them through ListSubscriptionsResult.")]
public ListSubscriptionsResult ListSubscriptionsResult { get; }
    public ListSubscriptionsResult get_ListSubscriptionsResult();
}
public class Amazon.SimpleNotificationService.Model.ListSubscriptionsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Subscription> _subscriptions;
    public string NextToken { get; public set; }
    public List`1<Subscription> Subscriptions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Subscription> get_Subscriptions();
    public void set_Subscriptions(List`1<Subscription> value);
    internal bool IsSetSubscriptions();
}
public class Amazon.SimpleNotificationService.Model.ListTopicsRequest : AmazonSimpleNotificationServiceRequest {
    private string _nextToken;
    public string NextToken { get; public set; }
    public ListTopicsRequest(string nextToken);
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.SimpleNotificationService.Model.ListTopicsResponse : ListTopicsResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListTopicsResult class are now available on the ListTopicsResponse class. You should use the properties on ListTopicsResponse instead of accessing them through ListTopicsResult.")]
public ListTopicsResult ListTopicsResult { get; }
    public ListTopicsResult get_ListTopicsResult();
}
public class Amazon.SimpleNotificationService.Model.ListTopicsResult : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Topic> _topics;
    public string NextToken { get; public set; }
    public List`1<Topic> Topics { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Topic> get_Topics();
    public void set_Topics(List`1<Topic> value);
    internal bool IsSetTopics();
}
public class Amazon.SimpleNotificationService.Model.MessageAttributeValue : object {
    private MemoryStream _binaryValue;
    private string _dataType;
    private string _stringValue;
    public MemoryStream BinaryValue { get; public set; }
    public string DataType { get; public set; }
    public string StringValue { get; public set; }
    public MemoryStream get_BinaryValue();
    public void set_BinaryValue(MemoryStream value);
    internal bool IsSetBinaryValue();
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public string get_StringValue();
    public void set_StringValue(string value);
    internal bool IsSetStringValue();
}
public class Amazon.SimpleNotificationService.Model.NotFoundException : AmazonSimpleNotificationServiceException {
    public NotFoundException(string message);
    public NotFoundException(string message, Exception innerException);
    public NotFoundException(Exception innerException);
    public NotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public NotFoundException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleNotificationService.Model.PlatformApplication : object {
    private Dictionary`2<string, string> _attributes;
    private string _platformApplicationArn;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public string PlatformApplicationArn { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_PlatformApplicationArn();
    public void set_PlatformApplicationArn(string value);
    internal bool IsSetPlatformApplicationArn();
}
public class Amazon.SimpleNotificationService.Model.PlatformApplicationDisabledException : AmazonSimpleNotificationServiceException {
    public PlatformApplicationDisabledException(string message);
    public PlatformApplicationDisabledException(string message, Exception innerException);
    public PlatformApplicationDisabledException(Exception innerException);
    public PlatformApplicationDisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public PlatformApplicationDisabledException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleNotificationService.Model.PublishRequest : AmazonSimpleNotificationServiceRequest {
    private string _message;
    private Dictionary`2<string, MessageAttributeValue> _messageAttributes;
    private string _messageStructure;
    private string _subject;
    private string _targetArn;
    private string _topicArn;
    public string Message { get; public set; }
    public Dictionary`2<string, MessageAttributeValue> MessageAttributes { get; public set; }
    public string MessageStructure { get; public set; }
    public string Subject { get; public set; }
    public string TargetArn { get; public set; }
    public string TopicArn { get; public set; }
    public PublishRequest(string topicArn, string message);
    public PublishRequest(string topicArn, string message, string subject);
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public Dictionary`2<string, MessageAttributeValue> get_MessageAttributes();
    public void set_MessageAttributes(Dictionary`2<string, MessageAttributeValue> value);
    internal bool IsSetMessageAttributes();
    public string get_MessageStructure();
    public void set_MessageStructure(string value);
    internal bool IsSetMessageStructure();
    public string get_Subject();
    public void set_Subject(string value);
    internal bool IsSetSubject();
    public string get_TargetArn();
    public void set_TargetArn(string value);
    internal bool IsSetTargetArn();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.PublishResponse : PublishResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the PublishResult class are now available on the PublishResponse class. You should use the properties on PublishResponse instead of accessing them through PublishResult.")]
public PublishResult PublishResult { get; }
    public PublishResult get_PublishResult();
}
public class Amazon.SimpleNotificationService.Model.PublishResult : AmazonWebServiceResponse {
    private string _messageId;
    public string MessageId { get; public set; }
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SimpleNotificationService.Model.RemovePermissionRequest : AmazonSimpleNotificationServiceRequest {
    private string _label;
    private string _topicArn;
    public string Label { get; public set; }
    public string TopicArn { get; public set; }
    public RemovePermissionRequest(string topicArn, string label);
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.RemovePermissionResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleNotificationService.Model.SetEndpointAttributesRequest : AmazonSimpleNotificationServiceRequest {
    private Dictionary`2<string, string> _attributes;
    private string _endpointArn;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public string EndpointArn { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
}
public class Amazon.SimpleNotificationService.Model.SetEndpointAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleNotificationService.Model.SetPlatformApplicationAttributesRequest : AmazonSimpleNotificationServiceRequest {
    private Dictionary`2<string, string> _attributes;
    private string _platformApplicationArn;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public string PlatformApplicationArn { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_PlatformApplicationArn();
    public void set_PlatformApplicationArn(string value);
    internal bool IsSetPlatformApplicationArn();
}
public class Amazon.SimpleNotificationService.Model.SetPlatformApplicationAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesRequest : AmazonSimpleNotificationServiceRequest {
    private string _attributeName;
    private string _attributeValue;
    private string _subscriptionArn;
    public string AttributeName { get; public set; }
    public string AttributeValue { get; public set; }
    public string SubscriptionArn { get; public set; }
    public SetSubscriptionAttributesRequest(string subscriptionArn, string attributeName, string attributeValue);
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public string get_AttributeValue();
    public void set_AttributeValue(string value);
    internal bool IsSetAttributeValue();
    public string get_SubscriptionArn();
    public void set_SubscriptionArn(string value);
    internal bool IsSetSubscriptionArn();
}
public class Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleNotificationService.Model.SetTopicAttributesRequest : AmazonSimpleNotificationServiceRequest {
    private string _attributeName;
    private string _attributeValue;
    private string _topicArn;
    public string AttributeName { get; public set; }
    public string AttributeValue { get; public set; }
    public string TopicArn { get; public set; }
    public SetTopicAttributesRequest(string topicArn, string attributeName, string attributeValue);
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public string get_AttributeValue();
    public void set_AttributeValue(string value);
    internal bool IsSetAttributeValue();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.SetTopicAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleNotificationService.Model.SubscribeRequest : AmazonSimpleNotificationServiceRequest {
    private string _endpoint;
    private string _protocol;
    private string _topicArn;
    public string Endpoint { get; public set; }
    public string Protocol { get; public set; }
    public string TopicArn { get; public set; }
    public SubscribeRequest(string topicArn, string protocol, string endpoint);
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.SubscribeResponse : SubscribeResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SubscribeResult class are now available on the SubscribeResponse class. You should use the properties on SubscribeResponse instead of accessing them through SubscribeResult.")]
public SubscribeResult SubscribeResult { get; }
    public SubscribeResult get_SubscribeResult();
}
public class Amazon.SimpleNotificationService.Model.SubscribeResult : AmazonWebServiceResponse {
    private string _subscriptionArn;
    public string SubscriptionArn { get; public set; }
    public string get_SubscriptionArn();
    public void set_SubscriptionArn(string value);
    internal bool IsSetSubscriptionArn();
}
public class Amazon.SimpleNotificationService.Model.Subscription : object {
    private string _endpoint;
    private string _owner;
    private string _protocol;
    private string _subscriptionArn;
    private string _topicArn;
    public string Endpoint { get; public set; }
    public string Owner { get; public set; }
    public string Protocol { get; public set; }
    public string SubscriptionArn { get; public set; }
    public string TopicArn { get; public set; }
    public string get_Endpoint();
    public void set_Endpoint(string value);
    internal bool IsSetEndpoint();
    public string get_Owner();
    public void set_Owner(string value);
    internal bool IsSetOwner();
    public string get_Protocol();
    public void set_Protocol(string value);
    internal bool IsSetProtocol();
    public string get_SubscriptionArn();
    public void set_SubscriptionArn(string value);
    internal bool IsSetSubscriptionArn();
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.SubscriptionLimitExceededException : AmazonSimpleNotificationServiceException {
    public SubscriptionLimitExceededException(string message);
    public SubscriptionLimitExceededException(string message, Exception innerException);
    public SubscriptionLimitExceededException(Exception innerException);
    public SubscriptionLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public SubscriptionLimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleNotificationService.Model.Topic : object {
    private string _topicArn;
    public string TopicArn { get; public set; }
    public string get_TopicArn();
    public void set_TopicArn(string value);
    internal bool IsSetTopicArn();
}
public class Amazon.SimpleNotificationService.Model.TopicLimitExceededException : AmazonSimpleNotificationServiceException {
    public TopicLimitExceededException(string message);
    public TopicLimitExceededException(string message, Exception innerException);
    public TopicLimitExceededException(Exception innerException);
    public TopicLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TopicLimitExceededException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SimpleNotificationService.Model.UnsubscribeRequest : AmazonSimpleNotificationServiceRequest {
    private string _subscriptionArn;
    public string SubscriptionArn { get; public set; }
    public UnsubscribeRequest(string subscriptionArn);
    public string get_SubscriptionArn();
    public void set_SubscriptionArn(string value);
    internal bool IsSetSubscriptionArn();
}
public class Amazon.SimpleNotificationService.Model.UnsubscribeResponse : AmazonWebServiceResponse {
}
public class Amazon.SimpleNotificationService.Util.Message : object {
    private static int MAX_RETRIES;
    public static string MESSAGE_TYPE_SUBSCRIPTION_CONFIRMATION;
    public static string MESSAGE_TYPE_UNSUBSCRIPTION_CONFIRMATION;
    public static string MESSAGE_TYPE_NOTIFICATION;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignatureVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SigningCertURL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscribeURL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimestampString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TopicArn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnsubscribeURL>k__BackingField;
    public string MessageId { get; private set; }
    public string MessageText { get; private set; }
    public string Signature { get; private set; }
    public string SignatureVersion { get; private set; }
    public string SigningCertURL { get; private set; }
    public string Subject { get; private set; }
    public string SubscribeURL { get; private set; }
    public DateTime Timestamp { get; }
    private string TimestampString { get; private set; }
    public string Token { get; private set; }
    public string TopicArn { get; private set; }
    public string Type { get; private set; }
    public bool IsSubscriptionType { get; }
    public bool IsUnsubscriptionType { get; }
    public bool IsNotificationType { get; }
    public string UnsubscribeURL { get; private set; }
    public static Message ParseMessage(string messageText);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
private void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_MessageText();
    [CompilerGeneratedAttribute]
private void set_MessageText(string value);
    [CompilerGeneratedAttribute]
public string get_Signature();
    [CompilerGeneratedAttribute]
private void set_Signature(string value);
    [CompilerGeneratedAttribute]
public string get_SignatureVersion();
    [CompilerGeneratedAttribute]
private void set_SignatureVersion(string value);
    [CompilerGeneratedAttribute]
public string get_SigningCertURL();
    [CompilerGeneratedAttribute]
private void set_SigningCertURL(string value);
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
private void set_Subject(string value);
    [CompilerGeneratedAttribute]
public string get_SubscribeURL();
    [CompilerGeneratedAttribute]
private void set_SubscribeURL(string value);
    public DateTime get_Timestamp();
    [CompilerGeneratedAttribute]
private string get_TimestampString();
    [CompilerGeneratedAttribute]
private void set_TimestampString(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
private void set_Token(string value);
    [CompilerGeneratedAttribute]
public string get_TopicArn();
    [CompilerGeneratedAttribute]
private void set_TopicArn(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(string value);
    public bool get_IsSubscriptionType();
    public bool get_IsUnsubscriptionType();
    public bool get_IsNotificationType();
    [CompilerGeneratedAttribute]
public string get_UnsubscribeURL();
    [CompilerGeneratedAttribute]
private void set_UnsubscribeURL(string value);
    private static string ValidateCertUrl(string certUrl);
}
public class Amazon.SQS.AmazonSQSClient : AmazonServiceClient {
    public AmazonSQSClient(AWSCredentials credentials);
    public AmazonSQSClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonSQSClient(AWSCredentials credentials, AmazonSQSConfig clientConfig);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonSQSConfig clientConfig);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonSQSClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonSQSConfig clientConfig);
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual void Dispose(bool disposing);
    internal AddPermissionResponse AddPermission(AddPermissionRequest request);
    public sealed virtual Task`1<AddPermissionResponse> AddPermissionAsync(AddPermissionRequest request, CancellationToken cancellationToken);
    internal ChangeMessageVisibilityResponse ChangeMessageVisibility(ChangeMessageVisibilityRequest request);
    public sealed virtual Task`1<ChangeMessageVisibilityResponse> ChangeMessageVisibilityAsync(ChangeMessageVisibilityRequest request, CancellationToken cancellationToken);
    internal ChangeMessageVisibilityBatchResponse ChangeMessageVisibilityBatch(ChangeMessageVisibilityBatchRequest request);
    public sealed virtual Task`1<ChangeMessageVisibilityBatchResponse> ChangeMessageVisibilityBatchAsync(ChangeMessageVisibilityBatchRequest request, CancellationToken cancellationToken);
    internal CreateQueueResponse CreateQueue(CreateQueueRequest request);
    public sealed virtual Task`1<CreateQueueResponse> CreateQueueAsync(CreateQueueRequest request, CancellationToken cancellationToken);
    internal DeleteMessageResponse DeleteMessage(DeleteMessageRequest request);
    public sealed virtual Task`1<DeleteMessageResponse> DeleteMessageAsync(DeleteMessageRequest request, CancellationToken cancellationToken);
    internal DeleteMessageBatchResponse DeleteMessageBatch(DeleteMessageBatchRequest request);
    public sealed virtual Task`1<DeleteMessageBatchResponse> DeleteMessageBatchAsync(DeleteMessageBatchRequest request, CancellationToken cancellationToken);
    internal DeleteQueueResponse DeleteQueue(DeleteQueueRequest request);
    public sealed virtual Task`1<DeleteQueueResponse> DeleteQueueAsync(DeleteQueueRequest request, CancellationToken cancellationToken);
    internal GetQueueAttributesResponse GetQueueAttributes(GetQueueAttributesRequest request);
    public sealed virtual Task`1<GetQueueAttributesResponse> GetQueueAttributesAsync(GetQueueAttributesRequest request, CancellationToken cancellationToken);
    internal GetQueueUrlResponse GetQueueUrl(GetQueueUrlRequest request);
    public sealed virtual Task`1<GetQueueUrlResponse> GetQueueUrlAsync(GetQueueUrlRequest request, CancellationToken cancellationToken);
    internal ListDeadLetterSourceQueuesResponse ListDeadLetterSourceQueues(ListDeadLetterSourceQueuesRequest request);
    public sealed virtual Task`1<ListDeadLetterSourceQueuesResponse> ListDeadLetterSourceQueuesAsync(ListDeadLetterSourceQueuesRequest request, CancellationToken cancellationToken);
    internal ListQueuesResponse ListQueues(ListQueuesRequest request);
    public sealed virtual Task`1<ListQueuesResponse> ListQueuesAsync(ListQueuesRequest request, CancellationToken cancellationToken);
    internal PurgeQueueResponse PurgeQueue(PurgeQueueRequest request);
    public sealed virtual Task`1<PurgeQueueResponse> PurgeQueueAsync(PurgeQueueRequest request, CancellationToken cancellationToken);
    internal ReceiveMessageResponse ReceiveMessage(ReceiveMessageRequest request);
    public sealed virtual Task`1<ReceiveMessageResponse> ReceiveMessageAsync(ReceiveMessageRequest request, CancellationToken cancellationToken);
    internal RemovePermissionResponse RemovePermission(RemovePermissionRequest request);
    public sealed virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(RemovePermissionRequest request, CancellationToken cancellationToken);
    internal SendMessageResponse SendMessage(SendMessageRequest request);
    public sealed virtual Task`1<SendMessageResponse> SendMessageAsync(SendMessageRequest request, CancellationToken cancellationToken);
    internal SendMessageBatchResponse SendMessageBatch(SendMessageBatchRequest request);
    public sealed virtual Task`1<SendMessageBatchResponse> SendMessageBatchAsync(SendMessageBatchRequest request, CancellationToken cancellationToken);
    internal SetQueueAttributesResponse SetQueueAttributes(SetQueueAttributesRequest request);
    public sealed virtual Task`1<SetQueueAttributesResponse> SetQueueAttributesAsync(SetQueueAttributesRequest request, CancellationToken cancellationToken);
}
public class Amazon.SQS.AmazonSQSConfig : ClientConfig {
    internal string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    internal virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
}
public class Amazon.SQS.AmazonSQSException : AmazonServiceException {
    public AmazonSQSException(string message);
    public AmazonSQSException(string message, Exception innerException);
    public AmazonSQSException(Exception innerException);
    public AmazonSQSException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonSQSException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.AmazonSQSRequest : AmazonWebServiceRequest {
}
public interface Amazon.SQS.IAmazonSQS {
    public abstract virtual Task`1<AddPermissionResponse> AddPermissionAsync(AddPermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ChangeMessageVisibilityResponse> ChangeMessageVisibilityAsync(ChangeMessageVisibilityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ChangeMessageVisibilityBatchResponse> ChangeMessageVisibilityBatchAsync(ChangeMessageVisibilityBatchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateQueueResponse> CreateQueueAsync(CreateQueueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMessageResponse> DeleteMessageAsync(DeleteMessageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMessageBatchResponse> DeleteMessageBatchAsync(DeleteMessageBatchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteQueueResponse> DeleteQueueAsync(DeleteQueueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetQueueAttributesResponse> GetQueueAttributesAsync(GetQueueAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetQueueUrlResponse> GetQueueUrlAsync(GetQueueUrlRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDeadLetterSourceQueuesResponse> ListDeadLetterSourceQueuesAsync(ListDeadLetterSourceQueuesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListQueuesResponse> ListQueuesAsync(ListQueuesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PurgeQueueResponse> PurgeQueueAsync(PurgeQueueRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReceiveMessageResponse> ReceiveMessageAsync(ReceiveMessageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemovePermissionResponse> RemovePermissionAsync(RemovePermissionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendMessageResponse> SendMessageAsync(SendMessageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SendMessageBatchResponse> SendMessageBatchAsync(SendMessageBatchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetQueueAttributesResponse> SetQueueAttributesAsync(SetQueueAttributesRequest request, CancellationToken cancellationToken);
}
public class Amazon.SQS.Internal.ProcessRequestHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
}
public class Amazon.SQS.Internal.ValidationResponseHandler : PipelineHandler {
    private static byte STRING_TYPE;
    private static byte BINARY_TYPE;
    private static byte STRING_LIST_TYPE;
    private static byte BINARY_LIST_TYPE;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, MessageAttributeValue>, string> CS$<>9__CachedAnonymousMethodDelegate6;
    [CompilerGeneratedAttribute]
private static Func`2<SendMessageBatchRequestEntry, string> CS$<>9__CachedAnonymousMethodDelegate8;
    public virtual void InvokeSync(IExecutionContext executionContext);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Amazon.SQS.Internal.ValidationResponseHandler/<InvokeAsync>d__0`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PostInvoke(IExecutionContext executionContext);
    public static string CalculateMD5(Dictionary`2<string, MessageAttributeValue> attributes);
    public static string CalculateMD5(string message);
    public static string CalculateMD5(Byte[] bytes);
    public static bool CompareMD5(string message, string md5FromService);
    public static bool CompareMD5(Dictionary`2<string, MessageAttributeValue> attributes, string md5FromService);
    public static void ValidateMD5(string message, string md5FromService);
    public static void ValidateMD5(Dictionary`2<string, MessageAttributeValue> attributes, string md5FromService);
    public static void ValidateMD5(string message, string messageId, string md5FromService);
    public static void ValidateMD5(Dictionary`2<string, MessageAttributeValue> attributes, string messageId, string md5FromService);
    public static void ValidateMD5(Message message);
    public static void ValidateReceiveMessage(ReceiveMessageResult response);
    public static void ValidateSendMessage(SendMessageRequest request, SendMessageResult response);
    public static void ValidateSendMessageBatch(SendMessageBatchRequest request, SendMessageBatchResult response);
    [CompilerGeneratedAttribute]
private Task`1<T> <>n__FabricatedMethod3(IExecutionContext );
    [CompilerGeneratedAttribute]
private static string <CalculateMD5>b__5(KeyValuePair`2<string, MessageAttributeValue> kvp);
    [CompilerGeneratedAttribute]
private static string <ValidateSendMessageBatch>b__7(SendMessageBatchRequestEntry entry);
}
public class Amazon.SQS.Model.AddPermissionRequest : AmazonSQSRequest {
    private List`1<string> _actions;
    private List`1<string> _awsAccountIds;
    private string _label;
    private string _queueUrl;
    public List`1<string> Actions { get; public set; }
    public List`1<string> AWSAccountIds { get; public set; }
    public string Label { get; public set; }
    public string QueueUrl { get; public set; }
    public AddPermissionRequest(string queueUrl, string label, List`1<string> awsAccountIds, List`1<string> actions);
    public List`1<string> get_Actions();
    public void set_Actions(List`1<string> value);
    internal bool IsSetActions();
    public List`1<string> get_AWSAccountIds();
    public void set_AWSAccountIds(List`1<string> value);
    internal bool IsSetAWSAccountIds();
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.AddPermissionResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.BatchEntryIdsNotDistinctException : AmazonSQSException {
    public BatchEntryIdsNotDistinctException(string message);
    public BatchEntryIdsNotDistinctException(string message, Exception innerException);
    public BatchEntryIdsNotDistinctException(Exception innerException);
    public BatchEntryIdsNotDistinctException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public BatchEntryIdsNotDistinctException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.BatchRequestTooLongException : AmazonSQSException {
    public BatchRequestTooLongException(string message);
    public BatchRequestTooLongException(string message, Exception innerException);
    public BatchRequestTooLongException(Exception innerException);
    public BatchRequestTooLongException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public BatchRequestTooLongException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.BatchResultErrorEntry : object {
    private string _code;
    private string _id;
    private string _message;
    private Nullable`1<bool> _senderFault;
    public string Code { get; public set; }
    public string Id { get; public set; }
    public string Message { get; public set; }
    public bool SenderFault { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public bool get_SenderFault();
    public void set_SenderFault(bool value);
    internal bool IsSetSenderFault();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest : AmazonSQSRequest {
    private List`1<ChangeMessageVisibilityBatchRequestEntry> _entries;
    private string _queueUrl;
    public List`1<ChangeMessageVisibilityBatchRequestEntry> Entries { get; public set; }
    public string QueueUrl { get; public set; }
    public ChangeMessageVisibilityBatchRequest(string queueUrl, List`1<ChangeMessageVisibilityBatchRequestEntry> entries);
    public List`1<ChangeMessageVisibilityBatchRequestEntry> get_Entries();
    public void set_Entries(List`1<ChangeMessageVisibilityBatchRequestEntry> value);
    internal bool IsSetEntries();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry : object {
    private string _id;
    private string _receiptHandle;
    private Nullable`1<int> _visibilityTimeout;
    public string Id { get; public set; }
    public string ReceiptHandle { get; public set; }
    public int VisibilityTimeout { get; public set; }
    public ChangeMessageVisibilityBatchRequestEntry(string id, string receiptHandle);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_ReceiptHandle();
    public void set_ReceiptHandle(string value);
    internal bool IsSetReceiptHandle();
    public int get_VisibilityTimeout();
    public void set_VisibilityTimeout(int value);
    internal bool IsSetVisibilityTimeout();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityBatchResponse : ChangeMessageVisibilityBatchResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ChangeMessageVisibilityBatchResult class are now available on the ChangeMessageVisibilityBatchResponse class. You should use the properties on ChangeMessageVisibilityBatchResponse instead of accessing them through ChangeMessageVisibilityBatchResult.")]
public ChangeMessageVisibilityBatchResult ChangeMessageVisibilityBatchResult { get; }
    public ChangeMessageVisibilityBatchResult get_ChangeMessageVisibilityBatchResult();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityBatchResult : AmazonWebServiceResponse {
    private List`1<BatchResultErrorEntry> _failed;
    private List`1<ChangeMessageVisibilityBatchResultEntry> _successful;
    public List`1<BatchResultErrorEntry> Failed { get; public set; }
    public List`1<ChangeMessageVisibilityBatchResultEntry> Successful { get; public set; }
    public List`1<BatchResultErrorEntry> get_Failed();
    public void set_Failed(List`1<BatchResultErrorEntry> value);
    internal bool IsSetFailed();
    public List`1<ChangeMessageVisibilityBatchResultEntry> get_Successful();
    public void set_Successful(List`1<ChangeMessageVisibilityBatchResultEntry> value);
    internal bool IsSetSuccessful();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityBatchResultEntry : object {
    private string _id;
    public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityRequest : AmazonSQSRequest {
    private string _queueUrl;
    private string _receiptHandle;
    private Nullable`1<int> _visibilityTimeout;
    public string QueueUrl { get; public set; }
    public string ReceiptHandle { get; public set; }
    public int VisibilityTimeout { get; public set; }
    public ChangeMessageVisibilityRequest(string queueUrl, string receiptHandle, int visibilityTimeout);
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
    public string get_ReceiptHandle();
    public void set_ReceiptHandle(string value);
    internal bool IsSetReceiptHandle();
    public int get_VisibilityTimeout();
    public void set_VisibilityTimeout(int value);
    internal bool IsSetVisibilityTimeout();
}
public class Amazon.SQS.Model.ChangeMessageVisibilityResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.CreateQueueRequest : AmazonSQSRequest {
    private Dictionary`2<string, string> _attributes;
    private string _queueName;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public string QueueName { get; public set; }
    public CreateQueueRequest(string queueName);
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_QueueName();
    public void set_QueueName(string value);
    internal bool IsSetQueueName();
}
public class Amazon.SQS.Model.CreateQueueResponse : CreateQueueResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the CreateQueueResult class are now available on the CreateQueueResponse class. You should use the properties on CreateQueueResponse instead of accessing them through CreateQueueResult.")]
public CreateQueueResult CreateQueueResult { get; }
    public CreateQueueResult get_CreateQueueResult();
}
public class Amazon.SQS.Model.CreateQueueResult : AmazonWebServiceResponse {
    private string _queueUrl;
    public string QueueUrl { get; public set; }
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.DeleteMessageBatchRequest : AmazonSQSRequest {
    private List`1<DeleteMessageBatchRequestEntry> _entries;
    private string _queueUrl;
    public List`1<DeleteMessageBatchRequestEntry> Entries { get; public set; }
    public string QueueUrl { get; public set; }
    public DeleteMessageBatchRequest(string queueUrl, List`1<DeleteMessageBatchRequestEntry> entries);
    public List`1<DeleteMessageBatchRequestEntry> get_Entries();
    public void set_Entries(List`1<DeleteMessageBatchRequestEntry> value);
    internal bool IsSetEntries();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.DeleteMessageBatchRequestEntry : object {
    private string _id;
    private string _receiptHandle;
    public string Id { get; public set; }
    public string ReceiptHandle { get; public set; }
    public DeleteMessageBatchRequestEntry(string id, string receiptHandle);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_ReceiptHandle();
    public void set_ReceiptHandle(string value);
    internal bool IsSetReceiptHandle();
}
public class Amazon.SQS.Model.DeleteMessageBatchResponse : DeleteMessageBatchResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the DeleteMessageBatchResult class are now available on the DeleteMessageBatchResponse class. You should use the properties on DeleteMessageBatchResponse instead of accessing them through DeleteMessageBatchResult.")]
public DeleteMessageBatchResult DeleteMessageBatchResult { get; }
    public DeleteMessageBatchResult get_DeleteMessageBatchResult();
}
public class Amazon.SQS.Model.DeleteMessageBatchResult : AmazonWebServiceResponse {
    private List`1<BatchResultErrorEntry> _failed;
    private List`1<DeleteMessageBatchResultEntry> _successful;
    public List`1<BatchResultErrorEntry> Failed { get; public set; }
    public List`1<DeleteMessageBatchResultEntry> Successful { get; public set; }
    public List`1<BatchResultErrorEntry> get_Failed();
    public void set_Failed(List`1<BatchResultErrorEntry> value);
    internal bool IsSetFailed();
    public List`1<DeleteMessageBatchResultEntry> get_Successful();
    public void set_Successful(List`1<DeleteMessageBatchResultEntry> value);
    internal bool IsSetSuccessful();
}
public class Amazon.SQS.Model.DeleteMessageBatchResultEntry : object {
    private string _id;
    public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.SQS.Model.DeleteMessageRequest : AmazonSQSRequest {
    private string _queueUrl;
    private string _receiptHandle;
    public string QueueUrl { get; public set; }
    public string ReceiptHandle { get; public set; }
    public DeleteMessageRequest(string queueUrl, string receiptHandle);
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
    public string get_ReceiptHandle();
    public void set_ReceiptHandle(string value);
    internal bool IsSetReceiptHandle();
}
public class Amazon.SQS.Model.DeleteMessageResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.DeleteQueueRequest : AmazonSQSRequest {
    private string _queueUrl;
    public string QueueUrl { get; public set; }
    public DeleteQueueRequest(string queueUrl);
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.DeleteQueueResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.EmptyBatchRequestException : AmazonSQSException {
    public EmptyBatchRequestException(string message);
    public EmptyBatchRequestException(string message, Exception innerException);
    public EmptyBatchRequestException(Exception innerException);
    public EmptyBatchRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public EmptyBatchRequestException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.GetQueueAttributesRequest : AmazonSQSRequest {
    private List`1<string> _attributeNames;
    private string _queueUrl;
    public List`1<string> AttributeNames { get; public set; }
    public string QueueUrl { get; public set; }
    public GetQueueAttributesRequest(string queueUrl, List`1<string> attributeNames);
    public List`1<string> get_AttributeNames();
    public void set_AttributeNames(List`1<string> value);
    internal bool IsSetAttributeNames();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.GetQueueAttributesResponse : GetQueueAttributesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetQueueAttributesResult class are now available on the GetQueueAttributesResponse class. You should use the properties on GetQueueAttributesResponse instead of accessing them through GetQueueAttributesResult.")]
public GetQueueAttributesResult GetQueueAttributesResult { get; }
    public GetQueueAttributesResult get_GetQueueAttributesResult();
}
public class Amazon.SQS.Model.GetQueueAttributesResult : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _attributes;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public int VisibilityTimeout { get; }
    public int DelaySeconds { get; }
    public int MaximumMessageSize { get; }
    public int MessageRetentionPeriod { get; }
    public int ApproximateNumberOfMessages { get; }
    public int ApproximateNumberOfMessagesNotVisible { get; }
    public int ApproximateNumberOfMessagesDelayed { get; }
    public DateTime CreatedTimestamp { get; }
    public DateTime LastModifiedTimestamp { get; }
    public string QueueARN { get; }
    public string Policy { get; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public int get_VisibilityTimeout();
    public int get_DelaySeconds();
    public int get_MaximumMessageSize();
    public int get_MessageRetentionPeriod();
    public int get_ApproximateNumberOfMessages();
    public int get_ApproximateNumberOfMessagesNotVisible();
    public int get_ApproximateNumberOfMessagesDelayed();
    public DateTime get_CreatedTimestamp();
    public DateTime get_LastModifiedTimestamp();
    public string get_QueueARN();
    public string get_Policy();
    private string getAttributeValue(string field);
}
public class Amazon.SQS.Model.GetQueueUrlRequest : AmazonSQSRequest {
    private string _queueName;
    private string _queueOwnerAWSAccountId;
    public string QueueName { get; public set; }
    public string QueueOwnerAWSAccountId { get; public set; }
    public GetQueueUrlRequest(string queueName);
    public string get_QueueName();
    public void set_QueueName(string value);
    internal bool IsSetQueueName();
    public string get_QueueOwnerAWSAccountId();
    public void set_QueueOwnerAWSAccountId(string value);
    internal bool IsSetQueueOwnerAWSAccountId();
}
public class Amazon.SQS.Model.GetQueueUrlResponse : GetQueueUrlResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the GetQueueUrlResult class are now available on the GetQueueUrlResponse class. You should use the properties on GetQueueUrlResponse instead of accessing them through GetQueueUrlResult.")]
public GetQueueUrlResult GetQueueUrlResult { get; }
    public GetQueueUrlResult get_GetQueueUrlResult();
}
public class Amazon.SQS.Model.GetQueueUrlResult : AmazonWebServiceResponse {
    private string _queueUrl;
    public string QueueUrl { get; public set; }
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddPermissionRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AddPermissionResponseUnmarshaller _instance;
    public static AddPermissionResponseUnmarshaller Instance { get; }
    private static AddPermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, AddPermissionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddPermissionResponseUnmarshaller GetInstance();
    public static AddPermissionResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.BatchResultErrorEntryUnmarshaller : object {
    private static BatchResultErrorEntryUnmarshaller _instance;
    public static BatchResultErrorEntryUnmarshaller Instance { get; }
    private static BatchResultErrorEntryUnmarshaller();
    public sealed virtual BatchResultErrorEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchResultErrorEntry Unmarshall(JsonUnmarshallerContext context);
    public static BatchResultErrorEntryUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ChangeMessageVisibilityBatchRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ChangeMessageVisibilityBatchResponseUnmarshaller _instance;
    public static ChangeMessageVisibilityBatchResponseUnmarshaller Instance { get; }
    private static ChangeMessageVisibilityBatchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ChangeMessageVisibilityBatchResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ChangeMessageVisibilityBatchResponseUnmarshaller GetInstance();
    public static ChangeMessageVisibilityBatchResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResultEntryUnmarshaller : object {
    private static ChangeMessageVisibilityBatchResultEntryUnmarshaller _instance;
    public static ChangeMessageVisibilityBatchResultEntryUnmarshaller Instance { get; }
    private static ChangeMessageVisibilityBatchResultEntryUnmarshaller();
    public sealed virtual ChangeMessageVisibilityBatchResultEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ChangeMessageVisibilityBatchResultEntry Unmarshall(JsonUnmarshallerContext context);
    public static ChangeMessageVisibilityBatchResultEntryUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ChangeMessageVisibilityRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ChangeMessageVisibilityResponseUnmarshaller _instance;
    public static ChangeMessageVisibilityResponseUnmarshaller Instance { get; }
    private static ChangeMessageVisibilityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ChangeMessageVisibilityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ChangeMessageVisibilityResponseUnmarshaller GetInstance();
    public static ChangeMessageVisibilityResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateQueueRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateQueueResponseUnmarshaller _instance;
    public static CreateQueueResponseUnmarshaller Instance { get; }
    private static CreateQueueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateQueueResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateQueueResponseUnmarshaller GetInstance();
    public static CreateQueueResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMessageBatchRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteMessageBatchResponseUnmarshaller _instance;
    public static DeleteMessageBatchResponseUnmarshaller Instance { get; }
    private static DeleteMessageBatchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteMessageBatchResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMessageBatchResponseUnmarshaller GetInstance();
    public static DeleteMessageBatchResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResultEntryUnmarshaller : object {
    private static DeleteMessageBatchResultEntryUnmarshaller _instance;
    public static DeleteMessageBatchResultEntryUnmarshaller Instance { get; }
    private static DeleteMessageBatchResultEntryUnmarshaller();
    public sealed virtual DeleteMessageBatchResultEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteMessageBatchResultEntry Unmarshall(JsonUnmarshallerContext context);
    public static DeleteMessageBatchResultEntryUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMessageRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteMessageResponseUnmarshaller _instance;
    public static DeleteMessageResponseUnmarshaller Instance { get; }
    private static DeleteMessageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteMessageResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMessageResponseUnmarshaller GetInstance();
    public static DeleteMessageResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteQueueRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteQueueResponseUnmarshaller _instance;
    public static DeleteQueueResponseUnmarshaller Instance { get; }
    private static DeleteQueueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteQueueResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteQueueResponseUnmarshaller GetInstance();
    public static DeleteQueueResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetQueueAttributesRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetQueueAttributesResponseUnmarshaller _instance;
    public static GetQueueAttributesResponseUnmarshaller Instance { get; }
    private static GetQueueAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetQueueAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetQueueAttributesResponseUnmarshaller GetInstance();
    public static GetQueueAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetQueueUrlRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetQueueUrlResponseUnmarshaller _instance;
    public static GetQueueUrlResponseUnmarshaller Instance { get; }
    private static GetQueueUrlResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetQueueUrlResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetQueueUrlResponseUnmarshaller GetInstance();
    public static GetQueueUrlResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDeadLetterSourceQueuesRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListDeadLetterSourceQueuesResponseUnmarshaller _instance;
    public static ListDeadLetterSourceQueuesResponseUnmarshaller Instance { get; }
    private static ListDeadLetterSourceQueuesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListDeadLetterSourceQueuesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDeadLetterSourceQueuesResponseUnmarshaller GetInstance();
    public static ListDeadLetterSourceQueuesResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListQueuesRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListQueuesResponseUnmarshaller _instance;
    public static ListQueuesResponseUnmarshaller Instance { get; }
    private static ListQueuesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListQueuesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListQueuesResponseUnmarshaller GetInstance();
    public static ListQueuesResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.MessageAttributeValueUnmarshaller : object {
    private static MessageAttributeValueUnmarshaller _instance;
    public static MessageAttributeValueUnmarshaller Instance { get; }
    private static MessageAttributeValueUnmarshaller();
    public sealed virtual MessageAttributeValue Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MessageAttributeValue Unmarshall(JsonUnmarshallerContext context);
    public static MessageAttributeValueUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.MessageUnmarshaller : object {
    private static MessageUnmarshaller _instance;
    public static MessageUnmarshaller Instance { get; }
    private static MessageUnmarshaller();
    public sealed virtual Message Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Message Unmarshall(JsonUnmarshallerContext context);
    public static MessageUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PurgeQueueRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.PurgeQueueResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PurgeQueueResponseUnmarshaller _instance;
    public static PurgeQueueResponseUnmarshaller Instance { get; }
    private static PurgeQueueResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PurgeQueueResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PurgeQueueResponseUnmarshaller GetInstance();
    public static PurgeQueueResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReceiveMessageRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ReceiveMessageResponseUnmarshaller _instance;
    public static ReceiveMessageResponseUnmarshaller Instance { get; }
    private static ReceiveMessageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ReceiveMessageResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReceiveMessageResponseUnmarshaller GetInstance();
    public static ReceiveMessageResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemovePermissionRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static RemovePermissionResponseUnmarshaller _instance;
    public static RemovePermissionResponseUnmarshaller Instance { get; }
    private static RemovePermissionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, RemovePermissionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemovePermissionResponseUnmarshaller GetInstance();
    public static RemovePermissionResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendMessageBatchRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendMessageBatchResponseUnmarshaller _instance;
    public static SendMessageBatchResponseUnmarshaller Instance { get; }
    private static SendMessageBatchResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendMessageBatchResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendMessageBatchResponseUnmarshaller GetInstance();
    public static SendMessageBatchResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResultEntryUnmarshaller : object {
    private static SendMessageBatchResultEntryUnmarshaller _instance;
    public static SendMessageBatchResultEntryUnmarshaller Instance { get; }
    private static SendMessageBatchResultEntryUnmarshaller();
    public sealed virtual SendMessageBatchResultEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SendMessageBatchResultEntry Unmarshall(JsonUnmarshallerContext context);
    public static SendMessageBatchResultEntryUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SendMessageRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SendMessageResponseUnmarshaller _instance;
    public static SendMessageResponseUnmarshaller Instance { get; }
    private static SendMessageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SendMessageResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SendMessageResponseUnmarshaller GetInstance();
    public static SendMessageResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesRequestMarshaller : object {
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetQueueAttributesRequest publicRequest);
}
public class Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetQueueAttributesResponseUnmarshaller _instance;
    public static SetQueueAttributesResponseUnmarshaller Instance { get; }
    private static SetQueueAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetQueueAttributesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetQueueAttributesResponseUnmarshaller GetInstance();
    public static SetQueueAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.SQS.Model.InvalidAttributeNameException : AmazonSQSException {
    public InvalidAttributeNameException(string message);
    public InvalidAttributeNameException(string message, Exception innerException);
    public InvalidAttributeNameException(Exception innerException);
    public InvalidAttributeNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidAttributeNameException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.InvalidBatchEntryIdException : AmazonSQSException {
    public InvalidBatchEntryIdException(string message);
    public InvalidBatchEntryIdException(string message, Exception innerException);
    public InvalidBatchEntryIdException(Exception innerException);
    public InvalidBatchEntryIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidBatchEntryIdException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.InvalidIdFormatException : AmazonSQSException {
    public InvalidIdFormatException(string message);
    public InvalidIdFormatException(string message, Exception innerException);
    public InvalidIdFormatException(Exception innerException);
    public InvalidIdFormatException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidIdFormatException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.InvalidMessageContentsException : AmazonSQSException {
    public InvalidMessageContentsException(string message);
    public InvalidMessageContentsException(string message, Exception innerException);
    public InvalidMessageContentsException(Exception innerException);
    public InvalidMessageContentsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public InvalidMessageContentsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest : AmazonSQSRequest {
    private string _queueUrl;
    public string QueueUrl { get; public set; }
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.ListDeadLetterSourceQueuesResponse : ListDeadLetterSourceQueuesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListDeadLetterSourceQueuesResult class are now available on the ListDeadLetterSourceQueuesResponse class. You should use the properties on ListDeadLetterSourceQueuesResponse instead of accessing them through ListDeadLetterSourceQueuesResult.")]
public ListDeadLetterSourceQueuesResult ListDeadLetterSourceQueuesResult { get; }
    public ListDeadLetterSourceQueuesResult get_ListDeadLetterSourceQueuesResult();
}
public class Amazon.SQS.Model.ListDeadLetterSourceQueuesResult : AmazonWebServiceResponse {
    private List`1<string> _queueUrls;
    public List`1<string> QueueUrls { get; public set; }
    public List`1<string> get_QueueUrls();
    public void set_QueueUrls(List`1<string> value);
    internal bool IsSetQueueUrls();
}
public class Amazon.SQS.Model.ListQueuesRequest : AmazonSQSRequest {
    private string _queueNamePrefix;
    public string QueueNamePrefix { get; public set; }
    public ListQueuesRequest(string queueNamePrefix);
    public string get_QueueNamePrefix();
    public void set_QueueNamePrefix(string value);
    internal bool IsSetQueueNamePrefix();
}
public class Amazon.SQS.Model.ListQueuesResponse : ListQueuesResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ListQueuesResult class are now available on the ListQueuesResponse class. You should use the properties on ListQueuesResponse instead of accessing them through ListQueuesResult.")]
public ListQueuesResult ListQueuesResult { get; }
    public ListQueuesResult get_ListQueuesResult();
}
public class Amazon.SQS.Model.ListQueuesResult : AmazonWebServiceResponse {
    private List`1<string> _queueUrls;
    public List`1<string> QueueUrls { get; public set; }
    public List`1<string> get_QueueUrls();
    public void set_QueueUrls(List`1<string> value);
    internal bool IsSetQueueUrls();
}
public class Amazon.SQS.Model.Message : object {
    private Dictionary`2<string, string> _attributes;
    private string _body;
    private string _md5OfBody;
    private string _md5OfMessageAttributes;
    private Dictionary`2<string, MessageAttributeValue> _messageAttributes;
    private string _messageId;
    private string _receiptHandle;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public string Body { get; public set; }
    public string MD5OfBody { get; public set; }
    public string MD5OfMessageAttributes { get; public set; }
    public Dictionary`2<string, MessageAttributeValue> MessageAttributes { get; public set; }
    public string MessageId { get; public set; }
    public string ReceiptHandle { get; public set; }
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_Body();
    public void set_Body(string value);
    internal bool IsSetBody();
    public string get_MD5OfBody();
    public void set_MD5OfBody(string value);
    internal bool IsSetMD5OfBody();
    public string get_MD5OfMessageAttributes();
    public void set_MD5OfMessageAttributes(string value);
    internal bool IsSetMD5OfMessageAttributes();
    public Dictionary`2<string, MessageAttributeValue> get_MessageAttributes();
    public void set_MessageAttributes(Dictionary`2<string, MessageAttributeValue> value);
    internal bool IsSetMessageAttributes();
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
    public string get_ReceiptHandle();
    public void set_ReceiptHandle(string value);
    internal bool IsSetReceiptHandle();
}
public class Amazon.SQS.Model.MessageAttributeValue : object {
    private List`1<MemoryStream> _binaryListValues;
    private MemoryStream _binaryValue;
    private string _dataType;
    private List`1<string> _stringListValues;
    private string _stringValue;
    public List`1<MemoryStream> BinaryListValues { get; public set; }
    public MemoryStream BinaryValue { get; public set; }
    public string DataType { get; public set; }
    public List`1<string> StringListValues { get; public set; }
    public string StringValue { get; public set; }
    public List`1<MemoryStream> get_BinaryListValues();
    public void set_BinaryListValues(List`1<MemoryStream> value);
    internal bool IsSetBinaryListValues();
    public MemoryStream get_BinaryValue();
    public void set_BinaryValue(MemoryStream value);
    internal bool IsSetBinaryValue();
    public string get_DataType();
    public void set_DataType(string value);
    internal bool IsSetDataType();
    public List`1<string> get_StringListValues();
    public void set_StringListValues(List`1<string> value);
    internal bool IsSetStringListValues();
    public string get_StringValue();
    public void set_StringValue(string value);
    internal bool IsSetStringValue();
}
public class Amazon.SQS.Model.MessageNotInflightException : AmazonSQSException {
    public MessageNotInflightException(string message);
    public MessageNotInflightException(string message, Exception innerException);
    public MessageNotInflightException(Exception innerException);
    public MessageNotInflightException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public MessageNotInflightException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.OverLimitException : AmazonSQSException {
    public OverLimitException(string message);
    public OverLimitException(string message, Exception innerException);
    public OverLimitException(Exception innerException);
    public OverLimitException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public OverLimitException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.PurgeQueueInProgressException : AmazonSQSException {
    public PurgeQueueInProgressException(string message);
    public PurgeQueueInProgressException(string message, Exception innerException);
    public PurgeQueueInProgressException(Exception innerException);
    public PurgeQueueInProgressException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public PurgeQueueInProgressException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.PurgeQueueRequest : AmazonSQSRequest {
    private string _queueUrl;
    public string QueueUrl { get; public set; }
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.PurgeQueueResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.QueueDeletedRecentlyException : AmazonSQSException {
    public QueueDeletedRecentlyException(string message);
    public QueueDeletedRecentlyException(string message, Exception innerException);
    public QueueDeletedRecentlyException(Exception innerException);
    public QueueDeletedRecentlyException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public QueueDeletedRecentlyException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.QueueDoesNotExistException : AmazonSQSException {
    public QueueDoesNotExistException(string message);
    public QueueDoesNotExistException(string message, Exception innerException);
    public QueueDoesNotExistException(Exception innerException);
    public QueueDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public QueueDoesNotExistException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.QueueNameExistsException : AmazonSQSException {
    public QueueNameExistsException(string message);
    public QueueNameExistsException(string message, Exception innerException);
    public QueueNameExistsException(Exception innerException);
    public QueueNameExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public QueueNameExistsException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.ReceiptHandleIsInvalidException : AmazonSQSException {
    public ReceiptHandleIsInvalidException(string message);
    public ReceiptHandleIsInvalidException(string message, Exception innerException);
    public ReceiptHandleIsInvalidException(Exception innerException);
    public ReceiptHandleIsInvalidException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public ReceiptHandleIsInvalidException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.ReceiveMessageRequest : AmazonSQSRequest {
    private List`1<string> _attributeNames;
    private Nullable`1<int> _maxNumberOfMessages;
    private List`1<string> _messageAttributeNames;
    private string _queueUrl;
    private Nullable`1<int> _visibilityTimeout;
    private Nullable`1<int> _waitTimeSeconds;
    public List`1<string> AttributeNames { get; public set; }
    public int MaxNumberOfMessages { get; public set; }
    public List`1<string> MessageAttributeNames { get; public set; }
    public string QueueUrl { get; public set; }
    public int VisibilityTimeout { get; public set; }
    public int WaitTimeSeconds { get; public set; }
    public ReceiveMessageRequest(string queueUrl);
    public List`1<string> get_AttributeNames();
    public void set_AttributeNames(List`1<string> value);
    internal bool IsSetAttributeNames();
    public int get_MaxNumberOfMessages();
    public void set_MaxNumberOfMessages(int value);
    internal bool IsSetMaxNumberOfMessages();
    public List`1<string> get_MessageAttributeNames();
    public void set_MessageAttributeNames(List`1<string> value);
    internal bool IsSetMessageAttributeNames();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
    public int get_VisibilityTimeout();
    public void set_VisibilityTimeout(int value);
    internal bool IsSetVisibilityTimeout();
    public int get_WaitTimeSeconds();
    public void set_WaitTimeSeconds(int value);
    internal bool IsSetWaitTimeSeconds();
}
public class Amazon.SQS.Model.ReceiveMessageResponse : ReceiveMessageResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the ReceiveMessageResult class are now available on the ReceiveMessageResponse class. You should use the properties on ReceiveMessageResponse instead of accessing them through ReceiveMessageResult.")]
public ReceiveMessageResult ReceiveMessageResult { get; }
    public ReceiveMessageResult get_ReceiveMessageResult();
}
public class Amazon.SQS.Model.ReceiveMessageResult : AmazonWebServiceResponse {
    private List`1<Message> _messages;
    public List`1<Message> Messages { get; public set; }
    public List`1<Message> get_Messages();
    public void set_Messages(List`1<Message> value);
    internal bool IsSetMessages();
}
public class Amazon.SQS.Model.RemovePermissionRequest : AmazonSQSRequest {
    private string _label;
    private string _queueUrl;
    public string Label { get; public set; }
    public string QueueUrl { get; public set; }
    public RemovePermissionRequest(string queueUrl, string label);
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.RemovePermissionResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.SendMessageBatchRequest : AmazonSQSRequest {
    private List`1<SendMessageBatchRequestEntry> _entries;
    private string _queueUrl;
    public List`1<SendMessageBatchRequestEntry> Entries { get; public set; }
    public string QueueUrl { get; public set; }
    public SendMessageBatchRequest(string queueUrl, List`1<SendMessageBatchRequestEntry> entries);
    public List`1<SendMessageBatchRequestEntry> get_Entries();
    public void set_Entries(List`1<SendMessageBatchRequestEntry> value);
    internal bool IsSetEntries();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.SendMessageBatchRequestEntry : object {
    private Nullable`1<int> _delaySeconds;
    private string _id;
    private Dictionary`2<string, MessageAttributeValue> _messageAttributes;
    private string _messageBody;
    public int DelaySeconds { get; public set; }
    public string Id { get; public set; }
    public Dictionary`2<string, MessageAttributeValue> MessageAttributes { get; public set; }
    public string MessageBody { get; public set; }
    public SendMessageBatchRequestEntry(string id, string messageBody);
    public int get_DelaySeconds();
    public void set_DelaySeconds(int value);
    internal bool IsSetDelaySeconds();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Dictionary`2<string, MessageAttributeValue> get_MessageAttributes();
    public void set_MessageAttributes(Dictionary`2<string, MessageAttributeValue> value);
    internal bool IsSetMessageAttributes();
    public string get_MessageBody();
    public void set_MessageBody(string value);
    internal bool IsSetMessageBody();
}
public class Amazon.SQS.Model.SendMessageBatchResponse : SendMessageBatchResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SendMessageBatchResult class are now available on the SendMessageBatchResponse class. You should use the properties on SendMessageBatchResponse instead of accessing them through SendMessageBatchResult.")]
public SendMessageBatchResult SendMessageBatchResult { get; }
    public SendMessageBatchResult get_SendMessageBatchResult();
}
public class Amazon.SQS.Model.SendMessageBatchResult : AmazonWebServiceResponse {
    private List`1<BatchResultErrorEntry> _failed;
    private List`1<SendMessageBatchResultEntry> _successful;
    public List`1<BatchResultErrorEntry> Failed { get; public set; }
    public List`1<SendMessageBatchResultEntry> Successful { get; public set; }
    public List`1<BatchResultErrorEntry> get_Failed();
    public void set_Failed(List`1<BatchResultErrorEntry> value);
    internal bool IsSetFailed();
    public List`1<SendMessageBatchResultEntry> get_Successful();
    public void set_Successful(List`1<SendMessageBatchResultEntry> value);
    internal bool IsSetSuccessful();
}
public class Amazon.SQS.Model.SendMessageBatchResultEntry : object {
    private string _id;
    private string _md5OfMessageAttributes;
    private string _md5OfMessageBody;
    private string _messageId;
    public string Id { get; public set; }
    public string MD5OfMessageAttributes { get; public set; }
    public string MD5OfMessageBody { get; public set; }
    public string MessageId { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_MD5OfMessageAttributes();
    public void set_MD5OfMessageAttributes(string value);
    internal bool IsSetMD5OfMessageAttributes();
    public string get_MD5OfMessageBody();
    public void set_MD5OfMessageBody(string value);
    internal bool IsSetMD5OfMessageBody();
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SQS.Model.SendMessageRequest : AmazonSQSRequest {
    private Nullable`1<int> _delaySeconds;
    private Dictionary`2<string, MessageAttributeValue> _messageAttributes;
    private string _messageBody;
    private string _queueUrl;
    public int DelaySeconds { get; public set; }
    public Dictionary`2<string, MessageAttributeValue> MessageAttributes { get; public set; }
    public string MessageBody { get; public set; }
    public string QueueUrl { get; public set; }
    public SendMessageRequest(string queueUrl, string messageBody);
    public int get_DelaySeconds();
    public void set_DelaySeconds(int value);
    internal bool IsSetDelaySeconds();
    public Dictionary`2<string, MessageAttributeValue> get_MessageAttributes();
    public void set_MessageAttributes(Dictionary`2<string, MessageAttributeValue> value);
    internal bool IsSetMessageAttributes();
    public string get_MessageBody();
    public void set_MessageBody(string value);
    internal bool IsSetMessageBody();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.SendMessageResponse : SendMessageResult {
    [ObsoleteAttribute("This property has been deprecated. All properties of the SendMessageResult class are now available on the SendMessageResponse class. You should use the properties on SendMessageResponse instead of accessing them through SendMessageResult.")]
public SendMessageResult SendMessageResult { get; }
    public SendMessageResult get_SendMessageResult();
}
public class Amazon.SQS.Model.SendMessageResult : AmazonWebServiceResponse {
    private string _md5OfMessageAttributes;
    private string _md5OfMessageBody;
    private string _messageId;
    public string MD5OfMessageAttributes { get; public set; }
    public string MD5OfMessageBody { get; public set; }
    public string MessageId { get; public set; }
    public string get_MD5OfMessageAttributes();
    public void set_MD5OfMessageAttributes(string value);
    internal bool IsSetMD5OfMessageAttributes();
    public string get_MD5OfMessageBody();
    public void set_MD5OfMessageBody(string value);
    internal bool IsSetMD5OfMessageBody();
    public string get_MessageId();
    public void set_MessageId(string value);
    internal bool IsSetMessageId();
}
public class Amazon.SQS.Model.SetQueueAttributesRequest : AmazonSQSRequest {
    private Dictionary`2<string, string> _attributes;
    private string _queueUrl;
    public Dictionary`2<string, string> Attributes { get; public set; }
    public string QueueUrl { get; public set; }
    public SetQueueAttributesRequest(string queueUrl, Dictionary`2<string, string> attributes);
    public Dictionary`2<string, string> get_Attributes();
    public void set_Attributes(Dictionary`2<string, string> value);
    internal bool IsSetAttributes();
    public string get_QueueUrl();
    public void set_QueueUrl(string value);
    internal bool IsSetQueueUrl();
}
public class Amazon.SQS.Model.SetQueueAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.SQS.Model.TooManyEntriesInBatchRequestException : AmazonSQSException {
    public TooManyEntriesInBatchRequestException(string message);
    public TooManyEntriesInBatchRequestException(string message, Exception innerException);
    public TooManyEntriesInBatchRequestException(Exception innerException);
    public TooManyEntriesInBatchRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public TooManyEntriesInBatchRequestException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.Model.UnsupportedOperationException : AmazonSQSException {
    public UnsupportedOperationException(string message);
    public UnsupportedOperationException(string message, Exception innerException);
    public UnsupportedOperationException(Exception innerException);
    public UnsupportedOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
    public UnsupportedOperationException(string message, ErrorType errorType, string errorCode, string RequestId, HttpStatusCode statusCode);
}
public class Amazon.SQS.QueueAttributeName : ConstantClass {
    public static QueueAttributeName ApproximateNumberOfMessages;
    public static QueueAttributeName ApproximateNumberOfMessagesDelayed;
    public static QueueAttributeName ApproximateNumberOfMessagesNotVisible;
    public static QueueAttributeName CreatedTimestamp;
    public static QueueAttributeName DelaySeconds;
    public static QueueAttributeName LastModifiedTimestamp;
    public static QueueAttributeName MaximumMessageSize;
    public static QueueAttributeName MessageRetentionPeriod;
    public static QueueAttributeName Policy;
    public static QueueAttributeName QueueArn;
    public static QueueAttributeName ReceiveMessageWaitTimeSeconds;
    public static QueueAttributeName RedrivePolicy;
    public static QueueAttributeName VisibilityTimeout;
    public QueueAttributeName(string value);
    private static QueueAttributeName();
    public static QueueAttributeName FindValue(string value);
    public static QueueAttributeName op_Implicit(string value);
}
public static class Amazon.SQS.Util.SQSConstants : object {
    public static string ATTRIBUTE_ALL;
    public static string ATTRIBUTE_VISIBILITY_TIMEOUT;
    public static string ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES;
    public static string ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES_NOT_VISIBLE;
    public static string ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES_DELAYED;
    public static string ATTRIBUTE_CREATED_TIMESTAMP;
    public static string ATTRIBUTE_LAST_MODIFIED_TIMESTAMP;
    public static string ATTRIBUTE_QUEUE_ARN;
    public static string ATTRIBUTE_MAXIMUM_MESSAGE_SIZE;
    public static string ATTRIBUTE_MESSAGE_RETENTION_PERIOD;
    public static string ATTRIBUTE_POLICY;
    public static string ATTRIBUTE_DELAY_SECONDS;
    public static string ATTRIBUTE_OLDEST_MESSAGE_AGE;
}
public class Amazon.Util.AWSPublicIpAddressRange : object {
    [CompilerGeneratedAttribute]
private string <IpPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    public string IpPrefix { get; internal set; }
    public string Region { get; internal set; }
    public string Service { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_IpPrefix();
    [CompilerGeneratedAttribute]
internal void set_IpPrefix(string value);
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
internal void set_Region(string value);
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
internal void set_Service(string value);
}
public class Amazon.Util.AWSPublicIpAddressRanges : object {
    public static string AmazonServiceKey;
    public static string EC2ServiceKey;
    public static string CloudFrontServiceKey;
    public static string Route53ServiceKey;
    public static string Route53HealthChecksServiceKey;
    public static string GlobalRegionIdentifier;
    private static Uri IpAddressRangeEndpoint;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AWSPublicIpAddressRange> <AllAddressRanges>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<JsonData, AWSPublicIpAddressRange> CS$<>9__CachedAnonymousMethodDelegate8;
    public IEnumerable`1<string> ServiceKeys { get; }
    public DateTime CreateDate { get; private set; }
    public IEnumerable`1<AWSPublicIpAddressRange> AllAddressRanges { get; private set; }
    private static AWSPublicIpAddressRanges();
    public IEnumerable`1<string> get_ServiceKeys();
    [CompilerGeneratedAttribute]
public DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
private void set_CreateDate(DateTime value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AWSPublicIpAddressRange> get_AllAddressRanges();
    [CompilerGeneratedAttribute]
private void set_AllAddressRanges(IEnumerable`1<AWSPublicIpAddressRange> value);
    public IEnumerable`1<AWSPublicIpAddressRange> AddressRangesByServiceKey(string serviceKey);
    public IEnumerable`1<AWSPublicIpAddressRange> AddressRangesByRegion(string regionIdentifier);
    public static AWSPublicIpAddressRanges Load();
    private static AWSPublicIpAddressRanges Parse(string fileContent);
    [CompilerGeneratedAttribute]
private static AWSPublicIpAddressRange <Parse>b__7(JsonData range);
}
public static class Amazon.Util.AWSSDKUtils : object {
    internal static string DefaultRegion;
    internal static string DefaultGovRegion;
    internal static string SDKVersionNumber;
    internal static int DefaultMaxRetry;
    private static int DefaultConnectionLimit;
    private static int DefaultMaxIdleTime;
    internal static int DefaultBufferSize;
    internal static long DefaultProgressUpdateInterval;
    public static string UserAgentHeader;
    public static string ValidUrlCharacters;
    public static string ValidUrlCharactersRFC1738;
    public static string UrlEncodedContent;
    public static string GMTDateFormat;
    public static string ISO8601DateFormat;
    public static string ISO8601DateFormatNoMS;
    public static string ISO8601BasicDateTimeFormat;
    public static string ISO8601BasicDateFormat;
    public static string RFC822DateFormat;
    private static string _userAgentBaseName;
    internal static DateTime EPOCH_START;
    internal static Dictionary`2<int, string> RFCEncodingSchemes;
    private static string ValidPathCharacters;
    private static string _versionNumber;
    private static string _sdkUserAgent;
    private static string _customData;
    private static BackgroundInvoker _dispatcher;
    public static string SDKUserAgent { get; }
    private static BackgroundInvoker Dispatcher { get; }
    public static string FormattedCurrentTimestampGMT { get; }
    public static string FormattedCurrentTimestampISO8601 { get; }
    public static string FormattedCurrentTimestampRFC822 { get; }
    public static DateTime CorrectedUtcNow { get; }
    private static AWSSDKUtils();
    private static string DetermineRuntime();
    private static string DetermineFramework();
    private static string DetermineOSVersion();
    internal static void ForceCanonicalPathAndQuery(Uri uri);
    internal static void PreserveStackTrace(Exception exception);
    internal static int GetConnectionLimit(Nullable`1<int> clientConfigValue);
    public static void Sleep(int ms);
    private static string DetermineValidPathCharacters();
    public static string get_SDKUserAgent();
    public static void SetUserAgent(string productName, string versionNumber);
    public static void SetUserAgent(string productName, string versionNumber, string customData);
    private static void BuildUserAgentString();
    internal static void SetIsSet(bool isSet, Nullable`1& field);
    internal static void SetIsSet(bool isSet, List`1& field);
    internal static void SetIsSet(bool isSet, Dictionary`2& field);
    internal static bool GetIsSet(Nullable`1<T> field);
    internal static bool GetIsSet(List`1<T> field);
    internal static bool GetIsSet(Dictionary`2<TKey, TVvalue> field);
    internal static string GetExtension(string path);
    private static bool IsPathSeparator(char ch);
    internal static string CalculateStringToSignV2(IDictionary`2<string, string> parameters, string serviceUrl);
    internal static string GetParametersAsString(IDictionary`2<string, string> parameters);
    internal static string Join(List`1<string> strings);
    public static string DetermineRegion(string url);
    public static string DetermineService(string url);
    public static DateTime ConvertFromUnixEpochSeconds(int seconds);
    public static int ConvertToUnixEpochSeconds(DateTime dateTime);
    public static double ConvertToUnixEpochMilliSeconds(DateTime dateTime);
    internal static string ToHex(Byte[] data, bool lowercase);
    internal static void InvokeInBackground(EventHandler`1<T> handler, T args, object sender);
    private static BackgroundInvoker get_Dispatcher();
    internal static Dictionary`2<string, string> ParseQueryParameters(string url);
    internal static void AddToDictionary(Dictionary`2<TKey, TValue> dictionary, TKey key, TValue value);
    internal static void FillDictionary(IEnumerable`1<T> items, Func`2<T, TKey> keyGenerator, Func`2<T, TValue> valueGenerator, Dictionary`2<TKey, TValue> targetDictionary);
    internal static Dictionary`2<TKey, TValue> ToDictionary(IEnumerable`1<T> items, Func`2<T, TKey> keyGenerator, Func`2<T, TValue> valueGenerator, IEqualityComparer`1<TKey> comparer);
    internal static bool TryFindByValue(IDictionary`2<TKey, TValue> dictionary, TValue value, IEqualityComparer`1<TValue> valueComparer, TKey& key);
    internal static MemoryStream GenerateMemoryStreamFromString(string s);
    internal static void CopyStream(Stream source, Stream destination, int bufferSize);
    public static string get_FormattedCurrentTimestampGMT();
    public static string get_FormattedCurrentTimestampISO8601();
    public static string GetFormattedTimestampISO8601(int minutesFromNow);
    public static string get_FormattedCurrentTimestampRFC822();
    public static string GetFormattedTimestampRFC822(int minutesFromNow);
    public static string UrlEncode(string data, bool path);
    internal static string UrlEncode(int rfcNumber, string data, bool path);
    public static void Sleep(TimeSpan ts);
    internal static string BytesToHexString(Byte[] bytes);
    internal static Byte[] HexStringToBytes(string hex);
    public static DateTime get_CorrectedUtcNow();
}
internal class Amazon.Util.CircularReferenceTracking : object {
    private object referenceTrackersLock;
    private Stack`1<Tracker> referenceTrackers;
    public Tracker Track(object target);
    private void PopTracker(Tracker tracker);
    private bool TrackerExists(object target);
}
internal static class Amazon.Util.CryptoUtilFactory : object {
    private static CryptoUtil util;
    internal static ICryptoUtil CryptoInstance { get; }
    private static CryptoUtilFactory();
    internal static ICryptoUtil get_CryptoInstance();
}
public class Amazon.Util.DynamoDBConfig : object {
    [CompilerGeneratedAttribute]
private ConversionSchema <ConversionSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBContextConfig <Context>k__BackingField;
    internal ConversionSchema ConversionSchema { get; internal set; }
    public DynamoDBContextConfig Context { get; private set; }
    [CompilerGeneratedAttribute]
internal ConversionSchema get_ConversionSchema();
    [CompilerGeneratedAttribute]
internal void set_ConversionSchema(ConversionSchema value);
    [CompilerGeneratedAttribute]
public DynamoDBContextConfig get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(DynamoDBContextConfig value);
}
public class Amazon.Util.DynamoDBContextConfig : object {
    [CompilerGeneratedAttribute]
private string <TableNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <TableAliases>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<Type, TypeMapping> <TypeMappings>k__BackingField;
    public string TableNamePrefix { get; public set; }
    public Dictionary`2<string, string> TableAliases { get; private set; }
    public Dictionary`2<Type, TypeMapping> TypeMappings { get; private set; }
    [CompilerGeneratedAttribute]
public string get_TableNamePrefix();
    [CompilerGeneratedAttribute]
public void set_TableNamePrefix(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_TableAliases();
    [CompilerGeneratedAttribute]
private void set_TableAliases(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<Type, TypeMapping> get_TypeMappings();
    [CompilerGeneratedAttribute]
private void set_TypeMappings(Dictionary`2<Type, TypeMapping> value);
    public void AddAlias(TableAlias tableAlias);
    public void AddMapping(TypeMapping typeMapping);
}
public class Amazon.Util.EC2Config : object {
    [CompilerGeneratedAttribute]
private bool <UseSignatureVersion4>k__BackingField;
    public bool UseSignatureVersion4 { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UseSignatureVersion4();
    [CompilerGeneratedAttribute]
public void set_UseSignatureVersion4(bool value);
}
public abstract class Amazon.Util.HeaderKeys : object {
    public static string IfModifiedSinceHeader;
    public static string IfMatchHeader;
    public static string IfNoneMatchHeader;
    public static string IfUnmodifiedSinceHeader;
    public static string ContentRangeHeader;
    public static string ContentTypeHeader;
    public static string ContentLengthHeader;
    public static string ContentMD5Header;
    public static string ContentEncodingHeader;
    public static string ContentDispositionHeader;
    public static string ETagHeader;
    public static string Expires;
    public static string AuthorizationHeader;
    public static string HostHeader;
    public static string UserAgentHeader;
    public static string LocationHeader;
    public static string DateHeader;
    public static string RangeHeader;
    public static string ExpectHeader;
    public static string AcceptHeader;
    public static string ConnectionHeader;
    public static string RequestIdHeader;
    public static string XAmzId2Header;
    public static string XAmzRequestIdHeader;
    public static string XAmzDateHeader;
    public static string XAmzSignedHeadersHeader;
    public static string XAmzContentSha256Header;
    public static string XAmzDecodedContentLengthHeader;
    public static string XAmzSecurityTokenHeader;
    public static string XAmzAuthorizationHeader;
    public static string XAmzNonceHeader;
    public static string XAmzServerSideEncryptionHeader;
    public static string XAmzServerSideEncryptionAwsKmsKeyIdHeader;
    public static string XAmzSSECustomerAlgorithmHeader;
    public static string XAmzSSECustomerKeyHeader;
    public static string XAmzSSECustomerKeyMD5Header;
    public static string XAmzCopySourceSSECustomerAlgorithmHeader;
    public static string XAmzCopySourceSSECustomerKeyHeader;
    public static string XAmzCopySourceSSECustomerKeyMD5Header;
    public static string XAmzStorageClassHeader;
    public static string XAmzWebsiteRedirectLocationHeader;
    public static string XAmzContentLengthHeader;
    public static string XAmzAclHeader;
    public static string XAmzCopySourceHeader;
    public static string XAmzCopySourceRangeHeader;
    public static string XAmzCopySourceIfMatchHeader;
    public static string XAmzCopySourceIfModifiedSinceHeader;
    public static string XAmzCopySourceIfNoneMatchHeader;
    public static string XAmzCopySourceIfUnmodifiedSinceHeader;
    public static string XAmzMetadataDirectiveHeader;
    public static string XAmzMfaHeader;
}
internal interface Amazon.Util.ICryptoUtil {
    public abstract virtual string HMACSign(string data, string key, SigningAlgorithm algorithmName);
    public abstract virtual string HMACSign(Byte[] data, string key, SigningAlgorithm algorithmName);
    public abstract virtual Byte[] ComputeSHA256Hash(Byte[] data);
    public abstract virtual Byte[] ComputeSHA256Hash(Stream steam);
    public abstract virtual Byte[] ComputeMD5Hash(Byte[] data);
    public abstract virtual Byte[] ComputeMD5Hash(Stream steam);
    public abstract virtual Byte[] HMACSignBinary(Byte[] data, Byte[] key, SigningAlgorithm algorithmName);
}
internal interface Amazon.Util.ITypeInfo {
    public Type BaseType { get; }
    public Type Type { get; }
    public Assembly Assembly { get; }
    public bool IsArray { get; }
    public bool IsEnum { get; }
    public bool IsClass { get; }
    public bool IsValueType { get; }
    public bool IsInterface { get; }
    public bool IsAbstract { get; }
    public string FullName { get; }
    public string Name { get; }
    public bool IsGenericTypeDefinition { get; }
    public bool IsGenericType { get; }
    public bool ContainsGenericParameters { get; }
    public abstract virtual Type get_BaseType();
    public abstract virtual Type get_Type();
    public abstract virtual Assembly get_Assembly();
    public abstract virtual bool get_IsArray();
    public abstract virtual Array ArrayCreateInstance(int length);
    public abstract virtual Type GetInterface(string name);
    public abstract virtual Type[] GetInterfaces();
    public abstract virtual IEnumerable`1<PropertyInfo> GetProperties();
    public abstract virtual IEnumerable`1<FieldInfo> GetFields();
    public abstract virtual FieldInfo GetField(string name);
    public abstract virtual MethodInfo GetMethod(string name);
    public abstract virtual MethodInfo GetMethod(string name, ITypeInfo[] paramTypes);
    public abstract virtual MemberInfo[] GetMembers();
    public abstract virtual ConstructorInfo GetConstructor(ITypeInfo[] paramTypes);
    public abstract virtual PropertyInfo GetProperty(string name);
    public abstract virtual bool IsAssignableFrom(ITypeInfo typeInfo);
    public abstract virtual bool get_IsEnum();
    public abstract virtual bool get_IsClass();
    public abstract virtual bool get_IsValueType();
    public abstract virtual bool get_IsInterface();
    public abstract virtual bool get_IsAbstract();
    public abstract virtual object EnumToObject(object value);
    public abstract virtual ITypeInfo EnumGetUnderlyingType();
    public abstract virtual object CreateInstance();
    public abstract virtual ITypeInfo GetElementType();
    public abstract virtual bool IsType(Type type);
    public abstract virtual string get_FullName();
    public abstract virtual string get_Name();
    public abstract virtual bool get_IsGenericTypeDefinition();
    public abstract virtual bool get_IsGenericType();
    public abstract virtual bool get_ContainsGenericParameters();
    public abstract virtual Type GetGenericTypeDefinition();
    public abstract virtual Type[] GetGenericArguments();
    public abstract virtual Object[] GetCustomAttributes(bool inherit);
    public abstract virtual Object[] GetCustomAttributes(ITypeInfo attributeType, bool inherit);
}
public class Amazon.Util.LoggingConfig : object {
    public static int DefaultLogResponsesSizeLimit;
    private LoggingOptions _logTo;
    [CompilerGeneratedAttribute]
private ResponseLoggingOption <LogResponses>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LogResponsesSizeLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LogMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private LogMetricsFormatOption <LogMetricsFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private IMetricsFormatter <LogMetricsCustomFormatter>k__BackingField;
    public LoggingOptions LogTo { get; public set; }
    public ResponseLoggingOption LogResponses { get; public set; }
    public int LogResponsesSizeLimit { get; public set; }
    public bool LogMetrics { get; public set; }
    public LogMetricsFormatOption LogMetricsFormat { get; public set; }
    public IMetricsFormatter LogMetricsCustomFormatter { get; public set; }
    private static LoggingConfig();
    public LoggingOptions get_LogTo();
    public void set_LogTo(LoggingOptions value);
    [CompilerGeneratedAttribute]
public ResponseLoggingOption get_LogResponses();
    [CompilerGeneratedAttribute]
public void set_LogResponses(ResponseLoggingOption value);
    [CompilerGeneratedAttribute]
public int get_LogResponsesSizeLimit();
    [CompilerGeneratedAttribute]
public void set_LogResponsesSizeLimit(int value);
    [CompilerGeneratedAttribute]
public bool get_LogMetrics();
    [CompilerGeneratedAttribute]
public void set_LogMetrics(bool value);
    [CompilerGeneratedAttribute]
public LogMetricsFormatOption get_LogMetricsFormat();
    [CompilerGeneratedAttribute]
public void set_LogMetricsFormat(LogMetricsFormatOption value);
    [CompilerGeneratedAttribute]
public IMetricsFormatter get_LogMetricsCustomFormatter();
    [CompilerGeneratedAttribute]
public void set_LogMetricsCustomFormatter(IMetricsFormatter value);
}
internal class Amazon.Util.Marker`1 : object {
    private List`1<U> data;
    private string nextToken;
    internal List`1<U> Data { get; }
    internal string NextToken { get; }
    internal Marker`1(List`1<U> data, string nextToken);
    internal List`1<U> get_Data();
    internal string get_NextToken();
}
internal class Amazon.Util.PaginatedResource`1 : object {
    internal Func`2<string, Marker`1<U>> fetcher;
    internal PaginatedResource`1(Func`2<string, Marker`1<U>> fetcher);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<U> GetEnumerator();
}
internal static class Amazon.Util.PaginatedResourceFactory : object {
    internal static object Create(PaginatedResourceInfo pri);
    private static PaginatedResource`1<ItemType> Create(object client, string methodName, object request, string tokenRequestPropertyPath, string tokenResponsePropertyPath, string itemListPropertyPath);
    private static PaginatedResource`1<ItemType> Create(Func`2<RequestType, ResponseType> call, RequestType request, string tokenRequestPropertyPath, string tokenResponsePropertyPath, string itemListPropertyPath);
    private static void SetPropertyValueAtPath(object instance, string path, string value);
    private static T GetPropertyValueFromPath(object instance, string path);
    internal static Type GetPropertyTypeFromPath(Type start, string path);
    private static Type GetFuncType();
    internal static T Cast(object o);
}
internal class Amazon.Util.PaginatedResourceInfo : object {
    private string tokenRequestPropertyPath;
    private string tokenResponsePropertyPath;
    [CompilerGeneratedAttribute]
private object <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ItemListPropertyPath>k__BackingField;
    internal object Client { get; internal set; }
    internal string MethodName { get; internal set; }
    internal object Request { get; internal set; }
    internal string TokenRequestPropertyPath { get; internal set; }
    internal string TokenResponsePropertyPath { get; internal set; }
    internal string ItemListPropertyPath { get; internal set; }
    [CompilerGeneratedAttribute]
internal object get_Client();
    [CompilerGeneratedAttribute]
internal void set_Client(object value);
    [CompilerGeneratedAttribute]
internal string get_MethodName();
    [CompilerGeneratedAttribute]
internal void set_MethodName(string value);
    [CompilerGeneratedAttribute]
internal object get_Request();
    [CompilerGeneratedAttribute]
internal void set_Request(object value);
    internal string get_TokenRequestPropertyPath();
    internal void set_TokenRequestPropertyPath(string value);
    internal string get_TokenResponsePropertyPath();
    internal void set_TokenResponsePropertyPath(string value);
    [CompilerGeneratedAttribute]
internal string get_ItemListPropertyPath();
    [CompilerGeneratedAttribute]
internal void set_ItemListPropertyPath(string value);
    internal PaginatedResourceInfo WithClient(object client);
    internal PaginatedResourceInfo WithMethodName(string methodName);
    internal PaginatedResourceInfo WithRequest(object request);
    internal PaginatedResourceInfo WithTokenRequestPropertyPath(string tokenRequestPropertyPath);
    internal PaginatedResourceInfo WithTokenResponsePropertyPath(string tokenResponsePropertyPath);
    internal PaginatedResourceInfo WithItemListPropertyPath(string itemListPropertyPath);
    internal void Verify();
    private static void VerifyProperty(string propName, Type start, string path, Type expectedType);
    private static void VerifyProperty(string propName, Type start, string path, Type expectedType, bool skipTypecheck);
}
internal class Amazon.Util.PaginationEnumerator`1 : object {
    private PaginatedResource`1<U> paginatedResource;
    private int position;
    private static Marker`1<U> blankSpot;
    private Marker`1<U> currentSpot;
    private bool started;
    private object System.Collections.IEnumerator.Current { get; }
    public U Current { get; }
    internal PaginationEnumerator`1(PaginatedResource`1<U> paginatedResource);
    private static PaginationEnumerator`1();
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
    private sealed virtual override object System.Collections.IEnumerator.get_Current();
    public sealed virtual U get_Current();
    public sealed virtual void Dispose();
}
public class Amazon.Util.PropertyConfig : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Attribute>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Ignore>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Converter>k__BackingField;
    public string Name { get; public set; }
    public string Attribute { get; public set; }
    public bool Ignore { get; public set; }
    public bool Version { get; public set; }
    public Type Converter { get; public set; }
    public PropertyConfig(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Attribute();
    [CompilerGeneratedAttribute]
public void set_Attribute(string value);
    [CompilerGeneratedAttribute]
public bool get_Ignore();
    [CompilerGeneratedAttribute]
public void set_Ignore(bool value);
    [CompilerGeneratedAttribute]
public bool get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(bool value);
    [CompilerGeneratedAttribute]
public Type get_Converter();
    [CompilerGeneratedAttribute]
public void set_Converter(Type value);
}
public class Amazon.Util.ProxyConfig : object {
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    public string Host { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
}
internal class Amazon.Util.RootConfig : object {
    private static string _rootAwsSectionName;
    [CompilerGeneratedAttribute]
private LoggingConfig <Logging>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBConfig <DynamoDB>k__BackingField;
    [CompilerGeneratedAttribute]
private S3Config <S3>k__BackingField;
    [CompilerGeneratedAttribute]
private EC2Config <EC2>k__BackingField;
    [CompilerGeneratedAttribute]
private ProxyConfig <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndpointDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfilesLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CorrectForClockSkew>k__BackingField;
    public LoggingConfig Logging { get; private set; }
    public DynamoDBConfig DynamoDB { get; private set; }
    public S3Config S3 { get; private set; }
    public EC2Config EC2 { get; private set; }
    public ProxyConfig Proxy { get; private set; }
    public string EndpointDefinition { get; public set; }
    public string Region { get; public set; }
    public string ProfileName { get; public set; }
    public string ProfilesLocation { get; public set; }
    public RegionEndpoint RegionEndpoint { get; public set; }
    public bool CorrectForClockSkew { get; public set; }
    [CompilerGeneratedAttribute]
public LoggingConfig get_Logging();
    [CompilerGeneratedAttribute]
private void set_Logging(LoggingConfig value);
    [CompilerGeneratedAttribute]
public DynamoDBConfig get_DynamoDB();
    [CompilerGeneratedAttribute]
private void set_DynamoDB(DynamoDBConfig value);
    [CompilerGeneratedAttribute]
public S3Config get_S3();
    [CompilerGeneratedAttribute]
private void set_S3(S3Config value);
    [CompilerGeneratedAttribute]
public EC2Config get_EC2();
    [CompilerGeneratedAttribute]
private void set_EC2(EC2Config value);
    [CompilerGeneratedAttribute]
public ProxyConfig get_Proxy();
    [CompilerGeneratedAttribute]
private void set_Proxy(ProxyConfig value);
    [CompilerGeneratedAttribute]
public string get_EndpointDefinition();
    [CompilerGeneratedAttribute]
public void set_EndpointDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(string value);
    [CompilerGeneratedAttribute]
public string get_ProfileName();
    [CompilerGeneratedAttribute]
public void set_ProfileName(string value);
    [CompilerGeneratedAttribute]
public string get_ProfilesLocation();
    [CompilerGeneratedAttribute]
public void set_ProfilesLocation(string value);
    public RegionEndpoint get_RegionEndpoint();
    public void set_RegionEndpoint(RegionEndpoint value);
    [CompilerGeneratedAttribute]
public bool get_CorrectForClockSkew();
    [CompilerGeneratedAttribute]
public void set_CorrectForClockSkew(bool value);
    private static string Choose(string a, string b);
}
public class Amazon.Util.S3Config : object {
    [CompilerGeneratedAttribute]
private bool <UseSignatureVersion4>k__BackingField;
    public bool UseSignatureVersion4 { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UseSignatureVersion4();
    [CompilerGeneratedAttribute]
public void set_UseSignatureVersion4(bool value);
}
public class Amazon.Util.TableAlias : object {
    [CompilerGeneratedAttribute]
private string <FromTable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToTable>k__BackingField;
    public string FromTable { get; public set; }
    public string ToTable { get; public set; }
    public TableAlias(string fromTable, string toTable);
    [CompilerGeneratedAttribute]
public string get_FromTable();
    [CompilerGeneratedAttribute]
public void set_FromTable(string value);
    [CompilerGeneratedAttribute]
public string get_ToTable();
    [CompilerGeneratedAttribute]
public void set_ToTable(string value);
}
internal static class Amazon.Util.TypeFactory : object {
    public static ITypeInfo[] EmptyTypes;
    private static TypeFactory();
    public static ITypeInfo GetTypeInfo(Type type);
}
public class Amazon.Util.TypeMapping : object {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetTable>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, PropertyConfig> <PropertyConfigs>k__BackingField;
    public Type Type { get; public set; }
    public string TargetTable { get; public set; }
    public Dictionary`2<string, PropertyConfig> PropertyConfigs { get; private set; }
    public TypeMapping(Type type, string targetTable);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
    [CompilerGeneratedAttribute]
public string get_TargetTable();
    [CompilerGeneratedAttribute]
public void set_TargetTable(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, PropertyConfig> get_PropertyConfigs();
    [CompilerGeneratedAttribute]
private void set_PropertyConfigs(Dictionary`2<string, PropertyConfig> value);
    public void AddProperty(PropertyConfig propertyConfig);
}
internal class ThirdParty.Ionic.Zlib.CRC32 : object {
    private static int BUFFER_SIZE;
    private long _TotalBytesRead;
    private static UInt32[] crc32Table;
    private UInt32 _RunningCrc32Result;
    public long TotalBytesRead { get; }
    public int Crc32Result { get; }
    private static CRC32();
    public long get_TotalBytesRead();
    public int get_Crc32Result();
    public int GetCrc32(Stream input);
    public int GetCrc32AndCopy(Stream input, Stream output);
    public int ComputeCrc32(int W, byte B);
    internal int _InternalComputeCrc32(UInt32 W, byte B);
    public void SlurpBlock(Byte[] block, int offset, int count);
}
public class ThirdParty.Ionic.Zlib.CrcCalculatorStream : Stream {
    private Stream _InnerStream;
    private CRC32 _Crc32;
    private long _length;
    public long TotalBytesSlurped { get; }
    public int Crc32 { get; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public CrcCalculatorStream(Stream stream);
    public CrcCalculatorStream(Stream stream, long length);
    public long get_TotalBytesSlurped();
    public int get_Crc32();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual void Flush();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
}
internal class ThirdParty.Json.LitJson.ArrayMetadata : ValueType {
    private Type element_type;
    private bool is_array;
    private bool is_list;
    public Type ElementType { get; public set; }
    public bool IsArray { get; public set; }
    public bool IsList { get; public set; }
    public Type get_ElementType();
    public void set_ElementType(Type value);
    public bool get_IsArray();
    public void set_IsArray(bool value);
    public bool get_IsList();
    public void set_IsList(bool value);
}
internal enum ThirdParty.Json.LitJson.Condition : Enum {
    public int value__;
    public static Condition InArray;
    public static Condition InObject;
    public static Condition NotAProperty;
    public static Condition Property;
    public static Condition Value;
}
internal class ThirdParty.Json.LitJson.ExporterFunc : MulticastDelegate {
    public ExporterFunc(object object, IntPtr method);
    public virtual void Invoke(object obj, JsonWriter writer);
    public virtual IAsyncResult BeginInvoke(object obj, JsonWriter writer, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class ThirdParty.Json.LitJson.ExporterFunc`1 : MulticastDelegate {
    public ExporterFunc`1(object object, IntPtr method);
    public virtual void Invoke(T obj, JsonWriter writer);
    public virtual IAsyncResult BeginInvoke(T obj, JsonWriter writer, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class ThirdParty.Json.LitJson.FsmContext : object {
    public bool Return;
    public int NextState;
    public Lexer L;
    public int StateStack;
}
public interface ThirdParty.Json.LitJson.IJsonWrapper {
    public bool IsArray { get; }
    public bool IsBoolean { get; }
    public bool IsDouble { get; }
    public bool IsInt { get; }
    public bool IsLong { get; }
    public bool IsObject { get; }
    public bool IsString { get; }
    public abstract virtual bool get_IsArray();
    public abstract virtual bool get_IsBoolean();
    public abstract virtual bool get_IsDouble();
    public abstract virtual bool get_IsInt();
    public abstract virtual bool get_IsLong();
    public abstract virtual bool get_IsObject();
    public abstract virtual bool get_IsString();
    public abstract virtual bool GetBoolean();
    public abstract virtual double GetDouble();
    public abstract virtual int GetInt();
    public abstract virtual JsonType GetJsonType();
    public abstract virtual long GetLong();
    public abstract virtual string GetString();
    public abstract virtual void SetBoolean(bool val);
    public abstract virtual void SetDouble(double val);
    public abstract virtual void SetInt(int val);
    public abstract virtual void SetJsonType(JsonType type);
    public abstract virtual void SetLong(long val);
    public abstract virtual void SetString(string val);
    public abstract virtual string ToJson();
    public abstract virtual void ToJson(JsonWriter writer);
}
internal class ThirdParty.Json.LitJson.ImporterFunc : MulticastDelegate {
    public ImporterFunc(object object, IntPtr method);
    public virtual object Invoke(object input);
    public virtual IAsyncResult BeginInvoke(object input, AsyncCallback callback, object object);
    public virtual object EndInvoke(IAsyncResult result);
}
public class ThirdParty.Json.LitJson.ImporterFunc`2 : MulticastDelegate {
    public ImporterFunc`2(object object, IntPtr method);
    public virtual TValue Invoke(TJson input);
    public virtual IAsyncResult BeginInvoke(TJson input, AsyncCallback callback, object object);
    public virtual TValue EndInvoke(IAsyncResult result);
}
[DefaultMemberAttribute("Item")]
public class ThirdParty.Json.LitJson.JsonData : object {
    private IList`1<JsonData> inst_array;
    private bool inst_boolean;
    private double inst_double;
    private int inst_int;
    private long inst_long;
    private IDictionary`2<string, JsonData> inst_object;
    private string inst_string;
    private string json;
    private JsonType type;
    private IList`1<KeyValuePair`2<string, JsonData>> object_list;
    public int Count { get; }
    public bool IsArray { get; }
    public bool IsBoolean { get; }
    public bool IsDouble { get; }
    public bool IsInt { get; }
    public bool IsLong { get; }
    public bool IsObject { get; }
    public bool IsString { get; }
    private int System.Collections.ICollection.Count { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    private bool System.Collections.IDictionary.IsFixedSize { get; }
    private bool System.Collections.IDictionary.IsReadOnly { get; }
    private ICollection System.Collections.IDictionary.Keys { get; }
    private ICollection System.Collections.IDictionary.Values { get; }
    private bool ThirdParty.Json.LitJson.IJsonWrapper.IsArray { get; }
    private bool ThirdParty.Json.LitJson.IJsonWrapper.IsBoolean { get; }
    private bool ThirdParty.Json.LitJson.IJsonWrapper.IsDouble { get; }
    private bool ThirdParty.Json.LitJson.IJsonWrapper.IsInt { get; }
    private bool ThirdParty.Json.LitJson.IJsonWrapper.IsLong { get; }
    private bool ThirdParty.Json.LitJson.IJsonWrapper.IsObject { get; }
    private bool ThirdParty.Json.LitJson.IJsonWrapper.IsString { get; }
    private bool System.Collections.IList.IsFixedSize { get; }
    private bool System.Collections.IList.IsReadOnly { get; }
    private object System.Collections.IDictionary.Item { get; private set; }
    private object Amazon.MissingTypes.IOrderedDictionary.Item { get; private set; }
    private object System.Collections.IList.Item { get; private set; }
    public IEnumerable`1<string> PropertyNames { get; }
    public JsonData Item { get; public set; }
    public JsonData Item { get; public set; }
    public JsonData(bool boolean);
    public JsonData(double number);
    public JsonData(int number);
    public JsonData(long number);
    public JsonData(object obj);
    public JsonData(string str);
    public int get_Count();
    public bool get_IsArray();
    public bool get_IsBoolean();
    public bool get_IsDouble();
    public bool get_IsInt();
    public bool get_IsLong();
    public bool get_IsObject();
    public bool get_IsString();
    private sealed virtual override int System.Collections.ICollection.get_Count();
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    private sealed virtual override bool System.Collections.IDictionary.get_IsFixedSize();
    private sealed virtual override bool System.Collections.IDictionary.get_IsReadOnly();
    private sealed virtual override ICollection System.Collections.IDictionary.get_Keys();
    private sealed virtual override ICollection System.Collections.IDictionary.get_Values();
    private sealed virtual override bool ThirdParty.Json.LitJson.IJsonWrapper.get_IsArray();
    private sealed virtual override bool ThirdParty.Json.LitJson.IJsonWrapper.get_IsBoolean();
    private sealed virtual override bool ThirdParty.Json.LitJson.IJsonWrapper.get_IsDouble();
    private sealed virtual override bool ThirdParty.Json.LitJson.IJsonWrapper.get_IsInt();
    private sealed virtual override bool ThirdParty.Json.LitJson.IJsonWrapper.get_IsLong();
    private sealed virtual override bool ThirdParty.Json.LitJson.IJsonWrapper.get_IsObject();
    private sealed virtual override bool ThirdParty.Json.LitJson.IJsonWrapper.get_IsString();
    private sealed virtual override bool System.Collections.IList.get_IsFixedSize();
    private sealed virtual override bool System.Collections.IList.get_IsReadOnly();
    private sealed virtual override object System.Collections.IDictionary.get_Item(object key);
    private sealed virtual override void System.Collections.IDictionary.set_Item(object key, object value);
    private sealed virtual override object Amazon.MissingTypes.IOrderedDictionary.get_Item(int idx);
    private sealed virtual override void Amazon.MissingTypes.IOrderedDictionary.set_Item(int idx, object value);
    private sealed virtual override object System.Collections.IList.get_Item(int index);
    private sealed virtual override void System.Collections.IList.set_Item(int index, object value);
    public IEnumerable`1<string> get_PropertyNames();
    public JsonData get_Item(string prop_name);
    public void set_Item(string prop_name, JsonData value);
    public JsonData get_Item(int index);
    public void set_Item(int index, JsonData value);
    public static JsonData op_Implicit(bool data);
    public static JsonData op_Implicit(double data);
    public static JsonData op_Implicit(int data);
    public static JsonData op_Implicit(long data);
    public static JsonData op_Implicit(string data);
    public static bool op_Explicit(JsonData data);
    public static double op_Explicit(JsonData data);
    public static int op_Explicit(JsonData data);
    public static long op_Explicit(JsonData data);
    public static string op_Explicit(JsonData data);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    private sealed virtual override void System.Collections.IDictionary.Add(object key, object value);
    private sealed virtual override void System.Collections.IDictionary.Clear();
    private sealed virtual override bool System.Collections.IDictionary.Contains(object key);
    private sealed virtual override IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator();
    private sealed virtual override void System.Collections.IDictionary.Remove(object key);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override bool ThirdParty.Json.LitJson.IJsonWrapper.GetBoolean();
    private sealed virtual override double ThirdParty.Json.LitJson.IJsonWrapper.GetDouble();
    private sealed virtual override int ThirdParty.Json.LitJson.IJsonWrapper.GetInt();
    private sealed virtual override long ThirdParty.Json.LitJson.IJsonWrapper.GetLong();
    private sealed virtual override string ThirdParty.Json.LitJson.IJsonWrapper.GetString();
    private sealed virtual override void ThirdParty.Json.LitJson.IJsonWrapper.SetBoolean(bool val);
    private sealed virtual override void ThirdParty.Json.LitJson.IJsonWrapper.SetDouble(double val);
    private sealed virtual override void ThirdParty.Json.LitJson.IJsonWrapper.SetInt(int val);
    private sealed virtual override void ThirdParty.Json.LitJson.IJsonWrapper.SetLong(long val);
    private sealed virtual override void ThirdParty.Json.LitJson.IJsonWrapper.SetString(string val);
    private sealed virtual override string ThirdParty.Json.LitJson.IJsonWrapper.ToJson();
    private sealed virtual override void ThirdParty.Json.LitJson.IJsonWrapper.ToJson(JsonWriter writer);
    private sealed virtual override int System.Collections.IList.Add(object value);
    private sealed virtual override void System.Collections.IList.Clear();
    private sealed virtual override bool System.Collections.IList.Contains(object value);
    private sealed virtual override int System.Collections.IList.IndexOf(object value);
    private sealed virtual override void System.Collections.IList.Insert(int index, object value);
    private sealed virtual override void System.Collections.IList.Remove(object value);
    private sealed virtual override void System.Collections.IList.RemoveAt(int index);
    private sealed virtual override IDictionaryEnumerator Amazon.MissingTypes.IOrderedDictionary.GetEnumerator();
    private sealed virtual override void Amazon.MissingTypes.IOrderedDictionary.Insert(int idx, object key, object value);
    private sealed virtual override void Amazon.MissingTypes.IOrderedDictionary.RemoveAt(int idx);
    private ICollection EnsureCollection();
    private IDictionary EnsureDictionary();
    private IList EnsureList();
    private JsonData ToJsonData(object obj);
    private static void WriteJson(IJsonWrapper obj, JsonWriter writer);
    public int Add(object value);
    public void Clear();
    public sealed virtual bool Equals(JsonData x);
    public sealed virtual JsonType GetJsonType();
    public sealed virtual void SetJsonType(JsonType type);
    public string ToJson();
    public void ToJson(JsonWriter writer);
    public virtual string ToString();
}
public class ThirdParty.Json.LitJson.JsonException : Exception {
    internal JsonException(ParserToken token);
    internal JsonException(ParserToken token, Exception inner_exception);
    internal JsonException(int c);
    internal JsonException(int c, Exception inner_exception);
    public JsonException(string message);
    public JsonException(string message, Exception inner_exception);
}
public class ThirdParty.Json.LitJson.JsonMapper : object {
    private static int max_nesting_depth;
    private static IFormatProvider datetime_format;
    private static IDictionary`2<Type, ExporterFunc> base_exporters_table;
    private static IDictionary`2<Type, ExporterFunc> custom_exporters_table;
    private static IDictionary`2<Type, IDictionary`2<Type, ImporterFunc>> base_importers_table;
    private static IDictionary`2<Type, IDictionary`2<Type, ImporterFunc>> custom_importers_table;
    private static IDictionary`2<Type, ArrayMetadata> array_metadata;
    private static object array_metadata_lock;
    private static IDictionary`2<Type, IDictionary`2<Type, MethodInfo>> conv_ops;
    private static object conv_ops_lock;
    private static IDictionary`2<Type, ObjectMetadata> object_metadata;
    private static object object_metadata_lock;
    private static IDictionary`2<Type, IList`1<PropertyMetadata>> type_properties;
    private static object type_properties_lock;
    private static JsonWriter static_writer;
    private static object static_writer_lock;
    [CompilerGeneratedAttribute]
private static ExporterFunc CS$<>9__CachedAnonymousMethodDelegatee;
    [CompilerGeneratedAttribute]
private static ExporterFunc CS$<>9__CachedAnonymousMethodDelegatef;
    [CompilerGeneratedAttribute]
private static ExporterFunc CS$<>9__CachedAnonymousMethodDelegate10;
    [CompilerGeneratedAttribute]
private static ExporterFunc CS$<>9__CachedAnonymousMethodDelegate11;
    [CompilerGeneratedAttribute]
private static ExporterFunc CS$<>9__CachedAnonymousMethodDelegate12;
    [CompilerGeneratedAttribute]
private static ExporterFunc CS$<>9__CachedAnonymousMethodDelegate13;
    [CompilerGeneratedAttribute]
private static ExporterFunc CS$<>9__CachedAnonymousMethodDelegate14;
    [CompilerGeneratedAttribute]
private static ExporterFunc CS$<>9__CachedAnonymousMethodDelegate15;
    [CompilerGeneratedAttribute]
private static ExporterFunc CS$<>9__CachedAnonymousMethodDelegate16;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate23;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate24;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate25;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate26;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate27;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate28;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate29;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate2a;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate2b;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate2c;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate2d;
    [CompilerGeneratedAttribute]
private static ImporterFunc CS$<>9__CachedAnonymousMethodDelegate2e;
    [CompilerGeneratedAttribute]
private static WrapperFactory CS$<>9__CachedAnonymousMethodDelegate31;
    [CompilerGeneratedAttribute]
private static WrapperFactory CS$<>9__CachedAnonymousMethodDelegate33;
    [CompilerGeneratedAttribute]
private static WrapperFactory CS$<>9__CachedAnonymousMethodDelegate35;
    private static JsonMapper();
    private static void AddArrayMetadata(Type type);
    private static void AddObjectMetadata(Type type);
    private static void AddTypeProperties(Type type);
    private static MethodInfo GetConvOp(Type t1, Type t2);
    private static object ReadValue(Type inst_type, JsonReader reader);
    private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader);
    private static void RegisterBaseExporters();
    private static void RegisterBaseImporters();
    private static void RegisterImporter(IDictionary`2<Type, IDictionary`2<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer);
    private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth);
    public static string ToJson(object obj);
    public static void ToJson(object obj, JsonWriter writer);
    public static JsonData ToObject(JsonReader reader);
    public static JsonData ToObject(TextReader reader);
    public static JsonData ToObject(string json);
    public static T ToObject(JsonReader reader);
    public static T ToObject(TextReader reader);
    public static T ToObject(string json);
    public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader);
    public static IJsonWrapper ToWrapper(WrapperFactory factory, string json);
    public static void RegisterExporter(ExporterFunc`1<T> exporter);
    public static void RegisterImporter(ImporterFunc`2<TJson, TValue> importer);
    public static void UnregisterExporters();
    public static void UnregisterImporters();
    [CompilerGeneratedAttribute]
private static void <RegisterBaseExporters>b__5(object obj, JsonWriter writer);
    [CompilerGeneratedAttribute]
private static void <RegisterBaseExporters>b__6(object obj, JsonWriter writer);
    [CompilerGeneratedAttribute]
private static void <RegisterBaseExporters>b__7(object obj, JsonWriter writer);
    [CompilerGeneratedAttribute]
private static void <RegisterBaseExporters>b__8(object obj, JsonWriter writer);
    [CompilerGeneratedAttribute]
private static void <RegisterBaseExporters>b__9(object obj, JsonWriter writer);
    [CompilerGeneratedAttribute]
private static void <RegisterBaseExporters>b__a(object obj, JsonWriter writer);
    [CompilerGeneratedAttribute]
private static void <RegisterBaseExporters>b__b(object obj, JsonWriter writer);
    [CompilerGeneratedAttribute]
private static void <RegisterBaseExporters>b__c(object obj, JsonWriter writer);
    [CompilerGeneratedAttribute]
private static void <RegisterBaseExporters>b__d(object obj, JsonWriter writer);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__17(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__18(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__19(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__1a(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__1b(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__1c(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__1d(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__1e(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__1f(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__20(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__21(object input);
    [CompilerGeneratedAttribute]
private static object <RegisterBaseImporters>b__22(object input);
    [CompilerGeneratedAttribute]
private static IJsonWrapper <ToObject>b__30();
    [CompilerGeneratedAttribute]
private static IJsonWrapper <ToObject>b__32();
    [CompilerGeneratedAttribute]
private static IJsonWrapper <ToObject>b__34();
}
public class ThirdParty.Json.LitJson.JsonReader : object {
    private Stack`1<JsonToken> depth;
    private int current_input;
    private int current_symbol;
    private bool end_of_json;
    private bool end_of_input;
    private Lexer lexer;
    private bool parser_in_string;
    private bool parser_return;
    private bool read_started;
    private TextReader reader;
    private bool reader_is_owned;
    private object token_value;
    private JsonToken token;
    public bool AllowComments { get; public set; }
    public bool AllowSingleQuotedStrings { get; public set; }
    public bool EndOfInput { get; }
    public bool EndOfJson { get; }
    public JsonToken Token { get; }
    public object Value { get; }
    public JsonReader(string json_text);
    public JsonReader(TextReader reader);
    private JsonReader(TextReader reader, bool owned);
    public bool get_AllowComments();
    public void set_AllowComments(bool value);
    public bool get_AllowSingleQuotedStrings();
    public void set_AllowSingleQuotedStrings(bool value);
    public bool get_EndOfInput();
    public bool get_EndOfJson();
    public JsonToken get_Token();
    public object get_Value();
    private void ProcessNumber(string number);
    private void ProcessSymbol();
    private bool ReadToken();
    public void Close();
    public bool Read();
}
public enum ThirdParty.Json.LitJson.JsonToken : Enum {
    public int value__;
    public static JsonToken None;
    public static JsonToken ObjectStart;
    public static JsonToken PropertyName;
    public static JsonToken ObjectEnd;
    public static JsonToken ArrayStart;
    public static JsonToken ArrayEnd;
    public static JsonToken Int;
    public static JsonToken Long;
    public static JsonToken Double;
    public static JsonToken String;
    public static JsonToken Boolean;
    public static JsonToken Null;
}
public enum ThirdParty.Json.LitJson.JsonType : Enum {
    public int value__;
    public static JsonType None;
    public static JsonType Object;
    public static JsonType Array;
    public static JsonType String;
    public static JsonType Int;
    public static JsonType Long;
    public static JsonType Double;
    public static JsonType Boolean;
}
public class ThirdParty.Json.LitJson.JsonWriter : object {
    private static NumberFormatInfo number_format;
    private WriterContext context;
    private Stack`1<WriterContext> ctx_stack;
    private bool has_reached_end;
    private Char[] hex_seq;
    private int indentation;
    private int indent_value;
    private StringBuilder inst_string_builder;
    private bool pretty_print;
    private bool validate;
    private TextWriter writer;
    public int IndentValue { get; public set; }
    public bool PrettyPrint { get; public set; }
    public TextWriter TextWriter { get; }
    public bool Validate { get; public set; }
    private static JsonWriter();
    public JsonWriter(StringBuilder sb);
    public JsonWriter(TextWriter writer);
    public int get_IndentValue();
    public void set_IndentValue(int value);
    public bool get_PrettyPrint();
    public void set_PrettyPrint(bool value);
    public TextWriter get_TextWriter();
    public bool get_Validate();
    public void set_Validate(bool value);
    private void DoValidation(Condition cond);
    private void Init();
    private static void IntToHex(int n, Char[] hex);
    private void Indent();
    private void Put(string str);
    private void PutNewline();
    private void PutNewline(bool add_comma);
    private void PutString(string str);
    private void Unindent();
    public virtual string ToString();
    public void Reset();
    public void Write(bool boolean);
    public void Write(decimal number);
    public void Write(double number);
    public void Write(int number);
    public void Write(long number);
    public void Write(string str);
    public void WriteRaw(string str);
    [CLSCompliantAttribute("False")]
public void Write(ulong number);
    public void Write(DateTime date);
    public void WriteArrayEnd();
    public void WriteArrayStart();
    public void WriteObjectEnd();
    public void WriteObjectStart();
    public void WritePropertyName(string property_name);
}
internal class ThirdParty.Json.LitJson.Lexer : object {
    private static Int32[] fsm_return_table;
    private static StateHandler[] fsm_handler_table;
    private bool allow_comments;
    private bool allow_single_quoted_strings;
    private bool end_of_input;
    private FsmContext fsm_context;
    private int input_buffer;
    private int input_char;
    private TextReader reader;
    private int state;
    private StringBuilder string_buffer;
    private string string_value;
    private int token;
    private int unichar;
    public bool AllowComments { get; public set; }
    public bool AllowSingleQuotedStrings { get; public set; }
    public bool EndOfInput { get; }
    public int Token { get; }
    public string StringValue { get; }
    private static Lexer();
    public Lexer(TextReader reader);
    public bool get_AllowComments();
    public void set_AllowComments(bool value);
    public bool get_AllowSingleQuotedStrings();
    public void set_AllowSingleQuotedStrings(bool value);
    public bool get_EndOfInput();
    public int get_Token();
    public string get_StringValue();
    private static int HexValue(int digit);
    private static void PopulateFsmTables();
    private static char ProcessEscChar(int esc_char);
    private static bool State1(FsmContext ctx);
    private static bool State2(FsmContext ctx);
    private static bool State3(FsmContext ctx);
    private static bool State4(FsmContext ctx);
    private static bool State5(FsmContext ctx);
    private static bool State6(FsmContext ctx);
    private static bool State7(FsmContext ctx);
    private static bool State8(FsmContext ctx);
    private static bool State9(FsmContext ctx);
    private static bool State10(FsmContext ctx);
    private static bool State11(FsmContext ctx);
    private static bool State12(FsmContext ctx);
    private static bool State13(FsmContext ctx);
    private static bool State14(FsmContext ctx);
    private static bool State15(FsmContext ctx);
    private static bool State16(FsmContext ctx);
    private static bool State17(FsmContext ctx);
    private static bool State18(FsmContext ctx);
    private static bool State19(FsmContext ctx);
    private static bool State20(FsmContext ctx);
    private static bool State21(FsmContext ctx);
    private static bool State22(FsmContext ctx);
    private static bool State23(FsmContext ctx);
    private static bool State24(FsmContext ctx);
    private static bool State25(FsmContext ctx);
    private static bool State26(FsmContext ctx);
    private static bool State27(FsmContext ctx);
    private static bool State28(FsmContext ctx);
    private bool GetChar();
    private int NextChar();
    public bool NextToken();
    private void UngetChar();
}
internal class ThirdParty.Json.LitJson.ObjectMetadata : ValueType {
    private Type element_type;
    private bool is_dictionary;
    private IDictionary`2<string, PropertyMetadata> properties;
    public Type ElementType { get; public set; }
    public bool IsDictionary { get; public set; }
    public IDictionary`2<string, PropertyMetadata> Properties { get; public set; }
    public Type get_ElementType();
    public void set_ElementType(Type value);
    public bool get_IsDictionary();
    public void set_IsDictionary(bool value);
    public IDictionary`2<string, PropertyMetadata> get_Properties();
    public void set_Properties(IDictionary`2<string, PropertyMetadata> value);
}
internal class ThirdParty.Json.LitJson.OrderedDictionaryEnumerator : object {
    private IEnumerator`1<KeyValuePair`2<string, JsonData>> list_enumerator;
    public object Current { get; }
    public DictionaryEntry Entry { get; }
    public object Key { get; }
    public object Value { get; }
    public OrderedDictionaryEnumerator(IEnumerator`1<KeyValuePair`2<string, JsonData>> enumerator);
    public sealed virtual object get_Current();
    public sealed virtual DictionaryEntry get_Entry();
    public sealed virtual object get_Key();
    public sealed virtual object get_Value();
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
}
internal enum ThirdParty.Json.LitJson.ParserToken : Enum {
    public int value__;
    public static ParserToken None;
    public static ParserToken Number;
    public static ParserToken True;
    public static ParserToken False;
    public static ParserToken Null;
    public static ParserToken CharSeq;
    public static ParserToken Char;
    public static ParserToken Text;
    public static ParserToken Object;
    public static ParserToken ObjectPrime;
    public static ParserToken Pair;
    public static ParserToken PairRest;
    public static ParserToken Array;
    public static ParserToken ArrayPrime;
    public static ParserToken Value;
    public static ParserToken ValueRest;
    public static ParserToken String;
    public static ParserToken End;
    public static ParserToken Epsilon;
}
internal class ThirdParty.Json.LitJson.PropertyMetadata : ValueType {
    public MemberInfo Info;
    public bool IsField;
    public Type Type;
}
public class ThirdParty.Json.LitJson.WrapperFactory : MulticastDelegate {
    public WrapperFactory(object object, IntPtr method);
    public virtual IJsonWrapper Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual IJsonWrapper EndInvoke(IAsyncResult result);
}
internal class ThirdParty.Json.LitJson.WriterContext : object {
    public int Count;
    public bool InArray;
    public bool InObject;
    public bool ExpectingValue;
    public int Padding;
}
internal class ThirdParty.MD5.ABCDStruct : ValueType {
    public UInt32 A;
    public UInt32 B;
    public UInt32 C;
    public UInt32 D;
}
internal class ThirdParty.MD5.MD5Core : object {
    public static Byte[] GetHash(string input, Encoding encoding);
    public static Byte[] GetHash(string input);
    public static string GetHashString(Byte[] input);
    public static string GetHashString(string input, Encoding encoding);
    public static string GetHashString(string input);
    public static Byte[] GetHash(Byte[] input);
    internal static Byte[] GetHashFinalBlock(Byte[] input, int ibStart, int cbSize, ABCDStruct ABCD, long len);
    internal static void GetHashBlock(Byte[] input, ABCDStruct& ABCDValue, int ibStart);
    private static UInt32 r1(UInt32 a, UInt32 b, UInt32 c, UInt32 d, UInt32 x, int s, UInt32 t);
    private static UInt32 r2(UInt32 a, UInt32 b, UInt32 c, UInt32 d, UInt32 x, int s, UInt32 t);
    private static UInt32 r3(UInt32 a, UInt32 b, UInt32 c, UInt32 d, UInt32 x, int s, UInt32 t);
    private static UInt32 r4(UInt32 a, UInt32 b, UInt32 c, UInt32 d, UInt32 x, int s, UInt32 t);
    private static UInt32 LSR(UInt32 i, int s);
    private static UInt32[] Converter(Byte[] input, int ibStart);
}
public class ThirdParty.MD5.MD5Managed : HashAlgorithm {
    private Byte[] _data;
    private ABCDStruct _abcd;
    private long _totalLength;
    private int _dataSize;
    public virtual void Initialize();
    protected virtual void HashCore(Byte[] array, int ibStart, int cbSize);
    protected virtual Byte[] HashFinal();
}
