public class Amazon.AccessAnalyzer.AccessCheckPolicyType : ConstantClass {
    public static AccessCheckPolicyType IDENTITY_POLICY;
    public static AccessCheckPolicyType RESOURCE_POLICY;
    public AccessCheckPolicyType(string value);
    private static AccessCheckPolicyType();
    public static AccessCheckPolicyType FindValue(string value);
    public static AccessCheckPolicyType op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.AccessCheckResourceType : ConstantClass {
    public static AccessCheckResourceType AWSDynamoDBStream;
    public static AccessCheckResourceType AWSDynamoDBTable;
    public static AccessCheckResourceType AWSEFSFileSystem;
    public static AccessCheckResourceType AWSIAMAssumeRolePolicyDocument;
    public static AccessCheckResourceType AWSKinesisStream;
    public static AccessCheckResourceType AWSKinesisStreamConsumer;
    public static AccessCheckResourceType AWSKMSKey;
    public static AccessCheckResourceType AWSLambdaFunction;
    public static AccessCheckResourceType AWSOpenSearchServiceDomain;
    public static AccessCheckResourceType AWSS3AccessPoint;
    public static AccessCheckResourceType AWSS3Bucket;
    public static AccessCheckResourceType AWSS3ExpressDirectoryBucket;
    public static AccessCheckResourceType AWSS3Glacier;
    public static AccessCheckResourceType AWSS3OutpostsAccessPoint;
    public static AccessCheckResourceType AWSS3OutpostsBucket;
    public static AccessCheckResourceType AWSSecretsManagerSecret;
    public static AccessCheckResourceType AWSSNSTopic;
    public static AccessCheckResourceType AWSSQSQueue;
    public AccessCheckResourceType(string value);
    private static AccessCheckResourceType();
    public static AccessCheckResourceType FindValue(string value);
    public static AccessCheckResourceType op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.AccessPreviewStatus : ConstantClass {
    public static AccessPreviewStatus COMPLETED;
    public static AccessPreviewStatus CREATING;
    public static AccessPreviewStatus FAILED;
    public AccessPreviewStatus(string value);
    private static AccessPreviewStatus();
    public static AccessPreviewStatus FindValue(string value);
    public static AccessPreviewStatus op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.AccessPreviewStatusReasonCode : ConstantClass {
    public static AccessPreviewStatusReasonCode INTERNAL_ERROR;
    public static AccessPreviewStatusReasonCode INVALID_CONFIGURATION;
    public AccessPreviewStatusReasonCode(string value);
    private static AccessPreviewStatusReasonCode();
    public static AccessPreviewStatusReasonCode FindValue(string value);
    public static AccessPreviewStatusReasonCode op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.AclPermission : ConstantClass {
    public static AclPermission FULL_CONTROL;
    public static AclPermission READ;
    public static AclPermission READ_ACP;
    public static AclPermission WRITE;
    public static AclPermission WRITE_ACP;
    public AclPermission(string value);
    private static AclPermission();
    public static AclPermission FindValue(string value);
    public static AclPermission op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.AmazonAccessAnalyzerClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IAccessAnalyzerPaginatorFactory _paginators;
    public IAccessAnalyzerPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonAccessAnalyzerClient(RegionEndpoint region);
    public AmazonAccessAnalyzerClient(AmazonAccessAnalyzerConfig config);
    public AmazonAccessAnalyzerClient(AWSCredentials credentials);
    public AmazonAccessAnalyzerClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonAccessAnalyzerClient(AWSCredentials credentials, AmazonAccessAnalyzerConfig clientConfig);
    public AmazonAccessAnalyzerClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonAccessAnalyzerClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonAccessAnalyzerClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonAccessAnalyzerConfig clientConfig);
    public AmazonAccessAnalyzerClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonAccessAnalyzerClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonAccessAnalyzerClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonAccessAnalyzerConfig clientConfig);
    private static AmazonAccessAnalyzerClient();
    public sealed virtual IAccessAnalyzerPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual ApplyArchiveRuleResponse ApplyArchiveRule(ApplyArchiveRuleRequest request);
    public virtual Task`1<ApplyArchiveRuleResponse> ApplyArchiveRuleAsync(ApplyArchiveRuleRequest request, CancellationToken cancellationToken);
    internal virtual CancelPolicyGenerationResponse CancelPolicyGeneration(CancelPolicyGenerationRequest request);
    public virtual Task`1<CancelPolicyGenerationResponse> CancelPolicyGenerationAsync(CancelPolicyGenerationRequest request, CancellationToken cancellationToken);
    internal virtual CheckAccessNotGrantedResponse CheckAccessNotGranted(CheckAccessNotGrantedRequest request);
    public virtual Task`1<CheckAccessNotGrantedResponse> CheckAccessNotGrantedAsync(CheckAccessNotGrantedRequest request, CancellationToken cancellationToken);
    internal virtual CheckNoNewAccessResponse CheckNoNewAccess(CheckNoNewAccessRequest request);
    public virtual Task`1<CheckNoNewAccessResponse> CheckNoNewAccessAsync(CheckNoNewAccessRequest request, CancellationToken cancellationToken);
    internal virtual CheckNoPublicAccessResponse CheckNoPublicAccess(CheckNoPublicAccessRequest request);
    public virtual Task`1<CheckNoPublicAccessResponse> CheckNoPublicAccessAsync(CheckNoPublicAccessRequest request, CancellationToken cancellationToken);
    internal virtual CreateAccessPreviewResponse CreateAccessPreview(CreateAccessPreviewRequest request);
    public virtual Task`1<CreateAccessPreviewResponse> CreateAccessPreviewAsync(CreateAccessPreviewRequest request, CancellationToken cancellationToken);
    internal virtual CreateAnalyzerResponse CreateAnalyzer(CreateAnalyzerRequest request);
    public virtual Task`1<CreateAnalyzerResponse> CreateAnalyzerAsync(CreateAnalyzerRequest request, CancellationToken cancellationToken);
    internal virtual CreateArchiveRuleResponse CreateArchiveRule(CreateArchiveRuleRequest request);
    public virtual Task`1<CreateArchiveRuleResponse> CreateArchiveRuleAsync(CreateArchiveRuleRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAnalyzerResponse DeleteAnalyzer(DeleteAnalyzerRequest request);
    public virtual Task`1<DeleteAnalyzerResponse> DeleteAnalyzerAsync(DeleteAnalyzerRequest request, CancellationToken cancellationToken);
    internal virtual DeleteArchiveRuleResponse DeleteArchiveRule(DeleteArchiveRuleRequest request);
    public virtual Task`1<DeleteArchiveRuleResponse> DeleteArchiveRuleAsync(DeleteArchiveRuleRequest request, CancellationToken cancellationToken);
    internal virtual GenerateFindingRecommendationResponse GenerateFindingRecommendation(GenerateFindingRecommendationRequest request);
    public virtual Task`1<GenerateFindingRecommendationResponse> GenerateFindingRecommendationAsync(GenerateFindingRecommendationRequest request, CancellationToken cancellationToken);
    internal virtual GetAccessPreviewResponse GetAccessPreview(GetAccessPreviewRequest request);
    public virtual Task`1<GetAccessPreviewResponse> GetAccessPreviewAsync(GetAccessPreviewRequest request, CancellationToken cancellationToken);
    internal virtual GetAnalyzedResourceResponse GetAnalyzedResource(GetAnalyzedResourceRequest request);
    public virtual Task`1<GetAnalyzedResourceResponse> GetAnalyzedResourceAsync(GetAnalyzedResourceRequest request, CancellationToken cancellationToken);
    internal virtual GetAnalyzerResponse GetAnalyzer(GetAnalyzerRequest request);
    public virtual Task`1<GetAnalyzerResponse> GetAnalyzerAsync(GetAnalyzerRequest request, CancellationToken cancellationToken);
    internal virtual GetArchiveRuleResponse GetArchiveRule(GetArchiveRuleRequest request);
    public virtual Task`1<GetArchiveRuleResponse> GetArchiveRuleAsync(GetArchiveRuleRequest request, CancellationToken cancellationToken);
    internal virtual GetFindingResponse GetFinding(GetFindingRequest request);
    public virtual Task`1<GetFindingResponse> GetFindingAsync(GetFindingRequest request, CancellationToken cancellationToken);
    internal virtual GetFindingRecommendationResponse GetFindingRecommendation(GetFindingRecommendationRequest request);
    public virtual Task`1<GetFindingRecommendationResponse> GetFindingRecommendationAsync(GetFindingRecommendationRequest request, CancellationToken cancellationToken);
    internal virtual GetFindingV2Response GetFindingV2(GetFindingV2Request request);
    public virtual Task`1<GetFindingV2Response> GetFindingV2Async(GetFindingV2Request request, CancellationToken cancellationToken);
    internal virtual GetGeneratedPolicyResponse GetGeneratedPolicy(GetGeneratedPolicyRequest request);
    public virtual Task`1<GetGeneratedPolicyResponse> GetGeneratedPolicyAsync(GetGeneratedPolicyRequest request, CancellationToken cancellationToken);
    internal virtual ListAccessPreviewFindingsResponse ListAccessPreviewFindings(ListAccessPreviewFindingsRequest request);
    public virtual Task`1<ListAccessPreviewFindingsResponse> ListAccessPreviewFindingsAsync(ListAccessPreviewFindingsRequest request, CancellationToken cancellationToken);
    internal virtual ListAccessPreviewsResponse ListAccessPreviews(ListAccessPreviewsRequest request);
    public virtual Task`1<ListAccessPreviewsResponse> ListAccessPreviewsAsync(ListAccessPreviewsRequest request, CancellationToken cancellationToken);
    internal virtual ListAnalyzedResourcesResponse ListAnalyzedResources(ListAnalyzedResourcesRequest request);
    public virtual Task`1<ListAnalyzedResourcesResponse> ListAnalyzedResourcesAsync(ListAnalyzedResourcesRequest request, CancellationToken cancellationToken);
    internal virtual ListAnalyzersResponse ListAnalyzers(ListAnalyzersRequest request);
    public virtual Task`1<ListAnalyzersResponse> ListAnalyzersAsync(ListAnalyzersRequest request, CancellationToken cancellationToken);
    internal virtual ListArchiveRulesResponse ListArchiveRules(ListArchiveRulesRequest request);
    public virtual Task`1<ListArchiveRulesResponse> ListArchiveRulesAsync(ListArchiveRulesRequest request, CancellationToken cancellationToken);
    internal virtual ListFindingsResponse ListFindings(ListFindingsRequest request);
    public virtual Task`1<ListFindingsResponse> ListFindingsAsync(ListFindingsRequest request, CancellationToken cancellationToken);
    internal virtual ListFindingsV2Response ListFindingsV2(ListFindingsV2Request request);
    public virtual Task`1<ListFindingsV2Response> ListFindingsV2Async(ListFindingsV2Request request, CancellationToken cancellationToken);
    internal virtual ListPolicyGenerationsResponse ListPolicyGenerations(ListPolicyGenerationsRequest request);
    public virtual Task`1<ListPolicyGenerationsResponse> ListPolicyGenerationsAsync(ListPolicyGenerationsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual StartPolicyGenerationResponse StartPolicyGeneration(StartPolicyGenerationRequest request);
    public virtual Task`1<StartPolicyGenerationResponse> StartPolicyGenerationAsync(StartPolicyGenerationRequest request, CancellationToken cancellationToken);
    internal virtual StartResourceScanResponse StartResourceScan(StartResourceScanRequest request);
    public virtual Task`1<StartResourceScanResponse> StartResourceScanAsync(StartResourceScanRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateArchiveRuleResponse UpdateArchiveRule(UpdateArchiveRuleRequest request);
    public virtual Task`1<UpdateArchiveRuleResponse> UpdateArchiveRuleAsync(UpdateArchiveRuleRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFindingsResponse UpdateFindings(UpdateFindingsRequest request);
    public virtual Task`1<UpdateFindingsResponse> UpdateFindingsAsync(UpdateFindingsRequest request, CancellationToken cancellationToken);
    internal virtual ValidatePolicyResponse ValidatePolicy(ValidatePolicyRequest request);
    public virtual Task`1<ValidatePolicyResponse> ValidatePolicyAsync(ValidatePolicyRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.AccessAnalyzer.AmazonAccessAnalyzerConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonAccessAnalyzerEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonAccessAnalyzerConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.AccessAnalyzer.AmazonAccessAnalyzerDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonAccessAnalyzerDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.AccessAnalyzer.AmazonAccessAnalyzerException : AmazonServiceException {
    public AmazonAccessAnalyzerException(string message);
    public AmazonAccessAnalyzerException(string message, Exception innerException);
    public AmazonAccessAnalyzerException(Exception innerException);
    public AmazonAccessAnalyzerException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonAccessAnalyzerException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.AccessAnalyzer.AmazonAccessAnalyzerRequest : AmazonWebServiceRequest {
}
public class Amazon.AccessAnalyzer.AnalyzerStatus : ConstantClass {
    public static AnalyzerStatus ACTIVE;
    public static AnalyzerStatus CREATING;
    public static AnalyzerStatus DISABLED;
    public static AnalyzerStatus FAILED;
    public AnalyzerStatus(string value);
    private static AnalyzerStatus();
    public static AnalyzerStatus FindValue(string value);
    public static AnalyzerStatus op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.CheckAccessNotGrantedResult : ConstantClass {
    public static CheckAccessNotGrantedResult FAIL;
    public static CheckAccessNotGrantedResult PASS;
    public CheckAccessNotGrantedResult(string value);
    private static CheckAccessNotGrantedResult();
    public static CheckAccessNotGrantedResult FindValue(string value);
    public static CheckAccessNotGrantedResult op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.CheckNoNewAccessResult : ConstantClass {
    public static CheckNoNewAccessResult FAIL;
    public static CheckNoNewAccessResult PASS;
    public CheckNoNewAccessResult(string value);
    private static CheckNoNewAccessResult();
    public static CheckNoNewAccessResult FindValue(string value);
    public static CheckNoNewAccessResult op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.CheckNoPublicAccessResult : ConstantClass {
    public static CheckNoPublicAccessResult FAIL;
    public static CheckNoPublicAccessResult PASS;
    public CheckNoPublicAccessResult(string value);
    private static CheckNoPublicAccessResult();
    public static CheckNoPublicAccessResult FindValue(string value);
    public static CheckNoPublicAccessResult op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.Endpoints.AccessAnalyzerEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.AccessAnalyzer.FindingChangeType : ConstantClass {
    public static FindingChangeType CHANGED;
    public static FindingChangeType NEW;
    public static FindingChangeType UNCHANGED;
    public FindingChangeType(string value);
    private static FindingChangeType();
    public static FindingChangeType FindValue(string value);
    public static FindingChangeType op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.FindingSourceType : ConstantClass {
    public static FindingSourceType BUCKET_ACL;
    public static FindingSourceType POLICY;
    public static FindingSourceType S3_ACCESS_POINT;
    public static FindingSourceType S3_ACCESS_POINT_ACCOUNT;
    public FindingSourceType(string value);
    private static FindingSourceType();
    public static FindingSourceType FindValue(string value);
    public static FindingSourceType op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.FindingStatus : ConstantClass {
    public static FindingStatus ACTIVE;
    public static FindingStatus ARCHIVED;
    public static FindingStatus RESOLVED;
    public FindingStatus(string value);
    private static FindingStatus();
    public static FindingStatus FindValue(string value);
    public static FindingStatus op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.FindingStatusUpdate : ConstantClass {
    public static FindingStatusUpdate ACTIVE;
    public static FindingStatusUpdate ARCHIVED;
    public FindingStatusUpdate(string value);
    private static FindingStatusUpdate();
    public static FindingStatusUpdate FindValue(string value);
    public static FindingStatusUpdate op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.FindingType : ConstantClass {
    public static FindingType ExternalAccess;
    public static FindingType UnusedIAMRole;
    public static FindingType UnusedIAMUserAccessKey;
    public static FindingType UnusedIAMUserPassword;
    public static FindingType UnusedPermission;
    public FindingType(string value);
    private static FindingType();
    public static FindingType FindValue(string value);
    public static FindingType op_Implicit(string value);
}
public interface Amazon.AccessAnalyzer.IAmazonAccessAnalyzer {
    public IAccessAnalyzerPaginatorFactory Paginators { get; }
    public abstract virtual IAccessAnalyzerPaginatorFactory get_Paginators();
    public abstract virtual Task`1<ApplyArchiveRuleResponse> ApplyArchiveRuleAsync(ApplyArchiveRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelPolicyGenerationResponse> CancelPolicyGenerationAsync(CancelPolicyGenerationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CheckAccessNotGrantedResponse> CheckAccessNotGrantedAsync(CheckAccessNotGrantedRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CheckNoNewAccessResponse> CheckNoNewAccessAsync(CheckNoNewAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CheckNoPublicAccessResponse> CheckNoPublicAccessAsync(CheckNoPublicAccessRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAccessPreviewResponse> CreateAccessPreviewAsync(CreateAccessPreviewRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateAnalyzerResponse> CreateAnalyzerAsync(CreateAnalyzerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateArchiveRuleResponse> CreateArchiveRuleAsync(CreateArchiveRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAnalyzerResponse> DeleteAnalyzerAsync(DeleteAnalyzerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteArchiveRuleResponse> DeleteArchiveRuleAsync(DeleteArchiveRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GenerateFindingRecommendationResponse> GenerateFindingRecommendationAsync(GenerateFindingRecommendationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAccessPreviewResponse> GetAccessPreviewAsync(GetAccessPreviewRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAnalyzedResourceResponse> GetAnalyzedResourceAsync(GetAnalyzedResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAnalyzerResponse> GetAnalyzerAsync(GetAnalyzerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetArchiveRuleResponse> GetArchiveRuleAsync(GetArchiveRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFindingResponse> GetFindingAsync(GetFindingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFindingRecommendationResponse> GetFindingRecommendationAsync(GetFindingRecommendationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFindingV2Response> GetFindingV2Async(GetFindingV2Request request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetGeneratedPolicyResponse> GetGeneratedPolicyAsync(GetGeneratedPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAccessPreviewFindingsResponse> ListAccessPreviewFindingsAsync(ListAccessPreviewFindingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAccessPreviewsResponse> ListAccessPreviewsAsync(ListAccessPreviewsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAnalyzedResourcesResponse> ListAnalyzedResourcesAsync(ListAnalyzedResourcesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListAnalyzersResponse> ListAnalyzersAsync(ListAnalyzersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListArchiveRulesResponse> ListArchiveRulesAsync(ListArchiveRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFindingsResponse> ListFindingsAsync(ListFindingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFindingsV2Response> ListFindingsV2Async(ListFindingsV2Request request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListPolicyGenerationsResponse> ListPolicyGenerationsAsync(ListPolicyGenerationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartPolicyGenerationResponse> StartPolicyGenerationAsync(StartPolicyGenerationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartResourceScanResponse> StartResourceScanAsync(StartResourceScanRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateArchiveRuleResponse> UpdateArchiveRuleAsync(UpdateArchiveRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFindingsResponse> UpdateFindingsAsync(UpdateFindingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ValidatePolicyResponse> ValidatePolicyAsync(ValidatePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.AccessAnalyzer.Internal.AmazonAccessAnalyzerEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.AccessAnalyzer.Internal.AmazonAccessAnalyzerEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.AccessAnalyzer.Internal.AmazonAccessAnalyzerMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.AccessAnalyzer.JobErrorCode : ConstantClass {
    public static JobErrorCode AUTHORIZATION_ERROR;
    public static JobErrorCode RESOURCE_NOT_FOUND_ERROR;
    public static JobErrorCode SERVICE_ERROR;
    public static JobErrorCode SERVICE_QUOTA_EXCEEDED_ERROR;
    public JobErrorCode(string value);
    private static JobErrorCode();
    public static JobErrorCode FindValue(string value);
    public static JobErrorCode op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.JobStatus : ConstantClass {
    public static JobStatus CANCELED;
    public static JobStatus FAILED;
    public static JobStatus IN_PROGRESS;
    public static JobStatus SUCCEEDED;
    public JobStatus(string value);
    private static JobStatus();
    public static JobStatus FindValue(string value);
    public static JobStatus op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.KmsGrantOperation : ConstantClass {
    public static KmsGrantOperation CreateGrant;
    public static KmsGrantOperation Decrypt;
    public static KmsGrantOperation DescribeKey;
    public static KmsGrantOperation Encrypt;
    public static KmsGrantOperation GenerateDataKey;
    public static KmsGrantOperation GenerateDataKeyPair;
    public static KmsGrantOperation GenerateDataKeyPairWithoutPlaintext;
    public static KmsGrantOperation GenerateDataKeyWithoutPlaintext;
    public static KmsGrantOperation GetPublicKey;
    public static KmsGrantOperation ReEncryptFrom;
    public static KmsGrantOperation ReEncryptTo;
    public static KmsGrantOperation RetireGrant;
    public static KmsGrantOperation Sign;
    public static KmsGrantOperation Verify;
    public KmsGrantOperation(string value);
    private static KmsGrantOperation();
    public static KmsGrantOperation FindValue(string value);
    public static KmsGrantOperation op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.Locale : ConstantClass {
    public static Locale DE;
    public static Locale EN;
    public static Locale ES;
    public static Locale FR;
    public static Locale IT;
    public static Locale JA;
    public static Locale KO;
    public static Locale PT_BR;
    public static Locale ZH_CN;
    public static Locale ZH_TW;
    public Locale(string value);
    private static Locale();
    public static Locale FindValue(string value);
    public static Locale op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.Model.Access : object {
    private List`1<string> _actions;
    private List`1<string> _resources;
    [AWSPropertyAttribute]
public List`1<string> Actions { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Resources { get; public set; }
    public List`1<string> get_Actions();
    public void set_Actions(List`1<string> value);
    internal bool IsSetActions();
    public List`1<string> get_Resources();
    public void set_Resources(List`1<string> value);
    internal bool IsSetResources();
}
public class Amazon.AccessAnalyzer.Model.AccessAnalyzerPaginatorFactory : object {
    private IAmazonAccessAnalyzer client;
    internal AccessAnalyzerPaginatorFactory(IAmazonAccessAnalyzer client);
    public sealed virtual IGetFindingRecommendationPaginator GetFindingRecommendation(GetFindingRecommendationRequest request);
    public sealed virtual IGetFindingV2Paginator GetFindingV2(GetFindingV2Request request);
    public sealed virtual IListAccessPreviewFindingsPaginator ListAccessPreviewFindings(ListAccessPreviewFindingsRequest request);
    public sealed virtual IListAccessPreviewsPaginator ListAccessPreviews(ListAccessPreviewsRequest request);
    public sealed virtual IListAnalyzedResourcesPaginator ListAnalyzedResources(ListAnalyzedResourcesRequest request);
    public sealed virtual IListAnalyzersPaginator ListAnalyzers(ListAnalyzersRequest request);
    public sealed virtual IListArchiveRulesPaginator ListArchiveRules(ListArchiveRulesRequest request);
    public sealed virtual IListFindingsPaginator ListFindings(ListFindingsRequest request);
    public sealed virtual IListFindingsV2Paginator ListFindingsV2(ListFindingsV2Request request);
    public sealed virtual IListPolicyGenerationsPaginator ListPolicyGenerations(ListPolicyGenerationsRequest request);
    public sealed virtual IValidatePolicyPaginator ValidatePolicy(ValidatePolicyRequest request);
}
public class Amazon.AccessAnalyzer.Model.AccessDeniedException : AmazonAccessAnalyzerException {
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception innerException);
    public AccessDeniedException(Exception innerException);
    public AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.AccessAnalyzer.Model.AccessPreview : object {
    private string _analyzerArn;
    private Dictionary`2<string, Configuration> _configurations;
    private Nullable`1<DateTime> _createdAt;
    private string _id;
    private AccessPreviewStatus _status;
    private AccessPreviewStatusReason _statusReason;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, Configuration> Configurations { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public AccessPreviewStatus Status { get; public set; }
    public AccessPreviewStatusReason StatusReason { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public Dictionary`2<string, Configuration> get_Configurations();
    public void set_Configurations(Dictionary`2<string, Configuration> value);
    internal bool IsSetConfigurations();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public AccessPreviewStatus get_Status();
    public void set_Status(AccessPreviewStatus value);
    internal bool IsSetStatus();
    public AccessPreviewStatusReason get_StatusReason();
    public void set_StatusReason(AccessPreviewStatusReason value);
    internal bool IsSetStatusReason();
}
public class Amazon.AccessAnalyzer.Model.AccessPreviewFinding : object {
    private List`1<string> _action;
    private FindingChangeType _changeType;
    private Dictionary`2<string, string> _condition;
    private Nullable`1<DateTime> _createdAt;
    private string _error;
    private string _existingFindingId;
    private FindingStatus _existingFindingStatus;
    private string _id;
    private Nullable`1<bool> _isPublic;
    private Dictionary`2<string, string> _principal;
    private string _resource;
    private string _resourceOwnerAccount;
    private ResourceType _resourceType;
    private List`1<FindingSource> _sources;
    private FindingStatus _status;
    public List`1<string> Action { get; public set; }
    [AWSPropertyAttribute]
public FindingChangeType ChangeType { get; public set; }
    public Dictionary`2<string, string> Condition { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedAt { get; public set; }
    public string Error { get; public set; }
    public string ExistingFindingId { get; public set; }
    public FindingStatus ExistingFindingStatus { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<bool> IsPublic { get; public set; }
    public Dictionary`2<string, string> Principal { get; public set; }
    public string Resource { get; public set; }
    [AWSPropertyAttribute]
public string ResourceOwnerAccount { get; public set; }
    [AWSPropertyAttribute]
public ResourceType ResourceType { get; public set; }
    public List`1<FindingSource> Sources { get; public set; }
    [AWSPropertyAttribute]
public FindingStatus Status { get; public set; }
    public List`1<string> get_Action();
    public void set_Action(List`1<string> value);
    internal bool IsSetAction();
    public FindingChangeType get_ChangeType();
    public void set_ChangeType(FindingChangeType value);
    internal bool IsSetChangeType();
    public Dictionary`2<string, string> get_Condition();
    public void set_Condition(Dictionary`2<string, string> value);
    internal bool IsSetCondition();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Error();
    public void set_Error(string value);
    internal bool IsSetError();
    public string get_ExistingFindingId();
    public void set_ExistingFindingId(string value);
    internal bool IsSetExistingFindingId();
    public FindingStatus get_ExistingFindingStatus();
    public void set_ExistingFindingStatus(FindingStatus value);
    internal bool IsSetExistingFindingStatus();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<bool> get_IsPublic();
    public void set_IsPublic(Nullable`1<bool> value);
    internal bool IsSetIsPublic();
    public Dictionary`2<string, string> get_Principal();
    public void set_Principal(Dictionary`2<string, string> value);
    internal bool IsSetPrincipal();
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public string get_ResourceOwnerAccount();
    public void set_ResourceOwnerAccount(string value);
    internal bool IsSetResourceOwnerAccount();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public List`1<FindingSource> get_Sources();
    public void set_Sources(List`1<FindingSource> value);
    internal bool IsSetSources();
    public FindingStatus get_Status();
    public void set_Status(FindingStatus value);
    internal bool IsSetStatus();
}
public class Amazon.AccessAnalyzer.Model.AccessPreviewStatusReason : object {
    private AccessPreviewStatusReasonCode _code;
    [AWSPropertyAttribute]
public AccessPreviewStatusReasonCode Code { get; public set; }
    public AccessPreviewStatusReasonCode get_Code();
    public void set_Code(AccessPreviewStatusReasonCode value);
    internal bool IsSetCode();
}
public class Amazon.AccessAnalyzer.Model.AccessPreviewSummary : object {
    private string _analyzerArn;
    private Nullable`1<DateTime> _createdAt;
    private string _id;
    private AccessPreviewStatus _status;
    private AccessPreviewStatusReason _statusReason;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public AccessPreviewStatus Status { get; public set; }
    public AccessPreviewStatusReason StatusReason { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public AccessPreviewStatus get_Status();
    public void set_Status(AccessPreviewStatus value);
    internal bool IsSetStatus();
    public AccessPreviewStatusReason get_StatusReason();
    public void set_StatusReason(AccessPreviewStatusReason value);
    internal bool IsSetStatusReason();
}
public class Amazon.AccessAnalyzer.Model.AclGrantee : object {
    private string _id;
    private string _uri;
    public string Id { get; public set; }
    public string Uri { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Uri();
    public void set_Uri(string value);
    internal bool IsSetUri();
}
public class Amazon.AccessAnalyzer.Model.AnalyzedResource : object {
    private List`1<string> _actions;
    private Nullable`1<DateTime> _analyzedAt;
    private Nullable`1<DateTime> _createdAt;
    private string _error;
    private Nullable`1<bool> _isPublic;
    private string _resourceArn;
    private string _resourceOwnerAccount;
    private ResourceType _resourceType;
    private List`1<string> _sharedVia;
    private FindingStatus _status;
    private Nullable`1<DateTime> _updatedAt;
    public List`1<string> Actions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> AnalyzedAt { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedAt { get; public set; }
    public string Error { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> IsPublic { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public string ResourceOwnerAccount { get; public set; }
    [AWSPropertyAttribute]
public ResourceType ResourceType { get; public set; }
    public List`1<string> SharedVia { get; public set; }
    public FindingStatus Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> UpdatedAt { get; public set; }
    public List`1<string> get_Actions();
    public void set_Actions(List`1<string> value);
    internal bool IsSetActions();
    public Nullable`1<DateTime> get_AnalyzedAt();
    public void set_AnalyzedAt(Nullable`1<DateTime> value);
    internal bool IsSetAnalyzedAt();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Error();
    public void set_Error(string value);
    internal bool IsSetError();
    public Nullable`1<bool> get_IsPublic();
    public void set_IsPublic(Nullable`1<bool> value);
    internal bool IsSetIsPublic();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public string get_ResourceOwnerAccount();
    public void set_ResourceOwnerAccount(string value);
    internal bool IsSetResourceOwnerAccount();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public List`1<string> get_SharedVia();
    public void set_SharedVia(List`1<string> value);
    internal bool IsSetSharedVia();
    public FindingStatus get_Status();
    public void set_Status(FindingStatus value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_UpdatedAt();
    public void set_UpdatedAt(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedAt();
}
public class Amazon.AccessAnalyzer.Model.AnalyzedResourceSummary : object {
    private string _resourceArn;
    private string _resourceOwnerAccount;
    private ResourceType _resourceType;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public string ResourceOwnerAccount { get; public set; }
    [AWSPropertyAttribute]
public ResourceType ResourceType { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public string get_ResourceOwnerAccount();
    public void set_ResourceOwnerAccount(string value);
    internal bool IsSetResourceOwnerAccount();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
}
public class Amazon.AccessAnalyzer.Model.AnalyzerConfiguration : object {
    private UnusedAccessConfiguration _unusedAccess;
    public UnusedAccessConfiguration UnusedAccess { get; public set; }
    public UnusedAccessConfiguration get_UnusedAccess();
    public void set_UnusedAccess(UnusedAccessConfiguration value);
    internal bool IsSetUnusedAccess();
}
public class Amazon.AccessAnalyzer.Model.AnalyzerSummary : object {
    private string _arn;
    private AnalyzerConfiguration _configuration;
    private Nullable`1<DateTime> _createdAt;
    private string _lastResourceAnalyzed;
    private Nullable`1<DateTime> _lastResourceAnalyzedAt;
    private string _name;
    private AnalyzerStatus _status;
    private StatusReason _statusReason;
    private Dictionary`2<string, string> _tags;
    private Type _type;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public AnalyzerConfiguration Configuration { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedAt { get; public set; }
    public string LastResourceAnalyzed { get; public set; }
    public Nullable`1<DateTime> LastResourceAnalyzedAt { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public AnalyzerStatus Status { get; public set; }
    public StatusReason StatusReason { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public Type Type { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public AnalyzerConfiguration get_Configuration();
    public void set_Configuration(AnalyzerConfiguration value);
    internal bool IsSetConfiguration();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_LastResourceAnalyzed();
    public void set_LastResourceAnalyzed(string value);
    internal bool IsSetLastResourceAnalyzed();
    public Nullable`1<DateTime> get_LastResourceAnalyzedAt();
    public void set_LastResourceAnalyzedAt(Nullable`1<DateTime> value);
    internal bool IsSetLastResourceAnalyzedAt();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public AnalyzerStatus get_Status();
    public void set_Status(AnalyzerStatus value);
    internal bool IsSetStatus();
    public StatusReason get_StatusReason();
    public void set_StatusReason(StatusReason value);
    internal bool IsSetStatusReason();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public Type get_Type();
    public void set_Type(Type value);
    internal bool IsSetType();
}
public class Amazon.AccessAnalyzer.Model.ApplyArchiveRuleRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private string _clientToken;
    private string _ruleName;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
}
public class Amazon.AccessAnalyzer.Model.ApplyArchiveRuleResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.ArchiveRuleSummary : object {
    private Nullable`1<DateTime> _createdAt;
    private Dictionary`2<string, Criterion> _filter;
    private string _ruleName;
    private Nullable`1<DateTime> _updatedAt;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedAt { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, Criterion> Filter { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> UpdatedAt { get; public set; }
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public Dictionary`2<string, Criterion> get_Filter();
    public void set_Filter(Dictionary`2<string, Criterion> value);
    internal bool IsSetFilter();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public Nullable`1<DateTime> get_UpdatedAt();
    public void set_UpdatedAt(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedAt();
}
public class Amazon.AccessAnalyzer.Model.CancelPolicyGenerationRequest : AmazonAccessAnalyzerRequest {
    private string _jobId;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
}
public class Amazon.AccessAnalyzer.Model.CancelPolicyGenerationResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.CheckAccessNotGrantedRequest : AmazonAccessAnalyzerRequest {
    private List`1<Access> _access;
    private string _policyDocument;
    private AccessCheckPolicyType _policyType;
    [AWSPropertyAttribute]
public List`1<Access> Access { get; public set; }
    [AWSPropertyAttribute]
public string PolicyDocument { get; public set; }
    [AWSPropertyAttribute]
public AccessCheckPolicyType PolicyType { get; public set; }
    public List`1<Access> get_Access();
    public void set_Access(List`1<Access> value);
    internal bool IsSetAccess();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public AccessCheckPolicyType get_PolicyType();
    public void set_PolicyType(AccessCheckPolicyType value);
    internal bool IsSetPolicyType();
}
public class Amazon.AccessAnalyzer.Model.CheckAccessNotGrantedResponse : AmazonWebServiceResponse {
    private string _message;
    private List`1<ReasonSummary> _reasons;
    private CheckAccessNotGrantedResult _result;
    public string Message { get; public set; }
    public List`1<ReasonSummary> Reasons { get; public set; }
    public CheckAccessNotGrantedResult Result { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public List`1<ReasonSummary> get_Reasons();
    public void set_Reasons(List`1<ReasonSummary> value);
    internal bool IsSetReasons();
    public CheckAccessNotGrantedResult get_Result();
    public void set_Result(CheckAccessNotGrantedResult value);
    internal bool IsSetResult();
}
public class Amazon.AccessAnalyzer.Model.CheckNoNewAccessRequest : AmazonAccessAnalyzerRequest {
    private string _existingPolicyDocument;
    private string _newPolicyDocument;
    private AccessCheckPolicyType _policyType;
    [AWSPropertyAttribute]
public string ExistingPolicyDocument { get; public set; }
    [AWSPropertyAttribute]
public string NewPolicyDocument { get; public set; }
    [AWSPropertyAttribute]
public AccessCheckPolicyType PolicyType { get; public set; }
    public string get_ExistingPolicyDocument();
    public void set_ExistingPolicyDocument(string value);
    internal bool IsSetExistingPolicyDocument();
    public string get_NewPolicyDocument();
    public void set_NewPolicyDocument(string value);
    internal bool IsSetNewPolicyDocument();
    public AccessCheckPolicyType get_PolicyType();
    public void set_PolicyType(AccessCheckPolicyType value);
    internal bool IsSetPolicyType();
}
public class Amazon.AccessAnalyzer.Model.CheckNoNewAccessResponse : AmazonWebServiceResponse {
    private string _message;
    private List`1<ReasonSummary> _reasons;
    private CheckNoNewAccessResult _result;
    public string Message { get; public set; }
    public List`1<ReasonSummary> Reasons { get; public set; }
    public CheckNoNewAccessResult Result { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public List`1<ReasonSummary> get_Reasons();
    public void set_Reasons(List`1<ReasonSummary> value);
    internal bool IsSetReasons();
    public CheckNoNewAccessResult get_Result();
    public void set_Result(CheckNoNewAccessResult value);
    internal bool IsSetResult();
}
public class Amazon.AccessAnalyzer.Model.CheckNoPublicAccessRequest : AmazonAccessAnalyzerRequest {
    private string _policyDocument;
    private AccessCheckResourceType _resourceType;
    [AWSPropertyAttribute]
public string PolicyDocument { get; public set; }
    [AWSPropertyAttribute]
public AccessCheckResourceType ResourceType { get; public set; }
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public AccessCheckResourceType get_ResourceType();
    public void set_ResourceType(AccessCheckResourceType value);
    internal bool IsSetResourceType();
}
public class Amazon.AccessAnalyzer.Model.CheckNoPublicAccessResponse : AmazonWebServiceResponse {
    private string _message;
    private List`1<ReasonSummary> _reasons;
    private CheckNoPublicAccessResult _result;
    public string Message { get; public set; }
    public List`1<ReasonSummary> Reasons { get; public set; }
    public CheckNoPublicAccessResult Result { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public List`1<ReasonSummary> get_Reasons();
    public void set_Reasons(List`1<ReasonSummary> value);
    internal bool IsSetReasons();
    public CheckNoPublicAccessResult get_Result();
    public void set_Result(CheckNoPublicAccessResult value);
    internal bool IsSetResult();
}
public class Amazon.AccessAnalyzer.Model.CloudTrailDetails : object {
    private string _accessRole;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    private List`1<Trail> _trails;
    [AWSPropertyAttribute]
public string AccessRole { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<Trail> Trails { get; public set; }
    public string get_AccessRole();
    public void set_AccessRole(string value);
    internal bool IsSetAccessRole();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public List`1<Trail> get_Trails();
    public void set_Trails(List`1<Trail> value);
    internal bool IsSetTrails();
}
public class Amazon.AccessAnalyzer.Model.CloudTrailProperties : object {
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    private List`1<TrailProperties> _trailProperties;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<TrailProperties> TrailProperties { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public List`1<TrailProperties> get_TrailProperties();
    public void set_TrailProperties(List`1<TrailProperties> value);
    internal bool IsSetTrailProperties();
}
public class Amazon.AccessAnalyzer.Model.Configuration : object {
    private DynamodbStreamConfiguration _dynamodbStream;
    private DynamodbTableConfiguration _dynamodbTable;
    private EbsSnapshotConfiguration _ebsSnapshot;
    private EcrRepositoryConfiguration _ecrRepository;
    private EfsFileSystemConfiguration _efsFileSystem;
    private IamRoleConfiguration _iamRole;
    private KmsKeyConfiguration _kmsKey;
    private RdsDbClusterSnapshotConfiguration _rdsDbClusterSnapshot;
    private RdsDbSnapshotConfiguration _rdsDbSnapshot;
    private S3BucketConfiguration _s3Bucket;
    private S3ExpressDirectoryBucketConfiguration _s3ExpressDirectoryBucket;
    private SecretsManagerSecretConfiguration _secretsManagerSecret;
    private SnsTopicConfiguration _snsTopic;
    private SqsQueueConfiguration _sqsQueue;
    public DynamodbStreamConfiguration DynamodbStream { get; public set; }
    public DynamodbTableConfiguration DynamodbTable { get; public set; }
    public EbsSnapshotConfiguration EbsSnapshot { get; public set; }
    public EcrRepositoryConfiguration EcrRepository { get; public set; }
    public EfsFileSystemConfiguration EfsFileSystem { get; public set; }
    public IamRoleConfiguration IamRole { get; public set; }
    public KmsKeyConfiguration KmsKey { get; public set; }
    public RdsDbClusterSnapshotConfiguration RdsDbClusterSnapshot { get; public set; }
    public RdsDbSnapshotConfiguration RdsDbSnapshot { get; public set; }
    public S3BucketConfiguration S3Bucket { get; public set; }
    public S3ExpressDirectoryBucketConfiguration S3ExpressDirectoryBucket { get; public set; }
    public SecretsManagerSecretConfiguration SecretsManagerSecret { get; public set; }
    public SnsTopicConfiguration SnsTopic { get; public set; }
    public SqsQueueConfiguration SqsQueue { get; public set; }
    public DynamodbStreamConfiguration get_DynamodbStream();
    public void set_DynamodbStream(DynamodbStreamConfiguration value);
    internal bool IsSetDynamodbStream();
    public DynamodbTableConfiguration get_DynamodbTable();
    public void set_DynamodbTable(DynamodbTableConfiguration value);
    internal bool IsSetDynamodbTable();
    public EbsSnapshotConfiguration get_EbsSnapshot();
    public void set_EbsSnapshot(EbsSnapshotConfiguration value);
    internal bool IsSetEbsSnapshot();
    public EcrRepositoryConfiguration get_EcrRepository();
    public void set_EcrRepository(EcrRepositoryConfiguration value);
    internal bool IsSetEcrRepository();
    public EfsFileSystemConfiguration get_EfsFileSystem();
    public void set_EfsFileSystem(EfsFileSystemConfiguration value);
    internal bool IsSetEfsFileSystem();
    public IamRoleConfiguration get_IamRole();
    public void set_IamRole(IamRoleConfiguration value);
    internal bool IsSetIamRole();
    public KmsKeyConfiguration get_KmsKey();
    public void set_KmsKey(KmsKeyConfiguration value);
    internal bool IsSetKmsKey();
    public RdsDbClusterSnapshotConfiguration get_RdsDbClusterSnapshot();
    public void set_RdsDbClusterSnapshot(RdsDbClusterSnapshotConfiguration value);
    internal bool IsSetRdsDbClusterSnapshot();
    public RdsDbSnapshotConfiguration get_RdsDbSnapshot();
    public void set_RdsDbSnapshot(RdsDbSnapshotConfiguration value);
    internal bool IsSetRdsDbSnapshot();
    public S3BucketConfiguration get_S3Bucket();
    public void set_S3Bucket(S3BucketConfiguration value);
    internal bool IsSetS3Bucket();
    public S3ExpressDirectoryBucketConfiguration get_S3ExpressDirectoryBucket();
    public void set_S3ExpressDirectoryBucket(S3ExpressDirectoryBucketConfiguration value);
    internal bool IsSetS3ExpressDirectoryBucket();
    public SecretsManagerSecretConfiguration get_SecretsManagerSecret();
    public void set_SecretsManagerSecret(SecretsManagerSecretConfiguration value);
    internal bool IsSetSecretsManagerSecret();
    public SnsTopicConfiguration get_SnsTopic();
    public void set_SnsTopic(SnsTopicConfiguration value);
    internal bool IsSetSnsTopic();
    public SqsQueueConfiguration get_SqsQueue();
    public void set_SqsQueue(SqsQueueConfiguration value);
    internal bool IsSetSqsQueue();
}
public class Amazon.AccessAnalyzer.Model.ConflictException : AmazonAccessAnalyzerException {
    private string _resourceId;
    private string _resourceType;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceType { get; public set; }
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
}
public class Amazon.AccessAnalyzer.Model.CreateAccessPreviewRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private string _clientToken;
    private Dictionary`2<string, Configuration> _configurations;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, Configuration> Configurations { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Dictionary`2<string, Configuration> get_Configurations();
    public void set_Configurations(Dictionary`2<string, Configuration> value);
    internal bool IsSetConfigurations();
}
public class Amazon.AccessAnalyzer.Model.CreateAccessPreviewResponse : AmazonWebServiceResponse {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.AccessAnalyzer.Model.CreateAnalyzerRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerName;
    private List`1<InlineArchiveRule> _archiveRules;
    private string _clientToken;
    private AnalyzerConfiguration _configuration;
    private Dictionary`2<string, string> _tags;
    private Type _type;
    [AWSPropertyAttribute]
public string AnalyzerName { get; public set; }
    public List`1<InlineArchiveRule> ArchiveRules { get; public set; }
    public string ClientToken { get; public set; }
    public AnalyzerConfiguration Configuration { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public Type Type { get; public set; }
    public string get_AnalyzerName();
    public void set_AnalyzerName(string value);
    internal bool IsSetAnalyzerName();
    public List`1<InlineArchiveRule> get_ArchiveRules();
    public void set_ArchiveRules(List`1<InlineArchiveRule> value);
    internal bool IsSetArchiveRules();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public AnalyzerConfiguration get_Configuration();
    public void set_Configuration(AnalyzerConfiguration value);
    internal bool IsSetConfiguration();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public Type get_Type();
    public void set_Type(Type value);
    internal bool IsSetType();
}
public class Amazon.AccessAnalyzer.Model.CreateAnalyzerResponse : AmazonWebServiceResponse {
    private string _arn;
    public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.AccessAnalyzer.Model.CreateArchiveRuleRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerName;
    private string _clientToken;
    private Dictionary`2<string, Criterion> _filter;
    private string _ruleName;
    [AWSPropertyAttribute]
public string AnalyzerName { get; public set; }
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, Criterion> Filter { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    public string get_AnalyzerName();
    public void set_AnalyzerName(string value);
    internal bool IsSetAnalyzerName();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Dictionary`2<string, Criterion> get_Filter();
    public void set_Filter(Dictionary`2<string, Criterion> value);
    internal bool IsSetFilter();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
}
public class Amazon.AccessAnalyzer.Model.CreateArchiveRuleResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.Criterion : object {
    private List`1<string> _contains;
    private List`1<string> _eq;
    private Nullable`1<bool> _exists;
    private List`1<string> _neq;
    [AWSPropertyAttribute]
public List`1<string> Contains { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Eq { get; public set; }
    public Nullable`1<bool> Exists { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Neq { get; public set; }
    public List`1<string> get_Contains();
    public void set_Contains(List`1<string> value);
    internal bool IsSetContains();
    public List`1<string> get_Eq();
    public void set_Eq(List`1<string> value);
    internal bool IsSetEq();
    public Nullable`1<bool> get_Exists();
    public void set_Exists(Nullable`1<bool> value);
    internal bool IsSetExists();
    public List`1<string> get_Neq();
    public void set_Neq(List`1<string> value);
    internal bool IsSetNeq();
}
public class Amazon.AccessAnalyzer.Model.DeleteAnalyzerRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerName;
    private string _clientToken;
    [AWSPropertyAttribute]
public string AnalyzerName { get; public set; }
    public string ClientToken { get; public set; }
    public string get_AnalyzerName();
    public void set_AnalyzerName(string value);
    internal bool IsSetAnalyzerName();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
}
public class Amazon.AccessAnalyzer.Model.DeleteAnalyzerResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.DeleteArchiveRuleRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerName;
    private string _clientToken;
    private string _ruleName;
    [AWSPropertyAttribute]
public string AnalyzerName { get; public set; }
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    public string get_AnalyzerName();
    public void set_AnalyzerName(string value);
    internal bool IsSetAnalyzerName();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
}
public class Amazon.AccessAnalyzer.Model.DeleteArchiveRuleResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.DynamodbStreamConfiguration : object {
    private string _streamPolicy;
    public string StreamPolicy { get; public set; }
    public string get_StreamPolicy();
    public void set_StreamPolicy(string value);
    internal bool IsSetStreamPolicy();
}
public class Amazon.AccessAnalyzer.Model.DynamodbTableConfiguration : object {
    private string _tablePolicy;
    public string TablePolicy { get; public set; }
    public string get_TablePolicy();
    public void set_TablePolicy(string value);
    internal bool IsSetTablePolicy();
}
public class Amazon.AccessAnalyzer.Model.EbsSnapshotConfiguration : object {
    private List`1<string> _groups;
    private string _kmsKeyId;
    private List`1<string> _userIds;
    public List`1<string> Groups { get; public set; }
    public string KmsKeyId { get; public set; }
    public List`1<string> UserIds { get; public set; }
    public List`1<string> get_Groups();
    public void set_Groups(List`1<string> value);
    internal bool IsSetGroups();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public List`1<string> get_UserIds();
    public void set_UserIds(List`1<string> value);
    internal bool IsSetUserIds();
}
public class Amazon.AccessAnalyzer.Model.EcrRepositoryConfiguration : object {
    private string _repositoryPolicy;
    public string RepositoryPolicy { get; public set; }
    public string get_RepositoryPolicy();
    public void set_RepositoryPolicy(string value);
    internal bool IsSetRepositoryPolicy();
}
public class Amazon.AccessAnalyzer.Model.EfsFileSystemConfiguration : object {
    private string _fileSystemPolicy;
    public string FileSystemPolicy { get; public set; }
    public string get_FileSystemPolicy();
    public void set_FileSystemPolicy(string value);
    internal bool IsSetFileSystemPolicy();
}
public class Amazon.AccessAnalyzer.Model.ExternalAccessDetails : object {
    private List`1<string> _action;
    private Dictionary`2<string, string> _condition;
    private Nullable`1<bool> _isPublic;
    private Dictionary`2<string, string> _principal;
    private List`1<FindingSource> _sources;
    public List`1<string> Action { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Condition { get; public set; }
    public Nullable`1<bool> IsPublic { get; public set; }
    public Dictionary`2<string, string> Principal { get; public set; }
    public List`1<FindingSource> Sources { get; public set; }
    public List`1<string> get_Action();
    public void set_Action(List`1<string> value);
    internal bool IsSetAction();
    public Dictionary`2<string, string> get_Condition();
    public void set_Condition(Dictionary`2<string, string> value);
    internal bool IsSetCondition();
    public Nullable`1<bool> get_IsPublic();
    public void set_IsPublic(Nullable`1<bool> value);
    internal bool IsSetIsPublic();
    public Dictionary`2<string, string> get_Principal();
    public void set_Principal(Dictionary`2<string, string> value);
    internal bool IsSetPrincipal();
    public List`1<FindingSource> get_Sources();
    public void set_Sources(List`1<FindingSource> value);
    internal bool IsSetSources();
}
public class Amazon.AccessAnalyzer.Model.Finding : object {
    private List`1<string> _action;
    private Nullable`1<DateTime> _analyzedAt;
    private Dictionary`2<string, string> _condition;
    private Nullable`1<DateTime> _createdAt;
    private string _error;
    private string _id;
    private Nullable`1<bool> _isPublic;
    private Dictionary`2<string, string> _principal;
    private string _resource;
    private string _resourceOwnerAccount;
    private ResourceType _resourceType;
    private List`1<FindingSource> _sources;
    private FindingStatus _status;
    private Nullable`1<DateTime> _updatedAt;
    public List`1<string> Action { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> AnalyzedAt { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Condition { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedAt { get; public set; }
    public string Error { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<bool> IsPublic { get; public set; }
    public Dictionary`2<string, string> Principal { get; public set; }
    public string Resource { get; public set; }
    [AWSPropertyAttribute]
public string ResourceOwnerAccount { get; public set; }
    [AWSPropertyAttribute]
public ResourceType ResourceType { get; public set; }
    public List`1<FindingSource> Sources { get; public set; }
    [AWSPropertyAttribute]
public FindingStatus Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> UpdatedAt { get; public set; }
    public List`1<string> get_Action();
    public void set_Action(List`1<string> value);
    internal bool IsSetAction();
    public Nullable`1<DateTime> get_AnalyzedAt();
    public void set_AnalyzedAt(Nullable`1<DateTime> value);
    internal bool IsSetAnalyzedAt();
    public Dictionary`2<string, string> get_Condition();
    public void set_Condition(Dictionary`2<string, string> value);
    internal bool IsSetCondition();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Error();
    public void set_Error(string value);
    internal bool IsSetError();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<bool> get_IsPublic();
    public void set_IsPublic(Nullable`1<bool> value);
    internal bool IsSetIsPublic();
    public Dictionary`2<string, string> get_Principal();
    public void set_Principal(Dictionary`2<string, string> value);
    internal bool IsSetPrincipal();
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public string get_ResourceOwnerAccount();
    public void set_ResourceOwnerAccount(string value);
    internal bool IsSetResourceOwnerAccount();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public List`1<FindingSource> get_Sources();
    public void set_Sources(List`1<FindingSource> value);
    internal bool IsSetSources();
    public FindingStatus get_Status();
    public void set_Status(FindingStatus value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_UpdatedAt();
    public void set_UpdatedAt(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedAt();
}
public class Amazon.AccessAnalyzer.Model.FindingDetails : object {
    private ExternalAccessDetails _externalAccessDetails;
    private UnusedIamRoleDetails _unusedIamRoleDetails;
    private UnusedIamUserAccessKeyDetails _unusedIamUserAccessKeyDetails;
    private UnusedIamUserPasswordDetails _unusedIamUserPasswordDetails;
    private UnusedPermissionDetails _unusedPermissionDetails;
    public ExternalAccessDetails ExternalAccessDetails { get; public set; }
    public UnusedIamRoleDetails UnusedIamRoleDetails { get; public set; }
    public UnusedIamUserAccessKeyDetails UnusedIamUserAccessKeyDetails { get; public set; }
    public UnusedIamUserPasswordDetails UnusedIamUserPasswordDetails { get; public set; }
    public UnusedPermissionDetails UnusedPermissionDetails { get; public set; }
    public ExternalAccessDetails get_ExternalAccessDetails();
    public void set_ExternalAccessDetails(ExternalAccessDetails value);
    internal bool IsSetExternalAccessDetails();
    public UnusedIamRoleDetails get_UnusedIamRoleDetails();
    public void set_UnusedIamRoleDetails(UnusedIamRoleDetails value);
    internal bool IsSetUnusedIamRoleDetails();
    public UnusedIamUserAccessKeyDetails get_UnusedIamUserAccessKeyDetails();
    public void set_UnusedIamUserAccessKeyDetails(UnusedIamUserAccessKeyDetails value);
    internal bool IsSetUnusedIamUserAccessKeyDetails();
    public UnusedIamUserPasswordDetails get_UnusedIamUserPasswordDetails();
    public void set_UnusedIamUserPasswordDetails(UnusedIamUserPasswordDetails value);
    internal bool IsSetUnusedIamUserPasswordDetails();
    public UnusedPermissionDetails get_UnusedPermissionDetails();
    public void set_UnusedPermissionDetails(UnusedPermissionDetails value);
    internal bool IsSetUnusedPermissionDetails();
}
public class Amazon.AccessAnalyzer.Model.FindingSource : object {
    private FindingSourceDetail _detail;
    private FindingSourceType _type;
    public FindingSourceDetail Detail { get; public set; }
    [AWSPropertyAttribute]
public FindingSourceType Type { get; public set; }
    public FindingSourceDetail get_Detail();
    public void set_Detail(FindingSourceDetail value);
    internal bool IsSetDetail();
    public FindingSourceType get_Type();
    public void set_Type(FindingSourceType value);
    internal bool IsSetType();
}
public class Amazon.AccessAnalyzer.Model.FindingSourceDetail : object {
    private string _accessPointAccount;
    private string _accessPointArn;
    public string AccessPointAccount { get; public set; }
    public string AccessPointArn { get; public set; }
    public string get_AccessPointAccount();
    public void set_AccessPointAccount(string value);
    internal bool IsSetAccessPointAccount();
    public string get_AccessPointArn();
    public void set_AccessPointArn(string value);
    internal bool IsSetAccessPointArn();
}
public class Amazon.AccessAnalyzer.Model.FindingSummary : object {
    private List`1<string> _action;
    private Nullable`1<DateTime> _analyzedAt;
    private Dictionary`2<string, string> _condition;
    private Nullable`1<DateTime> _createdAt;
    private string _error;
    private string _id;
    private Nullable`1<bool> _isPublic;
    private Dictionary`2<string, string> _principal;
    private string _resource;
    private string _resourceOwnerAccount;
    private ResourceType _resourceType;
    private List`1<FindingSource> _sources;
    private FindingStatus _status;
    private Nullable`1<DateTime> _updatedAt;
    public List`1<string> Action { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> AnalyzedAt { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Condition { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedAt { get; public set; }
    public string Error { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<bool> IsPublic { get; public set; }
    public Dictionary`2<string, string> Principal { get; public set; }
    public string Resource { get; public set; }
    [AWSPropertyAttribute]
public string ResourceOwnerAccount { get; public set; }
    [AWSPropertyAttribute]
public ResourceType ResourceType { get; public set; }
    public List`1<FindingSource> Sources { get; public set; }
    [AWSPropertyAttribute]
public FindingStatus Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> UpdatedAt { get; public set; }
    public List`1<string> get_Action();
    public void set_Action(List`1<string> value);
    internal bool IsSetAction();
    public Nullable`1<DateTime> get_AnalyzedAt();
    public void set_AnalyzedAt(Nullable`1<DateTime> value);
    internal bool IsSetAnalyzedAt();
    public Dictionary`2<string, string> get_Condition();
    public void set_Condition(Dictionary`2<string, string> value);
    internal bool IsSetCondition();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Error();
    public void set_Error(string value);
    internal bool IsSetError();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<bool> get_IsPublic();
    public void set_IsPublic(Nullable`1<bool> value);
    internal bool IsSetIsPublic();
    public Dictionary`2<string, string> get_Principal();
    public void set_Principal(Dictionary`2<string, string> value);
    internal bool IsSetPrincipal();
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public string get_ResourceOwnerAccount();
    public void set_ResourceOwnerAccount(string value);
    internal bool IsSetResourceOwnerAccount();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public List`1<FindingSource> get_Sources();
    public void set_Sources(List`1<FindingSource> value);
    internal bool IsSetSources();
    public FindingStatus get_Status();
    public void set_Status(FindingStatus value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_UpdatedAt();
    public void set_UpdatedAt(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedAt();
}
public class Amazon.AccessAnalyzer.Model.FindingSummaryV2 : object {
    private Nullable`1<DateTime> _analyzedAt;
    private Nullable`1<DateTime> _createdAt;
    private string _error;
    private FindingType _findingType;
    private string _id;
    private string _resource;
    private string _resourceOwnerAccount;
    private ResourceType _resourceType;
    private FindingStatus _status;
    private Nullable`1<DateTime> _updatedAt;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> AnalyzedAt { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedAt { get; public set; }
    public string Error { get; public set; }
    public FindingType FindingType { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string Resource { get; public set; }
    [AWSPropertyAttribute]
public string ResourceOwnerAccount { get; public set; }
    [AWSPropertyAttribute]
public ResourceType ResourceType { get; public set; }
    [AWSPropertyAttribute]
public FindingStatus Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> UpdatedAt { get; public set; }
    public Nullable`1<DateTime> get_AnalyzedAt();
    public void set_AnalyzedAt(Nullable`1<DateTime> value);
    internal bool IsSetAnalyzedAt();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Error();
    public void set_Error(string value);
    internal bool IsSetError();
    public FindingType get_FindingType();
    public void set_FindingType(FindingType value);
    internal bool IsSetFindingType();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public string get_ResourceOwnerAccount();
    public void set_ResourceOwnerAccount(string value);
    internal bool IsSetResourceOwnerAccount();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public FindingStatus get_Status();
    public void set_Status(FindingStatus value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_UpdatedAt();
    public void set_UpdatedAt(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedAt();
}
public class Amazon.AccessAnalyzer.Model.GeneratedPolicy : object {
    private string _policy;
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.AccessAnalyzer.Model.GeneratedPolicyProperties : object {
    private CloudTrailProperties _cloudTrailProperties;
    private Nullable`1<bool> _isComplete;
    private string _principalArn;
    public CloudTrailProperties CloudTrailProperties { get; public set; }
    public Nullable`1<bool> IsComplete { get; public set; }
    [AWSPropertyAttribute]
public string PrincipalArn { get; public set; }
    public CloudTrailProperties get_CloudTrailProperties();
    public void set_CloudTrailProperties(CloudTrailProperties value);
    internal bool IsSetCloudTrailProperties();
    public Nullable`1<bool> get_IsComplete();
    public void set_IsComplete(Nullable`1<bool> value);
    internal bool IsSetIsComplete();
    public string get_PrincipalArn();
    public void set_PrincipalArn(string value);
    internal bool IsSetPrincipalArn();
}
public class Amazon.AccessAnalyzer.Model.GeneratedPolicyResult : object {
    private List`1<GeneratedPolicy> _generatedPolicies;
    private GeneratedPolicyProperties _properties;
    public List`1<GeneratedPolicy> GeneratedPolicies { get; public set; }
    [AWSPropertyAttribute]
public GeneratedPolicyProperties Properties { get; public set; }
    public List`1<GeneratedPolicy> get_GeneratedPolicies();
    public void set_GeneratedPolicies(List`1<GeneratedPolicy> value);
    internal bool IsSetGeneratedPolicies();
    public GeneratedPolicyProperties get_Properties();
    public void set_Properties(GeneratedPolicyProperties value);
    internal bool IsSetProperties();
}
public class Amazon.AccessAnalyzer.Model.GenerateFindingRecommendationRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private string _id;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.AccessAnalyzer.Model.GenerateFindingRecommendationResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.GetAccessPreviewRequest : AmazonAccessAnalyzerRequest {
    private string _accessPreviewId;
    private string _analyzerArn;
    [AWSPropertyAttribute]
public string AccessPreviewId { get; public set; }
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    public string get_AccessPreviewId();
    public void set_AccessPreviewId(string value);
    internal bool IsSetAccessPreviewId();
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
}
public class Amazon.AccessAnalyzer.Model.GetAccessPreviewResponse : AmazonWebServiceResponse {
    private AccessPreview _accessPreview;
    [AWSPropertyAttribute]
public AccessPreview AccessPreview { get; public set; }
    public AccessPreview get_AccessPreview();
    public void set_AccessPreview(AccessPreview value);
    internal bool IsSetAccessPreview();
}
public class Amazon.AccessAnalyzer.Model.GetAnalyzedResourceRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private string _resourceArn;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.AccessAnalyzer.Model.GetAnalyzedResourceResponse : AmazonWebServiceResponse {
    private AnalyzedResource _resource;
    public AnalyzedResource Resource { get; public set; }
    public AnalyzedResource get_Resource();
    public void set_Resource(AnalyzedResource value);
    internal bool IsSetResource();
}
public class Amazon.AccessAnalyzer.Model.GetAnalyzerRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerName;
    [AWSPropertyAttribute]
public string AnalyzerName { get; public set; }
    public string get_AnalyzerName();
    public void set_AnalyzerName(string value);
    internal bool IsSetAnalyzerName();
}
public class Amazon.AccessAnalyzer.Model.GetAnalyzerResponse : AmazonWebServiceResponse {
    private AnalyzerSummary _analyzer;
    [AWSPropertyAttribute]
public AnalyzerSummary Analyzer { get; public set; }
    public AnalyzerSummary get_Analyzer();
    public void set_Analyzer(AnalyzerSummary value);
    internal bool IsSetAnalyzer();
}
public class Amazon.AccessAnalyzer.Model.GetArchiveRuleRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerName;
    private string _ruleName;
    [AWSPropertyAttribute]
public string AnalyzerName { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    public string get_AnalyzerName();
    public void set_AnalyzerName(string value);
    internal bool IsSetAnalyzerName();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
}
public class Amazon.AccessAnalyzer.Model.GetArchiveRuleResponse : AmazonWebServiceResponse {
    private ArchiveRuleSummary _archiveRule;
    [AWSPropertyAttribute]
public ArchiveRuleSummary ArchiveRule { get; public set; }
    public ArchiveRuleSummary get_ArchiveRule();
    public void set_ArchiveRule(ArchiveRuleSummary value);
    internal bool IsSetArchiveRule();
}
internal class Amazon.AccessAnalyzer.Model.GetFindingRecommendationPaginator : object {
    private IAmazonAccessAnalyzer _client;
    private GetFindingRecommendationRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetFindingRecommendationResponse> Responses { get; }
    public IPaginatedEnumerable`1<RecommendedStep> RecommendedSteps { get; }
    internal GetFindingRecommendationPaginator(IAmazonAccessAnalyzer client, GetFindingRecommendationRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetFindingRecommendationResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<RecommendedStep> get_RecommendedSteps();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.GetFindingRecommendationPaginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-GetFindingRecommendationResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetFindingRecommendationResponse> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.GetFindingRecommendationResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.GetFindingRecommendationRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private string _id;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AccessAnalyzer.Model.GetFindingRecommendationResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _completedAt;
    private RecommendationError _error;
    private string _nextToken;
    private RecommendationType _recommendationType;
    private List`1<RecommendedStep> _recommendedSteps;
    private string _resourceArn;
    private Nullable`1<DateTime> _startedAt;
    private Status _status;
    public Nullable`1<DateTime> CompletedAt { get; public set; }
    public RecommendationError Error { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public RecommendationType RecommendationType { get; public set; }
    public List`1<RecommendedStep> RecommendedSteps { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartedAt { get; public set; }
    [AWSPropertyAttribute]
public Status Status { get; public set; }
    public Nullable`1<DateTime> get_CompletedAt();
    public void set_CompletedAt(Nullable`1<DateTime> value);
    internal bool IsSetCompletedAt();
    public RecommendationError get_Error();
    public void set_Error(RecommendationError value);
    internal bool IsSetError();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public RecommendationType get_RecommendationType();
    public void set_RecommendationType(RecommendationType value);
    internal bool IsSetRecommendationType();
    public List`1<RecommendedStep> get_RecommendedSteps();
    public void set_RecommendedSteps(List`1<RecommendedStep> value);
    internal bool IsSetRecommendedSteps();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public Nullable`1<DateTime> get_StartedAt();
    public void set_StartedAt(Nullable`1<DateTime> value);
    internal bool IsSetStartedAt();
    public Status get_Status();
    public void set_Status(Status value);
    internal bool IsSetStatus();
}
public class Amazon.AccessAnalyzer.Model.GetFindingRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private string _id;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.AccessAnalyzer.Model.GetFindingResponse : AmazonWebServiceResponse {
    private Finding _finding;
    public Finding Finding { get; public set; }
    public Finding get_Finding();
    public void set_Finding(Finding value);
    internal bool IsSetFinding();
}
internal class Amazon.AccessAnalyzer.Model.GetFindingV2Paginator : object {
    private IAmazonAccessAnalyzer _client;
    private GetFindingV2Request _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetFindingV2Response> Responses { get; }
    public IPaginatedEnumerable`1<FindingDetails> FindingDetails { get; }
    internal GetFindingV2Paginator(IAmazonAccessAnalyzer client, GetFindingV2Request request);
    public sealed virtual IPaginatedEnumerable`1<GetFindingV2Response> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FindingDetails> get_FindingDetails();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.GetFindingV2Paginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-GetFindingV2Response>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<GetFindingV2Response> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.GetFindingV2Response>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.GetFindingV2Request : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private string _id;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AccessAnalyzer.Model.GetFindingV2Response : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _analyzedAt;
    private Nullable`1<DateTime> _createdAt;
    private string _error;
    private List`1<FindingDetails> _findingDetails;
    private FindingType _findingType;
    private string _id;
    private string _nextToken;
    private string _resource;
    private string _resourceOwnerAccount;
    private ResourceType _resourceType;
    private FindingStatus _status;
    private Nullable`1<DateTime> _updatedAt;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> AnalyzedAt { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedAt { get; public set; }
    public string Error { get; public set; }
    [AWSPropertyAttribute]
public List`1<FindingDetails> FindingDetails { get; public set; }
    public FindingType FindingType { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string NextToken { get; public set; }
    public string Resource { get; public set; }
    [AWSPropertyAttribute]
public string ResourceOwnerAccount { get; public set; }
    [AWSPropertyAttribute]
public ResourceType ResourceType { get; public set; }
    [AWSPropertyAttribute]
public FindingStatus Status { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> UpdatedAt { get; public set; }
    public Nullable`1<DateTime> get_AnalyzedAt();
    public void set_AnalyzedAt(Nullable`1<DateTime> value);
    internal bool IsSetAnalyzedAt();
    public Nullable`1<DateTime> get_CreatedAt();
    public void set_CreatedAt(Nullable`1<DateTime> value);
    internal bool IsSetCreatedAt();
    public string get_Error();
    public void set_Error(string value);
    internal bool IsSetError();
    public List`1<FindingDetails> get_FindingDetails();
    public void set_FindingDetails(List`1<FindingDetails> value);
    internal bool IsSetFindingDetails();
    public FindingType get_FindingType();
    public void set_FindingType(FindingType value);
    internal bool IsSetFindingType();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public string get_ResourceOwnerAccount();
    public void set_ResourceOwnerAccount(string value);
    internal bool IsSetResourceOwnerAccount();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
    public FindingStatus get_Status();
    public void set_Status(FindingStatus value);
    internal bool IsSetStatus();
    public Nullable`1<DateTime> get_UpdatedAt();
    public void set_UpdatedAt(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedAt();
}
public class Amazon.AccessAnalyzer.Model.GetGeneratedPolicyRequest : AmazonAccessAnalyzerRequest {
    private Nullable`1<bool> _includeResourcePlaceholders;
    private Nullable`1<bool> _includeServiceLevelTemplate;
    private string _jobId;
    public Nullable`1<bool> IncludeResourcePlaceholders { get; public set; }
    public Nullable`1<bool> IncludeServiceLevelTemplate { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public Nullable`1<bool> get_IncludeResourcePlaceholders();
    public void set_IncludeResourcePlaceholders(Nullable`1<bool> value);
    internal bool IsSetIncludeResourcePlaceholders();
    public Nullable`1<bool> get_IncludeServiceLevelTemplate();
    public void set_IncludeServiceLevelTemplate(Nullable`1<bool> value);
    internal bool IsSetIncludeServiceLevelTemplate();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
}
public class Amazon.AccessAnalyzer.Model.GetGeneratedPolicyResponse : AmazonWebServiceResponse {
    private GeneratedPolicyResult _generatedPolicyResult;
    private JobDetails _jobDetails;
    [AWSPropertyAttribute]
public GeneratedPolicyResult GeneratedPolicyResult { get; public set; }
    [AWSPropertyAttribute]
public JobDetails JobDetails { get; public set; }
    public GeneratedPolicyResult get_GeneratedPolicyResult();
    public void set_GeneratedPolicyResult(GeneratedPolicyResult value);
    internal bool IsSetGeneratedPolicyResult();
    public JobDetails get_JobDetails();
    public void set_JobDetails(JobDetails value);
    internal bool IsSetJobDetails();
}
public interface Amazon.AccessAnalyzer.Model.IAccessAnalyzerPaginatorFactory {
    public abstract virtual IGetFindingRecommendationPaginator GetFindingRecommendation(GetFindingRecommendationRequest request);
    public abstract virtual IGetFindingV2Paginator GetFindingV2(GetFindingV2Request request);
    public abstract virtual IListAccessPreviewFindingsPaginator ListAccessPreviewFindings(ListAccessPreviewFindingsRequest request);
    public abstract virtual IListAccessPreviewsPaginator ListAccessPreviews(ListAccessPreviewsRequest request);
    public abstract virtual IListAnalyzedResourcesPaginator ListAnalyzedResources(ListAnalyzedResourcesRequest request);
    public abstract virtual IListAnalyzersPaginator ListAnalyzers(ListAnalyzersRequest request);
    public abstract virtual IListArchiveRulesPaginator ListArchiveRules(ListArchiveRulesRequest request);
    public abstract virtual IListFindingsPaginator ListFindings(ListFindingsRequest request);
    public abstract virtual IListFindingsV2Paginator ListFindingsV2(ListFindingsV2Request request);
    public abstract virtual IListPolicyGenerationsPaginator ListPolicyGenerations(ListPolicyGenerationsRequest request);
    public abstract virtual IValidatePolicyPaginator ValidatePolicy(ValidatePolicyRequest request);
}
public class Amazon.AccessAnalyzer.Model.IamRoleConfiguration : object {
    private string _trustPolicy;
    public string TrustPolicy { get; public set; }
    public string get_TrustPolicy();
    public void set_TrustPolicy(string value);
    internal bool IsSetTrustPolicy();
}
public interface Amazon.AccessAnalyzer.Model.IGetFindingRecommendationPaginator {
    public IPaginatedEnumerable`1<GetFindingRecommendationResponse> Responses { get; }
    public IPaginatedEnumerable`1<RecommendedStep> RecommendedSteps { get; }
    public abstract virtual IPaginatedEnumerable`1<GetFindingRecommendationResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<RecommendedStep> get_RecommendedSteps();
}
public interface Amazon.AccessAnalyzer.Model.IGetFindingV2Paginator {
    public IPaginatedEnumerable`1<GetFindingV2Response> Responses { get; }
    public IPaginatedEnumerable`1<FindingDetails> FindingDetails { get; }
    public abstract virtual IPaginatedEnumerable`1<GetFindingV2Response> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FindingDetails> get_FindingDetails();
}
public interface Amazon.AccessAnalyzer.Model.IListAccessPreviewFindingsPaginator {
    public IPaginatedEnumerable`1<ListAccessPreviewFindingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AccessPreviewFinding> Findings { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccessPreviewFindingsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AccessPreviewFinding> get_Findings();
}
public interface Amazon.AccessAnalyzer.Model.IListAccessPreviewsPaginator {
    public IPaginatedEnumerable`1<ListAccessPreviewsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AccessPreviewSummary> AccessPreviews { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAccessPreviewsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AccessPreviewSummary> get_AccessPreviews();
}
public interface Amazon.AccessAnalyzer.Model.IListAnalyzedResourcesPaginator {
    public IPaginatedEnumerable`1<ListAnalyzedResourcesResponse> Responses { get; }
    public IPaginatedEnumerable`1<AnalyzedResourceSummary> AnalyzedResources { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAnalyzedResourcesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AnalyzedResourceSummary> get_AnalyzedResources();
}
public interface Amazon.AccessAnalyzer.Model.IListAnalyzersPaginator {
    public IPaginatedEnumerable`1<ListAnalyzersResponse> Responses { get; }
    public IPaginatedEnumerable`1<AnalyzerSummary> Analyzers { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAnalyzersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AnalyzerSummary> get_Analyzers();
}
public interface Amazon.AccessAnalyzer.Model.IListArchiveRulesPaginator {
    public IPaginatedEnumerable`1<ListArchiveRulesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ArchiveRuleSummary> ArchiveRules { get; }
    public abstract virtual IPaginatedEnumerable`1<ListArchiveRulesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ArchiveRuleSummary> get_ArchiveRules();
}
public interface Amazon.AccessAnalyzer.Model.IListFindingsPaginator {
    public IPaginatedEnumerable`1<ListFindingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FindingSummary> Findings { get; }
    public abstract virtual IPaginatedEnumerable`1<ListFindingsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FindingSummary> get_Findings();
}
public interface Amazon.AccessAnalyzer.Model.IListFindingsV2Paginator {
    public IPaginatedEnumerable`1<ListFindingsV2Response> Responses { get; }
    public IPaginatedEnumerable`1<FindingSummaryV2> Findings { get; }
    public abstract virtual IPaginatedEnumerable`1<ListFindingsV2Response> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FindingSummaryV2> get_Findings();
}
public interface Amazon.AccessAnalyzer.Model.IListPolicyGenerationsPaginator {
    public IPaginatedEnumerable`1<ListPolicyGenerationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PolicyGeneration> PolicyGenerations { get; }
    public abstract virtual IPaginatedEnumerable`1<ListPolicyGenerationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PolicyGeneration> get_PolicyGenerations();
}
public class Amazon.AccessAnalyzer.Model.InlineArchiveRule : object {
    private Dictionary`2<string, Criterion> _filter;
    private string _ruleName;
    [AWSPropertyAttribute]
public Dictionary`2<string, Criterion> Filter { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    public Dictionary`2<string, Criterion> get_Filter();
    public void set_Filter(Dictionary`2<string, Criterion> value);
    internal bool IsSetFilter();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller : object {
    private static AccessDeniedExceptionUnmarshaller _instance;
    public static AccessDeniedExceptionUnmarshaller Instance { get; }
    private static AccessDeniedExceptionUnmarshaller();
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AccessMarshaller : object {
    public static AccessMarshaller Instance;
    private static AccessMarshaller();
    public sealed virtual void Marshall(Access requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AccessPreviewFindingUnmarshaller : object {
    private static AccessPreviewFindingUnmarshaller _instance;
    public static AccessPreviewFindingUnmarshaller Instance { get; }
    private static AccessPreviewFindingUnmarshaller();
    private sealed virtual override AccessPreviewFinding Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.AccessPreviewFinding,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessPreviewFinding Unmarshall(JsonUnmarshallerContext context);
    public static AccessPreviewFindingUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AccessPreviewStatusReasonUnmarshaller : object {
    private static AccessPreviewStatusReasonUnmarshaller _instance;
    public static AccessPreviewStatusReasonUnmarshaller Instance { get; }
    private static AccessPreviewStatusReasonUnmarshaller();
    private sealed virtual override AccessPreviewStatusReason Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.AccessPreviewStatusReason,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessPreviewStatusReason Unmarshall(JsonUnmarshallerContext context);
    public static AccessPreviewStatusReasonUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AccessPreviewSummaryUnmarshaller : object {
    private static AccessPreviewSummaryUnmarshaller _instance;
    public static AccessPreviewSummaryUnmarshaller Instance { get; }
    private static AccessPreviewSummaryUnmarshaller();
    private sealed virtual override AccessPreviewSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.AccessPreviewSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessPreviewSummary Unmarshall(JsonUnmarshallerContext context);
    public static AccessPreviewSummaryUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AccessPreviewUnmarshaller : object {
    private static AccessPreviewUnmarshaller _instance;
    public static AccessPreviewUnmarshaller Instance { get; }
    private static AccessPreviewUnmarshaller();
    private sealed virtual override AccessPreview Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.AccessPreview,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessPreview Unmarshall(JsonUnmarshallerContext context);
    public static AccessPreviewUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AclGranteeMarshaller : object {
    public static AclGranteeMarshaller Instance;
    private static AclGranteeMarshaller();
    public sealed virtual void Marshall(AclGrantee requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AclGranteeUnmarshaller : object {
    private static AclGranteeUnmarshaller _instance;
    public static AclGranteeUnmarshaller Instance { get; }
    private static AclGranteeUnmarshaller();
    private sealed virtual override AclGrantee Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.AclGrantee,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AclGrantee Unmarshall(JsonUnmarshallerContext context);
    public static AclGranteeUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AnalyzedResourceSummaryUnmarshaller : object {
    private static AnalyzedResourceSummaryUnmarshaller _instance;
    public static AnalyzedResourceSummaryUnmarshaller Instance { get; }
    private static AnalyzedResourceSummaryUnmarshaller();
    private sealed virtual override AnalyzedResourceSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.AnalyzedResourceSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalyzedResourceSummary Unmarshall(JsonUnmarshallerContext context);
    public static AnalyzedResourceSummaryUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AnalyzedResourceUnmarshaller : object {
    private static AnalyzedResourceUnmarshaller _instance;
    public static AnalyzedResourceUnmarshaller Instance { get; }
    private static AnalyzedResourceUnmarshaller();
    private sealed virtual override AnalyzedResource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.AnalyzedResource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalyzedResource Unmarshall(JsonUnmarshallerContext context);
    public static AnalyzedResourceUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AnalyzerConfigurationMarshaller : object {
    public static AnalyzerConfigurationMarshaller Instance;
    private static AnalyzerConfigurationMarshaller();
    public sealed virtual void Marshall(AnalyzerConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AnalyzerConfigurationUnmarshaller : object {
    private static AnalyzerConfigurationUnmarshaller _instance;
    public static AnalyzerConfigurationUnmarshaller Instance { get; }
    private static AnalyzerConfigurationUnmarshaller();
    private sealed virtual override AnalyzerConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.AnalyzerConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalyzerConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static AnalyzerConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.AnalyzerSummaryUnmarshaller : object {
    private static AnalyzerSummaryUnmarshaller _instance;
    public static AnalyzerSummaryUnmarshaller Instance { get; }
    private static AnalyzerSummaryUnmarshaller();
    private sealed virtual override AnalyzerSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.AnalyzerSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalyzerSummary Unmarshall(JsonUnmarshallerContext context);
    public static AnalyzerSummaryUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ApplyArchiveRuleRequestMarshaller : object {
    private static ApplyArchiveRuleRequestMarshaller _instance;
    public static ApplyArchiveRuleRequestMarshaller Instance { get; }
    private static ApplyArchiveRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ApplyArchiveRuleRequest publicRequest);
    internal static ApplyArchiveRuleRequestMarshaller GetInstance();
    public static ApplyArchiveRuleRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ApplyArchiveRuleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ApplyArchiveRuleResponseUnmarshaller _instance;
    public static ApplyArchiveRuleResponseUnmarshaller Instance { get; }
    private static ApplyArchiveRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ApplyArchiveRuleResponseUnmarshaller GetInstance();
    public static ApplyArchiveRuleResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ArchiveRuleSummaryUnmarshaller : object {
    private static ArchiveRuleSummaryUnmarshaller _instance;
    public static ArchiveRuleSummaryUnmarshaller Instance { get; }
    private static ArchiveRuleSummaryUnmarshaller();
    private sealed virtual override ArchiveRuleSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.ArchiveRuleSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ArchiveRuleSummary Unmarshall(JsonUnmarshallerContext context);
    public static ArchiveRuleSummaryUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CancelPolicyGenerationRequestMarshaller : object {
    private static CancelPolicyGenerationRequestMarshaller _instance;
    public static CancelPolicyGenerationRequestMarshaller Instance { get; }
    private static CancelPolicyGenerationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelPolicyGenerationRequest publicRequest);
    internal static CancelPolicyGenerationRequestMarshaller GetInstance();
    public static CancelPolicyGenerationRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CancelPolicyGenerationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelPolicyGenerationResponseUnmarshaller _instance;
    public static CancelPolicyGenerationResponseUnmarshaller Instance { get; }
    private static CancelPolicyGenerationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelPolicyGenerationResponseUnmarshaller GetInstance();
    public static CancelPolicyGenerationResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CheckAccessNotGrantedRequestMarshaller : object {
    private static CheckAccessNotGrantedRequestMarshaller _instance;
    public static CheckAccessNotGrantedRequestMarshaller Instance { get; }
    private static CheckAccessNotGrantedRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CheckAccessNotGrantedRequest publicRequest);
    internal static CheckAccessNotGrantedRequestMarshaller GetInstance();
    public static CheckAccessNotGrantedRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CheckAccessNotGrantedResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CheckAccessNotGrantedResponseUnmarshaller _instance;
    public static CheckAccessNotGrantedResponseUnmarshaller Instance { get; }
    private static CheckAccessNotGrantedResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CheckAccessNotGrantedResponseUnmarshaller GetInstance();
    public static CheckAccessNotGrantedResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CheckNoNewAccessRequestMarshaller : object {
    private static CheckNoNewAccessRequestMarshaller _instance;
    public static CheckNoNewAccessRequestMarshaller Instance { get; }
    private static CheckNoNewAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CheckNoNewAccessRequest publicRequest);
    internal static CheckNoNewAccessRequestMarshaller GetInstance();
    public static CheckNoNewAccessRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CheckNoNewAccessResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CheckNoNewAccessResponseUnmarshaller _instance;
    public static CheckNoNewAccessResponseUnmarshaller Instance { get; }
    private static CheckNoNewAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CheckNoNewAccessResponseUnmarshaller GetInstance();
    public static CheckNoNewAccessResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CheckNoPublicAccessRequestMarshaller : object {
    private static CheckNoPublicAccessRequestMarshaller _instance;
    public static CheckNoPublicAccessRequestMarshaller Instance { get; }
    private static CheckNoPublicAccessRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CheckNoPublicAccessRequest publicRequest);
    internal static CheckNoPublicAccessRequestMarshaller GetInstance();
    public static CheckNoPublicAccessRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CheckNoPublicAccessResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CheckNoPublicAccessResponseUnmarshaller _instance;
    public static CheckNoPublicAccessResponseUnmarshaller Instance { get; }
    private static CheckNoPublicAccessResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CheckNoPublicAccessResponseUnmarshaller GetInstance();
    public static CheckNoPublicAccessResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CloudTrailDetailsMarshaller : object {
    public static CloudTrailDetailsMarshaller Instance;
    private static CloudTrailDetailsMarshaller();
    public sealed virtual void Marshall(CloudTrailDetails requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CloudTrailPropertiesUnmarshaller : object {
    private static CloudTrailPropertiesUnmarshaller _instance;
    public static CloudTrailPropertiesUnmarshaller Instance { get; }
    private static CloudTrailPropertiesUnmarshaller();
    private sealed virtual override CloudTrailProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.CloudTrailProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudTrailProperties Unmarshall(JsonUnmarshallerContext context);
    public static CloudTrailPropertiesUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ConfigurationMarshaller : object {
    public static ConfigurationMarshaller Instance;
    private static ConfigurationMarshaller();
    public sealed virtual void Marshall(Configuration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ConfigurationUnmarshaller : object {
    private static ConfigurationUnmarshaller _instance;
    public static ConfigurationUnmarshaller Instance { get; }
    private static ConfigurationUnmarshaller();
    private sealed virtual override Configuration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.Configuration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Configuration Unmarshall(JsonUnmarshallerContext context);
    public static ConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CreateAccessPreviewRequestMarshaller : object {
    private static CreateAccessPreviewRequestMarshaller _instance;
    public static CreateAccessPreviewRequestMarshaller Instance { get; }
    private static CreateAccessPreviewRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAccessPreviewRequest publicRequest);
    internal static CreateAccessPreviewRequestMarshaller GetInstance();
    public static CreateAccessPreviewRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CreateAccessPreviewResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateAccessPreviewResponseUnmarshaller _instance;
    public static CreateAccessPreviewResponseUnmarshaller Instance { get; }
    private static CreateAccessPreviewResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAccessPreviewResponseUnmarshaller GetInstance();
    public static CreateAccessPreviewResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CreateAnalyzerRequestMarshaller : object {
    private static CreateAnalyzerRequestMarshaller _instance;
    public static CreateAnalyzerRequestMarshaller Instance { get; }
    private static CreateAnalyzerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAnalyzerRequest publicRequest);
    internal static CreateAnalyzerRequestMarshaller GetInstance();
    public static CreateAnalyzerRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CreateAnalyzerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateAnalyzerResponseUnmarshaller _instance;
    public static CreateAnalyzerResponseUnmarshaller Instance { get; }
    private static CreateAnalyzerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAnalyzerResponseUnmarshaller GetInstance();
    public static CreateAnalyzerResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CreateArchiveRuleRequestMarshaller : object {
    private static CreateArchiveRuleRequestMarshaller _instance;
    public static CreateArchiveRuleRequestMarshaller Instance { get; }
    private static CreateArchiveRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateArchiveRuleRequest publicRequest);
    internal static CreateArchiveRuleRequestMarshaller GetInstance();
    public static CreateArchiveRuleRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CreateArchiveRuleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateArchiveRuleResponseUnmarshaller _instance;
    public static CreateArchiveRuleResponseUnmarshaller Instance { get; }
    private static CreateArchiveRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateArchiveRuleResponseUnmarshaller GetInstance();
    public static CreateArchiveRuleResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CriterionMarshaller : object {
    public static CriterionMarshaller Instance;
    private static CriterionMarshaller();
    public sealed virtual void Marshall(Criterion requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.CriterionUnmarshaller : object {
    private static CriterionUnmarshaller _instance;
    public static CriterionUnmarshaller Instance { get; }
    private static CriterionUnmarshaller();
    private sealed virtual override Criterion Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.Criterion,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Criterion Unmarshall(JsonUnmarshallerContext context);
    public static CriterionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.DeleteAnalyzerRequestMarshaller : object {
    private static DeleteAnalyzerRequestMarshaller _instance;
    public static DeleteAnalyzerRequestMarshaller Instance { get; }
    private static DeleteAnalyzerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAnalyzerRequest publicRequest);
    internal static DeleteAnalyzerRequestMarshaller GetInstance();
    public static DeleteAnalyzerRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.DeleteAnalyzerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAnalyzerResponseUnmarshaller _instance;
    public static DeleteAnalyzerResponseUnmarshaller Instance { get; }
    private static DeleteAnalyzerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAnalyzerResponseUnmarshaller GetInstance();
    public static DeleteAnalyzerResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.DeleteArchiveRuleRequestMarshaller : object {
    private static DeleteArchiveRuleRequestMarshaller _instance;
    public static DeleteArchiveRuleRequestMarshaller Instance { get; }
    private static DeleteArchiveRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteArchiveRuleRequest publicRequest);
    internal static DeleteArchiveRuleRequestMarshaller GetInstance();
    public static DeleteArchiveRuleRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.DeleteArchiveRuleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteArchiveRuleResponseUnmarshaller _instance;
    public static DeleteArchiveRuleResponseUnmarshaller Instance { get; }
    private static DeleteArchiveRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteArchiveRuleResponseUnmarshaller GetInstance();
    public static DeleteArchiveRuleResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.DynamodbStreamConfigurationMarshaller : object {
    public static DynamodbStreamConfigurationMarshaller Instance;
    private static DynamodbStreamConfigurationMarshaller();
    public sealed virtual void Marshall(DynamodbStreamConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.DynamodbStreamConfigurationUnmarshaller : object {
    private static DynamodbStreamConfigurationUnmarshaller _instance;
    public static DynamodbStreamConfigurationUnmarshaller Instance { get; }
    private static DynamodbStreamConfigurationUnmarshaller();
    private sealed virtual override DynamodbStreamConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.DynamodbStreamConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DynamodbStreamConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static DynamodbStreamConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.DynamodbTableConfigurationMarshaller : object {
    public static DynamodbTableConfigurationMarshaller Instance;
    private static DynamodbTableConfigurationMarshaller();
    public sealed virtual void Marshall(DynamodbTableConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.DynamodbTableConfigurationUnmarshaller : object {
    private static DynamodbTableConfigurationUnmarshaller _instance;
    public static DynamodbTableConfigurationUnmarshaller Instance { get; }
    private static DynamodbTableConfigurationUnmarshaller();
    private sealed virtual override DynamodbTableConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.DynamodbTableConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DynamodbTableConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static DynamodbTableConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.EbsSnapshotConfigurationMarshaller : object {
    public static EbsSnapshotConfigurationMarshaller Instance;
    private static EbsSnapshotConfigurationMarshaller();
    public sealed virtual void Marshall(EbsSnapshotConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.EbsSnapshotConfigurationUnmarshaller : object {
    private static EbsSnapshotConfigurationUnmarshaller _instance;
    public static EbsSnapshotConfigurationUnmarshaller Instance { get; }
    private static EbsSnapshotConfigurationUnmarshaller();
    private sealed virtual override EbsSnapshotConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.EbsSnapshotConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EbsSnapshotConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EbsSnapshotConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.EcrRepositoryConfigurationMarshaller : object {
    public static EcrRepositoryConfigurationMarshaller Instance;
    private static EcrRepositoryConfigurationMarshaller();
    public sealed virtual void Marshall(EcrRepositoryConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.EcrRepositoryConfigurationUnmarshaller : object {
    private static EcrRepositoryConfigurationUnmarshaller _instance;
    public static EcrRepositoryConfigurationUnmarshaller Instance { get; }
    private static EcrRepositoryConfigurationUnmarshaller();
    private sealed virtual override EcrRepositoryConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.EcrRepositoryConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EcrRepositoryConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EcrRepositoryConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.EfsFileSystemConfigurationMarshaller : object {
    public static EfsFileSystemConfigurationMarshaller Instance;
    private static EfsFileSystemConfigurationMarshaller();
    public sealed virtual void Marshall(EfsFileSystemConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.EfsFileSystemConfigurationUnmarshaller : object {
    private static EfsFileSystemConfigurationUnmarshaller _instance;
    public static EfsFileSystemConfigurationUnmarshaller Instance { get; }
    private static EfsFileSystemConfigurationUnmarshaller();
    private sealed virtual override EfsFileSystemConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.EfsFileSystemConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EfsFileSystemConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EfsFileSystemConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ExternalAccessDetailsUnmarshaller : object {
    private static ExternalAccessDetailsUnmarshaller _instance;
    public static ExternalAccessDetailsUnmarshaller Instance { get; }
    private static ExternalAccessDetailsUnmarshaller();
    private sealed virtual override ExternalAccessDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.ExternalAccessDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExternalAccessDetails Unmarshall(JsonUnmarshallerContext context);
    public static ExternalAccessDetailsUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.FindingDetailsUnmarshaller : object {
    private static FindingDetailsUnmarshaller _instance;
    public static FindingDetailsUnmarshaller Instance { get; }
    private static FindingDetailsUnmarshaller();
    private sealed virtual override FindingDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.FindingDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FindingDetails Unmarshall(JsonUnmarshallerContext context);
    public static FindingDetailsUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.FindingSourceDetailUnmarshaller : object {
    private static FindingSourceDetailUnmarshaller _instance;
    public static FindingSourceDetailUnmarshaller Instance { get; }
    private static FindingSourceDetailUnmarshaller();
    private sealed virtual override FindingSourceDetail Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.FindingSourceDetail,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FindingSourceDetail Unmarshall(JsonUnmarshallerContext context);
    public static FindingSourceDetailUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.FindingSourceUnmarshaller : object {
    private static FindingSourceUnmarshaller _instance;
    public static FindingSourceUnmarshaller Instance { get; }
    private static FindingSourceUnmarshaller();
    private sealed virtual override FindingSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.FindingSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FindingSource Unmarshall(JsonUnmarshallerContext context);
    public static FindingSourceUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.FindingSummaryUnmarshaller : object {
    private static FindingSummaryUnmarshaller _instance;
    public static FindingSummaryUnmarshaller Instance { get; }
    private static FindingSummaryUnmarshaller();
    private sealed virtual override FindingSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.FindingSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FindingSummary Unmarshall(JsonUnmarshallerContext context);
    public static FindingSummaryUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.FindingSummaryV2Unmarshaller : object {
    private static FindingSummaryV2Unmarshaller _instance;
    public static FindingSummaryV2Unmarshaller Instance { get; }
    private static FindingSummaryV2Unmarshaller();
    private sealed virtual override FindingSummaryV2 Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.FindingSummaryV2,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FindingSummaryV2 Unmarshall(JsonUnmarshallerContext context);
    public static FindingSummaryV2Unmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.FindingUnmarshaller : object {
    private static FindingUnmarshaller _instance;
    public static FindingUnmarshaller Instance { get; }
    private static FindingUnmarshaller();
    private sealed virtual override Finding Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.Finding,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Finding Unmarshall(JsonUnmarshallerContext context);
    public static FindingUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GeneratedPolicyPropertiesUnmarshaller : object {
    private static GeneratedPolicyPropertiesUnmarshaller _instance;
    public static GeneratedPolicyPropertiesUnmarshaller Instance { get; }
    private static GeneratedPolicyPropertiesUnmarshaller();
    private sealed virtual override GeneratedPolicyProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.GeneratedPolicyProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GeneratedPolicyProperties Unmarshall(JsonUnmarshallerContext context);
    public static GeneratedPolicyPropertiesUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GeneratedPolicyResultUnmarshaller : object {
    private static GeneratedPolicyResultUnmarshaller _instance;
    public static GeneratedPolicyResultUnmarshaller Instance { get; }
    private static GeneratedPolicyResultUnmarshaller();
    private sealed virtual override GeneratedPolicyResult Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.GeneratedPolicyResult,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GeneratedPolicyResult Unmarshall(JsonUnmarshallerContext context);
    public static GeneratedPolicyResultUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GeneratedPolicyUnmarshaller : object {
    private static GeneratedPolicyUnmarshaller _instance;
    public static GeneratedPolicyUnmarshaller Instance { get; }
    private static GeneratedPolicyUnmarshaller();
    private sealed virtual override GeneratedPolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.GeneratedPolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GeneratedPolicy Unmarshall(JsonUnmarshallerContext context);
    public static GeneratedPolicyUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GenerateFindingRecommendationRequestMarshaller : object {
    private static GenerateFindingRecommendationRequestMarshaller _instance;
    public static GenerateFindingRecommendationRequestMarshaller Instance { get; }
    private static GenerateFindingRecommendationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GenerateFindingRecommendationRequest publicRequest);
    internal static GenerateFindingRecommendationRequestMarshaller GetInstance();
    public static GenerateFindingRecommendationRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GenerateFindingRecommendationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GenerateFindingRecommendationResponseUnmarshaller _instance;
    public static GenerateFindingRecommendationResponseUnmarshaller Instance { get; }
    private static GenerateFindingRecommendationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GenerateFindingRecommendationResponseUnmarshaller GetInstance();
    public static GenerateFindingRecommendationResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetAccessPreviewRequestMarshaller : object {
    private static GetAccessPreviewRequestMarshaller _instance;
    public static GetAccessPreviewRequestMarshaller Instance { get; }
    private static GetAccessPreviewRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAccessPreviewRequest publicRequest);
    internal static GetAccessPreviewRequestMarshaller GetInstance();
    public static GetAccessPreviewRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetAccessPreviewResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetAccessPreviewResponseUnmarshaller _instance;
    public static GetAccessPreviewResponseUnmarshaller Instance { get; }
    private static GetAccessPreviewResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAccessPreviewResponseUnmarshaller GetInstance();
    public static GetAccessPreviewResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetAnalyzedResourceRequestMarshaller : object {
    private static GetAnalyzedResourceRequestMarshaller _instance;
    public static GetAnalyzedResourceRequestMarshaller Instance { get; }
    private static GetAnalyzedResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAnalyzedResourceRequest publicRequest);
    internal static GetAnalyzedResourceRequestMarshaller GetInstance();
    public static GetAnalyzedResourceRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetAnalyzedResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetAnalyzedResourceResponseUnmarshaller _instance;
    public static GetAnalyzedResourceResponseUnmarshaller Instance { get; }
    private static GetAnalyzedResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAnalyzedResourceResponseUnmarshaller GetInstance();
    public static GetAnalyzedResourceResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetAnalyzerRequestMarshaller : object {
    private static GetAnalyzerRequestMarshaller _instance;
    public static GetAnalyzerRequestMarshaller Instance { get; }
    private static GetAnalyzerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAnalyzerRequest publicRequest);
    internal static GetAnalyzerRequestMarshaller GetInstance();
    public static GetAnalyzerRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetAnalyzerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetAnalyzerResponseUnmarshaller _instance;
    public static GetAnalyzerResponseUnmarshaller Instance { get; }
    private static GetAnalyzerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAnalyzerResponseUnmarshaller GetInstance();
    public static GetAnalyzerResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetArchiveRuleRequestMarshaller : object {
    private static GetArchiveRuleRequestMarshaller _instance;
    public static GetArchiveRuleRequestMarshaller Instance { get; }
    private static GetArchiveRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetArchiveRuleRequest publicRequest);
    internal static GetArchiveRuleRequestMarshaller GetInstance();
    public static GetArchiveRuleRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetArchiveRuleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetArchiveRuleResponseUnmarshaller _instance;
    public static GetArchiveRuleResponseUnmarshaller Instance { get; }
    private static GetArchiveRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetArchiveRuleResponseUnmarshaller GetInstance();
    public static GetArchiveRuleResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetFindingRecommendationRequestMarshaller : object {
    private static GetFindingRecommendationRequestMarshaller _instance;
    public static GetFindingRecommendationRequestMarshaller Instance { get; }
    private static GetFindingRecommendationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFindingRecommendationRequest publicRequest);
    internal static GetFindingRecommendationRequestMarshaller GetInstance();
    public static GetFindingRecommendationRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetFindingRecommendationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFindingRecommendationResponseUnmarshaller _instance;
    public static GetFindingRecommendationResponseUnmarshaller Instance { get; }
    private static GetFindingRecommendationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFindingRecommendationResponseUnmarshaller GetInstance();
    public static GetFindingRecommendationResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetFindingRequestMarshaller : object {
    private static GetFindingRequestMarshaller _instance;
    public static GetFindingRequestMarshaller Instance { get; }
    private static GetFindingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFindingRequest publicRequest);
    internal static GetFindingRequestMarshaller GetInstance();
    public static GetFindingRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetFindingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFindingResponseUnmarshaller _instance;
    public static GetFindingResponseUnmarshaller Instance { get; }
    private static GetFindingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFindingResponseUnmarshaller GetInstance();
    public static GetFindingResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetFindingV2RequestMarshaller : object {
    private static GetFindingV2RequestMarshaller _instance;
    public static GetFindingV2RequestMarshaller Instance { get; }
    private static GetFindingV2RequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFindingV2Request publicRequest);
    internal static GetFindingV2RequestMarshaller GetInstance();
    public static GetFindingV2RequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetFindingV2ResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetFindingV2ResponseUnmarshaller _instance;
    public static GetFindingV2ResponseUnmarshaller Instance { get; }
    private static GetFindingV2ResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFindingV2ResponseUnmarshaller GetInstance();
    public static GetFindingV2ResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetGeneratedPolicyRequestMarshaller : object {
    private static GetGeneratedPolicyRequestMarshaller _instance;
    public static GetGeneratedPolicyRequestMarshaller Instance { get; }
    private static GetGeneratedPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetGeneratedPolicyRequest publicRequest);
    internal static GetGeneratedPolicyRequestMarshaller GetInstance();
    public static GetGeneratedPolicyRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.GetGeneratedPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetGeneratedPolicyResponseUnmarshaller _instance;
    public static GetGeneratedPolicyResponseUnmarshaller Instance { get; }
    private static GetGeneratedPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetGeneratedPolicyResponseUnmarshaller GetInstance();
    public static GetGeneratedPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.IamRoleConfigurationMarshaller : object {
    public static IamRoleConfigurationMarshaller Instance;
    private static IamRoleConfigurationMarshaller();
    public sealed virtual void Marshall(IamRoleConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.IamRoleConfigurationUnmarshaller : object {
    private static IamRoleConfigurationUnmarshaller _instance;
    public static IamRoleConfigurationUnmarshaller Instance { get; }
    private static IamRoleConfigurationUnmarshaller();
    private sealed virtual override IamRoleConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.IamRoleConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IamRoleConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static IamRoleConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.InlineArchiveRuleMarshaller : object {
    public static InlineArchiveRuleMarshaller Instance;
    private static InlineArchiveRuleMarshaller();
    public sealed virtual void Marshall(InlineArchiveRule requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller : object {
    private static InternalServerExceptionUnmarshaller _instance;
    public static InternalServerExceptionUnmarshaller Instance { get; }
    private static InternalServerExceptionUnmarshaller();
    public sealed virtual InternalServerException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServerException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServerExceptionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.InternetConfigurationMarshaller : object {
    public static InternetConfigurationMarshaller Instance;
    private static InternetConfigurationMarshaller();
    public sealed virtual void Marshall(InternetConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.InternetConfigurationUnmarshaller : object {
    private static InternetConfigurationUnmarshaller _instance;
    public static InternetConfigurationUnmarshaller Instance { get; }
    private static InternetConfigurationUnmarshaller();
    private sealed virtual override InternetConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.InternetConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InternetConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static InternetConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller : object {
    private static InvalidParameterExceptionUnmarshaller _instance;
    public static InvalidParameterExceptionUnmarshaller Instance { get; }
    private static InvalidParameterExceptionUnmarshaller();
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.JobDetailsUnmarshaller : object {
    private static JobDetailsUnmarshaller _instance;
    public static JobDetailsUnmarshaller Instance { get; }
    private static JobDetailsUnmarshaller();
    private sealed virtual override JobDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.JobDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobDetails Unmarshall(JsonUnmarshallerContext context);
    public static JobDetailsUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.JobErrorUnmarshaller : object {
    private static JobErrorUnmarshaller _instance;
    public static JobErrorUnmarshaller Instance { get; }
    private static JobErrorUnmarshaller();
    private sealed virtual override JobError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.JobError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JobError Unmarshall(JsonUnmarshallerContext context);
    public static JobErrorUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.KmsGrantConfigurationMarshaller : object {
    public static KmsGrantConfigurationMarshaller Instance;
    private static KmsGrantConfigurationMarshaller();
    public sealed virtual void Marshall(KmsGrantConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.KmsGrantConfigurationUnmarshaller : object {
    private static KmsGrantConfigurationUnmarshaller _instance;
    public static KmsGrantConfigurationUnmarshaller Instance { get; }
    private static KmsGrantConfigurationUnmarshaller();
    private sealed virtual override KmsGrantConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.KmsGrantConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KmsGrantConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static KmsGrantConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.KmsGrantConstraintsMarshaller : object {
    public static KmsGrantConstraintsMarshaller Instance;
    private static KmsGrantConstraintsMarshaller();
    public sealed virtual void Marshall(KmsGrantConstraints requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.KmsGrantConstraintsUnmarshaller : object {
    private static KmsGrantConstraintsUnmarshaller _instance;
    public static KmsGrantConstraintsUnmarshaller Instance { get; }
    private static KmsGrantConstraintsUnmarshaller();
    private sealed virtual override KmsGrantConstraints Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.KmsGrantConstraints,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KmsGrantConstraints Unmarshall(JsonUnmarshallerContext context);
    public static KmsGrantConstraintsUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.KmsKeyConfigurationMarshaller : object {
    public static KmsKeyConfigurationMarshaller Instance;
    private static KmsKeyConfigurationMarshaller();
    public sealed virtual void Marshall(KmsKeyConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.KmsKeyConfigurationUnmarshaller : object {
    private static KmsKeyConfigurationUnmarshaller _instance;
    public static KmsKeyConfigurationUnmarshaller Instance { get; }
    private static KmsKeyConfigurationUnmarshaller();
    private sealed virtual override KmsKeyConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.KmsKeyConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KmsKeyConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static KmsKeyConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListAccessPreviewFindingsRequestMarshaller : object {
    private static ListAccessPreviewFindingsRequestMarshaller _instance;
    public static ListAccessPreviewFindingsRequestMarshaller Instance { get; }
    private static ListAccessPreviewFindingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccessPreviewFindingsRequest publicRequest);
    internal static ListAccessPreviewFindingsRequestMarshaller GetInstance();
    public static ListAccessPreviewFindingsRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListAccessPreviewFindingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAccessPreviewFindingsResponseUnmarshaller _instance;
    public static ListAccessPreviewFindingsResponseUnmarshaller Instance { get; }
    private static ListAccessPreviewFindingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccessPreviewFindingsResponseUnmarshaller GetInstance();
    public static ListAccessPreviewFindingsResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListAccessPreviewsRequestMarshaller : object {
    private static ListAccessPreviewsRequestMarshaller _instance;
    public static ListAccessPreviewsRequestMarshaller Instance { get; }
    private static ListAccessPreviewsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAccessPreviewsRequest publicRequest);
    internal static ListAccessPreviewsRequestMarshaller GetInstance();
    public static ListAccessPreviewsRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListAccessPreviewsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAccessPreviewsResponseUnmarshaller _instance;
    public static ListAccessPreviewsResponseUnmarshaller Instance { get; }
    private static ListAccessPreviewsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAccessPreviewsResponseUnmarshaller GetInstance();
    public static ListAccessPreviewsResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListAnalyzedResourcesRequestMarshaller : object {
    private static ListAnalyzedResourcesRequestMarshaller _instance;
    public static ListAnalyzedResourcesRequestMarshaller Instance { get; }
    private static ListAnalyzedResourcesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAnalyzedResourcesRequest publicRequest);
    internal static ListAnalyzedResourcesRequestMarshaller GetInstance();
    public static ListAnalyzedResourcesRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListAnalyzedResourcesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAnalyzedResourcesResponseUnmarshaller _instance;
    public static ListAnalyzedResourcesResponseUnmarshaller Instance { get; }
    private static ListAnalyzedResourcesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAnalyzedResourcesResponseUnmarshaller GetInstance();
    public static ListAnalyzedResourcesResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListAnalyzersRequestMarshaller : object {
    private static ListAnalyzersRequestMarshaller _instance;
    public static ListAnalyzersRequestMarshaller Instance { get; }
    private static ListAnalyzersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAnalyzersRequest publicRequest);
    internal static ListAnalyzersRequestMarshaller GetInstance();
    public static ListAnalyzersRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListAnalyzersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAnalyzersResponseUnmarshaller _instance;
    public static ListAnalyzersResponseUnmarshaller Instance { get; }
    private static ListAnalyzersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAnalyzersResponseUnmarshaller GetInstance();
    public static ListAnalyzersResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListArchiveRulesRequestMarshaller : object {
    private static ListArchiveRulesRequestMarshaller _instance;
    public static ListArchiveRulesRequestMarshaller Instance { get; }
    private static ListArchiveRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListArchiveRulesRequest publicRequest);
    internal static ListArchiveRulesRequestMarshaller GetInstance();
    public static ListArchiveRulesRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListArchiveRulesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListArchiveRulesResponseUnmarshaller _instance;
    public static ListArchiveRulesResponseUnmarshaller Instance { get; }
    private static ListArchiveRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListArchiveRulesResponseUnmarshaller GetInstance();
    public static ListArchiveRulesResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListFindingsRequestMarshaller : object {
    private static ListFindingsRequestMarshaller _instance;
    public static ListFindingsRequestMarshaller Instance { get; }
    private static ListFindingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFindingsRequest publicRequest);
    internal static ListFindingsRequestMarshaller GetInstance();
    public static ListFindingsRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListFindingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFindingsResponseUnmarshaller _instance;
    public static ListFindingsResponseUnmarshaller Instance { get; }
    private static ListFindingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFindingsResponseUnmarshaller GetInstance();
    public static ListFindingsResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListFindingsV2RequestMarshaller : object {
    private static ListFindingsV2RequestMarshaller _instance;
    public static ListFindingsV2RequestMarshaller Instance { get; }
    private static ListFindingsV2RequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFindingsV2Request publicRequest);
    internal static ListFindingsV2RequestMarshaller GetInstance();
    public static ListFindingsV2RequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListFindingsV2ResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListFindingsV2ResponseUnmarshaller _instance;
    public static ListFindingsV2ResponseUnmarshaller Instance { get; }
    private static ListFindingsV2ResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFindingsV2ResponseUnmarshaller GetInstance();
    public static ListFindingsV2ResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListPolicyGenerationsRequestMarshaller : object {
    private static ListPolicyGenerationsRequestMarshaller _instance;
    public static ListPolicyGenerationsRequestMarshaller Instance { get; }
    private static ListPolicyGenerationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListPolicyGenerationsRequest publicRequest);
    internal static ListPolicyGenerationsRequestMarshaller GetInstance();
    public static ListPolicyGenerationsRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListPolicyGenerationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListPolicyGenerationsResponseUnmarshaller _instance;
    public static ListPolicyGenerationsResponseUnmarshaller Instance { get; }
    private static ListPolicyGenerationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListPolicyGenerationsResponseUnmarshaller GetInstance();
    public static ListPolicyGenerationsResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.LocationUnmarshaller : object {
    private static LocationUnmarshaller _instance;
    public static LocationUnmarshaller Instance { get; }
    private static LocationUnmarshaller();
    private sealed virtual override Location Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.Location,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Location Unmarshall(JsonUnmarshallerContext context);
    public static LocationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.NetworkOriginConfigurationMarshaller : object {
    public static NetworkOriginConfigurationMarshaller Instance;
    private static NetworkOriginConfigurationMarshaller();
    public sealed virtual void Marshall(NetworkOriginConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.NetworkOriginConfigurationUnmarshaller : object {
    private static NetworkOriginConfigurationUnmarshaller _instance;
    public static NetworkOriginConfigurationUnmarshaller Instance { get; }
    private static NetworkOriginConfigurationUnmarshaller();
    private sealed virtual override NetworkOriginConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.NetworkOriginConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NetworkOriginConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static NetworkOriginConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.PathElementUnmarshaller : object {
    private static PathElementUnmarshaller _instance;
    public static PathElementUnmarshaller Instance { get; }
    private static PathElementUnmarshaller();
    private sealed virtual override PathElement Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.PathElement,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PathElement Unmarshall(JsonUnmarshallerContext context);
    public static PathElementUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.PolicyGenerationDetailsMarshaller : object {
    public static PolicyGenerationDetailsMarshaller Instance;
    private static PolicyGenerationDetailsMarshaller();
    public sealed virtual void Marshall(PolicyGenerationDetails requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.PolicyGenerationUnmarshaller : object {
    private static PolicyGenerationUnmarshaller _instance;
    public static PolicyGenerationUnmarshaller Instance { get; }
    private static PolicyGenerationUnmarshaller();
    private sealed virtual override PolicyGeneration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.PolicyGeneration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PolicyGeneration Unmarshall(JsonUnmarshallerContext context);
    public static PolicyGenerationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.PositionUnmarshaller : object {
    private static PositionUnmarshaller _instance;
    public static PositionUnmarshaller Instance { get; }
    private static PositionUnmarshaller();
    private sealed virtual override Position Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.Position,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Position Unmarshall(JsonUnmarshallerContext context);
    public static PositionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.RdsDbClusterSnapshotAttributeValueMarshaller : object {
    public static RdsDbClusterSnapshotAttributeValueMarshaller Instance;
    private static RdsDbClusterSnapshotAttributeValueMarshaller();
    public sealed virtual void Marshall(RdsDbClusterSnapshotAttributeValue requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.RdsDbClusterSnapshotAttributeValueUnmarshaller : object {
    private static RdsDbClusterSnapshotAttributeValueUnmarshaller _instance;
    public static RdsDbClusterSnapshotAttributeValueUnmarshaller Instance { get; }
    private static RdsDbClusterSnapshotAttributeValueUnmarshaller();
    private sealed virtual override RdsDbClusterSnapshotAttributeValue Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.RdsDbClusterSnapshotAttributeValue,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RdsDbClusterSnapshotAttributeValue Unmarshall(JsonUnmarshallerContext context);
    public static RdsDbClusterSnapshotAttributeValueUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.RdsDbClusterSnapshotConfigurationMarshaller : object {
    public static RdsDbClusterSnapshotConfigurationMarshaller Instance;
    private static RdsDbClusterSnapshotConfigurationMarshaller();
    public sealed virtual void Marshall(RdsDbClusterSnapshotConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.RdsDbClusterSnapshotConfigurationUnmarshaller : object {
    private static RdsDbClusterSnapshotConfigurationUnmarshaller _instance;
    public static RdsDbClusterSnapshotConfigurationUnmarshaller Instance { get; }
    private static RdsDbClusterSnapshotConfigurationUnmarshaller();
    private sealed virtual override RdsDbClusterSnapshotConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.RdsDbClusterSnapshotConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RdsDbClusterSnapshotConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static RdsDbClusterSnapshotConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.RdsDbSnapshotAttributeValueMarshaller : object {
    public static RdsDbSnapshotAttributeValueMarshaller Instance;
    private static RdsDbSnapshotAttributeValueMarshaller();
    public sealed virtual void Marshall(RdsDbSnapshotAttributeValue requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.RdsDbSnapshotAttributeValueUnmarshaller : object {
    private static RdsDbSnapshotAttributeValueUnmarshaller _instance;
    public static RdsDbSnapshotAttributeValueUnmarshaller Instance { get; }
    private static RdsDbSnapshotAttributeValueUnmarshaller();
    private sealed virtual override RdsDbSnapshotAttributeValue Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.RdsDbSnapshotAttributeValue,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RdsDbSnapshotAttributeValue Unmarshall(JsonUnmarshallerContext context);
    public static RdsDbSnapshotAttributeValueUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.RdsDbSnapshotConfigurationMarshaller : object {
    public static RdsDbSnapshotConfigurationMarshaller Instance;
    private static RdsDbSnapshotConfigurationMarshaller();
    public sealed virtual void Marshall(RdsDbSnapshotConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.RdsDbSnapshotConfigurationUnmarshaller : object {
    private static RdsDbSnapshotConfigurationUnmarshaller _instance;
    public static RdsDbSnapshotConfigurationUnmarshaller Instance { get; }
    private static RdsDbSnapshotConfigurationUnmarshaller();
    private sealed virtual override RdsDbSnapshotConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.RdsDbSnapshotConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RdsDbSnapshotConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static RdsDbSnapshotConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ReasonSummaryUnmarshaller : object {
    private static ReasonSummaryUnmarshaller _instance;
    public static ReasonSummaryUnmarshaller Instance { get; }
    private static ReasonSummaryUnmarshaller();
    private sealed virtual override ReasonSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.ReasonSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReasonSummary Unmarshall(JsonUnmarshallerContext context);
    public static ReasonSummaryUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.RecommendationErrorUnmarshaller : object {
    private static RecommendationErrorUnmarshaller _instance;
    public static RecommendationErrorUnmarshaller Instance { get; }
    private static RecommendationErrorUnmarshaller();
    private sealed virtual override RecommendationError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.RecommendationError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecommendationError Unmarshall(JsonUnmarshallerContext context);
    public static RecommendationErrorUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.RecommendedStepUnmarshaller : object {
    private static RecommendedStepUnmarshaller _instance;
    public static RecommendedStepUnmarshaller Instance { get; }
    private static RecommendedStepUnmarshaller();
    private sealed virtual override RecommendedStep Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.RecommendedStep,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecommendedStep Unmarshall(JsonUnmarshallerContext context);
    public static RecommendedStepUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.S3AccessPointConfigurationMarshaller : object {
    public static S3AccessPointConfigurationMarshaller Instance;
    private static S3AccessPointConfigurationMarshaller();
    public sealed virtual void Marshall(S3AccessPointConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.S3AccessPointConfigurationUnmarshaller : object {
    private static S3AccessPointConfigurationUnmarshaller _instance;
    public static S3AccessPointConfigurationUnmarshaller Instance { get; }
    private static S3AccessPointConfigurationUnmarshaller();
    private sealed virtual override S3AccessPointConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.S3AccessPointConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3AccessPointConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static S3AccessPointConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.S3BucketAclGrantConfigurationMarshaller : object {
    public static S3BucketAclGrantConfigurationMarshaller Instance;
    private static S3BucketAclGrantConfigurationMarshaller();
    public sealed virtual void Marshall(S3BucketAclGrantConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.S3BucketAclGrantConfigurationUnmarshaller : object {
    private static S3BucketAclGrantConfigurationUnmarshaller _instance;
    public static S3BucketAclGrantConfigurationUnmarshaller Instance { get; }
    private static S3BucketAclGrantConfigurationUnmarshaller();
    private sealed virtual override S3BucketAclGrantConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.S3BucketAclGrantConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3BucketAclGrantConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static S3BucketAclGrantConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.S3BucketConfigurationMarshaller : object {
    public static S3BucketConfigurationMarshaller Instance;
    private static S3BucketConfigurationMarshaller();
    public sealed virtual void Marshall(S3BucketConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.S3BucketConfigurationUnmarshaller : object {
    private static S3BucketConfigurationUnmarshaller _instance;
    public static S3BucketConfigurationUnmarshaller Instance { get; }
    private static S3BucketConfigurationUnmarshaller();
    private sealed virtual override S3BucketConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.S3BucketConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3BucketConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static S3BucketConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.S3ExpressDirectoryBucketConfigurationMarshaller : object {
    public static S3ExpressDirectoryBucketConfigurationMarshaller Instance;
    private static S3ExpressDirectoryBucketConfigurationMarshaller();
    public sealed virtual void Marshall(S3ExpressDirectoryBucketConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.S3ExpressDirectoryBucketConfigurationUnmarshaller : object {
    private static S3ExpressDirectoryBucketConfigurationUnmarshaller _instance;
    public static S3ExpressDirectoryBucketConfigurationUnmarshaller Instance { get; }
    private static S3ExpressDirectoryBucketConfigurationUnmarshaller();
    private sealed virtual override S3ExpressDirectoryBucketConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.S3ExpressDirectoryBucketConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3ExpressDirectoryBucketConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static S3ExpressDirectoryBucketConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.S3PublicAccessBlockConfigurationMarshaller : object {
    public static S3PublicAccessBlockConfigurationMarshaller Instance;
    private static S3PublicAccessBlockConfigurationMarshaller();
    public sealed virtual void Marshall(S3PublicAccessBlockConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.S3PublicAccessBlockConfigurationUnmarshaller : object {
    private static S3PublicAccessBlockConfigurationUnmarshaller _instance;
    public static S3PublicAccessBlockConfigurationUnmarshaller Instance { get; }
    private static S3PublicAccessBlockConfigurationUnmarshaller();
    private sealed virtual override S3PublicAccessBlockConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.S3PublicAccessBlockConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3PublicAccessBlockConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static S3PublicAccessBlockConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.SecretsManagerSecretConfigurationMarshaller : object {
    public static SecretsManagerSecretConfigurationMarshaller Instance;
    private static SecretsManagerSecretConfigurationMarshaller();
    public sealed virtual void Marshall(SecretsManagerSecretConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.SecretsManagerSecretConfigurationUnmarshaller : object {
    private static SecretsManagerSecretConfigurationUnmarshaller _instance;
    public static SecretsManagerSecretConfigurationUnmarshaller Instance { get; }
    private static SecretsManagerSecretConfigurationUnmarshaller();
    private sealed virtual override SecretsManagerSecretConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.SecretsManagerSecretConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SecretsManagerSecretConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static SecretsManagerSecretConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller : object {
    private static ServiceQuotaExceededExceptionUnmarshaller _instance;
    public static ServiceQuotaExceededExceptionUnmarshaller Instance { get; }
    private static ServiceQuotaExceededExceptionUnmarshaller();
    public sealed virtual ServiceQuotaExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceQuotaExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.SnsTopicConfigurationMarshaller : object {
    public static SnsTopicConfigurationMarshaller Instance;
    private static SnsTopicConfigurationMarshaller();
    public sealed virtual void Marshall(SnsTopicConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.SnsTopicConfigurationUnmarshaller : object {
    private static SnsTopicConfigurationUnmarshaller _instance;
    public static SnsTopicConfigurationUnmarshaller Instance { get; }
    private static SnsTopicConfigurationUnmarshaller();
    private sealed virtual override SnsTopicConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.SnsTopicConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SnsTopicConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static SnsTopicConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.SortCriteriaMarshaller : object {
    public static SortCriteriaMarshaller Instance;
    private static SortCriteriaMarshaller();
    public sealed virtual void Marshall(SortCriteria requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.SpanUnmarshaller : object {
    private static SpanUnmarshaller _instance;
    public static SpanUnmarshaller Instance { get; }
    private static SpanUnmarshaller();
    private sealed virtual override Span Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.Span,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Span Unmarshall(JsonUnmarshallerContext context);
    public static SpanUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.SqsQueueConfigurationMarshaller : object {
    public static SqsQueueConfigurationMarshaller Instance;
    private static SqsQueueConfigurationMarshaller();
    public sealed virtual void Marshall(SqsQueueConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.SqsQueueConfigurationUnmarshaller : object {
    private static SqsQueueConfigurationUnmarshaller _instance;
    public static SqsQueueConfigurationUnmarshaller Instance { get; }
    private static SqsQueueConfigurationUnmarshaller();
    private sealed virtual override SqsQueueConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.SqsQueueConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SqsQueueConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static SqsQueueConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.StartPolicyGenerationRequestMarshaller : object {
    private static StartPolicyGenerationRequestMarshaller _instance;
    public static StartPolicyGenerationRequestMarshaller Instance { get; }
    private static StartPolicyGenerationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartPolicyGenerationRequest publicRequest);
    internal static StartPolicyGenerationRequestMarshaller GetInstance();
    public static StartPolicyGenerationRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.StartPolicyGenerationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartPolicyGenerationResponseUnmarshaller _instance;
    public static StartPolicyGenerationResponseUnmarshaller Instance { get; }
    private static StartPolicyGenerationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartPolicyGenerationResponseUnmarshaller GetInstance();
    public static StartPolicyGenerationResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.StartResourceScanRequestMarshaller : object {
    private static StartResourceScanRequestMarshaller _instance;
    public static StartResourceScanRequestMarshaller Instance { get; }
    private static StartResourceScanRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartResourceScanRequest publicRequest);
    internal static StartResourceScanRequestMarshaller GetInstance();
    public static StartResourceScanRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.StartResourceScanResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartResourceScanResponseUnmarshaller _instance;
    public static StartResourceScanResponseUnmarshaller Instance { get; }
    private static StartResourceScanResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartResourceScanResponseUnmarshaller GetInstance();
    public static StartResourceScanResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.StatusReasonUnmarshaller : object {
    private static StatusReasonUnmarshaller _instance;
    public static StatusReasonUnmarshaller Instance { get; }
    private static StatusReasonUnmarshaller();
    private sealed virtual override StatusReason Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.StatusReason,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatusReason Unmarshall(JsonUnmarshallerContext context);
    public static StatusReasonUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.SubstringUnmarshaller : object {
    private static SubstringUnmarshaller _instance;
    public static SubstringUnmarshaller Instance { get; }
    private static SubstringUnmarshaller();
    private sealed virtual override Substring Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.Substring,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Substring Unmarshall(JsonUnmarshallerContext context);
    public static SubstringUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller : object {
    private static ThrottlingExceptionUnmarshaller _instance;
    public static ThrottlingExceptionUnmarshaller Instance { get; }
    private static ThrottlingExceptionUnmarshaller();
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ThrottlingExceptionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.TrailMarshaller : object {
    public static TrailMarshaller Instance;
    private static TrailMarshaller();
    public sealed virtual void Marshall(Trail requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.TrailPropertiesUnmarshaller : object {
    private static TrailPropertiesUnmarshaller _instance;
    public static TrailPropertiesUnmarshaller Instance { get; }
    private static TrailPropertiesUnmarshaller();
    private sealed virtual override TrailProperties Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.TrailProperties,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrailProperties Unmarshall(JsonUnmarshallerContext context);
    public static TrailPropertiesUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UnprocessableEntityExceptionUnmarshaller : object {
    private static UnprocessableEntityExceptionUnmarshaller _instance;
    public static UnprocessableEntityExceptionUnmarshaller Instance { get; }
    private static UnprocessableEntityExceptionUnmarshaller();
    public sealed virtual UnprocessableEntityException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnprocessableEntityException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnprocessableEntityExceptionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UnusedAccessConfigurationMarshaller : object {
    public static UnusedAccessConfigurationMarshaller Instance;
    private static UnusedAccessConfigurationMarshaller();
    public sealed virtual void Marshall(UnusedAccessConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UnusedAccessConfigurationUnmarshaller : object {
    private static UnusedAccessConfigurationUnmarshaller _instance;
    public static UnusedAccessConfigurationUnmarshaller Instance { get; }
    private static UnusedAccessConfigurationUnmarshaller();
    private sealed virtual override UnusedAccessConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.UnusedAccessConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnusedAccessConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static UnusedAccessConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UnusedActionUnmarshaller : object {
    private static UnusedActionUnmarshaller _instance;
    public static UnusedActionUnmarshaller Instance { get; }
    private static UnusedActionUnmarshaller();
    private sealed virtual override UnusedAction Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.UnusedAction,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnusedAction Unmarshall(JsonUnmarshallerContext context);
    public static UnusedActionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UnusedIamRoleDetailsUnmarshaller : object {
    private static UnusedIamRoleDetailsUnmarshaller _instance;
    public static UnusedIamRoleDetailsUnmarshaller Instance { get; }
    private static UnusedIamRoleDetailsUnmarshaller();
    private sealed virtual override UnusedIamRoleDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.UnusedIamRoleDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnusedIamRoleDetails Unmarshall(JsonUnmarshallerContext context);
    public static UnusedIamRoleDetailsUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UnusedIamUserAccessKeyDetailsUnmarshaller : object {
    private static UnusedIamUserAccessKeyDetailsUnmarshaller _instance;
    public static UnusedIamUserAccessKeyDetailsUnmarshaller Instance { get; }
    private static UnusedIamUserAccessKeyDetailsUnmarshaller();
    private sealed virtual override UnusedIamUserAccessKeyDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.UnusedIamUserAccessKeyDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnusedIamUserAccessKeyDetails Unmarshall(JsonUnmarshallerContext context);
    public static UnusedIamUserAccessKeyDetailsUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UnusedIamUserPasswordDetailsUnmarshaller : object {
    private static UnusedIamUserPasswordDetailsUnmarshaller _instance;
    public static UnusedIamUserPasswordDetailsUnmarshaller Instance { get; }
    private static UnusedIamUserPasswordDetailsUnmarshaller();
    private sealed virtual override UnusedIamUserPasswordDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.UnusedIamUserPasswordDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnusedIamUserPasswordDetails Unmarshall(JsonUnmarshallerContext context);
    public static UnusedIamUserPasswordDetailsUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UnusedPermissionDetailsUnmarshaller : object {
    private static UnusedPermissionDetailsUnmarshaller _instance;
    public static UnusedPermissionDetailsUnmarshaller Instance { get; }
    private static UnusedPermissionDetailsUnmarshaller();
    private sealed virtual override UnusedPermissionDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.UnusedPermissionDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnusedPermissionDetails Unmarshall(JsonUnmarshallerContext context);
    public static UnusedPermissionDetailsUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UnusedPermissionsRecommendedStepUnmarshaller : object {
    private static UnusedPermissionsRecommendedStepUnmarshaller _instance;
    public static UnusedPermissionsRecommendedStepUnmarshaller Instance { get; }
    private static UnusedPermissionsRecommendedStepUnmarshaller();
    private sealed virtual override UnusedPermissionsRecommendedStep Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.UnusedPermissionsRecommendedStep,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnusedPermissionsRecommendedStep Unmarshall(JsonUnmarshallerContext context);
    public static UnusedPermissionsRecommendedStepUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UpdateArchiveRuleRequestMarshaller : object {
    private static UpdateArchiveRuleRequestMarshaller _instance;
    public static UpdateArchiveRuleRequestMarshaller Instance { get; }
    private static UpdateArchiveRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateArchiveRuleRequest publicRequest);
    internal static UpdateArchiveRuleRequestMarshaller GetInstance();
    public static UpdateArchiveRuleRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UpdateArchiveRuleResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateArchiveRuleResponseUnmarshaller _instance;
    public static UpdateArchiveRuleResponseUnmarshaller Instance { get; }
    private static UpdateArchiveRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateArchiveRuleResponseUnmarshaller GetInstance();
    public static UpdateArchiveRuleResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UpdateFindingsRequestMarshaller : object {
    private static UpdateFindingsRequestMarshaller _instance;
    public static UpdateFindingsRequestMarshaller Instance { get; }
    private static UpdateFindingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFindingsRequest publicRequest);
    internal static UpdateFindingsRequestMarshaller GetInstance();
    public static UpdateFindingsRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.UpdateFindingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateFindingsResponseUnmarshaller _instance;
    public static UpdateFindingsResponseUnmarshaller Instance { get; }
    private static UpdateFindingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFindingsResponseUnmarshaller GetInstance();
    public static UpdateFindingsResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ValidatePolicyFindingUnmarshaller : object {
    private static ValidatePolicyFindingUnmarshaller _instance;
    public static ValidatePolicyFindingUnmarshaller Instance { get; }
    private static ValidatePolicyFindingUnmarshaller();
    private sealed virtual override ValidatePolicyFinding Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.ValidatePolicyFinding,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ValidatePolicyFinding Unmarshall(JsonUnmarshallerContext context);
    public static ValidatePolicyFindingUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ValidatePolicyRequestMarshaller : object {
    private static ValidatePolicyRequestMarshaller _instance;
    public static ValidatePolicyRequestMarshaller Instance { get; }
    private static ValidatePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ValidatePolicyRequest publicRequest);
    internal static ValidatePolicyRequestMarshaller GetInstance();
    public static ValidatePolicyRequestMarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ValidatePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ValidatePolicyResponseUnmarshaller _instance;
    public static ValidatePolicyResponseUnmarshaller Instance { get; }
    private static ValidatePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ValidatePolicyResponseUnmarshaller GetInstance();
    public static ValidatePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller : object {
    private static ValidationExceptionFieldUnmarshaller _instance;
    public static ValidationExceptionFieldUnmarshaller Instance { get; }
    private static ValidationExceptionFieldUnmarshaller();
    private sealed virtual override ValidationExceptionField Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.ValidationExceptionField,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ValidationExceptionField Unmarshall(JsonUnmarshallerContext context);
    public static ValidationExceptionFieldUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller : object {
    private static ValidationExceptionUnmarshaller _instance;
    public static ValidationExceptionUnmarshaller Instance { get; }
    private static ValidationExceptionUnmarshaller();
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ValidationExceptionUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.VpcConfigurationMarshaller : object {
    public static VpcConfigurationMarshaller Instance;
    private static VpcConfigurationMarshaller();
    public sealed virtual void Marshall(VpcConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.AccessAnalyzer.Model.Internal.MarshallTransformations.VpcConfigurationUnmarshaller : object {
    private static VpcConfigurationUnmarshaller _instance;
    public static VpcConfigurationUnmarshaller Instance { get; }
    private static VpcConfigurationUnmarshaller();
    private sealed virtual override VpcConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.AccessAnalyzer.Model.VpcConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static VpcConfigurationUnmarshaller get_Instance();
}
public class Amazon.AccessAnalyzer.Model.InternalServerException : AmazonAccessAnalyzerException {
    private Nullable`1<int> _retryAfterSeconds;
    private RetryableDetails _retryableDetails;
    public Nullable`1<int> RetryAfterSeconds { get; public set; }
    public RetryableDetails Retryable { get; }
    public InternalServerException(string message);
    public InternalServerException(string message, Exception innerException);
    public InternalServerException(Exception innerException);
    public InternalServerException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServerException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public Nullable`1<int> get_RetryAfterSeconds();
    public void set_RetryAfterSeconds(Nullable`1<int> value);
    internal bool IsSetRetryAfterSeconds();
    public virtual RetryableDetails get_Retryable();
}
public class Amazon.AccessAnalyzer.Model.InternetConfiguration : object {
}
public class Amazon.AccessAnalyzer.Model.InvalidParameterException : AmazonAccessAnalyzerException {
    public InvalidParameterException(string message);
    public InvalidParameterException(string message, Exception innerException);
    public InvalidParameterException(Exception innerException);
    public InvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.AccessAnalyzer.Model.IValidatePolicyPaginator {
    public IPaginatedEnumerable`1<ValidatePolicyResponse> Responses { get; }
    public IPaginatedEnumerable`1<ValidatePolicyFinding> Findings { get; }
    public abstract virtual IPaginatedEnumerable`1<ValidatePolicyResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ValidatePolicyFinding> get_Findings();
}
public class Amazon.AccessAnalyzer.Model.JobDetails : object {
    private Nullable`1<DateTime> _completedOn;
    private JobError _jobError;
    private string _jobId;
    private Nullable`1<DateTime> _startedOn;
    private JobStatus _status;
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    public JobError JobError { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartedOn { get; public set; }
    [AWSPropertyAttribute]
public JobStatus Status { get; public set; }
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public JobError get_JobError();
    public void set_JobError(JobError value);
    internal bool IsSetJobError();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public JobStatus get_Status();
    public void set_Status(JobStatus value);
    internal bool IsSetStatus();
}
public class Amazon.AccessAnalyzer.Model.JobError : object {
    private JobErrorCode _code;
    private string _message;
    [AWSPropertyAttribute]
public JobErrorCode Code { get; public set; }
    [AWSPropertyAttribute]
public string Message { get; public set; }
    public JobErrorCode get_Code();
    public void set_Code(JobErrorCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.AccessAnalyzer.Model.KmsGrantConfiguration : object {
    private KmsGrantConstraints _constraints;
    private string _granteePrincipal;
    private string _issuingAccount;
    private List`1<string> _operations;
    private string _retiringPrincipal;
    public KmsGrantConstraints Constraints { get; public set; }
    [AWSPropertyAttribute]
public string GranteePrincipal { get; public set; }
    [AWSPropertyAttribute]
public string IssuingAccount { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Operations { get; public set; }
    public string RetiringPrincipal { get; public set; }
    public KmsGrantConstraints get_Constraints();
    public void set_Constraints(KmsGrantConstraints value);
    internal bool IsSetConstraints();
    public string get_GranteePrincipal();
    public void set_GranteePrincipal(string value);
    internal bool IsSetGranteePrincipal();
    public string get_IssuingAccount();
    public void set_IssuingAccount(string value);
    internal bool IsSetIssuingAccount();
    public List`1<string> get_Operations();
    public void set_Operations(List`1<string> value);
    internal bool IsSetOperations();
    public string get_RetiringPrincipal();
    public void set_RetiringPrincipal(string value);
    internal bool IsSetRetiringPrincipal();
}
public class Amazon.AccessAnalyzer.Model.KmsGrantConstraints : object {
    private Dictionary`2<string, string> _encryptionContextEquals;
    private Dictionary`2<string, string> _encryptionContextSubset;
    public Dictionary`2<string, string> EncryptionContextEquals { get; public set; }
    public Dictionary`2<string, string> EncryptionContextSubset { get; public set; }
    public Dictionary`2<string, string> get_EncryptionContextEquals();
    public void set_EncryptionContextEquals(Dictionary`2<string, string> value);
    internal bool IsSetEncryptionContextEquals();
    public Dictionary`2<string, string> get_EncryptionContextSubset();
    public void set_EncryptionContextSubset(Dictionary`2<string, string> value);
    internal bool IsSetEncryptionContextSubset();
}
public class Amazon.AccessAnalyzer.Model.KmsKeyConfiguration : object {
    private List`1<KmsGrantConfiguration> _grants;
    private Dictionary`2<string, string> _keyPolicies;
    public List`1<KmsGrantConfiguration> Grants { get; public set; }
    public Dictionary`2<string, string> KeyPolicies { get; public set; }
    public List`1<KmsGrantConfiguration> get_Grants();
    public void set_Grants(List`1<KmsGrantConfiguration> value);
    internal bool IsSetGrants();
    public Dictionary`2<string, string> get_KeyPolicies();
    public void set_KeyPolicies(Dictionary`2<string, string> value);
    internal bool IsSetKeyPolicies();
}
internal class Amazon.AccessAnalyzer.Model.ListAccessPreviewFindingsPaginator : object {
    private IAmazonAccessAnalyzer _client;
    private ListAccessPreviewFindingsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccessPreviewFindingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AccessPreviewFinding> Findings { get; }
    internal ListAccessPreviewFindingsPaginator(IAmazonAccessAnalyzer client, ListAccessPreviewFindingsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccessPreviewFindingsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AccessPreviewFinding> get_Findings();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.ListAccessPreviewFindingsPaginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-ListAccessPreviewFindingsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListAccessPreviewFindingsResponse> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.ListAccessPreviewFindingsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.ListAccessPreviewFindingsRequest : AmazonAccessAnalyzerRequest {
    private string _accessPreviewId;
    private string _analyzerArn;
    private Dictionary`2<string, Criterion> _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AccessPreviewId { get; public set; }
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    public Dictionary`2<string, Criterion> Filter { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AccessPreviewId();
    public void set_AccessPreviewId(string value);
    internal bool IsSetAccessPreviewId();
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public Dictionary`2<string, Criterion> get_Filter();
    public void set_Filter(Dictionary`2<string, Criterion> value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AccessAnalyzer.Model.ListAccessPreviewFindingsResponse : AmazonWebServiceResponse {
    private List`1<AccessPreviewFinding> _findings;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<AccessPreviewFinding> Findings { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AccessPreviewFinding> get_Findings();
    public void set_Findings(List`1<AccessPreviewFinding> value);
    internal bool IsSetFindings();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.AccessAnalyzer.Model.ListAccessPreviewsPaginator : object {
    private IAmazonAccessAnalyzer _client;
    private ListAccessPreviewsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAccessPreviewsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AccessPreviewSummary> AccessPreviews { get; }
    internal ListAccessPreviewsPaginator(IAmazonAccessAnalyzer client, ListAccessPreviewsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAccessPreviewsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AccessPreviewSummary> get_AccessPreviews();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.ListAccessPreviewsPaginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-ListAccessPreviewsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListAccessPreviewsResponse> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.ListAccessPreviewsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.ListAccessPreviewsRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AccessAnalyzer.Model.ListAccessPreviewsResponse : AmazonWebServiceResponse {
    private List`1<AccessPreviewSummary> _accessPreviews;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<AccessPreviewSummary> AccessPreviews { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AccessPreviewSummary> get_AccessPreviews();
    public void set_AccessPreviews(List`1<AccessPreviewSummary> value);
    internal bool IsSetAccessPreviews();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.AccessAnalyzer.Model.ListAnalyzedResourcesPaginator : object {
    private IAmazonAccessAnalyzer _client;
    private ListAnalyzedResourcesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAnalyzedResourcesResponse> Responses { get; }
    public IPaginatedEnumerable`1<AnalyzedResourceSummary> AnalyzedResources { get; }
    internal ListAnalyzedResourcesPaginator(IAmazonAccessAnalyzer client, ListAnalyzedResourcesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAnalyzedResourcesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AnalyzedResourceSummary> get_AnalyzedResources();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.ListAnalyzedResourcesPaginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-ListAnalyzedResourcesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListAnalyzedResourcesResponse> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.ListAnalyzedResourcesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.ListAnalyzedResourcesRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private ResourceType _resourceType;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public ResourceType ResourceType { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ResourceType get_ResourceType();
    public void set_ResourceType(ResourceType value);
    internal bool IsSetResourceType();
}
public class Amazon.AccessAnalyzer.Model.ListAnalyzedResourcesResponse : AmazonWebServiceResponse {
    private List`1<AnalyzedResourceSummary> _analyzedResources;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<AnalyzedResourceSummary> AnalyzedResources { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AnalyzedResourceSummary> get_AnalyzedResources();
    public void set_AnalyzedResources(List`1<AnalyzedResourceSummary> value);
    internal bool IsSetAnalyzedResources();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.AccessAnalyzer.Model.ListAnalyzersPaginator : object {
    private IAmazonAccessAnalyzer _client;
    private ListAnalyzersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAnalyzersResponse> Responses { get; }
    public IPaginatedEnumerable`1<AnalyzerSummary> Analyzers { get; }
    internal ListAnalyzersPaginator(IAmazonAccessAnalyzer client, ListAnalyzersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAnalyzersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AnalyzerSummary> get_Analyzers();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.ListAnalyzersPaginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-ListAnalyzersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListAnalyzersResponse> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.ListAnalyzersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.ListAnalyzersRequest : AmazonAccessAnalyzerRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Type _type;
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Type Type { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Type get_Type();
    public void set_Type(Type value);
    internal bool IsSetType();
}
public class Amazon.AccessAnalyzer.Model.ListAnalyzersResponse : AmazonWebServiceResponse {
    private List`1<AnalyzerSummary> _analyzers;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<AnalyzerSummary> Analyzers { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AnalyzerSummary> get_Analyzers();
    public void set_Analyzers(List`1<AnalyzerSummary> value);
    internal bool IsSetAnalyzers();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.AccessAnalyzer.Model.ListArchiveRulesPaginator : object {
    private IAmazonAccessAnalyzer _client;
    private ListArchiveRulesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListArchiveRulesResponse> Responses { get; }
    public IPaginatedEnumerable`1<ArchiveRuleSummary> ArchiveRules { get; }
    internal ListArchiveRulesPaginator(IAmazonAccessAnalyzer client, ListArchiveRulesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListArchiveRulesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ArchiveRuleSummary> get_ArchiveRules();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.ListArchiveRulesPaginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-ListArchiveRulesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListArchiveRulesResponse> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.ListArchiveRulesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.ListArchiveRulesRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string AnalyzerName { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_AnalyzerName();
    public void set_AnalyzerName(string value);
    internal bool IsSetAnalyzerName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AccessAnalyzer.Model.ListArchiveRulesResponse : AmazonWebServiceResponse {
    private List`1<ArchiveRuleSummary> _archiveRules;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<ArchiveRuleSummary> ArchiveRules { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ArchiveRuleSummary> get_ArchiveRules();
    public void set_ArchiveRules(List`1<ArchiveRuleSummary> value);
    internal bool IsSetArchiveRules();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.AccessAnalyzer.Model.ListFindingsPaginator : object {
    private IAmazonAccessAnalyzer _client;
    private ListFindingsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListFindingsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FindingSummary> Findings { get; }
    internal ListFindingsPaginator(IAmazonAccessAnalyzer client, ListFindingsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListFindingsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FindingSummary> get_Findings();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.ListFindingsPaginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-ListFindingsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListFindingsResponse> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.ListFindingsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.ListFindingsRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private Dictionary`2<string, Criterion> _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private SortCriteria _sort;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    public Dictionary`2<string, Criterion> Filter { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public SortCriteria Sort { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public Dictionary`2<string, Criterion> get_Filter();
    public void set_Filter(Dictionary`2<string, Criterion> value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public SortCriteria get_Sort();
    public void set_Sort(SortCriteria value);
    internal bool IsSetSort();
}
public class Amazon.AccessAnalyzer.Model.ListFindingsResponse : AmazonWebServiceResponse {
    private List`1<FindingSummary> _findings;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<FindingSummary> Findings { get; public set; }
    public string NextToken { get; public set; }
    public List`1<FindingSummary> get_Findings();
    public void set_Findings(List`1<FindingSummary> value);
    internal bool IsSetFindings();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.AccessAnalyzer.Model.ListFindingsV2Paginator : object {
    private IAmazonAccessAnalyzer _client;
    private ListFindingsV2Request _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListFindingsV2Response> Responses { get; }
    public IPaginatedEnumerable`1<FindingSummaryV2> Findings { get; }
    internal ListFindingsV2Paginator(IAmazonAccessAnalyzer client, ListFindingsV2Request request);
    public sealed virtual IPaginatedEnumerable`1<ListFindingsV2Response> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FindingSummaryV2> get_Findings();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.ListFindingsV2Paginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-ListFindingsV2Response>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListFindingsV2Response> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.ListFindingsV2Response>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.ListFindingsV2Request : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private Dictionary`2<string, Criterion> _filter;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private SortCriteria _sort;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    public Dictionary`2<string, Criterion> Filter { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public SortCriteria Sort { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public Dictionary`2<string, Criterion> get_Filter();
    public void set_Filter(Dictionary`2<string, Criterion> value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public SortCriteria get_Sort();
    public void set_Sort(SortCriteria value);
    internal bool IsSetSort();
}
public class Amazon.AccessAnalyzer.Model.ListFindingsV2Response : AmazonWebServiceResponse {
    private List`1<FindingSummaryV2> _findings;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<FindingSummaryV2> Findings { get; public set; }
    public string NextToken { get; public set; }
    public List`1<FindingSummaryV2> get_Findings();
    public void set_Findings(List`1<FindingSummaryV2> value);
    internal bool IsSetFindings();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.AccessAnalyzer.Model.ListPolicyGenerationsPaginator : object {
    private IAmazonAccessAnalyzer _client;
    private ListPolicyGenerationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListPolicyGenerationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PolicyGeneration> PolicyGenerations { get; }
    internal ListPolicyGenerationsPaginator(IAmazonAccessAnalyzer client, ListPolicyGenerationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListPolicyGenerationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PolicyGeneration> get_PolicyGenerations();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.ListPolicyGenerationsPaginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-ListPolicyGenerationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListPolicyGenerationsResponse> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.ListPolicyGenerationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.ListPolicyGenerationsRequest : AmazonAccessAnalyzerRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _principalArn;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string PrincipalArn { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_PrincipalArn();
    public void set_PrincipalArn(string value);
    internal bool IsSetPrincipalArn();
}
public class Amazon.AccessAnalyzer.Model.ListPolicyGenerationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PolicyGeneration> _policyGenerations;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<PolicyGeneration> PolicyGenerations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PolicyGeneration> get_PolicyGenerations();
    public void set_PolicyGenerations(List`1<PolicyGeneration> value);
    internal bool IsSetPolicyGenerations();
}
public class Amazon.AccessAnalyzer.Model.ListTagsForResourceRequest : AmazonAccessAnalyzerRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.AccessAnalyzer.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.AccessAnalyzer.Model.Location : object {
    private List`1<PathElement> _path;
    private Span _span;
    [AWSPropertyAttribute]
public List`1<PathElement> Path { get; public set; }
    [AWSPropertyAttribute]
public Span Span { get; public set; }
    public List`1<PathElement> get_Path();
    public void set_Path(List`1<PathElement> value);
    internal bool IsSetPath();
    public Span get_Span();
    public void set_Span(Span value);
    internal bool IsSetSpan();
}
public class Amazon.AccessAnalyzer.Model.NetworkOriginConfiguration : object {
    private InternetConfiguration _internetConfiguration;
    private VpcConfiguration _vpcConfiguration;
    public InternetConfiguration InternetConfiguration { get; public set; }
    public VpcConfiguration VpcConfiguration { get; public set; }
    public InternetConfiguration get_InternetConfiguration();
    public void set_InternetConfiguration(InternetConfiguration value);
    internal bool IsSetInternetConfiguration();
    public VpcConfiguration get_VpcConfiguration();
    public void set_VpcConfiguration(VpcConfiguration value);
    internal bool IsSetVpcConfiguration();
}
public class Amazon.AccessAnalyzer.Model.PathElement : object {
    private Nullable`1<int> _index;
    private string _key;
    private Substring _substring;
    private string _value;
    public Nullable`1<int> Index { get; public set; }
    public string Key { get; public set; }
    public Substring Substring { get; public set; }
    public string Value { get; public set; }
    public Nullable`1<int> get_Index();
    public void set_Index(Nullable`1<int> value);
    internal bool IsSetIndex();
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public Substring get_Substring();
    public void set_Substring(Substring value);
    internal bool IsSetSubstring();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.AccessAnalyzer.Model.PolicyGeneration : object {
    private Nullable`1<DateTime> _completedOn;
    private string _jobId;
    private string _principalArn;
    private Nullable`1<DateTime> _startedOn;
    private JobStatus _status;
    public Nullable`1<DateTime> CompletedOn { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public string PrincipalArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartedOn { get; public set; }
    [AWSPropertyAttribute]
public JobStatus Status { get; public set; }
    public Nullable`1<DateTime> get_CompletedOn();
    public void set_CompletedOn(Nullable`1<DateTime> value);
    internal bool IsSetCompletedOn();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_PrincipalArn();
    public void set_PrincipalArn(string value);
    internal bool IsSetPrincipalArn();
    public Nullable`1<DateTime> get_StartedOn();
    public void set_StartedOn(Nullable`1<DateTime> value);
    internal bool IsSetStartedOn();
    public JobStatus get_Status();
    public void set_Status(JobStatus value);
    internal bool IsSetStatus();
}
public class Amazon.AccessAnalyzer.Model.PolicyGenerationDetails : object {
    private string _principalArn;
    [AWSPropertyAttribute]
public string PrincipalArn { get; public set; }
    public string get_PrincipalArn();
    public void set_PrincipalArn(string value);
    internal bool IsSetPrincipalArn();
}
public class Amazon.AccessAnalyzer.Model.Position : object {
    private Nullable`1<int> _column;
    private Nullable`1<int> _line;
    private Nullable`1<int> _offset;
    [AWSPropertyAttribute]
public Nullable`1<int> Column { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Line { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Offset { get; public set; }
    public Nullable`1<int> get_Column();
    public void set_Column(Nullable`1<int> value);
    internal bool IsSetColumn();
    public Nullable`1<int> get_Line();
    public void set_Line(Nullable`1<int> value);
    internal bool IsSetLine();
    public Nullable`1<int> get_Offset();
    public void set_Offset(Nullable`1<int> value);
    internal bool IsSetOffset();
}
public class Amazon.AccessAnalyzer.Model.RdsDbClusterSnapshotAttributeValue : object {
    private List`1<string> _accountIds;
    public List`1<string> AccountIds { get; public set; }
    public List`1<string> get_AccountIds();
    public void set_AccountIds(List`1<string> value);
    internal bool IsSetAccountIds();
}
public class Amazon.AccessAnalyzer.Model.RdsDbClusterSnapshotConfiguration : object {
    private Dictionary`2<string, RdsDbClusterSnapshotAttributeValue> _attributes;
    private string _kmsKeyId;
    public Dictionary`2<string, RdsDbClusterSnapshotAttributeValue> Attributes { get; public set; }
    public string KmsKeyId { get; public set; }
    public Dictionary`2<string, RdsDbClusterSnapshotAttributeValue> get_Attributes();
    public void set_Attributes(Dictionary`2<string, RdsDbClusterSnapshotAttributeValue> value);
    internal bool IsSetAttributes();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
}
public class Amazon.AccessAnalyzer.Model.RdsDbSnapshotAttributeValue : object {
    private List`1<string> _accountIds;
    public List`1<string> AccountIds { get; public set; }
    public List`1<string> get_AccountIds();
    public void set_AccountIds(List`1<string> value);
    internal bool IsSetAccountIds();
}
public class Amazon.AccessAnalyzer.Model.RdsDbSnapshotConfiguration : object {
    private Dictionary`2<string, RdsDbSnapshotAttributeValue> _attributes;
    private string _kmsKeyId;
    public Dictionary`2<string, RdsDbSnapshotAttributeValue> Attributes { get; public set; }
    public string KmsKeyId { get; public set; }
    public Dictionary`2<string, RdsDbSnapshotAttributeValue> get_Attributes();
    public void set_Attributes(Dictionary`2<string, RdsDbSnapshotAttributeValue> value);
    internal bool IsSetAttributes();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
}
public class Amazon.AccessAnalyzer.Model.ReasonSummary : object {
    private string _description;
    private string _statementId;
    private Nullable`1<int> _statementIndex;
    public string Description { get; public set; }
    public string StatementId { get; public set; }
    public Nullable`1<int> StatementIndex { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_StatementId();
    public void set_StatementId(string value);
    internal bool IsSetStatementId();
    public Nullable`1<int> get_StatementIndex();
    public void set_StatementIndex(Nullable`1<int> value);
    internal bool IsSetStatementIndex();
}
public class Amazon.AccessAnalyzer.Model.RecommendationError : object {
    private string _code;
    private string _message;
    [AWSPropertyAttribute]
public string Code { get; public set; }
    [AWSPropertyAttribute]
public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.AccessAnalyzer.Model.RecommendedStep : object {
    private UnusedPermissionsRecommendedStep _unusedPermissionsRecommendedStep;
    public UnusedPermissionsRecommendedStep UnusedPermissionsRecommendedStep { get; public set; }
    public UnusedPermissionsRecommendedStep get_UnusedPermissionsRecommendedStep();
    public void set_UnusedPermissionsRecommendedStep(UnusedPermissionsRecommendedStep value);
    internal bool IsSetUnusedPermissionsRecommendedStep();
}
public class Amazon.AccessAnalyzer.Model.ResourceNotFoundException : AmazonAccessAnalyzerException {
    private string _resourceId;
    private string _resourceType;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceType { get; public set; }
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
}
public class Amazon.AccessAnalyzer.Model.S3AccessPointConfiguration : object {
    private string _accessPointPolicy;
    private NetworkOriginConfiguration _networkOrigin;
    private S3PublicAccessBlockConfiguration _publicAccessBlock;
    public string AccessPointPolicy { get; public set; }
    public NetworkOriginConfiguration NetworkOrigin { get; public set; }
    public S3PublicAccessBlockConfiguration PublicAccessBlock { get; public set; }
    public string get_AccessPointPolicy();
    public void set_AccessPointPolicy(string value);
    internal bool IsSetAccessPointPolicy();
    public NetworkOriginConfiguration get_NetworkOrigin();
    public void set_NetworkOrigin(NetworkOriginConfiguration value);
    internal bool IsSetNetworkOrigin();
    public S3PublicAccessBlockConfiguration get_PublicAccessBlock();
    public void set_PublicAccessBlock(S3PublicAccessBlockConfiguration value);
    internal bool IsSetPublicAccessBlock();
}
public class Amazon.AccessAnalyzer.Model.S3BucketAclGrantConfiguration : object {
    private AclGrantee _grantee;
    private AclPermission _permission;
    [AWSPropertyAttribute]
public AclGrantee Grantee { get; public set; }
    [AWSPropertyAttribute]
public AclPermission Permission { get; public set; }
    public AclGrantee get_Grantee();
    public void set_Grantee(AclGrantee value);
    internal bool IsSetGrantee();
    public AclPermission get_Permission();
    public void set_Permission(AclPermission value);
    internal bool IsSetPermission();
}
public class Amazon.AccessAnalyzer.Model.S3BucketConfiguration : object {
    private Dictionary`2<string, S3AccessPointConfiguration> _accessPoints;
    private List`1<S3BucketAclGrantConfiguration> _bucketAclGrants;
    private string _bucketPolicy;
    private S3PublicAccessBlockConfiguration _bucketPublicAccessBlock;
    public Dictionary`2<string, S3AccessPointConfiguration> AccessPoints { get; public set; }
    public List`1<S3BucketAclGrantConfiguration> BucketAclGrants { get; public set; }
    public string BucketPolicy { get; public set; }
    public S3PublicAccessBlockConfiguration BucketPublicAccessBlock { get; public set; }
    public Dictionary`2<string, S3AccessPointConfiguration> get_AccessPoints();
    public void set_AccessPoints(Dictionary`2<string, S3AccessPointConfiguration> value);
    internal bool IsSetAccessPoints();
    public List`1<S3BucketAclGrantConfiguration> get_BucketAclGrants();
    public void set_BucketAclGrants(List`1<S3BucketAclGrantConfiguration> value);
    internal bool IsSetBucketAclGrants();
    public string get_BucketPolicy();
    public void set_BucketPolicy(string value);
    internal bool IsSetBucketPolicy();
    public S3PublicAccessBlockConfiguration get_BucketPublicAccessBlock();
    public void set_BucketPublicAccessBlock(S3PublicAccessBlockConfiguration value);
    internal bool IsSetBucketPublicAccessBlock();
}
public class Amazon.AccessAnalyzer.Model.S3ExpressDirectoryBucketConfiguration : object {
    private string _bucketPolicy;
    public string BucketPolicy { get; public set; }
    public string get_BucketPolicy();
    public void set_BucketPolicy(string value);
    internal bool IsSetBucketPolicy();
}
public class Amazon.AccessAnalyzer.Model.S3PublicAccessBlockConfiguration : object {
    private Nullable`1<bool> _ignorePublicAcls;
    private Nullable`1<bool> _restrictPublicBuckets;
    [AWSPropertyAttribute]
public Nullable`1<bool> IgnorePublicAcls { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> RestrictPublicBuckets { get; public set; }
    public Nullable`1<bool> get_IgnorePublicAcls();
    public void set_IgnorePublicAcls(Nullable`1<bool> value);
    internal bool IsSetIgnorePublicAcls();
    public Nullable`1<bool> get_RestrictPublicBuckets();
    public void set_RestrictPublicBuckets(Nullable`1<bool> value);
    internal bool IsSetRestrictPublicBuckets();
}
public class Amazon.AccessAnalyzer.Model.SecretsManagerSecretConfiguration : object {
    private string _kmsKeyId;
    private string _secretPolicy;
    public string KmsKeyId { get; public set; }
    public string SecretPolicy { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_SecretPolicy();
    public void set_SecretPolicy(string value);
    internal bool IsSetSecretPolicy();
}
public class Amazon.AccessAnalyzer.Model.ServiceQuotaExceededException : AmazonAccessAnalyzerException {
    private string _resourceId;
    private string _resourceType;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceType { get; public set; }
    public ServiceQuotaExceededException(string message);
    public ServiceQuotaExceededException(string message, Exception innerException);
    public ServiceQuotaExceededException(Exception innerException);
    public ServiceQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
}
public class Amazon.AccessAnalyzer.Model.SnsTopicConfiguration : object {
    private string _topicPolicy;
    [AWSPropertyAttribute]
public string TopicPolicy { get; public set; }
    public string get_TopicPolicy();
    public void set_TopicPolicy(string value);
    internal bool IsSetTopicPolicy();
}
public class Amazon.AccessAnalyzer.Model.SortCriteria : object {
    private string _attributeName;
    private OrderBy _orderBy;
    public string AttributeName { get; public set; }
    public OrderBy OrderBy { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public OrderBy get_OrderBy();
    public void set_OrderBy(OrderBy value);
    internal bool IsSetOrderBy();
}
public class Amazon.AccessAnalyzer.Model.Span : object {
    private Position _end;
    private Position _start;
    [AWSPropertyAttribute]
public Position End { get; public set; }
    [AWSPropertyAttribute]
public Position Start { get; public set; }
    public Position get_End();
    public void set_End(Position value);
    internal bool IsSetEnd();
    public Position get_Start();
    public void set_Start(Position value);
    internal bool IsSetStart();
}
public class Amazon.AccessAnalyzer.Model.SqsQueueConfiguration : object {
    private string _queuePolicy;
    public string QueuePolicy { get; public set; }
    public string get_QueuePolicy();
    public void set_QueuePolicy(string value);
    internal bool IsSetQueuePolicy();
}
public class Amazon.AccessAnalyzer.Model.StartPolicyGenerationRequest : AmazonAccessAnalyzerRequest {
    private string _clientToken;
    private CloudTrailDetails _cloudTrailDetails;
    private PolicyGenerationDetails _policyGenerationDetails;
    public string ClientToken { get; public set; }
    public CloudTrailDetails CloudTrailDetails { get; public set; }
    [AWSPropertyAttribute]
public PolicyGenerationDetails PolicyGenerationDetails { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public CloudTrailDetails get_CloudTrailDetails();
    public void set_CloudTrailDetails(CloudTrailDetails value);
    internal bool IsSetCloudTrailDetails();
    public PolicyGenerationDetails get_PolicyGenerationDetails();
    public void set_PolicyGenerationDetails(PolicyGenerationDetails value);
    internal bool IsSetPolicyGenerationDetails();
}
public class Amazon.AccessAnalyzer.Model.StartPolicyGenerationResponse : AmazonWebServiceResponse {
    private string _jobId;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
}
public class Amazon.AccessAnalyzer.Model.StartResourceScanRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private string _resourceArn;
    private string _resourceOwnerAccount;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string ResourceOwnerAccount { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public string get_ResourceOwnerAccount();
    public void set_ResourceOwnerAccount(string value);
    internal bool IsSetResourceOwnerAccount();
}
public class Amazon.AccessAnalyzer.Model.StartResourceScanResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.StatusReason : object {
    private ReasonCode _code;
    [AWSPropertyAttribute]
public ReasonCode Code { get; public set; }
    public ReasonCode get_Code();
    public void set_Code(ReasonCode value);
    internal bool IsSetCode();
}
public class Amazon.AccessAnalyzer.Model.Substring : object {
    private Nullable`1<int> _length;
    private Nullable`1<int> _start;
    [AWSPropertyAttribute]
public Nullable`1<int> Length { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Start { get; public set; }
    public Nullable`1<int> get_Length();
    public void set_Length(Nullable`1<int> value);
    internal bool IsSetLength();
    public Nullable`1<int> get_Start();
    public void set_Start(Nullable`1<int> value);
    internal bool IsSetStart();
}
public class Amazon.AccessAnalyzer.Model.TagResourceRequest : AmazonAccessAnalyzerRequest {
    private string _resourceArn;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.AccessAnalyzer.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.ThrottlingException : AmazonAccessAnalyzerException {
    private Nullable`1<int> _retryAfterSeconds;
    private RetryableDetails _retryableDetails;
    public Nullable`1<int> RetryAfterSeconds { get; public set; }
    public RetryableDetails Retryable { get; }
    public ThrottlingException(string message);
    public ThrottlingException(string message, Exception innerException);
    public ThrottlingException(Exception innerException);
    public ThrottlingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ThrottlingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public Nullable`1<int> get_RetryAfterSeconds();
    public void set_RetryAfterSeconds(Nullable`1<int> value);
    internal bool IsSetRetryAfterSeconds();
    public virtual RetryableDetails get_Retryable();
}
public class Amazon.AccessAnalyzer.Model.Trail : object {
    private Nullable`1<bool> _allRegions;
    private string _cloudTrailArn;
    private List`1<string> _regions;
    public Nullable`1<bool> AllRegions { get; public set; }
    [AWSPropertyAttribute]
public string CloudTrailArn { get; public set; }
    public List`1<string> Regions { get; public set; }
    public Nullable`1<bool> get_AllRegions();
    public void set_AllRegions(Nullable`1<bool> value);
    internal bool IsSetAllRegions();
    public string get_CloudTrailArn();
    public void set_CloudTrailArn(string value);
    internal bool IsSetCloudTrailArn();
    public List`1<string> get_Regions();
    public void set_Regions(List`1<string> value);
    internal bool IsSetRegions();
}
public class Amazon.AccessAnalyzer.Model.TrailProperties : object {
    private Nullable`1<bool> _allRegions;
    private string _cloudTrailArn;
    private List`1<string> _regions;
    public Nullable`1<bool> AllRegions { get; public set; }
    [AWSPropertyAttribute]
public string CloudTrailArn { get; public set; }
    public List`1<string> Regions { get; public set; }
    public Nullable`1<bool> get_AllRegions();
    public void set_AllRegions(Nullable`1<bool> value);
    internal bool IsSetAllRegions();
    public string get_CloudTrailArn();
    public void set_CloudTrailArn(string value);
    internal bool IsSetCloudTrailArn();
    public List`1<string> get_Regions();
    public void set_Regions(List`1<string> value);
    internal bool IsSetRegions();
}
public class Amazon.AccessAnalyzer.Model.UnprocessableEntityException : AmazonAccessAnalyzerException {
    private RetryableDetails _retryableDetails;
    public RetryableDetails Retryable { get; }
    public UnprocessableEntityException(string message);
    public UnprocessableEntityException(string message, Exception innerException);
    public UnprocessableEntityException(Exception innerException);
    public UnprocessableEntityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnprocessableEntityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public virtual RetryableDetails get_Retryable();
}
public class Amazon.AccessAnalyzer.Model.UntagResourceRequest : AmazonAccessAnalyzerRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.AccessAnalyzer.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.UnusedAccessConfiguration : object {
    private Nullable`1<int> _unusedAccessAge;
    public Nullable`1<int> UnusedAccessAge { get; public set; }
    public Nullable`1<int> get_UnusedAccessAge();
    public void set_UnusedAccessAge(Nullable`1<int> value);
    internal bool IsSetUnusedAccessAge();
}
public class Amazon.AccessAnalyzer.Model.UnusedAction : object {
    private string _action;
    private Nullable`1<DateTime> _lastAccessed;
    [AWSPropertyAttribute]
public string Action { get; public set; }
    public Nullable`1<DateTime> LastAccessed { get; public set; }
    public string get_Action();
    public void set_Action(string value);
    internal bool IsSetAction();
    public Nullable`1<DateTime> get_LastAccessed();
    public void set_LastAccessed(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessed();
}
public class Amazon.AccessAnalyzer.Model.UnusedIamRoleDetails : object {
    private Nullable`1<DateTime> _lastAccessed;
    public Nullable`1<DateTime> LastAccessed { get; public set; }
    public Nullable`1<DateTime> get_LastAccessed();
    public void set_LastAccessed(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessed();
}
public class Amazon.AccessAnalyzer.Model.UnusedIamUserAccessKeyDetails : object {
    private string _accessKeyId;
    private Nullable`1<DateTime> _lastAccessed;
    [AWSPropertyAttribute]
public string AccessKeyId { get; public set; }
    public Nullable`1<DateTime> LastAccessed { get; public set; }
    public string get_AccessKeyId();
    public void set_AccessKeyId(string value);
    internal bool IsSetAccessKeyId();
    public Nullable`1<DateTime> get_LastAccessed();
    public void set_LastAccessed(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessed();
}
public class Amazon.AccessAnalyzer.Model.UnusedIamUserPasswordDetails : object {
    private Nullable`1<DateTime> _lastAccessed;
    public Nullable`1<DateTime> LastAccessed { get; public set; }
    public Nullable`1<DateTime> get_LastAccessed();
    public void set_LastAccessed(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessed();
}
public class Amazon.AccessAnalyzer.Model.UnusedPermissionDetails : object {
    private List`1<UnusedAction> _actions;
    private Nullable`1<DateTime> _lastAccessed;
    private string _serviceNamespace;
    public List`1<UnusedAction> Actions { get; public set; }
    public Nullable`1<DateTime> LastAccessed { get; public set; }
    [AWSPropertyAttribute]
public string ServiceNamespace { get; public set; }
    public List`1<UnusedAction> get_Actions();
    public void set_Actions(List`1<UnusedAction> value);
    internal bool IsSetActions();
    public Nullable`1<DateTime> get_LastAccessed();
    public void set_LastAccessed(Nullable`1<DateTime> value);
    internal bool IsSetLastAccessed();
    public string get_ServiceNamespace();
    public void set_ServiceNamespace(string value);
    internal bool IsSetServiceNamespace();
}
public class Amazon.AccessAnalyzer.Model.UnusedPermissionsRecommendedStep : object {
    private string _existingPolicyId;
    private Nullable`1<DateTime> _policyUpdatedAt;
    private RecommendedRemediationAction _recommendedAction;
    private string _recommendedPolicy;
    public string ExistingPolicyId { get; public set; }
    public Nullable`1<DateTime> PolicyUpdatedAt { get; public set; }
    [AWSPropertyAttribute]
public RecommendedRemediationAction RecommendedAction { get; public set; }
    public string RecommendedPolicy { get; public set; }
    public string get_ExistingPolicyId();
    public void set_ExistingPolicyId(string value);
    internal bool IsSetExistingPolicyId();
    public Nullable`1<DateTime> get_PolicyUpdatedAt();
    public void set_PolicyUpdatedAt(Nullable`1<DateTime> value);
    internal bool IsSetPolicyUpdatedAt();
    public RecommendedRemediationAction get_RecommendedAction();
    public void set_RecommendedAction(RecommendedRemediationAction value);
    internal bool IsSetRecommendedAction();
    public string get_RecommendedPolicy();
    public void set_RecommendedPolicy(string value);
    internal bool IsSetRecommendedPolicy();
}
public class Amazon.AccessAnalyzer.Model.UpdateArchiveRuleRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerName;
    private string _clientToken;
    private Dictionary`2<string, Criterion> _filter;
    private string _ruleName;
    [AWSPropertyAttribute]
public string AnalyzerName { get; public set; }
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, Criterion> Filter { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    public string get_AnalyzerName();
    public void set_AnalyzerName(string value);
    internal bool IsSetAnalyzerName();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Dictionary`2<string, Criterion> get_Filter();
    public void set_Filter(Dictionary`2<string, Criterion> value);
    internal bool IsSetFilter();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
}
public class Amazon.AccessAnalyzer.Model.UpdateArchiveRuleResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.UpdateFindingsRequest : AmazonAccessAnalyzerRequest {
    private string _analyzerArn;
    private string _clientToken;
    private List`1<string> _ids;
    private string _resourceArn;
    private FindingStatusUpdate _status;
    [AWSPropertyAttribute]
public string AnalyzerArn { get; public set; }
    public string ClientToken { get; public set; }
    public List`1<string> Ids { get; public set; }
    public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public FindingStatusUpdate Status { get; public set; }
    public string get_AnalyzerArn();
    public void set_AnalyzerArn(string value);
    internal bool IsSetAnalyzerArn();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<string> get_Ids();
    public void set_Ids(List`1<string> value);
    internal bool IsSetIds();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public FindingStatusUpdate get_Status();
    public void set_Status(FindingStatusUpdate value);
    internal bool IsSetStatus();
}
public class Amazon.AccessAnalyzer.Model.UpdateFindingsResponse : AmazonWebServiceResponse {
}
public class Amazon.AccessAnalyzer.Model.ValidatePolicyFinding : object {
    private string _findingDetails;
    private ValidatePolicyFindingType _findingType;
    private string _issueCode;
    private string _learnMoreLink;
    private List`1<Location> _locations;
    [AWSPropertyAttribute]
public string FindingDetails { get; public set; }
    [AWSPropertyAttribute]
public ValidatePolicyFindingType FindingType { get; public set; }
    [AWSPropertyAttribute]
public string IssueCode { get; public set; }
    [AWSPropertyAttribute]
public string LearnMoreLink { get; public set; }
    [AWSPropertyAttribute]
public List`1<Location> Locations { get; public set; }
    public string get_FindingDetails();
    public void set_FindingDetails(string value);
    internal bool IsSetFindingDetails();
    public ValidatePolicyFindingType get_FindingType();
    public void set_FindingType(ValidatePolicyFindingType value);
    internal bool IsSetFindingType();
    public string get_IssueCode();
    public void set_IssueCode(string value);
    internal bool IsSetIssueCode();
    public string get_LearnMoreLink();
    public void set_LearnMoreLink(string value);
    internal bool IsSetLearnMoreLink();
    public List`1<Location> get_Locations();
    public void set_Locations(List`1<Location> value);
    internal bool IsSetLocations();
}
internal class Amazon.AccessAnalyzer.Model.ValidatePolicyPaginator : object {
    private IAmazonAccessAnalyzer _client;
    private ValidatePolicyRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ValidatePolicyResponse> Responses { get; }
    public IPaginatedEnumerable`1<ValidatePolicyFinding> Findings { get; }
    internal ValidatePolicyPaginator(IAmazonAccessAnalyzer client, ValidatePolicyRequest request);
    public sealed virtual IPaginatedEnumerable`1<ValidatePolicyResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ValidatePolicyFinding> get_Findings();
    [AsyncIteratorStateMachineAttribute("Amazon.AccessAnalyzer.Model.ValidatePolicyPaginator/<Amazon-Runtime-IPaginator<Amazon-AccessAnalyzer-Model-ValidatePolicyResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ValidatePolicyResponse> Amazon.Runtime.IPaginator<Amazon.AccessAnalyzer.Model.ValidatePolicyResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.AccessAnalyzer.Model.ValidatePolicyRequest : AmazonAccessAnalyzerRequest {
    private Locale _locale;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _policyDocument;
    private PolicyType _policyType;
    private ValidatePolicyResourceType _validatePolicyResourceType;
    public Locale Locale { get; public set; }
    public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string PolicyDocument { get; public set; }
    [AWSPropertyAttribute]
public PolicyType PolicyType { get; public set; }
    public ValidatePolicyResourceType ValidatePolicyResourceType { get; public set; }
    public Locale get_Locale();
    public void set_Locale(Locale value);
    internal bool IsSetLocale();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public PolicyType get_PolicyType();
    public void set_PolicyType(PolicyType value);
    internal bool IsSetPolicyType();
    public ValidatePolicyResourceType get_ValidatePolicyResourceType();
    public void set_ValidatePolicyResourceType(ValidatePolicyResourceType value);
    internal bool IsSetValidatePolicyResourceType();
}
public class Amazon.AccessAnalyzer.Model.ValidatePolicyResponse : AmazonWebServiceResponse {
    private List`1<ValidatePolicyFinding> _findings;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<ValidatePolicyFinding> Findings { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ValidatePolicyFinding> get_Findings();
    public void set_Findings(List`1<ValidatePolicyFinding> value);
    internal bool IsSetFindings();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.AccessAnalyzer.Model.ValidationException : AmazonAccessAnalyzerException {
    private List`1<ValidationExceptionField> _fieldList;
    private ValidationExceptionReason _reason;
    public List`1<ValidationExceptionField> FieldList { get; public set; }
    [AWSPropertyAttribute]
public ValidationExceptionReason Reason { get; public set; }
    public ValidationException(string message);
    public ValidationException(string message, Exception innerException);
    public ValidationException(Exception innerException);
    public ValidationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ValidationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public List`1<ValidationExceptionField> get_FieldList();
    public void set_FieldList(List`1<ValidationExceptionField> value);
    internal bool IsSetFieldList();
    public ValidationExceptionReason get_Reason();
    public void set_Reason(ValidationExceptionReason value);
    internal bool IsSetReason();
}
public class Amazon.AccessAnalyzer.Model.ValidationExceptionField : object {
    private string _message;
    private string _name;
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.AccessAnalyzer.Model.VpcConfiguration : object {
    private string _vpcId;
    [AWSPropertyAttribute]
public string VpcId { get; public set; }
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.AccessAnalyzer.OrderBy : ConstantClass {
    public static OrderBy ASC;
    public static OrderBy DESC;
    public OrderBy(string value);
    private static OrderBy();
    public static OrderBy FindValue(string value);
    public static OrderBy op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.PolicyType : ConstantClass {
    public static PolicyType IDENTITY_POLICY;
    public static PolicyType RESOURCE_POLICY;
    public static PolicyType SERVICE_CONTROL_POLICY;
    public PolicyType(string value);
    private static PolicyType();
    public static PolicyType FindValue(string value);
    public static PolicyType op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.ReasonCode : ConstantClass {
    public static ReasonCode AWS_SERVICE_ACCESS_DISABLED;
    public static ReasonCode DELEGATED_ADMINISTRATOR_DEREGISTERED;
    public static ReasonCode ORGANIZATION_DELETED;
    public static ReasonCode SERVICE_LINKED_ROLE_CREATION_FAILED;
    public ReasonCode(string value);
    private static ReasonCode();
    public static ReasonCode FindValue(string value);
    public static ReasonCode op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.RecommendationType : ConstantClass {
    public static RecommendationType UnusedPermissionRecommendation;
    public RecommendationType(string value);
    private static RecommendationType();
    public static RecommendationType FindValue(string value);
    public static RecommendationType op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.RecommendedRemediationAction : ConstantClass {
    public static RecommendedRemediationAction CREATE_POLICY;
    public static RecommendedRemediationAction DETACH_POLICY;
    public RecommendedRemediationAction(string value);
    private static RecommendedRemediationAction();
    public static RecommendedRemediationAction FindValue(string value);
    public static RecommendedRemediationAction op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.ResourceType : ConstantClass {
    public static ResourceType AWSDynamoDBStream;
    public static ResourceType AWSDynamoDBTable;
    public static ResourceType AWSEC2Snapshot;
    public static ResourceType AWSECRRepository;
    public static ResourceType AWSEFSFileSystem;
    public static ResourceType AWSIAMRole;
    public static ResourceType AWSKMSKey;
    public static ResourceType AWSLambdaFunction;
    public static ResourceType AWSLambdaLayerVersion;
    public static ResourceType AWSRDSDBClusterSnapshot;
    public static ResourceType AWSRDSDBSnapshot;
    public static ResourceType AWSS3Bucket;
    public static ResourceType AWSS3ExpressDirectoryBucket;
    public static ResourceType AWSSecretsManagerSecret;
    public static ResourceType AWSSNSTopic;
    public static ResourceType AWSSQSQueue;
    public ResourceType(string value);
    private static ResourceType();
    public static ResourceType FindValue(string value);
    public static ResourceType op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.Status : ConstantClass {
    public static Status FAILED;
    public static Status IN_PROGRESS;
    public static Status SUCCEEDED;
    public Status(string value);
    private static Status();
    public static Status FindValue(string value);
    public static Status op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.Type : ConstantClass {
    public static Type ACCOUNT;
    public static Type ACCOUNT_UNUSED_ACCESS;
    public static Type ORGANIZATION;
    public static Type ORGANIZATION_UNUSED_ACCESS;
    public Type(string value);
    private static Type();
    public static Type FindValue(string value);
    public static Type op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.ValidatePolicyFindingType : ConstantClass {
    public static ValidatePolicyFindingType ERROR;
    public static ValidatePolicyFindingType SECURITY_WARNING;
    public static ValidatePolicyFindingType SUGGESTION;
    public static ValidatePolicyFindingType WARNING;
    public ValidatePolicyFindingType(string value);
    private static ValidatePolicyFindingType();
    public static ValidatePolicyFindingType FindValue(string value);
    public static ValidatePolicyFindingType op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.ValidatePolicyResourceType : ConstantClass {
    public static ValidatePolicyResourceType AWSDynamoDBTable;
    public static ValidatePolicyResourceType AWSIAMAssumeRolePolicyDocument;
    public static ValidatePolicyResourceType AWSS3AccessPoint;
    public static ValidatePolicyResourceType AWSS3Bucket;
    public static ValidatePolicyResourceType AWSS3MultiRegionAccessPoint;
    public static ValidatePolicyResourceType AWSS3ObjectLambdaAccessPoint;
    public ValidatePolicyResourceType(string value);
    private static ValidatePolicyResourceType();
    public static ValidatePolicyResourceType FindValue(string value);
    public static ValidatePolicyResourceType op_Implicit(string value);
}
public class Amazon.AccessAnalyzer.ValidationExceptionReason : ConstantClass {
    public static ValidationExceptionReason CannotParse;
    public static ValidationExceptionReason FieldValidationFailed;
    public static ValidationExceptionReason NotSupported;
    public static ValidationExceptionReason Other;
    public static ValidationExceptionReason UnknownOperation;
    public ValidationExceptionReason(string value);
    private static ValidationExceptionReason();
    public static ValidationExceptionReason FindValue(string value);
    public static ValidationExceptionReason op_Implicit(string value);
}
