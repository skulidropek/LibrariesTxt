public class Amazon.Account.AlternateContactType : ConstantClass {
    public static AlternateContactType BILLING;
    public static AlternateContactType OPERATIONS;
    public static AlternateContactType SECURITY;
    public AlternateContactType(string value);
    private static AlternateContactType();
    public static AlternateContactType FindValue(string value);
    public static AlternateContactType op_Implicit(string value);
}
public class Amazon.Account.AmazonAccountClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IAccountPaginatorFactory _paginators;
    public IAccountPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonAccountClient(RegionEndpoint region);
    public AmazonAccountClient(AmazonAccountConfig config);
    public AmazonAccountClient(AWSCredentials credentials);
    public AmazonAccountClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonAccountClient(AWSCredentials credentials, AmazonAccountConfig clientConfig);
    public AmazonAccountClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonAccountClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonAccountClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonAccountConfig clientConfig);
    public AmazonAccountClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonAccountClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonAccountClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonAccountConfig clientConfig);
    private static AmazonAccountClient();
    public sealed virtual IAccountPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AcceptPrimaryEmailUpdateResponse AcceptPrimaryEmailUpdate(AcceptPrimaryEmailUpdateRequest request);
    public virtual Task`1<AcceptPrimaryEmailUpdateResponse> AcceptPrimaryEmailUpdateAsync(AcceptPrimaryEmailUpdateRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAlternateContactResponse DeleteAlternateContact(DeleteAlternateContactRequest request);
    public virtual Task`1<DeleteAlternateContactResponse> DeleteAlternateContactAsync(DeleteAlternateContactRequest request, CancellationToken cancellationToken);
    internal virtual DisableRegionResponse DisableRegion(DisableRegionRequest request);
    public virtual Task`1<DisableRegionResponse> DisableRegionAsync(DisableRegionRequest request, CancellationToken cancellationToken);
    internal virtual EnableRegionResponse EnableRegion(EnableRegionRequest request);
    public virtual Task`1<EnableRegionResponse> EnableRegionAsync(EnableRegionRequest request, CancellationToken cancellationToken);
    internal virtual GetAlternateContactResponse GetAlternateContact(GetAlternateContactRequest request);
    public virtual Task`1<GetAlternateContactResponse> GetAlternateContactAsync(GetAlternateContactRequest request, CancellationToken cancellationToken);
    internal virtual GetContactInformationResponse GetContactInformation(GetContactInformationRequest request);
    public virtual Task`1<GetContactInformationResponse> GetContactInformationAsync(GetContactInformationRequest request, CancellationToken cancellationToken);
    internal virtual GetPrimaryEmailResponse GetPrimaryEmail(GetPrimaryEmailRequest request);
    public virtual Task`1<GetPrimaryEmailResponse> GetPrimaryEmailAsync(GetPrimaryEmailRequest request, CancellationToken cancellationToken);
    internal virtual GetRegionOptStatusResponse GetRegionOptStatus(GetRegionOptStatusRequest request);
    public virtual Task`1<GetRegionOptStatusResponse> GetRegionOptStatusAsync(GetRegionOptStatusRequest request, CancellationToken cancellationToken);
    internal virtual ListRegionsResponse ListRegions(ListRegionsRequest request);
    public virtual Task`1<ListRegionsResponse> ListRegionsAsync(ListRegionsRequest request, CancellationToken cancellationToken);
    internal virtual PutAlternateContactResponse PutAlternateContact(PutAlternateContactRequest request);
    public virtual Task`1<PutAlternateContactResponse> PutAlternateContactAsync(PutAlternateContactRequest request, CancellationToken cancellationToken);
    internal virtual PutContactInformationResponse PutContactInformation(PutContactInformationRequest request);
    public virtual Task`1<PutContactInformationResponse> PutContactInformationAsync(PutContactInformationRequest request, CancellationToken cancellationToken);
    internal virtual StartPrimaryEmailUpdateResponse StartPrimaryEmailUpdate(StartPrimaryEmailUpdateRequest request);
    public virtual Task`1<StartPrimaryEmailUpdateResponse> StartPrimaryEmailUpdateAsync(StartPrimaryEmailUpdateRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.Account.AmazonAccountConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonAccountEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonAccountConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.Account.AmazonAccountDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonAccountDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.Account.AmazonAccountException : AmazonServiceException {
    public AmazonAccountException(string message);
    public AmazonAccountException(string message, Exception innerException);
    public AmazonAccountException(Exception innerException);
    public AmazonAccountException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonAccountException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Account.AmazonAccountRequest : AmazonWebServiceRequest {
}
public class Amazon.Account.Endpoints.AccountEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public interface Amazon.Account.IAmazonAccount {
    public IAccountPaginatorFactory Paginators { get; }
    public abstract virtual IAccountPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AcceptPrimaryEmailUpdateResponse> AcceptPrimaryEmailUpdateAsync(AcceptPrimaryEmailUpdateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAlternateContactResponse> DeleteAlternateContactAsync(DeleteAlternateContactRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableRegionResponse> DisableRegionAsync(DisableRegionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableRegionResponse> EnableRegionAsync(EnableRegionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetAlternateContactResponse> GetAlternateContactAsync(GetAlternateContactRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetContactInformationResponse> GetContactInformationAsync(GetContactInformationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPrimaryEmailResponse> GetPrimaryEmailAsync(GetPrimaryEmailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetRegionOptStatusResponse> GetRegionOptStatusAsync(GetRegionOptStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListRegionsResponse> ListRegionsAsync(ListRegionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutAlternateContactResponse> PutAlternateContactAsync(PutAlternateContactRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutContactInformationResponse> PutContactInformationAsync(PutContactInformationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartPrimaryEmailUpdateResponse> StartPrimaryEmailUpdateAsync(StartPrimaryEmailUpdateRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.Account.AmazonAccountConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.Account.Internal.AmazonAccountEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.Account.Internal.AmazonAccountEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.Account.Internal.AmazonAccountMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.Account.Model.AcceptPrimaryEmailUpdateRequest : AmazonAccountRequest {
    private string _accountId;
    private string _otp;
    private string _primaryEmail;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Otp { get; public set; }
    [AWSPropertyAttribute]
public string PrimaryEmail { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Otp();
    public void set_Otp(string value);
    internal bool IsSetOtp();
    public string get_PrimaryEmail();
    public void set_PrimaryEmail(string value);
    internal bool IsSetPrimaryEmail();
}
public class Amazon.Account.Model.AcceptPrimaryEmailUpdateResponse : AmazonWebServiceResponse {
    private PrimaryEmailUpdateStatus _status;
    public PrimaryEmailUpdateStatus Status { get; public set; }
    public PrimaryEmailUpdateStatus get_Status();
    public void set_Status(PrimaryEmailUpdateStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Account.Model.AccessDeniedException : AmazonAccountException {
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception innerException);
    public AccessDeniedException(Exception innerException);
    public AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Account.Model.AccountPaginatorFactory : object {
    private IAmazonAccount client;
    internal AccountPaginatorFactory(IAmazonAccount client);
    public sealed virtual IListRegionsPaginator ListRegions(ListRegionsRequest request);
}
public class Amazon.Account.Model.AlternateContact : object {
    private AlternateContactType _alternateContactType;
    private string _emailAddress;
    private string _name;
    private string _phoneNumber;
    private string _title;
    public AlternateContactType AlternateContactType { get; public set; }
    [AWSPropertyAttribute]
public string EmailAddress { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string PhoneNumber { get; public set; }
    [AWSPropertyAttribute]
public string Title { get; public set; }
    public AlternateContactType get_AlternateContactType();
    public void set_AlternateContactType(AlternateContactType value);
    internal bool IsSetAlternateContactType();
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_PhoneNumber();
    public void set_PhoneNumber(string value);
    internal bool IsSetPhoneNumber();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
}
public class Amazon.Account.Model.ConflictException : AmazonAccountException {
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Account.Model.ContactInformation : object {
    private string _addressLine1;
    private string _addressLine2;
    private string _addressLine3;
    private string _city;
    private string _companyName;
    private string _countryCode;
    private string _districtOrCounty;
    private string _fullName;
    private string _phoneNumber;
    private string _postalCode;
    private string _stateOrRegion;
    private string _websiteUrl;
    [AWSPropertyAttribute]
public string AddressLine1 { get; public set; }
    [AWSPropertyAttribute]
public string AddressLine2 { get; public set; }
    [AWSPropertyAttribute]
public string AddressLine3 { get; public set; }
    [AWSPropertyAttribute]
public string City { get; public set; }
    [AWSPropertyAttribute]
public string CompanyName { get; public set; }
    [AWSPropertyAttribute]
public string CountryCode { get; public set; }
    [AWSPropertyAttribute]
public string DistrictOrCounty { get; public set; }
    [AWSPropertyAttribute]
public string FullName { get; public set; }
    [AWSPropertyAttribute]
public string PhoneNumber { get; public set; }
    [AWSPropertyAttribute]
public string PostalCode { get; public set; }
    [AWSPropertyAttribute]
public string StateOrRegion { get; public set; }
    [AWSPropertyAttribute]
public string WebsiteUrl { get; public set; }
    public string get_AddressLine1();
    public void set_AddressLine1(string value);
    internal bool IsSetAddressLine1();
    public string get_AddressLine2();
    public void set_AddressLine2(string value);
    internal bool IsSetAddressLine2();
    public string get_AddressLine3();
    public void set_AddressLine3(string value);
    internal bool IsSetAddressLine3();
    public string get_City();
    public void set_City(string value);
    internal bool IsSetCity();
    public string get_CompanyName();
    public void set_CompanyName(string value);
    internal bool IsSetCompanyName();
    public string get_CountryCode();
    public void set_CountryCode(string value);
    internal bool IsSetCountryCode();
    public string get_DistrictOrCounty();
    public void set_DistrictOrCounty(string value);
    internal bool IsSetDistrictOrCounty();
    public string get_FullName();
    public void set_FullName(string value);
    internal bool IsSetFullName();
    public string get_PhoneNumber();
    public void set_PhoneNumber(string value);
    internal bool IsSetPhoneNumber();
    public string get_PostalCode();
    public void set_PostalCode(string value);
    internal bool IsSetPostalCode();
    public string get_StateOrRegion();
    public void set_StateOrRegion(string value);
    internal bool IsSetStateOrRegion();
    public string get_WebsiteUrl();
    public void set_WebsiteUrl(string value);
    internal bool IsSetWebsiteUrl();
}
public class Amazon.Account.Model.DeleteAlternateContactRequest : AmazonAccountRequest {
    private string _accountId;
    private AlternateContactType _alternateContactType;
    public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public AlternateContactType AlternateContactType { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public AlternateContactType get_AlternateContactType();
    public void set_AlternateContactType(AlternateContactType value);
    internal bool IsSetAlternateContactType();
}
public class Amazon.Account.Model.DeleteAlternateContactResponse : AmazonWebServiceResponse {
}
public class Amazon.Account.Model.DisableRegionRequest : AmazonAccountRequest {
    private string _accountId;
    private string _regionName;
    public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.Account.Model.DisableRegionResponse : AmazonWebServiceResponse {
}
public class Amazon.Account.Model.EnableRegionRequest : AmazonAccountRequest {
    private string _accountId;
    private string _regionName;
    public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.Account.Model.EnableRegionResponse : AmazonWebServiceResponse {
}
public class Amazon.Account.Model.GetAlternateContactRequest : AmazonAccountRequest {
    private string _accountId;
    private AlternateContactType _alternateContactType;
    public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public AlternateContactType AlternateContactType { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public AlternateContactType get_AlternateContactType();
    public void set_AlternateContactType(AlternateContactType value);
    internal bool IsSetAlternateContactType();
}
public class Amazon.Account.Model.GetAlternateContactResponse : AmazonWebServiceResponse {
    private AlternateContact _alternateContact;
    public AlternateContact AlternateContact { get; public set; }
    public AlternateContact get_AlternateContact();
    public void set_AlternateContact(AlternateContact value);
    internal bool IsSetAlternateContact();
}
public class Amazon.Account.Model.GetContactInformationRequest : AmazonAccountRequest {
    private string _accountId;
    public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.Account.Model.GetContactInformationResponse : AmazonWebServiceResponse {
    private ContactInformation _contactInformation;
    public ContactInformation ContactInformation { get; public set; }
    public ContactInformation get_ContactInformation();
    public void set_ContactInformation(ContactInformation value);
    internal bool IsSetContactInformation();
}
public class Amazon.Account.Model.GetPrimaryEmailRequest : AmazonAccountRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.Account.Model.GetPrimaryEmailResponse : AmazonWebServiceResponse {
    private string _primaryEmail;
    [AWSPropertyAttribute]
public string PrimaryEmail { get; public set; }
    public string get_PrimaryEmail();
    public void set_PrimaryEmail(string value);
    internal bool IsSetPrimaryEmail();
}
public class Amazon.Account.Model.GetRegionOptStatusRequest : AmazonAccountRequest {
    private string _accountId;
    private string _regionName;
    public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.Account.Model.GetRegionOptStatusResponse : AmazonWebServiceResponse {
    private string _regionName;
    private RegionOptStatus _regionOptStatus;
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public RegionOptStatus RegionOptStatus { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public RegionOptStatus get_RegionOptStatus();
    public void set_RegionOptStatus(RegionOptStatus value);
    internal bool IsSetRegionOptStatus();
}
public interface Amazon.Account.Model.IAccountPaginatorFactory {
    public abstract virtual IListRegionsPaginator ListRegions(ListRegionsRequest request);
}
public interface Amazon.Account.Model.IListRegionsPaginator {
    public IPaginatedEnumerable`1<ListRegionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Region> Regions { get; }
    public abstract virtual IPaginatedEnumerable`1<ListRegionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Region> get_Regions();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.AcceptPrimaryEmailUpdateRequestMarshaller : object {
    private static AcceptPrimaryEmailUpdateRequestMarshaller _instance;
    public static AcceptPrimaryEmailUpdateRequestMarshaller Instance { get; }
    private static AcceptPrimaryEmailUpdateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AcceptPrimaryEmailUpdateRequest publicRequest);
    internal static AcceptPrimaryEmailUpdateRequestMarshaller GetInstance();
    public static AcceptPrimaryEmailUpdateRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.AcceptPrimaryEmailUpdateResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AcceptPrimaryEmailUpdateResponseUnmarshaller _instance;
    public static AcceptPrimaryEmailUpdateResponseUnmarshaller Instance { get; }
    private static AcceptPrimaryEmailUpdateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AcceptPrimaryEmailUpdateResponseUnmarshaller GetInstance();
    public static AcceptPrimaryEmailUpdateResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller : object {
    private static AccessDeniedExceptionUnmarshaller _instance;
    public static AccessDeniedExceptionUnmarshaller Instance { get; }
    private static AccessDeniedExceptionUnmarshaller();
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.AlternateContactUnmarshaller : object {
    private static AlternateContactUnmarshaller _instance;
    public static AlternateContactUnmarshaller Instance { get; }
    private static AlternateContactUnmarshaller();
    private sealed virtual override AlternateContact Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Account.Model.AlternateContact,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AlternateContact Unmarshall(JsonUnmarshallerContext context);
    public static AlternateContactUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.ContactInformationMarshaller : object {
    public static ContactInformationMarshaller Instance;
    private static ContactInformationMarshaller();
    public sealed virtual void Marshall(ContactInformation requestObject, JsonMarshallerContext context);
}
public class Amazon.Account.Model.Internal.MarshallTransformations.ContactInformationUnmarshaller : object {
    private static ContactInformationUnmarshaller _instance;
    public static ContactInformationUnmarshaller Instance { get; }
    private static ContactInformationUnmarshaller();
    private sealed virtual override ContactInformation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Account.Model.ContactInformation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContactInformation Unmarshall(JsonUnmarshallerContext context);
    public static ContactInformationUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.DeleteAlternateContactRequestMarshaller : object {
    private static DeleteAlternateContactRequestMarshaller _instance;
    public static DeleteAlternateContactRequestMarshaller Instance { get; }
    private static DeleteAlternateContactRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAlternateContactRequest publicRequest);
    internal static DeleteAlternateContactRequestMarshaller GetInstance();
    public static DeleteAlternateContactRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.DeleteAlternateContactResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAlternateContactResponseUnmarshaller _instance;
    public static DeleteAlternateContactResponseUnmarshaller Instance { get; }
    private static DeleteAlternateContactResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAlternateContactResponseUnmarshaller GetInstance();
    public static DeleteAlternateContactResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.DisableRegionRequestMarshaller : object {
    private static DisableRegionRequestMarshaller _instance;
    public static DisableRegionRequestMarshaller Instance { get; }
    private static DisableRegionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableRegionRequest publicRequest);
    internal static DisableRegionRequestMarshaller GetInstance();
    public static DisableRegionRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.DisableRegionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisableRegionResponseUnmarshaller _instance;
    public static DisableRegionResponseUnmarshaller Instance { get; }
    private static DisableRegionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableRegionResponseUnmarshaller GetInstance();
    public static DisableRegionResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.EnableRegionRequestMarshaller : object {
    private static EnableRegionRequestMarshaller _instance;
    public static EnableRegionRequestMarshaller Instance { get; }
    private static EnableRegionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableRegionRequest publicRequest);
    internal static EnableRegionRequestMarshaller GetInstance();
    public static EnableRegionRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.EnableRegionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static EnableRegionResponseUnmarshaller _instance;
    public static EnableRegionResponseUnmarshaller Instance { get; }
    private static EnableRegionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableRegionResponseUnmarshaller GetInstance();
    public static EnableRegionResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.GetAlternateContactRequestMarshaller : object {
    private static GetAlternateContactRequestMarshaller _instance;
    public static GetAlternateContactRequestMarshaller Instance { get; }
    private static GetAlternateContactRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAlternateContactRequest publicRequest);
    internal static GetAlternateContactRequestMarshaller GetInstance();
    public static GetAlternateContactRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.GetAlternateContactResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetAlternateContactResponseUnmarshaller _instance;
    public static GetAlternateContactResponseUnmarshaller Instance { get; }
    private static GetAlternateContactResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAlternateContactResponseUnmarshaller GetInstance();
    public static GetAlternateContactResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.GetContactInformationRequestMarshaller : object {
    private static GetContactInformationRequestMarshaller _instance;
    public static GetContactInformationRequestMarshaller Instance { get; }
    private static GetContactInformationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetContactInformationRequest publicRequest);
    internal static GetContactInformationRequestMarshaller GetInstance();
    public static GetContactInformationRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.GetContactInformationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetContactInformationResponseUnmarshaller _instance;
    public static GetContactInformationResponseUnmarshaller Instance { get; }
    private static GetContactInformationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetContactInformationResponseUnmarshaller GetInstance();
    public static GetContactInformationResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.GetPrimaryEmailRequestMarshaller : object {
    private static GetPrimaryEmailRequestMarshaller _instance;
    public static GetPrimaryEmailRequestMarshaller Instance { get; }
    private static GetPrimaryEmailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPrimaryEmailRequest publicRequest);
    internal static GetPrimaryEmailRequestMarshaller GetInstance();
    public static GetPrimaryEmailRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.GetPrimaryEmailResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetPrimaryEmailResponseUnmarshaller _instance;
    public static GetPrimaryEmailResponseUnmarshaller Instance { get; }
    private static GetPrimaryEmailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPrimaryEmailResponseUnmarshaller GetInstance();
    public static GetPrimaryEmailResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.GetRegionOptStatusRequestMarshaller : object {
    private static GetRegionOptStatusRequestMarshaller _instance;
    public static GetRegionOptStatusRequestMarshaller Instance { get; }
    private static GetRegionOptStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRegionOptStatusRequest publicRequest);
    internal static GetRegionOptStatusRequestMarshaller GetInstance();
    public static GetRegionOptStatusRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.GetRegionOptStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRegionOptStatusResponseUnmarshaller _instance;
    public static GetRegionOptStatusResponseUnmarshaller Instance { get; }
    private static GetRegionOptStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRegionOptStatusResponseUnmarshaller GetInstance();
    public static GetRegionOptStatusResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.InternalServerExceptionUnmarshaller : object {
    private static InternalServerExceptionUnmarshaller _instance;
    public static InternalServerExceptionUnmarshaller Instance { get; }
    private static InternalServerExceptionUnmarshaller();
    public sealed virtual InternalServerException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServerException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServerExceptionUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.ListRegionsRequestMarshaller : object {
    private static ListRegionsRequestMarshaller _instance;
    public static ListRegionsRequestMarshaller Instance { get; }
    private static ListRegionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListRegionsRequest publicRequest);
    internal static ListRegionsRequestMarshaller GetInstance();
    public static ListRegionsRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.ListRegionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListRegionsResponseUnmarshaller _instance;
    public static ListRegionsResponseUnmarshaller Instance { get; }
    private static ListRegionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListRegionsResponseUnmarshaller GetInstance();
    public static ListRegionsResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.PutAlternateContactRequestMarshaller : object {
    private static PutAlternateContactRequestMarshaller _instance;
    public static PutAlternateContactRequestMarshaller Instance { get; }
    private static PutAlternateContactRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutAlternateContactRequest publicRequest);
    internal static PutAlternateContactRequestMarshaller GetInstance();
    public static PutAlternateContactRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.PutAlternateContactResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutAlternateContactResponseUnmarshaller _instance;
    public static PutAlternateContactResponseUnmarshaller Instance { get; }
    private static PutAlternateContactResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutAlternateContactResponseUnmarshaller GetInstance();
    public static PutAlternateContactResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.PutContactInformationRequestMarshaller : object {
    private static PutContactInformationRequestMarshaller _instance;
    public static PutContactInformationRequestMarshaller Instance { get; }
    private static PutContactInformationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutContactInformationRequest publicRequest);
    internal static PutContactInformationRequestMarshaller GetInstance();
    public static PutContactInformationRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.PutContactInformationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutContactInformationResponseUnmarshaller _instance;
    public static PutContactInformationResponseUnmarshaller Instance { get; }
    private static PutContactInformationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutContactInformationResponseUnmarshaller GetInstance();
    public static PutContactInformationResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.RegionUnmarshaller : object {
    private static RegionUnmarshaller _instance;
    public static RegionUnmarshaller Instance { get; }
    private static RegionUnmarshaller();
    private sealed virtual override Region Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Account.Model.Region,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Region Unmarshall(JsonUnmarshallerContext context);
    public static RegionUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.StartPrimaryEmailUpdateRequestMarshaller : object {
    private static StartPrimaryEmailUpdateRequestMarshaller _instance;
    public static StartPrimaryEmailUpdateRequestMarshaller Instance { get; }
    private static StartPrimaryEmailUpdateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartPrimaryEmailUpdateRequest publicRequest);
    internal static StartPrimaryEmailUpdateRequestMarshaller GetInstance();
    public static StartPrimaryEmailUpdateRequestMarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.StartPrimaryEmailUpdateResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartPrimaryEmailUpdateResponseUnmarshaller _instance;
    public static StartPrimaryEmailUpdateResponseUnmarshaller Instance { get; }
    private static StartPrimaryEmailUpdateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartPrimaryEmailUpdateResponseUnmarshaller GetInstance();
    public static StartPrimaryEmailUpdateResponseUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.ValidationExceptionFieldUnmarshaller : object {
    private static ValidationExceptionFieldUnmarshaller _instance;
    public static ValidationExceptionFieldUnmarshaller Instance { get; }
    private static ValidationExceptionFieldUnmarshaller();
    private sealed virtual override ValidationExceptionField Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Account.Model.ValidationExceptionField,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ValidationExceptionField Unmarshall(JsonUnmarshallerContext context);
    public static ValidationExceptionFieldUnmarshaller get_Instance();
}
public class Amazon.Account.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller : object {
    private static ValidationExceptionUnmarshaller _instance;
    public static ValidationExceptionUnmarshaller Instance { get; }
    private static ValidationExceptionUnmarshaller();
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ValidationExceptionUnmarshaller get_Instance();
}
public class Amazon.Account.Model.InternalServerException : AmazonAccountException {
    private RetryableDetails _retryableDetails;
    public RetryableDetails Retryable { get; }
    public InternalServerException(string message);
    public InternalServerException(string message, Exception innerException);
    public InternalServerException(Exception innerException);
    public InternalServerException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServerException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public virtual RetryableDetails get_Retryable();
}
internal class Amazon.Account.Model.ListRegionsPaginator : object {
    private IAmazonAccount _client;
    private ListRegionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListRegionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Region> Regions { get; }
    internal ListRegionsPaginator(IAmazonAccount client, ListRegionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListRegionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Region> get_Regions();
    [AsyncIteratorStateMachineAttribute("Amazon.Account.Model.ListRegionsPaginator/<Amazon-Runtime-IPaginator<Amazon-Account-Model-ListRegionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListRegionsResponse> Amazon.Runtime.IPaginator<Amazon.Account.Model.ListRegionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Account.Model.ListRegionsRequest : AmazonAccountRequest {
    private string _accountId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private List`1<string> _regionOptStatusContains;
    public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<string> RegionOptStatusContains { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_RegionOptStatusContains();
    public void set_RegionOptStatusContains(List`1<string> value);
    internal bool IsSetRegionOptStatusContains();
}
public class Amazon.Account.Model.ListRegionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Region> _regions;
    public string NextToken { get; public set; }
    public List`1<Region> Regions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Region> get_Regions();
    public void set_Regions(List`1<Region> value);
    internal bool IsSetRegions();
}
public class Amazon.Account.Model.PutAlternateContactRequest : AmazonAccountRequest {
    private string _accountId;
    private AlternateContactType _alternateContactType;
    private string _emailAddress;
    private string _name;
    private string _phoneNumber;
    private string _title;
    public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public AlternateContactType AlternateContactType { get; public set; }
    [AWSPropertyAttribute]
public string EmailAddress { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string PhoneNumber { get; public set; }
    [AWSPropertyAttribute]
public string Title { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public AlternateContactType get_AlternateContactType();
    public void set_AlternateContactType(AlternateContactType value);
    internal bool IsSetAlternateContactType();
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_PhoneNumber();
    public void set_PhoneNumber(string value);
    internal bool IsSetPhoneNumber();
    public string get_Title();
    public void set_Title(string value);
    internal bool IsSetTitle();
}
public class Amazon.Account.Model.PutAlternateContactResponse : AmazonWebServiceResponse {
}
public class Amazon.Account.Model.PutContactInformationRequest : AmazonAccountRequest {
    private string _accountId;
    private ContactInformation _contactInformation;
    public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public ContactInformation ContactInformation { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public ContactInformation get_ContactInformation();
    public void set_ContactInformation(ContactInformation value);
    internal bool IsSetContactInformation();
}
public class Amazon.Account.Model.PutContactInformationResponse : AmazonWebServiceResponse {
}
public class Amazon.Account.Model.Region : object {
    private string _regionName;
    private RegionOptStatus _regionOptStatus;
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public RegionOptStatus RegionOptStatus { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public RegionOptStatus get_RegionOptStatus();
    public void set_RegionOptStatus(RegionOptStatus value);
    internal bool IsSetRegionOptStatus();
}
public class Amazon.Account.Model.ResourceNotFoundException : AmazonAccountException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.Account.Model.StartPrimaryEmailUpdateRequest : AmazonAccountRequest {
    private string _accountId;
    private string _primaryEmail;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string PrimaryEmail { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_PrimaryEmail();
    public void set_PrimaryEmail(string value);
    internal bool IsSetPrimaryEmail();
}
public class Amazon.Account.Model.StartPrimaryEmailUpdateResponse : AmazonWebServiceResponse {
    private PrimaryEmailUpdateStatus _status;
    public PrimaryEmailUpdateStatus Status { get; public set; }
    public PrimaryEmailUpdateStatus get_Status();
    public void set_Status(PrimaryEmailUpdateStatus value);
    internal bool IsSetStatus();
}
public class Amazon.Account.Model.TooManyRequestsException : AmazonAccountException {
    private RetryableDetails _retryableDetails;
    public RetryableDetails Retryable { get; }
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public virtual RetryableDetails get_Retryable();
}
public class Amazon.Account.Model.ValidationException : AmazonAccountException {
    private List`1<ValidationExceptionField> _fieldList;
    private ValidationExceptionReason _reason;
    public List`1<ValidationExceptionField> FieldList { get; public set; }
    public ValidationExceptionReason Reason { get; public set; }
    public ValidationException(string message);
    public ValidationException(string message, Exception innerException);
    public ValidationException(Exception innerException);
    public ValidationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ValidationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public List`1<ValidationExceptionField> get_FieldList();
    public void set_FieldList(List`1<ValidationExceptionField> value);
    internal bool IsSetFieldList();
    public ValidationExceptionReason get_Reason();
    public void set_Reason(ValidationExceptionReason value);
    internal bool IsSetReason();
}
public class Amazon.Account.Model.ValidationExceptionField : object {
    private string _message;
    private string _name;
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.Account.PrimaryEmailUpdateStatus : ConstantClass {
    public static PrimaryEmailUpdateStatus ACCEPTED;
    public static PrimaryEmailUpdateStatus PENDING;
    public PrimaryEmailUpdateStatus(string value);
    private static PrimaryEmailUpdateStatus();
    public static PrimaryEmailUpdateStatus FindValue(string value);
    public static PrimaryEmailUpdateStatus op_Implicit(string value);
}
public class Amazon.Account.RegionOptStatus : ConstantClass {
    public static RegionOptStatus DISABLED;
    public static RegionOptStatus DISABLING;
    public static RegionOptStatus ENABLED;
    public static RegionOptStatus ENABLED_BY_DEFAULT;
    public static RegionOptStatus ENABLING;
    public RegionOptStatus(string value);
    private static RegionOptStatus();
    public static RegionOptStatus FindValue(string value);
    public static RegionOptStatus op_Implicit(string value);
}
public class Amazon.Account.ValidationExceptionReason : ConstantClass {
    public static ValidationExceptionReason FieldValidationFailed;
    public static ValidationExceptionReason InvalidRegionOptTarget;
    public ValidationExceptionReason(string value);
    private static ValidationExceptionReason();
    public static ValidationExceptionReason FindValue(string value);
    public static ValidationExceptionReason op_Implicit(string value);
}
