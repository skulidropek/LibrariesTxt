public class Amazon.ApiGatewayV2.AmazonApiGatewayV2Client : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonApiGatewayV2Client(RegionEndpoint region);
    public AmazonApiGatewayV2Client(AmazonApiGatewayV2Config config);
    public AmazonApiGatewayV2Client(AWSCredentials credentials);
    public AmazonApiGatewayV2Client(AWSCredentials credentials, RegionEndpoint region);
    public AmazonApiGatewayV2Client(AWSCredentials credentials, AmazonApiGatewayV2Config clientConfig);
    public AmazonApiGatewayV2Client(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonApiGatewayV2Client(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonApiGatewayV2Client(string awsAccessKeyId, string awsSecretAccessKey, AmazonApiGatewayV2Config clientConfig);
    public AmazonApiGatewayV2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonApiGatewayV2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonApiGatewayV2Client(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonApiGatewayV2Config clientConfig);
    private static AmazonApiGatewayV2Client();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    public virtual CreateApiResponse CreateApi(CreateApiRequest request);
    public virtual Task`1<CreateApiResponse> CreateApiAsync(CreateApiRequest request, CancellationToken cancellationToken);
    public virtual CreateApiMappingResponse CreateApiMapping(CreateApiMappingRequest request);
    public virtual Task`1<CreateApiMappingResponse> CreateApiMappingAsync(CreateApiMappingRequest request, CancellationToken cancellationToken);
    public virtual CreateAuthorizerResponse CreateAuthorizer(CreateAuthorizerRequest request);
    public virtual Task`1<CreateAuthorizerResponse> CreateAuthorizerAsync(CreateAuthorizerRequest request, CancellationToken cancellationToken);
    public virtual CreateDeploymentResponse CreateDeployment(CreateDeploymentRequest request);
    public virtual Task`1<CreateDeploymentResponse> CreateDeploymentAsync(CreateDeploymentRequest request, CancellationToken cancellationToken);
    public virtual CreateDomainNameResponse CreateDomainName(CreateDomainNameRequest request);
    public virtual Task`1<CreateDomainNameResponse> CreateDomainNameAsync(CreateDomainNameRequest request, CancellationToken cancellationToken);
    public virtual CreateIntegrationResponse CreateIntegration(CreateIntegrationRequest request);
    public virtual Task`1<CreateIntegrationResponse> CreateIntegrationAsync(CreateIntegrationRequest request, CancellationToken cancellationToken);
    public virtual CreateIntegrationResponseResponse CreateIntegrationResponse(CreateIntegrationResponseRequest request);
    public virtual Task`1<CreateIntegrationResponseResponse> CreateIntegrationResponseAsync(CreateIntegrationResponseRequest request, CancellationToken cancellationToken);
    public virtual CreateModelResponse CreateModel(CreateModelRequest request);
    public virtual Task`1<CreateModelResponse> CreateModelAsync(CreateModelRequest request, CancellationToken cancellationToken);
    public virtual CreateRouteResponse CreateRoute(CreateRouteRequest request);
    public virtual Task`1<CreateRouteResponse> CreateRouteAsync(CreateRouteRequest request, CancellationToken cancellationToken);
    public virtual CreateRouteResponseResponse CreateRouteResponse(CreateRouteResponseRequest request);
    public virtual Task`1<CreateRouteResponseResponse> CreateRouteResponseAsync(CreateRouteResponseRequest request, CancellationToken cancellationToken);
    public virtual CreateStageResponse CreateStage(CreateStageRequest request);
    public virtual Task`1<CreateStageResponse> CreateStageAsync(CreateStageRequest request, CancellationToken cancellationToken);
    public virtual CreateVpcLinkResponse CreateVpcLink(CreateVpcLinkRequest request);
    public virtual Task`1<CreateVpcLinkResponse> CreateVpcLinkAsync(CreateVpcLinkRequest request, CancellationToken cancellationToken);
    public virtual DeleteAccessLogSettingsResponse DeleteAccessLogSettings(DeleteAccessLogSettingsRequest request);
    public virtual Task`1<DeleteAccessLogSettingsResponse> DeleteAccessLogSettingsAsync(DeleteAccessLogSettingsRequest request, CancellationToken cancellationToken);
    public virtual DeleteApiResponse DeleteApi(DeleteApiRequest request);
    public virtual Task`1<DeleteApiResponse> DeleteApiAsync(DeleteApiRequest request, CancellationToken cancellationToken);
    public virtual DeleteApiMappingResponse DeleteApiMapping(DeleteApiMappingRequest request);
    public virtual Task`1<DeleteApiMappingResponse> DeleteApiMappingAsync(DeleteApiMappingRequest request, CancellationToken cancellationToken);
    public virtual DeleteAuthorizerResponse DeleteAuthorizer(DeleteAuthorizerRequest request);
    public virtual Task`1<DeleteAuthorizerResponse> DeleteAuthorizerAsync(DeleteAuthorizerRequest request, CancellationToken cancellationToken);
    public virtual DeleteCorsConfigurationResponse DeleteCorsConfiguration(DeleteCorsConfigurationRequest request);
    public virtual Task`1<DeleteCorsConfigurationResponse> DeleteCorsConfigurationAsync(DeleteCorsConfigurationRequest request, CancellationToken cancellationToken);
    public virtual DeleteDeploymentResponse DeleteDeployment(DeleteDeploymentRequest request);
    public virtual Task`1<DeleteDeploymentResponse> DeleteDeploymentAsync(DeleteDeploymentRequest request, CancellationToken cancellationToken);
    public virtual DeleteDomainNameResponse DeleteDomainName(DeleteDomainNameRequest request);
    public virtual Task`1<DeleteDomainNameResponse> DeleteDomainNameAsync(DeleteDomainNameRequest request, CancellationToken cancellationToken);
    public virtual DeleteIntegrationResponse DeleteIntegration(DeleteIntegrationRequest request);
    public virtual Task`1<DeleteIntegrationResponse> DeleteIntegrationAsync(DeleteIntegrationRequest request, CancellationToken cancellationToken);
    public virtual DeleteIntegrationResponseResponse DeleteIntegrationResponse(DeleteIntegrationResponseRequest request);
    public virtual Task`1<DeleteIntegrationResponseResponse> DeleteIntegrationResponseAsync(DeleteIntegrationResponseRequest request, CancellationToken cancellationToken);
    public virtual DeleteModelResponse DeleteModel(DeleteModelRequest request);
    public virtual Task`1<DeleteModelResponse> DeleteModelAsync(DeleteModelRequest request, CancellationToken cancellationToken);
    public virtual DeleteRouteResponse DeleteRoute(DeleteRouteRequest request);
    public virtual Task`1<DeleteRouteResponse> DeleteRouteAsync(DeleteRouteRequest request, CancellationToken cancellationToken);
    public virtual DeleteRouteRequestParameterResponse DeleteRouteRequestParameter(DeleteRouteRequestParameterRequest request);
    public virtual Task`1<DeleteRouteRequestParameterResponse> DeleteRouteRequestParameterAsync(DeleteRouteRequestParameterRequest request, CancellationToken cancellationToken);
    public virtual DeleteRouteResponseResponse DeleteRouteResponse(DeleteRouteResponseRequest request);
    public virtual Task`1<DeleteRouteResponseResponse> DeleteRouteResponseAsync(DeleteRouteResponseRequest request, CancellationToken cancellationToken);
    public virtual DeleteRouteSettingsResponse DeleteRouteSettings(DeleteRouteSettingsRequest request);
    public virtual Task`1<DeleteRouteSettingsResponse> DeleteRouteSettingsAsync(DeleteRouteSettingsRequest request, CancellationToken cancellationToken);
    public virtual DeleteStageResponse DeleteStage(DeleteStageRequest request);
    public virtual Task`1<DeleteStageResponse> DeleteStageAsync(DeleteStageRequest request, CancellationToken cancellationToken);
    public virtual DeleteVpcLinkResponse DeleteVpcLink(DeleteVpcLinkRequest request);
    public virtual Task`1<DeleteVpcLinkResponse> DeleteVpcLinkAsync(DeleteVpcLinkRequest request, CancellationToken cancellationToken);
    public virtual ExportApiResponse ExportApi(ExportApiRequest request);
    public virtual Task`1<ExportApiResponse> ExportApiAsync(ExportApiRequest request, CancellationToken cancellationToken);
    public virtual GetApiResponse GetApi(GetApiRequest request);
    public virtual Task`1<GetApiResponse> GetApiAsync(GetApiRequest request, CancellationToken cancellationToken);
    public virtual GetApiMappingResponse GetApiMapping(GetApiMappingRequest request);
    public virtual Task`1<GetApiMappingResponse> GetApiMappingAsync(GetApiMappingRequest request, CancellationToken cancellationToken);
    public virtual GetApiMappingsResponse GetApiMappings(GetApiMappingsRequest request);
    public virtual Task`1<GetApiMappingsResponse> GetApiMappingsAsync(GetApiMappingsRequest request, CancellationToken cancellationToken);
    public virtual GetApisResponse GetApis(GetApisRequest request);
    public virtual Task`1<GetApisResponse> GetApisAsync(GetApisRequest request, CancellationToken cancellationToken);
    public virtual GetAuthorizerResponse GetAuthorizer(GetAuthorizerRequest request);
    public virtual Task`1<GetAuthorizerResponse> GetAuthorizerAsync(GetAuthorizerRequest request, CancellationToken cancellationToken);
    public virtual GetAuthorizersResponse GetAuthorizers(GetAuthorizersRequest request);
    public virtual Task`1<GetAuthorizersResponse> GetAuthorizersAsync(GetAuthorizersRequest request, CancellationToken cancellationToken);
    public virtual GetDeploymentResponse GetDeployment(GetDeploymentRequest request);
    public virtual Task`1<GetDeploymentResponse> GetDeploymentAsync(GetDeploymentRequest request, CancellationToken cancellationToken);
    public virtual GetDeploymentsResponse GetDeployments(GetDeploymentsRequest request);
    public virtual Task`1<GetDeploymentsResponse> GetDeploymentsAsync(GetDeploymentsRequest request, CancellationToken cancellationToken);
    public virtual GetDomainNameResponse GetDomainName(GetDomainNameRequest request);
    public virtual Task`1<GetDomainNameResponse> GetDomainNameAsync(GetDomainNameRequest request, CancellationToken cancellationToken);
    public virtual GetDomainNamesResponse GetDomainNames(GetDomainNamesRequest request);
    public virtual Task`1<GetDomainNamesResponse> GetDomainNamesAsync(GetDomainNamesRequest request, CancellationToken cancellationToken);
    public virtual GetIntegrationResponse GetIntegration(GetIntegrationRequest request);
    public virtual Task`1<GetIntegrationResponse> GetIntegrationAsync(GetIntegrationRequest request, CancellationToken cancellationToken);
    public virtual GetIntegrationResponseResponse GetIntegrationResponse(GetIntegrationResponseRequest request);
    public virtual Task`1<GetIntegrationResponseResponse> GetIntegrationResponseAsync(GetIntegrationResponseRequest request, CancellationToken cancellationToken);
    public virtual GetIntegrationResponsesResponse GetIntegrationResponses(GetIntegrationResponsesRequest request);
    public virtual Task`1<GetIntegrationResponsesResponse> GetIntegrationResponsesAsync(GetIntegrationResponsesRequest request, CancellationToken cancellationToken);
    public virtual GetIntegrationsResponse GetIntegrations(GetIntegrationsRequest request);
    public virtual Task`1<GetIntegrationsResponse> GetIntegrationsAsync(GetIntegrationsRequest request, CancellationToken cancellationToken);
    public virtual GetModelResponse GetModel(GetModelRequest request);
    public virtual Task`1<GetModelResponse> GetModelAsync(GetModelRequest request, CancellationToken cancellationToken);
    public virtual GetModelsResponse GetModels(GetModelsRequest request);
    public virtual Task`1<GetModelsResponse> GetModelsAsync(GetModelsRequest request, CancellationToken cancellationToken);
    public virtual GetModelTemplateResponse GetModelTemplate(GetModelTemplateRequest request);
    public virtual Task`1<GetModelTemplateResponse> GetModelTemplateAsync(GetModelTemplateRequest request, CancellationToken cancellationToken);
    public virtual GetRouteResponse GetRoute(GetRouteRequest request);
    public virtual Task`1<GetRouteResponse> GetRouteAsync(GetRouteRequest request, CancellationToken cancellationToken);
    public virtual GetRouteResponseResponse GetRouteResponse(GetRouteResponseRequest request);
    public virtual Task`1<GetRouteResponseResponse> GetRouteResponseAsync(GetRouteResponseRequest request, CancellationToken cancellationToken);
    public virtual GetRouteResponsesResponse GetRouteResponses(GetRouteResponsesRequest request);
    public virtual Task`1<GetRouteResponsesResponse> GetRouteResponsesAsync(GetRouteResponsesRequest request, CancellationToken cancellationToken);
    public virtual GetRoutesResponse GetRoutes(GetRoutesRequest request);
    public virtual Task`1<GetRoutesResponse> GetRoutesAsync(GetRoutesRequest request, CancellationToken cancellationToken);
    public virtual GetStageResponse GetStage(GetStageRequest request);
    public virtual Task`1<GetStageResponse> GetStageAsync(GetStageRequest request, CancellationToken cancellationToken);
    public virtual GetStagesResponse GetStages(GetStagesRequest request);
    public virtual Task`1<GetStagesResponse> GetStagesAsync(GetStagesRequest request, CancellationToken cancellationToken);
    public virtual GetTagsResponse GetTags(GetTagsRequest request);
    public virtual Task`1<GetTagsResponse> GetTagsAsync(GetTagsRequest request, CancellationToken cancellationToken);
    public virtual GetVpcLinkResponse GetVpcLink(GetVpcLinkRequest request);
    public virtual Task`1<GetVpcLinkResponse> GetVpcLinkAsync(GetVpcLinkRequest request, CancellationToken cancellationToken);
    public virtual GetVpcLinksResponse GetVpcLinks(GetVpcLinksRequest request);
    public virtual Task`1<GetVpcLinksResponse> GetVpcLinksAsync(GetVpcLinksRequest request, CancellationToken cancellationToken);
    public virtual ImportApiResponse ImportApi(ImportApiRequest request);
    public virtual Task`1<ImportApiResponse> ImportApiAsync(ImportApiRequest request, CancellationToken cancellationToken);
    public virtual ReimportApiResponse ReimportApi(ReimportApiRequest request);
    public virtual Task`1<ReimportApiResponse> ReimportApiAsync(ReimportApiRequest request, CancellationToken cancellationToken);
    public virtual ResetAuthorizersCacheResponse ResetAuthorizersCache(ResetAuthorizersCacheRequest request);
    public virtual Task`1<ResetAuthorizersCacheResponse> ResetAuthorizersCacheAsync(ResetAuthorizersCacheRequest request, CancellationToken cancellationToken);
    public virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public virtual UpdateApiResponse UpdateApi(UpdateApiRequest request);
    public virtual Task`1<UpdateApiResponse> UpdateApiAsync(UpdateApiRequest request, CancellationToken cancellationToken);
    public virtual UpdateApiMappingResponse UpdateApiMapping(UpdateApiMappingRequest request);
    public virtual Task`1<UpdateApiMappingResponse> UpdateApiMappingAsync(UpdateApiMappingRequest request, CancellationToken cancellationToken);
    public virtual UpdateAuthorizerResponse UpdateAuthorizer(UpdateAuthorizerRequest request);
    public virtual Task`1<UpdateAuthorizerResponse> UpdateAuthorizerAsync(UpdateAuthorizerRequest request, CancellationToken cancellationToken);
    public virtual UpdateDeploymentResponse UpdateDeployment(UpdateDeploymentRequest request);
    public virtual Task`1<UpdateDeploymentResponse> UpdateDeploymentAsync(UpdateDeploymentRequest request, CancellationToken cancellationToken);
    public virtual UpdateDomainNameResponse UpdateDomainName(UpdateDomainNameRequest request);
    public virtual Task`1<UpdateDomainNameResponse> UpdateDomainNameAsync(UpdateDomainNameRequest request, CancellationToken cancellationToken);
    public virtual UpdateIntegrationResponse UpdateIntegration(UpdateIntegrationRequest request);
    public virtual Task`1<UpdateIntegrationResponse> UpdateIntegrationAsync(UpdateIntegrationRequest request, CancellationToken cancellationToken);
    public virtual UpdateIntegrationResponseResponse UpdateIntegrationResponse(UpdateIntegrationResponseRequest request);
    public virtual Task`1<UpdateIntegrationResponseResponse> UpdateIntegrationResponseAsync(UpdateIntegrationResponseRequest request, CancellationToken cancellationToken);
    public virtual UpdateModelResponse UpdateModel(UpdateModelRequest request);
    public virtual Task`1<UpdateModelResponse> UpdateModelAsync(UpdateModelRequest request, CancellationToken cancellationToken);
    public virtual UpdateRouteResponse UpdateRoute(UpdateRouteRequest request);
    public virtual Task`1<UpdateRouteResponse> UpdateRouteAsync(UpdateRouteRequest request, CancellationToken cancellationToken);
    public virtual UpdateRouteResponseResponse UpdateRouteResponse(UpdateRouteResponseRequest request);
    public virtual Task`1<UpdateRouteResponseResponse> UpdateRouteResponseAsync(UpdateRouteResponseRequest request, CancellationToken cancellationToken);
    public virtual UpdateStageResponse UpdateStage(UpdateStageRequest request);
    public virtual Task`1<UpdateStageResponse> UpdateStageAsync(UpdateStageRequest request, CancellationToken cancellationToken);
    public virtual UpdateVpcLinkResponse UpdateVpcLink(UpdateVpcLinkRequest request);
    public virtual Task`1<UpdateVpcLinkResponse> UpdateVpcLinkAsync(UpdateVpcLinkRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.ApiGatewayV2.AmazonApiGatewayV2Config : ClientConfig {
    private static string UserAgentString;
    private static AmazonApiGatewayV2EndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonApiGatewayV2Config();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.ApiGatewayV2.AmazonApiGatewayV2DefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonApiGatewayV2DefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.ApiGatewayV2.AmazonApiGatewayV2Exception : AmazonServiceException {
    public AmazonApiGatewayV2Exception(string message);
    public AmazonApiGatewayV2Exception(string message, Exception innerException);
    public AmazonApiGatewayV2Exception(Exception innerException);
    public AmazonApiGatewayV2Exception(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonApiGatewayV2Exception(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AmazonApiGatewayV2Exception(SerializationInfo info, StreamingContext context);
}
public class Amazon.ApiGatewayV2.AmazonApiGatewayV2Request : AmazonWebServiceRequest {
}
public class Amazon.ApiGatewayV2.AuthorizationType : ConstantClass {
    public static AuthorizationType AWS_IAM;
    public static AuthorizationType CUSTOM;
    public static AuthorizationType JWT;
    public static AuthorizationType NONE;
    public AuthorizationType(string value);
    private static AuthorizationType();
    public static AuthorizationType FindValue(string value);
    public static AuthorizationType op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.AuthorizerType : ConstantClass {
    public static AuthorizerType JWT;
    public static AuthorizerType REQUEST;
    public AuthorizerType(string value);
    private static AuthorizerType();
    public static AuthorizerType FindValue(string value);
    public static AuthorizerType op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.ConnectionType : ConstantClass {
    public static ConnectionType INTERNET;
    public static ConnectionType VPC_LINK;
    public ConnectionType(string value);
    private static ConnectionType();
    public static ConnectionType FindValue(string value);
    public static ConnectionType op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.ContentHandlingStrategy : ConstantClass {
    public static ContentHandlingStrategy CONVERT_TO_BINARY;
    public static ContentHandlingStrategy CONVERT_TO_TEXT;
    public ContentHandlingStrategy(string value);
    private static ContentHandlingStrategy();
    public static ContentHandlingStrategy FindValue(string value);
    public static ContentHandlingStrategy op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.DeploymentStatus : ConstantClass {
    public static DeploymentStatus DEPLOYED;
    public static DeploymentStatus FAILED;
    public static DeploymentStatus PENDING;
    public DeploymentStatus(string value);
    private static DeploymentStatus();
    public static DeploymentStatus FindValue(string value);
    public static DeploymentStatus op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.DomainNameStatus : ConstantClass {
    public static DomainNameStatus AVAILABLE;
    public static DomainNameStatus PENDING_CERTIFICATE_REIMPORT;
    public static DomainNameStatus PENDING_OWNERSHIP_VERIFICATION;
    public static DomainNameStatus UPDATING;
    public DomainNameStatus(string value);
    private static DomainNameStatus();
    public static DomainNameStatus FindValue(string value);
    public static DomainNameStatus op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.Endpoints.ApiGatewayV2EndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.ApiGatewayV2.EndpointType : ConstantClass {
    public static EndpointType EDGE;
    public static EndpointType REGIONAL;
    public EndpointType(string value);
    private static EndpointType();
    public static EndpointType FindValue(string value);
    public static EndpointType op_Implicit(string value);
}
public interface Amazon.ApiGatewayV2.IAmazonApiGatewayV2 {
    public abstract virtual CreateApiResponse CreateApi(CreateApiRequest request);
    public abstract virtual Task`1<CreateApiResponse> CreateApiAsync(CreateApiRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateApiMappingResponse CreateApiMapping(CreateApiMappingRequest request);
    public abstract virtual Task`1<CreateApiMappingResponse> CreateApiMappingAsync(CreateApiMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateAuthorizerResponse CreateAuthorizer(CreateAuthorizerRequest request);
    public abstract virtual Task`1<CreateAuthorizerResponse> CreateAuthorizerAsync(CreateAuthorizerRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateDeploymentResponse CreateDeployment(CreateDeploymentRequest request);
    public abstract virtual Task`1<CreateDeploymentResponse> CreateDeploymentAsync(CreateDeploymentRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateDomainNameResponse CreateDomainName(CreateDomainNameRequest request);
    public abstract virtual Task`1<CreateDomainNameResponse> CreateDomainNameAsync(CreateDomainNameRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateIntegrationResponse CreateIntegration(CreateIntegrationRequest request);
    public abstract virtual Task`1<CreateIntegrationResponse> CreateIntegrationAsync(CreateIntegrationRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateIntegrationResponseResponse CreateIntegrationResponse(CreateIntegrationResponseRequest request);
    public abstract virtual Task`1<CreateIntegrationResponseResponse> CreateIntegrationResponseAsync(CreateIntegrationResponseRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateModelResponse CreateModel(CreateModelRequest request);
    public abstract virtual Task`1<CreateModelResponse> CreateModelAsync(CreateModelRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateRouteResponse CreateRoute(CreateRouteRequest request);
    public abstract virtual Task`1<CreateRouteResponse> CreateRouteAsync(CreateRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateRouteResponseResponse CreateRouteResponse(CreateRouteResponseRequest request);
    public abstract virtual Task`1<CreateRouteResponseResponse> CreateRouteResponseAsync(CreateRouteResponseRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateStageResponse CreateStage(CreateStageRequest request);
    public abstract virtual Task`1<CreateStageResponse> CreateStageAsync(CreateStageRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateVpcLinkResponse CreateVpcLink(CreateVpcLinkRequest request);
    public abstract virtual Task`1<CreateVpcLinkResponse> CreateVpcLinkAsync(CreateVpcLinkRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteAccessLogSettingsResponse DeleteAccessLogSettings(DeleteAccessLogSettingsRequest request);
    public abstract virtual Task`1<DeleteAccessLogSettingsResponse> DeleteAccessLogSettingsAsync(DeleteAccessLogSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteApiResponse DeleteApi(DeleteApiRequest request);
    public abstract virtual Task`1<DeleteApiResponse> DeleteApiAsync(DeleteApiRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteApiMappingResponse DeleteApiMapping(DeleteApiMappingRequest request);
    public abstract virtual Task`1<DeleteApiMappingResponse> DeleteApiMappingAsync(DeleteApiMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteAuthorizerResponse DeleteAuthorizer(DeleteAuthorizerRequest request);
    public abstract virtual Task`1<DeleteAuthorizerResponse> DeleteAuthorizerAsync(DeleteAuthorizerRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteCorsConfigurationResponse DeleteCorsConfiguration(DeleteCorsConfigurationRequest request);
    public abstract virtual Task`1<DeleteCorsConfigurationResponse> DeleteCorsConfigurationAsync(DeleteCorsConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteDeploymentResponse DeleteDeployment(DeleteDeploymentRequest request);
    public abstract virtual Task`1<DeleteDeploymentResponse> DeleteDeploymentAsync(DeleteDeploymentRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteDomainNameResponse DeleteDomainName(DeleteDomainNameRequest request);
    public abstract virtual Task`1<DeleteDomainNameResponse> DeleteDomainNameAsync(DeleteDomainNameRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteIntegrationResponse DeleteIntegration(DeleteIntegrationRequest request);
    public abstract virtual Task`1<DeleteIntegrationResponse> DeleteIntegrationAsync(DeleteIntegrationRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteIntegrationResponseResponse DeleteIntegrationResponse(DeleteIntegrationResponseRequest request);
    public abstract virtual Task`1<DeleteIntegrationResponseResponse> DeleteIntegrationResponseAsync(DeleteIntegrationResponseRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteModelResponse DeleteModel(DeleteModelRequest request);
    public abstract virtual Task`1<DeleteModelResponse> DeleteModelAsync(DeleteModelRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteRouteResponse DeleteRoute(DeleteRouteRequest request);
    public abstract virtual Task`1<DeleteRouteResponse> DeleteRouteAsync(DeleteRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteRouteRequestParameterResponse DeleteRouteRequestParameter(DeleteRouteRequestParameterRequest request);
    public abstract virtual Task`1<DeleteRouteRequestParameterResponse> DeleteRouteRequestParameterAsync(DeleteRouteRequestParameterRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteRouteResponseResponse DeleteRouteResponse(DeleteRouteResponseRequest request);
    public abstract virtual Task`1<DeleteRouteResponseResponse> DeleteRouteResponseAsync(DeleteRouteResponseRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteRouteSettingsResponse DeleteRouteSettings(DeleteRouteSettingsRequest request);
    public abstract virtual Task`1<DeleteRouteSettingsResponse> DeleteRouteSettingsAsync(DeleteRouteSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteStageResponse DeleteStage(DeleteStageRequest request);
    public abstract virtual Task`1<DeleteStageResponse> DeleteStageAsync(DeleteStageRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteVpcLinkResponse DeleteVpcLink(DeleteVpcLinkRequest request);
    public abstract virtual Task`1<DeleteVpcLinkResponse> DeleteVpcLinkAsync(DeleteVpcLinkRequest request, CancellationToken cancellationToken);
    public abstract virtual ExportApiResponse ExportApi(ExportApiRequest request);
    public abstract virtual Task`1<ExportApiResponse> ExportApiAsync(ExportApiRequest request, CancellationToken cancellationToken);
    public abstract virtual GetApiResponse GetApi(GetApiRequest request);
    public abstract virtual Task`1<GetApiResponse> GetApiAsync(GetApiRequest request, CancellationToken cancellationToken);
    public abstract virtual GetApiMappingResponse GetApiMapping(GetApiMappingRequest request);
    public abstract virtual Task`1<GetApiMappingResponse> GetApiMappingAsync(GetApiMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual GetApiMappingsResponse GetApiMappings(GetApiMappingsRequest request);
    public abstract virtual Task`1<GetApiMappingsResponse> GetApiMappingsAsync(GetApiMappingsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetApisResponse GetApis(GetApisRequest request);
    public abstract virtual Task`1<GetApisResponse> GetApisAsync(GetApisRequest request, CancellationToken cancellationToken);
    public abstract virtual GetAuthorizerResponse GetAuthorizer(GetAuthorizerRequest request);
    public abstract virtual Task`1<GetAuthorizerResponse> GetAuthorizerAsync(GetAuthorizerRequest request, CancellationToken cancellationToken);
    public abstract virtual GetAuthorizersResponse GetAuthorizers(GetAuthorizersRequest request);
    public abstract virtual Task`1<GetAuthorizersResponse> GetAuthorizersAsync(GetAuthorizersRequest request, CancellationToken cancellationToken);
    public abstract virtual GetDeploymentResponse GetDeployment(GetDeploymentRequest request);
    public abstract virtual Task`1<GetDeploymentResponse> GetDeploymentAsync(GetDeploymentRequest request, CancellationToken cancellationToken);
    public abstract virtual GetDeploymentsResponse GetDeployments(GetDeploymentsRequest request);
    public abstract virtual Task`1<GetDeploymentsResponse> GetDeploymentsAsync(GetDeploymentsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetDomainNameResponse GetDomainName(GetDomainNameRequest request);
    public abstract virtual Task`1<GetDomainNameResponse> GetDomainNameAsync(GetDomainNameRequest request, CancellationToken cancellationToken);
    public abstract virtual GetDomainNamesResponse GetDomainNames(GetDomainNamesRequest request);
    public abstract virtual Task`1<GetDomainNamesResponse> GetDomainNamesAsync(GetDomainNamesRequest request, CancellationToken cancellationToken);
    public abstract virtual GetIntegrationResponse GetIntegration(GetIntegrationRequest request);
    public abstract virtual Task`1<GetIntegrationResponse> GetIntegrationAsync(GetIntegrationRequest request, CancellationToken cancellationToken);
    public abstract virtual GetIntegrationResponseResponse GetIntegrationResponse(GetIntegrationResponseRequest request);
    public abstract virtual Task`1<GetIntegrationResponseResponse> GetIntegrationResponseAsync(GetIntegrationResponseRequest request, CancellationToken cancellationToken);
    public abstract virtual GetIntegrationResponsesResponse GetIntegrationResponses(GetIntegrationResponsesRequest request);
    public abstract virtual Task`1<GetIntegrationResponsesResponse> GetIntegrationResponsesAsync(GetIntegrationResponsesRequest request, CancellationToken cancellationToken);
    public abstract virtual GetIntegrationsResponse GetIntegrations(GetIntegrationsRequest request);
    public abstract virtual Task`1<GetIntegrationsResponse> GetIntegrationsAsync(GetIntegrationsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetModelResponse GetModel(GetModelRequest request);
    public abstract virtual Task`1<GetModelResponse> GetModelAsync(GetModelRequest request, CancellationToken cancellationToken);
    public abstract virtual GetModelsResponse GetModels(GetModelsRequest request);
    public abstract virtual Task`1<GetModelsResponse> GetModelsAsync(GetModelsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetModelTemplateResponse GetModelTemplate(GetModelTemplateRequest request);
    public abstract virtual Task`1<GetModelTemplateResponse> GetModelTemplateAsync(GetModelTemplateRequest request, CancellationToken cancellationToken);
    public abstract virtual GetRouteResponse GetRoute(GetRouteRequest request);
    public abstract virtual Task`1<GetRouteResponse> GetRouteAsync(GetRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual GetRouteResponseResponse GetRouteResponse(GetRouteResponseRequest request);
    public abstract virtual Task`1<GetRouteResponseResponse> GetRouteResponseAsync(GetRouteResponseRequest request, CancellationToken cancellationToken);
    public abstract virtual GetRouteResponsesResponse GetRouteResponses(GetRouteResponsesRequest request);
    public abstract virtual Task`1<GetRouteResponsesResponse> GetRouteResponsesAsync(GetRouteResponsesRequest request, CancellationToken cancellationToken);
    public abstract virtual GetRoutesResponse GetRoutes(GetRoutesRequest request);
    public abstract virtual Task`1<GetRoutesResponse> GetRoutesAsync(GetRoutesRequest request, CancellationToken cancellationToken);
    public abstract virtual GetStageResponse GetStage(GetStageRequest request);
    public abstract virtual Task`1<GetStageResponse> GetStageAsync(GetStageRequest request, CancellationToken cancellationToken);
    public abstract virtual GetStagesResponse GetStages(GetStagesRequest request);
    public abstract virtual Task`1<GetStagesResponse> GetStagesAsync(GetStagesRequest request, CancellationToken cancellationToken);
    public abstract virtual GetTagsResponse GetTags(GetTagsRequest request);
    public abstract virtual Task`1<GetTagsResponse> GetTagsAsync(GetTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetVpcLinkResponse GetVpcLink(GetVpcLinkRequest request);
    public abstract virtual Task`1<GetVpcLinkResponse> GetVpcLinkAsync(GetVpcLinkRequest request, CancellationToken cancellationToken);
    public abstract virtual GetVpcLinksResponse GetVpcLinks(GetVpcLinksRequest request);
    public abstract virtual Task`1<GetVpcLinksResponse> GetVpcLinksAsync(GetVpcLinksRequest request, CancellationToken cancellationToken);
    public abstract virtual ImportApiResponse ImportApi(ImportApiRequest request);
    public abstract virtual Task`1<ImportApiResponse> ImportApiAsync(ImportApiRequest request, CancellationToken cancellationToken);
    public abstract virtual ReimportApiResponse ReimportApi(ReimportApiRequest request);
    public abstract virtual Task`1<ReimportApiResponse> ReimportApiAsync(ReimportApiRequest request, CancellationToken cancellationToken);
    public abstract virtual ResetAuthorizersCacheResponse ResetAuthorizersCache(ResetAuthorizersCacheRequest request);
    public abstract virtual Task`1<ResetAuthorizersCacheResponse> ResetAuthorizersCacheAsync(ResetAuthorizersCacheRequest request, CancellationToken cancellationToken);
    public abstract virtual TagResourceResponse TagResource(TagResourceRequest request);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateApiResponse UpdateApi(UpdateApiRequest request);
    public abstract virtual Task`1<UpdateApiResponse> UpdateApiAsync(UpdateApiRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateApiMappingResponse UpdateApiMapping(UpdateApiMappingRequest request);
    public abstract virtual Task`1<UpdateApiMappingResponse> UpdateApiMappingAsync(UpdateApiMappingRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateAuthorizerResponse UpdateAuthorizer(UpdateAuthorizerRequest request);
    public abstract virtual Task`1<UpdateAuthorizerResponse> UpdateAuthorizerAsync(UpdateAuthorizerRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateDeploymentResponse UpdateDeployment(UpdateDeploymentRequest request);
    public abstract virtual Task`1<UpdateDeploymentResponse> UpdateDeploymentAsync(UpdateDeploymentRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateDomainNameResponse UpdateDomainName(UpdateDomainNameRequest request);
    public abstract virtual Task`1<UpdateDomainNameResponse> UpdateDomainNameAsync(UpdateDomainNameRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateIntegrationResponse UpdateIntegration(UpdateIntegrationRequest request);
    public abstract virtual Task`1<UpdateIntegrationResponse> UpdateIntegrationAsync(UpdateIntegrationRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateIntegrationResponseResponse UpdateIntegrationResponse(UpdateIntegrationResponseRequest request);
    public abstract virtual Task`1<UpdateIntegrationResponseResponse> UpdateIntegrationResponseAsync(UpdateIntegrationResponseRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateModelResponse UpdateModel(UpdateModelRequest request);
    public abstract virtual Task`1<UpdateModelResponse> UpdateModelAsync(UpdateModelRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateRouteResponse UpdateRoute(UpdateRouteRequest request);
    public abstract virtual Task`1<UpdateRouteResponse> UpdateRouteAsync(UpdateRouteRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateRouteResponseResponse UpdateRouteResponse(UpdateRouteResponseRequest request);
    public abstract virtual Task`1<UpdateRouteResponseResponse> UpdateRouteResponseAsync(UpdateRouteResponseRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateStageResponse UpdateStage(UpdateStageRequest request);
    public abstract virtual Task`1<UpdateStageResponse> UpdateStageAsync(UpdateStageRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateVpcLinkResponse UpdateVpcLink(UpdateVpcLinkRequest request);
    public abstract virtual Task`1<UpdateVpcLinkResponse> UpdateVpcLinkAsync(UpdateVpcLinkRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.ApiGatewayV2.IntegrationType : ConstantClass {
    public static IntegrationType AWS;
    public static IntegrationType AWS_PROXY;
    public static IntegrationType HTTP;
    public static IntegrationType HTTP_PROXY;
    public static IntegrationType MOCK;
    public IntegrationType(string value);
    private static IntegrationType();
    public static IntegrationType FindValue(string value);
    public static IntegrationType op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.Internal.AmazonApiGatewayV2EndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.ApiGatewayV2.Internal.AmazonApiGatewayV2EndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.ApiGatewayV2.Internal.AmazonApiGatewayV2Metadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.ApiGatewayV2.LoggingLevel : ConstantClass {
    public static LoggingLevel ERROR;
    public static LoggingLevel INFO;
    public static LoggingLevel OFF;
    public LoggingLevel(string value);
    private static LoggingLevel();
    public static LoggingLevel FindValue(string value);
    public static LoggingLevel op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.Model.AccessDeniedException : AmazonApiGatewayV2Exception {
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception innerException);
    public AccessDeniedException(Exception innerException);
    public AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AccessDeniedException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ApiGatewayV2.Model.AccessLogSettings : object {
    private string _destinationArn;
    private string _format;
    public string DestinationArn { get; public set; }
    public string Format { get; public set; }
    public string get_DestinationArn();
    public void set_DestinationArn(string value);
    internal bool IsSetDestinationArn();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
}
public class Amazon.ApiGatewayV2.Model.Api : object {
    private string _apiEndpoint;
    private Nullable`1<bool> _apiGatewayManaged;
    private string _apiId;
    private string _apiKeySelectionExpression;
    private Cors _corsConfiguration;
    private Nullable`1<DateTime> _createdDate;
    private string _description;
    private Nullable`1<bool> _disableExecuteApiEndpoint;
    private Nullable`1<bool> _disableSchemaValidation;
    private List`1<string> _importInfo;
    private string _name;
    private ProtocolType _protocolType;
    private string _routeSelectionExpression;
    private Dictionary`2<string, string> _tags;
    private string _version;
    private List`1<string> _warnings;
    public string ApiEndpoint { get; public set; }
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public string ApiId { get; public set; }
    public string ApiKeySelectionExpression { get; public set; }
    public Cors CorsConfiguration { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> DisableExecuteApiEndpoint { get; public set; }
    public Nullable`1<bool> DisableSchemaValidation { get; public set; }
    public List`1<string> ImportInfo { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public ProtocolType ProtocolType { get; public set; }
    [AWSPropertyAttribute]
public string RouteSelectionExpression { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string Version { get; public set; }
    public List`1<string> Warnings { get; public set; }
    public string get_ApiEndpoint();
    public void set_ApiEndpoint(string value);
    internal bool IsSetApiEndpoint();
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiKeySelectionExpression();
    public void set_ApiKeySelectionExpression(string value);
    internal bool IsSetApiKeySelectionExpression();
    public Cors get_CorsConfiguration();
    public void set_CorsConfiguration(Cors value);
    internal bool IsSetCorsConfiguration();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DisableExecuteApiEndpoint();
    public void set_DisableExecuteApiEndpoint(Nullable`1<bool> value);
    internal bool IsSetDisableExecuteApiEndpoint();
    public Nullable`1<bool> get_DisableSchemaValidation();
    public void set_DisableSchemaValidation(Nullable`1<bool> value);
    internal bool IsSetDisableSchemaValidation();
    public List`1<string> get_ImportInfo();
    public void set_ImportInfo(List`1<string> value);
    internal bool IsSetImportInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ProtocolType get_ProtocolType();
    public void set_ProtocolType(ProtocolType value);
    internal bool IsSetProtocolType();
    public string get_RouteSelectionExpression();
    public void set_RouteSelectionExpression(string value);
    internal bool IsSetRouteSelectionExpression();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public List`1<string> get_Warnings();
    public void set_Warnings(List`1<string> value);
    internal bool IsSetWarnings();
}
public class Amazon.ApiGatewayV2.Model.ApiMapping : object {
    private string _apiId;
    private string _apiMappingId;
    private string _apiMappingKey;
    private string _stage;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string ApiMappingId { get; public set; }
    public string ApiMappingKey { get; public set; }
    [AWSPropertyAttribute]
public string Stage { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiMappingId();
    public void set_ApiMappingId(string value);
    internal bool IsSetApiMappingId();
    public string get_ApiMappingKey();
    public void set_ApiMappingKey(string value);
    internal bool IsSetApiMappingKey();
    public string get_Stage();
    public void set_Stage(string value);
    internal bool IsSetStage();
}
public class Amazon.ApiGatewayV2.Model.Authorizer : object {
    private string _authorizerCredentialsArn;
    private string _authorizerId;
    private string _authorizerPayloadFormatVersion;
    private Nullable`1<int> _authorizerResultTtlInSeconds;
    private AuthorizerType _authorizerType;
    private string _authorizerUri;
    private Nullable`1<bool> _enableSimpleResponses;
    private List`1<string> _identitySource;
    private string _identityValidationExpression;
    private JWTConfiguration _jwtConfiguration;
    private string _name;
    public string AuthorizerCredentialsArn { get; public set; }
    public string AuthorizerId { get; public set; }
    public string AuthorizerPayloadFormatVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AuthorizerResultTtlInSeconds { get; public set; }
    public AuthorizerType AuthorizerType { get; public set; }
    public string AuthorizerUri { get; public set; }
    public Nullable`1<bool> EnableSimpleResponses { get; public set; }
    public List`1<string> IdentitySource { get; public set; }
    public string IdentityValidationExpression { get; public set; }
    public JWTConfiguration JwtConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_AuthorizerCredentialsArn();
    public void set_AuthorizerCredentialsArn(string value);
    internal bool IsSetAuthorizerCredentialsArn();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_AuthorizerPayloadFormatVersion();
    public void set_AuthorizerPayloadFormatVersion(string value);
    internal bool IsSetAuthorizerPayloadFormatVersion();
    public Nullable`1<int> get_AuthorizerResultTtlInSeconds();
    public void set_AuthorizerResultTtlInSeconds(Nullable`1<int> value);
    internal bool IsSetAuthorizerResultTtlInSeconds();
    public AuthorizerType get_AuthorizerType();
    public void set_AuthorizerType(AuthorizerType value);
    internal bool IsSetAuthorizerType();
    public string get_AuthorizerUri();
    public void set_AuthorizerUri(string value);
    internal bool IsSetAuthorizerUri();
    public Nullable`1<bool> get_EnableSimpleResponses();
    public void set_EnableSimpleResponses(Nullable`1<bool> value);
    internal bool IsSetEnableSimpleResponses();
    public List`1<string> get_IdentitySource();
    public void set_IdentitySource(List`1<string> value);
    internal bool IsSetIdentitySource();
    public string get_IdentityValidationExpression();
    public void set_IdentityValidationExpression(string value);
    internal bool IsSetIdentityValidationExpression();
    public JWTConfiguration get_JwtConfiguration();
    public void set_JwtConfiguration(JWTConfiguration value);
    internal bool IsSetJwtConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.ApiGatewayV2.Model.BadRequestException : AmazonApiGatewayV2Exception {
    public BadRequestException(string message);
    public BadRequestException(string message, Exception innerException);
    public BadRequestException(Exception innerException);
    public BadRequestException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BadRequestException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected BadRequestException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ApiGatewayV2.Model.ConflictException : AmazonApiGatewayV2Exception {
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ConflictException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.ApiGatewayV2.Model.Cors : object {
    private Nullable`1<bool> _allowCredentials;
    private List`1<string> _allowHeaders;
    private List`1<string> _allowMethods;
    private List`1<string> _allowOrigins;
    private List`1<string> _exposeHeaders;
    private Nullable`1<int> _maxAge;
    public Nullable`1<bool> AllowCredentials { get; public set; }
    public List`1<string> AllowHeaders { get; public set; }
    public List`1<string> AllowMethods { get; public set; }
    public List`1<string> AllowOrigins { get; public set; }
    public List`1<string> ExposeHeaders { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxAge { get; public set; }
    public Nullable`1<bool> get_AllowCredentials();
    public void set_AllowCredentials(Nullable`1<bool> value);
    internal bool IsSetAllowCredentials();
    public List`1<string> get_AllowHeaders();
    public void set_AllowHeaders(List`1<string> value);
    internal bool IsSetAllowHeaders();
    public List`1<string> get_AllowMethods();
    public void set_AllowMethods(List`1<string> value);
    internal bool IsSetAllowMethods();
    public List`1<string> get_AllowOrigins();
    public void set_AllowOrigins(List`1<string> value);
    internal bool IsSetAllowOrigins();
    public List`1<string> get_ExposeHeaders();
    public void set_ExposeHeaders(List`1<string> value);
    internal bool IsSetExposeHeaders();
    public Nullable`1<int> get_MaxAge();
    public void set_MaxAge(Nullable`1<int> value);
    internal bool IsSetMaxAge();
}
public class Amazon.ApiGatewayV2.Model.CreateApiMappingRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _apiMappingKey;
    private string _domainName;
    private string _stage;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string ApiMappingKey { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    [AWSPropertyAttribute]
public string Stage { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiMappingKey();
    public void set_ApiMappingKey(string value);
    internal bool IsSetApiMappingKey();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public string get_Stage();
    public void set_Stage(string value);
    internal bool IsSetStage();
}
public class Amazon.ApiGatewayV2.Model.CreateApiMappingResponse : AmazonWebServiceResponse {
    private string _apiId;
    private string _apiMappingId;
    private string _apiMappingKey;
    private string _stage;
    public string ApiId { get; public set; }
    public string ApiMappingId { get; public set; }
    public string ApiMappingKey { get; public set; }
    public string Stage { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiMappingId();
    public void set_ApiMappingId(string value);
    internal bool IsSetApiMappingId();
    public string get_ApiMappingKey();
    public void set_ApiMappingKey(string value);
    internal bool IsSetApiMappingKey();
    public string get_Stage();
    public void set_Stage(string value);
    internal bool IsSetStage();
}
public class Amazon.ApiGatewayV2.Model.CreateApiRequest : AmazonApiGatewayV2Request {
    private string _apiKeySelectionExpression;
    private Cors _corsConfiguration;
    private string _credentialsArn;
    private string _description;
    private Nullable`1<bool> _disableExecuteApiEndpoint;
    private Nullable`1<bool> _disableSchemaValidation;
    private string _name;
    private ProtocolType _protocolType;
    private string _routeKey;
    private string _routeSelectionExpression;
    private Dictionary`2<string, string> _tags;
    private string _target;
    private string _version;
    public string ApiKeySelectionExpression { get; public set; }
    public Cors CorsConfiguration { get; public set; }
    public string CredentialsArn { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> DisableExecuteApiEndpoint { get; public set; }
    public Nullable`1<bool> DisableSchemaValidation { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public ProtocolType ProtocolType { get; public set; }
    public string RouteKey { get; public set; }
    public string RouteSelectionExpression { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string Target { get; public set; }
    public string Version { get; public set; }
    public string get_ApiKeySelectionExpression();
    public void set_ApiKeySelectionExpression(string value);
    internal bool IsSetApiKeySelectionExpression();
    public Cors get_CorsConfiguration();
    public void set_CorsConfiguration(Cors value);
    internal bool IsSetCorsConfiguration();
    public string get_CredentialsArn();
    public void set_CredentialsArn(string value);
    internal bool IsSetCredentialsArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DisableExecuteApiEndpoint();
    public void set_DisableExecuteApiEndpoint(Nullable`1<bool> value);
    internal bool IsSetDisableExecuteApiEndpoint();
    public Nullable`1<bool> get_DisableSchemaValidation();
    public void set_DisableSchemaValidation(Nullable`1<bool> value);
    internal bool IsSetDisableSchemaValidation();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ProtocolType get_ProtocolType();
    public void set_ProtocolType(ProtocolType value);
    internal bool IsSetProtocolType();
    public string get_RouteKey();
    public void set_RouteKey(string value);
    internal bool IsSetRouteKey();
    public string get_RouteSelectionExpression();
    public void set_RouteSelectionExpression(string value);
    internal bool IsSetRouteSelectionExpression();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.ApiGatewayV2.Model.CreateApiResponse : AmazonWebServiceResponse {
    private string _apiEndpoint;
    private Nullable`1<bool> _apiGatewayManaged;
    private string _apiId;
    private string _apiKeySelectionExpression;
    private Cors _corsConfiguration;
    private Nullable`1<DateTime> _createdDate;
    private string _description;
    private Nullable`1<bool> _disableExecuteApiEndpoint;
    private Nullable`1<bool> _disableSchemaValidation;
    private List`1<string> _importInfo;
    private string _name;
    private ProtocolType _protocolType;
    private string _routeSelectionExpression;
    private Dictionary`2<string, string> _tags;
    private string _version;
    private List`1<string> _warnings;
    public string ApiEndpoint { get; public set; }
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public string ApiId { get; public set; }
    public string ApiKeySelectionExpression { get; public set; }
    public Cors CorsConfiguration { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> DisableExecuteApiEndpoint { get; public set; }
    public Nullable`1<bool> DisableSchemaValidation { get; public set; }
    public List`1<string> ImportInfo { get; public set; }
    public string Name { get; public set; }
    public ProtocolType ProtocolType { get; public set; }
    public string RouteSelectionExpression { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string Version { get; public set; }
    public List`1<string> Warnings { get; public set; }
    public string get_ApiEndpoint();
    public void set_ApiEndpoint(string value);
    internal bool IsSetApiEndpoint();
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiKeySelectionExpression();
    public void set_ApiKeySelectionExpression(string value);
    internal bool IsSetApiKeySelectionExpression();
    public Cors get_CorsConfiguration();
    public void set_CorsConfiguration(Cors value);
    internal bool IsSetCorsConfiguration();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DisableExecuteApiEndpoint();
    public void set_DisableExecuteApiEndpoint(Nullable`1<bool> value);
    internal bool IsSetDisableExecuteApiEndpoint();
    public Nullable`1<bool> get_DisableSchemaValidation();
    public void set_DisableSchemaValidation(Nullable`1<bool> value);
    internal bool IsSetDisableSchemaValidation();
    public List`1<string> get_ImportInfo();
    public void set_ImportInfo(List`1<string> value);
    internal bool IsSetImportInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ProtocolType get_ProtocolType();
    public void set_ProtocolType(ProtocolType value);
    internal bool IsSetProtocolType();
    public string get_RouteSelectionExpression();
    public void set_RouteSelectionExpression(string value);
    internal bool IsSetRouteSelectionExpression();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public List`1<string> get_Warnings();
    public void set_Warnings(List`1<string> value);
    internal bool IsSetWarnings();
}
public class Amazon.ApiGatewayV2.Model.CreateAuthorizerRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _authorizerCredentialsArn;
    private string _authorizerPayloadFormatVersion;
    private Nullable`1<int> _authorizerResultTtlInSeconds;
    private AuthorizerType _authorizerType;
    private string _authorizerUri;
    private Nullable`1<bool> _enableSimpleResponses;
    private List`1<string> _identitySource;
    private string _identityValidationExpression;
    private JWTConfiguration _jwtConfiguration;
    private string _name;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string AuthorizerCredentialsArn { get; public set; }
    public string AuthorizerPayloadFormatVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AuthorizerResultTtlInSeconds { get; public set; }
    [AWSPropertyAttribute]
public AuthorizerType AuthorizerType { get; public set; }
    public string AuthorizerUri { get; public set; }
    public Nullable`1<bool> EnableSimpleResponses { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> IdentitySource { get; public set; }
    public string IdentityValidationExpression { get; public set; }
    public JWTConfiguration JwtConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_AuthorizerCredentialsArn();
    public void set_AuthorizerCredentialsArn(string value);
    internal bool IsSetAuthorizerCredentialsArn();
    public string get_AuthorizerPayloadFormatVersion();
    public void set_AuthorizerPayloadFormatVersion(string value);
    internal bool IsSetAuthorizerPayloadFormatVersion();
    public Nullable`1<int> get_AuthorizerResultTtlInSeconds();
    public void set_AuthorizerResultTtlInSeconds(Nullable`1<int> value);
    internal bool IsSetAuthorizerResultTtlInSeconds();
    public AuthorizerType get_AuthorizerType();
    public void set_AuthorizerType(AuthorizerType value);
    internal bool IsSetAuthorizerType();
    public string get_AuthorizerUri();
    public void set_AuthorizerUri(string value);
    internal bool IsSetAuthorizerUri();
    public Nullable`1<bool> get_EnableSimpleResponses();
    public void set_EnableSimpleResponses(Nullable`1<bool> value);
    internal bool IsSetEnableSimpleResponses();
    public List`1<string> get_IdentitySource();
    public void set_IdentitySource(List`1<string> value);
    internal bool IsSetIdentitySource();
    public string get_IdentityValidationExpression();
    public void set_IdentityValidationExpression(string value);
    internal bool IsSetIdentityValidationExpression();
    public JWTConfiguration get_JwtConfiguration();
    public void set_JwtConfiguration(JWTConfiguration value);
    internal bool IsSetJwtConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.ApiGatewayV2.Model.CreateAuthorizerResponse : AmazonWebServiceResponse {
    private string _authorizerCredentialsArn;
    private string _authorizerId;
    private string _authorizerPayloadFormatVersion;
    private Nullable`1<int> _authorizerResultTtlInSeconds;
    private AuthorizerType _authorizerType;
    private string _authorizerUri;
    private Nullable`1<bool> _enableSimpleResponses;
    private List`1<string> _identitySource;
    private string _identityValidationExpression;
    private JWTConfiguration _jwtConfiguration;
    private string _name;
    public string AuthorizerCredentialsArn { get; public set; }
    public string AuthorizerId { get; public set; }
    public string AuthorizerPayloadFormatVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AuthorizerResultTtlInSeconds { get; public set; }
    public AuthorizerType AuthorizerType { get; public set; }
    public string AuthorizerUri { get; public set; }
    public Nullable`1<bool> EnableSimpleResponses { get; public set; }
    public List`1<string> IdentitySource { get; public set; }
    public string IdentityValidationExpression { get; public set; }
    public JWTConfiguration JwtConfiguration { get; public set; }
    public string Name { get; public set; }
    public string get_AuthorizerCredentialsArn();
    public void set_AuthorizerCredentialsArn(string value);
    internal bool IsSetAuthorizerCredentialsArn();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_AuthorizerPayloadFormatVersion();
    public void set_AuthorizerPayloadFormatVersion(string value);
    internal bool IsSetAuthorizerPayloadFormatVersion();
    public Nullable`1<int> get_AuthorizerResultTtlInSeconds();
    public void set_AuthorizerResultTtlInSeconds(Nullable`1<int> value);
    internal bool IsSetAuthorizerResultTtlInSeconds();
    public AuthorizerType get_AuthorizerType();
    public void set_AuthorizerType(AuthorizerType value);
    internal bool IsSetAuthorizerType();
    public string get_AuthorizerUri();
    public void set_AuthorizerUri(string value);
    internal bool IsSetAuthorizerUri();
    public Nullable`1<bool> get_EnableSimpleResponses();
    public void set_EnableSimpleResponses(Nullable`1<bool> value);
    internal bool IsSetEnableSimpleResponses();
    public List`1<string> get_IdentitySource();
    public void set_IdentitySource(List`1<string> value);
    internal bool IsSetIdentitySource();
    public string get_IdentityValidationExpression();
    public void set_IdentityValidationExpression(string value);
    internal bool IsSetIdentityValidationExpression();
    public JWTConfiguration get_JwtConfiguration();
    public void set_JwtConfiguration(JWTConfiguration value);
    internal bool IsSetJwtConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.ApiGatewayV2.Model.CreateDeploymentRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _description;
    private string _stageName;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string Description { get; public set; }
    public string StageName { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
}
public class Amazon.ApiGatewayV2.Model.CreateDeploymentResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _autoDeployed;
    private Nullable`1<DateTime> _createdDate;
    private string _deploymentId;
    private DeploymentStatus _deploymentStatus;
    private string _deploymentStatusMessage;
    private string _description;
    public Nullable`1<bool> AutoDeployed { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string DeploymentId { get; public set; }
    public DeploymentStatus DeploymentStatus { get; public set; }
    public string DeploymentStatusMessage { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> get_AutoDeployed();
    public void set_AutoDeployed(Nullable`1<bool> value);
    internal bool IsSetAutoDeployed();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public DeploymentStatus get_DeploymentStatus();
    public void set_DeploymentStatus(DeploymentStatus value);
    internal bool IsSetDeploymentStatus();
    public string get_DeploymentStatusMessage();
    public void set_DeploymentStatusMessage(string value);
    internal bool IsSetDeploymentStatusMessage();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.ApiGatewayV2.Model.CreateDomainNameRequest : AmazonApiGatewayV2Request {
    private string _domainName;
    private List`1<DomainNameConfiguration> _domainNameConfigurations;
    private MutualTlsAuthenticationInput _mutualTlsAuthentication;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    public List`1<DomainNameConfiguration> DomainNameConfigurations { get; public set; }
    public MutualTlsAuthenticationInput MutualTlsAuthentication { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public List`1<DomainNameConfiguration> get_DomainNameConfigurations();
    public void set_DomainNameConfigurations(List`1<DomainNameConfiguration> value);
    internal bool IsSetDomainNameConfigurations();
    public MutualTlsAuthenticationInput get_MutualTlsAuthentication();
    public void set_MutualTlsAuthentication(MutualTlsAuthenticationInput value);
    internal bool IsSetMutualTlsAuthentication();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.CreateDomainNameResponse : AmazonWebServiceResponse {
    private string _apiMappingSelectionExpression;
    private string _domainName;
    private List`1<DomainNameConfiguration> _domainNameConfigurations;
    private MutualTlsAuthentication _mutualTlsAuthentication;
    private Dictionary`2<string, string> _tags;
    public string ApiMappingSelectionExpression { get; public set; }
    public string DomainName { get; public set; }
    public List`1<DomainNameConfiguration> DomainNameConfigurations { get; public set; }
    public MutualTlsAuthentication MutualTlsAuthentication { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ApiMappingSelectionExpression();
    public void set_ApiMappingSelectionExpression(string value);
    internal bool IsSetApiMappingSelectionExpression();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public List`1<DomainNameConfiguration> get_DomainNameConfigurations();
    public void set_DomainNameConfigurations(List`1<DomainNameConfiguration> value);
    internal bool IsSetDomainNameConfigurations();
    public MutualTlsAuthentication get_MutualTlsAuthentication();
    public void set_MutualTlsAuthentication(MutualTlsAuthentication value);
    internal bool IsSetMutualTlsAuthentication();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.CreateIntegrationRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _connectionId;
    private ConnectionType _connectionType;
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _credentialsArn;
    private string _description;
    private string _integrationMethod;
    private string _integrationSubtype;
    private IntegrationType _integrationType;
    private string _integrationUri;
    private PassthroughBehavior _passthroughBehavior;
    private string _payloadFormatVersion;
    private Dictionary`2<string, string> _requestParameters;
    private Dictionary`2<string, string> _requestTemplates;
    private Dictionary`2<string, Dictionary`2<string, string>> _responseParameters;
    private string _templateSelectionExpression;
    private Nullable`1<int> _timeoutInMillis;
    private TlsConfigInput _tlsConfig;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string ConnectionId { get; public set; }
    public ConnectionType ConnectionType { get; public set; }
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    public string CredentialsArn { get; public set; }
    public string Description { get; public set; }
    public string IntegrationMethod { get; public set; }
    public string IntegrationSubtype { get; public set; }
    [AWSPropertyAttribute]
public IntegrationType IntegrationType { get; public set; }
    public string IntegrationUri { get; public set; }
    public PassthroughBehavior PassthroughBehavior { get; public set; }
    public string PayloadFormatVersion { get; public set; }
    public Dictionary`2<string, string> RequestParameters { get; public set; }
    public Dictionary`2<string, string> RequestTemplates { get; public set; }
    public Dictionary`2<string, Dictionary`2<string, string>> ResponseParameters { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TimeoutInMillis { get; public set; }
    public TlsConfigInput TlsConfig { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ConnectionId();
    public void set_ConnectionId(string value);
    internal bool IsSetConnectionId();
    public ConnectionType get_ConnectionType();
    public void set_ConnectionType(ConnectionType value);
    internal bool IsSetConnectionType();
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_CredentialsArn();
    public void set_CredentialsArn(string value);
    internal bool IsSetCredentialsArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IntegrationMethod();
    public void set_IntegrationMethod(string value);
    internal bool IsSetIntegrationMethod();
    public string get_IntegrationSubtype();
    public void set_IntegrationSubtype(string value);
    internal bool IsSetIntegrationSubtype();
    public IntegrationType get_IntegrationType();
    public void set_IntegrationType(IntegrationType value);
    internal bool IsSetIntegrationType();
    public string get_IntegrationUri();
    public void set_IntegrationUri(string value);
    internal bool IsSetIntegrationUri();
    public PassthroughBehavior get_PassthroughBehavior();
    public void set_PassthroughBehavior(PassthroughBehavior value);
    internal bool IsSetPassthroughBehavior();
    public string get_PayloadFormatVersion();
    public void set_PayloadFormatVersion(string value);
    internal bool IsSetPayloadFormatVersion();
    public Dictionary`2<string, string> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, string> value);
    internal bool IsSetRequestParameters();
    public Dictionary`2<string, string> get_RequestTemplates();
    public void set_RequestTemplates(Dictionary`2<string, string> value);
    internal bool IsSetRequestTemplates();
    public Dictionary`2<string, Dictionary`2<string, string>> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, Dictionary`2<string, string>> value);
    internal bool IsSetResponseParameters();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
    public Nullable`1<int> get_TimeoutInMillis();
    public void set_TimeoutInMillis(Nullable`1<int> value);
    internal bool IsSetTimeoutInMillis();
    public TlsConfigInput get_TlsConfig();
    public void set_TlsConfig(TlsConfigInput value);
    internal bool IsSetTlsConfig();
}
public class Amazon.ApiGatewayV2.Model.CreateIntegrationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _apiGatewayManaged;
    private string _connectionId;
    private ConnectionType _connectionType;
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _credentialsArn;
    private string _description;
    private string _integrationId;
    private string _integrationMethod;
    private string _integrationResponseSelectionExpression;
    private string _integrationSubtype;
    private IntegrationType _integrationType;
    private string _integrationUri;
    private PassthroughBehavior _passthroughBehavior;
    private string _payloadFormatVersion;
    private Dictionary`2<string, string> _requestParameters;
    private Dictionary`2<string, string> _requestTemplates;
    private Dictionary`2<string, Dictionary`2<string, string>> _responseParameters;
    private string _templateSelectionExpression;
    private Nullable`1<int> _timeoutInMillis;
    private TlsConfig _tlsConfig;
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public string ConnectionId { get; public set; }
    public ConnectionType ConnectionType { get; public set; }
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    public string CredentialsArn { get; public set; }
    public string Description { get; public set; }
    public string IntegrationId { get; public set; }
    public string IntegrationMethod { get; public set; }
    public string IntegrationResponseSelectionExpression { get; public set; }
    public string IntegrationSubtype { get; public set; }
    public IntegrationType IntegrationType { get; public set; }
    public string IntegrationUri { get; public set; }
    public PassthroughBehavior PassthroughBehavior { get; public set; }
    public string PayloadFormatVersion { get; public set; }
    public Dictionary`2<string, string> RequestParameters { get; public set; }
    public Dictionary`2<string, string> RequestTemplates { get; public set; }
    public Dictionary`2<string, Dictionary`2<string, string>> ResponseParameters { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TimeoutInMillis { get; public set; }
    public TlsConfig TlsConfig { get; public set; }
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public string get_ConnectionId();
    public void set_ConnectionId(string value);
    internal bool IsSetConnectionId();
    public ConnectionType get_ConnectionType();
    public void set_ConnectionType(ConnectionType value);
    internal bool IsSetConnectionType();
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_CredentialsArn();
    public void set_CredentialsArn(string value);
    internal bool IsSetCredentialsArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
    public string get_IntegrationMethod();
    public void set_IntegrationMethod(string value);
    internal bool IsSetIntegrationMethod();
    public string get_IntegrationResponseSelectionExpression();
    public void set_IntegrationResponseSelectionExpression(string value);
    internal bool IsSetIntegrationResponseSelectionExpression();
    public string get_IntegrationSubtype();
    public void set_IntegrationSubtype(string value);
    internal bool IsSetIntegrationSubtype();
    public IntegrationType get_IntegrationType();
    public void set_IntegrationType(IntegrationType value);
    internal bool IsSetIntegrationType();
    public string get_IntegrationUri();
    public void set_IntegrationUri(string value);
    internal bool IsSetIntegrationUri();
    public PassthroughBehavior get_PassthroughBehavior();
    public void set_PassthroughBehavior(PassthroughBehavior value);
    internal bool IsSetPassthroughBehavior();
    public string get_PayloadFormatVersion();
    public void set_PayloadFormatVersion(string value);
    internal bool IsSetPayloadFormatVersion();
    public Dictionary`2<string, string> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, string> value);
    internal bool IsSetRequestParameters();
    public Dictionary`2<string, string> get_RequestTemplates();
    public void set_RequestTemplates(Dictionary`2<string, string> value);
    internal bool IsSetRequestTemplates();
    public Dictionary`2<string, Dictionary`2<string, string>> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, Dictionary`2<string, string>> value);
    internal bool IsSetResponseParameters();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
    public Nullable`1<int> get_TimeoutInMillis();
    public void set_TimeoutInMillis(Nullable`1<int> value);
    internal bool IsSetTimeoutInMillis();
    public TlsConfig get_TlsConfig();
    public void set_TlsConfig(TlsConfig value);
    internal bool IsSetTlsConfig();
}
public class Amazon.ApiGatewayV2.Model.CreateIntegrationResponseRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _integrationId;
    private string _integrationResponseKey;
    private Dictionary`2<string, string> _responseParameters;
    private Dictionary`2<string, string> _responseTemplates;
    private string _templateSelectionExpression;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationId { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationResponseKey { get; public set; }
    public Dictionary`2<string, string> ResponseParameters { get; public set; }
    public Dictionary`2<string, string> ResponseTemplates { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
    public string get_IntegrationResponseKey();
    public void set_IntegrationResponseKey(string value);
    internal bool IsSetIntegrationResponseKey();
    public Dictionary`2<string, string> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, string> value);
    internal bool IsSetResponseParameters();
    public Dictionary`2<string, string> get_ResponseTemplates();
    public void set_ResponseTemplates(Dictionary`2<string, string> value);
    internal bool IsSetResponseTemplates();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
}
public class Amazon.ApiGatewayV2.Model.CreateIntegrationResponseResponse : AmazonWebServiceResponse {
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _integrationResponseId;
    private string _integrationResponseKey;
    private Dictionary`2<string, string> _responseParameters;
    private Dictionary`2<string, string> _responseTemplates;
    private string _templateSelectionExpression;
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    public string IntegrationResponseId { get; public set; }
    public string IntegrationResponseKey { get; public set; }
    public Dictionary`2<string, string> ResponseParameters { get; public set; }
    public Dictionary`2<string, string> ResponseTemplates { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_IntegrationResponseId();
    public void set_IntegrationResponseId(string value);
    internal bool IsSetIntegrationResponseId();
    public string get_IntegrationResponseKey();
    public void set_IntegrationResponseKey(string value);
    internal bool IsSetIntegrationResponseKey();
    public Dictionary`2<string, string> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, string> value);
    internal bool IsSetResponseParameters();
    public Dictionary`2<string, string> get_ResponseTemplates();
    public void set_ResponseTemplates(Dictionary`2<string, string> value);
    internal bool IsSetResponseTemplates();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
}
public class Amazon.ApiGatewayV2.Model.CreateModelRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _contentType;
    private string _description;
    private string _name;
    private string _schema;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string ContentType { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Schema { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
}
public class Amazon.ApiGatewayV2.Model.CreateModelResponse : AmazonWebServiceResponse {
    private string _contentType;
    private string _description;
    private string _modelId;
    private string _name;
    private string _schema;
    public string ContentType { get; public set; }
    public string Description { get; public set; }
    public string ModelId { get; public set; }
    public string Name { get; public set; }
    public string Schema { get; public set; }
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ModelId();
    public void set_ModelId(string value);
    internal bool IsSetModelId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
}
public class Amazon.ApiGatewayV2.Model.CreateRouteRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private Nullable`1<bool> _apiKeyRequired;
    private List`1<string> _authorizationScopes;
    private AuthorizationType _authorizationType;
    private string _authorizerId;
    private string _modelSelectionExpression;
    private string _operationName;
    private Dictionary`2<string, string> _requestModels;
    private Dictionary`2<string, ParameterConstraints> _requestParameters;
    private string _routeKey;
    private string _routeResponseSelectionExpression;
    private string _target;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public Nullable`1<bool> ApiKeyRequired { get; public set; }
    public List`1<string> AuthorizationScopes { get; public set; }
    public AuthorizationType AuthorizationType { get; public set; }
    public string AuthorizerId { get; public set; }
    public string ModelSelectionExpression { get; public set; }
    public string OperationName { get; public set; }
    public Dictionary`2<string, string> RequestModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> RequestParameters { get; public set; }
    [AWSPropertyAttribute]
public string RouteKey { get; public set; }
    public string RouteResponseSelectionExpression { get; public set; }
    public string Target { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public Nullable`1<bool> get_ApiKeyRequired();
    public void set_ApiKeyRequired(Nullable`1<bool> value);
    internal bool IsSetApiKeyRequired();
    public List`1<string> get_AuthorizationScopes();
    public void set_AuthorizationScopes(List`1<string> value);
    internal bool IsSetAuthorizationScopes();
    public AuthorizationType get_AuthorizationType();
    public void set_AuthorizationType(AuthorizationType value);
    internal bool IsSetAuthorizationType();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public string get_OperationName();
    public void set_OperationName(string value);
    internal bool IsSetOperationName();
    public Dictionary`2<string, string> get_RequestModels();
    public void set_RequestModels(Dictionary`2<string, string> value);
    internal bool IsSetRequestModels();
    public Dictionary`2<string, ParameterConstraints> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetRequestParameters();
    public string get_RouteKey();
    public void set_RouteKey(string value);
    internal bool IsSetRouteKey();
    public string get_RouteResponseSelectionExpression();
    public void set_RouteResponseSelectionExpression(string value);
    internal bool IsSetRouteResponseSelectionExpression();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
}
public class Amazon.ApiGatewayV2.Model.CreateRouteResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _apiGatewayManaged;
    private Nullable`1<bool> _apiKeyRequired;
    private List`1<string> _authorizationScopes;
    private AuthorizationType _authorizationType;
    private string _authorizerId;
    private string _modelSelectionExpression;
    private string _operationName;
    private Dictionary`2<string, string> _requestModels;
    private Dictionary`2<string, ParameterConstraints> _requestParameters;
    private string _routeId;
    private string _routeKey;
    private string _routeResponseSelectionExpression;
    private string _target;
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public Nullable`1<bool> ApiKeyRequired { get; public set; }
    public List`1<string> AuthorizationScopes { get; public set; }
    public AuthorizationType AuthorizationType { get; public set; }
    public string AuthorizerId { get; public set; }
    public string ModelSelectionExpression { get; public set; }
    public string OperationName { get; public set; }
    public Dictionary`2<string, string> RequestModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> RequestParameters { get; public set; }
    public string RouteId { get; public set; }
    public string RouteKey { get; public set; }
    public string RouteResponseSelectionExpression { get; public set; }
    public string Target { get; public set; }
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public Nullable`1<bool> get_ApiKeyRequired();
    public void set_ApiKeyRequired(Nullable`1<bool> value);
    internal bool IsSetApiKeyRequired();
    public List`1<string> get_AuthorizationScopes();
    public void set_AuthorizationScopes(List`1<string> value);
    internal bool IsSetAuthorizationScopes();
    public AuthorizationType get_AuthorizationType();
    public void set_AuthorizationType(AuthorizationType value);
    internal bool IsSetAuthorizationType();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public string get_OperationName();
    public void set_OperationName(string value);
    internal bool IsSetOperationName();
    public Dictionary`2<string, string> get_RequestModels();
    public void set_RequestModels(Dictionary`2<string, string> value);
    internal bool IsSetRequestModels();
    public Dictionary`2<string, ParameterConstraints> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetRequestParameters();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
    public string get_RouteKey();
    public void set_RouteKey(string value);
    internal bool IsSetRouteKey();
    public string get_RouteResponseSelectionExpression();
    public void set_RouteResponseSelectionExpression(string value);
    internal bool IsSetRouteResponseSelectionExpression();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
}
public class Amazon.ApiGatewayV2.Model.CreateRouteResponseRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _modelSelectionExpression;
    private Dictionary`2<string, string> _responseModels;
    private Dictionary`2<string, ParameterConstraints> _responseParameters;
    private string _routeId;
    private string _routeResponseKey;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string ModelSelectionExpression { get; public set; }
    public Dictionary`2<string, string> ResponseModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> ResponseParameters { get; public set; }
    [AWSPropertyAttribute]
public string RouteId { get; public set; }
    [AWSPropertyAttribute]
public string RouteResponseKey { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public Dictionary`2<string, string> get_ResponseModels();
    public void set_ResponseModels(Dictionary`2<string, string> value);
    internal bool IsSetResponseModels();
    public Dictionary`2<string, ParameterConstraints> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetResponseParameters();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
    public string get_RouteResponseKey();
    public void set_RouteResponseKey(string value);
    internal bool IsSetRouteResponseKey();
}
public class Amazon.ApiGatewayV2.Model.CreateRouteResponseResponse : AmazonWebServiceResponse {
    private string _modelSelectionExpression;
    private Dictionary`2<string, string> _responseModels;
    private Dictionary`2<string, ParameterConstraints> _responseParameters;
    private string _routeResponseId;
    private string _routeResponseKey;
    public string ModelSelectionExpression { get; public set; }
    public Dictionary`2<string, string> ResponseModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> ResponseParameters { get; public set; }
    public string RouteResponseId { get; public set; }
    public string RouteResponseKey { get; public set; }
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public Dictionary`2<string, string> get_ResponseModels();
    public void set_ResponseModels(Dictionary`2<string, string> value);
    internal bool IsSetResponseModels();
    public Dictionary`2<string, ParameterConstraints> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetResponseParameters();
    public string get_RouteResponseId();
    public void set_RouteResponseId(string value);
    internal bool IsSetRouteResponseId();
    public string get_RouteResponseKey();
    public void set_RouteResponseKey(string value);
    internal bool IsSetRouteResponseKey();
}
public class Amazon.ApiGatewayV2.Model.CreateStageRequest : AmazonApiGatewayV2Request {
    private AccessLogSettings _accessLogSettings;
    private string _apiId;
    private Nullable`1<bool> _autoDeploy;
    private string _clientCertificateId;
    private RouteSettings _defaultRouteSettings;
    private string _deploymentId;
    private string _description;
    private Dictionary`2<string, RouteSettings> _routeSettings;
    private string _stageName;
    private Dictionary`2<string, string> _stageVariables;
    private Dictionary`2<string, string> _tags;
    public AccessLogSettings AccessLogSettings { get; public set; }
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public Nullable`1<bool> AutoDeploy { get; public set; }
    public string ClientCertificateId { get; public set; }
    public RouteSettings DefaultRouteSettings { get; public set; }
    public string DeploymentId { get; public set; }
    public string Description { get; public set; }
    public Dictionary`2<string, RouteSettings> RouteSettings { get; public set; }
    [AWSPropertyAttribute]
public string StageName { get; public set; }
    public Dictionary`2<string, string> StageVariables { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public AccessLogSettings get_AccessLogSettings();
    public void set_AccessLogSettings(AccessLogSettings value);
    internal bool IsSetAccessLogSettings();
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public Nullable`1<bool> get_AutoDeploy();
    public void set_AutoDeploy(Nullable`1<bool> value);
    internal bool IsSetAutoDeploy();
    public string get_ClientCertificateId();
    public void set_ClientCertificateId(string value);
    internal bool IsSetClientCertificateId();
    public RouteSettings get_DefaultRouteSettings();
    public void set_DefaultRouteSettings(RouteSettings value);
    internal bool IsSetDefaultRouteSettings();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Dictionary`2<string, RouteSettings> get_RouteSettings();
    public void set_RouteSettings(Dictionary`2<string, RouteSettings> value);
    internal bool IsSetRouteSettings();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
    public Dictionary`2<string, string> get_StageVariables();
    public void set_StageVariables(Dictionary`2<string, string> value);
    internal bool IsSetStageVariables();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.CreateStageResponse : AmazonWebServiceResponse {
    private AccessLogSettings _accessLogSettings;
    private Nullable`1<bool> _apiGatewayManaged;
    private Nullable`1<bool> _autoDeploy;
    private string _clientCertificateId;
    private Nullable`1<DateTime> _createdDate;
    private RouteSettings _defaultRouteSettings;
    private string _deploymentId;
    private string _description;
    private string _lastDeploymentStatusMessage;
    private Nullable`1<DateTime> _lastUpdatedDate;
    private Dictionary`2<string, RouteSettings> _routeSettings;
    private string _stageName;
    private Dictionary`2<string, string> _stageVariables;
    private Dictionary`2<string, string> _tags;
    public AccessLogSettings AccessLogSettings { get; public set; }
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public Nullable`1<bool> AutoDeploy { get; public set; }
    public string ClientCertificateId { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public RouteSettings DefaultRouteSettings { get; public set; }
    public string DeploymentId { get; public set; }
    public string Description { get; public set; }
    public string LastDeploymentStatusMessage { get; public set; }
    public Nullable`1<DateTime> LastUpdatedDate { get; public set; }
    public Dictionary`2<string, RouteSettings> RouteSettings { get; public set; }
    public string StageName { get; public set; }
    public Dictionary`2<string, string> StageVariables { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public AccessLogSettings get_AccessLogSettings();
    public void set_AccessLogSettings(AccessLogSettings value);
    internal bool IsSetAccessLogSettings();
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public Nullable`1<bool> get_AutoDeploy();
    public void set_AutoDeploy(Nullable`1<bool> value);
    internal bool IsSetAutoDeploy();
    public string get_ClientCertificateId();
    public void set_ClientCertificateId(string value);
    internal bool IsSetClientCertificateId();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public RouteSettings get_DefaultRouteSettings();
    public void set_DefaultRouteSettings(RouteSettings value);
    internal bool IsSetDefaultRouteSettings();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LastDeploymentStatusMessage();
    public void set_LastDeploymentStatusMessage(string value);
    internal bool IsSetLastDeploymentStatusMessage();
    public Nullable`1<DateTime> get_LastUpdatedDate();
    public void set_LastUpdatedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedDate();
    public Dictionary`2<string, RouteSettings> get_RouteSettings();
    public void set_RouteSettings(Dictionary`2<string, RouteSettings> value);
    internal bool IsSetRouteSettings();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
    public Dictionary`2<string, string> get_StageVariables();
    public void set_StageVariables(Dictionary`2<string, string> value);
    internal bool IsSetStageVariables();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.CreateVpcLinkRequest : AmazonApiGatewayV2Request {
    private string _name;
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.CreateVpcLinkResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdDate;
    private string _name;
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    private Dictionary`2<string, string> _tags;
    private string _vpcLinkId;
    private VpcLinkStatus _vpcLinkStatus;
    private string _vpcLinkStatusMessage;
    private VpcLinkVersion _vpcLinkVersion;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string Name { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string VpcLinkId { get; public set; }
    public VpcLinkStatus VpcLinkStatus { get; public set; }
    public string VpcLinkStatusMessage { get; public set; }
    public VpcLinkVersion VpcLinkVersion { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_VpcLinkId();
    public void set_VpcLinkId(string value);
    internal bool IsSetVpcLinkId();
    public VpcLinkStatus get_VpcLinkStatus();
    public void set_VpcLinkStatus(VpcLinkStatus value);
    internal bool IsSetVpcLinkStatus();
    public string get_VpcLinkStatusMessage();
    public void set_VpcLinkStatusMessage(string value);
    internal bool IsSetVpcLinkStatusMessage();
    public VpcLinkVersion get_VpcLinkVersion();
    public void set_VpcLinkVersion(VpcLinkVersion value);
    internal bool IsSetVpcLinkVersion();
}
public class Amazon.ApiGatewayV2.Model.DeleteAccessLogSettingsRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _stageName;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string StageName { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
}
public class Amazon.ApiGatewayV2.Model.DeleteAccessLogSettingsResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteApiMappingRequest : AmazonApiGatewayV2Request {
    private string _apiMappingId;
    private string _domainName;
    [AWSPropertyAttribute]
public string ApiMappingId { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    public string get_ApiMappingId();
    public void set_ApiMappingId(string value);
    internal bool IsSetApiMappingId();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
}
public class Amazon.ApiGatewayV2.Model.DeleteApiMappingResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteApiRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
}
public class Amazon.ApiGatewayV2.Model.DeleteApiResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteAuthorizerRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _authorizerId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string AuthorizerId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
}
public class Amazon.ApiGatewayV2.Model.DeleteAuthorizerResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteCorsConfigurationRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
}
public class Amazon.ApiGatewayV2.Model.DeleteCorsConfigurationResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteDeploymentRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _deploymentId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string DeploymentId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
}
public class Amazon.ApiGatewayV2.Model.DeleteDeploymentResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteDomainNameRequest : AmazonApiGatewayV2Request {
    private string _domainName;
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
}
public class Amazon.ApiGatewayV2.Model.DeleteDomainNameResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteIntegrationRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _integrationId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
}
public class Amazon.ApiGatewayV2.Model.DeleteIntegrationResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteIntegrationResponseRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _integrationId;
    private string _integrationResponseId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationId { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationResponseId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
    public string get_IntegrationResponseId();
    public void set_IntegrationResponseId(string value);
    internal bool IsSetIntegrationResponseId();
}
public class Amazon.ApiGatewayV2.Model.DeleteIntegrationResponseResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteModelRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _modelId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string ModelId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ModelId();
    public void set_ModelId(string value);
    internal bool IsSetModelId();
}
public class Amazon.ApiGatewayV2.Model.DeleteModelResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteRouteRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _routeId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string RouteId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
}
public class Amazon.ApiGatewayV2.Model.DeleteRouteRequestParameterRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _requestParameterKey;
    private string _routeId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string RequestParameterKey { get; public set; }
    [AWSPropertyAttribute]
public string RouteId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_RequestParameterKey();
    public void set_RequestParameterKey(string value);
    internal bool IsSetRequestParameterKey();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
}
public class Amazon.ApiGatewayV2.Model.DeleteRouteRequestParameterResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteRouteResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteRouteResponseRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _routeId;
    private string _routeResponseId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string RouteId { get; public set; }
    [AWSPropertyAttribute]
public string RouteResponseId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
    public string get_RouteResponseId();
    public void set_RouteResponseId(string value);
    internal bool IsSetRouteResponseId();
}
public class Amazon.ApiGatewayV2.Model.DeleteRouteResponseResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteRouteSettingsRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _routeKey;
    private string _stageName;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string RouteKey { get; public set; }
    [AWSPropertyAttribute]
public string StageName { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_RouteKey();
    public void set_RouteKey(string value);
    internal bool IsSetRouteKey();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
}
public class Amazon.ApiGatewayV2.Model.DeleteRouteSettingsResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteStageRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _stageName;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string StageName { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
}
public class Amazon.ApiGatewayV2.Model.DeleteStageResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.DeleteVpcLinkRequest : AmazonApiGatewayV2Request {
    private string _vpcLinkId;
    [AWSPropertyAttribute]
public string VpcLinkId { get; public set; }
    public string get_VpcLinkId();
    public void set_VpcLinkId(string value);
    internal bool IsSetVpcLinkId();
}
public class Amazon.ApiGatewayV2.Model.DeleteVpcLinkResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.Deployment : object {
    private Nullable`1<bool> _autoDeployed;
    private Nullable`1<DateTime> _createdDate;
    private string _deploymentId;
    private DeploymentStatus _deploymentStatus;
    private string _deploymentStatusMessage;
    private string _description;
    public Nullable`1<bool> AutoDeployed { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string DeploymentId { get; public set; }
    public DeploymentStatus DeploymentStatus { get; public set; }
    public string DeploymentStatusMessage { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> get_AutoDeployed();
    public void set_AutoDeployed(Nullable`1<bool> value);
    internal bool IsSetAutoDeployed();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public DeploymentStatus get_DeploymentStatus();
    public void set_DeploymentStatus(DeploymentStatus value);
    internal bool IsSetDeploymentStatus();
    public string get_DeploymentStatusMessage();
    public void set_DeploymentStatusMessage(string value);
    internal bool IsSetDeploymentStatusMessage();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.ApiGatewayV2.Model.DomainName : object {
    private string _apiMappingSelectionExpression;
    private List`1<DomainNameConfiguration> _domainNameConfigurations;
    private MutualTlsAuthentication _mutualTlsAuthentication;
    private string _name;
    private Dictionary`2<string, string> _tags;
    public string ApiMappingSelectionExpression { get; public set; }
    public List`1<DomainNameConfiguration> DomainNameConfigurations { get; public set; }
    public MutualTlsAuthentication MutualTlsAuthentication { get; public set; }
    public string Name { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ApiMappingSelectionExpression();
    public void set_ApiMappingSelectionExpression(string value);
    internal bool IsSetApiMappingSelectionExpression();
    public List`1<DomainNameConfiguration> get_DomainNameConfigurations();
    public void set_DomainNameConfigurations(List`1<DomainNameConfiguration> value);
    internal bool IsSetDomainNameConfigurations();
    public MutualTlsAuthentication get_MutualTlsAuthentication();
    public void set_MutualTlsAuthentication(MutualTlsAuthentication value);
    internal bool IsSetMutualTlsAuthentication();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.DomainNameConfiguration : object {
    private string _apiGatewayDomainName;
    private string _certificateArn;
    private string _certificateName;
    private Nullable`1<DateTime> _certificateUploadDate;
    private DomainNameStatus _domainNameStatus;
    private string _domainNameStatusMessage;
    private EndpointType _endpointType;
    private string _hostedZoneId;
    private string _ownershipVerificationCertificateArn;
    private SecurityPolicy _securityPolicy;
    public string ApiGatewayDomainName { get; public set; }
    public string CertificateArn { get; public set; }
    public string CertificateName { get; public set; }
    public Nullable`1<DateTime> CertificateUploadDate { get; public set; }
    public DomainNameStatus DomainNameStatus { get; public set; }
    public string DomainNameStatusMessage { get; public set; }
    public EndpointType EndpointType { get; public set; }
    public string HostedZoneId { get; public set; }
    public string OwnershipVerificationCertificateArn { get; public set; }
    public SecurityPolicy SecurityPolicy { get; public set; }
    public string get_ApiGatewayDomainName();
    public void set_ApiGatewayDomainName(string value);
    internal bool IsSetApiGatewayDomainName();
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_CertificateName();
    public void set_CertificateName(string value);
    internal bool IsSetCertificateName();
    public Nullable`1<DateTime> get_CertificateUploadDate();
    public void set_CertificateUploadDate(Nullable`1<DateTime> value);
    internal bool IsSetCertificateUploadDate();
    public DomainNameStatus get_DomainNameStatus();
    public void set_DomainNameStatus(DomainNameStatus value);
    internal bool IsSetDomainNameStatus();
    public string get_DomainNameStatusMessage();
    public void set_DomainNameStatusMessage(string value);
    internal bool IsSetDomainNameStatusMessage();
    public EndpointType get_EndpointType();
    public void set_EndpointType(EndpointType value);
    internal bool IsSetEndpointType();
    public string get_HostedZoneId();
    public void set_HostedZoneId(string value);
    internal bool IsSetHostedZoneId();
    public string get_OwnershipVerificationCertificateArn();
    public void set_OwnershipVerificationCertificateArn(string value);
    internal bool IsSetOwnershipVerificationCertificateArn();
    public SecurityPolicy get_SecurityPolicy();
    public void set_SecurityPolicy(SecurityPolicy value);
    internal bool IsSetSecurityPolicy();
}
public class Amazon.ApiGatewayV2.Model.ExportApiRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _exportVersion;
    private Nullable`1<bool> _includeExtensions;
    private string _outputType;
    private string _specification;
    private string _stageName;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string ExportVersion { get; public set; }
    public Nullable`1<bool> IncludeExtensions { get; public set; }
    [AWSPropertyAttribute]
public string OutputType { get; public set; }
    [AWSPropertyAttribute]
public string Specification { get; public set; }
    public string StageName { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ExportVersion();
    public void set_ExportVersion(string value);
    internal bool IsSetExportVersion();
    public Nullable`1<bool> get_IncludeExtensions();
    public void set_IncludeExtensions(Nullable`1<bool> value);
    internal bool IsSetIncludeExtensions();
    public string get_OutputType();
    public void set_OutputType(string value);
    internal bool IsSetOutputType();
    public string get_Specification();
    public void set_Specification(string value);
    internal bool IsSetSpecification();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
}
public class Amazon.ApiGatewayV2.Model.ExportApiResponse : AmazonWebServiceResponse {
    private MemoryStream _body;
    public MemoryStream Body { get; public set; }
    public MemoryStream get_Body();
    public void set_Body(MemoryStream value);
    internal bool IsSetBody();
}
public class Amazon.ApiGatewayV2.Model.GetApiMappingRequest : AmazonApiGatewayV2Request {
    private string _apiMappingId;
    private string _domainName;
    [AWSPropertyAttribute]
public string ApiMappingId { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    public string get_ApiMappingId();
    public void set_ApiMappingId(string value);
    internal bool IsSetApiMappingId();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
}
public class Amazon.ApiGatewayV2.Model.GetApiMappingResponse : AmazonWebServiceResponse {
    private string _apiId;
    private string _apiMappingId;
    private string _apiMappingKey;
    private string _stage;
    public string ApiId { get; public set; }
    public string ApiMappingId { get; public set; }
    public string ApiMappingKey { get; public set; }
    public string Stage { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiMappingId();
    public void set_ApiMappingId(string value);
    internal bool IsSetApiMappingId();
    public string get_ApiMappingKey();
    public void set_ApiMappingKey(string value);
    internal bool IsSetApiMappingKey();
    public string get_Stage();
    public void set_Stage(string value);
    internal bool IsSetStage();
}
public class Amazon.ApiGatewayV2.Model.GetApiMappingsRequest : AmazonApiGatewayV2Request {
    private string _domainName;
    private string _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetApiMappingsResponse : AmazonWebServiceResponse {
    private List`1<ApiMapping> _items;
    private string _nextToken;
    public List`1<ApiMapping> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ApiMapping> get_Items();
    public void set_Items(List`1<ApiMapping> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetApiRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
}
public class Amazon.ApiGatewayV2.Model.GetApiResponse : AmazonWebServiceResponse {
    private string _apiEndpoint;
    private Nullable`1<bool> _apiGatewayManaged;
    private string _apiId;
    private string _apiKeySelectionExpression;
    private Cors _corsConfiguration;
    private Nullable`1<DateTime> _createdDate;
    private string _description;
    private Nullable`1<bool> _disableExecuteApiEndpoint;
    private Nullable`1<bool> _disableSchemaValidation;
    private List`1<string> _importInfo;
    private string _name;
    private ProtocolType _protocolType;
    private string _routeSelectionExpression;
    private Dictionary`2<string, string> _tags;
    private string _version;
    private List`1<string> _warnings;
    public string ApiEndpoint { get; public set; }
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public string ApiId { get; public set; }
    public string ApiKeySelectionExpression { get; public set; }
    public Cors CorsConfiguration { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> DisableExecuteApiEndpoint { get; public set; }
    public Nullable`1<bool> DisableSchemaValidation { get; public set; }
    public List`1<string> ImportInfo { get; public set; }
    public string Name { get; public set; }
    public ProtocolType ProtocolType { get; public set; }
    public string RouteSelectionExpression { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string Version { get; public set; }
    public List`1<string> Warnings { get; public set; }
    public string get_ApiEndpoint();
    public void set_ApiEndpoint(string value);
    internal bool IsSetApiEndpoint();
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiKeySelectionExpression();
    public void set_ApiKeySelectionExpression(string value);
    internal bool IsSetApiKeySelectionExpression();
    public Cors get_CorsConfiguration();
    public void set_CorsConfiguration(Cors value);
    internal bool IsSetCorsConfiguration();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DisableExecuteApiEndpoint();
    public void set_DisableExecuteApiEndpoint(Nullable`1<bool> value);
    internal bool IsSetDisableExecuteApiEndpoint();
    public Nullable`1<bool> get_DisableSchemaValidation();
    public void set_DisableSchemaValidation(Nullable`1<bool> value);
    internal bool IsSetDisableSchemaValidation();
    public List`1<string> get_ImportInfo();
    public void set_ImportInfo(List`1<string> value);
    internal bool IsSetImportInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ProtocolType get_ProtocolType();
    public void set_ProtocolType(ProtocolType value);
    internal bool IsSetProtocolType();
    public string get_RouteSelectionExpression();
    public void set_RouteSelectionExpression(string value);
    internal bool IsSetRouteSelectionExpression();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public List`1<string> get_Warnings();
    public void set_Warnings(List`1<string> value);
    internal bool IsSetWarnings();
}
public class Amazon.ApiGatewayV2.Model.GetApisRequest : AmazonApiGatewayV2Request {
    private string _maxResults;
    private string _nextToken;
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetApisResponse : AmazonWebServiceResponse {
    private List`1<Api> _items;
    private string _nextToken;
    public List`1<Api> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Api> get_Items();
    public void set_Items(List`1<Api> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetAuthorizerRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _authorizerId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string AuthorizerId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
}
public class Amazon.ApiGatewayV2.Model.GetAuthorizerResponse : AmazonWebServiceResponse {
    private string _authorizerCredentialsArn;
    private string _authorizerId;
    private string _authorizerPayloadFormatVersion;
    private Nullable`1<int> _authorizerResultTtlInSeconds;
    private AuthorizerType _authorizerType;
    private string _authorizerUri;
    private Nullable`1<bool> _enableSimpleResponses;
    private List`1<string> _identitySource;
    private string _identityValidationExpression;
    private JWTConfiguration _jwtConfiguration;
    private string _name;
    public string AuthorizerCredentialsArn { get; public set; }
    public string AuthorizerId { get; public set; }
    public string AuthorizerPayloadFormatVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AuthorizerResultTtlInSeconds { get; public set; }
    public AuthorizerType AuthorizerType { get; public set; }
    public string AuthorizerUri { get; public set; }
    public Nullable`1<bool> EnableSimpleResponses { get; public set; }
    public List`1<string> IdentitySource { get; public set; }
    public string IdentityValidationExpression { get; public set; }
    public JWTConfiguration JwtConfiguration { get; public set; }
    public string Name { get; public set; }
    public string get_AuthorizerCredentialsArn();
    public void set_AuthorizerCredentialsArn(string value);
    internal bool IsSetAuthorizerCredentialsArn();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_AuthorizerPayloadFormatVersion();
    public void set_AuthorizerPayloadFormatVersion(string value);
    internal bool IsSetAuthorizerPayloadFormatVersion();
    public Nullable`1<int> get_AuthorizerResultTtlInSeconds();
    public void set_AuthorizerResultTtlInSeconds(Nullable`1<int> value);
    internal bool IsSetAuthorizerResultTtlInSeconds();
    public AuthorizerType get_AuthorizerType();
    public void set_AuthorizerType(AuthorizerType value);
    internal bool IsSetAuthorizerType();
    public string get_AuthorizerUri();
    public void set_AuthorizerUri(string value);
    internal bool IsSetAuthorizerUri();
    public Nullable`1<bool> get_EnableSimpleResponses();
    public void set_EnableSimpleResponses(Nullable`1<bool> value);
    internal bool IsSetEnableSimpleResponses();
    public List`1<string> get_IdentitySource();
    public void set_IdentitySource(List`1<string> value);
    internal bool IsSetIdentitySource();
    public string get_IdentityValidationExpression();
    public void set_IdentityValidationExpression(string value);
    internal bool IsSetIdentityValidationExpression();
    public JWTConfiguration get_JwtConfiguration();
    public void set_JwtConfiguration(JWTConfiguration value);
    internal bool IsSetJwtConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.ApiGatewayV2.Model.GetAuthorizersRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetAuthorizersResponse : AmazonWebServiceResponse {
    private List`1<Authorizer> _items;
    private string _nextToken;
    public List`1<Authorizer> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Authorizer> get_Items();
    public void set_Items(List`1<Authorizer> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetDeploymentRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _deploymentId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string DeploymentId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
}
public class Amazon.ApiGatewayV2.Model.GetDeploymentResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _autoDeployed;
    private Nullable`1<DateTime> _createdDate;
    private string _deploymentId;
    private DeploymentStatus _deploymentStatus;
    private string _deploymentStatusMessage;
    private string _description;
    public Nullable`1<bool> AutoDeployed { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string DeploymentId { get; public set; }
    public DeploymentStatus DeploymentStatus { get; public set; }
    public string DeploymentStatusMessage { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> get_AutoDeployed();
    public void set_AutoDeployed(Nullable`1<bool> value);
    internal bool IsSetAutoDeployed();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public DeploymentStatus get_DeploymentStatus();
    public void set_DeploymentStatus(DeploymentStatus value);
    internal bool IsSetDeploymentStatus();
    public string get_DeploymentStatusMessage();
    public void set_DeploymentStatusMessage(string value);
    internal bool IsSetDeploymentStatusMessage();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.ApiGatewayV2.Model.GetDeploymentsRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetDeploymentsResponse : AmazonWebServiceResponse {
    private List`1<Deployment> _items;
    private string _nextToken;
    public List`1<Deployment> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Deployment> get_Items();
    public void set_Items(List`1<Deployment> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetDomainNameRequest : AmazonApiGatewayV2Request {
    private string _domainName;
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
}
public class Amazon.ApiGatewayV2.Model.GetDomainNameResponse : AmazonWebServiceResponse {
    private string _apiMappingSelectionExpression;
    private string _domainName;
    private List`1<DomainNameConfiguration> _domainNameConfigurations;
    private MutualTlsAuthentication _mutualTlsAuthentication;
    private Dictionary`2<string, string> _tags;
    public string ApiMappingSelectionExpression { get; public set; }
    public string DomainName { get; public set; }
    public List`1<DomainNameConfiguration> DomainNameConfigurations { get; public set; }
    public MutualTlsAuthentication MutualTlsAuthentication { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ApiMappingSelectionExpression();
    public void set_ApiMappingSelectionExpression(string value);
    internal bool IsSetApiMappingSelectionExpression();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public List`1<DomainNameConfiguration> get_DomainNameConfigurations();
    public void set_DomainNameConfigurations(List`1<DomainNameConfiguration> value);
    internal bool IsSetDomainNameConfigurations();
    public MutualTlsAuthentication get_MutualTlsAuthentication();
    public void set_MutualTlsAuthentication(MutualTlsAuthentication value);
    internal bool IsSetMutualTlsAuthentication();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.GetDomainNamesRequest : AmazonApiGatewayV2Request {
    private string _maxResults;
    private string _nextToken;
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetDomainNamesResponse : AmazonWebServiceResponse {
    private List`1<DomainName> _items;
    private string _nextToken;
    public List`1<DomainName> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DomainName> get_Items();
    public void set_Items(List`1<DomainName> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetIntegrationRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _integrationId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
}
public class Amazon.ApiGatewayV2.Model.GetIntegrationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _apiGatewayManaged;
    private string _connectionId;
    private ConnectionType _connectionType;
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _credentialsArn;
    private string _description;
    private string _integrationId;
    private string _integrationMethod;
    private string _integrationResponseSelectionExpression;
    private string _integrationSubtype;
    private IntegrationType _integrationType;
    private string _integrationUri;
    private PassthroughBehavior _passthroughBehavior;
    private string _payloadFormatVersion;
    private Dictionary`2<string, string> _requestParameters;
    private Dictionary`2<string, string> _requestTemplates;
    private Dictionary`2<string, Dictionary`2<string, string>> _responseParameters;
    private string _templateSelectionExpression;
    private Nullable`1<int> _timeoutInMillis;
    private TlsConfig _tlsConfig;
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public string ConnectionId { get; public set; }
    public ConnectionType ConnectionType { get; public set; }
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    public string CredentialsArn { get; public set; }
    public string Description { get; public set; }
    public string IntegrationId { get; public set; }
    public string IntegrationMethod { get; public set; }
    public string IntegrationResponseSelectionExpression { get; public set; }
    public string IntegrationSubtype { get; public set; }
    public IntegrationType IntegrationType { get; public set; }
    public string IntegrationUri { get; public set; }
    public PassthroughBehavior PassthroughBehavior { get; public set; }
    public string PayloadFormatVersion { get; public set; }
    public Dictionary`2<string, string> RequestParameters { get; public set; }
    public Dictionary`2<string, string> RequestTemplates { get; public set; }
    public Dictionary`2<string, Dictionary`2<string, string>> ResponseParameters { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TimeoutInMillis { get; public set; }
    public TlsConfig TlsConfig { get; public set; }
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public string get_ConnectionId();
    public void set_ConnectionId(string value);
    internal bool IsSetConnectionId();
    public ConnectionType get_ConnectionType();
    public void set_ConnectionType(ConnectionType value);
    internal bool IsSetConnectionType();
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_CredentialsArn();
    public void set_CredentialsArn(string value);
    internal bool IsSetCredentialsArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
    public string get_IntegrationMethod();
    public void set_IntegrationMethod(string value);
    internal bool IsSetIntegrationMethod();
    public string get_IntegrationResponseSelectionExpression();
    public void set_IntegrationResponseSelectionExpression(string value);
    internal bool IsSetIntegrationResponseSelectionExpression();
    public string get_IntegrationSubtype();
    public void set_IntegrationSubtype(string value);
    internal bool IsSetIntegrationSubtype();
    public IntegrationType get_IntegrationType();
    public void set_IntegrationType(IntegrationType value);
    internal bool IsSetIntegrationType();
    public string get_IntegrationUri();
    public void set_IntegrationUri(string value);
    internal bool IsSetIntegrationUri();
    public PassthroughBehavior get_PassthroughBehavior();
    public void set_PassthroughBehavior(PassthroughBehavior value);
    internal bool IsSetPassthroughBehavior();
    public string get_PayloadFormatVersion();
    public void set_PayloadFormatVersion(string value);
    internal bool IsSetPayloadFormatVersion();
    public Dictionary`2<string, string> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, string> value);
    internal bool IsSetRequestParameters();
    public Dictionary`2<string, string> get_RequestTemplates();
    public void set_RequestTemplates(Dictionary`2<string, string> value);
    internal bool IsSetRequestTemplates();
    public Dictionary`2<string, Dictionary`2<string, string>> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, Dictionary`2<string, string>> value);
    internal bool IsSetResponseParameters();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
    public Nullable`1<int> get_TimeoutInMillis();
    public void set_TimeoutInMillis(Nullable`1<int> value);
    internal bool IsSetTimeoutInMillis();
    public TlsConfig get_TlsConfig();
    public void set_TlsConfig(TlsConfig value);
    internal bool IsSetTlsConfig();
}
public class Amazon.ApiGatewayV2.Model.GetIntegrationResponseRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _integrationId;
    private string _integrationResponseId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationId { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationResponseId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
    public string get_IntegrationResponseId();
    public void set_IntegrationResponseId(string value);
    internal bool IsSetIntegrationResponseId();
}
public class Amazon.ApiGatewayV2.Model.GetIntegrationResponseResponse : AmazonWebServiceResponse {
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _integrationResponseId;
    private string _integrationResponseKey;
    private Dictionary`2<string, string> _responseParameters;
    private Dictionary`2<string, string> _responseTemplates;
    private string _templateSelectionExpression;
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    public string IntegrationResponseId { get; public set; }
    public string IntegrationResponseKey { get; public set; }
    public Dictionary`2<string, string> ResponseParameters { get; public set; }
    public Dictionary`2<string, string> ResponseTemplates { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_IntegrationResponseId();
    public void set_IntegrationResponseId(string value);
    internal bool IsSetIntegrationResponseId();
    public string get_IntegrationResponseKey();
    public void set_IntegrationResponseKey(string value);
    internal bool IsSetIntegrationResponseKey();
    public Dictionary`2<string, string> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, string> value);
    internal bool IsSetResponseParameters();
    public Dictionary`2<string, string> get_ResponseTemplates();
    public void set_ResponseTemplates(Dictionary`2<string, string> value);
    internal bool IsSetResponseTemplates();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
}
public class Amazon.ApiGatewayV2.Model.GetIntegrationResponsesRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _integrationId;
    private string _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationId { get; public set; }
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetIntegrationResponsesResponse : AmazonWebServiceResponse {
    private List`1<IntegrationResponse> _items;
    private string _nextToken;
    public List`1<IntegrationResponse> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<IntegrationResponse> get_Items();
    public void set_Items(List`1<IntegrationResponse> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetIntegrationsRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetIntegrationsResponse : AmazonWebServiceResponse {
    private List`1<Integration> _items;
    private string _nextToken;
    public List`1<Integration> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Integration> get_Items();
    public void set_Items(List`1<Integration> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetModelRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _modelId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string ModelId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ModelId();
    public void set_ModelId(string value);
    internal bool IsSetModelId();
}
public class Amazon.ApiGatewayV2.Model.GetModelResponse : AmazonWebServiceResponse {
    private string _contentType;
    private string _description;
    private string _modelId;
    private string _name;
    private string _schema;
    public string ContentType { get; public set; }
    public string Description { get; public set; }
    public string ModelId { get; public set; }
    public string Name { get; public set; }
    public string Schema { get; public set; }
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ModelId();
    public void set_ModelId(string value);
    internal bool IsSetModelId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
}
public class Amazon.ApiGatewayV2.Model.GetModelsRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetModelsResponse : AmazonWebServiceResponse {
    private List`1<Model> _items;
    private string _nextToken;
    public List`1<Model> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Model> get_Items();
    public void set_Items(List`1<Model> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetModelTemplateRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _modelId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string ModelId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ModelId();
    public void set_ModelId(string value);
    internal bool IsSetModelId();
}
public class Amazon.ApiGatewayV2.Model.GetModelTemplateResponse : AmazonWebServiceResponse {
    private string _value;
    public string Value { get; public set; }
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.ApiGatewayV2.Model.GetRouteRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _routeId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string RouteId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
}
public class Amazon.ApiGatewayV2.Model.GetRouteResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _apiGatewayManaged;
    private Nullable`1<bool> _apiKeyRequired;
    private List`1<string> _authorizationScopes;
    private AuthorizationType _authorizationType;
    private string _authorizerId;
    private string _modelSelectionExpression;
    private string _operationName;
    private Dictionary`2<string, string> _requestModels;
    private Dictionary`2<string, ParameterConstraints> _requestParameters;
    private string _routeId;
    private string _routeKey;
    private string _routeResponseSelectionExpression;
    private string _target;
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public Nullable`1<bool> ApiKeyRequired { get; public set; }
    public List`1<string> AuthorizationScopes { get; public set; }
    public AuthorizationType AuthorizationType { get; public set; }
    public string AuthorizerId { get; public set; }
    public string ModelSelectionExpression { get; public set; }
    public string OperationName { get; public set; }
    public Dictionary`2<string, string> RequestModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> RequestParameters { get; public set; }
    public string RouteId { get; public set; }
    public string RouteKey { get; public set; }
    public string RouteResponseSelectionExpression { get; public set; }
    public string Target { get; public set; }
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public Nullable`1<bool> get_ApiKeyRequired();
    public void set_ApiKeyRequired(Nullable`1<bool> value);
    internal bool IsSetApiKeyRequired();
    public List`1<string> get_AuthorizationScopes();
    public void set_AuthorizationScopes(List`1<string> value);
    internal bool IsSetAuthorizationScopes();
    public AuthorizationType get_AuthorizationType();
    public void set_AuthorizationType(AuthorizationType value);
    internal bool IsSetAuthorizationType();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public string get_OperationName();
    public void set_OperationName(string value);
    internal bool IsSetOperationName();
    public Dictionary`2<string, string> get_RequestModels();
    public void set_RequestModels(Dictionary`2<string, string> value);
    internal bool IsSetRequestModels();
    public Dictionary`2<string, ParameterConstraints> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetRequestParameters();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
    public string get_RouteKey();
    public void set_RouteKey(string value);
    internal bool IsSetRouteKey();
    public string get_RouteResponseSelectionExpression();
    public void set_RouteResponseSelectionExpression(string value);
    internal bool IsSetRouteResponseSelectionExpression();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
}
public class Amazon.ApiGatewayV2.Model.GetRouteResponseRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _routeId;
    private string _routeResponseId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string RouteId { get; public set; }
    [AWSPropertyAttribute]
public string RouteResponseId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
    public string get_RouteResponseId();
    public void set_RouteResponseId(string value);
    internal bool IsSetRouteResponseId();
}
public class Amazon.ApiGatewayV2.Model.GetRouteResponseResponse : AmazonWebServiceResponse {
    private string _modelSelectionExpression;
    private Dictionary`2<string, string> _responseModels;
    private Dictionary`2<string, ParameterConstraints> _responseParameters;
    private string _routeResponseId;
    private string _routeResponseKey;
    public string ModelSelectionExpression { get; public set; }
    public Dictionary`2<string, string> ResponseModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> ResponseParameters { get; public set; }
    public string RouteResponseId { get; public set; }
    public string RouteResponseKey { get; public set; }
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public Dictionary`2<string, string> get_ResponseModels();
    public void set_ResponseModels(Dictionary`2<string, string> value);
    internal bool IsSetResponseModels();
    public Dictionary`2<string, ParameterConstraints> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetResponseParameters();
    public string get_RouteResponseId();
    public void set_RouteResponseId(string value);
    internal bool IsSetRouteResponseId();
    public string get_RouteResponseKey();
    public void set_RouteResponseKey(string value);
    internal bool IsSetRouteResponseKey();
}
public class Amazon.ApiGatewayV2.Model.GetRouteResponsesRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _maxResults;
    private string _nextToken;
    private string _routeId;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string RouteId { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
}
public class Amazon.ApiGatewayV2.Model.GetRouteResponsesResponse : AmazonWebServiceResponse {
    private List`1<RouteResponse> _items;
    private string _nextToken;
    public List`1<RouteResponse> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<RouteResponse> get_Items();
    public void set_Items(List`1<RouteResponse> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetRoutesRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetRoutesResponse : AmazonWebServiceResponse {
    private List`1<Route> _items;
    private string _nextToken;
    public List`1<Route> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Route> get_Items();
    public void set_Items(List`1<Route> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetStageRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _stageName;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string StageName { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
}
public class Amazon.ApiGatewayV2.Model.GetStageResponse : AmazonWebServiceResponse {
    private AccessLogSettings _accessLogSettings;
    private Nullable`1<bool> _apiGatewayManaged;
    private Nullable`1<bool> _autoDeploy;
    private string _clientCertificateId;
    private Nullable`1<DateTime> _createdDate;
    private RouteSettings _defaultRouteSettings;
    private string _deploymentId;
    private string _description;
    private string _lastDeploymentStatusMessage;
    private Nullable`1<DateTime> _lastUpdatedDate;
    private Dictionary`2<string, RouteSettings> _routeSettings;
    private string _stageName;
    private Dictionary`2<string, string> _stageVariables;
    private Dictionary`2<string, string> _tags;
    public AccessLogSettings AccessLogSettings { get; public set; }
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public Nullable`1<bool> AutoDeploy { get; public set; }
    public string ClientCertificateId { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public RouteSettings DefaultRouteSettings { get; public set; }
    public string DeploymentId { get; public set; }
    public string Description { get; public set; }
    public string LastDeploymentStatusMessage { get; public set; }
    public Nullable`1<DateTime> LastUpdatedDate { get; public set; }
    public Dictionary`2<string, RouteSettings> RouteSettings { get; public set; }
    public string StageName { get; public set; }
    public Dictionary`2<string, string> StageVariables { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public AccessLogSettings get_AccessLogSettings();
    public void set_AccessLogSettings(AccessLogSettings value);
    internal bool IsSetAccessLogSettings();
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public Nullable`1<bool> get_AutoDeploy();
    public void set_AutoDeploy(Nullable`1<bool> value);
    internal bool IsSetAutoDeploy();
    public string get_ClientCertificateId();
    public void set_ClientCertificateId(string value);
    internal bool IsSetClientCertificateId();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public RouteSettings get_DefaultRouteSettings();
    public void set_DefaultRouteSettings(RouteSettings value);
    internal bool IsSetDefaultRouteSettings();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LastDeploymentStatusMessage();
    public void set_LastDeploymentStatusMessage(string value);
    internal bool IsSetLastDeploymentStatusMessage();
    public Nullable`1<DateTime> get_LastUpdatedDate();
    public void set_LastUpdatedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedDate();
    public Dictionary`2<string, RouteSettings> get_RouteSettings();
    public void set_RouteSettings(Dictionary`2<string, RouteSettings> value);
    internal bool IsSetRouteSettings();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
    public Dictionary`2<string, string> get_StageVariables();
    public void set_StageVariables(Dictionary`2<string, string> value);
    internal bool IsSetStageVariables();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.GetStagesRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetStagesResponse : AmazonWebServiceResponse {
    private List`1<Stage> _items;
    private string _nextToken;
    public List`1<Stage> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Stage> get_Items();
    public void set_Items(List`1<Stage> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetTagsRequest : AmazonApiGatewayV2Request {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.ApiGatewayV2.Model.GetTagsResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.GetVpcLinkRequest : AmazonApiGatewayV2Request {
    private string _vpcLinkId;
    [AWSPropertyAttribute]
public string VpcLinkId { get; public set; }
    public string get_VpcLinkId();
    public void set_VpcLinkId(string value);
    internal bool IsSetVpcLinkId();
}
public class Amazon.ApiGatewayV2.Model.GetVpcLinkResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdDate;
    private string _name;
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    private Dictionary`2<string, string> _tags;
    private string _vpcLinkId;
    private VpcLinkStatus _vpcLinkStatus;
    private string _vpcLinkStatusMessage;
    private VpcLinkVersion _vpcLinkVersion;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string Name { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string VpcLinkId { get; public set; }
    public VpcLinkStatus VpcLinkStatus { get; public set; }
    public string VpcLinkStatusMessage { get; public set; }
    public VpcLinkVersion VpcLinkVersion { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_VpcLinkId();
    public void set_VpcLinkId(string value);
    internal bool IsSetVpcLinkId();
    public VpcLinkStatus get_VpcLinkStatus();
    public void set_VpcLinkStatus(VpcLinkStatus value);
    internal bool IsSetVpcLinkStatus();
    public string get_VpcLinkStatusMessage();
    public void set_VpcLinkStatusMessage(string value);
    internal bool IsSetVpcLinkStatusMessage();
    public VpcLinkVersion get_VpcLinkVersion();
    public void set_VpcLinkVersion(VpcLinkVersion value);
    internal bool IsSetVpcLinkVersion();
}
public class Amazon.ApiGatewayV2.Model.GetVpcLinksRequest : AmazonApiGatewayV2Request {
    private string _maxResults;
    private string _nextToken;
    public string MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public string get_MaxResults();
    public void set_MaxResults(string value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.GetVpcLinksResponse : AmazonWebServiceResponse {
    private List`1<VpcLink> _items;
    private string _nextToken;
    public List`1<VpcLink> Items { get; public set; }
    public string NextToken { get; public set; }
    public List`1<VpcLink> get_Items();
    public void set_Items(List`1<VpcLink> value);
    internal bool IsSetItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.ApiGatewayV2.Model.ImportApiRequest : AmazonApiGatewayV2Request {
    private string _basepath;
    private string _body;
    private Nullable`1<bool> _failOnWarnings;
    public string Basepath { get; public set; }
    [AWSPropertyAttribute]
public string Body { get; public set; }
    public Nullable`1<bool> FailOnWarnings { get; public set; }
    public string get_Basepath();
    public void set_Basepath(string value);
    internal bool IsSetBasepath();
    public string get_Body();
    public void set_Body(string value);
    internal bool IsSetBody();
    public Nullable`1<bool> get_FailOnWarnings();
    public void set_FailOnWarnings(Nullable`1<bool> value);
    internal bool IsSetFailOnWarnings();
}
public class Amazon.ApiGatewayV2.Model.ImportApiResponse : AmazonWebServiceResponse {
    private string _apiEndpoint;
    private Nullable`1<bool> _apiGatewayManaged;
    private string _apiId;
    private string _apiKeySelectionExpression;
    private Cors _corsConfiguration;
    private Nullable`1<DateTime> _createdDate;
    private string _description;
    private Nullable`1<bool> _disableExecuteApiEndpoint;
    private Nullable`1<bool> _disableSchemaValidation;
    private List`1<string> _importInfo;
    private string _name;
    private ProtocolType _protocolType;
    private string _routeSelectionExpression;
    private Dictionary`2<string, string> _tags;
    private string _version;
    private List`1<string> _warnings;
    public string ApiEndpoint { get; public set; }
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public string ApiId { get; public set; }
    public string ApiKeySelectionExpression { get; public set; }
    public Cors CorsConfiguration { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> DisableExecuteApiEndpoint { get; public set; }
    public Nullable`1<bool> DisableSchemaValidation { get; public set; }
    public List`1<string> ImportInfo { get; public set; }
    public string Name { get; public set; }
    public ProtocolType ProtocolType { get; public set; }
    public string RouteSelectionExpression { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string Version { get; public set; }
    public List`1<string> Warnings { get; public set; }
    public string get_ApiEndpoint();
    public void set_ApiEndpoint(string value);
    internal bool IsSetApiEndpoint();
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiKeySelectionExpression();
    public void set_ApiKeySelectionExpression(string value);
    internal bool IsSetApiKeySelectionExpression();
    public Cors get_CorsConfiguration();
    public void set_CorsConfiguration(Cors value);
    internal bool IsSetCorsConfiguration();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DisableExecuteApiEndpoint();
    public void set_DisableExecuteApiEndpoint(Nullable`1<bool> value);
    internal bool IsSetDisableExecuteApiEndpoint();
    public Nullable`1<bool> get_DisableSchemaValidation();
    public void set_DisableSchemaValidation(Nullable`1<bool> value);
    internal bool IsSetDisableSchemaValidation();
    public List`1<string> get_ImportInfo();
    public void set_ImportInfo(List`1<string> value);
    internal bool IsSetImportInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ProtocolType get_ProtocolType();
    public void set_ProtocolType(ProtocolType value);
    internal bool IsSetProtocolType();
    public string get_RouteSelectionExpression();
    public void set_RouteSelectionExpression(string value);
    internal bool IsSetRouteSelectionExpression();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public List`1<string> get_Warnings();
    public void set_Warnings(List`1<string> value);
    internal bool IsSetWarnings();
}
public class Amazon.ApiGatewayV2.Model.Integration : object {
    private Nullable`1<bool> _apiGatewayManaged;
    private string _connectionId;
    private ConnectionType _connectionType;
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _credentialsArn;
    private string _description;
    private string _integrationId;
    private string _integrationMethod;
    private string _integrationResponseSelectionExpression;
    private string _integrationSubtype;
    private IntegrationType _integrationType;
    private string _integrationUri;
    private PassthroughBehavior _passthroughBehavior;
    private string _payloadFormatVersion;
    private Dictionary`2<string, string> _requestParameters;
    private Dictionary`2<string, string> _requestTemplates;
    private Dictionary`2<string, Dictionary`2<string, string>> _responseParameters;
    private string _templateSelectionExpression;
    private Nullable`1<int> _timeoutInMillis;
    private TlsConfig _tlsConfig;
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public string ConnectionId { get; public set; }
    public ConnectionType ConnectionType { get; public set; }
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    public string CredentialsArn { get; public set; }
    public string Description { get; public set; }
    public string IntegrationId { get; public set; }
    public string IntegrationMethod { get; public set; }
    public string IntegrationResponseSelectionExpression { get; public set; }
    public string IntegrationSubtype { get; public set; }
    public IntegrationType IntegrationType { get; public set; }
    public string IntegrationUri { get; public set; }
    public PassthroughBehavior PassthroughBehavior { get; public set; }
    public string PayloadFormatVersion { get; public set; }
    public Dictionary`2<string, string> RequestParameters { get; public set; }
    public Dictionary`2<string, string> RequestTemplates { get; public set; }
    public Dictionary`2<string, Dictionary`2<string, string>> ResponseParameters { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TimeoutInMillis { get; public set; }
    public TlsConfig TlsConfig { get; public set; }
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public string get_ConnectionId();
    public void set_ConnectionId(string value);
    internal bool IsSetConnectionId();
    public ConnectionType get_ConnectionType();
    public void set_ConnectionType(ConnectionType value);
    internal bool IsSetConnectionType();
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_CredentialsArn();
    public void set_CredentialsArn(string value);
    internal bool IsSetCredentialsArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
    public string get_IntegrationMethod();
    public void set_IntegrationMethod(string value);
    internal bool IsSetIntegrationMethod();
    public string get_IntegrationResponseSelectionExpression();
    public void set_IntegrationResponseSelectionExpression(string value);
    internal bool IsSetIntegrationResponseSelectionExpression();
    public string get_IntegrationSubtype();
    public void set_IntegrationSubtype(string value);
    internal bool IsSetIntegrationSubtype();
    public IntegrationType get_IntegrationType();
    public void set_IntegrationType(IntegrationType value);
    internal bool IsSetIntegrationType();
    public string get_IntegrationUri();
    public void set_IntegrationUri(string value);
    internal bool IsSetIntegrationUri();
    public PassthroughBehavior get_PassthroughBehavior();
    public void set_PassthroughBehavior(PassthroughBehavior value);
    internal bool IsSetPassthroughBehavior();
    public string get_PayloadFormatVersion();
    public void set_PayloadFormatVersion(string value);
    internal bool IsSetPayloadFormatVersion();
    public Dictionary`2<string, string> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, string> value);
    internal bool IsSetRequestParameters();
    public Dictionary`2<string, string> get_RequestTemplates();
    public void set_RequestTemplates(Dictionary`2<string, string> value);
    internal bool IsSetRequestTemplates();
    public Dictionary`2<string, Dictionary`2<string, string>> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, Dictionary`2<string, string>> value);
    internal bool IsSetResponseParameters();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
    public Nullable`1<int> get_TimeoutInMillis();
    public void set_TimeoutInMillis(Nullable`1<int> value);
    internal bool IsSetTimeoutInMillis();
    public TlsConfig get_TlsConfig();
    public void set_TlsConfig(TlsConfig value);
    internal bool IsSetTlsConfig();
}
public class Amazon.ApiGatewayV2.Model.IntegrationResponse : object {
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _integrationResponseId;
    private string _integrationResponseKey;
    private Dictionary`2<string, string> _responseParameters;
    private Dictionary`2<string, string> _responseTemplates;
    private string _templateSelectionExpression;
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    public string IntegrationResponseId { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationResponseKey { get; public set; }
    public Dictionary`2<string, string> ResponseParameters { get; public set; }
    public Dictionary`2<string, string> ResponseTemplates { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_IntegrationResponseId();
    public void set_IntegrationResponseId(string value);
    internal bool IsSetIntegrationResponseId();
    public string get_IntegrationResponseKey();
    public void set_IntegrationResponseKey(string value);
    internal bool IsSetIntegrationResponseKey();
    public Dictionary`2<string, string> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, string> value);
    internal bool IsSetResponseParameters();
    public Dictionary`2<string, string> get_ResponseTemplates();
    public void set_ResponseTemplates(Dictionary`2<string, string> value);
    internal bool IsSetResponseTemplates();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller : object {
    private static AccessDeniedExceptionUnmarshaller _instance;
    public static AccessDeniedExceptionUnmarshaller Instance { get; }
    private static AccessDeniedExceptionUnmarshaller();
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.AccessLogSettingsMarshaller : object {
    public static AccessLogSettingsMarshaller Instance;
    private static AccessLogSettingsMarshaller();
    public sealed virtual void Marshall(AccessLogSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.AccessLogSettingsUnmarshaller : object {
    private static AccessLogSettingsUnmarshaller _instance;
    public static AccessLogSettingsUnmarshaller Instance { get; }
    private static AccessLogSettingsUnmarshaller();
    private sealed virtual override AccessLogSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.AccessLogSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessLogSettings Unmarshall(JsonUnmarshallerContext context);
    public static AccessLogSettingsUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ApiMappingUnmarshaller : object {
    private static ApiMappingUnmarshaller _instance;
    public static ApiMappingUnmarshaller Instance { get; }
    private static ApiMappingUnmarshaller();
    private sealed virtual override ApiMapping Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.ApiMapping,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ApiMapping Unmarshall(JsonUnmarshallerContext context);
    public static ApiMappingUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ApiUnmarshaller : object {
    private static ApiUnmarshaller _instance;
    public static ApiUnmarshaller Instance { get; }
    private static ApiUnmarshaller();
    private sealed virtual override Api Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.Api,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Api Unmarshall(JsonUnmarshallerContext context);
    public static ApiUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.AuthorizerUnmarshaller : object {
    private static AuthorizerUnmarshaller _instance;
    public static AuthorizerUnmarshaller Instance { get; }
    private static AuthorizerUnmarshaller();
    private sealed virtual override Authorizer Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.Authorizer,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Authorizer Unmarshall(JsonUnmarshallerContext context);
    public static AuthorizerUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.BadRequestExceptionUnmarshaller : object {
    private static BadRequestExceptionUnmarshaller _instance;
    public static BadRequestExceptionUnmarshaller Instance { get; }
    private static BadRequestExceptionUnmarshaller();
    public sealed virtual BadRequestException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual BadRequestException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static BadRequestExceptionUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CorsMarshaller : object {
    public static CorsMarshaller Instance;
    private static CorsMarshaller();
    public sealed virtual void Marshall(Cors requestObject, JsonMarshallerContext context);
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CorsUnmarshaller : object {
    private static CorsUnmarshaller _instance;
    public static CorsUnmarshaller Instance { get; }
    private static CorsUnmarshaller();
    private sealed virtual override Cors Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.Cors,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Cors Unmarshall(JsonUnmarshallerContext context);
    public static CorsUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateApiMappingRequestMarshaller : object {
    private static CreateApiMappingRequestMarshaller _instance;
    public static CreateApiMappingRequestMarshaller Instance { get; }
    private static CreateApiMappingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateApiMappingRequest publicRequest);
    internal static CreateApiMappingRequestMarshaller GetInstance();
    public static CreateApiMappingRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateApiMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateApiMappingResponseUnmarshaller _instance;
    public static CreateApiMappingResponseUnmarshaller Instance { get; }
    private static CreateApiMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateApiMappingResponseUnmarshaller GetInstance();
    public static CreateApiMappingResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateApiRequestMarshaller : object {
    private static CreateApiRequestMarshaller _instance;
    public static CreateApiRequestMarshaller Instance { get; }
    private static CreateApiRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateApiRequest publicRequest);
    internal static CreateApiRequestMarshaller GetInstance();
    public static CreateApiRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateApiResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateApiResponseUnmarshaller _instance;
    public static CreateApiResponseUnmarshaller Instance { get; }
    private static CreateApiResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateApiResponseUnmarshaller GetInstance();
    public static CreateApiResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateAuthorizerRequestMarshaller : object {
    private static CreateAuthorizerRequestMarshaller _instance;
    public static CreateAuthorizerRequestMarshaller Instance { get; }
    private static CreateAuthorizerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateAuthorizerRequest publicRequest);
    internal static CreateAuthorizerRequestMarshaller GetInstance();
    public static CreateAuthorizerRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateAuthorizerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateAuthorizerResponseUnmarshaller _instance;
    public static CreateAuthorizerResponseUnmarshaller Instance { get; }
    private static CreateAuthorizerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateAuthorizerResponseUnmarshaller GetInstance();
    public static CreateAuthorizerResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateDeploymentRequestMarshaller : object {
    private static CreateDeploymentRequestMarshaller _instance;
    public static CreateDeploymentRequestMarshaller Instance { get; }
    private static CreateDeploymentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDeploymentRequest publicRequest);
    internal static CreateDeploymentRequestMarshaller GetInstance();
    public static CreateDeploymentRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateDeploymentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateDeploymentResponseUnmarshaller _instance;
    public static CreateDeploymentResponseUnmarshaller Instance { get; }
    private static CreateDeploymentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDeploymentResponseUnmarshaller GetInstance();
    public static CreateDeploymentResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateDomainNameRequestMarshaller : object {
    private static CreateDomainNameRequestMarshaller _instance;
    public static CreateDomainNameRequestMarshaller Instance { get; }
    private static CreateDomainNameRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDomainNameRequest publicRequest);
    internal static CreateDomainNameRequestMarshaller GetInstance();
    public static CreateDomainNameRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateDomainNameResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateDomainNameResponseUnmarshaller _instance;
    public static CreateDomainNameResponseUnmarshaller Instance { get; }
    private static CreateDomainNameResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDomainNameResponseUnmarshaller GetInstance();
    public static CreateDomainNameResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateIntegrationRequestMarshaller : object {
    private static CreateIntegrationRequestMarshaller _instance;
    public static CreateIntegrationRequestMarshaller Instance { get; }
    private static CreateIntegrationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIntegrationRequest publicRequest);
    internal static CreateIntegrationRequestMarshaller GetInstance();
    public static CreateIntegrationRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateIntegrationResponseRequestMarshaller : object {
    private static CreateIntegrationResponseRequestMarshaller _instance;
    public static CreateIntegrationResponseRequestMarshaller Instance { get; }
    private static CreateIntegrationResponseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIntegrationResponseRequest publicRequest);
    internal static CreateIntegrationResponseRequestMarshaller GetInstance();
    public static CreateIntegrationResponseRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateIntegrationResponseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateIntegrationResponseResponseUnmarshaller _instance;
    public static CreateIntegrationResponseResponseUnmarshaller Instance { get; }
    private static CreateIntegrationResponseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIntegrationResponseResponseUnmarshaller GetInstance();
    public static CreateIntegrationResponseResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateIntegrationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateIntegrationResponseUnmarshaller _instance;
    public static CreateIntegrationResponseUnmarshaller Instance { get; }
    private static CreateIntegrationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIntegrationResponseUnmarshaller GetInstance();
    public static CreateIntegrationResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateModelRequestMarshaller : object {
    private static CreateModelRequestMarshaller _instance;
    public static CreateModelRequestMarshaller Instance { get; }
    private static CreateModelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateModelRequest publicRequest);
    internal static CreateModelRequestMarshaller GetInstance();
    public static CreateModelRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateModelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateModelResponseUnmarshaller _instance;
    public static CreateModelResponseUnmarshaller Instance { get; }
    private static CreateModelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateModelResponseUnmarshaller GetInstance();
    public static CreateModelResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateRouteRequestMarshaller : object {
    private static CreateRouteRequestMarshaller _instance;
    public static CreateRouteRequestMarshaller Instance { get; }
    private static CreateRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRouteRequest publicRequest);
    internal static CreateRouteRequestMarshaller GetInstance();
    public static CreateRouteRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateRouteResponseRequestMarshaller : object {
    private static CreateRouteResponseRequestMarshaller _instance;
    public static CreateRouteResponseRequestMarshaller Instance { get; }
    private static CreateRouteResponseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRouteResponseRequest publicRequest);
    internal static CreateRouteResponseRequestMarshaller GetInstance();
    public static CreateRouteResponseRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateRouteResponseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateRouteResponseResponseUnmarshaller _instance;
    public static CreateRouteResponseResponseUnmarshaller Instance { get; }
    private static CreateRouteResponseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRouteResponseResponseUnmarshaller GetInstance();
    public static CreateRouteResponseResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateRouteResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateRouteResponseUnmarshaller _instance;
    public static CreateRouteResponseUnmarshaller Instance { get; }
    private static CreateRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRouteResponseUnmarshaller GetInstance();
    public static CreateRouteResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateStageRequestMarshaller : object {
    private static CreateStageRequestMarshaller _instance;
    public static CreateStageRequestMarshaller Instance { get; }
    private static CreateStageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateStageRequest publicRequest);
    internal static CreateStageRequestMarshaller GetInstance();
    public static CreateStageRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateStageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateStageResponseUnmarshaller _instance;
    public static CreateStageResponseUnmarshaller Instance { get; }
    private static CreateStageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateStageResponseUnmarshaller GetInstance();
    public static CreateStageResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateVpcLinkRequestMarshaller : object {
    private static CreateVpcLinkRequestMarshaller _instance;
    public static CreateVpcLinkRequestMarshaller Instance { get; }
    private static CreateVpcLinkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVpcLinkRequest publicRequest);
    internal static CreateVpcLinkRequestMarshaller GetInstance();
    public static CreateVpcLinkRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.CreateVpcLinkResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateVpcLinkResponseUnmarshaller _instance;
    public static CreateVpcLinkResponseUnmarshaller Instance { get; }
    private static CreateVpcLinkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVpcLinkResponseUnmarshaller GetInstance();
    public static CreateVpcLinkResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteAccessLogSettingsRequestMarshaller : object {
    private static DeleteAccessLogSettingsRequestMarshaller _instance;
    public static DeleteAccessLogSettingsRequestMarshaller Instance { get; }
    private static DeleteAccessLogSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccessLogSettingsRequest publicRequest);
    internal static DeleteAccessLogSettingsRequestMarshaller GetInstance();
    public static DeleteAccessLogSettingsRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteAccessLogSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAccessLogSettingsResponseUnmarshaller _instance;
    public static DeleteAccessLogSettingsResponseUnmarshaller Instance { get; }
    private static DeleteAccessLogSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccessLogSettingsResponseUnmarshaller GetInstance();
    public static DeleteAccessLogSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteApiMappingRequestMarshaller : object {
    private static DeleteApiMappingRequestMarshaller _instance;
    public static DeleteApiMappingRequestMarshaller Instance { get; }
    private static DeleteApiMappingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteApiMappingRequest publicRequest);
    internal static DeleteApiMappingRequestMarshaller GetInstance();
    public static DeleteApiMappingRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteApiMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteApiMappingResponseUnmarshaller _instance;
    public static DeleteApiMappingResponseUnmarshaller Instance { get; }
    private static DeleteApiMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteApiMappingResponseUnmarshaller GetInstance();
    public static DeleteApiMappingResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteApiRequestMarshaller : object {
    private static DeleteApiRequestMarshaller _instance;
    public static DeleteApiRequestMarshaller Instance { get; }
    private static DeleteApiRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteApiRequest publicRequest);
    internal static DeleteApiRequestMarshaller GetInstance();
    public static DeleteApiRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteApiResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteApiResponseUnmarshaller _instance;
    public static DeleteApiResponseUnmarshaller Instance { get; }
    private static DeleteApiResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteApiResponseUnmarshaller GetInstance();
    public static DeleteApiResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteAuthorizerRequestMarshaller : object {
    private static DeleteAuthorizerRequestMarshaller _instance;
    public static DeleteAuthorizerRequestMarshaller Instance { get; }
    private static DeleteAuthorizerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAuthorizerRequest publicRequest);
    internal static DeleteAuthorizerRequestMarshaller GetInstance();
    public static DeleteAuthorizerRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteAuthorizerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAuthorizerResponseUnmarshaller _instance;
    public static DeleteAuthorizerResponseUnmarshaller Instance { get; }
    private static DeleteAuthorizerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAuthorizerResponseUnmarshaller GetInstance();
    public static DeleteAuthorizerResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteCorsConfigurationRequestMarshaller : object {
    private static DeleteCorsConfigurationRequestMarshaller _instance;
    public static DeleteCorsConfigurationRequestMarshaller Instance { get; }
    private static DeleteCorsConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCorsConfigurationRequest publicRequest);
    internal static DeleteCorsConfigurationRequestMarshaller GetInstance();
    public static DeleteCorsConfigurationRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteCorsConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteCorsConfigurationResponseUnmarshaller _instance;
    public static DeleteCorsConfigurationResponseUnmarshaller Instance { get; }
    private static DeleteCorsConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCorsConfigurationResponseUnmarshaller GetInstance();
    public static DeleteCorsConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteDeploymentRequestMarshaller : object {
    private static DeleteDeploymentRequestMarshaller _instance;
    public static DeleteDeploymentRequestMarshaller Instance { get; }
    private static DeleteDeploymentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDeploymentRequest publicRequest);
    internal static DeleteDeploymentRequestMarshaller GetInstance();
    public static DeleteDeploymentRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteDeploymentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDeploymentResponseUnmarshaller _instance;
    public static DeleteDeploymentResponseUnmarshaller Instance { get; }
    private static DeleteDeploymentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDeploymentResponseUnmarshaller GetInstance();
    public static DeleteDeploymentResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteDomainNameRequestMarshaller : object {
    private static DeleteDomainNameRequestMarshaller _instance;
    public static DeleteDomainNameRequestMarshaller Instance { get; }
    private static DeleteDomainNameRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDomainNameRequest publicRequest);
    internal static DeleteDomainNameRequestMarshaller GetInstance();
    public static DeleteDomainNameRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteDomainNameResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDomainNameResponseUnmarshaller _instance;
    public static DeleteDomainNameResponseUnmarshaller Instance { get; }
    private static DeleteDomainNameResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDomainNameResponseUnmarshaller GetInstance();
    public static DeleteDomainNameResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteIntegrationRequestMarshaller : object {
    private static DeleteIntegrationRequestMarshaller _instance;
    public static DeleteIntegrationRequestMarshaller Instance { get; }
    private static DeleteIntegrationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIntegrationRequest publicRequest);
    internal static DeleteIntegrationRequestMarshaller GetInstance();
    public static DeleteIntegrationRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteIntegrationResponseRequestMarshaller : object {
    private static DeleteIntegrationResponseRequestMarshaller _instance;
    public static DeleteIntegrationResponseRequestMarshaller Instance { get; }
    private static DeleteIntegrationResponseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIntegrationResponseRequest publicRequest);
    internal static DeleteIntegrationResponseRequestMarshaller GetInstance();
    public static DeleteIntegrationResponseRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteIntegrationResponseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteIntegrationResponseResponseUnmarshaller _instance;
    public static DeleteIntegrationResponseResponseUnmarshaller Instance { get; }
    private static DeleteIntegrationResponseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIntegrationResponseResponseUnmarshaller GetInstance();
    public static DeleteIntegrationResponseResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteIntegrationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteIntegrationResponseUnmarshaller _instance;
    public static DeleteIntegrationResponseUnmarshaller Instance { get; }
    private static DeleteIntegrationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIntegrationResponseUnmarshaller GetInstance();
    public static DeleteIntegrationResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteModelRequestMarshaller : object {
    private static DeleteModelRequestMarshaller _instance;
    public static DeleteModelRequestMarshaller Instance { get; }
    private static DeleteModelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteModelRequest publicRequest);
    internal static DeleteModelRequestMarshaller GetInstance();
    public static DeleteModelRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteModelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteModelResponseUnmarshaller _instance;
    public static DeleteModelResponseUnmarshaller Instance { get; }
    private static DeleteModelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteModelResponseUnmarshaller GetInstance();
    public static DeleteModelResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteRouteRequestMarshaller : object {
    private static DeleteRouteRequestMarshaller _instance;
    public static DeleteRouteRequestMarshaller Instance { get; }
    private static DeleteRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRouteRequest publicRequest);
    internal static DeleteRouteRequestMarshaller GetInstance();
    public static DeleteRouteRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteRouteRequestParameterRequestMarshaller : object {
    private static DeleteRouteRequestParameterRequestMarshaller _instance;
    public static DeleteRouteRequestParameterRequestMarshaller Instance { get; }
    private static DeleteRouteRequestParameterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRouteRequestParameterRequest publicRequest);
    internal static DeleteRouteRequestParameterRequestMarshaller GetInstance();
    public static DeleteRouteRequestParameterRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteRouteRequestParameterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteRouteRequestParameterResponseUnmarshaller _instance;
    public static DeleteRouteRequestParameterResponseUnmarshaller Instance { get; }
    private static DeleteRouteRequestParameterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRouteRequestParameterResponseUnmarshaller GetInstance();
    public static DeleteRouteRequestParameterResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteRouteResponseRequestMarshaller : object {
    private static DeleteRouteResponseRequestMarshaller _instance;
    public static DeleteRouteResponseRequestMarshaller Instance { get; }
    private static DeleteRouteResponseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRouteResponseRequest publicRequest);
    internal static DeleteRouteResponseRequestMarshaller GetInstance();
    public static DeleteRouteResponseRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteRouteResponseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteRouteResponseResponseUnmarshaller _instance;
    public static DeleteRouteResponseResponseUnmarshaller Instance { get; }
    private static DeleteRouteResponseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRouteResponseResponseUnmarshaller GetInstance();
    public static DeleteRouteResponseResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteRouteResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteRouteResponseUnmarshaller _instance;
    public static DeleteRouteResponseUnmarshaller Instance { get; }
    private static DeleteRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRouteResponseUnmarshaller GetInstance();
    public static DeleteRouteResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteRouteSettingsRequestMarshaller : object {
    private static DeleteRouteSettingsRequestMarshaller _instance;
    public static DeleteRouteSettingsRequestMarshaller Instance { get; }
    private static DeleteRouteSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRouteSettingsRequest publicRequest);
    internal static DeleteRouteSettingsRequestMarshaller GetInstance();
    public static DeleteRouteSettingsRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteRouteSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteRouteSettingsResponseUnmarshaller _instance;
    public static DeleteRouteSettingsResponseUnmarshaller Instance { get; }
    private static DeleteRouteSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRouteSettingsResponseUnmarshaller GetInstance();
    public static DeleteRouteSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteStageRequestMarshaller : object {
    private static DeleteStageRequestMarshaller _instance;
    public static DeleteStageRequestMarshaller Instance { get; }
    private static DeleteStageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteStageRequest publicRequest);
    internal static DeleteStageRequestMarshaller GetInstance();
    public static DeleteStageRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteStageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteStageResponseUnmarshaller _instance;
    public static DeleteStageResponseUnmarshaller Instance { get; }
    private static DeleteStageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteStageResponseUnmarshaller GetInstance();
    public static DeleteStageResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteVpcLinkRequestMarshaller : object {
    private static DeleteVpcLinkRequestMarshaller _instance;
    public static DeleteVpcLinkRequestMarshaller Instance { get; }
    private static DeleteVpcLinkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVpcLinkRequest publicRequest);
    internal static DeleteVpcLinkRequestMarshaller GetInstance();
    public static DeleteVpcLinkRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeleteVpcLinkResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteVpcLinkResponseUnmarshaller _instance;
    public static DeleteVpcLinkResponseUnmarshaller Instance { get; }
    private static DeleteVpcLinkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVpcLinkResponseUnmarshaller GetInstance();
    public static DeleteVpcLinkResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DeploymentUnmarshaller : object {
    private static DeploymentUnmarshaller _instance;
    public static DeploymentUnmarshaller Instance { get; }
    private static DeploymentUnmarshaller();
    private sealed virtual override Deployment Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.Deployment,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Deployment Unmarshall(JsonUnmarshallerContext context);
    public static DeploymentUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DomainNameConfigurationMarshaller : object {
    public static DomainNameConfigurationMarshaller Instance;
    private static DomainNameConfigurationMarshaller();
    public sealed virtual void Marshall(DomainNameConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DomainNameConfigurationUnmarshaller : object {
    private static DomainNameConfigurationUnmarshaller _instance;
    public static DomainNameConfigurationUnmarshaller Instance { get; }
    private static DomainNameConfigurationUnmarshaller();
    private sealed virtual override DomainNameConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.DomainNameConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DomainNameConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static DomainNameConfigurationUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.DomainNameUnmarshaller : object {
    private static DomainNameUnmarshaller _instance;
    public static DomainNameUnmarshaller Instance { get; }
    private static DomainNameUnmarshaller();
    private sealed virtual override DomainName Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.DomainName,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DomainName Unmarshall(JsonUnmarshallerContext context);
    public static DomainNameUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ExportApiRequestMarshaller : object {
    private static ExportApiRequestMarshaller _instance;
    public static ExportApiRequestMarshaller Instance { get; }
    private static ExportApiRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExportApiRequest publicRequest);
    internal static ExportApiRequestMarshaller GetInstance();
    public static ExportApiRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ExportApiResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ExportApiResponseUnmarshaller _instance;
    public static ExportApiResponseUnmarshaller Instance { get; }
    private static ExportApiResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExportApiResponseUnmarshaller GetInstance();
    public static ExportApiResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetApiMappingRequestMarshaller : object {
    private static GetApiMappingRequestMarshaller _instance;
    public static GetApiMappingRequestMarshaller Instance { get; }
    private static GetApiMappingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetApiMappingRequest publicRequest);
    internal static GetApiMappingRequestMarshaller GetInstance();
    public static GetApiMappingRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetApiMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetApiMappingResponseUnmarshaller _instance;
    public static GetApiMappingResponseUnmarshaller Instance { get; }
    private static GetApiMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetApiMappingResponseUnmarshaller GetInstance();
    public static GetApiMappingResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetApiMappingsRequestMarshaller : object {
    private static GetApiMappingsRequestMarshaller _instance;
    public static GetApiMappingsRequestMarshaller Instance { get; }
    private static GetApiMappingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetApiMappingsRequest publicRequest);
    internal static GetApiMappingsRequestMarshaller GetInstance();
    public static GetApiMappingsRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetApiMappingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetApiMappingsResponseUnmarshaller _instance;
    public static GetApiMappingsResponseUnmarshaller Instance { get; }
    private static GetApiMappingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetApiMappingsResponseUnmarshaller GetInstance();
    public static GetApiMappingsResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetApiRequestMarshaller : object {
    private static GetApiRequestMarshaller _instance;
    public static GetApiRequestMarshaller Instance { get; }
    private static GetApiRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetApiRequest publicRequest);
    internal static GetApiRequestMarshaller GetInstance();
    public static GetApiRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetApiResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetApiResponseUnmarshaller _instance;
    public static GetApiResponseUnmarshaller Instance { get; }
    private static GetApiResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetApiResponseUnmarshaller GetInstance();
    public static GetApiResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetApisRequestMarshaller : object {
    private static GetApisRequestMarshaller _instance;
    public static GetApisRequestMarshaller Instance { get; }
    private static GetApisRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetApisRequest publicRequest);
    internal static GetApisRequestMarshaller GetInstance();
    public static GetApisRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetApisResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetApisResponseUnmarshaller _instance;
    public static GetApisResponseUnmarshaller Instance { get; }
    private static GetApisResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetApisResponseUnmarshaller GetInstance();
    public static GetApisResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetAuthorizerRequestMarshaller : object {
    private static GetAuthorizerRequestMarshaller _instance;
    public static GetAuthorizerRequestMarshaller Instance { get; }
    private static GetAuthorizerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAuthorizerRequest publicRequest);
    internal static GetAuthorizerRequestMarshaller GetInstance();
    public static GetAuthorizerRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetAuthorizerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetAuthorizerResponseUnmarshaller _instance;
    public static GetAuthorizerResponseUnmarshaller Instance { get; }
    private static GetAuthorizerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAuthorizerResponseUnmarshaller GetInstance();
    public static GetAuthorizerResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetAuthorizersRequestMarshaller : object {
    private static GetAuthorizersRequestMarshaller _instance;
    public static GetAuthorizersRequestMarshaller Instance { get; }
    private static GetAuthorizersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetAuthorizersRequest publicRequest);
    internal static GetAuthorizersRequestMarshaller GetInstance();
    public static GetAuthorizersRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetAuthorizersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetAuthorizersResponseUnmarshaller _instance;
    public static GetAuthorizersResponseUnmarshaller Instance { get; }
    private static GetAuthorizersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetAuthorizersResponseUnmarshaller GetInstance();
    public static GetAuthorizersResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetDeploymentRequestMarshaller : object {
    private static GetDeploymentRequestMarshaller _instance;
    public static GetDeploymentRequestMarshaller Instance { get; }
    private static GetDeploymentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDeploymentRequest publicRequest);
    internal static GetDeploymentRequestMarshaller GetInstance();
    public static GetDeploymentRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetDeploymentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDeploymentResponseUnmarshaller _instance;
    public static GetDeploymentResponseUnmarshaller Instance { get; }
    private static GetDeploymentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDeploymentResponseUnmarshaller GetInstance();
    public static GetDeploymentResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetDeploymentsRequestMarshaller : object {
    private static GetDeploymentsRequestMarshaller _instance;
    public static GetDeploymentsRequestMarshaller Instance { get; }
    private static GetDeploymentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDeploymentsRequest publicRequest);
    internal static GetDeploymentsRequestMarshaller GetInstance();
    public static GetDeploymentsRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetDeploymentsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDeploymentsResponseUnmarshaller _instance;
    public static GetDeploymentsResponseUnmarshaller Instance { get; }
    private static GetDeploymentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDeploymentsResponseUnmarshaller GetInstance();
    public static GetDeploymentsResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetDomainNameRequestMarshaller : object {
    private static GetDomainNameRequestMarshaller _instance;
    public static GetDomainNameRequestMarshaller Instance { get; }
    private static GetDomainNameRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDomainNameRequest publicRequest);
    internal static GetDomainNameRequestMarshaller GetInstance();
    public static GetDomainNameRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetDomainNameResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDomainNameResponseUnmarshaller _instance;
    public static GetDomainNameResponseUnmarshaller Instance { get; }
    private static GetDomainNameResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDomainNameResponseUnmarshaller GetInstance();
    public static GetDomainNameResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetDomainNamesRequestMarshaller : object {
    private static GetDomainNamesRequestMarshaller _instance;
    public static GetDomainNamesRequestMarshaller Instance { get; }
    private static GetDomainNamesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDomainNamesRequest publicRequest);
    internal static GetDomainNamesRequestMarshaller GetInstance();
    public static GetDomainNamesRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetDomainNamesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDomainNamesResponseUnmarshaller _instance;
    public static GetDomainNamesResponseUnmarshaller Instance { get; }
    private static GetDomainNamesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDomainNamesResponseUnmarshaller GetInstance();
    public static GetDomainNamesResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetIntegrationRequestMarshaller : object {
    private static GetIntegrationRequestMarshaller _instance;
    public static GetIntegrationRequestMarshaller Instance { get; }
    private static GetIntegrationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIntegrationRequest publicRequest);
    internal static GetIntegrationRequestMarshaller GetInstance();
    public static GetIntegrationRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetIntegrationResponseRequestMarshaller : object {
    private static GetIntegrationResponseRequestMarshaller _instance;
    public static GetIntegrationResponseRequestMarshaller Instance { get; }
    private static GetIntegrationResponseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIntegrationResponseRequest publicRequest);
    internal static GetIntegrationResponseRequestMarshaller GetInstance();
    public static GetIntegrationResponseRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetIntegrationResponseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetIntegrationResponseResponseUnmarshaller _instance;
    public static GetIntegrationResponseResponseUnmarshaller Instance { get; }
    private static GetIntegrationResponseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIntegrationResponseResponseUnmarshaller GetInstance();
    public static GetIntegrationResponseResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetIntegrationResponsesRequestMarshaller : object {
    private static GetIntegrationResponsesRequestMarshaller _instance;
    public static GetIntegrationResponsesRequestMarshaller Instance { get; }
    private static GetIntegrationResponsesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIntegrationResponsesRequest publicRequest);
    internal static GetIntegrationResponsesRequestMarshaller GetInstance();
    public static GetIntegrationResponsesRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetIntegrationResponsesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetIntegrationResponsesResponseUnmarshaller _instance;
    public static GetIntegrationResponsesResponseUnmarshaller Instance { get; }
    private static GetIntegrationResponsesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIntegrationResponsesResponseUnmarshaller GetInstance();
    public static GetIntegrationResponsesResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetIntegrationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetIntegrationResponseUnmarshaller _instance;
    public static GetIntegrationResponseUnmarshaller Instance { get; }
    private static GetIntegrationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIntegrationResponseUnmarshaller GetInstance();
    public static GetIntegrationResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetIntegrationsRequestMarshaller : object {
    private static GetIntegrationsRequestMarshaller _instance;
    public static GetIntegrationsRequestMarshaller Instance { get; }
    private static GetIntegrationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIntegrationsRequest publicRequest);
    internal static GetIntegrationsRequestMarshaller GetInstance();
    public static GetIntegrationsRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetIntegrationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetIntegrationsResponseUnmarshaller _instance;
    public static GetIntegrationsResponseUnmarshaller Instance { get; }
    private static GetIntegrationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIntegrationsResponseUnmarshaller GetInstance();
    public static GetIntegrationsResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetModelRequestMarshaller : object {
    private static GetModelRequestMarshaller _instance;
    public static GetModelRequestMarshaller Instance { get; }
    private static GetModelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetModelRequest publicRequest);
    internal static GetModelRequestMarshaller GetInstance();
    public static GetModelRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetModelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetModelResponseUnmarshaller _instance;
    public static GetModelResponseUnmarshaller Instance { get; }
    private static GetModelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetModelResponseUnmarshaller GetInstance();
    public static GetModelResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetModelsRequestMarshaller : object {
    private static GetModelsRequestMarshaller _instance;
    public static GetModelsRequestMarshaller Instance { get; }
    private static GetModelsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetModelsRequest publicRequest);
    internal static GetModelsRequestMarshaller GetInstance();
    public static GetModelsRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetModelsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetModelsResponseUnmarshaller _instance;
    public static GetModelsResponseUnmarshaller Instance { get; }
    private static GetModelsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetModelsResponseUnmarshaller GetInstance();
    public static GetModelsResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetModelTemplateRequestMarshaller : object {
    private static GetModelTemplateRequestMarshaller _instance;
    public static GetModelTemplateRequestMarshaller Instance { get; }
    private static GetModelTemplateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetModelTemplateRequest publicRequest);
    internal static GetModelTemplateRequestMarshaller GetInstance();
    public static GetModelTemplateRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetModelTemplateResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetModelTemplateResponseUnmarshaller _instance;
    public static GetModelTemplateResponseUnmarshaller Instance { get; }
    private static GetModelTemplateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetModelTemplateResponseUnmarshaller GetInstance();
    public static GetModelTemplateResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetRouteRequestMarshaller : object {
    private static GetRouteRequestMarshaller _instance;
    public static GetRouteRequestMarshaller Instance { get; }
    private static GetRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRouteRequest publicRequest);
    internal static GetRouteRequestMarshaller GetInstance();
    public static GetRouteRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetRouteResponseRequestMarshaller : object {
    private static GetRouteResponseRequestMarshaller _instance;
    public static GetRouteResponseRequestMarshaller Instance { get; }
    private static GetRouteResponseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRouteResponseRequest publicRequest);
    internal static GetRouteResponseRequestMarshaller GetInstance();
    public static GetRouteResponseRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetRouteResponseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRouteResponseResponseUnmarshaller _instance;
    public static GetRouteResponseResponseUnmarshaller Instance { get; }
    private static GetRouteResponseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRouteResponseResponseUnmarshaller GetInstance();
    public static GetRouteResponseResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetRouteResponsesRequestMarshaller : object {
    private static GetRouteResponsesRequestMarshaller _instance;
    public static GetRouteResponsesRequestMarshaller Instance { get; }
    private static GetRouteResponsesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRouteResponsesRequest publicRequest);
    internal static GetRouteResponsesRequestMarshaller GetInstance();
    public static GetRouteResponsesRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetRouteResponsesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRouteResponsesResponseUnmarshaller _instance;
    public static GetRouteResponsesResponseUnmarshaller Instance { get; }
    private static GetRouteResponsesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRouteResponsesResponseUnmarshaller GetInstance();
    public static GetRouteResponsesResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetRouteResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRouteResponseUnmarshaller _instance;
    public static GetRouteResponseUnmarshaller Instance { get; }
    private static GetRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRouteResponseUnmarshaller GetInstance();
    public static GetRouteResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetRoutesRequestMarshaller : object {
    private static GetRoutesRequestMarshaller _instance;
    public static GetRoutesRequestMarshaller Instance { get; }
    private static GetRoutesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRoutesRequest publicRequest);
    internal static GetRoutesRequestMarshaller GetInstance();
    public static GetRoutesRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetRoutesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRoutesResponseUnmarshaller _instance;
    public static GetRoutesResponseUnmarshaller Instance { get; }
    private static GetRoutesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRoutesResponseUnmarshaller GetInstance();
    public static GetRoutesResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetStageRequestMarshaller : object {
    private static GetStageRequestMarshaller _instance;
    public static GetStageRequestMarshaller Instance { get; }
    private static GetStageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetStageRequest publicRequest);
    internal static GetStageRequestMarshaller GetInstance();
    public static GetStageRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetStageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetStageResponseUnmarshaller _instance;
    public static GetStageResponseUnmarshaller Instance { get; }
    private static GetStageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetStageResponseUnmarshaller GetInstance();
    public static GetStageResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetStagesRequestMarshaller : object {
    private static GetStagesRequestMarshaller _instance;
    public static GetStagesRequestMarshaller Instance { get; }
    private static GetStagesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetStagesRequest publicRequest);
    internal static GetStagesRequestMarshaller GetInstance();
    public static GetStagesRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetStagesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetStagesResponseUnmarshaller _instance;
    public static GetStagesResponseUnmarshaller Instance { get; }
    private static GetStagesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetStagesResponseUnmarshaller GetInstance();
    public static GetStagesResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetTagsRequestMarshaller : object {
    private static GetTagsRequestMarshaller _instance;
    public static GetTagsRequestMarshaller Instance { get; }
    private static GetTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTagsRequest publicRequest);
    internal static GetTagsRequestMarshaller GetInstance();
    public static GetTagsRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTagsResponseUnmarshaller _instance;
    public static GetTagsResponseUnmarshaller Instance { get; }
    private static GetTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTagsResponseUnmarshaller GetInstance();
    public static GetTagsResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetVpcLinkRequestMarshaller : object {
    private static GetVpcLinkRequestMarshaller _instance;
    public static GetVpcLinkRequestMarshaller Instance { get; }
    private static GetVpcLinkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVpcLinkRequest publicRequest);
    internal static GetVpcLinkRequestMarshaller GetInstance();
    public static GetVpcLinkRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetVpcLinkResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetVpcLinkResponseUnmarshaller _instance;
    public static GetVpcLinkResponseUnmarshaller Instance { get; }
    private static GetVpcLinkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVpcLinkResponseUnmarshaller GetInstance();
    public static GetVpcLinkResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetVpcLinksRequestMarshaller : object {
    private static GetVpcLinksRequestMarshaller _instance;
    public static GetVpcLinksRequestMarshaller Instance { get; }
    private static GetVpcLinksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVpcLinksRequest publicRequest);
    internal static GetVpcLinksRequestMarshaller GetInstance();
    public static GetVpcLinksRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.GetVpcLinksResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetVpcLinksResponseUnmarshaller _instance;
    public static GetVpcLinksResponseUnmarshaller Instance { get; }
    private static GetVpcLinksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVpcLinksResponseUnmarshaller GetInstance();
    public static GetVpcLinksResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ImportApiRequestMarshaller : object {
    private static ImportApiRequestMarshaller _instance;
    public static ImportApiRequestMarshaller Instance { get; }
    private static ImportApiRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportApiRequest publicRequest);
    internal static ImportApiRequestMarshaller GetInstance();
    public static ImportApiRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ImportApiResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ImportApiResponseUnmarshaller _instance;
    public static ImportApiResponseUnmarshaller Instance { get; }
    private static ImportApiResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportApiResponseUnmarshaller GetInstance();
    public static ImportApiResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.IntegrationResponseUnmarshaller : object {
    private static IntegrationResponseUnmarshaller _instance;
    public static IntegrationResponseUnmarshaller Instance { get; }
    private static IntegrationResponseUnmarshaller();
    private sealed virtual override IntegrationResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.IntegrationResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IntegrationResponse Unmarshall(JsonUnmarshallerContext context);
    public static IntegrationResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.IntegrationUnmarshaller : object {
    private static IntegrationUnmarshaller _instance;
    public static IntegrationUnmarshaller Instance { get; }
    private static IntegrationUnmarshaller();
    private sealed virtual override Integration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.Integration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Integration Unmarshall(JsonUnmarshallerContext context);
    public static IntegrationUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.JWTConfigurationMarshaller : object {
    public static JWTConfigurationMarshaller Instance;
    private static JWTConfigurationMarshaller();
    public sealed virtual void Marshall(JWTConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.JWTConfigurationUnmarshaller : object {
    private static JWTConfigurationUnmarshaller _instance;
    public static JWTConfigurationUnmarshaller Instance { get; }
    private static JWTConfigurationUnmarshaller();
    private sealed virtual override JWTConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.JWTConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual JWTConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static JWTConfigurationUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ModelUnmarshaller : object {
    private static ModelUnmarshaller _instance;
    public static ModelUnmarshaller Instance { get; }
    private static ModelUnmarshaller();
    private sealed virtual override Model Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.Model,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Model Unmarshall(JsonUnmarshallerContext context);
    public static ModelUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.MutualTlsAuthenticationInputMarshaller : object {
    public static MutualTlsAuthenticationInputMarshaller Instance;
    private static MutualTlsAuthenticationInputMarshaller();
    public sealed virtual void Marshall(MutualTlsAuthenticationInput requestObject, JsonMarshallerContext context);
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.MutualTlsAuthenticationUnmarshaller : object {
    private static MutualTlsAuthenticationUnmarshaller _instance;
    public static MutualTlsAuthenticationUnmarshaller Instance { get; }
    private static MutualTlsAuthenticationUnmarshaller();
    private sealed virtual override MutualTlsAuthentication Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.MutualTlsAuthentication,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MutualTlsAuthentication Unmarshall(JsonUnmarshallerContext context);
    public static MutualTlsAuthenticationUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.NotFoundExceptionUnmarshaller : object {
    private static NotFoundExceptionUnmarshaller _instance;
    public static NotFoundExceptionUnmarshaller Instance { get; }
    private static NotFoundExceptionUnmarshaller();
    public sealed virtual NotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ParameterConstraintsMarshaller : object {
    public static ParameterConstraintsMarshaller Instance;
    private static ParameterConstraintsMarshaller();
    public sealed virtual void Marshall(ParameterConstraints requestObject, JsonMarshallerContext context);
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ParameterConstraintsUnmarshaller : object {
    private static ParameterConstraintsUnmarshaller _instance;
    public static ParameterConstraintsUnmarshaller Instance { get; }
    private static ParameterConstraintsUnmarshaller();
    private sealed virtual override ParameterConstraints Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.ParameterConstraints,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ParameterConstraints Unmarshall(JsonUnmarshallerContext context);
    public static ParameterConstraintsUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ReimportApiRequestMarshaller : object {
    private static ReimportApiRequestMarshaller _instance;
    public static ReimportApiRequestMarshaller Instance { get; }
    private static ReimportApiRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReimportApiRequest publicRequest);
    internal static ReimportApiRequestMarshaller GetInstance();
    public static ReimportApiRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ReimportApiResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ReimportApiResponseUnmarshaller _instance;
    public static ReimportApiResponseUnmarshaller Instance { get; }
    private static ReimportApiResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReimportApiResponseUnmarshaller GetInstance();
    public static ReimportApiResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ResetAuthorizersCacheRequestMarshaller : object {
    private static ResetAuthorizersCacheRequestMarshaller _instance;
    public static ResetAuthorizersCacheRequestMarshaller Instance { get; }
    private static ResetAuthorizersCacheRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResetAuthorizersCacheRequest publicRequest);
    internal static ResetAuthorizersCacheRequestMarshaller GetInstance();
    public static ResetAuthorizersCacheRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.ResetAuthorizersCacheResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ResetAuthorizersCacheResponseUnmarshaller _instance;
    public static ResetAuthorizersCacheResponseUnmarshaller Instance { get; }
    private static ResetAuthorizersCacheResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResetAuthorizersCacheResponseUnmarshaller GetInstance();
    public static ResetAuthorizersCacheResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.RouteResponseUnmarshaller : object {
    private static RouteResponseUnmarshaller _instance;
    public static RouteResponseUnmarshaller Instance { get; }
    private static RouteResponseUnmarshaller();
    private sealed virtual override RouteResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.RouteResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RouteResponse Unmarshall(JsonUnmarshallerContext context);
    public static RouteResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.RouteSettingsMarshaller : object {
    public static RouteSettingsMarshaller Instance;
    private static RouteSettingsMarshaller();
    public sealed virtual void Marshall(RouteSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.RouteSettingsUnmarshaller : object {
    private static RouteSettingsUnmarshaller _instance;
    public static RouteSettingsUnmarshaller Instance { get; }
    private static RouteSettingsUnmarshaller();
    private sealed virtual override RouteSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.RouteSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RouteSettings Unmarshall(JsonUnmarshallerContext context);
    public static RouteSettingsUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.RouteUnmarshaller : object {
    private static RouteUnmarshaller _instance;
    public static RouteUnmarshaller Instance { get; }
    private static RouteUnmarshaller();
    private sealed virtual override Route Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.Route,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Route Unmarshall(JsonUnmarshallerContext context);
    public static RouteUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.StageUnmarshaller : object {
    private static StageUnmarshaller _instance;
    public static StageUnmarshaller Instance { get; }
    private static StageUnmarshaller();
    private sealed virtual override Stage Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.Stage,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Stage Unmarshall(JsonUnmarshallerContext context);
    public static StageUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.TlsConfigInputMarshaller : object {
    public static TlsConfigInputMarshaller Instance;
    private static TlsConfigInputMarshaller();
    public sealed virtual void Marshall(TlsConfigInput requestObject, JsonMarshallerContext context);
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.TlsConfigUnmarshaller : object {
    private static TlsConfigUnmarshaller _instance;
    public static TlsConfigUnmarshaller Instance { get; }
    private static TlsConfigUnmarshaller();
    private sealed virtual override TlsConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.TlsConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TlsConfig Unmarshall(JsonUnmarshallerContext context);
    public static TlsConfigUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateApiMappingRequestMarshaller : object {
    private static UpdateApiMappingRequestMarshaller _instance;
    public static UpdateApiMappingRequestMarshaller Instance { get; }
    private static UpdateApiMappingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateApiMappingRequest publicRequest);
    internal static UpdateApiMappingRequestMarshaller GetInstance();
    public static UpdateApiMappingRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateApiMappingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateApiMappingResponseUnmarshaller _instance;
    public static UpdateApiMappingResponseUnmarshaller Instance { get; }
    private static UpdateApiMappingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateApiMappingResponseUnmarshaller GetInstance();
    public static UpdateApiMappingResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateApiRequestMarshaller : object {
    private static UpdateApiRequestMarshaller _instance;
    public static UpdateApiRequestMarshaller Instance { get; }
    private static UpdateApiRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateApiRequest publicRequest);
    internal static UpdateApiRequestMarshaller GetInstance();
    public static UpdateApiRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateApiResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateApiResponseUnmarshaller _instance;
    public static UpdateApiResponseUnmarshaller Instance { get; }
    private static UpdateApiResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateApiResponseUnmarshaller GetInstance();
    public static UpdateApiResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateAuthorizerRequestMarshaller : object {
    private static UpdateAuthorizerRequestMarshaller _instance;
    public static UpdateAuthorizerRequestMarshaller Instance { get; }
    private static UpdateAuthorizerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAuthorizerRequest publicRequest);
    internal static UpdateAuthorizerRequestMarshaller GetInstance();
    public static UpdateAuthorizerRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateAuthorizerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateAuthorizerResponseUnmarshaller _instance;
    public static UpdateAuthorizerResponseUnmarshaller Instance { get; }
    private static UpdateAuthorizerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAuthorizerResponseUnmarshaller GetInstance();
    public static UpdateAuthorizerResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateDeploymentRequestMarshaller : object {
    private static UpdateDeploymentRequestMarshaller _instance;
    public static UpdateDeploymentRequestMarshaller Instance { get; }
    private static UpdateDeploymentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDeploymentRequest publicRequest);
    internal static UpdateDeploymentRequestMarshaller GetInstance();
    public static UpdateDeploymentRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateDeploymentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateDeploymentResponseUnmarshaller _instance;
    public static UpdateDeploymentResponseUnmarshaller Instance { get; }
    private static UpdateDeploymentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDeploymentResponseUnmarshaller GetInstance();
    public static UpdateDeploymentResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateDomainNameRequestMarshaller : object {
    private static UpdateDomainNameRequestMarshaller _instance;
    public static UpdateDomainNameRequestMarshaller Instance { get; }
    private static UpdateDomainNameRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDomainNameRequest publicRequest);
    internal static UpdateDomainNameRequestMarshaller GetInstance();
    public static UpdateDomainNameRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateDomainNameResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateDomainNameResponseUnmarshaller _instance;
    public static UpdateDomainNameResponseUnmarshaller Instance { get; }
    private static UpdateDomainNameResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDomainNameResponseUnmarshaller GetInstance();
    public static UpdateDomainNameResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateIntegrationRequestMarshaller : object {
    private static UpdateIntegrationRequestMarshaller _instance;
    public static UpdateIntegrationRequestMarshaller Instance { get; }
    private static UpdateIntegrationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateIntegrationRequest publicRequest);
    internal static UpdateIntegrationRequestMarshaller GetInstance();
    public static UpdateIntegrationRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateIntegrationResponseRequestMarshaller : object {
    private static UpdateIntegrationResponseRequestMarshaller _instance;
    public static UpdateIntegrationResponseRequestMarshaller Instance { get; }
    private static UpdateIntegrationResponseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateIntegrationResponseRequest publicRequest);
    internal static UpdateIntegrationResponseRequestMarshaller GetInstance();
    public static UpdateIntegrationResponseRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateIntegrationResponseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateIntegrationResponseResponseUnmarshaller _instance;
    public static UpdateIntegrationResponseResponseUnmarshaller Instance { get; }
    private static UpdateIntegrationResponseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateIntegrationResponseResponseUnmarshaller GetInstance();
    public static UpdateIntegrationResponseResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateIntegrationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateIntegrationResponseUnmarshaller _instance;
    public static UpdateIntegrationResponseUnmarshaller Instance { get; }
    private static UpdateIntegrationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateIntegrationResponseUnmarshaller GetInstance();
    public static UpdateIntegrationResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateModelRequestMarshaller : object {
    private static UpdateModelRequestMarshaller _instance;
    public static UpdateModelRequestMarshaller Instance { get; }
    private static UpdateModelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateModelRequest publicRequest);
    internal static UpdateModelRequestMarshaller GetInstance();
    public static UpdateModelRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateModelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateModelResponseUnmarshaller _instance;
    public static UpdateModelResponseUnmarshaller Instance { get; }
    private static UpdateModelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateModelResponseUnmarshaller GetInstance();
    public static UpdateModelResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateRouteRequestMarshaller : object {
    private static UpdateRouteRequestMarshaller _instance;
    public static UpdateRouteRequestMarshaller Instance { get; }
    private static UpdateRouteRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateRouteRequest publicRequest);
    internal static UpdateRouteRequestMarshaller GetInstance();
    public static UpdateRouteRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateRouteResponseRequestMarshaller : object {
    private static UpdateRouteResponseRequestMarshaller _instance;
    public static UpdateRouteResponseRequestMarshaller Instance { get; }
    private static UpdateRouteResponseRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateRouteResponseRequest publicRequest);
    internal static UpdateRouteResponseRequestMarshaller GetInstance();
    public static UpdateRouteResponseRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateRouteResponseResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateRouteResponseResponseUnmarshaller _instance;
    public static UpdateRouteResponseResponseUnmarshaller Instance { get; }
    private static UpdateRouteResponseResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateRouteResponseResponseUnmarshaller GetInstance();
    public static UpdateRouteResponseResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateRouteResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateRouteResponseUnmarshaller _instance;
    public static UpdateRouteResponseUnmarshaller Instance { get; }
    private static UpdateRouteResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateRouteResponseUnmarshaller GetInstance();
    public static UpdateRouteResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateStageRequestMarshaller : object {
    private static UpdateStageRequestMarshaller _instance;
    public static UpdateStageRequestMarshaller Instance { get; }
    private static UpdateStageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateStageRequest publicRequest);
    internal static UpdateStageRequestMarshaller GetInstance();
    public static UpdateStageRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateStageResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateStageResponseUnmarshaller _instance;
    public static UpdateStageResponseUnmarshaller Instance { get; }
    private static UpdateStageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateStageResponseUnmarshaller GetInstance();
    public static UpdateStageResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateVpcLinkRequestMarshaller : object {
    private static UpdateVpcLinkRequestMarshaller _instance;
    public static UpdateVpcLinkRequestMarshaller Instance { get; }
    private static UpdateVpcLinkRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateVpcLinkRequest publicRequest);
    internal static UpdateVpcLinkRequestMarshaller GetInstance();
    public static UpdateVpcLinkRequestMarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.UpdateVpcLinkResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateVpcLinkResponseUnmarshaller _instance;
    public static UpdateVpcLinkResponseUnmarshaller Instance { get; }
    private static UpdateVpcLinkResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateVpcLinkResponseUnmarshaller GetInstance();
    public static UpdateVpcLinkResponseUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.Internal.MarshallTransformations.VpcLinkUnmarshaller : object {
    private static VpcLinkUnmarshaller _instance;
    public static VpcLinkUnmarshaller Instance { get; }
    private static VpcLinkUnmarshaller();
    private sealed virtual override VpcLink Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.ApiGatewayV2.Model.VpcLink,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcLink Unmarshall(JsonUnmarshallerContext context);
    public static VpcLinkUnmarshaller get_Instance();
}
public class Amazon.ApiGatewayV2.Model.JWTConfiguration : object {
    private List`1<string> _audience;
    private string _issuer;
    public List`1<string> Audience { get; public set; }
    public string Issuer { get; public set; }
    public List`1<string> get_Audience();
    public void set_Audience(List`1<string> value);
    internal bool IsSetAudience();
    public string get_Issuer();
    public void set_Issuer(string value);
    internal bool IsSetIssuer();
}
public class Amazon.ApiGatewayV2.Model.Model : object {
    private string _contentType;
    private string _description;
    private string _modelId;
    private string _name;
    private string _schema;
    public string ContentType { get; public set; }
    public string Description { get; public set; }
    public string ModelId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string Schema { get; public set; }
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ModelId();
    public void set_ModelId(string value);
    internal bool IsSetModelId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
}
public class Amazon.ApiGatewayV2.Model.MutualTlsAuthentication : object {
    private string _truststoreUri;
    private string _truststoreVersion;
    private List`1<string> _truststoreWarnings;
    public string TruststoreUri { get; public set; }
    public string TruststoreVersion { get; public set; }
    public List`1<string> TruststoreWarnings { get; public set; }
    public string get_TruststoreUri();
    public void set_TruststoreUri(string value);
    internal bool IsSetTruststoreUri();
    public string get_TruststoreVersion();
    public void set_TruststoreVersion(string value);
    internal bool IsSetTruststoreVersion();
    public List`1<string> get_TruststoreWarnings();
    public void set_TruststoreWarnings(List`1<string> value);
    internal bool IsSetTruststoreWarnings();
}
public class Amazon.ApiGatewayV2.Model.MutualTlsAuthenticationInput : object {
    private string _truststoreUri;
    private string _truststoreVersion;
    public string TruststoreUri { get; public set; }
    public string TruststoreVersion { get; public set; }
    public string get_TruststoreUri();
    public void set_TruststoreUri(string value);
    internal bool IsSetTruststoreUri();
    public string get_TruststoreVersion();
    public void set_TruststoreVersion(string value);
    internal bool IsSetTruststoreVersion();
}
public class Amazon.ApiGatewayV2.Model.NotFoundException : AmazonApiGatewayV2Exception {
    private string _resourceType;
    public string ResourceType { get; public set; }
    public NotFoundException(string message);
    public NotFoundException(string message, Exception innerException);
    public NotFoundException(Exception innerException);
    public NotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected NotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
}
public class Amazon.ApiGatewayV2.Model.ParameterConstraints : object {
    private Nullable`1<bool> _required;
    public Nullable`1<bool> Required { get; public set; }
    public Nullable`1<bool> get_Required();
    public void set_Required(Nullable`1<bool> value);
    internal bool IsSetRequired();
}
public class Amazon.ApiGatewayV2.Model.ReimportApiRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _basepath;
    private string _body;
    private Nullable`1<bool> _failOnWarnings;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string Basepath { get; public set; }
    [AWSPropertyAttribute]
public string Body { get; public set; }
    public Nullable`1<bool> FailOnWarnings { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_Basepath();
    public void set_Basepath(string value);
    internal bool IsSetBasepath();
    public string get_Body();
    public void set_Body(string value);
    internal bool IsSetBody();
    public Nullable`1<bool> get_FailOnWarnings();
    public void set_FailOnWarnings(Nullable`1<bool> value);
    internal bool IsSetFailOnWarnings();
}
public class Amazon.ApiGatewayV2.Model.ReimportApiResponse : AmazonWebServiceResponse {
    private string _apiEndpoint;
    private Nullable`1<bool> _apiGatewayManaged;
    private string _apiId;
    private string _apiKeySelectionExpression;
    private Cors _corsConfiguration;
    private Nullable`1<DateTime> _createdDate;
    private string _description;
    private Nullable`1<bool> _disableExecuteApiEndpoint;
    private Nullable`1<bool> _disableSchemaValidation;
    private List`1<string> _importInfo;
    private string _name;
    private ProtocolType _protocolType;
    private string _routeSelectionExpression;
    private Dictionary`2<string, string> _tags;
    private string _version;
    private List`1<string> _warnings;
    public string ApiEndpoint { get; public set; }
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public string ApiId { get; public set; }
    public string ApiKeySelectionExpression { get; public set; }
    public Cors CorsConfiguration { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> DisableExecuteApiEndpoint { get; public set; }
    public Nullable`1<bool> DisableSchemaValidation { get; public set; }
    public List`1<string> ImportInfo { get; public set; }
    public string Name { get; public set; }
    public ProtocolType ProtocolType { get; public set; }
    public string RouteSelectionExpression { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string Version { get; public set; }
    public List`1<string> Warnings { get; public set; }
    public string get_ApiEndpoint();
    public void set_ApiEndpoint(string value);
    internal bool IsSetApiEndpoint();
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiKeySelectionExpression();
    public void set_ApiKeySelectionExpression(string value);
    internal bool IsSetApiKeySelectionExpression();
    public Cors get_CorsConfiguration();
    public void set_CorsConfiguration(Cors value);
    internal bool IsSetCorsConfiguration();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DisableExecuteApiEndpoint();
    public void set_DisableExecuteApiEndpoint(Nullable`1<bool> value);
    internal bool IsSetDisableExecuteApiEndpoint();
    public Nullable`1<bool> get_DisableSchemaValidation();
    public void set_DisableSchemaValidation(Nullable`1<bool> value);
    internal bool IsSetDisableSchemaValidation();
    public List`1<string> get_ImportInfo();
    public void set_ImportInfo(List`1<string> value);
    internal bool IsSetImportInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ProtocolType get_ProtocolType();
    public void set_ProtocolType(ProtocolType value);
    internal bool IsSetProtocolType();
    public string get_RouteSelectionExpression();
    public void set_RouteSelectionExpression(string value);
    internal bool IsSetRouteSelectionExpression();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public List`1<string> get_Warnings();
    public void set_Warnings(List`1<string> value);
    internal bool IsSetWarnings();
}
public class Amazon.ApiGatewayV2.Model.ResetAuthorizersCacheRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _stageName;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string StageName { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
}
public class Amazon.ApiGatewayV2.Model.ResetAuthorizersCacheResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.Route : object {
    private Nullable`1<bool> _apiGatewayManaged;
    private Nullable`1<bool> _apiKeyRequired;
    private List`1<string> _authorizationScopes;
    private AuthorizationType _authorizationType;
    private string _authorizerId;
    private string _modelSelectionExpression;
    private string _operationName;
    private Dictionary`2<string, string> _requestModels;
    private Dictionary`2<string, ParameterConstraints> _requestParameters;
    private string _routeId;
    private string _routeKey;
    private string _routeResponseSelectionExpression;
    private string _target;
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public Nullable`1<bool> ApiKeyRequired { get; public set; }
    public List`1<string> AuthorizationScopes { get; public set; }
    public AuthorizationType AuthorizationType { get; public set; }
    public string AuthorizerId { get; public set; }
    public string ModelSelectionExpression { get; public set; }
    public string OperationName { get; public set; }
    public Dictionary`2<string, string> RequestModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> RequestParameters { get; public set; }
    public string RouteId { get; public set; }
    [AWSPropertyAttribute]
public string RouteKey { get; public set; }
    public string RouteResponseSelectionExpression { get; public set; }
    public string Target { get; public set; }
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public Nullable`1<bool> get_ApiKeyRequired();
    public void set_ApiKeyRequired(Nullable`1<bool> value);
    internal bool IsSetApiKeyRequired();
    public List`1<string> get_AuthorizationScopes();
    public void set_AuthorizationScopes(List`1<string> value);
    internal bool IsSetAuthorizationScopes();
    public AuthorizationType get_AuthorizationType();
    public void set_AuthorizationType(AuthorizationType value);
    internal bool IsSetAuthorizationType();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public string get_OperationName();
    public void set_OperationName(string value);
    internal bool IsSetOperationName();
    public Dictionary`2<string, string> get_RequestModels();
    public void set_RequestModels(Dictionary`2<string, string> value);
    internal bool IsSetRequestModels();
    public Dictionary`2<string, ParameterConstraints> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetRequestParameters();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
    public string get_RouteKey();
    public void set_RouteKey(string value);
    internal bool IsSetRouteKey();
    public string get_RouteResponseSelectionExpression();
    public void set_RouteResponseSelectionExpression(string value);
    internal bool IsSetRouteResponseSelectionExpression();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
}
public class Amazon.ApiGatewayV2.Model.RouteResponse : object {
    private string _modelSelectionExpression;
    private Dictionary`2<string, string> _responseModels;
    private Dictionary`2<string, ParameterConstraints> _responseParameters;
    private string _routeResponseId;
    private string _routeResponseKey;
    public string ModelSelectionExpression { get; public set; }
    public Dictionary`2<string, string> ResponseModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> ResponseParameters { get; public set; }
    public string RouteResponseId { get; public set; }
    [AWSPropertyAttribute]
public string RouteResponseKey { get; public set; }
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public Dictionary`2<string, string> get_ResponseModels();
    public void set_ResponseModels(Dictionary`2<string, string> value);
    internal bool IsSetResponseModels();
    public Dictionary`2<string, ParameterConstraints> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetResponseParameters();
    public string get_RouteResponseId();
    public void set_RouteResponseId(string value);
    internal bool IsSetRouteResponseId();
    public string get_RouteResponseKey();
    public void set_RouteResponseKey(string value);
    internal bool IsSetRouteResponseKey();
}
public class Amazon.ApiGatewayV2.Model.RouteSettings : object {
    private Nullable`1<bool> _dataTraceEnabled;
    private Nullable`1<bool> _detailedMetricsEnabled;
    private LoggingLevel _loggingLevel;
    private Nullable`1<int> _throttlingBurstLimit;
    private Nullable`1<double> _throttlingRateLimit;
    public Nullable`1<bool> DataTraceEnabled { get; public set; }
    public Nullable`1<bool> DetailedMetricsEnabled { get; public set; }
    public LoggingLevel LoggingLevel { get; public set; }
    public Nullable`1<int> ThrottlingBurstLimit { get; public set; }
    public Nullable`1<double> ThrottlingRateLimit { get; public set; }
    public Nullable`1<bool> get_DataTraceEnabled();
    public void set_DataTraceEnabled(Nullable`1<bool> value);
    internal bool IsSetDataTraceEnabled();
    public Nullable`1<bool> get_DetailedMetricsEnabled();
    public void set_DetailedMetricsEnabled(Nullable`1<bool> value);
    internal bool IsSetDetailedMetricsEnabled();
    public LoggingLevel get_LoggingLevel();
    public void set_LoggingLevel(LoggingLevel value);
    internal bool IsSetLoggingLevel();
    public Nullable`1<int> get_ThrottlingBurstLimit();
    public void set_ThrottlingBurstLimit(Nullable`1<int> value);
    internal bool IsSetThrottlingBurstLimit();
    public Nullable`1<double> get_ThrottlingRateLimit();
    public void set_ThrottlingRateLimit(Nullable`1<double> value);
    internal bool IsSetThrottlingRateLimit();
}
public class Amazon.ApiGatewayV2.Model.Stage : object {
    private AccessLogSettings _accessLogSettings;
    private Nullable`1<bool> _apiGatewayManaged;
    private Nullable`1<bool> _autoDeploy;
    private string _clientCertificateId;
    private Nullable`1<DateTime> _createdDate;
    private RouteSettings _defaultRouteSettings;
    private string _deploymentId;
    private string _description;
    private string _lastDeploymentStatusMessage;
    private Nullable`1<DateTime> _lastUpdatedDate;
    private Dictionary`2<string, RouteSettings> _routeSettings;
    private string _stageName;
    private Dictionary`2<string, string> _stageVariables;
    private Dictionary`2<string, string> _tags;
    public AccessLogSettings AccessLogSettings { get; public set; }
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public Nullable`1<bool> AutoDeploy { get; public set; }
    public string ClientCertificateId { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public RouteSettings DefaultRouteSettings { get; public set; }
    public string DeploymentId { get; public set; }
    public string Description { get; public set; }
    public string LastDeploymentStatusMessage { get; public set; }
    public Nullable`1<DateTime> LastUpdatedDate { get; public set; }
    public Dictionary`2<string, RouteSettings> RouteSettings { get; public set; }
    [AWSPropertyAttribute]
public string StageName { get; public set; }
    public Dictionary`2<string, string> StageVariables { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public AccessLogSettings get_AccessLogSettings();
    public void set_AccessLogSettings(AccessLogSettings value);
    internal bool IsSetAccessLogSettings();
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public Nullable`1<bool> get_AutoDeploy();
    public void set_AutoDeploy(Nullable`1<bool> value);
    internal bool IsSetAutoDeploy();
    public string get_ClientCertificateId();
    public void set_ClientCertificateId(string value);
    internal bool IsSetClientCertificateId();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public RouteSettings get_DefaultRouteSettings();
    public void set_DefaultRouteSettings(RouteSettings value);
    internal bool IsSetDefaultRouteSettings();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LastDeploymentStatusMessage();
    public void set_LastDeploymentStatusMessage(string value);
    internal bool IsSetLastDeploymentStatusMessage();
    public Nullable`1<DateTime> get_LastUpdatedDate();
    public void set_LastUpdatedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedDate();
    public Dictionary`2<string, RouteSettings> get_RouteSettings();
    public void set_RouteSettings(Dictionary`2<string, RouteSettings> value);
    internal bool IsSetRouteSettings();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
    public Dictionary`2<string, string> get_StageVariables();
    public void set_StageVariables(Dictionary`2<string, string> value);
    internal bool IsSetStageVariables();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.TagResourceRequest : AmazonApiGatewayV2Request {
    private string _resourceArn;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.TlsConfig : object {
    private string _serverNameToVerify;
    public string ServerNameToVerify { get; public set; }
    public string get_ServerNameToVerify();
    public void set_ServerNameToVerify(string value);
    internal bool IsSetServerNameToVerify();
}
public class Amazon.ApiGatewayV2.Model.TlsConfigInput : object {
    private string _serverNameToVerify;
    public string ServerNameToVerify { get; public set; }
    public string get_ServerNameToVerify();
    public void set_ServerNameToVerify(string value);
    internal bool IsSetServerNameToVerify();
}
public class Amazon.ApiGatewayV2.Model.TooManyRequestsException : AmazonApiGatewayV2Exception {
    private string _limitType;
    public string LimitType { get; public set; }
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected TooManyRequestsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_LimitType();
    public void set_LimitType(string value);
    internal bool IsSetLimitType();
}
public class Amazon.ApiGatewayV2.Model.UntagResourceRequest : AmazonApiGatewayV2Request {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.ApiGatewayV2.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.ApiGatewayV2.Model.UpdateApiMappingRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _apiMappingId;
    private string _apiMappingKey;
    private string _domainName;
    private string _stage;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string ApiMappingId { get; public set; }
    public string ApiMappingKey { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    public string Stage { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiMappingId();
    public void set_ApiMappingId(string value);
    internal bool IsSetApiMappingId();
    public string get_ApiMappingKey();
    public void set_ApiMappingKey(string value);
    internal bool IsSetApiMappingKey();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public string get_Stage();
    public void set_Stage(string value);
    internal bool IsSetStage();
}
public class Amazon.ApiGatewayV2.Model.UpdateApiMappingResponse : AmazonWebServiceResponse {
    private string _apiId;
    private string _apiMappingId;
    private string _apiMappingKey;
    private string _stage;
    public string ApiId { get; public set; }
    public string ApiMappingId { get; public set; }
    public string ApiMappingKey { get; public set; }
    public string Stage { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiMappingId();
    public void set_ApiMappingId(string value);
    internal bool IsSetApiMappingId();
    public string get_ApiMappingKey();
    public void set_ApiMappingKey(string value);
    internal bool IsSetApiMappingKey();
    public string get_Stage();
    public void set_Stage(string value);
    internal bool IsSetStage();
}
public class Amazon.ApiGatewayV2.Model.UpdateApiRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _apiKeySelectionExpression;
    private Cors _corsConfiguration;
    private string _credentialsArn;
    private string _description;
    private Nullable`1<bool> _disableExecuteApiEndpoint;
    private Nullable`1<bool> _disableSchemaValidation;
    private string _name;
    private string _routeKey;
    private string _routeSelectionExpression;
    private string _target;
    private string _version;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string ApiKeySelectionExpression { get; public set; }
    public Cors CorsConfiguration { get; public set; }
    public string CredentialsArn { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> DisableExecuteApiEndpoint { get; public set; }
    public Nullable`1<bool> DisableSchemaValidation { get; public set; }
    public string Name { get; public set; }
    public string RouteKey { get; public set; }
    public string RouteSelectionExpression { get; public set; }
    public string Target { get; public set; }
    public string Version { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiKeySelectionExpression();
    public void set_ApiKeySelectionExpression(string value);
    internal bool IsSetApiKeySelectionExpression();
    public Cors get_CorsConfiguration();
    public void set_CorsConfiguration(Cors value);
    internal bool IsSetCorsConfiguration();
    public string get_CredentialsArn();
    public void set_CredentialsArn(string value);
    internal bool IsSetCredentialsArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DisableExecuteApiEndpoint();
    public void set_DisableExecuteApiEndpoint(Nullable`1<bool> value);
    internal bool IsSetDisableExecuteApiEndpoint();
    public Nullable`1<bool> get_DisableSchemaValidation();
    public void set_DisableSchemaValidation(Nullable`1<bool> value);
    internal bool IsSetDisableSchemaValidation();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_RouteKey();
    public void set_RouteKey(string value);
    internal bool IsSetRouteKey();
    public string get_RouteSelectionExpression();
    public void set_RouteSelectionExpression(string value);
    internal bool IsSetRouteSelectionExpression();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.ApiGatewayV2.Model.UpdateApiResponse : AmazonWebServiceResponse {
    private string _apiEndpoint;
    private Nullable`1<bool> _apiGatewayManaged;
    private string _apiId;
    private string _apiKeySelectionExpression;
    private Cors _corsConfiguration;
    private Nullable`1<DateTime> _createdDate;
    private string _description;
    private Nullable`1<bool> _disableExecuteApiEndpoint;
    private Nullable`1<bool> _disableSchemaValidation;
    private List`1<string> _importInfo;
    private string _name;
    private ProtocolType _protocolType;
    private string _routeSelectionExpression;
    private Dictionary`2<string, string> _tags;
    private string _version;
    private List`1<string> _warnings;
    public string ApiEndpoint { get; public set; }
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public string ApiId { get; public set; }
    public string ApiKeySelectionExpression { get; public set; }
    public Cors CorsConfiguration { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> DisableExecuteApiEndpoint { get; public set; }
    public Nullable`1<bool> DisableSchemaValidation { get; public set; }
    public List`1<string> ImportInfo { get; public set; }
    public string Name { get; public set; }
    public ProtocolType ProtocolType { get; public set; }
    public string RouteSelectionExpression { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string Version { get; public set; }
    public List`1<string> Warnings { get; public set; }
    public string get_ApiEndpoint();
    public void set_ApiEndpoint(string value);
    internal bool IsSetApiEndpoint();
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ApiKeySelectionExpression();
    public void set_ApiKeySelectionExpression(string value);
    internal bool IsSetApiKeySelectionExpression();
    public Cors get_CorsConfiguration();
    public void set_CorsConfiguration(Cors value);
    internal bool IsSetCorsConfiguration();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<bool> get_DisableExecuteApiEndpoint();
    public void set_DisableExecuteApiEndpoint(Nullable`1<bool> value);
    internal bool IsSetDisableExecuteApiEndpoint();
    public Nullable`1<bool> get_DisableSchemaValidation();
    public void set_DisableSchemaValidation(Nullable`1<bool> value);
    internal bool IsSetDisableSchemaValidation();
    public List`1<string> get_ImportInfo();
    public void set_ImportInfo(List`1<string> value);
    internal bool IsSetImportInfo();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ProtocolType get_ProtocolType();
    public void set_ProtocolType(ProtocolType value);
    internal bool IsSetProtocolType();
    public string get_RouteSelectionExpression();
    public void set_RouteSelectionExpression(string value);
    internal bool IsSetRouteSelectionExpression();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
    public List`1<string> get_Warnings();
    public void set_Warnings(List`1<string> value);
    internal bool IsSetWarnings();
}
public class Amazon.ApiGatewayV2.Model.UpdateAuthorizerRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _authorizerCredentialsArn;
    private string _authorizerId;
    private string _authorizerPayloadFormatVersion;
    private Nullable`1<int> _authorizerResultTtlInSeconds;
    private AuthorizerType _authorizerType;
    private string _authorizerUri;
    private Nullable`1<bool> _enableSimpleResponses;
    private List`1<string> _identitySource;
    private string _identityValidationExpression;
    private JWTConfiguration _jwtConfiguration;
    private string _name;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string AuthorizerCredentialsArn { get; public set; }
    [AWSPropertyAttribute]
public string AuthorizerId { get; public set; }
    public string AuthorizerPayloadFormatVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AuthorizerResultTtlInSeconds { get; public set; }
    public AuthorizerType AuthorizerType { get; public set; }
    public string AuthorizerUri { get; public set; }
    public Nullable`1<bool> EnableSimpleResponses { get; public set; }
    public List`1<string> IdentitySource { get; public set; }
    public string IdentityValidationExpression { get; public set; }
    public JWTConfiguration JwtConfiguration { get; public set; }
    public string Name { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_AuthorizerCredentialsArn();
    public void set_AuthorizerCredentialsArn(string value);
    internal bool IsSetAuthorizerCredentialsArn();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_AuthorizerPayloadFormatVersion();
    public void set_AuthorizerPayloadFormatVersion(string value);
    internal bool IsSetAuthorizerPayloadFormatVersion();
    public Nullable`1<int> get_AuthorizerResultTtlInSeconds();
    public void set_AuthorizerResultTtlInSeconds(Nullable`1<int> value);
    internal bool IsSetAuthorizerResultTtlInSeconds();
    public AuthorizerType get_AuthorizerType();
    public void set_AuthorizerType(AuthorizerType value);
    internal bool IsSetAuthorizerType();
    public string get_AuthorizerUri();
    public void set_AuthorizerUri(string value);
    internal bool IsSetAuthorizerUri();
    public Nullable`1<bool> get_EnableSimpleResponses();
    public void set_EnableSimpleResponses(Nullable`1<bool> value);
    internal bool IsSetEnableSimpleResponses();
    public List`1<string> get_IdentitySource();
    public void set_IdentitySource(List`1<string> value);
    internal bool IsSetIdentitySource();
    public string get_IdentityValidationExpression();
    public void set_IdentityValidationExpression(string value);
    internal bool IsSetIdentityValidationExpression();
    public JWTConfiguration get_JwtConfiguration();
    public void set_JwtConfiguration(JWTConfiguration value);
    internal bool IsSetJwtConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.ApiGatewayV2.Model.UpdateAuthorizerResponse : AmazonWebServiceResponse {
    private string _authorizerCredentialsArn;
    private string _authorizerId;
    private string _authorizerPayloadFormatVersion;
    private Nullable`1<int> _authorizerResultTtlInSeconds;
    private AuthorizerType _authorizerType;
    private string _authorizerUri;
    private Nullable`1<bool> _enableSimpleResponses;
    private List`1<string> _identitySource;
    private string _identityValidationExpression;
    private JWTConfiguration _jwtConfiguration;
    private string _name;
    public string AuthorizerCredentialsArn { get; public set; }
    public string AuthorizerId { get; public set; }
    public string AuthorizerPayloadFormatVersion { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AuthorizerResultTtlInSeconds { get; public set; }
    public AuthorizerType AuthorizerType { get; public set; }
    public string AuthorizerUri { get; public set; }
    public Nullable`1<bool> EnableSimpleResponses { get; public set; }
    public List`1<string> IdentitySource { get; public set; }
    public string IdentityValidationExpression { get; public set; }
    public JWTConfiguration JwtConfiguration { get; public set; }
    public string Name { get; public set; }
    public string get_AuthorizerCredentialsArn();
    public void set_AuthorizerCredentialsArn(string value);
    internal bool IsSetAuthorizerCredentialsArn();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_AuthorizerPayloadFormatVersion();
    public void set_AuthorizerPayloadFormatVersion(string value);
    internal bool IsSetAuthorizerPayloadFormatVersion();
    public Nullable`1<int> get_AuthorizerResultTtlInSeconds();
    public void set_AuthorizerResultTtlInSeconds(Nullable`1<int> value);
    internal bool IsSetAuthorizerResultTtlInSeconds();
    public AuthorizerType get_AuthorizerType();
    public void set_AuthorizerType(AuthorizerType value);
    internal bool IsSetAuthorizerType();
    public string get_AuthorizerUri();
    public void set_AuthorizerUri(string value);
    internal bool IsSetAuthorizerUri();
    public Nullable`1<bool> get_EnableSimpleResponses();
    public void set_EnableSimpleResponses(Nullable`1<bool> value);
    internal bool IsSetEnableSimpleResponses();
    public List`1<string> get_IdentitySource();
    public void set_IdentitySource(List`1<string> value);
    internal bool IsSetIdentitySource();
    public string get_IdentityValidationExpression();
    public void set_IdentityValidationExpression(string value);
    internal bool IsSetIdentityValidationExpression();
    public JWTConfiguration get_JwtConfiguration();
    public void set_JwtConfiguration(JWTConfiguration value);
    internal bool IsSetJwtConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.ApiGatewayV2.Model.UpdateDeploymentRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _deploymentId;
    private string _description;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    [AWSPropertyAttribute]
public string DeploymentId { get; public set; }
    public string Description { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.ApiGatewayV2.Model.UpdateDeploymentResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _autoDeployed;
    private Nullable`1<DateTime> _createdDate;
    private string _deploymentId;
    private DeploymentStatus _deploymentStatus;
    private string _deploymentStatusMessage;
    private string _description;
    public Nullable`1<bool> AutoDeployed { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string DeploymentId { get; public set; }
    public DeploymentStatus DeploymentStatus { get; public set; }
    public string DeploymentStatusMessage { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<bool> get_AutoDeployed();
    public void set_AutoDeployed(Nullable`1<bool> value);
    internal bool IsSetAutoDeployed();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public DeploymentStatus get_DeploymentStatus();
    public void set_DeploymentStatus(DeploymentStatus value);
    internal bool IsSetDeploymentStatus();
    public string get_DeploymentStatusMessage();
    public void set_DeploymentStatusMessage(string value);
    internal bool IsSetDeploymentStatusMessage();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
}
public class Amazon.ApiGatewayV2.Model.UpdateDomainNameRequest : AmazonApiGatewayV2Request {
    private string _domainName;
    private List`1<DomainNameConfiguration> _domainNameConfigurations;
    private MutualTlsAuthenticationInput _mutualTlsAuthentication;
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    public List`1<DomainNameConfiguration> DomainNameConfigurations { get; public set; }
    public MutualTlsAuthenticationInput MutualTlsAuthentication { get; public set; }
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public List`1<DomainNameConfiguration> get_DomainNameConfigurations();
    public void set_DomainNameConfigurations(List`1<DomainNameConfiguration> value);
    internal bool IsSetDomainNameConfigurations();
    public MutualTlsAuthenticationInput get_MutualTlsAuthentication();
    public void set_MutualTlsAuthentication(MutualTlsAuthenticationInput value);
    internal bool IsSetMutualTlsAuthentication();
}
public class Amazon.ApiGatewayV2.Model.UpdateDomainNameResponse : AmazonWebServiceResponse {
    private string _apiMappingSelectionExpression;
    private string _domainName;
    private List`1<DomainNameConfiguration> _domainNameConfigurations;
    private MutualTlsAuthentication _mutualTlsAuthentication;
    private Dictionary`2<string, string> _tags;
    public string ApiMappingSelectionExpression { get; public set; }
    public string DomainName { get; public set; }
    public List`1<DomainNameConfiguration> DomainNameConfigurations { get; public set; }
    public MutualTlsAuthentication MutualTlsAuthentication { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ApiMappingSelectionExpression();
    public void set_ApiMappingSelectionExpression(string value);
    internal bool IsSetApiMappingSelectionExpression();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public List`1<DomainNameConfiguration> get_DomainNameConfigurations();
    public void set_DomainNameConfigurations(List`1<DomainNameConfiguration> value);
    internal bool IsSetDomainNameConfigurations();
    public MutualTlsAuthentication get_MutualTlsAuthentication();
    public void set_MutualTlsAuthentication(MutualTlsAuthentication value);
    internal bool IsSetMutualTlsAuthentication();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.UpdateIntegrationRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _connectionId;
    private ConnectionType _connectionType;
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _credentialsArn;
    private string _description;
    private string _integrationId;
    private string _integrationMethod;
    private string _integrationSubtype;
    private IntegrationType _integrationType;
    private string _integrationUri;
    private PassthroughBehavior _passthroughBehavior;
    private string _payloadFormatVersion;
    private Dictionary`2<string, string> _requestParameters;
    private Dictionary`2<string, string> _requestTemplates;
    private Dictionary`2<string, Dictionary`2<string, string>> _responseParameters;
    private string _templateSelectionExpression;
    private Nullable`1<int> _timeoutInMillis;
    private TlsConfigInput _tlsConfig;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string ConnectionId { get; public set; }
    public ConnectionType ConnectionType { get; public set; }
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    public string CredentialsArn { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationId { get; public set; }
    public string IntegrationMethod { get; public set; }
    public string IntegrationSubtype { get; public set; }
    public IntegrationType IntegrationType { get; public set; }
    public string IntegrationUri { get; public set; }
    public PassthroughBehavior PassthroughBehavior { get; public set; }
    public string PayloadFormatVersion { get; public set; }
    public Dictionary`2<string, string> RequestParameters { get; public set; }
    public Dictionary`2<string, string> RequestTemplates { get; public set; }
    public Dictionary`2<string, Dictionary`2<string, string>> ResponseParameters { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TimeoutInMillis { get; public set; }
    public TlsConfigInput TlsConfig { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ConnectionId();
    public void set_ConnectionId(string value);
    internal bool IsSetConnectionId();
    public ConnectionType get_ConnectionType();
    public void set_ConnectionType(ConnectionType value);
    internal bool IsSetConnectionType();
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_CredentialsArn();
    public void set_CredentialsArn(string value);
    internal bool IsSetCredentialsArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
    public string get_IntegrationMethod();
    public void set_IntegrationMethod(string value);
    internal bool IsSetIntegrationMethod();
    public string get_IntegrationSubtype();
    public void set_IntegrationSubtype(string value);
    internal bool IsSetIntegrationSubtype();
    public IntegrationType get_IntegrationType();
    public void set_IntegrationType(IntegrationType value);
    internal bool IsSetIntegrationType();
    public string get_IntegrationUri();
    public void set_IntegrationUri(string value);
    internal bool IsSetIntegrationUri();
    public PassthroughBehavior get_PassthroughBehavior();
    public void set_PassthroughBehavior(PassthroughBehavior value);
    internal bool IsSetPassthroughBehavior();
    public string get_PayloadFormatVersion();
    public void set_PayloadFormatVersion(string value);
    internal bool IsSetPayloadFormatVersion();
    public Dictionary`2<string, string> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, string> value);
    internal bool IsSetRequestParameters();
    public Dictionary`2<string, string> get_RequestTemplates();
    public void set_RequestTemplates(Dictionary`2<string, string> value);
    internal bool IsSetRequestTemplates();
    public Dictionary`2<string, Dictionary`2<string, string>> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, Dictionary`2<string, string>> value);
    internal bool IsSetResponseParameters();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
    public Nullable`1<int> get_TimeoutInMillis();
    public void set_TimeoutInMillis(Nullable`1<int> value);
    internal bool IsSetTimeoutInMillis();
    public TlsConfigInput get_TlsConfig();
    public void set_TlsConfig(TlsConfigInput value);
    internal bool IsSetTlsConfig();
}
public class Amazon.ApiGatewayV2.Model.UpdateIntegrationResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _apiGatewayManaged;
    private string _connectionId;
    private ConnectionType _connectionType;
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _credentialsArn;
    private string _description;
    private string _integrationId;
    private string _integrationMethod;
    private string _integrationResponseSelectionExpression;
    private string _integrationSubtype;
    private IntegrationType _integrationType;
    private string _integrationUri;
    private PassthroughBehavior _passthroughBehavior;
    private string _payloadFormatVersion;
    private Dictionary`2<string, string> _requestParameters;
    private Dictionary`2<string, string> _requestTemplates;
    private Dictionary`2<string, Dictionary`2<string, string>> _responseParameters;
    private string _templateSelectionExpression;
    private Nullable`1<int> _timeoutInMillis;
    private TlsConfig _tlsConfig;
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public string ConnectionId { get; public set; }
    public ConnectionType ConnectionType { get; public set; }
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    public string CredentialsArn { get; public set; }
    public string Description { get; public set; }
    public string IntegrationId { get; public set; }
    public string IntegrationMethod { get; public set; }
    public string IntegrationResponseSelectionExpression { get; public set; }
    public string IntegrationSubtype { get; public set; }
    public IntegrationType IntegrationType { get; public set; }
    public string IntegrationUri { get; public set; }
    public PassthroughBehavior PassthroughBehavior { get; public set; }
    public string PayloadFormatVersion { get; public set; }
    public Dictionary`2<string, string> RequestParameters { get; public set; }
    public Dictionary`2<string, string> RequestTemplates { get; public set; }
    public Dictionary`2<string, Dictionary`2<string, string>> ResponseParameters { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TimeoutInMillis { get; public set; }
    public TlsConfig TlsConfig { get; public set; }
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public string get_ConnectionId();
    public void set_ConnectionId(string value);
    internal bool IsSetConnectionId();
    public ConnectionType get_ConnectionType();
    public void set_ConnectionType(ConnectionType value);
    internal bool IsSetConnectionType();
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_CredentialsArn();
    public void set_CredentialsArn(string value);
    internal bool IsSetCredentialsArn();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
    public string get_IntegrationMethod();
    public void set_IntegrationMethod(string value);
    internal bool IsSetIntegrationMethod();
    public string get_IntegrationResponseSelectionExpression();
    public void set_IntegrationResponseSelectionExpression(string value);
    internal bool IsSetIntegrationResponseSelectionExpression();
    public string get_IntegrationSubtype();
    public void set_IntegrationSubtype(string value);
    internal bool IsSetIntegrationSubtype();
    public IntegrationType get_IntegrationType();
    public void set_IntegrationType(IntegrationType value);
    internal bool IsSetIntegrationType();
    public string get_IntegrationUri();
    public void set_IntegrationUri(string value);
    internal bool IsSetIntegrationUri();
    public PassthroughBehavior get_PassthroughBehavior();
    public void set_PassthroughBehavior(PassthroughBehavior value);
    internal bool IsSetPassthroughBehavior();
    public string get_PayloadFormatVersion();
    public void set_PayloadFormatVersion(string value);
    internal bool IsSetPayloadFormatVersion();
    public Dictionary`2<string, string> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, string> value);
    internal bool IsSetRequestParameters();
    public Dictionary`2<string, string> get_RequestTemplates();
    public void set_RequestTemplates(Dictionary`2<string, string> value);
    internal bool IsSetRequestTemplates();
    public Dictionary`2<string, Dictionary`2<string, string>> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, Dictionary`2<string, string>> value);
    internal bool IsSetResponseParameters();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
    public Nullable`1<int> get_TimeoutInMillis();
    public void set_TimeoutInMillis(Nullable`1<int> value);
    internal bool IsSetTimeoutInMillis();
    public TlsConfig get_TlsConfig();
    public void set_TlsConfig(TlsConfig value);
    internal bool IsSetTlsConfig();
}
public class Amazon.ApiGatewayV2.Model.UpdateIntegrationResponseRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _integrationId;
    private string _integrationResponseId;
    private string _integrationResponseKey;
    private Dictionary`2<string, string> _responseParameters;
    private Dictionary`2<string, string> _responseTemplates;
    private string _templateSelectionExpression;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationId { get; public set; }
    [AWSPropertyAttribute]
public string IntegrationResponseId { get; public set; }
    public string IntegrationResponseKey { get; public set; }
    public Dictionary`2<string, string> ResponseParameters { get; public set; }
    public Dictionary`2<string, string> ResponseTemplates { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_IntegrationId();
    public void set_IntegrationId(string value);
    internal bool IsSetIntegrationId();
    public string get_IntegrationResponseId();
    public void set_IntegrationResponseId(string value);
    internal bool IsSetIntegrationResponseId();
    public string get_IntegrationResponseKey();
    public void set_IntegrationResponseKey(string value);
    internal bool IsSetIntegrationResponseKey();
    public Dictionary`2<string, string> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, string> value);
    internal bool IsSetResponseParameters();
    public Dictionary`2<string, string> get_ResponseTemplates();
    public void set_ResponseTemplates(Dictionary`2<string, string> value);
    internal bool IsSetResponseTemplates();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
}
public class Amazon.ApiGatewayV2.Model.UpdateIntegrationResponseResponse : AmazonWebServiceResponse {
    private ContentHandlingStrategy _contentHandlingStrategy;
    private string _integrationResponseId;
    private string _integrationResponseKey;
    private Dictionary`2<string, string> _responseParameters;
    private Dictionary`2<string, string> _responseTemplates;
    private string _templateSelectionExpression;
    public ContentHandlingStrategy ContentHandlingStrategy { get; public set; }
    public string IntegrationResponseId { get; public set; }
    public string IntegrationResponseKey { get; public set; }
    public Dictionary`2<string, string> ResponseParameters { get; public set; }
    public Dictionary`2<string, string> ResponseTemplates { get; public set; }
    public string TemplateSelectionExpression { get; public set; }
    public ContentHandlingStrategy get_ContentHandlingStrategy();
    public void set_ContentHandlingStrategy(ContentHandlingStrategy value);
    internal bool IsSetContentHandlingStrategy();
    public string get_IntegrationResponseId();
    public void set_IntegrationResponseId(string value);
    internal bool IsSetIntegrationResponseId();
    public string get_IntegrationResponseKey();
    public void set_IntegrationResponseKey(string value);
    internal bool IsSetIntegrationResponseKey();
    public Dictionary`2<string, string> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, string> value);
    internal bool IsSetResponseParameters();
    public Dictionary`2<string, string> get_ResponseTemplates();
    public void set_ResponseTemplates(Dictionary`2<string, string> value);
    internal bool IsSetResponseTemplates();
    public string get_TemplateSelectionExpression();
    public void set_TemplateSelectionExpression(string value);
    internal bool IsSetTemplateSelectionExpression();
}
public class Amazon.ApiGatewayV2.Model.UpdateModelRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _contentType;
    private string _description;
    private string _modelId;
    private string _name;
    private string _schema;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string ContentType { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string ModelId { get; public set; }
    public string Name { get; public set; }
    public string Schema { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ModelId();
    public void set_ModelId(string value);
    internal bool IsSetModelId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
}
public class Amazon.ApiGatewayV2.Model.UpdateModelResponse : AmazonWebServiceResponse {
    private string _contentType;
    private string _description;
    private string _modelId;
    private string _name;
    private string _schema;
    public string ContentType { get; public set; }
    public string Description { get; public set; }
    public string ModelId { get; public set; }
    public string Name { get; public set; }
    public string Schema { get; public set; }
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_ModelId();
    public void set_ModelId(string value);
    internal bool IsSetModelId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
}
public class Amazon.ApiGatewayV2.Model.UpdateRouteRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private Nullable`1<bool> _apiKeyRequired;
    private List`1<string> _authorizationScopes;
    private AuthorizationType _authorizationType;
    private string _authorizerId;
    private string _modelSelectionExpression;
    private string _operationName;
    private Dictionary`2<string, string> _requestModels;
    private Dictionary`2<string, ParameterConstraints> _requestParameters;
    private string _routeId;
    private string _routeKey;
    private string _routeResponseSelectionExpression;
    private string _target;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public Nullable`1<bool> ApiKeyRequired { get; public set; }
    public List`1<string> AuthorizationScopes { get; public set; }
    public AuthorizationType AuthorizationType { get; public set; }
    public string AuthorizerId { get; public set; }
    public string ModelSelectionExpression { get; public set; }
    public string OperationName { get; public set; }
    public Dictionary`2<string, string> RequestModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> RequestParameters { get; public set; }
    [AWSPropertyAttribute]
public string RouteId { get; public set; }
    public string RouteKey { get; public set; }
    public string RouteResponseSelectionExpression { get; public set; }
    public string Target { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public Nullable`1<bool> get_ApiKeyRequired();
    public void set_ApiKeyRequired(Nullable`1<bool> value);
    internal bool IsSetApiKeyRequired();
    public List`1<string> get_AuthorizationScopes();
    public void set_AuthorizationScopes(List`1<string> value);
    internal bool IsSetAuthorizationScopes();
    public AuthorizationType get_AuthorizationType();
    public void set_AuthorizationType(AuthorizationType value);
    internal bool IsSetAuthorizationType();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public string get_OperationName();
    public void set_OperationName(string value);
    internal bool IsSetOperationName();
    public Dictionary`2<string, string> get_RequestModels();
    public void set_RequestModels(Dictionary`2<string, string> value);
    internal bool IsSetRequestModels();
    public Dictionary`2<string, ParameterConstraints> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetRequestParameters();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
    public string get_RouteKey();
    public void set_RouteKey(string value);
    internal bool IsSetRouteKey();
    public string get_RouteResponseSelectionExpression();
    public void set_RouteResponseSelectionExpression(string value);
    internal bool IsSetRouteResponseSelectionExpression();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
}
public class Amazon.ApiGatewayV2.Model.UpdateRouteResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _apiGatewayManaged;
    private Nullable`1<bool> _apiKeyRequired;
    private List`1<string> _authorizationScopes;
    private AuthorizationType _authorizationType;
    private string _authorizerId;
    private string _modelSelectionExpression;
    private string _operationName;
    private Dictionary`2<string, string> _requestModels;
    private Dictionary`2<string, ParameterConstraints> _requestParameters;
    private string _routeId;
    private string _routeKey;
    private string _routeResponseSelectionExpression;
    private string _target;
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public Nullable`1<bool> ApiKeyRequired { get; public set; }
    public List`1<string> AuthorizationScopes { get; public set; }
    public AuthorizationType AuthorizationType { get; public set; }
    public string AuthorizerId { get; public set; }
    public string ModelSelectionExpression { get; public set; }
    public string OperationName { get; public set; }
    public Dictionary`2<string, string> RequestModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> RequestParameters { get; public set; }
    public string RouteId { get; public set; }
    public string RouteKey { get; public set; }
    public string RouteResponseSelectionExpression { get; public set; }
    public string Target { get; public set; }
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public Nullable`1<bool> get_ApiKeyRequired();
    public void set_ApiKeyRequired(Nullable`1<bool> value);
    internal bool IsSetApiKeyRequired();
    public List`1<string> get_AuthorizationScopes();
    public void set_AuthorizationScopes(List`1<string> value);
    internal bool IsSetAuthorizationScopes();
    public AuthorizationType get_AuthorizationType();
    public void set_AuthorizationType(AuthorizationType value);
    internal bool IsSetAuthorizationType();
    public string get_AuthorizerId();
    public void set_AuthorizerId(string value);
    internal bool IsSetAuthorizerId();
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public string get_OperationName();
    public void set_OperationName(string value);
    internal bool IsSetOperationName();
    public Dictionary`2<string, string> get_RequestModels();
    public void set_RequestModels(Dictionary`2<string, string> value);
    internal bool IsSetRequestModels();
    public Dictionary`2<string, ParameterConstraints> get_RequestParameters();
    public void set_RequestParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetRequestParameters();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
    public string get_RouteKey();
    public void set_RouteKey(string value);
    internal bool IsSetRouteKey();
    public string get_RouteResponseSelectionExpression();
    public void set_RouteResponseSelectionExpression(string value);
    internal bool IsSetRouteResponseSelectionExpression();
    public string get_Target();
    public void set_Target(string value);
    internal bool IsSetTarget();
}
public class Amazon.ApiGatewayV2.Model.UpdateRouteResponseRequest : AmazonApiGatewayV2Request {
    private string _apiId;
    private string _modelSelectionExpression;
    private Dictionary`2<string, string> _responseModels;
    private Dictionary`2<string, ParameterConstraints> _responseParameters;
    private string _routeId;
    private string _routeResponseId;
    private string _routeResponseKey;
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public string ModelSelectionExpression { get; public set; }
    public Dictionary`2<string, string> ResponseModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> ResponseParameters { get; public set; }
    [AWSPropertyAttribute]
public string RouteId { get; public set; }
    [AWSPropertyAttribute]
public string RouteResponseId { get; public set; }
    public string RouteResponseKey { get; public set; }
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public Dictionary`2<string, string> get_ResponseModels();
    public void set_ResponseModels(Dictionary`2<string, string> value);
    internal bool IsSetResponseModels();
    public Dictionary`2<string, ParameterConstraints> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetResponseParameters();
    public string get_RouteId();
    public void set_RouteId(string value);
    internal bool IsSetRouteId();
    public string get_RouteResponseId();
    public void set_RouteResponseId(string value);
    internal bool IsSetRouteResponseId();
    public string get_RouteResponseKey();
    public void set_RouteResponseKey(string value);
    internal bool IsSetRouteResponseKey();
}
public class Amazon.ApiGatewayV2.Model.UpdateRouteResponseResponse : AmazonWebServiceResponse {
    private string _modelSelectionExpression;
    private Dictionary`2<string, string> _responseModels;
    private Dictionary`2<string, ParameterConstraints> _responseParameters;
    private string _routeResponseId;
    private string _routeResponseKey;
    public string ModelSelectionExpression { get; public set; }
    public Dictionary`2<string, string> ResponseModels { get; public set; }
    public Dictionary`2<string, ParameterConstraints> ResponseParameters { get; public set; }
    public string RouteResponseId { get; public set; }
    public string RouteResponseKey { get; public set; }
    public string get_ModelSelectionExpression();
    public void set_ModelSelectionExpression(string value);
    internal bool IsSetModelSelectionExpression();
    public Dictionary`2<string, string> get_ResponseModels();
    public void set_ResponseModels(Dictionary`2<string, string> value);
    internal bool IsSetResponseModels();
    public Dictionary`2<string, ParameterConstraints> get_ResponseParameters();
    public void set_ResponseParameters(Dictionary`2<string, ParameterConstraints> value);
    internal bool IsSetResponseParameters();
    public string get_RouteResponseId();
    public void set_RouteResponseId(string value);
    internal bool IsSetRouteResponseId();
    public string get_RouteResponseKey();
    public void set_RouteResponseKey(string value);
    internal bool IsSetRouteResponseKey();
}
public class Amazon.ApiGatewayV2.Model.UpdateStageRequest : AmazonApiGatewayV2Request {
    private AccessLogSettings _accessLogSettings;
    private string _apiId;
    private Nullable`1<bool> _autoDeploy;
    private string _clientCertificateId;
    private RouteSettings _defaultRouteSettings;
    private string _deploymentId;
    private string _description;
    private Dictionary`2<string, RouteSettings> _routeSettings;
    private string _stageName;
    private Dictionary`2<string, string> _stageVariables;
    public AccessLogSettings AccessLogSettings { get; public set; }
    [AWSPropertyAttribute]
public string ApiId { get; public set; }
    public Nullable`1<bool> AutoDeploy { get; public set; }
    public string ClientCertificateId { get; public set; }
    public RouteSettings DefaultRouteSettings { get; public set; }
    public string DeploymentId { get; public set; }
    public string Description { get; public set; }
    public Dictionary`2<string, RouteSettings> RouteSettings { get; public set; }
    [AWSPropertyAttribute]
public string StageName { get; public set; }
    public Dictionary`2<string, string> StageVariables { get; public set; }
    public AccessLogSettings get_AccessLogSettings();
    public void set_AccessLogSettings(AccessLogSettings value);
    internal bool IsSetAccessLogSettings();
    public string get_ApiId();
    public void set_ApiId(string value);
    internal bool IsSetApiId();
    public Nullable`1<bool> get_AutoDeploy();
    public void set_AutoDeploy(Nullable`1<bool> value);
    internal bool IsSetAutoDeploy();
    public string get_ClientCertificateId();
    public void set_ClientCertificateId(string value);
    internal bool IsSetClientCertificateId();
    public RouteSettings get_DefaultRouteSettings();
    public void set_DefaultRouteSettings(RouteSettings value);
    internal bool IsSetDefaultRouteSettings();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Dictionary`2<string, RouteSettings> get_RouteSettings();
    public void set_RouteSettings(Dictionary`2<string, RouteSettings> value);
    internal bool IsSetRouteSettings();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
    public Dictionary`2<string, string> get_StageVariables();
    public void set_StageVariables(Dictionary`2<string, string> value);
    internal bool IsSetStageVariables();
}
public class Amazon.ApiGatewayV2.Model.UpdateStageResponse : AmazonWebServiceResponse {
    private AccessLogSettings _accessLogSettings;
    private Nullable`1<bool> _apiGatewayManaged;
    private Nullable`1<bool> _autoDeploy;
    private string _clientCertificateId;
    private Nullable`1<DateTime> _createdDate;
    private RouteSettings _defaultRouteSettings;
    private string _deploymentId;
    private string _description;
    private string _lastDeploymentStatusMessage;
    private Nullable`1<DateTime> _lastUpdatedDate;
    private Dictionary`2<string, RouteSettings> _routeSettings;
    private string _stageName;
    private Dictionary`2<string, string> _stageVariables;
    private Dictionary`2<string, string> _tags;
    public AccessLogSettings AccessLogSettings { get; public set; }
    public Nullable`1<bool> ApiGatewayManaged { get; public set; }
    public Nullable`1<bool> AutoDeploy { get; public set; }
    public string ClientCertificateId { get; public set; }
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public RouteSettings DefaultRouteSettings { get; public set; }
    public string DeploymentId { get; public set; }
    public string Description { get; public set; }
    public string LastDeploymentStatusMessage { get; public set; }
    public Nullable`1<DateTime> LastUpdatedDate { get; public set; }
    public Dictionary`2<string, RouteSettings> RouteSettings { get; public set; }
    public string StageName { get; public set; }
    public Dictionary`2<string, string> StageVariables { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public AccessLogSettings get_AccessLogSettings();
    public void set_AccessLogSettings(AccessLogSettings value);
    internal bool IsSetAccessLogSettings();
    public Nullable`1<bool> get_ApiGatewayManaged();
    public void set_ApiGatewayManaged(Nullable`1<bool> value);
    internal bool IsSetApiGatewayManaged();
    public Nullable`1<bool> get_AutoDeploy();
    public void set_AutoDeploy(Nullable`1<bool> value);
    internal bool IsSetAutoDeploy();
    public string get_ClientCertificateId();
    public void set_ClientCertificateId(string value);
    internal bool IsSetClientCertificateId();
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public RouteSettings get_DefaultRouteSettings();
    public void set_DefaultRouteSettings(RouteSettings value);
    internal bool IsSetDefaultRouteSettings();
    public string get_DeploymentId();
    public void set_DeploymentId(string value);
    internal bool IsSetDeploymentId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_LastDeploymentStatusMessage();
    public void set_LastDeploymentStatusMessage(string value);
    internal bool IsSetLastDeploymentStatusMessage();
    public Nullable`1<DateTime> get_LastUpdatedDate();
    public void set_LastUpdatedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedDate();
    public Dictionary`2<string, RouteSettings> get_RouteSettings();
    public void set_RouteSettings(Dictionary`2<string, RouteSettings> value);
    internal bool IsSetRouteSettings();
    public string get_StageName();
    public void set_StageName(string value);
    internal bool IsSetStageName();
    public Dictionary`2<string, string> get_StageVariables();
    public void set_StageVariables(Dictionary`2<string, string> value);
    internal bool IsSetStageVariables();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.ApiGatewayV2.Model.UpdateVpcLinkRequest : AmazonApiGatewayV2Request {
    private string _name;
    private string _vpcLinkId;
    public string Name { get; public set; }
    [AWSPropertyAttribute]
public string VpcLinkId { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_VpcLinkId();
    public void set_VpcLinkId(string value);
    internal bool IsSetVpcLinkId();
}
public class Amazon.ApiGatewayV2.Model.UpdateVpcLinkResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdDate;
    private string _name;
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    private Dictionary`2<string, string> _tags;
    private string _vpcLinkId;
    private VpcLinkStatus _vpcLinkStatus;
    private string _vpcLinkStatusMessage;
    private VpcLinkVersion _vpcLinkVersion;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    public string Name { get; public set; }
    public List`1<string> SecurityGroupIds { get; public set; }
    public List`1<string> SubnetIds { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public string VpcLinkId { get; public set; }
    public VpcLinkStatus VpcLinkStatus { get; public set; }
    public string VpcLinkStatusMessage { get; public set; }
    public VpcLinkVersion VpcLinkVersion { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_VpcLinkId();
    public void set_VpcLinkId(string value);
    internal bool IsSetVpcLinkId();
    public VpcLinkStatus get_VpcLinkStatus();
    public void set_VpcLinkStatus(VpcLinkStatus value);
    internal bool IsSetVpcLinkStatus();
    public string get_VpcLinkStatusMessage();
    public void set_VpcLinkStatusMessage(string value);
    internal bool IsSetVpcLinkStatusMessage();
    public VpcLinkVersion get_VpcLinkVersion();
    public void set_VpcLinkVersion(VpcLinkVersion value);
    internal bool IsSetVpcLinkVersion();
}
public class Amazon.ApiGatewayV2.Model.VpcLink : object {
    private Nullable`1<DateTime> _createdDate;
    private string _name;
    private List`1<string> _securityGroupIds;
    private List`1<string> _subnetIds;
    private Dictionary`2<string, string> _tags;
    private string _vpcLinkId;
    private VpcLinkStatus _vpcLinkStatus;
    private string _vpcLinkStatusMessage;
    private VpcLinkVersion _vpcLinkVersion;
    public Nullable`1<DateTime> CreatedDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SecurityGroupIds { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VpcLinkId { get; public set; }
    public VpcLinkStatus VpcLinkStatus { get; public set; }
    public string VpcLinkStatusMessage { get; public set; }
    public VpcLinkVersion VpcLinkVersion { get; public set; }
    public Nullable`1<DateTime> get_CreatedDate();
    public void set_CreatedDate(Nullable`1<DateTime> value);
    internal bool IsSetCreatedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_SecurityGroupIds();
    public void set_SecurityGroupIds(List`1<string> value);
    internal bool IsSetSecurityGroupIds();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_VpcLinkId();
    public void set_VpcLinkId(string value);
    internal bool IsSetVpcLinkId();
    public VpcLinkStatus get_VpcLinkStatus();
    public void set_VpcLinkStatus(VpcLinkStatus value);
    internal bool IsSetVpcLinkStatus();
    public string get_VpcLinkStatusMessage();
    public void set_VpcLinkStatusMessage(string value);
    internal bool IsSetVpcLinkStatusMessage();
    public VpcLinkVersion get_VpcLinkVersion();
    public void set_VpcLinkVersion(VpcLinkVersion value);
    internal bool IsSetVpcLinkVersion();
}
public class Amazon.ApiGatewayV2.PassthroughBehavior : ConstantClass {
    public static PassthroughBehavior NEVER;
    public static PassthroughBehavior WHEN_NO_MATCH;
    public static PassthroughBehavior WHEN_NO_TEMPLATES;
    public PassthroughBehavior(string value);
    private static PassthroughBehavior();
    public static PassthroughBehavior FindValue(string value);
    public static PassthroughBehavior op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.ProtocolType : ConstantClass {
    public static ProtocolType HTTP;
    public static ProtocolType WEBSOCKET;
    public ProtocolType(string value);
    private static ProtocolType();
    public static ProtocolType FindValue(string value);
    public static ProtocolType op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.SecurityPolicy : ConstantClass {
    public static SecurityPolicy TLS_1_0;
    public static SecurityPolicy TLS_1_2;
    public SecurityPolicy(string value);
    private static SecurityPolicy();
    public static SecurityPolicy FindValue(string value);
    public static SecurityPolicy op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.VpcLinkStatus : ConstantClass {
    public static VpcLinkStatus AVAILABLE;
    public static VpcLinkStatus DELETING;
    public static VpcLinkStatus FAILED;
    public static VpcLinkStatus INACTIVE;
    public static VpcLinkStatus PENDING;
    public VpcLinkStatus(string value);
    private static VpcLinkStatus();
    public static VpcLinkStatus FindValue(string value);
    public static VpcLinkStatus op_Implicit(string value);
}
public class Amazon.ApiGatewayV2.VpcLinkVersion : ConstantClass {
    public static VpcLinkVersion V2;
    public VpcLinkVersion(string value);
    private static VpcLinkVersion();
    public static VpcLinkVersion FindValue(string value);
    public static VpcLinkVersion op_Implicit(string value);
}
