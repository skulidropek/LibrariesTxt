public class Amazon.CloudFront.AmazonCloudFrontClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ICloudFrontPaginatorFactory _paginators;
    public ICloudFrontPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonCloudFrontClient(RegionEndpoint region);
    public AmazonCloudFrontClient(AmazonCloudFrontConfig config);
    public AmazonCloudFrontClient(AWSCredentials credentials);
    public AmazonCloudFrontClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonCloudFrontClient(AWSCredentials credentials, AmazonCloudFrontConfig clientConfig);
    public AmazonCloudFrontClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonCloudFrontClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonCloudFrontClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonCloudFrontConfig clientConfig);
    public AmazonCloudFrontClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonCloudFrontClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonCloudFrontClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonCloudFrontConfig clientConfig);
    private static AmazonCloudFrontClient();
    public sealed virtual ICloudFrontPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AssociateAliasResponse AssociateAlias(AssociateAliasRequest request);
    public virtual Task`1<AssociateAliasResponse> AssociateAliasAsync(AssociateAliasRequest request, CancellationToken cancellationToken);
    internal virtual CopyDistributionResponse CopyDistribution(CopyDistributionRequest request);
    public virtual Task`1<CopyDistributionResponse> CopyDistributionAsync(CopyDistributionRequest request, CancellationToken cancellationToken);
    internal virtual CreateCachePolicyResponse CreateCachePolicy(CreateCachePolicyRequest request);
    public virtual Task`1<CreateCachePolicyResponse> CreateCachePolicyAsync(CreateCachePolicyRequest request, CancellationToken cancellationToken);
    internal virtual CreateCloudFrontOriginAccessIdentityResponse CreateCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request);
    public virtual Task`1<CreateCloudFrontOriginAccessIdentityResponse> CreateCloudFrontOriginAccessIdentityAsync(CreateCloudFrontOriginAccessIdentityRequest request, CancellationToken cancellationToken);
    internal virtual CreateContinuousDeploymentPolicyResponse CreateContinuousDeploymentPolicy(CreateContinuousDeploymentPolicyRequest request);
    public virtual Task`1<CreateContinuousDeploymentPolicyResponse> CreateContinuousDeploymentPolicyAsync(CreateContinuousDeploymentPolicyRequest request, CancellationToken cancellationToken);
    internal virtual CreateDistributionResponse CreateDistribution(CreateDistributionRequest request);
    public virtual Task`1<CreateDistributionResponse> CreateDistributionAsync(CreateDistributionRequest request, CancellationToken cancellationToken);
    internal virtual CreateDistributionWithTagsResponse CreateDistributionWithTags(CreateDistributionWithTagsRequest request);
    public virtual Task`1<CreateDistributionWithTagsResponse> CreateDistributionWithTagsAsync(CreateDistributionWithTagsRequest request, CancellationToken cancellationToken);
    internal virtual CreateFieldLevelEncryptionConfigResponse CreateFieldLevelEncryptionConfig(CreateFieldLevelEncryptionConfigRequest request);
    public virtual Task`1<CreateFieldLevelEncryptionConfigResponse> CreateFieldLevelEncryptionConfigAsync(CreateFieldLevelEncryptionConfigRequest request, CancellationToken cancellationToken);
    internal virtual CreateFieldLevelEncryptionProfileResponse CreateFieldLevelEncryptionProfile(CreateFieldLevelEncryptionProfileRequest request);
    public virtual Task`1<CreateFieldLevelEncryptionProfileResponse> CreateFieldLevelEncryptionProfileAsync(CreateFieldLevelEncryptionProfileRequest request, CancellationToken cancellationToken);
    internal virtual CreateFunctionResponse CreateFunction(CreateFunctionRequest request);
    public virtual Task`1<CreateFunctionResponse> CreateFunctionAsync(CreateFunctionRequest request, CancellationToken cancellationToken);
    internal virtual CreateInvalidationResponse CreateInvalidation(CreateInvalidationRequest request);
    public virtual Task`1<CreateInvalidationResponse> CreateInvalidationAsync(CreateInvalidationRequest request, CancellationToken cancellationToken);
    internal virtual CreateKeyGroupResponse CreateKeyGroup(CreateKeyGroupRequest request);
    public virtual Task`1<CreateKeyGroupResponse> CreateKeyGroupAsync(CreateKeyGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateKeyValueStoreResponse CreateKeyValueStore(CreateKeyValueStoreRequest request);
    public virtual Task`1<CreateKeyValueStoreResponse> CreateKeyValueStoreAsync(CreateKeyValueStoreRequest request, CancellationToken cancellationToken);
    internal virtual CreateMonitoringSubscriptionResponse CreateMonitoringSubscription(CreateMonitoringSubscriptionRequest request);
    public virtual Task`1<CreateMonitoringSubscriptionResponse> CreateMonitoringSubscriptionAsync(CreateMonitoringSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual CreateOriginAccessControlResponse CreateOriginAccessControl(CreateOriginAccessControlRequest request);
    public virtual Task`1<CreateOriginAccessControlResponse> CreateOriginAccessControlAsync(CreateOriginAccessControlRequest request, CancellationToken cancellationToken);
    internal virtual CreateOriginRequestPolicyResponse CreateOriginRequestPolicy(CreateOriginRequestPolicyRequest request);
    public virtual Task`1<CreateOriginRequestPolicyResponse> CreateOriginRequestPolicyAsync(CreateOriginRequestPolicyRequest request, CancellationToken cancellationToken);
    internal virtual CreatePublicKeyResponse CreatePublicKey(CreatePublicKeyRequest request);
    public virtual Task`1<CreatePublicKeyResponse> CreatePublicKeyAsync(CreatePublicKeyRequest request, CancellationToken cancellationToken);
    internal virtual CreateRealtimeLogConfigResponse CreateRealtimeLogConfig(CreateRealtimeLogConfigRequest request);
    public virtual Task`1<CreateRealtimeLogConfigResponse> CreateRealtimeLogConfigAsync(CreateRealtimeLogConfigRequest request, CancellationToken cancellationToken);
    internal virtual CreateResponseHeadersPolicyResponse CreateResponseHeadersPolicy(CreateResponseHeadersPolicyRequest request);
    public virtual Task`1<CreateResponseHeadersPolicyResponse> CreateResponseHeadersPolicyAsync(CreateResponseHeadersPolicyRequest request, CancellationToken cancellationToken);
    internal virtual CreateStreamingDistributionResponse CreateStreamingDistribution(CreateStreamingDistributionRequest request);
    public virtual Task`1<CreateStreamingDistributionResponse> CreateStreamingDistributionAsync(CreateStreamingDistributionRequest request, CancellationToken cancellationToken);
    internal virtual CreateStreamingDistributionWithTagsResponse CreateStreamingDistributionWithTags(CreateStreamingDistributionWithTagsRequest request);
    public virtual Task`1<CreateStreamingDistributionWithTagsResponse> CreateStreamingDistributionWithTagsAsync(CreateStreamingDistributionWithTagsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCachePolicyResponse DeleteCachePolicy(DeleteCachePolicyRequest request);
    public virtual Task`1<DeleteCachePolicyResponse> DeleteCachePolicyAsync(DeleteCachePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCloudFrontOriginAccessIdentityResponse DeleteCloudFrontOriginAccessIdentity();
    internal virtual DeleteCloudFrontOriginAccessIdentityResponse DeleteCloudFrontOriginAccessIdentity(DeleteCloudFrontOriginAccessIdentityRequest request);
    public virtual Task`1<DeleteCloudFrontOriginAccessIdentityResponse> DeleteCloudFrontOriginAccessIdentityAsync(CancellationToken cancellationToken);
    public virtual Task`1<DeleteCloudFrontOriginAccessIdentityResponse> DeleteCloudFrontOriginAccessIdentityAsync(DeleteCloudFrontOriginAccessIdentityRequest request, CancellationToken cancellationToken);
    internal virtual DeleteContinuousDeploymentPolicyResponse DeleteContinuousDeploymentPolicy(DeleteContinuousDeploymentPolicyRequest request);
    public virtual Task`1<DeleteContinuousDeploymentPolicyResponse> DeleteContinuousDeploymentPolicyAsync(DeleteContinuousDeploymentPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDistributionResponse DeleteDistribution();
    internal virtual DeleteDistributionResponse DeleteDistribution(DeleteDistributionRequest request);
    public virtual Task`1<DeleteDistributionResponse> DeleteDistributionAsync(CancellationToken cancellationToken);
    public virtual Task`1<DeleteDistributionResponse> DeleteDistributionAsync(DeleteDistributionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFieldLevelEncryptionConfigResponse DeleteFieldLevelEncryptionConfig(DeleteFieldLevelEncryptionConfigRequest request);
    public virtual Task`1<DeleteFieldLevelEncryptionConfigResponse> DeleteFieldLevelEncryptionConfigAsync(DeleteFieldLevelEncryptionConfigRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFieldLevelEncryptionProfileResponse DeleteFieldLevelEncryptionProfile(DeleteFieldLevelEncryptionProfileRequest request);
    public virtual Task`1<DeleteFieldLevelEncryptionProfileResponse> DeleteFieldLevelEncryptionProfileAsync(DeleteFieldLevelEncryptionProfileRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFunctionResponse DeleteFunction(DeleteFunctionRequest request);
    public virtual Task`1<DeleteFunctionResponse> DeleteFunctionAsync(DeleteFunctionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteKeyGroupResponse DeleteKeyGroup(DeleteKeyGroupRequest request);
    public virtual Task`1<DeleteKeyGroupResponse> DeleteKeyGroupAsync(DeleteKeyGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteKeyValueStoreResponse DeleteKeyValueStore(DeleteKeyValueStoreRequest request);
    public virtual Task`1<DeleteKeyValueStoreResponse> DeleteKeyValueStoreAsync(DeleteKeyValueStoreRequest request, CancellationToken cancellationToken);
    internal virtual DeleteMonitoringSubscriptionResponse DeleteMonitoringSubscription(DeleteMonitoringSubscriptionRequest request);
    public virtual Task`1<DeleteMonitoringSubscriptionResponse> DeleteMonitoringSubscriptionAsync(DeleteMonitoringSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteOriginAccessControlResponse DeleteOriginAccessControl(DeleteOriginAccessControlRequest request);
    public virtual Task`1<DeleteOriginAccessControlResponse> DeleteOriginAccessControlAsync(DeleteOriginAccessControlRequest request, CancellationToken cancellationToken);
    internal virtual DeleteOriginRequestPolicyResponse DeleteOriginRequestPolicy(DeleteOriginRequestPolicyRequest request);
    public virtual Task`1<DeleteOriginRequestPolicyResponse> DeleteOriginRequestPolicyAsync(DeleteOriginRequestPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeletePublicKeyResponse DeletePublicKey(DeletePublicKeyRequest request);
    public virtual Task`1<DeletePublicKeyResponse> DeletePublicKeyAsync(DeletePublicKeyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteRealtimeLogConfigResponse DeleteRealtimeLogConfig(DeleteRealtimeLogConfigRequest request);
    public virtual Task`1<DeleteRealtimeLogConfigResponse> DeleteRealtimeLogConfigAsync(DeleteRealtimeLogConfigRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResponseHeadersPolicyResponse DeleteResponseHeadersPolicy(DeleteResponseHeadersPolicyRequest request);
    public virtual Task`1<DeleteResponseHeadersPolicyResponse> DeleteResponseHeadersPolicyAsync(DeleteResponseHeadersPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteStreamingDistributionResponse DeleteStreamingDistribution();
    internal virtual DeleteStreamingDistributionResponse DeleteStreamingDistribution(DeleteStreamingDistributionRequest request);
    public virtual Task`1<DeleteStreamingDistributionResponse> DeleteStreamingDistributionAsync(CancellationToken cancellationToken);
    public virtual Task`1<DeleteStreamingDistributionResponse> DeleteStreamingDistributionAsync(DeleteStreamingDistributionRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFunctionResponse DescribeFunction(DescribeFunctionRequest request);
    public virtual Task`1<DescribeFunctionResponse> DescribeFunctionAsync(DescribeFunctionRequest request, CancellationToken cancellationToken);
    internal virtual DescribeKeyValueStoreResponse DescribeKeyValueStore(DescribeKeyValueStoreRequest request);
    public virtual Task`1<DescribeKeyValueStoreResponse> DescribeKeyValueStoreAsync(DescribeKeyValueStoreRequest request, CancellationToken cancellationToken);
    internal virtual GetCachePolicyResponse GetCachePolicy(GetCachePolicyRequest request);
    public virtual Task`1<GetCachePolicyResponse> GetCachePolicyAsync(GetCachePolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetCachePolicyConfigResponse GetCachePolicyConfig(GetCachePolicyConfigRequest request);
    public virtual Task`1<GetCachePolicyConfigResponse> GetCachePolicyConfigAsync(GetCachePolicyConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetCloudFrontOriginAccessIdentityResponse GetCloudFrontOriginAccessIdentity();
    internal virtual GetCloudFrontOriginAccessIdentityResponse GetCloudFrontOriginAccessIdentity(GetCloudFrontOriginAccessIdentityRequest request);
    public virtual Task`1<GetCloudFrontOriginAccessIdentityResponse> GetCloudFrontOriginAccessIdentityAsync(CancellationToken cancellationToken);
    public virtual Task`1<GetCloudFrontOriginAccessIdentityResponse> GetCloudFrontOriginAccessIdentityAsync(GetCloudFrontOriginAccessIdentityRequest request, CancellationToken cancellationToken);
    internal virtual GetCloudFrontOriginAccessIdentityConfigResponse GetCloudFrontOriginAccessIdentityConfig();
    internal virtual GetCloudFrontOriginAccessIdentityConfigResponse GetCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request);
    public virtual Task`1<GetCloudFrontOriginAccessIdentityConfigResponse> GetCloudFrontOriginAccessIdentityConfigAsync(CancellationToken cancellationToken);
    public virtual Task`1<GetCloudFrontOriginAccessIdentityConfigResponse> GetCloudFrontOriginAccessIdentityConfigAsync(GetCloudFrontOriginAccessIdentityConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetContinuousDeploymentPolicyResponse GetContinuousDeploymentPolicy(GetContinuousDeploymentPolicyRequest request);
    public virtual Task`1<GetContinuousDeploymentPolicyResponse> GetContinuousDeploymentPolicyAsync(GetContinuousDeploymentPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetContinuousDeploymentPolicyConfigResponse GetContinuousDeploymentPolicyConfig(GetContinuousDeploymentPolicyConfigRequest request);
    public virtual Task`1<GetContinuousDeploymentPolicyConfigResponse> GetContinuousDeploymentPolicyConfigAsync(GetContinuousDeploymentPolicyConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetDistributionResponse GetDistribution();
    internal virtual GetDistributionResponse GetDistribution(GetDistributionRequest request);
    public virtual Task`1<GetDistributionResponse> GetDistributionAsync(CancellationToken cancellationToken);
    public virtual Task`1<GetDistributionResponse> GetDistributionAsync(GetDistributionRequest request, CancellationToken cancellationToken);
    internal virtual GetDistributionConfigResponse GetDistributionConfig();
    internal virtual GetDistributionConfigResponse GetDistributionConfig(GetDistributionConfigRequest request);
    public virtual Task`1<GetDistributionConfigResponse> GetDistributionConfigAsync(CancellationToken cancellationToken);
    public virtual Task`1<GetDistributionConfigResponse> GetDistributionConfigAsync(GetDistributionConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetFieldLevelEncryptionResponse GetFieldLevelEncryption(GetFieldLevelEncryptionRequest request);
    public virtual Task`1<GetFieldLevelEncryptionResponse> GetFieldLevelEncryptionAsync(GetFieldLevelEncryptionRequest request, CancellationToken cancellationToken);
    internal virtual GetFieldLevelEncryptionConfigResponse GetFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request);
    public virtual Task`1<GetFieldLevelEncryptionConfigResponse> GetFieldLevelEncryptionConfigAsync(GetFieldLevelEncryptionConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetFieldLevelEncryptionProfileResponse GetFieldLevelEncryptionProfile(GetFieldLevelEncryptionProfileRequest request);
    public virtual Task`1<GetFieldLevelEncryptionProfileResponse> GetFieldLevelEncryptionProfileAsync(GetFieldLevelEncryptionProfileRequest request, CancellationToken cancellationToken);
    internal virtual GetFieldLevelEncryptionProfileConfigResponse GetFieldLevelEncryptionProfileConfig(GetFieldLevelEncryptionProfileConfigRequest request);
    public virtual Task`1<GetFieldLevelEncryptionProfileConfigResponse> GetFieldLevelEncryptionProfileConfigAsync(GetFieldLevelEncryptionProfileConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetFunctionResponse GetFunction(GetFunctionRequest request);
    public virtual Task`1<GetFunctionResponse> GetFunctionAsync(GetFunctionRequest request, CancellationToken cancellationToken);
    internal virtual GetInvalidationResponse GetInvalidation(GetInvalidationRequest request);
    public virtual Task`1<GetInvalidationResponse> GetInvalidationAsync(GetInvalidationRequest request, CancellationToken cancellationToken);
    internal virtual GetKeyGroupResponse GetKeyGroup(GetKeyGroupRequest request);
    public virtual Task`1<GetKeyGroupResponse> GetKeyGroupAsync(GetKeyGroupRequest request, CancellationToken cancellationToken);
    internal virtual GetKeyGroupConfigResponse GetKeyGroupConfig(GetKeyGroupConfigRequest request);
    public virtual Task`1<GetKeyGroupConfigResponse> GetKeyGroupConfigAsync(GetKeyGroupConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetMonitoringSubscriptionResponse GetMonitoringSubscription(GetMonitoringSubscriptionRequest request);
    public virtual Task`1<GetMonitoringSubscriptionResponse> GetMonitoringSubscriptionAsync(GetMonitoringSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual GetOriginAccessControlResponse GetOriginAccessControl(GetOriginAccessControlRequest request);
    public virtual Task`1<GetOriginAccessControlResponse> GetOriginAccessControlAsync(GetOriginAccessControlRequest request, CancellationToken cancellationToken);
    internal virtual GetOriginAccessControlConfigResponse GetOriginAccessControlConfig(GetOriginAccessControlConfigRequest request);
    public virtual Task`1<GetOriginAccessControlConfigResponse> GetOriginAccessControlConfigAsync(GetOriginAccessControlConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetOriginRequestPolicyResponse GetOriginRequestPolicy(GetOriginRequestPolicyRequest request);
    public virtual Task`1<GetOriginRequestPolicyResponse> GetOriginRequestPolicyAsync(GetOriginRequestPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetOriginRequestPolicyConfigResponse GetOriginRequestPolicyConfig(GetOriginRequestPolicyConfigRequest request);
    public virtual Task`1<GetOriginRequestPolicyConfigResponse> GetOriginRequestPolicyConfigAsync(GetOriginRequestPolicyConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetPublicKeyResponse GetPublicKey(GetPublicKeyRequest request);
    public virtual Task`1<GetPublicKeyResponse> GetPublicKeyAsync(GetPublicKeyRequest request, CancellationToken cancellationToken);
    internal virtual GetPublicKeyConfigResponse GetPublicKeyConfig(GetPublicKeyConfigRequest request);
    public virtual Task`1<GetPublicKeyConfigResponse> GetPublicKeyConfigAsync(GetPublicKeyConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetRealtimeLogConfigResponse GetRealtimeLogConfig(GetRealtimeLogConfigRequest request);
    public virtual Task`1<GetRealtimeLogConfigResponse> GetRealtimeLogConfigAsync(GetRealtimeLogConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetResponseHeadersPolicyResponse GetResponseHeadersPolicy(GetResponseHeadersPolicyRequest request);
    public virtual Task`1<GetResponseHeadersPolicyResponse> GetResponseHeadersPolicyAsync(GetResponseHeadersPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetResponseHeadersPolicyConfigResponse GetResponseHeadersPolicyConfig(GetResponseHeadersPolicyConfigRequest request);
    public virtual Task`1<GetResponseHeadersPolicyConfigResponse> GetResponseHeadersPolicyConfigAsync(GetResponseHeadersPolicyConfigRequest request, CancellationToken cancellationToken);
    internal virtual GetStreamingDistributionResponse GetStreamingDistribution();
    internal virtual GetStreamingDistributionResponse GetStreamingDistribution(GetStreamingDistributionRequest request);
    public virtual Task`1<GetStreamingDistributionResponse> GetStreamingDistributionAsync(CancellationToken cancellationToken);
    public virtual Task`1<GetStreamingDistributionResponse> GetStreamingDistributionAsync(GetStreamingDistributionRequest request, CancellationToken cancellationToken);
    internal virtual GetStreamingDistributionConfigResponse GetStreamingDistributionConfig();
    internal virtual GetStreamingDistributionConfigResponse GetStreamingDistributionConfig(GetStreamingDistributionConfigRequest request);
    public virtual Task`1<GetStreamingDistributionConfigResponse> GetStreamingDistributionConfigAsync(CancellationToken cancellationToken);
    public virtual Task`1<GetStreamingDistributionConfigResponse> GetStreamingDistributionConfigAsync(GetStreamingDistributionConfigRequest request, CancellationToken cancellationToken);
    internal virtual ListCachePoliciesResponse ListCachePolicies(ListCachePoliciesRequest request);
    public virtual Task`1<ListCachePoliciesResponse> ListCachePoliciesAsync(ListCachePoliciesRequest request, CancellationToken cancellationToken);
    internal virtual ListCloudFrontOriginAccessIdentitiesResponse ListCloudFrontOriginAccessIdentities();
    internal virtual ListCloudFrontOriginAccessIdentitiesResponse ListCloudFrontOriginAccessIdentities(ListCloudFrontOriginAccessIdentitiesRequest request);
    public virtual Task`1<ListCloudFrontOriginAccessIdentitiesResponse> ListCloudFrontOriginAccessIdentitiesAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListCloudFrontOriginAccessIdentitiesResponse> ListCloudFrontOriginAccessIdentitiesAsync(ListCloudFrontOriginAccessIdentitiesRequest request, CancellationToken cancellationToken);
    internal virtual ListConflictingAliasesResponse ListConflictingAliases(ListConflictingAliasesRequest request);
    public virtual Task`1<ListConflictingAliasesResponse> ListConflictingAliasesAsync(ListConflictingAliasesRequest request, CancellationToken cancellationToken);
    internal virtual ListContinuousDeploymentPoliciesResponse ListContinuousDeploymentPolicies(ListContinuousDeploymentPoliciesRequest request);
    public virtual Task`1<ListContinuousDeploymentPoliciesResponse> ListContinuousDeploymentPoliciesAsync(ListContinuousDeploymentPoliciesRequest request, CancellationToken cancellationToken);
    internal virtual ListDistributionsResponse ListDistributions();
    internal virtual ListDistributionsResponse ListDistributions(ListDistributionsRequest request);
    public virtual Task`1<ListDistributionsResponse> ListDistributionsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListDistributionsResponse> ListDistributionsAsync(ListDistributionsRequest request, CancellationToken cancellationToken);
    internal virtual ListDistributionsByCachePolicyIdResponse ListDistributionsByCachePolicyId(ListDistributionsByCachePolicyIdRequest request);
    public virtual Task`1<ListDistributionsByCachePolicyIdResponse> ListDistributionsByCachePolicyIdAsync(ListDistributionsByCachePolicyIdRequest request, CancellationToken cancellationToken);
    internal virtual ListDistributionsByKeyGroupResponse ListDistributionsByKeyGroup(ListDistributionsByKeyGroupRequest request);
    public virtual Task`1<ListDistributionsByKeyGroupResponse> ListDistributionsByKeyGroupAsync(ListDistributionsByKeyGroupRequest request, CancellationToken cancellationToken);
    internal virtual ListDistributionsByOriginRequestPolicyIdResponse ListDistributionsByOriginRequestPolicyId(ListDistributionsByOriginRequestPolicyIdRequest request);
    public virtual Task`1<ListDistributionsByOriginRequestPolicyIdResponse> ListDistributionsByOriginRequestPolicyIdAsync(ListDistributionsByOriginRequestPolicyIdRequest request, CancellationToken cancellationToken);
    internal virtual ListDistributionsByRealtimeLogConfigResponse ListDistributionsByRealtimeLogConfig(ListDistributionsByRealtimeLogConfigRequest request);
    public virtual Task`1<ListDistributionsByRealtimeLogConfigResponse> ListDistributionsByRealtimeLogConfigAsync(ListDistributionsByRealtimeLogConfigRequest request, CancellationToken cancellationToken);
    internal virtual ListDistributionsByResponseHeadersPolicyIdResponse ListDistributionsByResponseHeadersPolicyId(ListDistributionsByResponseHeadersPolicyIdRequest request);
    public virtual Task`1<ListDistributionsByResponseHeadersPolicyIdResponse> ListDistributionsByResponseHeadersPolicyIdAsync(ListDistributionsByResponseHeadersPolicyIdRequest request, CancellationToken cancellationToken);
    internal virtual ListDistributionsByWebACLIdResponse ListDistributionsByWebACLId(ListDistributionsByWebACLIdRequest request);
    public virtual Task`1<ListDistributionsByWebACLIdResponse> ListDistributionsByWebACLIdAsync(ListDistributionsByWebACLIdRequest request, CancellationToken cancellationToken);
    internal virtual ListFieldLevelEncryptionConfigsResponse ListFieldLevelEncryptionConfigs(ListFieldLevelEncryptionConfigsRequest request);
    public virtual Task`1<ListFieldLevelEncryptionConfigsResponse> ListFieldLevelEncryptionConfigsAsync(ListFieldLevelEncryptionConfigsRequest request, CancellationToken cancellationToken);
    internal virtual ListFieldLevelEncryptionProfilesResponse ListFieldLevelEncryptionProfiles(ListFieldLevelEncryptionProfilesRequest request);
    public virtual Task`1<ListFieldLevelEncryptionProfilesResponse> ListFieldLevelEncryptionProfilesAsync(ListFieldLevelEncryptionProfilesRequest request, CancellationToken cancellationToken);
    internal virtual ListFunctionsResponse ListFunctions(ListFunctionsRequest request);
    public virtual Task`1<ListFunctionsResponse> ListFunctionsAsync(ListFunctionsRequest request, CancellationToken cancellationToken);
    internal virtual ListInvalidationsResponse ListInvalidations(ListInvalidationsRequest request);
    public virtual Task`1<ListInvalidationsResponse> ListInvalidationsAsync(ListInvalidationsRequest request, CancellationToken cancellationToken);
    internal virtual ListKeyGroupsResponse ListKeyGroups(ListKeyGroupsRequest request);
    public virtual Task`1<ListKeyGroupsResponse> ListKeyGroupsAsync(ListKeyGroupsRequest request, CancellationToken cancellationToken);
    internal virtual ListKeyValueStoresResponse ListKeyValueStores(ListKeyValueStoresRequest request);
    public virtual Task`1<ListKeyValueStoresResponse> ListKeyValueStoresAsync(ListKeyValueStoresRequest request, CancellationToken cancellationToken);
    internal virtual ListOriginAccessControlsResponse ListOriginAccessControls(ListOriginAccessControlsRequest request);
    public virtual Task`1<ListOriginAccessControlsResponse> ListOriginAccessControlsAsync(ListOriginAccessControlsRequest request, CancellationToken cancellationToken);
    internal virtual ListOriginRequestPoliciesResponse ListOriginRequestPolicies(ListOriginRequestPoliciesRequest request);
    public virtual Task`1<ListOriginRequestPoliciesResponse> ListOriginRequestPoliciesAsync(ListOriginRequestPoliciesRequest request, CancellationToken cancellationToken);
    internal virtual ListPublicKeysResponse ListPublicKeys(ListPublicKeysRequest request);
    public virtual Task`1<ListPublicKeysResponse> ListPublicKeysAsync(ListPublicKeysRequest request, CancellationToken cancellationToken);
    internal virtual ListRealtimeLogConfigsResponse ListRealtimeLogConfigs(ListRealtimeLogConfigsRequest request);
    public virtual Task`1<ListRealtimeLogConfigsResponse> ListRealtimeLogConfigsAsync(ListRealtimeLogConfigsRequest request, CancellationToken cancellationToken);
    internal virtual ListResponseHeadersPoliciesResponse ListResponseHeadersPolicies(ListResponseHeadersPoliciesRequest request);
    public virtual Task`1<ListResponseHeadersPoliciesResponse> ListResponseHeadersPoliciesAsync(ListResponseHeadersPoliciesRequest request, CancellationToken cancellationToken);
    internal virtual ListStreamingDistributionsResponse ListStreamingDistributions();
    internal virtual ListStreamingDistributionsResponse ListStreamingDistributions(ListStreamingDistributionsRequest request);
    public virtual Task`1<ListStreamingDistributionsResponse> ListStreamingDistributionsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListStreamingDistributionsResponse> ListStreamingDistributionsAsync(ListStreamingDistributionsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual PublishFunctionResponse PublishFunction(PublishFunctionRequest request);
    public virtual Task`1<PublishFunctionResponse> PublishFunctionAsync(PublishFunctionRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual TestFunctionResponse TestFunction(TestFunctionRequest request);
    public virtual Task`1<TestFunctionResponse> TestFunctionAsync(TestFunctionRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateCachePolicyResponse UpdateCachePolicy(UpdateCachePolicyRequest request);
    public virtual Task`1<UpdateCachePolicyResponse> UpdateCachePolicyAsync(UpdateCachePolicyRequest request, CancellationToken cancellationToken);
    internal virtual UpdateCloudFrontOriginAccessIdentityResponse UpdateCloudFrontOriginAccessIdentity(UpdateCloudFrontOriginAccessIdentityRequest request);
    public virtual Task`1<UpdateCloudFrontOriginAccessIdentityResponse> UpdateCloudFrontOriginAccessIdentityAsync(UpdateCloudFrontOriginAccessIdentityRequest request, CancellationToken cancellationToken);
    internal virtual UpdateContinuousDeploymentPolicyResponse UpdateContinuousDeploymentPolicy(UpdateContinuousDeploymentPolicyRequest request);
    public virtual Task`1<UpdateContinuousDeploymentPolicyResponse> UpdateContinuousDeploymentPolicyAsync(UpdateContinuousDeploymentPolicyRequest request, CancellationToken cancellationToken);
    internal virtual UpdateDistributionResponse UpdateDistribution(UpdateDistributionRequest request);
    public virtual Task`1<UpdateDistributionResponse> UpdateDistributionAsync(UpdateDistributionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateDistributionWithStagingConfigResponse UpdateDistributionWithStagingConfig(UpdateDistributionWithStagingConfigRequest request);
    public virtual Task`1<UpdateDistributionWithStagingConfigResponse> UpdateDistributionWithStagingConfigAsync(UpdateDistributionWithStagingConfigRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFieldLevelEncryptionConfigResponse UpdateFieldLevelEncryptionConfig(UpdateFieldLevelEncryptionConfigRequest request);
    public virtual Task`1<UpdateFieldLevelEncryptionConfigResponse> UpdateFieldLevelEncryptionConfigAsync(UpdateFieldLevelEncryptionConfigRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFieldLevelEncryptionProfileResponse UpdateFieldLevelEncryptionProfile(UpdateFieldLevelEncryptionProfileRequest request);
    public virtual Task`1<UpdateFieldLevelEncryptionProfileResponse> UpdateFieldLevelEncryptionProfileAsync(UpdateFieldLevelEncryptionProfileRequest request, CancellationToken cancellationToken);
    internal virtual UpdateFunctionResponse UpdateFunction(UpdateFunctionRequest request);
    public virtual Task`1<UpdateFunctionResponse> UpdateFunctionAsync(UpdateFunctionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateKeyGroupResponse UpdateKeyGroup(UpdateKeyGroupRequest request);
    public virtual Task`1<UpdateKeyGroupResponse> UpdateKeyGroupAsync(UpdateKeyGroupRequest request, CancellationToken cancellationToken);
    internal virtual UpdateKeyValueStoreResponse UpdateKeyValueStore(UpdateKeyValueStoreRequest request);
    public virtual Task`1<UpdateKeyValueStoreResponse> UpdateKeyValueStoreAsync(UpdateKeyValueStoreRequest request, CancellationToken cancellationToken);
    internal virtual UpdateOriginAccessControlResponse UpdateOriginAccessControl(UpdateOriginAccessControlRequest request);
    public virtual Task`1<UpdateOriginAccessControlResponse> UpdateOriginAccessControlAsync(UpdateOriginAccessControlRequest request, CancellationToken cancellationToken);
    internal virtual UpdateOriginRequestPolicyResponse UpdateOriginRequestPolicy(UpdateOriginRequestPolicyRequest request);
    public virtual Task`1<UpdateOriginRequestPolicyResponse> UpdateOriginRequestPolicyAsync(UpdateOriginRequestPolicyRequest request, CancellationToken cancellationToken);
    internal virtual UpdatePublicKeyResponse UpdatePublicKey(UpdatePublicKeyRequest request);
    public virtual Task`1<UpdatePublicKeyResponse> UpdatePublicKeyAsync(UpdatePublicKeyRequest request, CancellationToken cancellationToken);
    internal virtual UpdateRealtimeLogConfigResponse UpdateRealtimeLogConfig(UpdateRealtimeLogConfigRequest request);
    public virtual Task`1<UpdateRealtimeLogConfigResponse> UpdateRealtimeLogConfigAsync(UpdateRealtimeLogConfigRequest request, CancellationToken cancellationToken);
    internal virtual UpdateResponseHeadersPolicyResponse UpdateResponseHeadersPolicy(UpdateResponseHeadersPolicyRequest request);
    public virtual Task`1<UpdateResponseHeadersPolicyResponse> UpdateResponseHeadersPolicyAsync(UpdateResponseHeadersPolicyRequest request, CancellationToken cancellationToken);
    internal virtual UpdateStreamingDistributionResponse UpdateStreamingDistribution(UpdateStreamingDistributionRequest request);
    public virtual Task`1<UpdateStreamingDistributionResponse> UpdateStreamingDistributionAsync(UpdateStreamingDistributionRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.CloudFront.AmazonCloudFrontConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonCloudFrontEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonCloudFrontConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.CloudFront.AmazonCloudFrontCookieSigner : object {
    private static string ExpiresKey;
    private static string SignatureKey;
    private static string PolicyKey;
    private static string KeyPairIdKey;
    public static CookiesForCannedPolicy GetCookiesForCannedPolicy(Protocols protocol, string distributionDomain, FileSystemInfo privateKey, string resourcePath, string keyPairId, DateTime expiresOn);
    public static CookiesForCannedPolicy GetCookiesForCannedPolicy(Protocols protocol, string distributionDomain, TextReader privateKey, string resourcePath, string keyPairId, DateTime expiresOn);
    public static CookiesForCannedPolicy GetCookiesForCannedPolicy(string resourceUrlOrPath, string keyPairId, FileSystemInfo privateKey, DateTime expiresOn);
    public static CookiesForCannedPolicy GetCookiesForCannedPolicy(string resourceUrlOrPath, string keyPairId, TextReader privateKey, DateTime expiresOn);
    public static CookiesForCustomPolicy GetCookiesForCustomPolicy(Protocols protocol, string distributionDomain, FileSystemInfo privateKey, string resourcePath, string keyPairId, DateTime expiresOn, DateTime activeFrom, string ipRange);
    public static CookiesForCustomPolicy GetCookiesForCustomPolicy(Protocols protocol, string distributionDomain, TextReader privateKey, string resourcePath, string keyPairId, DateTime expiresOn, DateTime activeFrom, string ipRange);
    public static CookiesForCustomPolicy GetCookiesForCustomPolicy(string resourceUrlOrPath, TextReader privateKey, string keyPairId, DateTime expiresOn, DateTime activeFrom, string ipRange);
    public static CookiesForCustomPolicy GetCookiesForCustomPolicy(Protocols protocol, string distributionDomain, TextReader privateKey, string resourcePath, string keyPairId, DateTime expiresOn, string ipRange);
    private static string GenerateResourcePath(Protocols protocol, string distributionDomain, string path);
}
public static class Amazon.CloudFront.AmazonCloudFrontDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonCloudFrontDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.CloudFront.AmazonCloudFrontException : AmazonServiceException {
    public AmazonCloudFrontException(string message);
    public AmazonCloudFrontException(string message, Exception innerException);
    public AmazonCloudFrontException(Exception innerException);
    public AmazonCloudFrontException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonCloudFrontException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.AmazonCloudFrontRequest : AmazonWebServiceRequest {
}
public static class Amazon.CloudFront.AmazonCloudFrontUrlSigner : object {
    public static string GetCannedSignedURL(Protocol protocol, string distributionDomain, FileSystemInfo privateKey, string resourcePath, string keyPairId, DateTime expiresOn);
    public static string GetCannedSignedURL(Protocol protocol, string distributionDomain, TextReader privateKey, string resourcePath, string keyPairId, DateTime expiresOn);
    public static string GetCannedSignedURL(string url, TextReader privateKey, string keyPairId, DateTime expiresOn);
    public static string GetCustomSignedURL(Protocol protocol, string distributionDomain, FileSystemInfo privateKey, string resourcePath, string keyPairId, DateTime expiresOn, DateTime activeFrom, string ipRange);
    public static string GetCustomSignedURL(Protocol protocol, string distributionDomain, TextReader privateKey, string resourcePath, string keyPairId, DateTime expiresOn, DateTime activeFrom, string ipRange);
    public static string GetCustomSignedURL(Protocol protocol, string distributionDomain, TextReader privateKey, string resourcePath, string keyPairId, DateTime expiresOn, string ipRange);
    public static string GetCustomSignedURL(string url, TextReader privateKey, string keyPairId, DateTime expiresOn, DateTime activeFrom, string ipRange);
    public static string GetCustomSignedURL(string url, TextReader privateKey, string keyPairId, DateTime expiresOn, string ipRange);
    public static string SignUrl(string resourceUrlOrPath, string keyPairId, FileInfo privateKey, string policy);
    public static string SignUrl(string resourceUrlOrPath, string keyPairId, TextReader privateKey, string policy);
    public static string SignUrlCanned(string resourceUrlOrPath, string keyPairId, FileInfo privateKey, DateTime expiresOn);
    public static string SignUrlCanned(string resourceUrlOrPath, string keyPairId, TextReader privateKey, DateTime expiresOn);
    public static string BuildPolicyForSignedUrl(string resourcePath, DateTime expiresOn, string limitToIpAddressCIDR, DateTime activeFrom);
    public static string BuildPolicyForSignedUrl(string resourcePath, DateTime expiresOn, string limitToIpAddressCIDR);
    internal static string MakeBytesUrlSafe(Byte[] bytes);
    internal static string MakeStringUrlSafe(string str);
    private static string GenerateResourcePath(Protocol protocol, string distributionDomain, string path);
    internal static Byte[] SignWithSha1RSA(Byte[] dataToSign, RSAParameters rsaParameters);
    internal static RSAParameters ConvertPEMToRSAParameters(TextReader privateKeyReader);
    private static SHA1 GetSHA1Provider();
    private static Byte[] GetRSAPKCS1SignatureFromSHA1(Byte[] hashedData, RSA providerRSA);
}
public class Amazon.CloudFront.CachePolicyCookieBehavior : ConstantClass {
    public static CachePolicyCookieBehavior All;
    public static CachePolicyCookieBehavior AllExcept;
    public static CachePolicyCookieBehavior None;
    public static CachePolicyCookieBehavior Whitelist;
    public CachePolicyCookieBehavior(string value);
    private static CachePolicyCookieBehavior();
    public static CachePolicyCookieBehavior FindValue(string value);
    public static CachePolicyCookieBehavior op_Implicit(string value);
}
public class Amazon.CloudFront.CachePolicyHeaderBehavior : ConstantClass {
    public static CachePolicyHeaderBehavior None;
    public static CachePolicyHeaderBehavior Whitelist;
    public CachePolicyHeaderBehavior(string value);
    private static CachePolicyHeaderBehavior();
    public static CachePolicyHeaderBehavior FindValue(string value);
    public static CachePolicyHeaderBehavior op_Implicit(string value);
}
public class Amazon.CloudFront.CachePolicyQueryStringBehavior : ConstantClass {
    public static CachePolicyQueryStringBehavior All;
    public static CachePolicyQueryStringBehavior AllExcept;
    public static CachePolicyQueryStringBehavior None;
    public static CachePolicyQueryStringBehavior Whitelist;
    public CachePolicyQueryStringBehavior(string value);
    private static CachePolicyQueryStringBehavior();
    public static CachePolicyQueryStringBehavior FindValue(string value);
    public static CachePolicyQueryStringBehavior op_Implicit(string value);
}
public class Amazon.CloudFront.CachePolicyType : ConstantClass {
    public static CachePolicyType Custom;
    public static CachePolicyType Managed;
    public CachePolicyType(string value);
    private static CachePolicyType();
    public static CachePolicyType FindValue(string value);
    public static CachePolicyType op_Implicit(string value);
}
public class Amazon.CloudFront.CertificateSource : ConstantClass {
    public static CertificateSource Acm;
    public static CertificateSource Cloudfront;
    public static CertificateSource Iam;
    public CertificateSource(string value);
    private static CertificateSource();
    public static CertificateSource FindValue(string value);
    public static CertificateSource op_Implicit(string value);
}
public class Amazon.CloudFront.ContinuousDeploymentPolicyType : ConstantClass {
    public static ContinuousDeploymentPolicyType SingleHeader;
    public static ContinuousDeploymentPolicyType SingleWeight;
    public ContinuousDeploymentPolicyType(string value);
    private static ContinuousDeploymentPolicyType();
    public static ContinuousDeploymentPolicyType FindValue(string value);
    public static ContinuousDeploymentPolicyType op_Implicit(string value);
}
public class Amazon.CloudFront.CookiesForCannedPolicy : SignedCookies {
    [CompilerGeneratedAttribute]
private KeyValuePair`2<string, string> <Expires>k__BackingField;
    public KeyValuePair`2<string, string> Expires { get; internal set; }
    [CompilerGeneratedAttribute]
public KeyValuePair`2<string, string> get_Expires();
    [CompilerGeneratedAttribute]
internal void set_Expires(KeyValuePair`2<string, string> value);
}
public class Amazon.CloudFront.CookiesForCustomPolicy : SignedCookies {
    [CompilerGeneratedAttribute]
private KeyValuePair`2<string, string> <Policy>k__BackingField;
    public KeyValuePair`2<string, string> Policy { get; internal set; }
    [CompilerGeneratedAttribute]
public KeyValuePair`2<string, string> get_Policy();
    [CompilerGeneratedAttribute]
internal void set_Policy(KeyValuePair`2<string, string> value);
}
public class Amazon.CloudFront.Endpoints.CloudFrontEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.CloudFront.EventType : ConstantClass {
    public static EventType OriginRequest;
    public static EventType OriginResponse;
    public static EventType ViewerRequest;
    public static EventType ViewerResponse;
    public EventType(string value);
    private static EventType();
    public static EventType FindValue(string value);
    public static EventType op_Implicit(string value);
}
public class Amazon.CloudFront.Format : ConstantClass {
    public static Format URLEncoded;
    public Format(string value);
    private static Format();
    public static Format FindValue(string value);
    public static Format op_Implicit(string value);
}
public class Amazon.CloudFront.FrameOptionsList : ConstantClass {
    public static FrameOptionsList DENY;
    public static FrameOptionsList SAMEORIGIN;
    public FrameOptionsList(string value);
    private static FrameOptionsList();
    public static FrameOptionsList FindValue(string value);
    public static FrameOptionsList op_Implicit(string value);
}
public class Amazon.CloudFront.FunctionRuntime : ConstantClass {
    public static FunctionRuntime CloudfrontJs10;
    public static FunctionRuntime CloudfrontJs20;
    public FunctionRuntime(string value);
    private static FunctionRuntime();
    public static FunctionRuntime FindValue(string value);
    public static FunctionRuntime op_Implicit(string value);
}
public class Amazon.CloudFront.FunctionStage : ConstantClass {
    public static FunctionStage DEVELOPMENT;
    public static FunctionStage LIVE;
    public FunctionStage(string value);
    private static FunctionStage();
    public static FunctionStage FindValue(string value);
    public static FunctionStage op_Implicit(string value);
}
public class Amazon.CloudFront.GeoRestrictionType : ConstantClass {
    public static GeoRestrictionType Blacklist;
    public static GeoRestrictionType None;
    public static GeoRestrictionType Whitelist;
    public GeoRestrictionType(string value);
    private static GeoRestrictionType();
    public static GeoRestrictionType FindValue(string value);
    public static GeoRestrictionType op_Implicit(string value);
}
public class Amazon.CloudFront.HttpVersion : ConstantClass {
    public static HttpVersion Http11;
    public static HttpVersion Http2;
    public static HttpVersion Http2and3;
    public static HttpVersion Http3;
    public HttpVersion(string value);
    private static HttpVersion();
    public static HttpVersion FindValue(string value);
    public static HttpVersion op_Implicit(string value);
}
public interface Amazon.CloudFront.IAmazonCloudFront {
    public ICloudFrontPaginatorFactory Paginators { get; }
    public abstract virtual ICloudFrontPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AssociateAliasResponse> AssociateAliasAsync(AssociateAliasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CopyDistributionResponse> CopyDistributionAsync(CopyDistributionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCachePolicyResponse> CreateCachePolicyAsync(CreateCachePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateCloudFrontOriginAccessIdentityResponse> CreateCloudFrontOriginAccessIdentityAsync(CreateCloudFrontOriginAccessIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateContinuousDeploymentPolicyResponse> CreateContinuousDeploymentPolicyAsync(CreateContinuousDeploymentPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDistributionResponse> CreateDistributionAsync(CreateDistributionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDistributionWithTagsResponse> CreateDistributionWithTagsAsync(CreateDistributionWithTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFieldLevelEncryptionConfigResponse> CreateFieldLevelEncryptionConfigAsync(CreateFieldLevelEncryptionConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFieldLevelEncryptionProfileResponse> CreateFieldLevelEncryptionProfileAsync(CreateFieldLevelEncryptionProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFunctionResponse> CreateFunctionAsync(CreateFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateInvalidationResponse> CreateInvalidationAsync(CreateInvalidationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateKeyGroupResponse> CreateKeyGroupAsync(CreateKeyGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateKeyValueStoreResponse> CreateKeyValueStoreAsync(CreateKeyValueStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateMonitoringSubscriptionResponse> CreateMonitoringSubscriptionAsync(CreateMonitoringSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateOriginAccessControlResponse> CreateOriginAccessControlAsync(CreateOriginAccessControlRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateOriginRequestPolicyResponse> CreateOriginRequestPolicyAsync(CreateOriginRequestPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreatePublicKeyResponse> CreatePublicKeyAsync(CreatePublicKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateRealtimeLogConfigResponse> CreateRealtimeLogConfigAsync(CreateRealtimeLogConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateResponseHeadersPolicyResponse> CreateResponseHeadersPolicyAsync(CreateResponseHeadersPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateStreamingDistributionResponse> CreateStreamingDistributionAsync(CreateStreamingDistributionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateStreamingDistributionWithTagsResponse> CreateStreamingDistributionWithTagsAsync(CreateStreamingDistributionWithTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCachePolicyResponse> DeleteCachePolicyAsync(DeleteCachePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCloudFrontOriginAccessIdentityResponse> DeleteCloudFrontOriginAccessIdentityAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCloudFrontOriginAccessIdentityResponse> DeleteCloudFrontOriginAccessIdentityAsync(DeleteCloudFrontOriginAccessIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteContinuousDeploymentPolicyResponse> DeleteContinuousDeploymentPolicyAsync(DeleteContinuousDeploymentPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDistributionResponse> DeleteDistributionAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDistributionResponse> DeleteDistributionAsync(DeleteDistributionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFieldLevelEncryptionConfigResponse> DeleteFieldLevelEncryptionConfigAsync(DeleteFieldLevelEncryptionConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFieldLevelEncryptionProfileResponse> DeleteFieldLevelEncryptionProfileAsync(DeleteFieldLevelEncryptionProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFunctionResponse> DeleteFunctionAsync(DeleteFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteKeyGroupResponse> DeleteKeyGroupAsync(DeleteKeyGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteKeyValueStoreResponse> DeleteKeyValueStoreAsync(DeleteKeyValueStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMonitoringSubscriptionResponse> DeleteMonitoringSubscriptionAsync(DeleteMonitoringSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteOriginAccessControlResponse> DeleteOriginAccessControlAsync(DeleteOriginAccessControlRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteOriginRequestPolicyResponse> DeleteOriginRequestPolicyAsync(DeleteOriginRequestPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeletePublicKeyResponse> DeletePublicKeyAsync(DeletePublicKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteRealtimeLogConfigResponse> DeleteRealtimeLogConfigAsync(DeleteRealtimeLogConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResponseHeadersPolicyResponse> DeleteResponseHeadersPolicyAsync(DeleteResponseHeadersPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteStreamingDistributionResponse> DeleteStreamingDistributionAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteStreamingDistributionResponse> DeleteStreamingDistributionAsync(DeleteStreamingDistributionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFunctionResponse> DescribeFunctionAsync(DescribeFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeKeyValueStoreResponse> DescribeKeyValueStoreAsync(DescribeKeyValueStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCachePolicyResponse> GetCachePolicyAsync(GetCachePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCachePolicyConfigResponse> GetCachePolicyConfigAsync(GetCachePolicyConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCloudFrontOriginAccessIdentityResponse> GetCloudFrontOriginAccessIdentityAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCloudFrontOriginAccessIdentityResponse> GetCloudFrontOriginAccessIdentityAsync(GetCloudFrontOriginAccessIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCloudFrontOriginAccessIdentityConfigResponse> GetCloudFrontOriginAccessIdentityConfigAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCloudFrontOriginAccessIdentityConfigResponse> GetCloudFrontOriginAccessIdentityConfigAsync(GetCloudFrontOriginAccessIdentityConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetContinuousDeploymentPolicyResponse> GetContinuousDeploymentPolicyAsync(GetContinuousDeploymentPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetContinuousDeploymentPolicyConfigResponse> GetContinuousDeploymentPolicyConfigAsync(GetContinuousDeploymentPolicyConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDistributionResponse> GetDistributionAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDistributionResponse> GetDistributionAsync(GetDistributionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDistributionConfigResponse> GetDistributionConfigAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDistributionConfigResponse> GetDistributionConfigAsync(GetDistributionConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFieldLevelEncryptionResponse> GetFieldLevelEncryptionAsync(GetFieldLevelEncryptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFieldLevelEncryptionConfigResponse> GetFieldLevelEncryptionConfigAsync(GetFieldLevelEncryptionConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFieldLevelEncryptionProfileResponse> GetFieldLevelEncryptionProfileAsync(GetFieldLevelEncryptionProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFieldLevelEncryptionProfileConfigResponse> GetFieldLevelEncryptionProfileConfigAsync(GetFieldLevelEncryptionProfileConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetFunctionResponse> GetFunctionAsync(GetFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetInvalidationResponse> GetInvalidationAsync(GetInvalidationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetKeyGroupResponse> GetKeyGroupAsync(GetKeyGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetKeyGroupConfigResponse> GetKeyGroupConfigAsync(GetKeyGroupConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMonitoringSubscriptionResponse> GetMonitoringSubscriptionAsync(GetMonitoringSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOriginAccessControlResponse> GetOriginAccessControlAsync(GetOriginAccessControlRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOriginAccessControlConfigResponse> GetOriginAccessControlConfigAsync(GetOriginAccessControlConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOriginRequestPolicyResponse> GetOriginRequestPolicyAsync(GetOriginRequestPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOriginRequestPolicyConfigResponse> GetOriginRequestPolicyConfigAsync(GetOriginRequestPolicyConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPublicKeyResponse> GetPublicKeyAsync(GetPublicKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPublicKeyConfigResponse> GetPublicKeyConfigAsync(GetPublicKeyConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetRealtimeLogConfigResponse> GetRealtimeLogConfigAsync(GetRealtimeLogConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetResponseHeadersPolicyResponse> GetResponseHeadersPolicyAsync(GetResponseHeadersPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetResponseHeadersPolicyConfigResponse> GetResponseHeadersPolicyConfigAsync(GetResponseHeadersPolicyConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetStreamingDistributionResponse> GetStreamingDistributionAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<GetStreamingDistributionResponse> GetStreamingDistributionAsync(GetStreamingDistributionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetStreamingDistributionConfigResponse> GetStreamingDistributionConfigAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<GetStreamingDistributionConfigResponse> GetStreamingDistributionConfigAsync(GetStreamingDistributionConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCachePoliciesResponse> ListCachePoliciesAsync(ListCachePoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCloudFrontOriginAccessIdentitiesResponse> ListCloudFrontOriginAccessIdentitiesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListCloudFrontOriginAccessIdentitiesResponse> ListCloudFrontOriginAccessIdentitiesAsync(ListCloudFrontOriginAccessIdentitiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListConflictingAliasesResponse> ListConflictingAliasesAsync(ListConflictingAliasesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListContinuousDeploymentPoliciesResponse> ListContinuousDeploymentPoliciesAsync(ListContinuousDeploymentPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDistributionsResponse> ListDistributionsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDistributionsResponse> ListDistributionsAsync(ListDistributionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDistributionsByCachePolicyIdResponse> ListDistributionsByCachePolicyIdAsync(ListDistributionsByCachePolicyIdRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDistributionsByKeyGroupResponse> ListDistributionsByKeyGroupAsync(ListDistributionsByKeyGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDistributionsByOriginRequestPolicyIdResponse> ListDistributionsByOriginRequestPolicyIdAsync(ListDistributionsByOriginRequestPolicyIdRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDistributionsByRealtimeLogConfigResponse> ListDistributionsByRealtimeLogConfigAsync(ListDistributionsByRealtimeLogConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDistributionsByResponseHeadersPolicyIdResponse> ListDistributionsByResponseHeadersPolicyIdAsync(ListDistributionsByResponseHeadersPolicyIdRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDistributionsByWebACLIdResponse> ListDistributionsByWebACLIdAsync(ListDistributionsByWebACLIdRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFieldLevelEncryptionConfigsResponse> ListFieldLevelEncryptionConfigsAsync(ListFieldLevelEncryptionConfigsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFieldLevelEncryptionProfilesResponse> ListFieldLevelEncryptionProfilesAsync(ListFieldLevelEncryptionProfilesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListFunctionsResponse> ListFunctionsAsync(ListFunctionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListInvalidationsResponse> ListInvalidationsAsync(ListInvalidationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListKeyGroupsResponse> ListKeyGroupsAsync(ListKeyGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListKeyValueStoresResponse> ListKeyValueStoresAsync(ListKeyValueStoresRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListOriginAccessControlsResponse> ListOriginAccessControlsAsync(ListOriginAccessControlsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListOriginRequestPoliciesResponse> ListOriginRequestPoliciesAsync(ListOriginRequestPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListPublicKeysResponse> ListPublicKeysAsync(ListPublicKeysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListRealtimeLogConfigsResponse> ListRealtimeLogConfigsAsync(ListRealtimeLogConfigsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListResponseHeadersPoliciesResponse> ListResponseHeadersPoliciesAsync(ListResponseHeadersPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStreamingDistributionsResponse> ListStreamingDistributionsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStreamingDistributionsResponse> ListStreamingDistributionsAsync(ListStreamingDistributionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PublishFunctionResponse> PublishFunctionAsync(PublishFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestFunctionResponse> TestFunctionAsync(TestFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateCachePolicyResponse> UpdateCachePolicyAsync(UpdateCachePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateCloudFrontOriginAccessIdentityResponse> UpdateCloudFrontOriginAccessIdentityAsync(UpdateCloudFrontOriginAccessIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateContinuousDeploymentPolicyResponse> UpdateContinuousDeploymentPolicyAsync(UpdateContinuousDeploymentPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateDistributionResponse> UpdateDistributionAsync(UpdateDistributionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateDistributionWithStagingConfigResponse> UpdateDistributionWithStagingConfigAsync(UpdateDistributionWithStagingConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFieldLevelEncryptionConfigResponse> UpdateFieldLevelEncryptionConfigAsync(UpdateFieldLevelEncryptionConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFieldLevelEncryptionProfileResponse> UpdateFieldLevelEncryptionProfileAsync(UpdateFieldLevelEncryptionProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateFunctionResponse> UpdateFunctionAsync(UpdateFunctionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateKeyGroupResponse> UpdateKeyGroupAsync(UpdateKeyGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateKeyValueStoreResponse> UpdateKeyValueStoreAsync(UpdateKeyValueStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateOriginAccessControlResponse> UpdateOriginAccessControlAsync(UpdateOriginAccessControlRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateOriginRequestPolicyResponse> UpdateOriginRequestPolicyAsync(UpdateOriginRequestPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdatePublicKeyResponse> UpdatePublicKeyAsync(UpdatePublicKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateRealtimeLogConfigResponse> UpdateRealtimeLogConfigAsync(UpdateRealtimeLogConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateResponseHeadersPolicyResponse> UpdateResponseHeadersPolicyAsync(UpdateResponseHeadersPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateStreamingDistributionResponse> UpdateStreamingDistributionAsync(UpdateStreamingDistributionRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.CloudFront.ICPRecordalStatus : ConstantClass {
    public static ICPRecordalStatus APPROVED;
    public static ICPRecordalStatus PENDING;
    public static ICPRecordalStatus SUSPENDED;
    public ICPRecordalStatus(string value);
    private static ICPRecordalStatus();
    public static ICPRecordalStatus FindValue(string value);
    public static ICPRecordalStatus op_Implicit(string value);
}
public class Amazon.CloudFront.ImportSourceType : ConstantClass {
    public static ImportSourceType S3;
    public ImportSourceType(string value);
    private static ImportSourceType();
    public static ImportSourceType FindValue(string value);
    public static ImportSourceType op_Implicit(string value);
}
public class Amazon.CloudFront.Internal.AmazonCloudFrontEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.CloudFront.Internal.AmazonCloudFrontEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.CloudFront.Internal.AmazonCloudFrontMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.CloudFront.ItemSelection : ConstantClass {
    public static ItemSelection All;
    public static ItemSelection None;
    public static ItemSelection Whitelist;
    public ItemSelection(string value);
    private static ItemSelection();
    public static ItemSelection FindValue(string value);
    public static ItemSelection op_Implicit(string value);
}
public class Amazon.CloudFront.Method : ConstantClass {
    public static Method DELETE;
    public static Method GET;
    public static Method HEAD;
    public static Method OPTIONS;
    public static Method PATCH;
    public static Method POST;
    public static Method PUT;
    public Method(string value);
    private static Method();
    public static Method FindValue(string value);
    public static Method op_Implicit(string value);
}
public class Amazon.CloudFront.MinimumProtocolVersion : ConstantClass {
    public static MinimumProtocolVersion SSLv3;
    public static MinimumProtocolVersion TLSv1;
    public static MinimumProtocolVersion TLSv1_2016;
    public static MinimumProtocolVersion TLSv11_2016;
    public static MinimumProtocolVersion TLSv12_2018;
    public static MinimumProtocolVersion TLSv12_2019;
    public static MinimumProtocolVersion TLSv12_2021;
    public MinimumProtocolVersion(string value);
    private static MinimumProtocolVersion();
    public static MinimumProtocolVersion FindValue(string value);
    public static MinimumProtocolVersion op_Implicit(string value);
}
public class Amazon.CloudFront.Model.AccessDeniedException : AmazonCloudFrontException {
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception innerException);
    public AccessDeniedException(Exception innerException);
    public AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.ActiveTrustedKeyGroups : object {
    private Nullable`1<bool> _enabled;
    private List`1<KGKeyPairIds> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public List`1<KGKeyPairIds> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<KGKeyPairIds> get_Items();
    public void set_Items(List`1<KGKeyPairIds> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ActiveTrustedSigners : object {
    private Nullable`1<bool> _enabled;
    private List`1<Signer> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public List`1<Signer> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public ActiveTrustedSigners(List`1<Signer> items);
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<Signer> get_Items();
    public void set_Items(List`1<Signer> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.Aliases : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.AliasICPRecordal : object {
    private string _cname;
    private ICPRecordalStatus _icpRecordalStatus;
    public string CNAME { get; public set; }
    public ICPRecordalStatus ICPRecordalStatus { get; public set; }
    public string get_CNAME();
    public void set_CNAME(string value);
    internal bool IsSetCNAME();
    public ICPRecordalStatus get_ICPRecordalStatus();
    public void set_ICPRecordalStatus(ICPRecordalStatus value);
    internal bool IsSetICPRecordalStatus();
}
public class Amazon.CloudFront.Model.AllowedMethods : object {
    private CachedMethods _cachedMethods;
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public CachedMethods CachedMethods { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public CachedMethods get_CachedMethods();
    public void set_CachedMethods(CachedMethods value);
    internal bool IsSetCachedMethods();
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.AssociateAliasRequest : AmazonCloudFrontRequest {
    private string _alias;
    private string _targetDistributionId;
    [AWSPropertyAttribute]
public string Alias { get; public set; }
    [AWSPropertyAttribute]
public string TargetDistributionId { get; public set; }
    public string get_Alias();
    public void set_Alias(string value);
    internal bool IsSetAlias();
    public string get_TargetDistributionId();
    public void set_TargetDistributionId(string value);
    internal bool IsSetTargetDistributionId();
}
public class Amazon.CloudFront.Model.AssociateAliasResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.BatchTooLargeException : AmazonCloudFrontException {
    public BatchTooLargeException(string message);
    public BatchTooLargeException(string message, Exception innerException);
    public BatchTooLargeException(Exception innerException);
    public BatchTooLargeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BatchTooLargeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.CacheBehavior : object {
    private AllowedMethods _allowedMethods;
    private string _cachePolicyId;
    private Nullable`1<bool> _compress;
    private Nullable`1<long> _defaultTTL;
    private string _fieldLevelEncryptionId;
    private ForwardedValues _forwardedValues;
    private FunctionAssociations _functionAssociations;
    private LambdaFunctionAssociations _lambdaFunctionAssociations;
    private Nullable`1<long> _maxTTL;
    private Nullable`1<long> _minTTL;
    private string _originRequestPolicyId;
    private string _pathPattern;
    private string _realtimeLogConfigArn;
    private string _responseHeadersPolicyId;
    private Nullable`1<bool> _smoothStreaming;
    private string _targetOriginId;
    private TrustedKeyGroups _trustedKeyGroups;
    private TrustedSigners _trustedSigners;
    private ViewerProtocolPolicy _viewerProtocolPolicy;
    public AllowedMethods AllowedMethods { get; public set; }
    public string CachePolicyId { get; public set; }
    public Nullable`1<bool> Compress { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use CachePolicy instead.")]
public Nullable`1<long> DefaultTTL { get; public set; }
    public string FieldLevelEncryptionId { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use CachePolicy instead.")]
public ForwardedValues ForwardedValues { get; public set; }
    public FunctionAssociations FunctionAssociations { get; public set; }
    public LambdaFunctionAssociations LambdaFunctionAssociations { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use CachePolicy instead.")]
public Nullable`1<long> MaxTTL { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use CachePolicy instead.")]
public Nullable`1<long> MinTTL { get; public set; }
    public string OriginRequestPolicyId { get; public set; }
    [AWSPropertyAttribute]
public string PathPattern { get; public set; }
    public string RealtimeLogConfigArn { get; public set; }
    public string ResponseHeadersPolicyId { get; public set; }
    public Nullable`1<bool> SmoothStreaming { get; public set; }
    [AWSPropertyAttribute]
public string TargetOriginId { get; public set; }
    public TrustedKeyGroups TrustedKeyGroups { get; public set; }
    public TrustedSigners TrustedSigners { get; public set; }
    [AWSPropertyAttribute]
public ViewerProtocolPolicy ViewerProtocolPolicy { get; public set; }
    public AllowedMethods get_AllowedMethods();
    public void set_AllowedMethods(AllowedMethods value);
    internal bool IsSetAllowedMethods();
    public string get_CachePolicyId();
    public void set_CachePolicyId(string value);
    internal bool IsSetCachePolicyId();
    public Nullable`1<bool> get_Compress();
    public void set_Compress(Nullable`1<bool> value);
    internal bool IsSetCompress();
    public Nullable`1<long> get_DefaultTTL();
    public void set_DefaultTTL(Nullable`1<long> value);
    internal bool IsSetDefaultTTL();
    public string get_FieldLevelEncryptionId();
    public void set_FieldLevelEncryptionId(string value);
    internal bool IsSetFieldLevelEncryptionId();
    public ForwardedValues get_ForwardedValues();
    public void set_ForwardedValues(ForwardedValues value);
    internal bool IsSetForwardedValues();
    public FunctionAssociations get_FunctionAssociations();
    public void set_FunctionAssociations(FunctionAssociations value);
    internal bool IsSetFunctionAssociations();
    public LambdaFunctionAssociations get_LambdaFunctionAssociations();
    public void set_LambdaFunctionAssociations(LambdaFunctionAssociations value);
    internal bool IsSetLambdaFunctionAssociations();
    public Nullable`1<long> get_MaxTTL();
    public void set_MaxTTL(Nullable`1<long> value);
    internal bool IsSetMaxTTL();
    public Nullable`1<long> get_MinTTL();
    public void set_MinTTL(Nullable`1<long> value);
    internal bool IsSetMinTTL();
    public string get_OriginRequestPolicyId();
    public void set_OriginRequestPolicyId(string value);
    internal bool IsSetOriginRequestPolicyId();
    public string get_PathPattern();
    public void set_PathPattern(string value);
    internal bool IsSetPathPattern();
    public string get_RealtimeLogConfigArn();
    public void set_RealtimeLogConfigArn(string value);
    internal bool IsSetRealtimeLogConfigArn();
    public string get_ResponseHeadersPolicyId();
    public void set_ResponseHeadersPolicyId(string value);
    internal bool IsSetResponseHeadersPolicyId();
    public Nullable`1<bool> get_SmoothStreaming();
    public void set_SmoothStreaming(Nullable`1<bool> value);
    internal bool IsSetSmoothStreaming();
    public string get_TargetOriginId();
    public void set_TargetOriginId(string value);
    internal bool IsSetTargetOriginId();
    public TrustedKeyGroups get_TrustedKeyGroups();
    public void set_TrustedKeyGroups(TrustedKeyGroups value);
    internal bool IsSetTrustedKeyGroups();
    public TrustedSigners get_TrustedSigners();
    public void set_TrustedSigners(TrustedSigners value);
    internal bool IsSetTrustedSigners();
    public ViewerProtocolPolicy get_ViewerProtocolPolicy();
    public void set_ViewerProtocolPolicy(ViewerProtocolPolicy value);
    internal bool IsSetViewerProtocolPolicy();
}
public class Amazon.CloudFront.Model.CacheBehaviors : object {
    private List`1<CacheBehavior> _items;
    private Nullable`1<int> _quantity;
    public List`1<CacheBehavior> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<CacheBehavior> get_Items();
    public void set_Items(List`1<CacheBehavior> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.CachedMethods : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.CachePolicy : object {
    private CachePolicyConfig _cachePolicyConfig;
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    [AWSPropertyAttribute]
public CachePolicyConfig CachePolicyConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public CachePolicyConfig get_CachePolicyConfig();
    public void set_CachePolicyConfig(CachePolicyConfig value);
    internal bool IsSetCachePolicyConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
}
public class Amazon.CloudFront.Model.CachePolicyAlreadyExistsException : AmazonCloudFrontException {
    public CachePolicyAlreadyExistsException(string message);
    public CachePolicyAlreadyExistsException(string message, Exception innerException);
    public CachePolicyAlreadyExistsException(Exception innerException);
    public CachePolicyAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CachePolicyAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.CachePolicyConfig : object {
    private string _comment;
    private Nullable`1<long> _defaultTTL;
    private Nullable`1<long> _maxTTL;
    private Nullable`1<long> _minTTL;
    private string _name;
    private ParametersInCacheKeyAndForwardedToOrigin _parametersInCacheKeyAndForwardedToOrigin;
    public string Comment { get; public set; }
    public Nullable`1<long> DefaultTTL { get; public set; }
    public Nullable`1<long> MaxTTL { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MinTTL { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public ParametersInCacheKeyAndForwardedToOrigin ParametersInCacheKeyAndForwardedToOrigin { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public Nullable`1<long> get_DefaultTTL();
    public void set_DefaultTTL(Nullable`1<long> value);
    internal bool IsSetDefaultTTL();
    public Nullable`1<long> get_MaxTTL();
    public void set_MaxTTL(Nullable`1<long> value);
    internal bool IsSetMaxTTL();
    public Nullable`1<long> get_MinTTL();
    public void set_MinTTL(Nullable`1<long> value);
    internal bool IsSetMinTTL();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ParametersInCacheKeyAndForwardedToOrigin get_ParametersInCacheKeyAndForwardedToOrigin();
    public void set_ParametersInCacheKeyAndForwardedToOrigin(ParametersInCacheKeyAndForwardedToOrigin value);
    internal bool IsSetParametersInCacheKeyAndForwardedToOrigin();
}
public class Amazon.CloudFront.Model.CachePolicyCookiesConfig : object {
    private CachePolicyCookieBehavior _cookieBehavior;
    private CookieNames _cookies;
    [AWSPropertyAttribute]
public CachePolicyCookieBehavior CookieBehavior { get; public set; }
    public CookieNames Cookies { get; public set; }
    public CachePolicyCookieBehavior get_CookieBehavior();
    public void set_CookieBehavior(CachePolicyCookieBehavior value);
    internal bool IsSetCookieBehavior();
    public CookieNames get_Cookies();
    public void set_Cookies(CookieNames value);
    internal bool IsSetCookies();
}
public class Amazon.CloudFront.Model.CachePolicyHeadersConfig : object {
    private CachePolicyHeaderBehavior _headerBehavior;
    private Headers _headers;
    [AWSPropertyAttribute]
public CachePolicyHeaderBehavior HeaderBehavior { get; public set; }
    public Headers Headers { get; public set; }
    public CachePolicyHeaderBehavior get_HeaderBehavior();
    public void set_HeaderBehavior(CachePolicyHeaderBehavior value);
    internal bool IsSetHeaderBehavior();
    public Headers get_Headers();
    public void set_Headers(Headers value);
    internal bool IsSetHeaders();
}
public class Amazon.CloudFront.Model.CachePolicyInUseException : AmazonCloudFrontException {
    public CachePolicyInUseException(string message);
    public CachePolicyInUseException(string message, Exception innerException);
    public CachePolicyInUseException(Exception innerException);
    public CachePolicyInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CachePolicyInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.CachePolicyList : object {
    private List`1<CachePolicySummary> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<CachePolicySummary> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<CachePolicySummary> get_Items();
    public void set_Items(List`1<CachePolicySummary> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.CachePolicyQueryStringsConfig : object {
    private CachePolicyQueryStringBehavior _queryStringBehavior;
    private QueryStringNames _queryStrings;
    [AWSPropertyAttribute]
public CachePolicyQueryStringBehavior QueryStringBehavior { get; public set; }
    public QueryStringNames QueryStrings { get; public set; }
    public CachePolicyQueryStringBehavior get_QueryStringBehavior();
    public void set_QueryStringBehavior(CachePolicyQueryStringBehavior value);
    internal bool IsSetQueryStringBehavior();
    public QueryStringNames get_QueryStrings();
    public void set_QueryStrings(QueryStringNames value);
    internal bool IsSetQueryStrings();
}
public class Amazon.CloudFront.Model.CachePolicySummary : object {
    private CachePolicy _cachePolicy;
    private CachePolicyType _type;
    [AWSPropertyAttribute]
public CachePolicy CachePolicy { get; public set; }
    [AWSPropertyAttribute]
public CachePolicyType Type { get; public set; }
    public CachePolicy get_CachePolicy();
    public void set_CachePolicy(CachePolicy value);
    internal bool IsSetCachePolicy();
    public CachePolicyType get_Type();
    public void set_Type(CachePolicyType value);
    internal bool IsSetType();
}
public class Amazon.CloudFront.Model.CannotChangeImmutablePublicKeyFieldsException : AmazonCloudFrontException {
    public CannotChangeImmutablePublicKeyFieldsException(string message);
    public CannotChangeImmutablePublicKeyFieldsException(string message, Exception innerException);
    public CannotChangeImmutablePublicKeyFieldsException(Exception innerException);
    public CannotChangeImmutablePublicKeyFieldsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CannotChangeImmutablePublicKeyFieldsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.CannotDeleteEntityWhileInUseException : AmazonCloudFrontException {
    public CannotDeleteEntityWhileInUseException(string message);
    public CannotDeleteEntityWhileInUseException(string message, Exception innerException);
    public CannotDeleteEntityWhileInUseException(Exception innerException);
    public CannotDeleteEntityWhileInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CannotDeleteEntityWhileInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.CloudFrontOriginAccessIdentity : object {
    private CloudFrontOriginAccessIdentityConfig _cloudFrontOriginAccessIdentityConfig;
    private string _id;
    private string _s3CanonicalUserId;
    public CloudFrontOriginAccessIdentityConfig CloudFrontOriginAccessIdentityConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string S3CanonicalUserId { get; public set; }
    public CloudFrontOriginAccessIdentityConfig get_CloudFrontOriginAccessIdentityConfig();
    public void set_CloudFrontOriginAccessIdentityConfig(CloudFrontOriginAccessIdentityConfig value);
    internal bool IsSetCloudFrontOriginAccessIdentityConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_S3CanonicalUserId();
    public void set_S3CanonicalUserId(string value);
    internal bool IsSetS3CanonicalUserId();
}
public class Amazon.CloudFront.Model.CloudFrontOriginAccessIdentityAlreadyExistsException : AmazonCloudFrontException {
    public CloudFrontOriginAccessIdentityAlreadyExistsException(string message);
    public CloudFrontOriginAccessIdentityAlreadyExistsException(string message, Exception innerException);
    public CloudFrontOriginAccessIdentityAlreadyExistsException(Exception innerException);
    public CloudFrontOriginAccessIdentityAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CloudFrontOriginAccessIdentityAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.CloudFrontOriginAccessIdentityConfig : object {
    private string _callerReference;
    private string _comment;
    [AWSPropertyAttribute]
public string CallerReference { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    public CloudFrontOriginAccessIdentityConfig(string callerReference);
    public string get_CallerReference();
    public void set_CallerReference(string value);
    internal bool IsSetCallerReference();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
}
public class Amazon.CloudFront.Model.CloudFrontOriginAccessIdentityInUseException : AmazonCloudFrontException {
    public CloudFrontOriginAccessIdentityInUseException(string message);
    public CloudFrontOriginAccessIdentityInUseException(string message, Exception innerException);
    public CloudFrontOriginAccessIdentityInUseException(Exception innerException);
    public CloudFrontOriginAccessIdentityInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CloudFrontOriginAccessIdentityInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.CloudFrontOriginAccessIdentityList : object {
    private Nullable`1<bool> _isTruncated;
    private List`1<CloudFrontOriginAccessIdentitySummary> _items;
    private string _marker;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public Nullable`1<bool> IsTruncated { get; public set; }
    public List`1<CloudFrontOriginAccessIdentitySummary> Items { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public Nullable`1<bool> get_IsTruncated();
    public void set_IsTruncated(Nullable`1<bool> value);
    internal bool IsSetIsTruncated();
    public List`1<CloudFrontOriginAccessIdentitySummary> get_Items();
    public void set_Items(List`1<CloudFrontOriginAccessIdentitySummary> value);
    internal bool IsSetItems();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.CloudFrontOriginAccessIdentitySummary : object {
    private string _comment;
    private string _id;
    private string _s3CanonicalUserId;
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string S3CanonicalUserId { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_S3CanonicalUserId();
    public void set_S3CanonicalUserId(string value);
    internal bool IsSetS3CanonicalUserId();
}
public class Amazon.CloudFront.Model.CloudFrontPaginatorFactory : object {
    private IAmazonCloudFront client;
    internal CloudFrontPaginatorFactory(IAmazonCloudFront client);
    public sealed virtual IListCloudFrontOriginAccessIdentitiesPaginator ListCloudFrontOriginAccessIdentities(ListCloudFrontOriginAccessIdentitiesRequest request);
    public sealed virtual IListDistributionsPaginator ListDistributions(ListDistributionsRequest request);
    public sealed virtual IListInvalidationsPaginator ListInvalidations(ListInvalidationsRequest request);
    public sealed virtual IListKeyValueStoresPaginator ListKeyValueStores(ListKeyValueStoresRequest request);
    public sealed virtual IListStreamingDistributionsPaginator ListStreamingDistributions(ListStreamingDistributionsRequest request);
}
public class Amazon.CloudFront.Model.CNAMEAlreadyExistsException : AmazonCloudFrontException {
    public CNAMEAlreadyExistsException(string message);
    public CNAMEAlreadyExistsException(string message, Exception innerException);
    public CNAMEAlreadyExistsException(Exception innerException);
    public CNAMEAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CNAMEAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.ConflictingAlias : object {
    private string _accountId;
    private string _alias;
    private string _distributionId;
    public string AccountId { get; public set; }
    public string Alias { get; public set; }
    public string DistributionId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Alias();
    public void set_Alias(string value);
    internal bool IsSetAlias();
    public string get_DistributionId();
    public void set_DistributionId(string value);
    internal bool IsSetDistributionId();
}
public class Amazon.CloudFront.Model.ConflictingAliasesList : object {
    private List`1<ConflictingAlias> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<ConflictingAlias> Items { get; public set; }
    public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    public Nullable`1<int> Quantity { get; public set; }
    public List`1<ConflictingAlias> get_Items();
    public void set_Items(List`1<ConflictingAlias> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ContentTypeProfile : object {
    private string _contentType;
    private Format _format;
    private string _profileId;
    [AWSPropertyAttribute]
public string ContentType { get; public set; }
    [AWSPropertyAttribute]
public Format Format { get; public set; }
    public string ProfileId { get; public set; }
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public Format get_Format();
    public void set_Format(Format value);
    internal bool IsSetFormat();
    public string get_ProfileId();
    public void set_ProfileId(string value);
    internal bool IsSetProfileId();
}
public class Amazon.CloudFront.Model.ContentTypeProfileConfig : object {
    private ContentTypeProfiles _contentTypeProfiles;
    private Nullable`1<bool> _forwardWhenContentTypeIsUnknown;
    public ContentTypeProfiles ContentTypeProfiles { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> ForwardWhenContentTypeIsUnknown { get; public set; }
    public ContentTypeProfiles get_ContentTypeProfiles();
    public void set_ContentTypeProfiles(ContentTypeProfiles value);
    internal bool IsSetContentTypeProfiles();
    public Nullable`1<bool> get_ForwardWhenContentTypeIsUnknown();
    public void set_ForwardWhenContentTypeIsUnknown(Nullable`1<bool> value);
    internal bool IsSetForwardWhenContentTypeIsUnknown();
}
public class Amazon.CloudFront.Model.ContentTypeProfiles : object {
    private List`1<ContentTypeProfile> _items;
    private Nullable`1<int> _quantity;
    public List`1<ContentTypeProfile> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<ContentTypeProfile> get_Items();
    public void set_Items(List`1<ContentTypeProfile> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ContinuousDeploymentPolicy : object {
    private ContinuousDeploymentPolicyConfig _continuousDeploymentPolicyConfig;
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    [AWSPropertyAttribute]
public ContinuousDeploymentPolicyConfig ContinuousDeploymentPolicyConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public ContinuousDeploymentPolicyConfig get_ContinuousDeploymentPolicyConfig();
    public void set_ContinuousDeploymentPolicyConfig(ContinuousDeploymentPolicyConfig value);
    internal bool IsSetContinuousDeploymentPolicyConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
}
public class Amazon.CloudFront.Model.ContinuousDeploymentPolicyAlreadyExistsException : AmazonCloudFrontException {
    public ContinuousDeploymentPolicyAlreadyExistsException(string message);
    public ContinuousDeploymentPolicyAlreadyExistsException(string message, Exception innerException);
    public ContinuousDeploymentPolicyAlreadyExistsException(Exception innerException);
    public ContinuousDeploymentPolicyAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ContinuousDeploymentPolicyAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.ContinuousDeploymentPolicyConfig : object {
    private Nullable`1<bool> _enabled;
    private StagingDistributionDnsNames _stagingDistributionDnsNames;
    private TrafficConfig _trafficConfig;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public StagingDistributionDnsNames StagingDistributionDnsNames { get; public set; }
    public TrafficConfig TrafficConfig { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public StagingDistributionDnsNames get_StagingDistributionDnsNames();
    public void set_StagingDistributionDnsNames(StagingDistributionDnsNames value);
    internal bool IsSetStagingDistributionDnsNames();
    public TrafficConfig get_TrafficConfig();
    public void set_TrafficConfig(TrafficConfig value);
    internal bool IsSetTrafficConfig();
}
public class Amazon.CloudFront.Model.ContinuousDeploymentPolicyInUseException : AmazonCloudFrontException {
    public ContinuousDeploymentPolicyInUseException(string message);
    public ContinuousDeploymentPolicyInUseException(string message, Exception innerException);
    public ContinuousDeploymentPolicyInUseException(Exception innerException);
    public ContinuousDeploymentPolicyInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ContinuousDeploymentPolicyInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.ContinuousDeploymentPolicyList : object {
    private List`1<ContinuousDeploymentPolicySummary> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<ContinuousDeploymentPolicySummary> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<ContinuousDeploymentPolicySummary> get_Items();
    public void set_Items(List`1<ContinuousDeploymentPolicySummary> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ContinuousDeploymentPolicySummary : object {
    private ContinuousDeploymentPolicy _continuousDeploymentPolicy;
    [AWSPropertyAttribute]
public ContinuousDeploymentPolicy ContinuousDeploymentPolicy { get; public set; }
    public ContinuousDeploymentPolicy get_ContinuousDeploymentPolicy();
    public void set_ContinuousDeploymentPolicy(ContinuousDeploymentPolicy value);
    internal bool IsSetContinuousDeploymentPolicy();
}
public class Amazon.CloudFront.Model.ContinuousDeploymentSingleHeaderConfig : object {
    private string _header;
    private string _value;
    [AWSPropertyAttribute]
public string Header { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Header();
    public void set_Header(string value);
    internal bool IsSetHeader();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudFront.Model.ContinuousDeploymentSingleWeightConfig : object {
    private SessionStickinessConfig _sessionStickinessConfig;
    private Nullable`1<float> _weight;
    public SessionStickinessConfig SessionStickinessConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<float> Weight { get; public set; }
    public SessionStickinessConfig get_SessionStickinessConfig();
    public void set_SessionStickinessConfig(SessionStickinessConfig value);
    internal bool IsSetSessionStickinessConfig();
    public Nullable`1<float> get_Weight();
    public void set_Weight(Nullable`1<float> value);
    internal bool IsSetWeight();
}
public class Amazon.CloudFront.Model.CookieNames : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.CookiePreference : object {
    private ItemSelection _forward;
    private CookieNames _whitelistedNames;
    [AWSPropertyAttribute]
public ItemSelection Forward { get; public set; }
    public CookieNames WhitelistedNames { get; public set; }
    public ItemSelection get_Forward();
    public void set_Forward(ItemSelection value);
    internal bool IsSetForward();
    public CookieNames get_WhitelistedNames();
    public void set_WhitelistedNames(CookieNames value);
    internal bool IsSetWhitelistedNames();
}
public class Amazon.CloudFront.Model.CopyDistributionRequest : AmazonCloudFrontRequest {
    private string _callerReference;
    private Nullable`1<bool> _enabled;
    private string _ifMatch;
    private string _primaryDistributionId;
    private Nullable`1<bool> _staging;
    [AWSPropertyAttribute]
public string CallerReference { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public string PrimaryDistributionId { get; public set; }
    public Nullable`1<bool> Staging { get; public set; }
    public string get_CallerReference();
    public void set_CallerReference(string value);
    internal bool IsSetCallerReference();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public string get_PrimaryDistributionId();
    public void set_PrimaryDistributionId(string value);
    internal bool IsSetPrimaryDistributionId();
    public Nullable`1<bool> get_Staging();
    public void set_Staging(Nullable`1<bool> value);
    internal bool IsSetStaging();
}
public class Amazon.CloudFront.Model.CopyDistributionResponse : AmazonWebServiceResponse {
    private Distribution _distribution;
    private string _eTag;
    private string _location;
    public Distribution Distribution { get; public set; }
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public Distribution get_Distribution();
    public void set_Distribution(Distribution value);
    internal bool IsSetDistribution();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateCachePolicyRequest : AmazonCloudFrontRequest {
    private CachePolicyConfig _cachePolicyConfig;
    [AWSPropertyAttribute]
public CachePolicyConfig CachePolicyConfig { get; public set; }
    public CachePolicyConfig get_CachePolicyConfig();
    public void set_CachePolicyConfig(CachePolicyConfig value);
    internal bool IsSetCachePolicyConfig();
}
public class Amazon.CloudFront.Model.CreateCachePolicyResponse : AmazonWebServiceResponse {
    private CachePolicy _cachePolicy;
    private string _eTag;
    private string _location;
    public CachePolicy CachePolicy { get; public set; }
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public CachePolicy get_CachePolicy();
    public void set_CachePolicy(CachePolicy value);
    internal bool IsSetCachePolicy();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateCloudFrontOriginAccessIdentityRequest : AmazonCloudFrontRequest {
    private CloudFrontOriginAccessIdentityConfig _cloudFrontOriginAccessIdentityConfig;
    [AWSPropertyAttribute]
public CloudFrontOriginAccessIdentityConfig CloudFrontOriginAccessIdentityConfig { get; public set; }
    public CreateCloudFrontOriginAccessIdentityRequest(CloudFrontOriginAccessIdentityConfig cloudFrontOriginAccessIdentityConfig);
    public CloudFrontOriginAccessIdentityConfig get_CloudFrontOriginAccessIdentityConfig();
    public void set_CloudFrontOriginAccessIdentityConfig(CloudFrontOriginAccessIdentityConfig value);
    internal bool IsSetCloudFrontOriginAccessIdentityConfig();
}
public class Amazon.CloudFront.Model.CreateCloudFrontOriginAccessIdentityResponse : AmazonWebServiceResponse {
    private CloudFrontOriginAccessIdentity _cloudFrontOriginAccessIdentity;
    private string _eTag;
    private string _location;
    public CloudFrontOriginAccessIdentity CloudFrontOriginAccessIdentity { get; public set; }
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public CloudFrontOriginAccessIdentity get_CloudFrontOriginAccessIdentity();
    public void set_CloudFrontOriginAccessIdentity(CloudFrontOriginAccessIdentity value);
    internal bool IsSetCloudFrontOriginAccessIdentity();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateContinuousDeploymentPolicyRequest : AmazonCloudFrontRequest {
    private ContinuousDeploymentPolicyConfig _continuousDeploymentPolicyConfig;
    [AWSPropertyAttribute]
public ContinuousDeploymentPolicyConfig ContinuousDeploymentPolicyConfig { get; public set; }
    public ContinuousDeploymentPolicyConfig get_ContinuousDeploymentPolicyConfig();
    public void set_ContinuousDeploymentPolicyConfig(ContinuousDeploymentPolicyConfig value);
    internal bool IsSetContinuousDeploymentPolicyConfig();
}
public class Amazon.CloudFront.Model.CreateContinuousDeploymentPolicyResponse : AmazonWebServiceResponse {
    private ContinuousDeploymentPolicy _continuousDeploymentPolicy;
    private string _eTag;
    private string _location;
    public ContinuousDeploymentPolicy ContinuousDeploymentPolicy { get; public set; }
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public ContinuousDeploymentPolicy get_ContinuousDeploymentPolicy();
    public void set_ContinuousDeploymentPolicy(ContinuousDeploymentPolicy value);
    internal bool IsSetContinuousDeploymentPolicy();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateDistributionRequest : AmazonCloudFrontRequest {
    private DistributionConfig _distributionConfig;
    [AWSPropertyAttribute]
public DistributionConfig DistributionConfig { get; public set; }
    public CreateDistributionRequest(DistributionConfig distributionConfig);
    public DistributionConfig get_DistributionConfig();
    public void set_DistributionConfig(DistributionConfig value);
    internal bool IsSetDistributionConfig();
}
public class Amazon.CloudFront.Model.CreateDistributionResponse : AmazonWebServiceResponse {
    private Distribution _distribution;
    private string _eTag;
    private string _location;
    public Distribution Distribution { get; public set; }
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public Distribution get_Distribution();
    public void set_Distribution(Distribution value);
    internal bool IsSetDistribution();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateDistributionWithTagsRequest : AmazonCloudFrontRequest {
    private DistributionConfigWithTags _distributionConfigWithTags;
    [AWSPropertyAttribute]
public DistributionConfigWithTags DistributionConfigWithTags { get; public set; }
    public DistributionConfigWithTags get_DistributionConfigWithTags();
    public void set_DistributionConfigWithTags(DistributionConfigWithTags value);
    internal bool IsSetDistributionConfigWithTags();
}
public class Amazon.CloudFront.Model.CreateDistributionWithTagsResponse : AmazonWebServiceResponse {
    private Distribution _distribution;
    private string _eTag;
    private string _location;
    public Distribution Distribution { get; public set; }
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public Distribution get_Distribution();
    public void set_Distribution(Distribution value);
    internal bool IsSetDistribution();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateFieldLevelEncryptionConfigRequest : AmazonCloudFrontRequest {
    private FieldLevelEncryptionConfig _fieldLevelEncryptionConfig;
    [AWSPropertyAttribute]
public FieldLevelEncryptionConfig FieldLevelEncryptionConfig { get; public set; }
    public FieldLevelEncryptionConfig get_FieldLevelEncryptionConfig();
    public void set_FieldLevelEncryptionConfig(FieldLevelEncryptionConfig value);
    internal bool IsSetFieldLevelEncryptionConfig();
}
public class Amazon.CloudFront.Model.CreateFieldLevelEncryptionConfigResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FieldLevelEncryption _fieldLevelEncryption;
    private string _location;
    public string ETag { get; public set; }
    public FieldLevelEncryption FieldLevelEncryption { get; public set; }
    public string Location { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FieldLevelEncryption get_FieldLevelEncryption();
    public void set_FieldLevelEncryption(FieldLevelEncryption value);
    internal bool IsSetFieldLevelEncryption();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateFieldLevelEncryptionProfileRequest : AmazonCloudFrontRequest {
    private FieldLevelEncryptionProfileConfig _fieldLevelEncryptionProfileConfig;
    [AWSPropertyAttribute]
public FieldLevelEncryptionProfileConfig FieldLevelEncryptionProfileConfig { get; public set; }
    public FieldLevelEncryptionProfileConfig get_FieldLevelEncryptionProfileConfig();
    public void set_FieldLevelEncryptionProfileConfig(FieldLevelEncryptionProfileConfig value);
    internal bool IsSetFieldLevelEncryptionProfileConfig();
}
public class Amazon.CloudFront.Model.CreateFieldLevelEncryptionProfileResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FieldLevelEncryptionProfile _fieldLevelEncryptionProfile;
    private string _location;
    public string ETag { get; public set; }
    public FieldLevelEncryptionProfile FieldLevelEncryptionProfile { get; public set; }
    public string Location { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FieldLevelEncryptionProfile get_FieldLevelEncryptionProfile();
    public void set_FieldLevelEncryptionProfile(FieldLevelEncryptionProfile value);
    internal bool IsSetFieldLevelEncryptionProfile();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateFunctionRequest : AmazonCloudFrontRequest {
    private MemoryStream _functionCode;
    private FunctionConfig _functionConfig;
    private string _name;
    [AWSPropertyAttribute]
public MemoryStream FunctionCode { get; public set; }
    [AWSPropertyAttribute]
public FunctionConfig FunctionConfig { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public MemoryStream get_FunctionCode();
    public void set_FunctionCode(MemoryStream value);
    internal bool IsSetFunctionCode();
    public FunctionConfig get_FunctionConfig();
    public void set_FunctionConfig(FunctionConfig value);
    internal bool IsSetFunctionConfig();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.CreateFunctionResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FunctionSummary _functionSummary;
    private string _location;
    public string ETag { get; public set; }
    public FunctionSummary FunctionSummary { get; public set; }
    public string Location { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FunctionSummary get_FunctionSummary();
    public void set_FunctionSummary(FunctionSummary value);
    internal bool IsSetFunctionSummary();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateInvalidationRequest : AmazonCloudFrontRequest {
    private string _distributionId;
    private InvalidationBatch _invalidationBatch;
    [AWSPropertyAttribute]
public string DistributionId { get; public set; }
    [AWSPropertyAttribute]
public InvalidationBatch InvalidationBatch { get; public set; }
    public CreateInvalidationRequest(string distributionId, InvalidationBatch invalidationBatch);
    public string get_DistributionId();
    public void set_DistributionId(string value);
    internal bool IsSetDistributionId();
    public InvalidationBatch get_InvalidationBatch();
    public void set_InvalidationBatch(InvalidationBatch value);
    internal bool IsSetInvalidationBatch();
}
public class Amazon.CloudFront.Model.CreateInvalidationResponse : AmazonWebServiceResponse {
    private Invalidation _invalidation;
    private string _location;
    public Invalidation Invalidation { get; public set; }
    public string Location { get; public set; }
    public Invalidation get_Invalidation();
    public void set_Invalidation(Invalidation value);
    internal bool IsSetInvalidation();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateKeyGroupRequest : AmazonCloudFrontRequest {
    private KeyGroupConfig _keyGroupConfig;
    [AWSPropertyAttribute]
public KeyGroupConfig KeyGroupConfig { get; public set; }
    public KeyGroupConfig get_KeyGroupConfig();
    public void set_KeyGroupConfig(KeyGroupConfig value);
    internal bool IsSetKeyGroupConfig();
}
public class Amazon.CloudFront.Model.CreateKeyGroupResponse : AmazonWebServiceResponse {
    private string _eTag;
    private KeyGroup _keyGroup;
    private string _location;
    public string ETag { get; public set; }
    public KeyGroup KeyGroup { get; public set; }
    public string Location { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public KeyGroup get_KeyGroup();
    public void set_KeyGroup(KeyGroup value);
    internal bool IsSetKeyGroup();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateKeyValueStoreRequest : AmazonCloudFrontRequest {
    private string _comment;
    private ImportSource _importSource;
    private string _name;
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    public ImportSource ImportSource { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public ImportSource get_ImportSource();
    public void set_ImportSource(ImportSource value);
    internal bool IsSetImportSource();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.CreateKeyValueStoreResponse : AmazonWebServiceResponse {
    private string _eTag;
    private KeyValueStore _keyValueStore;
    private string _location;
    public string ETag { get; public set; }
    public KeyValueStore KeyValueStore { get; public set; }
    public string Location { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public KeyValueStore get_KeyValueStore();
    public void set_KeyValueStore(KeyValueStore value);
    internal bool IsSetKeyValueStore();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.CloudFront.Model.CreateMonitoringSubscriptionRequest : AmazonCloudFrontRequest {
    private string _distributionId;
    private MonitoringSubscription _monitoringSubscription;
    [AWSPropertyAttribute]
public string DistributionId { get; public set; }
    [AWSPropertyAttribute]
public MonitoringSubscription MonitoringSubscription { get; public set; }
    public string get_DistributionId();
    public void set_DistributionId(string value);
    internal bool IsSetDistributionId();
    public MonitoringSubscription get_MonitoringSubscription();
    public void set_MonitoringSubscription(MonitoringSubscription value);
    internal bool IsSetMonitoringSubscription();
}
public class Amazon.CloudFront.Model.CreateMonitoringSubscriptionResponse : AmazonWebServiceResponse {
    private MonitoringSubscription _monitoringSubscription;
    public MonitoringSubscription MonitoringSubscription { get; public set; }
    public MonitoringSubscription get_MonitoringSubscription();
    public void set_MonitoringSubscription(MonitoringSubscription value);
    internal bool IsSetMonitoringSubscription();
}
public class Amazon.CloudFront.Model.CreateOriginAccessControlRequest : AmazonCloudFrontRequest {
    private OriginAccessControlConfig _originAccessControlConfig;
    [AWSPropertyAttribute]
public OriginAccessControlConfig OriginAccessControlConfig { get; public set; }
    public OriginAccessControlConfig get_OriginAccessControlConfig();
    public void set_OriginAccessControlConfig(OriginAccessControlConfig value);
    internal bool IsSetOriginAccessControlConfig();
}
public class Amazon.CloudFront.Model.CreateOriginAccessControlResponse : AmazonWebServiceResponse {
    private string _eTag;
    private string _location;
    private OriginAccessControl _originAccessControl;
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public OriginAccessControl OriginAccessControl { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public OriginAccessControl get_OriginAccessControl();
    public void set_OriginAccessControl(OriginAccessControl value);
    internal bool IsSetOriginAccessControl();
}
public class Amazon.CloudFront.Model.CreateOriginRequestPolicyRequest : AmazonCloudFrontRequest {
    private OriginRequestPolicyConfig _originRequestPolicyConfig;
    [AWSPropertyAttribute]
public OriginRequestPolicyConfig OriginRequestPolicyConfig { get; public set; }
    public OriginRequestPolicyConfig get_OriginRequestPolicyConfig();
    public void set_OriginRequestPolicyConfig(OriginRequestPolicyConfig value);
    internal bool IsSetOriginRequestPolicyConfig();
}
public class Amazon.CloudFront.Model.CreateOriginRequestPolicyResponse : AmazonWebServiceResponse {
    private string _eTag;
    private string _location;
    private OriginRequestPolicy _originRequestPolicy;
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public OriginRequestPolicy OriginRequestPolicy { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public OriginRequestPolicy get_OriginRequestPolicy();
    public void set_OriginRequestPolicy(OriginRequestPolicy value);
    internal bool IsSetOriginRequestPolicy();
}
public class Amazon.CloudFront.Model.CreatePublicKeyRequest : AmazonCloudFrontRequest {
    private PublicKeyConfig _publicKeyConfig;
    [AWSPropertyAttribute]
public PublicKeyConfig PublicKeyConfig { get; public set; }
    public PublicKeyConfig get_PublicKeyConfig();
    public void set_PublicKeyConfig(PublicKeyConfig value);
    internal bool IsSetPublicKeyConfig();
}
public class Amazon.CloudFront.Model.CreatePublicKeyResponse : AmazonWebServiceResponse {
    private string _eTag;
    private string _location;
    private PublicKey _publicKey;
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public PublicKey PublicKey { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public PublicKey get_PublicKey();
    public void set_PublicKey(PublicKey value);
    internal bool IsSetPublicKey();
}
public class Amazon.CloudFront.Model.CreateRealtimeLogConfigRequest : AmazonCloudFrontRequest {
    private List`1<EndPoint> _endPoints;
    private List`1<string> _fields;
    private string _name;
    private Nullable`1<long> _samplingRate;
    [AWSPropertyAttribute]
public List`1<EndPoint> EndPoints { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Fields { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> SamplingRate { get; public set; }
    public List`1<EndPoint> get_EndPoints();
    public void set_EndPoints(List`1<EndPoint> value);
    internal bool IsSetEndPoints();
    public List`1<string> get_Fields();
    public void set_Fields(List`1<string> value);
    internal bool IsSetFields();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<long> get_SamplingRate();
    public void set_SamplingRate(Nullable`1<long> value);
    internal bool IsSetSamplingRate();
}
public class Amazon.CloudFront.Model.CreateRealtimeLogConfigResponse : AmazonWebServiceResponse {
    private RealtimeLogConfig _realtimeLogConfig;
    public RealtimeLogConfig RealtimeLogConfig { get; public set; }
    public RealtimeLogConfig get_RealtimeLogConfig();
    public void set_RealtimeLogConfig(RealtimeLogConfig value);
    internal bool IsSetRealtimeLogConfig();
}
public class Amazon.CloudFront.Model.CreateResponseHeadersPolicyRequest : AmazonCloudFrontRequest {
    private ResponseHeadersPolicyConfig _responseHeadersPolicyConfig;
    [AWSPropertyAttribute]
public ResponseHeadersPolicyConfig ResponseHeadersPolicyConfig { get; public set; }
    public ResponseHeadersPolicyConfig get_ResponseHeadersPolicyConfig();
    public void set_ResponseHeadersPolicyConfig(ResponseHeadersPolicyConfig value);
    internal bool IsSetResponseHeadersPolicyConfig();
}
public class Amazon.CloudFront.Model.CreateResponseHeadersPolicyResponse : AmazonWebServiceResponse {
    private string _eTag;
    private string _location;
    private ResponseHeadersPolicy _responseHeadersPolicy;
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public ResponseHeadersPolicy ResponseHeadersPolicy { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public ResponseHeadersPolicy get_ResponseHeadersPolicy();
    public void set_ResponseHeadersPolicy(ResponseHeadersPolicy value);
    internal bool IsSetResponseHeadersPolicy();
}
public class Amazon.CloudFront.Model.CreateStreamingDistributionRequest : AmazonCloudFrontRequest {
    private StreamingDistributionConfig _streamingDistributionConfig;
    [AWSPropertyAttribute]
public StreamingDistributionConfig StreamingDistributionConfig { get; public set; }
    public CreateStreamingDistributionRequest(StreamingDistributionConfig streamingDistributionConfig);
    public StreamingDistributionConfig get_StreamingDistributionConfig();
    public void set_StreamingDistributionConfig(StreamingDistributionConfig value);
    internal bool IsSetStreamingDistributionConfig();
}
public class Amazon.CloudFront.Model.CreateStreamingDistributionResponse : AmazonWebServiceResponse {
    private string _eTag;
    private string _location;
    private StreamingDistribution _streamingDistribution;
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public StreamingDistribution StreamingDistribution { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public StreamingDistribution get_StreamingDistribution();
    public void set_StreamingDistribution(StreamingDistribution value);
    internal bool IsSetStreamingDistribution();
}
public class Amazon.CloudFront.Model.CreateStreamingDistributionWithTagsRequest : AmazonCloudFrontRequest {
    private StreamingDistributionConfigWithTags _streamingDistributionConfigWithTags;
    [AWSPropertyAttribute]
public StreamingDistributionConfigWithTags StreamingDistributionConfigWithTags { get; public set; }
    public StreamingDistributionConfigWithTags get_StreamingDistributionConfigWithTags();
    public void set_StreamingDistributionConfigWithTags(StreamingDistributionConfigWithTags value);
    internal bool IsSetStreamingDistributionConfigWithTags();
}
public class Amazon.CloudFront.Model.CreateStreamingDistributionWithTagsResponse : AmazonWebServiceResponse {
    private string _eTag;
    private string _location;
    private StreamingDistribution _streamingDistribution;
    public string ETag { get; public set; }
    public string Location { get; public set; }
    public StreamingDistribution StreamingDistribution { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public StreamingDistribution get_StreamingDistribution();
    public void set_StreamingDistribution(StreamingDistribution value);
    internal bool IsSetStreamingDistribution();
}
public class Amazon.CloudFront.Model.CustomErrorResponse : object {
    private Nullable`1<long> _errorCachingMinTTL;
    private Nullable`1<int> _errorCode;
    private string _responseCode;
    private string _responsePagePath;
    public Nullable`1<long> ErrorCachingMinTTL { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> ErrorCode { get; public set; }
    public string ResponseCode { get; public set; }
    public string ResponsePagePath { get; public set; }
    public Nullable`1<long> get_ErrorCachingMinTTL();
    public void set_ErrorCachingMinTTL(Nullable`1<long> value);
    internal bool IsSetErrorCachingMinTTL();
    public Nullable`1<int> get_ErrorCode();
    public void set_ErrorCode(Nullable`1<int> value);
    internal bool IsSetErrorCode();
    public string get_ResponseCode();
    public void set_ResponseCode(string value);
    internal bool IsSetResponseCode();
    public string get_ResponsePagePath();
    public void set_ResponsePagePath(string value);
    internal bool IsSetResponsePagePath();
}
public class Amazon.CloudFront.Model.CustomErrorResponses : object {
    private List`1<CustomErrorResponse> _items;
    private Nullable`1<int> _quantity;
    public List`1<CustomErrorResponse> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<CustomErrorResponse> get_Items();
    public void set_Items(List`1<CustomErrorResponse> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.CustomHeaders : object {
    private List`1<OriginCustomHeader> _items;
    private Nullable`1<int> _quantity;
    public List`1<OriginCustomHeader> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<OriginCustomHeader> get_Items();
    public void set_Items(List`1<OriginCustomHeader> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.CustomOriginConfig : object {
    private Nullable`1<int> _httpPort;
    private Nullable`1<int> _httpsPort;
    private Nullable`1<int> _originKeepaliveTimeout;
    private OriginProtocolPolicy _originProtocolPolicy;
    private Nullable`1<int> _originReadTimeout;
    private OriginSslProtocols _originSslProtocols;
    [AWSPropertyAttribute]
public Nullable`1<int> HTTPPort { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> HTTPSPort { get; public set; }
    public Nullable`1<int> OriginKeepaliveTimeout { get; public set; }
    [AWSPropertyAttribute]
public OriginProtocolPolicy OriginProtocolPolicy { get; public set; }
    public Nullable`1<int> OriginReadTimeout { get; public set; }
    public OriginSslProtocols OriginSslProtocols { get; public set; }
    public Nullable`1<int> get_HTTPPort();
    public void set_HTTPPort(Nullable`1<int> value);
    internal bool IsSetHTTPPort();
    public Nullable`1<int> get_HTTPSPort();
    public void set_HTTPSPort(Nullable`1<int> value);
    internal bool IsSetHTTPSPort();
    public Nullable`1<int> get_OriginKeepaliveTimeout();
    public void set_OriginKeepaliveTimeout(Nullable`1<int> value);
    internal bool IsSetOriginKeepaliveTimeout();
    public OriginProtocolPolicy get_OriginProtocolPolicy();
    public void set_OriginProtocolPolicy(OriginProtocolPolicy value);
    internal bool IsSetOriginProtocolPolicy();
    public Nullable`1<int> get_OriginReadTimeout();
    public void set_OriginReadTimeout(Nullable`1<int> value);
    internal bool IsSetOriginReadTimeout();
    public OriginSslProtocols get_OriginSslProtocols();
    public void set_OriginSslProtocols(OriginSslProtocols value);
    internal bool IsSetOriginSslProtocols();
}
public class Amazon.CloudFront.Model.DefaultCacheBehavior : object {
    private AllowedMethods _allowedMethods;
    private string _cachePolicyId;
    private Nullable`1<bool> _compress;
    private Nullable`1<long> _defaultTTL;
    private string _fieldLevelEncryptionId;
    private ForwardedValues _forwardedValues;
    private FunctionAssociations _functionAssociations;
    private LambdaFunctionAssociations _lambdaFunctionAssociations;
    private Nullable`1<long> _maxTTL;
    private Nullable`1<long> _minTTL;
    private string _originRequestPolicyId;
    private string _realtimeLogConfigArn;
    private string _responseHeadersPolicyId;
    private Nullable`1<bool> _smoothStreaming;
    private string _targetOriginId;
    private TrustedKeyGroups _trustedKeyGroups;
    private TrustedSigners _trustedSigners;
    private ViewerProtocolPolicy _viewerProtocolPolicy;
    public AllowedMethods AllowedMethods { get; public set; }
    public string CachePolicyId { get; public set; }
    public Nullable`1<bool> Compress { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use CachePolicy instead.")]
public Nullable`1<long> DefaultTTL { get; public set; }
    public string FieldLevelEncryptionId { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use CachePolicy instead.")]
public ForwardedValues ForwardedValues { get; public set; }
    public FunctionAssociations FunctionAssociations { get; public set; }
    public LambdaFunctionAssociations LambdaFunctionAssociations { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use CachePolicy instead.")]
public Nullable`1<long> MaxTTL { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use CachePolicy instead.")]
public Nullable`1<long> MinTTL { get; public set; }
    public string OriginRequestPolicyId { get; public set; }
    public string RealtimeLogConfigArn { get; public set; }
    public string ResponseHeadersPolicyId { get; public set; }
    public Nullable`1<bool> SmoothStreaming { get; public set; }
    [AWSPropertyAttribute]
public string TargetOriginId { get; public set; }
    public TrustedKeyGroups TrustedKeyGroups { get; public set; }
    public TrustedSigners TrustedSigners { get; public set; }
    [AWSPropertyAttribute]
public ViewerProtocolPolicy ViewerProtocolPolicy { get; public set; }
    public AllowedMethods get_AllowedMethods();
    public void set_AllowedMethods(AllowedMethods value);
    internal bool IsSetAllowedMethods();
    public string get_CachePolicyId();
    public void set_CachePolicyId(string value);
    internal bool IsSetCachePolicyId();
    public Nullable`1<bool> get_Compress();
    public void set_Compress(Nullable`1<bool> value);
    internal bool IsSetCompress();
    public Nullable`1<long> get_DefaultTTL();
    public void set_DefaultTTL(Nullable`1<long> value);
    internal bool IsSetDefaultTTL();
    public string get_FieldLevelEncryptionId();
    public void set_FieldLevelEncryptionId(string value);
    internal bool IsSetFieldLevelEncryptionId();
    public ForwardedValues get_ForwardedValues();
    public void set_ForwardedValues(ForwardedValues value);
    internal bool IsSetForwardedValues();
    public FunctionAssociations get_FunctionAssociations();
    public void set_FunctionAssociations(FunctionAssociations value);
    internal bool IsSetFunctionAssociations();
    public LambdaFunctionAssociations get_LambdaFunctionAssociations();
    public void set_LambdaFunctionAssociations(LambdaFunctionAssociations value);
    internal bool IsSetLambdaFunctionAssociations();
    public Nullable`1<long> get_MaxTTL();
    public void set_MaxTTL(Nullable`1<long> value);
    internal bool IsSetMaxTTL();
    public Nullable`1<long> get_MinTTL();
    public void set_MinTTL(Nullable`1<long> value);
    internal bool IsSetMinTTL();
    public string get_OriginRequestPolicyId();
    public void set_OriginRequestPolicyId(string value);
    internal bool IsSetOriginRequestPolicyId();
    public string get_RealtimeLogConfigArn();
    public void set_RealtimeLogConfigArn(string value);
    internal bool IsSetRealtimeLogConfigArn();
    public string get_ResponseHeadersPolicyId();
    public void set_ResponseHeadersPolicyId(string value);
    internal bool IsSetResponseHeadersPolicyId();
    public Nullable`1<bool> get_SmoothStreaming();
    public void set_SmoothStreaming(Nullable`1<bool> value);
    internal bool IsSetSmoothStreaming();
    public string get_TargetOriginId();
    public void set_TargetOriginId(string value);
    internal bool IsSetTargetOriginId();
    public TrustedKeyGroups get_TrustedKeyGroups();
    public void set_TrustedKeyGroups(TrustedKeyGroups value);
    internal bool IsSetTrustedKeyGroups();
    public TrustedSigners get_TrustedSigners();
    public void set_TrustedSigners(TrustedSigners value);
    internal bool IsSetTrustedSigners();
    public ViewerProtocolPolicy get_ViewerProtocolPolicy();
    public void set_ViewerProtocolPolicy(ViewerProtocolPolicy value);
    internal bool IsSetViewerProtocolPolicy();
}
public class Amazon.CloudFront.Model.DeleteCachePolicyRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteCachePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteCloudFrontOriginAccessIdentityRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public DeleteCloudFrontOriginAccessIdentityRequest(string id, string ifMatch);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteCloudFrontOriginAccessIdentityResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteContinuousDeploymentPolicyRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteContinuousDeploymentPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteDistributionRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public DeleteDistributionRequest(string id, string ifMatch);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteDistributionResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteFieldLevelEncryptionConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteFieldLevelEncryptionConfigResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteFieldLevelEncryptionProfileRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteFieldLevelEncryptionProfileResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteFunctionRequest : AmazonCloudFrontRequest {
    private string _ifMatch;
    private string _name;
    [AWSPropertyAttribute]
public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.DeleteFunctionResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteKeyGroupRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteKeyGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteKeyValueStoreRequest : AmazonCloudFrontRequest {
    private string _ifMatch;
    private string _name;
    [AWSPropertyAttribute]
public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.DeleteKeyValueStoreResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteMonitoringSubscriptionRequest : AmazonCloudFrontRequest {
    private string _distributionId;
    [AWSPropertyAttribute]
public string DistributionId { get; public set; }
    public string get_DistributionId();
    public void set_DistributionId(string value);
    internal bool IsSetDistributionId();
}
public class Amazon.CloudFront.Model.DeleteMonitoringSubscriptionResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteOriginAccessControlRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteOriginAccessControlResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteOriginRequestPolicyRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteOriginRequestPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeletePublicKeyRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeletePublicKeyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteRealtimeLogConfigRequest : AmazonCloudFrontRequest {
    private string _arn;
    private string _name;
    public string ARN { get; public set; }
    public string Name { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.DeleteRealtimeLogConfigResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteResponseHeadersPolicyRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteResponseHeadersPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DeleteStreamingDistributionRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public DeleteStreamingDistributionRequest(string id, string ifMatch);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.DeleteStreamingDistributionResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.DescribeFunctionRequest : AmazonCloudFrontRequest {
    private string _name;
    private FunctionStage _stage;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public FunctionStage Stage { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public FunctionStage get_Stage();
    public void set_Stage(FunctionStage value);
    internal bool IsSetStage();
}
public class Amazon.CloudFront.Model.DescribeFunctionResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FunctionSummary _functionSummary;
    public string ETag { get; public set; }
    public FunctionSummary FunctionSummary { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FunctionSummary get_FunctionSummary();
    public void set_FunctionSummary(FunctionSummary value);
    internal bool IsSetFunctionSummary();
}
public class Amazon.CloudFront.Model.DescribeKeyValueStoreRequest : AmazonCloudFrontRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.DescribeKeyValueStoreResponse : AmazonWebServiceResponse {
    private string _eTag;
    private KeyValueStore _keyValueStore;
    public string ETag { get; public set; }
    public KeyValueStore KeyValueStore { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public KeyValueStore get_KeyValueStore();
    public void set_KeyValueStore(KeyValueStore value);
    internal bool IsSetKeyValueStore();
}
public class Amazon.CloudFront.Model.Distribution : object {
    private ActiveTrustedKeyGroups _activeTrustedKeyGroups;
    private ActiveTrustedSigners _activeTrustedSigners;
    private List`1<AliasICPRecordal> _aliasICPRecordals;
    private string _arn;
    private DistributionConfig _distributionConfig;
    private string _domainName;
    private string _id;
    private Nullable`1<int> _inProgressInvalidationBatches;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _status;
    public ActiveTrustedKeyGroups ActiveTrustedKeyGroups { get; public set; }
    public ActiveTrustedSigners ActiveTrustedSigners { get; public set; }
    public List`1<AliasICPRecordal> AliasICPRecordals { get; public set; }
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public DistributionConfig DistributionConfig { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> InProgressInvalidationBatches { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string Status { get; public set; }
    public Distribution(string id, string status, string domainName);
    public ActiveTrustedKeyGroups get_ActiveTrustedKeyGroups();
    public void set_ActiveTrustedKeyGroups(ActiveTrustedKeyGroups value);
    internal bool IsSetActiveTrustedKeyGroups();
    public ActiveTrustedSigners get_ActiveTrustedSigners();
    public void set_ActiveTrustedSigners(ActiveTrustedSigners value);
    internal bool IsSetActiveTrustedSigners();
    public List`1<AliasICPRecordal> get_AliasICPRecordals();
    public void set_AliasICPRecordals(List`1<AliasICPRecordal> value);
    internal bool IsSetAliasICPRecordals();
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public DistributionConfig get_DistributionConfig();
    public void set_DistributionConfig(DistributionConfig value);
    internal bool IsSetDistributionConfig();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<int> get_InProgressInvalidationBatches();
    public void set_InProgressInvalidationBatches(Nullable`1<int> value);
    internal bool IsSetInProgressInvalidationBatches();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.CloudFront.Model.DistributionAlreadyExistsException : AmazonCloudFrontException {
    public DistributionAlreadyExistsException(string message);
    public DistributionAlreadyExistsException(string message, Exception innerException);
    public DistributionAlreadyExistsException(Exception innerException);
    public DistributionAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DistributionAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.DistributionConfig : object {
    private Aliases _aliases;
    private CacheBehaviors _cacheBehaviors;
    private string _callerReference;
    private string _comment;
    private string _continuousDeploymentPolicyId;
    private CustomErrorResponses _customErrorResponses;
    private DefaultCacheBehavior _defaultCacheBehavior;
    private string _defaultRootObject;
    private Nullable`1<bool> _enabled;
    private HttpVersion _httpVersion;
    private Nullable`1<bool> _isIPV6Enabled;
    private LoggingConfig _logging;
    private OriginGroups _originGroups;
    private Origins _origins;
    private PriceClass _priceClass;
    private Restrictions _restrictions;
    private Nullable`1<bool> _staging;
    private ViewerCertificate _viewerCertificate;
    private string _webACLId;
    public Aliases Aliases { get; public set; }
    public CacheBehaviors CacheBehaviors { get; public set; }
    [AWSPropertyAttribute]
public string CallerReference { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    public string ContinuousDeploymentPolicyId { get; public set; }
    public CustomErrorResponses CustomErrorResponses { get; public set; }
    [AWSPropertyAttribute]
public DefaultCacheBehavior DefaultCacheBehavior { get; public set; }
    public string DefaultRootObject { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public HttpVersion HttpVersion { get; public set; }
    public Nullable`1<bool> IsIPV6Enabled { get; public set; }
    public LoggingConfig Logging { get; public set; }
    public OriginGroups OriginGroups { get; public set; }
    [AWSPropertyAttribute]
public Origins Origins { get; public set; }
    public PriceClass PriceClass { get; public set; }
    public Restrictions Restrictions { get; public set; }
    public Nullable`1<bool> Staging { get; public set; }
    public ViewerCertificate ViewerCertificate { get; public set; }
    public string WebACLId { get; public set; }
    public DistributionConfig(string callerReference, Nullable`1<bool> enabled);
    public Aliases get_Aliases();
    public void set_Aliases(Aliases value);
    internal bool IsSetAliases();
    public CacheBehaviors get_CacheBehaviors();
    public void set_CacheBehaviors(CacheBehaviors value);
    internal bool IsSetCacheBehaviors();
    public string get_CallerReference();
    public void set_CallerReference(string value);
    internal bool IsSetCallerReference();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_ContinuousDeploymentPolicyId();
    public void set_ContinuousDeploymentPolicyId(string value);
    internal bool IsSetContinuousDeploymentPolicyId();
    public CustomErrorResponses get_CustomErrorResponses();
    public void set_CustomErrorResponses(CustomErrorResponses value);
    internal bool IsSetCustomErrorResponses();
    public DefaultCacheBehavior get_DefaultCacheBehavior();
    public void set_DefaultCacheBehavior(DefaultCacheBehavior value);
    internal bool IsSetDefaultCacheBehavior();
    public string get_DefaultRootObject();
    public void set_DefaultRootObject(string value);
    internal bool IsSetDefaultRootObject();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public HttpVersion get_HttpVersion();
    public void set_HttpVersion(HttpVersion value);
    internal bool IsSetHttpVersion();
    public Nullable`1<bool> get_IsIPV6Enabled();
    public void set_IsIPV6Enabled(Nullable`1<bool> value);
    internal bool IsSetIsIPV6Enabled();
    public LoggingConfig get_Logging();
    public void set_Logging(LoggingConfig value);
    internal bool IsSetLogging();
    public OriginGroups get_OriginGroups();
    public void set_OriginGroups(OriginGroups value);
    internal bool IsSetOriginGroups();
    public Origins get_Origins();
    public void set_Origins(Origins value);
    internal bool IsSetOrigins();
    public PriceClass get_PriceClass();
    public void set_PriceClass(PriceClass value);
    internal bool IsSetPriceClass();
    public Restrictions get_Restrictions();
    public void set_Restrictions(Restrictions value);
    internal bool IsSetRestrictions();
    public Nullable`1<bool> get_Staging();
    public void set_Staging(Nullable`1<bool> value);
    internal bool IsSetStaging();
    public ViewerCertificate get_ViewerCertificate();
    public void set_ViewerCertificate(ViewerCertificate value);
    internal bool IsSetViewerCertificate();
    public string get_WebACLId();
    public void set_WebACLId(string value);
    internal bool IsSetWebACLId();
}
public class Amazon.CloudFront.Model.DistributionConfigWithTags : object {
    private DistributionConfig _distributionConfig;
    private Tags _tags;
    [AWSPropertyAttribute]
public DistributionConfig DistributionConfig { get; public set; }
    [AWSPropertyAttribute]
public Tags Tags { get; public set; }
    public DistributionConfig get_DistributionConfig();
    public void set_DistributionConfig(DistributionConfig value);
    internal bool IsSetDistributionConfig();
    public Tags get_Tags();
    public void set_Tags(Tags value);
    internal bool IsSetTags();
}
public class Amazon.CloudFront.Model.DistributionIdList : object {
    private Nullable`1<bool> _isTruncated;
    private List`1<string> _items;
    private string _marker;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public Nullable`1<bool> IsTruncated { get; public set; }
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public Nullable`1<bool> get_IsTruncated();
    public void set_IsTruncated(Nullable`1<bool> value);
    internal bool IsSetIsTruncated();
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.DistributionList : object {
    private Nullable`1<bool> _isTruncated;
    private List`1<DistributionSummary> _items;
    private string _marker;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public Nullable`1<bool> IsTruncated { get; public set; }
    public List`1<DistributionSummary> Items { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public Nullable`1<bool> get_IsTruncated();
    public void set_IsTruncated(Nullable`1<bool> value);
    internal bool IsSetIsTruncated();
    public List`1<DistributionSummary> get_Items();
    public void set_Items(List`1<DistributionSummary> value);
    internal bool IsSetItems();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.DistributionNotDisabledException : AmazonCloudFrontException {
    public DistributionNotDisabledException(string message);
    public DistributionNotDisabledException(string message, Exception innerException);
    public DistributionNotDisabledException(Exception innerException);
    public DistributionNotDisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DistributionNotDisabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.DistributionSummary : object {
    private Aliases _aliases;
    private List`1<AliasICPRecordal> _aliasICPRecordals;
    private string _arn;
    private CacheBehaviors _cacheBehaviors;
    private string _comment;
    private CustomErrorResponses _customErrorResponses;
    private DefaultCacheBehavior _defaultCacheBehavior;
    private string _domainName;
    private Nullable`1<bool> _enabled;
    private HttpVersion _httpVersion;
    private string _id;
    private Nullable`1<bool> _isIPV6Enabled;
    private Nullable`1<DateTime> _lastModifiedTime;
    private OriginGroups _originGroups;
    private Origins _origins;
    private PriceClass _priceClass;
    private Restrictions _restrictions;
    private Nullable`1<bool> _staging;
    private string _status;
    private ViewerCertificate _viewerCertificate;
    private string _webACLId;
    [AWSPropertyAttribute]
public Aliases Aliases { get; public set; }
    public List`1<AliasICPRecordal> AliasICPRecordals { get; public set; }
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public CacheBehaviors CacheBehaviors { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    [AWSPropertyAttribute]
public CustomErrorResponses CustomErrorResponses { get; public set; }
    [AWSPropertyAttribute]
public DefaultCacheBehavior DefaultCacheBehavior { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public HttpVersion HttpVersion { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> IsIPV6Enabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public OriginGroups OriginGroups { get; public set; }
    [AWSPropertyAttribute]
public Origins Origins { get; public set; }
    [AWSPropertyAttribute]
public PriceClass PriceClass { get; public set; }
    [AWSPropertyAttribute]
public Restrictions Restrictions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Staging { get; public set; }
    [AWSPropertyAttribute]
public string Status { get; public set; }
    [AWSPropertyAttribute]
public ViewerCertificate ViewerCertificate { get; public set; }
    [AWSPropertyAttribute]
public string WebACLId { get; public set; }
    public Aliases get_Aliases();
    public void set_Aliases(Aliases value);
    internal bool IsSetAliases();
    public List`1<AliasICPRecordal> get_AliasICPRecordals();
    public void set_AliasICPRecordals(List`1<AliasICPRecordal> value);
    internal bool IsSetAliasICPRecordals();
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public CacheBehaviors get_CacheBehaviors();
    public void set_CacheBehaviors(CacheBehaviors value);
    internal bool IsSetCacheBehaviors();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public CustomErrorResponses get_CustomErrorResponses();
    public void set_CustomErrorResponses(CustomErrorResponses value);
    internal bool IsSetCustomErrorResponses();
    public DefaultCacheBehavior get_DefaultCacheBehavior();
    public void set_DefaultCacheBehavior(DefaultCacheBehavior value);
    internal bool IsSetDefaultCacheBehavior();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public HttpVersion get_HttpVersion();
    public void set_HttpVersion(HttpVersion value);
    internal bool IsSetHttpVersion();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<bool> get_IsIPV6Enabled();
    public void set_IsIPV6Enabled(Nullable`1<bool> value);
    internal bool IsSetIsIPV6Enabled();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public OriginGroups get_OriginGroups();
    public void set_OriginGroups(OriginGroups value);
    internal bool IsSetOriginGroups();
    public Origins get_Origins();
    public void set_Origins(Origins value);
    internal bool IsSetOrigins();
    public PriceClass get_PriceClass();
    public void set_PriceClass(PriceClass value);
    internal bool IsSetPriceClass();
    public Restrictions get_Restrictions();
    public void set_Restrictions(Restrictions value);
    internal bool IsSetRestrictions();
    public Nullable`1<bool> get_Staging();
    public void set_Staging(Nullable`1<bool> value);
    internal bool IsSetStaging();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public ViewerCertificate get_ViewerCertificate();
    public void set_ViewerCertificate(ViewerCertificate value);
    internal bool IsSetViewerCertificate();
    public string get_WebACLId();
    public void set_WebACLId(string value);
    internal bool IsSetWebACLId();
}
public class Amazon.CloudFront.Model.EncryptionEntities : object {
    private List`1<EncryptionEntity> _items;
    private Nullable`1<int> _quantity;
    public List`1<EncryptionEntity> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<EncryptionEntity> get_Items();
    public void set_Items(List`1<EncryptionEntity> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.EncryptionEntity : object {
    private FieldPatterns _fieldPatterns;
    private string _providerId;
    private string _publicKeyId;
    [AWSPropertyAttribute]
public FieldPatterns FieldPatterns { get; public set; }
    [AWSPropertyAttribute]
public string ProviderId { get; public set; }
    [AWSPropertyAttribute]
public string PublicKeyId { get; public set; }
    public FieldPatterns get_FieldPatterns();
    public void set_FieldPatterns(FieldPatterns value);
    internal bool IsSetFieldPatterns();
    public string get_ProviderId();
    public void set_ProviderId(string value);
    internal bool IsSetProviderId();
    public string get_PublicKeyId();
    public void set_PublicKeyId(string value);
    internal bool IsSetPublicKeyId();
}
public class Amazon.CloudFront.Model.EndPoint : object {
    private KinesisStreamConfig _kinesisStreamConfig;
    private string _streamType;
    public KinesisStreamConfig KinesisStreamConfig { get; public set; }
    [AWSPropertyAttribute]
public string StreamType { get; public set; }
    public KinesisStreamConfig get_KinesisStreamConfig();
    public void set_KinesisStreamConfig(KinesisStreamConfig value);
    internal bool IsSetKinesisStreamConfig();
    public string get_StreamType();
    public void set_StreamType(string value);
    internal bool IsSetStreamType();
}
public class Amazon.CloudFront.Model.EntityAlreadyExistsException : AmazonCloudFrontException {
    public EntityAlreadyExistsException(string message);
    public EntityAlreadyExistsException(string message, Exception innerException);
    public EntityAlreadyExistsException(Exception innerException);
    public EntityAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EntityAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.EntityLimitExceededException : AmazonCloudFrontException {
    public EntityLimitExceededException(string message);
    public EntityLimitExceededException(string message, Exception innerException);
    public EntityLimitExceededException(Exception innerException);
    public EntityLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EntityLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.EntityNotFoundException : AmazonCloudFrontException {
    public EntityNotFoundException(string message);
    public EntityNotFoundException(string message, Exception innerException);
    public EntityNotFoundException(Exception innerException);
    public EntityNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EntityNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.EntitySizeLimitExceededException : AmazonCloudFrontException {
    public EntitySizeLimitExceededException(string message);
    public EntitySizeLimitExceededException(string message, Exception innerException);
    public EntitySizeLimitExceededException(Exception innerException);
    public EntitySizeLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EntitySizeLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.FieldLevelEncryption : object {
    private FieldLevelEncryptionConfig _fieldLevelEncryptionConfig;
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    [AWSPropertyAttribute]
public FieldLevelEncryptionConfig FieldLevelEncryptionConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public FieldLevelEncryptionConfig get_FieldLevelEncryptionConfig();
    public void set_FieldLevelEncryptionConfig(FieldLevelEncryptionConfig value);
    internal bool IsSetFieldLevelEncryptionConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionConfig : object {
    private string _callerReference;
    private string _comment;
    private ContentTypeProfileConfig _contentTypeProfileConfig;
    private QueryArgProfileConfig _queryArgProfileConfig;
    [AWSPropertyAttribute]
public string CallerReference { get; public set; }
    public string Comment { get; public set; }
    public ContentTypeProfileConfig ContentTypeProfileConfig { get; public set; }
    public QueryArgProfileConfig QueryArgProfileConfig { get; public set; }
    public string get_CallerReference();
    public void set_CallerReference(string value);
    internal bool IsSetCallerReference();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public ContentTypeProfileConfig get_ContentTypeProfileConfig();
    public void set_ContentTypeProfileConfig(ContentTypeProfileConfig value);
    internal bool IsSetContentTypeProfileConfig();
    public QueryArgProfileConfig get_QueryArgProfileConfig();
    public void set_QueryArgProfileConfig(QueryArgProfileConfig value);
    internal bool IsSetQueryArgProfileConfig();
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionConfigAlreadyExistsException : AmazonCloudFrontException {
    public FieldLevelEncryptionConfigAlreadyExistsException(string message);
    public FieldLevelEncryptionConfigAlreadyExistsException(string message, Exception innerException);
    public FieldLevelEncryptionConfigAlreadyExistsException(Exception innerException);
    public FieldLevelEncryptionConfigAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FieldLevelEncryptionConfigAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionConfigInUseException : AmazonCloudFrontException {
    public FieldLevelEncryptionConfigInUseException(string message);
    public FieldLevelEncryptionConfigInUseException(string message, Exception innerException);
    public FieldLevelEncryptionConfigInUseException(Exception innerException);
    public FieldLevelEncryptionConfigInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FieldLevelEncryptionConfigInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionList : object {
    private List`1<FieldLevelEncryptionSummary> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<FieldLevelEncryptionSummary> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<FieldLevelEncryptionSummary> get_Items();
    public void set_Items(List`1<FieldLevelEncryptionSummary> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionProfile : object {
    private FieldLevelEncryptionProfileConfig _fieldLevelEncryptionProfileConfig;
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    [AWSPropertyAttribute]
public FieldLevelEncryptionProfileConfig FieldLevelEncryptionProfileConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public FieldLevelEncryptionProfileConfig get_FieldLevelEncryptionProfileConfig();
    public void set_FieldLevelEncryptionProfileConfig(FieldLevelEncryptionProfileConfig value);
    internal bool IsSetFieldLevelEncryptionProfileConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionProfileAlreadyExistsException : AmazonCloudFrontException {
    public FieldLevelEncryptionProfileAlreadyExistsException(string message);
    public FieldLevelEncryptionProfileAlreadyExistsException(string message, Exception innerException);
    public FieldLevelEncryptionProfileAlreadyExistsException(Exception innerException);
    public FieldLevelEncryptionProfileAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FieldLevelEncryptionProfileAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionProfileConfig : object {
    private string _callerReference;
    private string _comment;
    private EncryptionEntities _encryptionEntities;
    private string _name;
    [AWSPropertyAttribute]
public string CallerReference { get; public set; }
    public string Comment { get; public set; }
    [AWSPropertyAttribute]
public EncryptionEntities EncryptionEntities { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_CallerReference();
    public void set_CallerReference(string value);
    internal bool IsSetCallerReference();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public EncryptionEntities get_EncryptionEntities();
    public void set_EncryptionEntities(EncryptionEntities value);
    internal bool IsSetEncryptionEntities();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionProfileInUseException : AmazonCloudFrontException {
    public FieldLevelEncryptionProfileInUseException(string message);
    public FieldLevelEncryptionProfileInUseException(string message, Exception innerException);
    public FieldLevelEncryptionProfileInUseException(Exception innerException);
    public FieldLevelEncryptionProfileInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FieldLevelEncryptionProfileInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionProfileList : object {
    private List`1<FieldLevelEncryptionProfileSummary> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<FieldLevelEncryptionProfileSummary> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<FieldLevelEncryptionProfileSummary> get_Items();
    public void set_Items(List`1<FieldLevelEncryptionProfileSummary> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionProfileSizeExceededException : AmazonCloudFrontException {
    public FieldLevelEncryptionProfileSizeExceededException(string message);
    public FieldLevelEncryptionProfileSizeExceededException(string message, Exception innerException);
    public FieldLevelEncryptionProfileSizeExceededException(Exception innerException);
    public FieldLevelEncryptionProfileSizeExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FieldLevelEncryptionProfileSizeExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionProfileSummary : object {
    private string _comment;
    private EncryptionEntities _encryptionEntities;
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _name;
    public string Comment { get; public set; }
    [AWSPropertyAttribute]
public EncryptionEntities EncryptionEntities { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public EncryptionEntities get_EncryptionEntities();
    public void set_EncryptionEntities(EncryptionEntities value);
    internal bool IsSetEncryptionEntities();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.FieldLevelEncryptionSummary : object {
    private string _comment;
    private ContentTypeProfileConfig _contentTypeProfileConfig;
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    private QueryArgProfileConfig _queryArgProfileConfig;
    public string Comment { get; public set; }
    public ContentTypeProfileConfig ContentTypeProfileConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public QueryArgProfileConfig QueryArgProfileConfig { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public ContentTypeProfileConfig get_ContentTypeProfileConfig();
    public void set_ContentTypeProfileConfig(ContentTypeProfileConfig value);
    internal bool IsSetContentTypeProfileConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public QueryArgProfileConfig get_QueryArgProfileConfig();
    public void set_QueryArgProfileConfig(QueryArgProfileConfig value);
    internal bool IsSetQueryArgProfileConfig();
}
public class Amazon.CloudFront.Model.FieldPatterns : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ForwardedValues : object {
    private CookiePreference _cookies;
    private Headers _headers;
    private Nullable`1<bool> _queryString;
    private QueryStringCacheKeys _queryStringCacheKeys;
    [AWSPropertyAttribute]
public CookiePreference Cookies { get; public set; }
    public Headers Headers { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> QueryString { get; public set; }
    public QueryStringCacheKeys QueryStringCacheKeys { get; public set; }
    public CookiePreference get_Cookies();
    public void set_Cookies(CookiePreference value);
    internal bool IsSetCookies();
    public Headers get_Headers();
    public void set_Headers(Headers value);
    internal bool IsSetHeaders();
    public Nullable`1<bool> get_QueryString();
    public void set_QueryString(Nullable`1<bool> value);
    internal bool IsSetQueryString();
    public QueryStringCacheKeys get_QueryStringCacheKeys();
    public void set_QueryStringCacheKeys(QueryStringCacheKeys value);
    internal bool IsSetQueryStringCacheKeys();
}
public class Amazon.CloudFront.Model.FunctionAlreadyExistsException : AmazonCloudFrontException {
    public FunctionAlreadyExistsException(string message);
    public FunctionAlreadyExistsException(string message, Exception innerException);
    public FunctionAlreadyExistsException(Exception innerException);
    public FunctionAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FunctionAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.FunctionAssociation : object {
    private EventType _eventType;
    private string _functionARN;
    [AWSPropertyAttribute]
public EventType EventType { get; public set; }
    [AWSPropertyAttribute]
public string FunctionARN { get; public set; }
    public EventType get_EventType();
    public void set_EventType(EventType value);
    internal bool IsSetEventType();
    public string get_FunctionARN();
    public void set_FunctionARN(string value);
    internal bool IsSetFunctionARN();
}
public class Amazon.CloudFront.Model.FunctionAssociations : object {
    private List`1<FunctionAssociation> _items;
    private Nullable`1<int> _quantity;
    public List`1<FunctionAssociation> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<FunctionAssociation> get_Items();
    public void set_Items(List`1<FunctionAssociation> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.FunctionConfig : object {
    private string _comment;
    private KeyValueStoreAssociations _keyValueStoreAssociations;
    private FunctionRuntime _runtime;
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    public KeyValueStoreAssociations KeyValueStoreAssociations { get; public set; }
    [AWSPropertyAttribute]
public FunctionRuntime Runtime { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public KeyValueStoreAssociations get_KeyValueStoreAssociations();
    public void set_KeyValueStoreAssociations(KeyValueStoreAssociations value);
    internal bool IsSetKeyValueStoreAssociations();
    public FunctionRuntime get_Runtime();
    public void set_Runtime(FunctionRuntime value);
    internal bool IsSetRuntime();
}
public class Amazon.CloudFront.Model.FunctionInUseException : AmazonCloudFrontException {
    public FunctionInUseException(string message);
    public FunctionInUseException(string message, Exception innerException);
    public FunctionInUseException(Exception innerException);
    public FunctionInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FunctionInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.FunctionList : object {
    private List`1<FunctionSummary> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<FunctionSummary> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<FunctionSummary> get_Items();
    public void set_Items(List`1<FunctionSummary> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.FunctionMetadata : object {
    private Nullable`1<DateTime> _createdTime;
    private string _functionARN;
    private Nullable`1<DateTime> _lastModifiedTime;
    private FunctionStage _stage;
    public Nullable`1<DateTime> CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string FunctionARN { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public FunctionStage Stage { get; public set; }
    public Nullable`1<DateTime> get_CreatedTime();
    public void set_CreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTime();
    public string get_FunctionARN();
    public void set_FunctionARN(string value);
    internal bool IsSetFunctionARN();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public FunctionStage get_Stage();
    public void set_Stage(FunctionStage value);
    internal bool IsSetStage();
}
public class Amazon.CloudFront.Model.FunctionSizeLimitExceededException : AmazonCloudFrontException {
    public FunctionSizeLimitExceededException(string message);
    public FunctionSizeLimitExceededException(string message, Exception innerException);
    public FunctionSizeLimitExceededException(Exception innerException);
    public FunctionSizeLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public FunctionSizeLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.FunctionSummary : object {
    private FunctionConfig _functionConfig;
    private FunctionMetadata _functionMetadata;
    private string _name;
    private string _status;
    [AWSPropertyAttribute]
public FunctionConfig FunctionConfig { get; public set; }
    [AWSPropertyAttribute]
public FunctionMetadata FunctionMetadata { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string Status { get; public set; }
    public FunctionConfig get_FunctionConfig();
    public void set_FunctionConfig(FunctionConfig value);
    internal bool IsSetFunctionConfig();
    public FunctionMetadata get_FunctionMetadata();
    public void set_FunctionMetadata(FunctionMetadata value);
    internal bool IsSetFunctionMetadata();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.CloudFront.Model.GeoRestriction : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    private GeoRestrictionType _restrictionType;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    [AWSPropertyAttribute]
public GeoRestrictionType RestrictionType { get; public set; }
    public GeoRestriction(GeoRestrictionType restrictionType);
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
    public GeoRestrictionType get_RestrictionType();
    public void set_RestrictionType(GeoRestrictionType value);
    internal bool IsSetRestrictionType();
}
public class Amazon.CloudFront.Model.GetCachePolicyConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetCachePolicyConfigResponse : AmazonWebServiceResponse {
    private CachePolicyConfig _cachePolicyConfig;
    private string _eTag;
    public CachePolicyConfig CachePolicyConfig { get; public set; }
    public string ETag { get; public set; }
    public CachePolicyConfig get_CachePolicyConfig();
    public void set_CachePolicyConfig(CachePolicyConfig value);
    internal bool IsSetCachePolicyConfig();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.GetCachePolicyRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetCachePolicyResponse : AmazonWebServiceResponse {
    private CachePolicy _cachePolicy;
    private string _eTag;
    public CachePolicy CachePolicy { get; public set; }
    public string ETag { get; public set; }
    public CachePolicy get_CachePolicy();
    public void set_CachePolicy(CachePolicy value);
    internal bool IsSetCachePolicy();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.GetCloudFrontOriginAccessIdentityConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public GetCloudFrontOriginAccessIdentityConfigRequest(string id);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetCloudFrontOriginAccessIdentityConfigResponse : AmazonWebServiceResponse {
    private CloudFrontOriginAccessIdentityConfig _cloudFrontOriginAccessIdentityConfig;
    private string _eTag;
    public CloudFrontOriginAccessIdentityConfig CloudFrontOriginAccessIdentityConfig { get; public set; }
    public string ETag { get; public set; }
    public CloudFrontOriginAccessIdentityConfig get_CloudFrontOriginAccessIdentityConfig();
    public void set_CloudFrontOriginAccessIdentityConfig(CloudFrontOriginAccessIdentityConfig value);
    internal bool IsSetCloudFrontOriginAccessIdentityConfig();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.GetCloudFrontOriginAccessIdentityRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public GetCloudFrontOriginAccessIdentityRequest(string id);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetCloudFrontOriginAccessIdentityResponse : AmazonWebServiceResponse {
    private CloudFrontOriginAccessIdentity _cloudFrontOriginAccessIdentity;
    private string _eTag;
    public CloudFrontOriginAccessIdentity CloudFrontOriginAccessIdentity { get; public set; }
    public string ETag { get; public set; }
    public CloudFrontOriginAccessIdentity get_CloudFrontOriginAccessIdentity();
    public void set_CloudFrontOriginAccessIdentity(CloudFrontOriginAccessIdentity value);
    internal bool IsSetCloudFrontOriginAccessIdentity();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.GetContinuousDeploymentPolicyConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetContinuousDeploymentPolicyConfigResponse : AmazonWebServiceResponse {
    private ContinuousDeploymentPolicyConfig _continuousDeploymentPolicyConfig;
    private string _eTag;
    public ContinuousDeploymentPolicyConfig ContinuousDeploymentPolicyConfig { get; public set; }
    public string ETag { get; public set; }
    public ContinuousDeploymentPolicyConfig get_ContinuousDeploymentPolicyConfig();
    public void set_ContinuousDeploymentPolicyConfig(ContinuousDeploymentPolicyConfig value);
    internal bool IsSetContinuousDeploymentPolicyConfig();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.GetContinuousDeploymentPolicyRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetContinuousDeploymentPolicyResponse : AmazonWebServiceResponse {
    private ContinuousDeploymentPolicy _continuousDeploymentPolicy;
    private string _eTag;
    public ContinuousDeploymentPolicy ContinuousDeploymentPolicy { get; public set; }
    public string ETag { get; public set; }
    public ContinuousDeploymentPolicy get_ContinuousDeploymentPolicy();
    public void set_ContinuousDeploymentPolicy(ContinuousDeploymentPolicy value);
    internal bool IsSetContinuousDeploymentPolicy();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.GetDistributionConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public GetDistributionConfigRequest(string id);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetDistributionConfigResponse : AmazonWebServiceResponse {
    private DistributionConfig _distributionConfig;
    private string _eTag;
    public DistributionConfig DistributionConfig { get; public set; }
    public string ETag { get; public set; }
    public DistributionConfig get_DistributionConfig();
    public void set_DistributionConfig(DistributionConfig value);
    internal bool IsSetDistributionConfig();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.GetDistributionRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public GetDistributionRequest(string id);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetDistributionResponse : AmazonWebServiceResponse {
    private Distribution _distribution;
    private string _eTag;
    public Distribution Distribution { get; public set; }
    public string ETag { get; public set; }
    public Distribution get_Distribution();
    public void set_Distribution(Distribution value);
    internal bool IsSetDistribution();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.GetFieldLevelEncryptionConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetFieldLevelEncryptionConfigResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FieldLevelEncryptionConfig _fieldLevelEncryptionConfig;
    public string ETag { get; public set; }
    public FieldLevelEncryptionConfig FieldLevelEncryptionConfig { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FieldLevelEncryptionConfig get_FieldLevelEncryptionConfig();
    public void set_FieldLevelEncryptionConfig(FieldLevelEncryptionConfig value);
    internal bool IsSetFieldLevelEncryptionConfig();
}
public class Amazon.CloudFront.Model.GetFieldLevelEncryptionProfileConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetFieldLevelEncryptionProfileConfigResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FieldLevelEncryptionProfileConfig _fieldLevelEncryptionProfileConfig;
    public string ETag { get; public set; }
    public FieldLevelEncryptionProfileConfig FieldLevelEncryptionProfileConfig { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FieldLevelEncryptionProfileConfig get_FieldLevelEncryptionProfileConfig();
    public void set_FieldLevelEncryptionProfileConfig(FieldLevelEncryptionProfileConfig value);
    internal bool IsSetFieldLevelEncryptionProfileConfig();
}
public class Amazon.CloudFront.Model.GetFieldLevelEncryptionProfileRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetFieldLevelEncryptionProfileResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FieldLevelEncryptionProfile _fieldLevelEncryptionProfile;
    public string ETag { get; public set; }
    public FieldLevelEncryptionProfile FieldLevelEncryptionProfile { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FieldLevelEncryptionProfile get_FieldLevelEncryptionProfile();
    public void set_FieldLevelEncryptionProfile(FieldLevelEncryptionProfile value);
    internal bool IsSetFieldLevelEncryptionProfile();
}
public class Amazon.CloudFront.Model.GetFieldLevelEncryptionRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetFieldLevelEncryptionResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FieldLevelEncryption _fieldLevelEncryption;
    public string ETag { get; public set; }
    public FieldLevelEncryption FieldLevelEncryption { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FieldLevelEncryption get_FieldLevelEncryption();
    public void set_FieldLevelEncryption(FieldLevelEncryption value);
    internal bool IsSetFieldLevelEncryption();
}
public class Amazon.CloudFront.Model.GetFunctionRequest : AmazonCloudFrontRequest {
    private string _name;
    private FunctionStage _stage;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public FunctionStage Stage { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public FunctionStage get_Stage();
    public void set_Stage(FunctionStage value);
    internal bool IsSetStage();
}
public class Amazon.CloudFront.Model.GetFunctionResponse : AmazonWebServiceResponse {
    private string _contentType;
    private string _eTag;
    private MemoryStream _functionCode;
    public string ContentType { get; public set; }
    public string ETag { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream FunctionCode { get; public set; }
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public MemoryStream get_FunctionCode();
    public void set_FunctionCode(MemoryStream value);
    internal bool IsSetFunctionCode();
}
public class Amazon.CloudFront.Model.GetInvalidationRequest : AmazonCloudFrontRequest {
    private string _distributionId;
    private string _id;
    [AWSPropertyAttribute]
public string DistributionId { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public GetInvalidationRequest(string distributionId, string id);
    public string get_DistributionId();
    public void set_DistributionId(string value);
    internal bool IsSetDistributionId();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetInvalidationResponse : AmazonWebServiceResponse {
    private Invalidation _invalidation;
    public Invalidation Invalidation { get; public set; }
    public Invalidation get_Invalidation();
    public void set_Invalidation(Invalidation value);
    internal bool IsSetInvalidation();
}
public class Amazon.CloudFront.Model.GetKeyGroupConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetKeyGroupConfigResponse : AmazonWebServiceResponse {
    private string _eTag;
    private KeyGroupConfig _keyGroupConfig;
    public string ETag { get; public set; }
    public KeyGroupConfig KeyGroupConfig { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public KeyGroupConfig get_KeyGroupConfig();
    public void set_KeyGroupConfig(KeyGroupConfig value);
    internal bool IsSetKeyGroupConfig();
}
public class Amazon.CloudFront.Model.GetKeyGroupRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetKeyGroupResponse : AmazonWebServiceResponse {
    private string _eTag;
    private KeyGroup _keyGroup;
    public string ETag { get; public set; }
    public KeyGroup KeyGroup { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public KeyGroup get_KeyGroup();
    public void set_KeyGroup(KeyGroup value);
    internal bool IsSetKeyGroup();
}
public class Amazon.CloudFront.Model.GetMonitoringSubscriptionRequest : AmazonCloudFrontRequest {
    private string _distributionId;
    [AWSPropertyAttribute]
public string DistributionId { get; public set; }
    public string get_DistributionId();
    public void set_DistributionId(string value);
    internal bool IsSetDistributionId();
}
public class Amazon.CloudFront.Model.GetMonitoringSubscriptionResponse : AmazonWebServiceResponse {
    private MonitoringSubscription _monitoringSubscription;
    public MonitoringSubscription MonitoringSubscription { get; public set; }
    public MonitoringSubscription get_MonitoringSubscription();
    public void set_MonitoringSubscription(MonitoringSubscription value);
    internal bool IsSetMonitoringSubscription();
}
public class Amazon.CloudFront.Model.GetOriginAccessControlConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetOriginAccessControlConfigResponse : AmazonWebServiceResponse {
    private string _eTag;
    private OriginAccessControlConfig _originAccessControlConfig;
    public string ETag { get; public set; }
    public OriginAccessControlConfig OriginAccessControlConfig { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public OriginAccessControlConfig get_OriginAccessControlConfig();
    public void set_OriginAccessControlConfig(OriginAccessControlConfig value);
    internal bool IsSetOriginAccessControlConfig();
}
public class Amazon.CloudFront.Model.GetOriginAccessControlRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetOriginAccessControlResponse : AmazonWebServiceResponse {
    private string _eTag;
    private OriginAccessControl _originAccessControl;
    public string ETag { get; public set; }
    public OriginAccessControl OriginAccessControl { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public OriginAccessControl get_OriginAccessControl();
    public void set_OriginAccessControl(OriginAccessControl value);
    internal bool IsSetOriginAccessControl();
}
public class Amazon.CloudFront.Model.GetOriginRequestPolicyConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetOriginRequestPolicyConfigResponse : AmazonWebServiceResponse {
    private string _eTag;
    private OriginRequestPolicyConfig _originRequestPolicyConfig;
    public string ETag { get; public set; }
    public OriginRequestPolicyConfig OriginRequestPolicyConfig { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public OriginRequestPolicyConfig get_OriginRequestPolicyConfig();
    public void set_OriginRequestPolicyConfig(OriginRequestPolicyConfig value);
    internal bool IsSetOriginRequestPolicyConfig();
}
public class Amazon.CloudFront.Model.GetOriginRequestPolicyRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetOriginRequestPolicyResponse : AmazonWebServiceResponse {
    private string _eTag;
    private OriginRequestPolicy _originRequestPolicy;
    public string ETag { get; public set; }
    public OriginRequestPolicy OriginRequestPolicy { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public OriginRequestPolicy get_OriginRequestPolicy();
    public void set_OriginRequestPolicy(OriginRequestPolicy value);
    internal bool IsSetOriginRequestPolicy();
}
public class Amazon.CloudFront.Model.GetPublicKeyConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetPublicKeyConfigResponse : AmazonWebServiceResponse {
    private string _eTag;
    private PublicKeyConfig _publicKeyConfig;
    public string ETag { get; public set; }
    public PublicKeyConfig PublicKeyConfig { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public PublicKeyConfig get_PublicKeyConfig();
    public void set_PublicKeyConfig(PublicKeyConfig value);
    internal bool IsSetPublicKeyConfig();
}
public class Amazon.CloudFront.Model.GetPublicKeyRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetPublicKeyResponse : AmazonWebServiceResponse {
    private string _eTag;
    private PublicKey _publicKey;
    public string ETag { get; public set; }
    public PublicKey PublicKey { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public PublicKey get_PublicKey();
    public void set_PublicKey(PublicKey value);
    internal bool IsSetPublicKey();
}
public class Amazon.CloudFront.Model.GetRealtimeLogConfigRequest : AmazonCloudFrontRequest {
    private string _arn;
    private string _name;
    public string ARN { get; public set; }
    public string Name { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.GetRealtimeLogConfigResponse : AmazonWebServiceResponse {
    private RealtimeLogConfig _realtimeLogConfig;
    public RealtimeLogConfig RealtimeLogConfig { get; public set; }
    public RealtimeLogConfig get_RealtimeLogConfig();
    public void set_RealtimeLogConfig(RealtimeLogConfig value);
    internal bool IsSetRealtimeLogConfig();
}
public class Amazon.CloudFront.Model.GetResponseHeadersPolicyConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetResponseHeadersPolicyConfigResponse : AmazonWebServiceResponse {
    private string _eTag;
    private ResponseHeadersPolicyConfig _responseHeadersPolicyConfig;
    public string ETag { get; public set; }
    public ResponseHeadersPolicyConfig ResponseHeadersPolicyConfig { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public ResponseHeadersPolicyConfig get_ResponseHeadersPolicyConfig();
    public void set_ResponseHeadersPolicyConfig(ResponseHeadersPolicyConfig value);
    internal bool IsSetResponseHeadersPolicyConfig();
}
public class Amazon.CloudFront.Model.GetResponseHeadersPolicyRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetResponseHeadersPolicyResponse : AmazonWebServiceResponse {
    private string _eTag;
    private ResponseHeadersPolicy _responseHeadersPolicy;
    public string ETag { get; public set; }
    public ResponseHeadersPolicy ResponseHeadersPolicy { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public ResponseHeadersPolicy get_ResponseHeadersPolicy();
    public void set_ResponseHeadersPolicy(ResponseHeadersPolicy value);
    internal bool IsSetResponseHeadersPolicy();
}
public class Amazon.CloudFront.Model.GetStreamingDistributionConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public GetStreamingDistributionConfigRequest(string id);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetStreamingDistributionConfigResponse : AmazonWebServiceResponse {
    private string _eTag;
    private StreamingDistributionConfig _streamingDistributionConfig;
    public string ETag { get; public set; }
    public StreamingDistributionConfig StreamingDistributionConfig { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public StreamingDistributionConfig get_StreamingDistributionConfig();
    public void set_StreamingDistributionConfig(StreamingDistributionConfig value);
    internal bool IsSetStreamingDistributionConfig();
}
public class Amazon.CloudFront.Model.GetStreamingDistributionRequest : AmazonCloudFrontRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public GetStreamingDistributionRequest(string id);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudFront.Model.GetStreamingDistributionResponse : AmazonWebServiceResponse {
    private string _eTag;
    private StreamingDistribution _streamingDistribution;
    public string ETag { get; public set; }
    public StreamingDistribution StreamingDistribution { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public StreamingDistribution get_StreamingDistribution();
    public void set_StreamingDistribution(StreamingDistribution value);
    internal bool IsSetStreamingDistribution();
}
public class Amazon.CloudFront.Model.Headers : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public interface Amazon.CloudFront.Model.ICloudFrontPaginatorFactory {
    public abstract virtual IListCloudFrontOriginAccessIdentitiesPaginator ListCloudFrontOriginAccessIdentities(ListCloudFrontOriginAccessIdentitiesRequest request);
    public abstract virtual IListDistributionsPaginator ListDistributions(ListDistributionsRequest request);
    public abstract virtual IListInvalidationsPaginator ListInvalidations(ListInvalidationsRequest request);
    public abstract virtual IListKeyValueStoresPaginator ListKeyValueStores(ListKeyValueStoresRequest request);
    public abstract virtual IListStreamingDistributionsPaginator ListStreamingDistributions(ListStreamingDistributionsRequest request);
}
public interface Amazon.CloudFront.Model.IListCloudFrontOriginAccessIdentitiesPaginator {
    public IPaginatedEnumerable`1<ListCloudFrontOriginAccessIdentitiesResponse> Responses { get; }
    public IPaginatedEnumerable`1<CloudFrontOriginAccessIdentitySummary> Items { get; }
    public abstract virtual IPaginatedEnumerable`1<ListCloudFrontOriginAccessIdentitiesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<CloudFrontOriginAccessIdentitySummary> get_Items();
}
public interface Amazon.CloudFront.Model.IListDistributionsPaginator {
    public IPaginatedEnumerable`1<ListDistributionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DistributionSummary> Items { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDistributionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DistributionSummary> get_Items();
}
public interface Amazon.CloudFront.Model.IListInvalidationsPaginator {
    public IPaginatedEnumerable`1<ListInvalidationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InvalidationSummary> Items { get; }
    public abstract virtual IPaginatedEnumerable`1<ListInvalidationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<InvalidationSummary> get_Items();
}
public interface Amazon.CloudFront.Model.IListKeyValueStoresPaginator {
    public IPaginatedEnumerable`1<ListKeyValueStoresResponse> Responses { get; }
    public IPaginatedEnumerable`1<KeyValueStore> Items { get; }
    public abstract virtual IPaginatedEnumerable`1<ListKeyValueStoresResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<KeyValueStore> get_Items();
}
public interface Amazon.CloudFront.Model.IListStreamingDistributionsPaginator {
    public IPaginatedEnumerable`1<ListStreamingDistributionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<StreamingDistributionSummary> Items { get; }
    public abstract virtual IPaginatedEnumerable`1<ListStreamingDistributionsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<StreamingDistributionSummary> get_Items();
}
public class Amazon.CloudFront.Model.IllegalDeleteException : AmazonCloudFrontException {
    public IllegalDeleteException(string message);
    public IllegalDeleteException(string message, Exception innerException);
    public IllegalDeleteException(Exception innerException);
    public IllegalDeleteException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IllegalDeleteException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorException : AmazonCloudFrontException {
    public IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorException(string message);
    public IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorException(string message, Exception innerException);
    public IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorException(Exception innerException);
    public IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.IllegalOriginAccessConfigurationException : AmazonCloudFrontException {
    public IllegalOriginAccessConfigurationException(string message);
    public IllegalOriginAccessConfigurationException(string message, Exception innerException);
    public IllegalOriginAccessConfigurationException(Exception innerException);
    public IllegalOriginAccessConfigurationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IllegalOriginAccessConfigurationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.IllegalUpdateException : AmazonCloudFrontException {
    public IllegalUpdateException(string message);
    public IllegalUpdateException(string message, Exception innerException);
    public IllegalUpdateException(Exception innerException);
    public IllegalUpdateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IllegalUpdateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.ImportSource : object {
    private string _sourceARN;
    private ImportSourceType _sourceType;
    [AWSPropertyAttribute]
public string SourceARN { get; public set; }
    [AWSPropertyAttribute]
public ImportSourceType SourceType { get; public set; }
    public string get_SourceARN();
    public void set_SourceARN(string value);
    internal bool IsSetSourceARN();
    public ImportSourceType get_SourceType();
    public void set_SourceType(ImportSourceType value);
    internal bool IsSetSourceType();
}
public class Amazon.CloudFront.Model.InconsistentQuantitiesException : AmazonCloudFrontException {
    public InconsistentQuantitiesException(string message);
    public InconsistentQuantitiesException(string message, Exception innerException);
    public InconsistentQuantitiesException(Exception innerException);
    public InconsistentQuantitiesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InconsistentQuantitiesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller : object {
    private static AccessDeniedExceptionUnmarshaller _instance;
    public static AccessDeniedExceptionUnmarshaller Instance { get; }
    private static AccessDeniedExceptionUnmarshaller();
    public sealed virtual AccessDeniedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccessDeniedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ActiveTrustedKeyGroupsUnmarshaller : object {
    private static ActiveTrustedKeyGroupsUnmarshaller _instance;
    public static ActiveTrustedKeyGroupsUnmarshaller Instance { get; }
    private static ActiveTrustedKeyGroupsUnmarshaller();
    public sealed virtual ActiveTrustedKeyGroups Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ActiveTrustedKeyGroups Unmarshall(JsonUnmarshallerContext context);
    public static ActiveTrustedKeyGroupsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ActiveTrustedSignersUnmarshaller : object {
    private static ActiveTrustedSignersUnmarshaller _instance;
    public static ActiveTrustedSignersUnmarshaller Instance { get; }
    private static ActiveTrustedSignersUnmarshaller();
    public sealed virtual ActiveTrustedSigners Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ActiveTrustedSigners Unmarshall(JsonUnmarshallerContext context);
    public static ActiveTrustedSignersUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.AliasesUnmarshaller : object {
    private static AliasesUnmarshaller _instance;
    public static AliasesUnmarshaller Instance { get; }
    private static AliasesUnmarshaller();
    public sealed virtual Aliases Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Aliases Unmarshall(JsonUnmarshallerContext context);
    public static AliasesUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.AliasICPRecordalUnmarshaller : object {
    private static AliasICPRecordalUnmarshaller _instance;
    public static AliasICPRecordalUnmarshaller Instance { get; }
    private static AliasICPRecordalUnmarshaller();
    public sealed virtual AliasICPRecordal Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AliasICPRecordal Unmarshall(JsonUnmarshallerContext context);
    public static AliasICPRecordalUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.AllowedMethodsUnmarshaller : object {
    private static AllowedMethodsUnmarshaller _instance;
    public static AllowedMethodsUnmarshaller Instance { get; }
    private static AllowedMethodsUnmarshaller();
    public sealed virtual AllowedMethods Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AllowedMethods Unmarshall(JsonUnmarshallerContext context);
    public static AllowedMethodsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.AssociateAliasRequestMarshaller : object {
    private static AssociateAliasRequestMarshaller _instance;
    public static AssociateAliasRequestMarshaller Instance { get; }
    private static AssociateAliasRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateAliasRequest publicRequest);
    internal static AssociateAliasRequestMarshaller GetInstance();
    public static AssociateAliasRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.AssociateAliasResponseUnmarshaller : XmlResponseUnmarshaller {
    private static AssociateAliasResponseUnmarshaller _instance;
    public static AssociateAliasResponseUnmarshaller Instance { get; }
    private static AssociateAliasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateAliasResponseUnmarshaller GetInstance();
    public static AssociateAliasResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.BatchTooLargeExceptionUnmarshaller : object {
    private static BatchTooLargeExceptionUnmarshaller _instance;
    public static BatchTooLargeExceptionUnmarshaller Instance { get; }
    private static BatchTooLargeExceptionUnmarshaller();
    public sealed virtual BatchTooLargeException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchTooLargeException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static BatchTooLargeExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CacheBehaviorsUnmarshaller : object {
    private static CacheBehaviorsUnmarshaller _instance;
    public static CacheBehaviorsUnmarshaller Instance { get; }
    private static CacheBehaviorsUnmarshaller();
    public sealed virtual CacheBehaviors Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CacheBehaviors Unmarshall(JsonUnmarshallerContext context);
    public static CacheBehaviorsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CacheBehaviorUnmarshaller : object {
    private static CacheBehaviorUnmarshaller _instance;
    public static CacheBehaviorUnmarshaller Instance { get; }
    private static CacheBehaviorUnmarshaller();
    public sealed virtual CacheBehavior Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CacheBehavior Unmarshall(JsonUnmarshallerContext context);
    public static CacheBehaviorUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CachedMethodsUnmarshaller : object {
    private static CachedMethodsUnmarshaller _instance;
    public static CachedMethodsUnmarshaller Instance { get; }
    private static CachedMethodsUnmarshaller();
    public sealed virtual CachedMethods Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachedMethods Unmarshall(JsonUnmarshallerContext context);
    public static CachedMethodsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CachePolicyAlreadyExistsExceptionUnmarshaller : object {
    private static CachePolicyAlreadyExistsExceptionUnmarshaller _instance;
    public static CachePolicyAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static CachePolicyAlreadyExistsExceptionUnmarshaller();
    public sealed virtual CachePolicyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachePolicyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CachePolicyAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CachePolicyConfigUnmarshaller : object {
    private static CachePolicyConfigUnmarshaller _instance;
    public static CachePolicyConfigUnmarshaller Instance { get; }
    private static CachePolicyConfigUnmarshaller();
    public sealed virtual CachePolicyConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachePolicyConfig Unmarshall(JsonUnmarshallerContext context);
    public static CachePolicyConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CachePolicyCookiesConfigUnmarshaller : object {
    private static CachePolicyCookiesConfigUnmarshaller _instance;
    public static CachePolicyCookiesConfigUnmarshaller Instance { get; }
    private static CachePolicyCookiesConfigUnmarshaller();
    public sealed virtual CachePolicyCookiesConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachePolicyCookiesConfig Unmarshall(JsonUnmarshallerContext context);
    public static CachePolicyCookiesConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CachePolicyHeadersConfigUnmarshaller : object {
    private static CachePolicyHeadersConfigUnmarshaller _instance;
    public static CachePolicyHeadersConfigUnmarshaller Instance { get; }
    private static CachePolicyHeadersConfigUnmarshaller();
    public sealed virtual CachePolicyHeadersConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachePolicyHeadersConfig Unmarshall(JsonUnmarshallerContext context);
    public static CachePolicyHeadersConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CachePolicyInUseExceptionUnmarshaller : object {
    private static CachePolicyInUseExceptionUnmarshaller _instance;
    public static CachePolicyInUseExceptionUnmarshaller Instance { get; }
    private static CachePolicyInUseExceptionUnmarshaller();
    public sealed virtual CachePolicyInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachePolicyInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CachePolicyInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CachePolicyListUnmarshaller : object {
    private static CachePolicyListUnmarshaller _instance;
    public static CachePolicyListUnmarshaller Instance { get; }
    private static CachePolicyListUnmarshaller();
    public sealed virtual CachePolicyList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachePolicyList Unmarshall(JsonUnmarshallerContext context);
    public static CachePolicyListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CachePolicyQueryStringsConfigUnmarshaller : object {
    private static CachePolicyQueryStringsConfigUnmarshaller _instance;
    public static CachePolicyQueryStringsConfigUnmarshaller Instance { get; }
    private static CachePolicyQueryStringsConfigUnmarshaller();
    public sealed virtual CachePolicyQueryStringsConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachePolicyQueryStringsConfig Unmarshall(JsonUnmarshallerContext context);
    public static CachePolicyQueryStringsConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CachePolicySummaryUnmarshaller : object {
    private static CachePolicySummaryUnmarshaller _instance;
    public static CachePolicySummaryUnmarshaller Instance { get; }
    private static CachePolicySummaryUnmarshaller();
    public sealed virtual CachePolicySummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachePolicySummary Unmarshall(JsonUnmarshallerContext context);
    public static CachePolicySummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CachePolicyUnmarshaller : object {
    private static CachePolicyUnmarshaller _instance;
    public static CachePolicyUnmarshaller Instance { get; }
    private static CachePolicyUnmarshaller();
    public sealed virtual CachePolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CachePolicy Unmarshall(JsonUnmarshallerContext context);
    public static CachePolicyUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CannotChangeImmutablePublicKeyFieldsExceptionUnmarshaller : object {
    private static CannotChangeImmutablePublicKeyFieldsExceptionUnmarshaller _instance;
    public static CannotChangeImmutablePublicKeyFieldsExceptionUnmarshaller Instance { get; }
    private static CannotChangeImmutablePublicKeyFieldsExceptionUnmarshaller();
    public sealed virtual CannotChangeImmutablePublicKeyFieldsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CannotChangeImmutablePublicKeyFieldsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CannotChangeImmutablePublicKeyFieldsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CannotDeleteEntityWhileInUseExceptionUnmarshaller : object {
    private static CannotDeleteEntityWhileInUseExceptionUnmarshaller _instance;
    public static CannotDeleteEntityWhileInUseExceptionUnmarshaller Instance { get; }
    private static CannotDeleteEntityWhileInUseExceptionUnmarshaller();
    public sealed virtual CannotDeleteEntityWhileInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CannotDeleteEntityWhileInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CannotDeleteEntityWhileInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CloudFrontOriginAccessIdentityAlreadyExistsExceptionUnmarshaller : object {
    private static CloudFrontOriginAccessIdentityAlreadyExistsExceptionUnmarshaller _instance;
    public static CloudFrontOriginAccessIdentityAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static CloudFrontOriginAccessIdentityAlreadyExistsExceptionUnmarshaller();
    public sealed virtual CloudFrontOriginAccessIdentityAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudFrontOriginAccessIdentityAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CloudFrontOriginAccessIdentityAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CloudFrontOriginAccessIdentityConfigUnmarshaller : object {
    private static CloudFrontOriginAccessIdentityConfigUnmarshaller _instance;
    public static CloudFrontOriginAccessIdentityConfigUnmarshaller Instance { get; }
    private static CloudFrontOriginAccessIdentityConfigUnmarshaller();
    public sealed virtual CloudFrontOriginAccessIdentityConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudFrontOriginAccessIdentityConfig Unmarshall(JsonUnmarshallerContext context);
    public static CloudFrontOriginAccessIdentityConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CloudFrontOriginAccessIdentityInUseExceptionUnmarshaller : object {
    private static CloudFrontOriginAccessIdentityInUseExceptionUnmarshaller _instance;
    public static CloudFrontOriginAccessIdentityInUseExceptionUnmarshaller Instance { get; }
    private static CloudFrontOriginAccessIdentityInUseExceptionUnmarshaller();
    public sealed virtual CloudFrontOriginAccessIdentityInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudFrontOriginAccessIdentityInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CloudFrontOriginAccessIdentityInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CloudFrontOriginAccessIdentityListUnmarshaller : object {
    private static CloudFrontOriginAccessIdentityListUnmarshaller _instance;
    public static CloudFrontOriginAccessIdentityListUnmarshaller Instance { get; }
    private static CloudFrontOriginAccessIdentityListUnmarshaller();
    public sealed virtual CloudFrontOriginAccessIdentityList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudFrontOriginAccessIdentityList Unmarshall(JsonUnmarshallerContext context);
    public static CloudFrontOriginAccessIdentityListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CloudFrontOriginAccessIdentitySummaryUnmarshaller : object {
    private static CloudFrontOriginAccessIdentitySummaryUnmarshaller _instance;
    public static CloudFrontOriginAccessIdentitySummaryUnmarshaller Instance { get; }
    private static CloudFrontOriginAccessIdentitySummaryUnmarshaller();
    public sealed virtual CloudFrontOriginAccessIdentitySummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudFrontOriginAccessIdentitySummary Unmarshall(JsonUnmarshallerContext context);
    public static CloudFrontOriginAccessIdentitySummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CloudFrontOriginAccessIdentityUnmarshaller : object {
    private static CloudFrontOriginAccessIdentityUnmarshaller _instance;
    public static CloudFrontOriginAccessIdentityUnmarshaller Instance { get; }
    private static CloudFrontOriginAccessIdentityUnmarshaller();
    public sealed virtual CloudFrontOriginAccessIdentity Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudFrontOriginAccessIdentity Unmarshall(JsonUnmarshallerContext context);
    public static CloudFrontOriginAccessIdentityUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CNAMEAlreadyExistsExceptionUnmarshaller : object {
    private static CNAMEAlreadyExistsExceptionUnmarshaller _instance;
    public static CNAMEAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static CNAMEAlreadyExistsExceptionUnmarshaller();
    public sealed virtual CNAMEAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CNAMEAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static CNAMEAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ConflictingAliasesListUnmarshaller : object {
    private static ConflictingAliasesListUnmarshaller _instance;
    public static ConflictingAliasesListUnmarshaller Instance { get; }
    private static ConflictingAliasesListUnmarshaller();
    public sealed virtual ConflictingAliasesList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConflictingAliasesList Unmarshall(JsonUnmarshallerContext context);
    public static ConflictingAliasesListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ConflictingAliasUnmarshaller : object {
    private static ConflictingAliasUnmarshaller _instance;
    public static ConflictingAliasUnmarshaller Instance { get; }
    private static ConflictingAliasUnmarshaller();
    public sealed virtual ConflictingAlias Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConflictingAlias Unmarshall(JsonUnmarshallerContext context);
    public static ConflictingAliasUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContentTypeProfileConfigUnmarshaller : object {
    private static ContentTypeProfileConfigUnmarshaller _instance;
    public static ContentTypeProfileConfigUnmarshaller Instance { get; }
    private static ContentTypeProfileConfigUnmarshaller();
    public sealed virtual ContentTypeProfileConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContentTypeProfileConfig Unmarshall(JsonUnmarshallerContext context);
    public static ContentTypeProfileConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContentTypeProfilesUnmarshaller : object {
    private static ContentTypeProfilesUnmarshaller _instance;
    public static ContentTypeProfilesUnmarshaller Instance { get; }
    private static ContentTypeProfilesUnmarshaller();
    public sealed virtual ContentTypeProfiles Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContentTypeProfiles Unmarshall(JsonUnmarshallerContext context);
    public static ContentTypeProfilesUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContentTypeProfileUnmarshaller : object {
    private static ContentTypeProfileUnmarshaller _instance;
    public static ContentTypeProfileUnmarshaller Instance { get; }
    private static ContentTypeProfileUnmarshaller();
    public sealed virtual ContentTypeProfile Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContentTypeProfile Unmarshall(JsonUnmarshallerContext context);
    public static ContentTypeProfileUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContinuousDeploymentPolicyAlreadyExistsExceptionUnmarshaller : object {
    private static ContinuousDeploymentPolicyAlreadyExistsExceptionUnmarshaller _instance;
    public static ContinuousDeploymentPolicyAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ContinuousDeploymentPolicyAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ContinuousDeploymentPolicyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContinuousDeploymentPolicyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ContinuousDeploymentPolicyAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContinuousDeploymentPolicyConfigUnmarshaller : object {
    private static ContinuousDeploymentPolicyConfigUnmarshaller _instance;
    public static ContinuousDeploymentPolicyConfigUnmarshaller Instance { get; }
    private static ContinuousDeploymentPolicyConfigUnmarshaller();
    public sealed virtual ContinuousDeploymentPolicyConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContinuousDeploymentPolicyConfig Unmarshall(JsonUnmarshallerContext context);
    public static ContinuousDeploymentPolicyConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContinuousDeploymentPolicyInUseExceptionUnmarshaller : object {
    private static ContinuousDeploymentPolicyInUseExceptionUnmarshaller _instance;
    public static ContinuousDeploymentPolicyInUseExceptionUnmarshaller Instance { get; }
    private static ContinuousDeploymentPolicyInUseExceptionUnmarshaller();
    public sealed virtual ContinuousDeploymentPolicyInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContinuousDeploymentPolicyInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ContinuousDeploymentPolicyInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContinuousDeploymentPolicyListUnmarshaller : object {
    private static ContinuousDeploymentPolicyListUnmarshaller _instance;
    public static ContinuousDeploymentPolicyListUnmarshaller Instance { get; }
    private static ContinuousDeploymentPolicyListUnmarshaller();
    public sealed virtual ContinuousDeploymentPolicyList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContinuousDeploymentPolicyList Unmarshall(JsonUnmarshallerContext context);
    public static ContinuousDeploymentPolicyListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContinuousDeploymentPolicySummaryUnmarshaller : object {
    private static ContinuousDeploymentPolicySummaryUnmarshaller _instance;
    public static ContinuousDeploymentPolicySummaryUnmarshaller Instance { get; }
    private static ContinuousDeploymentPolicySummaryUnmarshaller();
    public sealed virtual ContinuousDeploymentPolicySummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContinuousDeploymentPolicySummary Unmarshall(JsonUnmarshallerContext context);
    public static ContinuousDeploymentPolicySummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContinuousDeploymentPolicyUnmarshaller : object {
    private static ContinuousDeploymentPolicyUnmarshaller _instance;
    public static ContinuousDeploymentPolicyUnmarshaller Instance { get; }
    private static ContinuousDeploymentPolicyUnmarshaller();
    public sealed virtual ContinuousDeploymentPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContinuousDeploymentPolicy Unmarshall(JsonUnmarshallerContext context);
    public static ContinuousDeploymentPolicyUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContinuousDeploymentSingleHeaderConfigUnmarshaller : object {
    private static ContinuousDeploymentSingleHeaderConfigUnmarshaller _instance;
    public static ContinuousDeploymentSingleHeaderConfigUnmarshaller Instance { get; }
    private static ContinuousDeploymentSingleHeaderConfigUnmarshaller();
    public sealed virtual ContinuousDeploymentSingleHeaderConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContinuousDeploymentSingleHeaderConfig Unmarshall(JsonUnmarshallerContext context);
    public static ContinuousDeploymentSingleHeaderConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ContinuousDeploymentSingleWeightConfigUnmarshaller : object {
    private static ContinuousDeploymentSingleWeightConfigUnmarshaller _instance;
    public static ContinuousDeploymentSingleWeightConfigUnmarshaller Instance { get; }
    private static ContinuousDeploymentSingleWeightConfigUnmarshaller();
    public sealed virtual ContinuousDeploymentSingleWeightConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContinuousDeploymentSingleWeightConfig Unmarshall(JsonUnmarshallerContext context);
    public static ContinuousDeploymentSingleWeightConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CookieNamesUnmarshaller : object {
    private static CookieNamesUnmarshaller _instance;
    public static CookieNamesUnmarshaller Instance { get; }
    private static CookieNamesUnmarshaller();
    public sealed virtual CookieNames Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CookieNames Unmarshall(JsonUnmarshallerContext context);
    public static CookieNamesUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CookiePreferenceUnmarshaller : object {
    private static CookiePreferenceUnmarshaller _instance;
    public static CookiePreferenceUnmarshaller Instance { get; }
    private static CookiePreferenceUnmarshaller();
    public sealed virtual CookiePreference Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CookiePreference Unmarshall(JsonUnmarshallerContext context);
    public static CookiePreferenceUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CopyDistributionRequestMarshaller : object {
    private static CopyDistributionRequestMarshaller _instance;
    public static CopyDistributionRequestMarshaller Instance { get; }
    private static CopyDistributionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CopyDistributionRequest publicRequest);
    internal static CopyDistributionRequestMarshaller GetInstance();
    public static CopyDistributionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CopyDistributionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CopyDistributionResponseUnmarshaller _instance;
    public static CopyDistributionResponseUnmarshaller Instance { get; }
    private static CopyDistributionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CopyDistributionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CopyDistributionResponseUnmarshaller GetInstance();
    public static CopyDistributionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateCachePolicyRequestMarshaller : object {
    private static CreateCachePolicyRequestMarshaller _instance;
    public static CreateCachePolicyRequestMarshaller Instance { get; }
    private static CreateCachePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCachePolicyRequest publicRequest);
    internal static CreateCachePolicyRequestMarshaller GetInstance();
    public static CreateCachePolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateCachePolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateCachePolicyResponseUnmarshaller _instance;
    public static CreateCachePolicyResponseUnmarshaller Instance { get; }
    private static CreateCachePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateCachePolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCachePolicyResponseUnmarshaller GetInstance();
    public static CreateCachePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateCloudFrontOriginAccessIdentityRequestMarshaller : object {
    private static CreateCloudFrontOriginAccessIdentityRequestMarshaller _instance;
    public static CreateCloudFrontOriginAccessIdentityRequestMarshaller Instance { get; }
    private static CreateCloudFrontOriginAccessIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateCloudFrontOriginAccessIdentityRequest publicRequest);
    internal static CreateCloudFrontOriginAccessIdentityRequestMarshaller GetInstance();
    public static CreateCloudFrontOriginAccessIdentityRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateCloudFrontOriginAccessIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateCloudFrontOriginAccessIdentityResponseUnmarshaller _instance;
    public static CreateCloudFrontOriginAccessIdentityResponseUnmarshaller Instance { get; }
    private static CreateCloudFrontOriginAccessIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateCloudFrontOriginAccessIdentityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateCloudFrontOriginAccessIdentityResponseUnmarshaller GetInstance();
    public static CreateCloudFrontOriginAccessIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateContinuousDeploymentPolicyRequestMarshaller : object {
    private static CreateContinuousDeploymentPolicyRequestMarshaller _instance;
    public static CreateContinuousDeploymentPolicyRequestMarshaller Instance { get; }
    private static CreateContinuousDeploymentPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateContinuousDeploymentPolicyRequest publicRequest);
    internal static CreateContinuousDeploymentPolicyRequestMarshaller GetInstance();
    public static CreateContinuousDeploymentPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateContinuousDeploymentPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateContinuousDeploymentPolicyResponseUnmarshaller _instance;
    public static CreateContinuousDeploymentPolicyResponseUnmarshaller Instance { get; }
    private static CreateContinuousDeploymentPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateContinuousDeploymentPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateContinuousDeploymentPolicyResponseUnmarshaller GetInstance();
    public static CreateContinuousDeploymentPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateDistributionRequestMarshaller : object {
    private static CreateDistributionRequestMarshaller _instance;
    public static CreateDistributionRequestMarshaller Instance { get; }
    private static CreateDistributionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDistributionRequest publicRequest);
    internal static CreateDistributionRequestMarshaller GetInstance();
    public static CreateDistributionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateDistributionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDistributionResponseUnmarshaller _instance;
    public static CreateDistributionResponseUnmarshaller Instance { get; }
    private static CreateDistributionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDistributionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDistributionResponseUnmarshaller GetInstance();
    public static CreateDistributionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateDistributionWithTagsRequestMarshaller : object {
    private static CreateDistributionWithTagsRequestMarshaller _instance;
    public static CreateDistributionWithTagsRequestMarshaller Instance { get; }
    private static CreateDistributionWithTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDistributionWithTagsRequest publicRequest);
    internal static CreateDistributionWithTagsRequestMarshaller GetInstance();
    public static CreateDistributionWithTagsRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateDistributionWithTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateDistributionWithTagsResponseUnmarshaller _instance;
    public static CreateDistributionWithTagsResponseUnmarshaller Instance { get; }
    private static CreateDistributionWithTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateDistributionWithTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDistributionWithTagsResponseUnmarshaller GetInstance();
    public static CreateDistributionWithTagsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateFieldLevelEncryptionConfigRequestMarshaller : object {
    private static CreateFieldLevelEncryptionConfigRequestMarshaller _instance;
    public static CreateFieldLevelEncryptionConfigRequestMarshaller Instance { get; }
    private static CreateFieldLevelEncryptionConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFieldLevelEncryptionConfigRequest publicRequest);
    internal static CreateFieldLevelEncryptionConfigRequestMarshaller GetInstance();
    public static CreateFieldLevelEncryptionConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateFieldLevelEncryptionConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateFieldLevelEncryptionConfigResponseUnmarshaller _instance;
    public static CreateFieldLevelEncryptionConfigResponseUnmarshaller Instance { get; }
    private static CreateFieldLevelEncryptionConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateFieldLevelEncryptionConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFieldLevelEncryptionConfigResponseUnmarshaller GetInstance();
    public static CreateFieldLevelEncryptionConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateFieldLevelEncryptionProfileRequestMarshaller : object {
    private static CreateFieldLevelEncryptionProfileRequestMarshaller _instance;
    public static CreateFieldLevelEncryptionProfileRequestMarshaller Instance { get; }
    private static CreateFieldLevelEncryptionProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFieldLevelEncryptionProfileRequest publicRequest);
    internal static CreateFieldLevelEncryptionProfileRequestMarshaller GetInstance();
    public static CreateFieldLevelEncryptionProfileRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateFieldLevelEncryptionProfileResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateFieldLevelEncryptionProfileResponseUnmarshaller _instance;
    public static CreateFieldLevelEncryptionProfileResponseUnmarshaller Instance { get; }
    private static CreateFieldLevelEncryptionProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateFieldLevelEncryptionProfileResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFieldLevelEncryptionProfileResponseUnmarshaller GetInstance();
    public static CreateFieldLevelEncryptionProfileResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateFunctionRequestMarshaller : object {
    private static CreateFunctionRequestMarshaller _instance;
    public static CreateFunctionRequestMarshaller Instance { get; }
    private static CreateFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFunctionRequest publicRequest);
    internal static CreateFunctionRequestMarshaller GetInstance();
    public static CreateFunctionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateFunctionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateFunctionResponseUnmarshaller _instance;
    public static CreateFunctionResponseUnmarshaller Instance { get; }
    private static CreateFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateFunctionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFunctionResponseUnmarshaller GetInstance();
    public static CreateFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateInvalidationRequestMarshaller : object {
    private static CreateInvalidationRequestMarshaller _instance;
    public static CreateInvalidationRequestMarshaller Instance { get; }
    private static CreateInvalidationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateInvalidationRequest publicRequest);
    internal static CreateInvalidationRequestMarshaller GetInstance();
    public static CreateInvalidationRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateInvalidationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateInvalidationResponseUnmarshaller _instance;
    public static CreateInvalidationResponseUnmarshaller Instance { get; }
    private static CreateInvalidationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateInvalidationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateInvalidationResponseUnmarshaller GetInstance();
    public static CreateInvalidationResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateKeyGroupRequestMarshaller : object {
    private static CreateKeyGroupRequestMarshaller _instance;
    public static CreateKeyGroupRequestMarshaller Instance { get; }
    private static CreateKeyGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateKeyGroupRequest publicRequest);
    internal static CreateKeyGroupRequestMarshaller GetInstance();
    public static CreateKeyGroupRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateKeyGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateKeyGroupResponseUnmarshaller _instance;
    public static CreateKeyGroupResponseUnmarshaller Instance { get; }
    private static CreateKeyGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateKeyGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateKeyGroupResponseUnmarshaller GetInstance();
    public static CreateKeyGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateKeyValueStoreRequestMarshaller : object {
    private static CreateKeyValueStoreRequestMarshaller _instance;
    public static CreateKeyValueStoreRequestMarshaller Instance { get; }
    private static CreateKeyValueStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateKeyValueStoreRequest publicRequest);
    internal static CreateKeyValueStoreRequestMarshaller GetInstance();
    public static CreateKeyValueStoreRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateKeyValueStoreResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateKeyValueStoreResponseUnmarshaller _instance;
    public static CreateKeyValueStoreResponseUnmarshaller Instance { get; }
    private static CreateKeyValueStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateKeyValueStoreResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateKeyValueStoreResponseUnmarshaller GetInstance();
    public static CreateKeyValueStoreResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateMonitoringSubscriptionRequestMarshaller : object {
    private static CreateMonitoringSubscriptionRequestMarshaller _instance;
    public static CreateMonitoringSubscriptionRequestMarshaller Instance { get; }
    private static CreateMonitoringSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateMonitoringSubscriptionRequest publicRequest);
    internal static CreateMonitoringSubscriptionRequestMarshaller GetInstance();
    public static CreateMonitoringSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateMonitoringSubscriptionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateMonitoringSubscriptionResponseUnmarshaller _instance;
    public static CreateMonitoringSubscriptionResponseUnmarshaller Instance { get; }
    private static CreateMonitoringSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateMonitoringSubscriptionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateMonitoringSubscriptionResponseUnmarshaller GetInstance();
    public static CreateMonitoringSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateOriginAccessControlRequestMarshaller : object {
    private static CreateOriginAccessControlRequestMarshaller _instance;
    public static CreateOriginAccessControlRequestMarshaller Instance { get; }
    private static CreateOriginAccessControlRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateOriginAccessControlRequest publicRequest);
    internal static CreateOriginAccessControlRequestMarshaller GetInstance();
    public static CreateOriginAccessControlRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateOriginAccessControlResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateOriginAccessControlResponseUnmarshaller _instance;
    public static CreateOriginAccessControlResponseUnmarshaller Instance { get; }
    private static CreateOriginAccessControlResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateOriginAccessControlResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateOriginAccessControlResponseUnmarshaller GetInstance();
    public static CreateOriginAccessControlResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateOriginRequestPolicyRequestMarshaller : object {
    private static CreateOriginRequestPolicyRequestMarshaller _instance;
    public static CreateOriginRequestPolicyRequestMarshaller Instance { get; }
    private static CreateOriginRequestPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateOriginRequestPolicyRequest publicRequest);
    internal static CreateOriginRequestPolicyRequestMarshaller GetInstance();
    public static CreateOriginRequestPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateOriginRequestPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateOriginRequestPolicyResponseUnmarshaller _instance;
    public static CreateOriginRequestPolicyResponseUnmarshaller Instance { get; }
    private static CreateOriginRequestPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateOriginRequestPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateOriginRequestPolicyResponseUnmarshaller GetInstance();
    public static CreateOriginRequestPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreatePublicKeyRequestMarshaller : object {
    private static CreatePublicKeyRequestMarshaller _instance;
    public static CreatePublicKeyRequestMarshaller Instance { get; }
    private static CreatePublicKeyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreatePublicKeyRequest publicRequest);
    internal static CreatePublicKeyRequestMarshaller GetInstance();
    public static CreatePublicKeyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreatePublicKeyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreatePublicKeyResponseUnmarshaller _instance;
    public static CreatePublicKeyResponseUnmarshaller Instance { get; }
    private static CreatePublicKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreatePublicKeyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreatePublicKeyResponseUnmarshaller GetInstance();
    public static CreatePublicKeyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateRealtimeLogConfigRequestMarshaller : object {
    private static CreateRealtimeLogConfigRequestMarshaller _instance;
    public static CreateRealtimeLogConfigRequestMarshaller Instance { get; }
    private static CreateRealtimeLogConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateRealtimeLogConfigRequest publicRequest);
    internal static CreateRealtimeLogConfigRequestMarshaller GetInstance();
    public static CreateRealtimeLogConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateRealtimeLogConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateRealtimeLogConfigResponseUnmarshaller _instance;
    public static CreateRealtimeLogConfigResponseUnmarshaller Instance { get; }
    private static CreateRealtimeLogConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateRealtimeLogConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateRealtimeLogConfigResponseUnmarshaller GetInstance();
    public static CreateRealtimeLogConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateResponseHeadersPolicyRequestMarshaller : object {
    private static CreateResponseHeadersPolicyRequestMarshaller _instance;
    public static CreateResponseHeadersPolicyRequestMarshaller Instance { get; }
    private static CreateResponseHeadersPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateResponseHeadersPolicyRequest publicRequest);
    internal static CreateResponseHeadersPolicyRequestMarshaller GetInstance();
    public static CreateResponseHeadersPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateResponseHeadersPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateResponseHeadersPolicyResponseUnmarshaller _instance;
    public static CreateResponseHeadersPolicyResponseUnmarshaller Instance { get; }
    private static CreateResponseHeadersPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateResponseHeadersPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateResponseHeadersPolicyResponseUnmarshaller GetInstance();
    public static CreateResponseHeadersPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateStreamingDistributionRequestMarshaller : object {
    private static CreateStreamingDistributionRequestMarshaller _instance;
    public static CreateStreamingDistributionRequestMarshaller Instance { get; }
    private static CreateStreamingDistributionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateStreamingDistributionRequest publicRequest);
    internal static CreateStreamingDistributionRequestMarshaller GetInstance();
    public static CreateStreamingDistributionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateStreamingDistributionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateStreamingDistributionResponseUnmarshaller _instance;
    public static CreateStreamingDistributionResponseUnmarshaller Instance { get; }
    private static CreateStreamingDistributionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateStreamingDistributionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateStreamingDistributionResponseUnmarshaller GetInstance();
    public static CreateStreamingDistributionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateStreamingDistributionWithTagsRequestMarshaller : object {
    private static CreateStreamingDistributionWithTagsRequestMarshaller _instance;
    public static CreateStreamingDistributionWithTagsRequestMarshaller Instance { get; }
    private static CreateStreamingDistributionWithTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateStreamingDistributionWithTagsRequest publicRequest);
    internal static CreateStreamingDistributionWithTagsRequestMarshaller GetInstance();
    public static CreateStreamingDistributionWithTagsRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CreateStreamingDistributionWithTagsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static CreateStreamingDistributionWithTagsResponseUnmarshaller _instance;
    public static CreateStreamingDistributionWithTagsResponseUnmarshaller Instance { get; }
    private static CreateStreamingDistributionWithTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, CreateStreamingDistributionWithTagsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateStreamingDistributionWithTagsResponseUnmarshaller GetInstance();
    public static CreateStreamingDistributionWithTagsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CustomErrorResponsesUnmarshaller : object {
    private static CustomErrorResponsesUnmarshaller _instance;
    public static CustomErrorResponsesUnmarshaller Instance { get; }
    private static CustomErrorResponsesUnmarshaller();
    public sealed virtual CustomErrorResponses Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomErrorResponses Unmarshall(JsonUnmarshallerContext context);
    public static CustomErrorResponsesUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CustomErrorResponseUnmarshaller : object {
    private static CustomErrorResponseUnmarshaller _instance;
    public static CustomErrorResponseUnmarshaller Instance { get; }
    private static CustomErrorResponseUnmarshaller();
    public sealed virtual CustomErrorResponse Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomErrorResponse Unmarshall(JsonUnmarshallerContext context);
    public static CustomErrorResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CustomHeadersUnmarshaller : object {
    private static CustomHeadersUnmarshaller _instance;
    public static CustomHeadersUnmarshaller Instance { get; }
    private static CustomHeadersUnmarshaller();
    public sealed virtual CustomHeaders Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomHeaders Unmarshall(JsonUnmarshallerContext context);
    public static CustomHeadersUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.CustomOriginConfigUnmarshaller : object {
    private static CustomOriginConfigUnmarshaller _instance;
    public static CustomOriginConfigUnmarshaller Instance { get; }
    private static CustomOriginConfigUnmarshaller();
    public sealed virtual CustomOriginConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomOriginConfig Unmarshall(JsonUnmarshallerContext context);
    public static CustomOriginConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DefaultCacheBehaviorUnmarshaller : object {
    private static DefaultCacheBehaviorUnmarshaller _instance;
    public static DefaultCacheBehaviorUnmarshaller Instance { get; }
    private static DefaultCacheBehaviorUnmarshaller();
    public sealed virtual DefaultCacheBehavior Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DefaultCacheBehavior Unmarshall(JsonUnmarshallerContext context);
    public static DefaultCacheBehaviorUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteCachePolicyRequestMarshaller : object {
    private static DeleteCachePolicyRequestMarshaller _instance;
    public static DeleteCachePolicyRequestMarshaller Instance { get; }
    private static DeleteCachePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCachePolicyRequest publicRequest);
    internal static DeleteCachePolicyRequestMarshaller GetInstance();
    public static DeleteCachePolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteCachePolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteCachePolicyResponseUnmarshaller _instance;
    public static DeleteCachePolicyResponseUnmarshaller Instance { get; }
    private static DeleteCachePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCachePolicyResponseUnmarshaller GetInstance();
    public static DeleteCachePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteCloudFrontOriginAccessIdentityRequestMarshaller : object {
    private static DeleteCloudFrontOriginAccessIdentityRequestMarshaller _instance;
    public static DeleteCloudFrontOriginAccessIdentityRequestMarshaller Instance { get; }
    private static DeleteCloudFrontOriginAccessIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCloudFrontOriginAccessIdentityRequest publicRequest);
    internal static DeleteCloudFrontOriginAccessIdentityRequestMarshaller GetInstance();
    public static DeleteCloudFrontOriginAccessIdentityRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteCloudFrontOriginAccessIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteCloudFrontOriginAccessIdentityResponseUnmarshaller _instance;
    public static DeleteCloudFrontOriginAccessIdentityResponseUnmarshaller Instance { get; }
    private static DeleteCloudFrontOriginAccessIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCloudFrontOriginAccessIdentityResponseUnmarshaller GetInstance();
    public static DeleteCloudFrontOriginAccessIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteContinuousDeploymentPolicyRequestMarshaller : object {
    private static DeleteContinuousDeploymentPolicyRequestMarshaller _instance;
    public static DeleteContinuousDeploymentPolicyRequestMarshaller Instance { get; }
    private static DeleteContinuousDeploymentPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteContinuousDeploymentPolicyRequest publicRequest);
    internal static DeleteContinuousDeploymentPolicyRequestMarshaller GetInstance();
    public static DeleteContinuousDeploymentPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteContinuousDeploymentPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteContinuousDeploymentPolicyResponseUnmarshaller _instance;
    public static DeleteContinuousDeploymentPolicyResponseUnmarshaller Instance { get; }
    private static DeleteContinuousDeploymentPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteContinuousDeploymentPolicyResponseUnmarshaller GetInstance();
    public static DeleteContinuousDeploymentPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteDistributionRequestMarshaller : object {
    private static DeleteDistributionRequestMarshaller _instance;
    public static DeleteDistributionRequestMarshaller Instance { get; }
    private static DeleteDistributionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDistributionRequest publicRequest);
    internal static DeleteDistributionRequestMarshaller GetInstance();
    public static DeleteDistributionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteDistributionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDistributionResponseUnmarshaller _instance;
    public static DeleteDistributionResponseUnmarshaller Instance { get; }
    private static DeleteDistributionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDistributionResponseUnmarshaller GetInstance();
    public static DeleteDistributionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteFieldLevelEncryptionConfigRequestMarshaller : object {
    private static DeleteFieldLevelEncryptionConfigRequestMarshaller _instance;
    public static DeleteFieldLevelEncryptionConfigRequestMarshaller Instance { get; }
    private static DeleteFieldLevelEncryptionConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFieldLevelEncryptionConfigRequest publicRequest);
    internal static DeleteFieldLevelEncryptionConfigRequestMarshaller GetInstance();
    public static DeleteFieldLevelEncryptionConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteFieldLevelEncryptionConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteFieldLevelEncryptionConfigResponseUnmarshaller _instance;
    public static DeleteFieldLevelEncryptionConfigResponseUnmarshaller Instance { get; }
    private static DeleteFieldLevelEncryptionConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFieldLevelEncryptionConfigResponseUnmarshaller GetInstance();
    public static DeleteFieldLevelEncryptionConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteFieldLevelEncryptionProfileRequestMarshaller : object {
    private static DeleteFieldLevelEncryptionProfileRequestMarshaller _instance;
    public static DeleteFieldLevelEncryptionProfileRequestMarshaller Instance { get; }
    private static DeleteFieldLevelEncryptionProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFieldLevelEncryptionProfileRequest publicRequest);
    internal static DeleteFieldLevelEncryptionProfileRequestMarshaller GetInstance();
    public static DeleteFieldLevelEncryptionProfileRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteFieldLevelEncryptionProfileResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteFieldLevelEncryptionProfileResponseUnmarshaller _instance;
    public static DeleteFieldLevelEncryptionProfileResponseUnmarshaller Instance { get; }
    private static DeleteFieldLevelEncryptionProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFieldLevelEncryptionProfileResponseUnmarshaller GetInstance();
    public static DeleteFieldLevelEncryptionProfileResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteFunctionRequestMarshaller : object {
    private static DeleteFunctionRequestMarshaller _instance;
    public static DeleteFunctionRequestMarshaller Instance { get; }
    private static DeleteFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFunctionRequest publicRequest);
    internal static DeleteFunctionRequestMarshaller GetInstance();
    public static DeleteFunctionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteFunctionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteFunctionResponseUnmarshaller _instance;
    public static DeleteFunctionResponseUnmarshaller Instance { get; }
    private static DeleteFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFunctionResponseUnmarshaller GetInstance();
    public static DeleteFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteKeyGroupRequestMarshaller : object {
    private static DeleteKeyGroupRequestMarshaller _instance;
    public static DeleteKeyGroupRequestMarshaller Instance { get; }
    private static DeleteKeyGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteKeyGroupRequest publicRequest);
    internal static DeleteKeyGroupRequestMarshaller GetInstance();
    public static DeleteKeyGroupRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteKeyGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteKeyGroupResponseUnmarshaller _instance;
    public static DeleteKeyGroupResponseUnmarshaller Instance { get; }
    private static DeleteKeyGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteKeyGroupResponseUnmarshaller GetInstance();
    public static DeleteKeyGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteKeyValueStoreRequestMarshaller : object {
    private static DeleteKeyValueStoreRequestMarshaller _instance;
    public static DeleteKeyValueStoreRequestMarshaller Instance { get; }
    private static DeleteKeyValueStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteKeyValueStoreRequest publicRequest);
    internal static DeleteKeyValueStoreRequestMarshaller GetInstance();
    public static DeleteKeyValueStoreRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteKeyValueStoreResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteKeyValueStoreResponseUnmarshaller _instance;
    public static DeleteKeyValueStoreResponseUnmarshaller Instance { get; }
    private static DeleteKeyValueStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteKeyValueStoreResponseUnmarshaller GetInstance();
    public static DeleteKeyValueStoreResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteMonitoringSubscriptionRequestMarshaller : object {
    private static DeleteMonitoringSubscriptionRequestMarshaller _instance;
    public static DeleteMonitoringSubscriptionRequestMarshaller Instance { get; }
    private static DeleteMonitoringSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMonitoringSubscriptionRequest publicRequest);
    internal static DeleteMonitoringSubscriptionRequestMarshaller GetInstance();
    public static DeleteMonitoringSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteMonitoringSubscriptionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteMonitoringSubscriptionResponseUnmarshaller _instance;
    public static DeleteMonitoringSubscriptionResponseUnmarshaller Instance { get; }
    private static DeleteMonitoringSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMonitoringSubscriptionResponseUnmarshaller GetInstance();
    public static DeleteMonitoringSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteOriginAccessControlRequestMarshaller : object {
    private static DeleteOriginAccessControlRequestMarshaller _instance;
    public static DeleteOriginAccessControlRequestMarshaller Instance { get; }
    private static DeleteOriginAccessControlRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteOriginAccessControlRequest publicRequest);
    internal static DeleteOriginAccessControlRequestMarshaller GetInstance();
    public static DeleteOriginAccessControlRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteOriginAccessControlResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteOriginAccessControlResponseUnmarshaller _instance;
    public static DeleteOriginAccessControlResponseUnmarshaller Instance { get; }
    private static DeleteOriginAccessControlResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteOriginAccessControlResponseUnmarshaller GetInstance();
    public static DeleteOriginAccessControlResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteOriginRequestPolicyRequestMarshaller : object {
    private static DeleteOriginRequestPolicyRequestMarshaller _instance;
    public static DeleteOriginRequestPolicyRequestMarshaller Instance { get; }
    private static DeleteOriginRequestPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteOriginRequestPolicyRequest publicRequest);
    internal static DeleteOriginRequestPolicyRequestMarshaller GetInstance();
    public static DeleteOriginRequestPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteOriginRequestPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteOriginRequestPolicyResponseUnmarshaller _instance;
    public static DeleteOriginRequestPolicyResponseUnmarshaller Instance { get; }
    private static DeleteOriginRequestPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteOriginRequestPolicyResponseUnmarshaller GetInstance();
    public static DeleteOriginRequestPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeletePublicKeyRequestMarshaller : object {
    private static DeletePublicKeyRequestMarshaller _instance;
    public static DeletePublicKeyRequestMarshaller Instance { get; }
    private static DeletePublicKeyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeletePublicKeyRequest publicRequest);
    internal static DeletePublicKeyRequestMarshaller GetInstance();
    public static DeletePublicKeyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeletePublicKeyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeletePublicKeyResponseUnmarshaller _instance;
    public static DeletePublicKeyResponseUnmarshaller Instance { get; }
    private static DeletePublicKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeletePublicKeyResponseUnmarshaller GetInstance();
    public static DeletePublicKeyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteRealtimeLogConfigRequestMarshaller : object {
    private static DeleteRealtimeLogConfigRequestMarshaller _instance;
    public static DeleteRealtimeLogConfigRequestMarshaller Instance { get; }
    private static DeleteRealtimeLogConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRealtimeLogConfigRequest publicRequest);
    internal static DeleteRealtimeLogConfigRequestMarshaller GetInstance();
    public static DeleteRealtimeLogConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteRealtimeLogConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteRealtimeLogConfigResponseUnmarshaller _instance;
    public static DeleteRealtimeLogConfigResponseUnmarshaller Instance { get; }
    private static DeleteRealtimeLogConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRealtimeLogConfigResponseUnmarshaller GetInstance();
    public static DeleteRealtimeLogConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteResponseHeadersPolicyRequestMarshaller : object {
    private static DeleteResponseHeadersPolicyRequestMarshaller _instance;
    public static DeleteResponseHeadersPolicyRequestMarshaller Instance { get; }
    private static DeleteResponseHeadersPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResponseHeadersPolicyRequest publicRequest);
    internal static DeleteResponseHeadersPolicyRequestMarshaller GetInstance();
    public static DeleteResponseHeadersPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteResponseHeadersPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteResponseHeadersPolicyResponseUnmarshaller _instance;
    public static DeleteResponseHeadersPolicyResponseUnmarshaller Instance { get; }
    private static DeleteResponseHeadersPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResponseHeadersPolicyResponseUnmarshaller GetInstance();
    public static DeleteResponseHeadersPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteStreamingDistributionRequestMarshaller : object {
    private static DeleteStreamingDistributionRequestMarshaller _instance;
    public static DeleteStreamingDistributionRequestMarshaller Instance { get; }
    private static DeleteStreamingDistributionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteStreamingDistributionRequest publicRequest);
    internal static DeleteStreamingDistributionRequestMarshaller GetInstance();
    public static DeleteStreamingDistributionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DeleteStreamingDistributionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteStreamingDistributionResponseUnmarshaller _instance;
    public static DeleteStreamingDistributionResponseUnmarshaller Instance { get; }
    private static DeleteStreamingDistributionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteStreamingDistributionResponseUnmarshaller GetInstance();
    public static DeleteStreamingDistributionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DescribeFunctionRequestMarshaller : object {
    private static DescribeFunctionRequestMarshaller _instance;
    public static DescribeFunctionRequestMarshaller Instance { get; }
    private static DescribeFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFunctionRequest publicRequest);
    internal static DescribeFunctionRequestMarshaller GetInstance();
    public static DescribeFunctionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DescribeFunctionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeFunctionResponseUnmarshaller _instance;
    public static DescribeFunctionResponseUnmarshaller Instance { get; }
    private static DescribeFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeFunctionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFunctionResponseUnmarshaller GetInstance();
    public static DescribeFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DescribeKeyValueStoreRequestMarshaller : object {
    private static DescribeKeyValueStoreRequestMarshaller _instance;
    public static DescribeKeyValueStoreRequestMarshaller Instance { get; }
    private static DescribeKeyValueStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeKeyValueStoreRequest publicRequest);
    internal static DescribeKeyValueStoreRequestMarshaller GetInstance();
    public static DescribeKeyValueStoreRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DescribeKeyValueStoreResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeKeyValueStoreResponseUnmarshaller _instance;
    public static DescribeKeyValueStoreResponseUnmarshaller Instance { get; }
    private static DescribeKeyValueStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeKeyValueStoreResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeKeyValueStoreResponseUnmarshaller GetInstance();
    public static DescribeKeyValueStoreResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DistributionAlreadyExistsExceptionUnmarshaller : object {
    private static DistributionAlreadyExistsExceptionUnmarshaller _instance;
    public static DistributionAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static DistributionAlreadyExistsExceptionUnmarshaller();
    public sealed virtual DistributionAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DistributionAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DistributionAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DistributionConfigUnmarshaller : object {
    private static DistributionConfigUnmarshaller _instance;
    public static DistributionConfigUnmarshaller Instance { get; }
    private static DistributionConfigUnmarshaller();
    public sealed virtual DistributionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DistributionConfig Unmarshall(JsonUnmarshallerContext context);
    public static DistributionConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DistributionIdListUnmarshaller : object {
    private static DistributionIdListUnmarshaller _instance;
    public static DistributionIdListUnmarshaller Instance { get; }
    private static DistributionIdListUnmarshaller();
    public sealed virtual DistributionIdList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DistributionIdList Unmarshall(JsonUnmarshallerContext context);
    public static DistributionIdListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DistributionListUnmarshaller : object {
    private static DistributionListUnmarshaller _instance;
    public static DistributionListUnmarshaller Instance { get; }
    private static DistributionListUnmarshaller();
    public sealed virtual DistributionList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DistributionList Unmarshall(JsonUnmarshallerContext context);
    public static DistributionListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DistributionNotDisabledExceptionUnmarshaller : object {
    private static DistributionNotDisabledExceptionUnmarshaller _instance;
    public static DistributionNotDisabledExceptionUnmarshaller Instance { get; }
    private static DistributionNotDisabledExceptionUnmarshaller();
    public sealed virtual DistributionNotDisabledException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DistributionNotDisabledException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DistributionNotDisabledExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DistributionSummaryUnmarshaller : object {
    private static DistributionSummaryUnmarshaller _instance;
    public static DistributionSummaryUnmarshaller Instance { get; }
    private static DistributionSummaryUnmarshaller();
    public sealed virtual DistributionSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DistributionSummary Unmarshall(JsonUnmarshallerContext context);
    public static DistributionSummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.DistributionUnmarshaller : object {
    private static DistributionUnmarshaller _instance;
    public static DistributionUnmarshaller Instance { get; }
    private static DistributionUnmarshaller();
    public sealed virtual Distribution Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Distribution Unmarshall(JsonUnmarshallerContext context);
    public static DistributionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.EncryptionEntitiesUnmarshaller : object {
    private static EncryptionEntitiesUnmarshaller _instance;
    public static EncryptionEntitiesUnmarshaller Instance { get; }
    private static EncryptionEntitiesUnmarshaller();
    public sealed virtual EncryptionEntities Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionEntities Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionEntitiesUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.EncryptionEntityUnmarshaller : object {
    private static EncryptionEntityUnmarshaller _instance;
    public static EncryptionEntityUnmarshaller Instance { get; }
    private static EncryptionEntityUnmarshaller();
    public sealed virtual EncryptionEntity Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EncryptionEntity Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionEntityUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.EndPointUnmarshaller : object {
    private static EndPointUnmarshaller _instance;
    public static EndPointUnmarshaller Instance { get; }
    private static EndPointUnmarshaller();
    public sealed virtual EndPoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EndPoint Unmarshall(JsonUnmarshallerContext context);
    public static EndPointUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.EntityAlreadyExistsExceptionUnmarshaller : object {
    private static EntityAlreadyExistsExceptionUnmarshaller _instance;
    public static EntityAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static EntityAlreadyExistsExceptionUnmarshaller();
    public sealed virtual EntityAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EntityAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static EntityAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.EntityLimitExceededExceptionUnmarshaller : object {
    private static EntityLimitExceededExceptionUnmarshaller _instance;
    public static EntityLimitExceededExceptionUnmarshaller Instance { get; }
    private static EntityLimitExceededExceptionUnmarshaller();
    public sealed virtual EntityLimitExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EntityLimitExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static EntityLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.EntityNotFoundExceptionUnmarshaller : object {
    private static EntityNotFoundExceptionUnmarshaller _instance;
    public static EntityNotFoundExceptionUnmarshaller Instance { get; }
    private static EntityNotFoundExceptionUnmarshaller();
    public sealed virtual EntityNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EntityNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static EntityNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.EntitySizeLimitExceededExceptionUnmarshaller : object {
    private static EntitySizeLimitExceededExceptionUnmarshaller _instance;
    public static EntitySizeLimitExceededExceptionUnmarshaller Instance { get; }
    private static EntitySizeLimitExceededExceptionUnmarshaller();
    public sealed virtual EntitySizeLimitExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EntitySizeLimitExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static EntitySizeLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionConfigAlreadyExistsExceptionUnmarshaller : object {
    private static FieldLevelEncryptionConfigAlreadyExistsExceptionUnmarshaller _instance;
    public static FieldLevelEncryptionConfigAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static FieldLevelEncryptionConfigAlreadyExistsExceptionUnmarshaller();
    public sealed virtual FieldLevelEncryptionConfigAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionConfigAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static FieldLevelEncryptionConfigAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionConfigInUseExceptionUnmarshaller : object {
    private static FieldLevelEncryptionConfigInUseExceptionUnmarshaller _instance;
    public static FieldLevelEncryptionConfigInUseExceptionUnmarshaller Instance { get; }
    private static FieldLevelEncryptionConfigInUseExceptionUnmarshaller();
    public sealed virtual FieldLevelEncryptionConfigInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionConfigInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static FieldLevelEncryptionConfigInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionConfigUnmarshaller : object {
    private static FieldLevelEncryptionConfigUnmarshaller _instance;
    public static FieldLevelEncryptionConfigUnmarshaller Instance { get; }
    private static FieldLevelEncryptionConfigUnmarshaller();
    public sealed virtual FieldLevelEncryptionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionConfig Unmarshall(JsonUnmarshallerContext context);
    public static FieldLevelEncryptionConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionListUnmarshaller : object {
    private static FieldLevelEncryptionListUnmarshaller _instance;
    public static FieldLevelEncryptionListUnmarshaller Instance { get; }
    private static FieldLevelEncryptionListUnmarshaller();
    public sealed virtual FieldLevelEncryptionList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionList Unmarshall(JsonUnmarshallerContext context);
    public static FieldLevelEncryptionListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionProfileAlreadyExistsExceptionUnmarshaller : object {
    private static FieldLevelEncryptionProfileAlreadyExistsExceptionUnmarshaller _instance;
    public static FieldLevelEncryptionProfileAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static FieldLevelEncryptionProfileAlreadyExistsExceptionUnmarshaller();
    public sealed virtual FieldLevelEncryptionProfileAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionProfileAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static FieldLevelEncryptionProfileAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionProfileConfigUnmarshaller : object {
    private static FieldLevelEncryptionProfileConfigUnmarshaller _instance;
    public static FieldLevelEncryptionProfileConfigUnmarshaller Instance { get; }
    private static FieldLevelEncryptionProfileConfigUnmarshaller();
    public sealed virtual FieldLevelEncryptionProfileConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionProfileConfig Unmarshall(JsonUnmarshallerContext context);
    public static FieldLevelEncryptionProfileConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionProfileInUseExceptionUnmarshaller : object {
    private static FieldLevelEncryptionProfileInUseExceptionUnmarshaller _instance;
    public static FieldLevelEncryptionProfileInUseExceptionUnmarshaller Instance { get; }
    private static FieldLevelEncryptionProfileInUseExceptionUnmarshaller();
    public sealed virtual FieldLevelEncryptionProfileInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionProfileInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static FieldLevelEncryptionProfileInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionProfileListUnmarshaller : object {
    private static FieldLevelEncryptionProfileListUnmarshaller _instance;
    public static FieldLevelEncryptionProfileListUnmarshaller Instance { get; }
    private static FieldLevelEncryptionProfileListUnmarshaller();
    public sealed virtual FieldLevelEncryptionProfileList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionProfileList Unmarshall(JsonUnmarshallerContext context);
    public static FieldLevelEncryptionProfileListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionProfileSizeExceededExceptionUnmarshaller : object {
    private static FieldLevelEncryptionProfileSizeExceededExceptionUnmarshaller _instance;
    public static FieldLevelEncryptionProfileSizeExceededExceptionUnmarshaller Instance { get; }
    private static FieldLevelEncryptionProfileSizeExceededExceptionUnmarshaller();
    public sealed virtual FieldLevelEncryptionProfileSizeExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionProfileSizeExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static FieldLevelEncryptionProfileSizeExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionProfileSummaryUnmarshaller : object {
    private static FieldLevelEncryptionProfileSummaryUnmarshaller _instance;
    public static FieldLevelEncryptionProfileSummaryUnmarshaller Instance { get; }
    private static FieldLevelEncryptionProfileSummaryUnmarshaller();
    public sealed virtual FieldLevelEncryptionProfileSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionProfileSummary Unmarshall(JsonUnmarshallerContext context);
    public static FieldLevelEncryptionProfileSummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionProfileUnmarshaller : object {
    private static FieldLevelEncryptionProfileUnmarshaller _instance;
    public static FieldLevelEncryptionProfileUnmarshaller Instance { get; }
    private static FieldLevelEncryptionProfileUnmarshaller();
    public sealed virtual FieldLevelEncryptionProfile Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionProfile Unmarshall(JsonUnmarshallerContext context);
    public static FieldLevelEncryptionProfileUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionSummaryUnmarshaller : object {
    private static FieldLevelEncryptionSummaryUnmarshaller _instance;
    public static FieldLevelEncryptionSummaryUnmarshaller Instance { get; }
    private static FieldLevelEncryptionSummaryUnmarshaller();
    public sealed virtual FieldLevelEncryptionSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryptionSummary Unmarshall(JsonUnmarshallerContext context);
    public static FieldLevelEncryptionSummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldLevelEncryptionUnmarshaller : object {
    private static FieldLevelEncryptionUnmarshaller _instance;
    public static FieldLevelEncryptionUnmarshaller Instance { get; }
    private static FieldLevelEncryptionUnmarshaller();
    public sealed virtual FieldLevelEncryption Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldLevelEncryption Unmarshall(JsonUnmarshallerContext context);
    public static FieldLevelEncryptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FieldPatternsUnmarshaller : object {
    private static FieldPatternsUnmarshaller _instance;
    public static FieldPatternsUnmarshaller Instance { get; }
    private static FieldPatternsUnmarshaller();
    public sealed virtual FieldPatterns Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FieldPatterns Unmarshall(JsonUnmarshallerContext context);
    public static FieldPatternsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ForwardedValuesUnmarshaller : object {
    private static ForwardedValuesUnmarshaller _instance;
    public static ForwardedValuesUnmarshaller Instance { get; }
    private static ForwardedValuesUnmarshaller();
    public sealed virtual ForwardedValues Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ForwardedValues Unmarshall(JsonUnmarshallerContext context);
    public static ForwardedValuesUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FunctionAlreadyExistsExceptionUnmarshaller : object {
    private static FunctionAlreadyExistsExceptionUnmarshaller _instance;
    public static FunctionAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static FunctionAlreadyExistsExceptionUnmarshaller();
    public sealed virtual FunctionAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static FunctionAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FunctionAssociationsUnmarshaller : object {
    private static FunctionAssociationsUnmarshaller _instance;
    public static FunctionAssociationsUnmarshaller Instance { get; }
    private static FunctionAssociationsUnmarshaller();
    public sealed virtual FunctionAssociations Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionAssociations Unmarshall(JsonUnmarshallerContext context);
    public static FunctionAssociationsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FunctionAssociationUnmarshaller : object {
    private static FunctionAssociationUnmarshaller _instance;
    public static FunctionAssociationUnmarshaller Instance { get; }
    private static FunctionAssociationUnmarshaller();
    public sealed virtual FunctionAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionAssociation Unmarshall(JsonUnmarshallerContext context);
    public static FunctionAssociationUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FunctionConfigUnmarshaller : object {
    private static FunctionConfigUnmarshaller _instance;
    public static FunctionConfigUnmarshaller Instance { get; }
    private static FunctionConfigUnmarshaller();
    public sealed virtual FunctionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionConfig Unmarshall(JsonUnmarshallerContext context);
    public static FunctionConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FunctionInUseExceptionUnmarshaller : object {
    private static FunctionInUseExceptionUnmarshaller _instance;
    public static FunctionInUseExceptionUnmarshaller Instance { get; }
    private static FunctionInUseExceptionUnmarshaller();
    public sealed virtual FunctionInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static FunctionInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FunctionListUnmarshaller : object {
    private static FunctionListUnmarshaller _instance;
    public static FunctionListUnmarshaller Instance { get; }
    private static FunctionListUnmarshaller();
    public sealed virtual FunctionList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionList Unmarshall(JsonUnmarshallerContext context);
    public static FunctionListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FunctionMetadataUnmarshaller : object {
    private static FunctionMetadataUnmarshaller _instance;
    public static FunctionMetadataUnmarshaller Instance { get; }
    private static FunctionMetadataUnmarshaller();
    public sealed virtual FunctionMetadata Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionMetadata Unmarshall(JsonUnmarshallerContext context);
    public static FunctionMetadataUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FunctionSizeLimitExceededExceptionUnmarshaller : object {
    private static FunctionSizeLimitExceededExceptionUnmarshaller _instance;
    public static FunctionSizeLimitExceededExceptionUnmarshaller Instance { get; }
    private static FunctionSizeLimitExceededExceptionUnmarshaller();
    public sealed virtual FunctionSizeLimitExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionSizeLimitExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static FunctionSizeLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.FunctionSummaryUnmarshaller : object {
    private static FunctionSummaryUnmarshaller _instance;
    public static FunctionSummaryUnmarshaller Instance { get; }
    private static FunctionSummaryUnmarshaller();
    public sealed virtual FunctionSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FunctionSummary Unmarshall(JsonUnmarshallerContext context);
    public static FunctionSummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GeoRestrictionUnmarshaller : object {
    private static GeoRestrictionUnmarshaller _instance;
    public static GeoRestrictionUnmarshaller Instance { get; }
    private static GeoRestrictionUnmarshaller();
    public sealed virtual GeoRestriction Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GeoRestriction Unmarshall(JsonUnmarshallerContext context);
    public static GeoRestrictionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetCachePolicyConfigRequestMarshaller : object {
    private static GetCachePolicyConfigRequestMarshaller _instance;
    public static GetCachePolicyConfigRequestMarshaller Instance { get; }
    private static GetCachePolicyConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCachePolicyConfigRequest publicRequest);
    internal static GetCachePolicyConfigRequestMarshaller GetInstance();
    public static GetCachePolicyConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetCachePolicyConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetCachePolicyConfigResponseUnmarshaller _instance;
    public static GetCachePolicyConfigResponseUnmarshaller Instance { get; }
    private static GetCachePolicyConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetCachePolicyConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCachePolicyConfigResponseUnmarshaller GetInstance();
    public static GetCachePolicyConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetCachePolicyRequestMarshaller : object {
    private static GetCachePolicyRequestMarshaller _instance;
    public static GetCachePolicyRequestMarshaller Instance { get; }
    private static GetCachePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCachePolicyRequest publicRequest);
    internal static GetCachePolicyRequestMarshaller GetInstance();
    public static GetCachePolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetCachePolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetCachePolicyResponseUnmarshaller _instance;
    public static GetCachePolicyResponseUnmarshaller Instance { get; }
    private static GetCachePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetCachePolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCachePolicyResponseUnmarshaller GetInstance();
    public static GetCachePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetCloudFrontOriginAccessIdentityConfigRequestMarshaller : object {
    private static GetCloudFrontOriginAccessIdentityConfigRequestMarshaller _instance;
    public static GetCloudFrontOriginAccessIdentityConfigRequestMarshaller Instance { get; }
    private static GetCloudFrontOriginAccessIdentityConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCloudFrontOriginAccessIdentityConfigRequest publicRequest);
    internal static GetCloudFrontOriginAccessIdentityConfigRequestMarshaller GetInstance();
    public static GetCloudFrontOriginAccessIdentityConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller _instance;
    public static GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller Instance { get; }
    private static GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetCloudFrontOriginAccessIdentityConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller GetInstance();
    public static GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetCloudFrontOriginAccessIdentityRequestMarshaller : object {
    private static GetCloudFrontOriginAccessIdentityRequestMarshaller _instance;
    public static GetCloudFrontOriginAccessIdentityRequestMarshaller Instance { get; }
    private static GetCloudFrontOriginAccessIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCloudFrontOriginAccessIdentityRequest publicRequest);
    internal static GetCloudFrontOriginAccessIdentityRequestMarshaller GetInstance();
    public static GetCloudFrontOriginAccessIdentityRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetCloudFrontOriginAccessIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetCloudFrontOriginAccessIdentityResponseUnmarshaller _instance;
    public static GetCloudFrontOriginAccessIdentityResponseUnmarshaller Instance { get; }
    private static GetCloudFrontOriginAccessIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetCloudFrontOriginAccessIdentityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCloudFrontOriginAccessIdentityResponseUnmarshaller GetInstance();
    public static GetCloudFrontOriginAccessIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetContinuousDeploymentPolicyConfigRequestMarshaller : object {
    private static GetContinuousDeploymentPolicyConfigRequestMarshaller _instance;
    public static GetContinuousDeploymentPolicyConfigRequestMarshaller Instance { get; }
    private static GetContinuousDeploymentPolicyConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetContinuousDeploymentPolicyConfigRequest publicRequest);
    internal static GetContinuousDeploymentPolicyConfigRequestMarshaller GetInstance();
    public static GetContinuousDeploymentPolicyConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetContinuousDeploymentPolicyConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetContinuousDeploymentPolicyConfigResponseUnmarshaller _instance;
    public static GetContinuousDeploymentPolicyConfigResponseUnmarshaller Instance { get; }
    private static GetContinuousDeploymentPolicyConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetContinuousDeploymentPolicyConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetContinuousDeploymentPolicyConfigResponseUnmarshaller GetInstance();
    public static GetContinuousDeploymentPolicyConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetContinuousDeploymentPolicyRequestMarshaller : object {
    private static GetContinuousDeploymentPolicyRequestMarshaller _instance;
    public static GetContinuousDeploymentPolicyRequestMarshaller Instance { get; }
    private static GetContinuousDeploymentPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetContinuousDeploymentPolicyRequest publicRequest);
    internal static GetContinuousDeploymentPolicyRequestMarshaller GetInstance();
    public static GetContinuousDeploymentPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetContinuousDeploymentPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetContinuousDeploymentPolicyResponseUnmarshaller _instance;
    public static GetContinuousDeploymentPolicyResponseUnmarshaller Instance { get; }
    private static GetContinuousDeploymentPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetContinuousDeploymentPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetContinuousDeploymentPolicyResponseUnmarshaller GetInstance();
    public static GetContinuousDeploymentPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetDistributionConfigRequestMarshaller : object {
    private static GetDistributionConfigRequestMarshaller _instance;
    public static GetDistributionConfigRequestMarshaller Instance { get; }
    private static GetDistributionConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDistributionConfigRequest publicRequest);
    internal static GetDistributionConfigRequestMarshaller GetInstance();
    public static GetDistributionConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetDistributionConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetDistributionConfigResponseUnmarshaller _instance;
    public static GetDistributionConfigResponseUnmarshaller Instance { get; }
    private static GetDistributionConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetDistributionConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDistributionConfigResponseUnmarshaller GetInstance();
    public static GetDistributionConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetDistributionRequestMarshaller : object {
    private static GetDistributionRequestMarshaller _instance;
    public static GetDistributionRequestMarshaller Instance { get; }
    private static GetDistributionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDistributionRequest publicRequest);
    internal static GetDistributionRequestMarshaller GetInstance();
    public static GetDistributionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetDistributionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetDistributionResponseUnmarshaller _instance;
    public static GetDistributionResponseUnmarshaller Instance { get; }
    private static GetDistributionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetDistributionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDistributionResponseUnmarshaller GetInstance();
    public static GetDistributionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetFieldLevelEncryptionConfigRequestMarshaller : object {
    private static GetFieldLevelEncryptionConfigRequestMarshaller _instance;
    public static GetFieldLevelEncryptionConfigRequestMarshaller Instance { get; }
    private static GetFieldLevelEncryptionConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFieldLevelEncryptionConfigRequest publicRequest);
    internal static GetFieldLevelEncryptionConfigRequestMarshaller GetInstance();
    public static GetFieldLevelEncryptionConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetFieldLevelEncryptionConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetFieldLevelEncryptionConfigResponseUnmarshaller _instance;
    public static GetFieldLevelEncryptionConfigResponseUnmarshaller Instance { get; }
    private static GetFieldLevelEncryptionConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetFieldLevelEncryptionConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFieldLevelEncryptionConfigResponseUnmarshaller GetInstance();
    public static GetFieldLevelEncryptionConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetFieldLevelEncryptionProfileConfigRequestMarshaller : object {
    private static GetFieldLevelEncryptionProfileConfigRequestMarshaller _instance;
    public static GetFieldLevelEncryptionProfileConfigRequestMarshaller Instance { get; }
    private static GetFieldLevelEncryptionProfileConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFieldLevelEncryptionProfileConfigRequest publicRequest);
    internal static GetFieldLevelEncryptionProfileConfigRequestMarshaller GetInstance();
    public static GetFieldLevelEncryptionProfileConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetFieldLevelEncryptionProfileConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetFieldLevelEncryptionProfileConfigResponseUnmarshaller _instance;
    public static GetFieldLevelEncryptionProfileConfigResponseUnmarshaller Instance { get; }
    private static GetFieldLevelEncryptionProfileConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetFieldLevelEncryptionProfileConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFieldLevelEncryptionProfileConfigResponseUnmarshaller GetInstance();
    public static GetFieldLevelEncryptionProfileConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetFieldLevelEncryptionProfileRequestMarshaller : object {
    private static GetFieldLevelEncryptionProfileRequestMarshaller _instance;
    public static GetFieldLevelEncryptionProfileRequestMarshaller Instance { get; }
    private static GetFieldLevelEncryptionProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFieldLevelEncryptionProfileRequest publicRequest);
    internal static GetFieldLevelEncryptionProfileRequestMarshaller GetInstance();
    public static GetFieldLevelEncryptionProfileRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetFieldLevelEncryptionProfileResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetFieldLevelEncryptionProfileResponseUnmarshaller _instance;
    public static GetFieldLevelEncryptionProfileResponseUnmarshaller Instance { get; }
    private static GetFieldLevelEncryptionProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetFieldLevelEncryptionProfileResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFieldLevelEncryptionProfileResponseUnmarshaller GetInstance();
    public static GetFieldLevelEncryptionProfileResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetFieldLevelEncryptionRequestMarshaller : object {
    private static GetFieldLevelEncryptionRequestMarshaller _instance;
    public static GetFieldLevelEncryptionRequestMarshaller Instance { get; }
    private static GetFieldLevelEncryptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFieldLevelEncryptionRequest publicRequest);
    internal static GetFieldLevelEncryptionRequestMarshaller GetInstance();
    public static GetFieldLevelEncryptionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetFieldLevelEncryptionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetFieldLevelEncryptionResponseUnmarshaller _instance;
    public static GetFieldLevelEncryptionResponseUnmarshaller Instance { get; }
    private static GetFieldLevelEncryptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetFieldLevelEncryptionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFieldLevelEncryptionResponseUnmarshaller GetInstance();
    public static GetFieldLevelEncryptionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetFunctionRequestMarshaller : object {
    private static GetFunctionRequestMarshaller _instance;
    public static GetFunctionRequestMarshaller Instance { get; }
    private static GetFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetFunctionRequest publicRequest);
    internal static GetFunctionRequestMarshaller GetInstance();
    public static GetFunctionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetFunctionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetFunctionResponseUnmarshaller _instance;
    public static GetFunctionResponseUnmarshaller Instance { get; }
    private static GetFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetFunctionResponseUnmarshaller GetInstance();
    public static GetFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetInvalidationRequestMarshaller : object {
    private static GetInvalidationRequestMarshaller _instance;
    public static GetInvalidationRequestMarshaller Instance { get; }
    private static GetInvalidationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInvalidationRequest publicRequest);
    internal static GetInvalidationRequestMarshaller GetInstance();
    public static GetInvalidationRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetInvalidationResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetInvalidationResponseUnmarshaller _instance;
    public static GetInvalidationResponseUnmarshaller Instance { get; }
    private static GetInvalidationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetInvalidationResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInvalidationResponseUnmarshaller GetInstance();
    public static GetInvalidationResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetKeyGroupConfigRequestMarshaller : object {
    private static GetKeyGroupConfigRequestMarshaller _instance;
    public static GetKeyGroupConfigRequestMarshaller Instance { get; }
    private static GetKeyGroupConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetKeyGroupConfigRequest publicRequest);
    internal static GetKeyGroupConfigRequestMarshaller GetInstance();
    public static GetKeyGroupConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetKeyGroupConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetKeyGroupConfigResponseUnmarshaller _instance;
    public static GetKeyGroupConfigResponseUnmarshaller Instance { get; }
    private static GetKeyGroupConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetKeyGroupConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetKeyGroupConfigResponseUnmarshaller GetInstance();
    public static GetKeyGroupConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetKeyGroupRequestMarshaller : object {
    private static GetKeyGroupRequestMarshaller _instance;
    public static GetKeyGroupRequestMarshaller Instance { get; }
    private static GetKeyGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetKeyGroupRequest publicRequest);
    internal static GetKeyGroupRequestMarshaller GetInstance();
    public static GetKeyGroupRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetKeyGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetKeyGroupResponseUnmarshaller _instance;
    public static GetKeyGroupResponseUnmarshaller Instance { get; }
    private static GetKeyGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetKeyGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetKeyGroupResponseUnmarshaller GetInstance();
    public static GetKeyGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetMonitoringSubscriptionRequestMarshaller : object {
    private static GetMonitoringSubscriptionRequestMarshaller _instance;
    public static GetMonitoringSubscriptionRequestMarshaller Instance { get; }
    private static GetMonitoringSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMonitoringSubscriptionRequest publicRequest);
    internal static GetMonitoringSubscriptionRequestMarshaller GetInstance();
    public static GetMonitoringSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetMonitoringSubscriptionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetMonitoringSubscriptionResponseUnmarshaller _instance;
    public static GetMonitoringSubscriptionResponseUnmarshaller Instance { get; }
    private static GetMonitoringSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetMonitoringSubscriptionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMonitoringSubscriptionResponseUnmarshaller GetInstance();
    public static GetMonitoringSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetOriginAccessControlConfigRequestMarshaller : object {
    private static GetOriginAccessControlConfigRequestMarshaller _instance;
    public static GetOriginAccessControlConfigRequestMarshaller Instance { get; }
    private static GetOriginAccessControlConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOriginAccessControlConfigRequest publicRequest);
    internal static GetOriginAccessControlConfigRequestMarshaller GetInstance();
    public static GetOriginAccessControlConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetOriginAccessControlConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetOriginAccessControlConfigResponseUnmarshaller _instance;
    public static GetOriginAccessControlConfigResponseUnmarshaller Instance { get; }
    private static GetOriginAccessControlConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetOriginAccessControlConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOriginAccessControlConfigResponseUnmarshaller GetInstance();
    public static GetOriginAccessControlConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetOriginAccessControlRequestMarshaller : object {
    private static GetOriginAccessControlRequestMarshaller _instance;
    public static GetOriginAccessControlRequestMarshaller Instance { get; }
    private static GetOriginAccessControlRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOriginAccessControlRequest publicRequest);
    internal static GetOriginAccessControlRequestMarshaller GetInstance();
    public static GetOriginAccessControlRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetOriginAccessControlResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetOriginAccessControlResponseUnmarshaller _instance;
    public static GetOriginAccessControlResponseUnmarshaller Instance { get; }
    private static GetOriginAccessControlResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetOriginAccessControlResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOriginAccessControlResponseUnmarshaller GetInstance();
    public static GetOriginAccessControlResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetOriginRequestPolicyConfigRequestMarshaller : object {
    private static GetOriginRequestPolicyConfigRequestMarshaller _instance;
    public static GetOriginRequestPolicyConfigRequestMarshaller Instance { get; }
    private static GetOriginRequestPolicyConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOriginRequestPolicyConfigRequest publicRequest);
    internal static GetOriginRequestPolicyConfigRequestMarshaller GetInstance();
    public static GetOriginRequestPolicyConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetOriginRequestPolicyConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetOriginRequestPolicyConfigResponseUnmarshaller _instance;
    public static GetOriginRequestPolicyConfigResponseUnmarshaller Instance { get; }
    private static GetOriginRequestPolicyConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetOriginRequestPolicyConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOriginRequestPolicyConfigResponseUnmarshaller GetInstance();
    public static GetOriginRequestPolicyConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetOriginRequestPolicyRequestMarshaller : object {
    private static GetOriginRequestPolicyRequestMarshaller _instance;
    public static GetOriginRequestPolicyRequestMarshaller Instance { get; }
    private static GetOriginRequestPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOriginRequestPolicyRequest publicRequest);
    internal static GetOriginRequestPolicyRequestMarshaller GetInstance();
    public static GetOriginRequestPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetOriginRequestPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetOriginRequestPolicyResponseUnmarshaller _instance;
    public static GetOriginRequestPolicyResponseUnmarshaller Instance { get; }
    private static GetOriginRequestPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetOriginRequestPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOriginRequestPolicyResponseUnmarshaller GetInstance();
    public static GetOriginRequestPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetPublicKeyConfigRequestMarshaller : object {
    private static GetPublicKeyConfigRequestMarshaller _instance;
    public static GetPublicKeyConfigRequestMarshaller Instance { get; }
    private static GetPublicKeyConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPublicKeyConfigRequest publicRequest);
    internal static GetPublicKeyConfigRequestMarshaller GetInstance();
    public static GetPublicKeyConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetPublicKeyConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetPublicKeyConfigResponseUnmarshaller _instance;
    public static GetPublicKeyConfigResponseUnmarshaller Instance { get; }
    private static GetPublicKeyConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetPublicKeyConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPublicKeyConfigResponseUnmarshaller GetInstance();
    public static GetPublicKeyConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetPublicKeyRequestMarshaller : object {
    private static GetPublicKeyRequestMarshaller _instance;
    public static GetPublicKeyRequestMarshaller Instance { get; }
    private static GetPublicKeyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPublicKeyRequest publicRequest);
    internal static GetPublicKeyRequestMarshaller GetInstance();
    public static GetPublicKeyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetPublicKeyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetPublicKeyResponseUnmarshaller _instance;
    public static GetPublicKeyResponseUnmarshaller Instance { get; }
    private static GetPublicKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetPublicKeyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPublicKeyResponseUnmarshaller GetInstance();
    public static GetPublicKeyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetRealtimeLogConfigRequestMarshaller : object {
    private static GetRealtimeLogConfigRequestMarshaller _instance;
    public static GetRealtimeLogConfigRequestMarshaller Instance { get; }
    private static GetRealtimeLogConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRealtimeLogConfigRequest publicRequest);
    internal static GetRealtimeLogConfigRequestMarshaller GetInstance();
    public static GetRealtimeLogConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetRealtimeLogConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetRealtimeLogConfigResponseUnmarshaller _instance;
    public static GetRealtimeLogConfigResponseUnmarshaller Instance { get; }
    private static GetRealtimeLogConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetRealtimeLogConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRealtimeLogConfigResponseUnmarshaller GetInstance();
    public static GetRealtimeLogConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetResponseHeadersPolicyConfigRequestMarshaller : object {
    private static GetResponseHeadersPolicyConfigRequestMarshaller _instance;
    public static GetResponseHeadersPolicyConfigRequestMarshaller Instance { get; }
    private static GetResponseHeadersPolicyConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetResponseHeadersPolicyConfigRequest publicRequest);
    internal static GetResponseHeadersPolicyConfigRequestMarshaller GetInstance();
    public static GetResponseHeadersPolicyConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetResponseHeadersPolicyConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetResponseHeadersPolicyConfigResponseUnmarshaller _instance;
    public static GetResponseHeadersPolicyConfigResponseUnmarshaller Instance { get; }
    private static GetResponseHeadersPolicyConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetResponseHeadersPolicyConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetResponseHeadersPolicyConfigResponseUnmarshaller GetInstance();
    public static GetResponseHeadersPolicyConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetResponseHeadersPolicyRequestMarshaller : object {
    private static GetResponseHeadersPolicyRequestMarshaller _instance;
    public static GetResponseHeadersPolicyRequestMarshaller Instance { get; }
    private static GetResponseHeadersPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetResponseHeadersPolicyRequest publicRequest);
    internal static GetResponseHeadersPolicyRequestMarshaller GetInstance();
    public static GetResponseHeadersPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetResponseHeadersPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetResponseHeadersPolicyResponseUnmarshaller _instance;
    public static GetResponseHeadersPolicyResponseUnmarshaller Instance { get; }
    private static GetResponseHeadersPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetResponseHeadersPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetResponseHeadersPolicyResponseUnmarshaller GetInstance();
    public static GetResponseHeadersPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetStreamingDistributionConfigRequestMarshaller : object {
    private static GetStreamingDistributionConfigRequestMarshaller _instance;
    public static GetStreamingDistributionConfigRequestMarshaller Instance { get; }
    private static GetStreamingDistributionConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetStreamingDistributionConfigRequest publicRequest);
    internal static GetStreamingDistributionConfigRequestMarshaller GetInstance();
    public static GetStreamingDistributionConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetStreamingDistributionConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetStreamingDistributionConfigResponseUnmarshaller _instance;
    public static GetStreamingDistributionConfigResponseUnmarshaller Instance { get; }
    private static GetStreamingDistributionConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetStreamingDistributionConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetStreamingDistributionConfigResponseUnmarshaller GetInstance();
    public static GetStreamingDistributionConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetStreamingDistributionRequestMarshaller : object {
    private static GetStreamingDistributionRequestMarshaller _instance;
    public static GetStreamingDistributionRequestMarshaller Instance { get; }
    private static GetStreamingDistributionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetStreamingDistributionRequest publicRequest);
    internal static GetStreamingDistributionRequestMarshaller GetInstance();
    public static GetStreamingDistributionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.GetStreamingDistributionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetStreamingDistributionResponseUnmarshaller _instance;
    public static GetStreamingDistributionResponseUnmarshaller Instance { get; }
    private static GetStreamingDistributionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetStreamingDistributionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetStreamingDistributionResponseUnmarshaller GetInstance();
    public static GetStreamingDistributionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.HeadersUnmarshaller : object {
    private static HeadersUnmarshaller _instance;
    public static HeadersUnmarshaller Instance { get; }
    private static HeadersUnmarshaller();
    public sealed virtual Headers Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Headers Unmarshall(JsonUnmarshallerContext context);
    public static HeadersUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.IllegalDeleteExceptionUnmarshaller : object {
    private static IllegalDeleteExceptionUnmarshaller _instance;
    public static IllegalDeleteExceptionUnmarshaller Instance { get; }
    private static IllegalDeleteExceptionUnmarshaller();
    public sealed virtual IllegalDeleteException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IllegalDeleteException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IllegalDeleteExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorExceptionUnmarshaller : object {
    private static IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorExceptionUnmarshaller _instance;
    public static IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorExceptionUnmarshaller Instance { get; }
    private static IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorExceptionUnmarshaller();
    public sealed virtual IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.IllegalOriginAccessConfigurationExceptionUnmarshaller : object {
    private static IllegalOriginAccessConfigurationExceptionUnmarshaller _instance;
    public static IllegalOriginAccessConfigurationExceptionUnmarshaller Instance { get; }
    private static IllegalOriginAccessConfigurationExceptionUnmarshaller();
    public sealed virtual IllegalOriginAccessConfigurationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IllegalOriginAccessConfigurationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IllegalOriginAccessConfigurationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.IllegalUpdateExceptionUnmarshaller : object {
    private static IllegalUpdateExceptionUnmarshaller _instance;
    public static IllegalUpdateExceptionUnmarshaller Instance { get; }
    private static IllegalUpdateExceptionUnmarshaller();
    public sealed virtual IllegalUpdateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IllegalUpdateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static IllegalUpdateExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InconsistentQuantitiesExceptionUnmarshaller : object {
    private static InconsistentQuantitiesExceptionUnmarshaller _instance;
    public static InconsistentQuantitiesExceptionUnmarshaller Instance { get; }
    private static InconsistentQuantitiesExceptionUnmarshaller();
    public sealed virtual InconsistentQuantitiesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InconsistentQuantitiesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InconsistentQuantitiesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller : object {
    private static InvalidArgumentExceptionUnmarshaller _instance;
    public static InvalidArgumentExceptionUnmarshaller Instance { get; }
    private static InvalidArgumentExceptionUnmarshaller();
    public sealed virtual InvalidArgumentException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidArgumentException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidArgumentExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidationBatchUnmarshaller : object {
    private static InvalidationBatchUnmarshaller _instance;
    public static InvalidationBatchUnmarshaller Instance { get; }
    private static InvalidationBatchUnmarshaller();
    public sealed virtual InvalidationBatch Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidationBatch Unmarshall(JsonUnmarshallerContext context);
    public static InvalidationBatchUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidationListUnmarshaller : object {
    private static InvalidationListUnmarshaller _instance;
    public static InvalidationListUnmarshaller Instance { get; }
    private static InvalidationListUnmarshaller();
    public sealed virtual InvalidationList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidationList Unmarshall(JsonUnmarshallerContext context);
    public static InvalidationListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidationSummaryUnmarshaller : object {
    private static InvalidationSummaryUnmarshaller _instance;
    public static InvalidationSummaryUnmarshaller Instance { get; }
    private static InvalidationSummaryUnmarshaller();
    public sealed virtual InvalidationSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidationSummary Unmarshall(JsonUnmarshallerContext context);
    public static InvalidationSummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidationUnmarshaller : object {
    private static InvalidationUnmarshaller _instance;
    public static InvalidationUnmarshaller Instance { get; }
    private static InvalidationUnmarshaller();
    public sealed virtual Invalidation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Invalidation Unmarshall(JsonUnmarshallerContext context);
    public static InvalidationUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidDefaultRootObjectExceptionUnmarshaller : object {
    private static InvalidDefaultRootObjectExceptionUnmarshaller _instance;
    public static InvalidDefaultRootObjectExceptionUnmarshaller Instance { get; }
    private static InvalidDefaultRootObjectExceptionUnmarshaller();
    public sealed virtual InvalidDefaultRootObjectException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDefaultRootObjectException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDefaultRootObjectExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidDomainNameForOriginAccessControlExceptionUnmarshaller : object {
    private static InvalidDomainNameForOriginAccessControlExceptionUnmarshaller _instance;
    public static InvalidDomainNameForOriginAccessControlExceptionUnmarshaller Instance { get; }
    private static InvalidDomainNameForOriginAccessControlExceptionUnmarshaller();
    public sealed virtual InvalidDomainNameForOriginAccessControlException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidDomainNameForOriginAccessControlException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDomainNameForOriginAccessControlExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidErrorCodeExceptionUnmarshaller : object {
    private static InvalidErrorCodeExceptionUnmarshaller _instance;
    public static InvalidErrorCodeExceptionUnmarshaller Instance { get; }
    private static InvalidErrorCodeExceptionUnmarshaller();
    public sealed virtual InvalidErrorCodeException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidErrorCodeException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidErrorCodeExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidForwardCookiesExceptionUnmarshaller : object {
    private static InvalidForwardCookiesExceptionUnmarshaller _instance;
    public static InvalidForwardCookiesExceptionUnmarshaller Instance { get; }
    private static InvalidForwardCookiesExceptionUnmarshaller();
    public sealed virtual InvalidForwardCookiesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidForwardCookiesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidForwardCookiesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidFunctionAssociationExceptionUnmarshaller : object {
    private static InvalidFunctionAssociationExceptionUnmarshaller _instance;
    public static InvalidFunctionAssociationExceptionUnmarshaller Instance { get; }
    private static InvalidFunctionAssociationExceptionUnmarshaller();
    public sealed virtual InvalidFunctionAssociationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidFunctionAssociationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidFunctionAssociationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidGeoRestrictionParameterExceptionUnmarshaller : object {
    private static InvalidGeoRestrictionParameterExceptionUnmarshaller _instance;
    public static InvalidGeoRestrictionParameterExceptionUnmarshaller Instance { get; }
    private static InvalidGeoRestrictionParameterExceptionUnmarshaller();
    public sealed virtual InvalidGeoRestrictionParameterException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidGeoRestrictionParameterException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidGeoRestrictionParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidHeadersForS3OriginExceptionUnmarshaller : object {
    private static InvalidHeadersForS3OriginExceptionUnmarshaller _instance;
    public static InvalidHeadersForS3OriginExceptionUnmarshaller Instance { get; }
    private static InvalidHeadersForS3OriginExceptionUnmarshaller();
    public sealed virtual InvalidHeadersForS3OriginException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidHeadersForS3OriginException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidHeadersForS3OriginExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidIfMatchVersionExceptionUnmarshaller : object {
    private static InvalidIfMatchVersionExceptionUnmarshaller _instance;
    public static InvalidIfMatchVersionExceptionUnmarshaller Instance { get; }
    private static InvalidIfMatchVersionExceptionUnmarshaller();
    public sealed virtual InvalidIfMatchVersionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidIfMatchVersionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidIfMatchVersionExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidLambdaFunctionAssociationExceptionUnmarshaller : object {
    private static InvalidLambdaFunctionAssociationExceptionUnmarshaller _instance;
    public static InvalidLambdaFunctionAssociationExceptionUnmarshaller Instance { get; }
    private static InvalidLambdaFunctionAssociationExceptionUnmarshaller();
    public sealed virtual InvalidLambdaFunctionAssociationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidLambdaFunctionAssociationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidLambdaFunctionAssociationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidLocationCodeExceptionUnmarshaller : object {
    private static InvalidLocationCodeExceptionUnmarshaller _instance;
    public static InvalidLocationCodeExceptionUnmarshaller Instance { get; }
    private static InvalidLocationCodeExceptionUnmarshaller();
    public sealed virtual InvalidLocationCodeException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidLocationCodeException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidLocationCodeExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidMinimumProtocolVersionExceptionUnmarshaller : object {
    private static InvalidMinimumProtocolVersionExceptionUnmarshaller _instance;
    public static InvalidMinimumProtocolVersionExceptionUnmarshaller Instance { get; }
    private static InvalidMinimumProtocolVersionExceptionUnmarshaller();
    public sealed virtual InvalidMinimumProtocolVersionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidMinimumProtocolVersionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidMinimumProtocolVersionExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidOriginAccessControlExceptionUnmarshaller : object {
    private static InvalidOriginAccessControlExceptionUnmarshaller _instance;
    public static InvalidOriginAccessControlExceptionUnmarshaller Instance { get; }
    private static InvalidOriginAccessControlExceptionUnmarshaller();
    public sealed virtual InvalidOriginAccessControlException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidOriginAccessControlException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOriginAccessControlExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidOriginAccessIdentityExceptionUnmarshaller : object {
    private static InvalidOriginAccessIdentityExceptionUnmarshaller _instance;
    public static InvalidOriginAccessIdentityExceptionUnmarshaller Instance { get; }
    private static InvalidOriginAccessIdentityExceptionUnmarshaller();
    public sealed virtual InvalidOriginAccessIdentityException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidOriginAccessIdentityException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOriginAccessIdentityExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidOriginExceptionUnmarshaller : object {
    private static InvalidOriginExceptionUnmarshaller _instance;
    public static InvalidOriginExceptionUnmarshaller Instance { get; }
    private static InvalidOriginExceptionUnmarshaller();
    public sealed virtual InvalidOriginException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidOriginException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOriginExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidOriginKeepaliveTimeoutExceptionUnmarshaller : object {
    private static InvalidOriginKeepaliveTimeoutExceptionUnmarshaller _instance;
    public static InvalidOriginKeepaliveTimeoutExceptionUnmarshaller Instance { get; }
    private static InvalidOriginKeepaliveTimeoutExceptionUnmarshaller();
    public sealed virtual InvalidOriginKeepaliveTimeoutException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidOriginKeepaliveTimeoutException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOriginKeepaliveTimeoutExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidOriginReadTimeoutExceptionUnmarshaller : object {
    private static InvalidOriginReadTimeoutExceptionUnmarshaller _instance;
    public static InvalidOriginReadTimeoutExceptionUnmarshaller Instance { get; }
    private static InvalidOriginReadTimeoutExceptionUnmarshaller();
    public sealed virtual InvalidOriginReadTimeoutException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidOriginReadTimeoutException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOriginReadTimeoutExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidProtocolSettingsExceptionUnmarshaller : object {
    private static InvalidProtocolSettingsExceptionUnmarshaller _instance;
    public static InvalidProtocolSettingsExceptionUnmarshaller Instance { get; }
    private static InvalidProtocolSettingsExceptionUnmarshaller();
    public sealed virtual InvalidProtocolSettingsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidProtocolSettingsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidProtocolSettingsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidQueryStringParametersExceptionUnmarshaller : object {
    private static InvalidQueryStringParametersExceptionUnmarshaller _instance;
    public static InvalidQueryStringParametersExceptionUnmarshaller Instance { get; }
    private static InvalidQueryStringParametersExceptionUnmarshaller();
    public sealed virtual InvalidQueryStringParametersException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidQueryStringParametersException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidQueryStringParametersExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidRelativePathExceptionUnmarshaller : object {
    private static InvalidRelativePathExceptionUnmarshaller _instance;
    public static InvalidRelativePathExceptionUnmarshaller Instance { get; }
    private static InvalidRelativePathExceptionUnmarshaller();
    public sealed virtual InvalidRelativePathException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidRelativePathException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRelativePathExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidRequiredProtocolExceptionUnmarshaller : object {
    private static InvalidRequiredProtocolExceptionUnmarshaller _instance;
    public static InvalidRequiredProtocolExceptionUnmarshaller Instance { get; }
    private static InvalidRequiredProtocolExceptionUnmarshaller();
    public sealed virtual InvalidRequiredProtocolException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidRequiredProtocolException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRequiredProtocolExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidResponseCodeExceptionUnmarshaller : object {
    private static InvalidResponseCodeExceptionUnmarshaller _instance;
    public static InvalidResponseCodeExceptionUnmarshaller Instance { get; }
    private static InvalidResponseCodeExceptionUnmarshaller();
    public sealed virtual InvalidResponseCodeException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidResponseCodeException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidResponseCodeExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidTaggingExceptionUnmarshaller : object {
    private static InvalidTaggingExceptionUnmarshaller _instance;
    public static InvalidTaggingExceptionUnmarshaller Instance { get; }
    private static InvalidTaggingExceptionUnmarshaller();
    public sealed virtual InvalidTaggingException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidTaggingException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTaggingExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidTTLOrderExceptionUnmarshaller : object {
    private static InvalidTTLOrderExceptionUnmarshaller _instance;
    public static InvalidTTLOrderExceptionUnmarshaller Instance { get; }
    private static InvalidTTLOrderExceptionUnmarshaller();
    public sealed virtual InvalidTTLOrderException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidTTLOrderException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTTLOrderExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidViewerCertificateExceptionUnmarshaller : object {
    private static InvalidViewerCertificateExceptionUnmarshaller _instance;
    public static InvalidViewerCertificateExceptionUnmarshaller Instance { get; }
    private static InvalidViewerCertificateExceptionUnmarshaller();
    public sealed virtual InvalidViewerCertificateException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidViewerCertificateException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidViewerCertificateExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.InvalidWebACLIdExceptionUnmarshaller : object {
    private static InvalidWebACLIdExceptionUnmarshaller _instance;
    public static InvalidWebACLIdExceptionUnmarshaller Instance { get; }
    private static InvalidWebACLIdExceptionUnmarshaller();
    public sealed virtual InvalidWebACLIdException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidWebACLIdException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidWebACLIdExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KeyGroupAlreadyExistsExceptionUnmarshaller : object {
    private static KeyGroupAlreadyExistsExceptionUnmarshaller _instance;
    public static KeyGroupAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static KeyGroupAlreadyExistsExceptionUnmarshaller();
    public sealed virtual KeyGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyGroupAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static KeyGroupAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KeyGroupConfigUnmarshaller : object {
    private static KeyGroupConfigUnmarshaller _instance;
    public static KeyGroupConfigUnmarshaller Instance { get; }
    private static KeyGroupConfigUnmarshaller();
    public sealed virtual KeyGroupConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyGroupConfig Unmarshall(JsonUnmarshallerContext context);
    public static KeyGroupConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KeyGroupListUnmarshaller : object {
    private static KeyGroupListUnmarshaller _instance;
    public static KeyGroupListUnmarshaller Instance { get; }
    private static KeyGroupListUnmarshaller();
    public sealed virtual KeyGroupList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyGroupList Unmarshall(JsonUnmarshallerContext context);
    public static KeyGroupListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KeyGroupSummaryUnmarshaller : object {
    private static KeyGroupSummaryUnmarshaller _instance;
    public static KeyGroupSummaryUnmarshaller Instance { get; }
    private static KeyGroupSummaryUnmarshaller();
    public sealed virtual KeyGroupSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyGroupSummary Unmarshall(JsonUnmarshallerContext context);
    public static KeyGroupSummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KeyGroupUnmarshaller : object {
    private static KeyGroupUnmarshaller _instance;
    public static KeyGroupUnmarshaller Instance { get; }
    private static KeyGroupUnmarshaller();
    public sealed virtual KeyGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyGroup Unmarshall(JsonUnmarshallerContext context);
    public static KeyGroupUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KeyPairIdsUnmarshaller : object {
    private static KeyPairIdsUnmarshaller _instance;
    public static KeyPairIdsUnmarshaller Instance { get; }
    private static KeyPairIdsUnmarshaller();
    public sealed virtual KeyPairIds Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyPairIds Unmarshall(JsonUnmarshallerContext context);
    public static KeyPairIdsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KeyValueStoreAssociationsUnmarshaller : object {
    private static KeyValueStoreAssociationsUnmarshaller _instance;
    public static KeyValueStoreAssociationsUnmarshaller Instance { get; }
    private static KeyValueStoreAssociationsUnmarshaller();
    public sealed virtual KeyValueStoreAssociations Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyValueStoreAssociations Unmarshall(JsonUnmarshallerContext context);
    public static KeyValueStoreAssociationsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KeyValueStoreAssociationUnmarshaller : object {
    private static KeyValueStoreAssociationUnmarshaller _instance;
    public static KeyValueStoreAssociationUnmarshaller Instance { get; }
    private static KeyValueStoreAssociationUnmarshaller();
    public sealed virtual KeyValueStoreAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyValueStoreAssociation Unmarshall(JsonUnmarshallerContext context);
    public static KeyValueStoreAssociationUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KeyValueStoreListUnmarshaller : object {
    private static KeyValueStoreListUnmarshaller _instance;
    public static KeyValueStoreListUnmarshaller Instance { get; }
    private static KeyValueStoreListUnmarshaller();
    public sealed virtual KeyValueStoreList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyValueStoreList Unmarshall(JsonUnmarshallerContext context);
    public static KeyValueStoreListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KeyValueStoreUnmarshaller : object {
    private static KeyValueStoreUnmarshaller _instance;
    public static KeyValueStoreUnmarshaller Instance { get; }
    private static KeyValueStoreUnmarshaller();
    public sealed virtual KeyValueStore Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeyValueStore Unmarshall(JsonUnmarshallerContext context);
    public static KeyValueStoreUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KGKeyPairIdsUnmarshaller : object {
    private static KGKeyPairIdsUnmarshaller _instance;
    public static KGKeyPairIdsUnmarshaller Instance { get; }
    private static KGKeyPairIdsUnmarshaller();
    public sealed virtual KGKeyPairIds Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KGKeyPairIds Unmarshall(JsonUnmarshallerContext context);
    public static KGKeyPairIdsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.KinesisStreamConfigUnmarshaller : object {
    private static KinesisStreamConfigUnmarshaller _instance;
    public static KinesisStreamConfigUnmarshaller Instance { get; }
    private static KinesisStreamConfigUnmarshaller();
    public sealed virtual KinesisStreamConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KinesisStreamConfig Unmarshall(JsonUnmarshallerContext context);
    public static KinesisStreamConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.LambdaFunctionAssociationsUnmarshaller : object {
    private static LambdaFunctionAssociationsUnmarshaller _instance;
    public static LambdaFunctionAssociationsUnmarshaller Instance { get; }
    private static LambdaFunctionAssociationsUnmarshaller();
    public sealed virtual LambdaFunctionAssociations Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LambdaFunctionAssociations Unmarshall(JsonUnmarshallerContext context);
    public static LambdaFunctionAssociationsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.LambdaFunctionAssociationUnmarshaller : object {
    private static LambdaFunctionAssociationUnmarshaller _instance;
    public static LambdaFunctionAssociationUnmarshaller Instance { get; }
    private static LambdaFunctionAssociationUnmarshaller();
    public sealed virtual LambdaFunctionAssociation Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LambdaFunctionAssociation Unmarshall(JsonUnmarshallerContext context);
    public static LambdaFunctionAssociationUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListCachePoliciesRequestMarshaller : object {
    private static ListCachePoliciesRequestMarshaller _instance;
    public static ListCachePoliciesRequestMarshaller Instance { get; }
    private static ListCachePoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCachePoliciesRequest publicRequest);
    internal static ListCachePoliciesRequestMarshaller GetInstance();
    public static ListCachePoliciesRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListCachePoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListCachePoliciesResponseUnmarshaller _instance;
    public static ListCachePoliciesResponseUnmarshaller Instance { get; }
    private static ListCachePoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListCachePoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCachePoliciesResponseUnmarshaller GetInstance();
    public static ListCachePoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListCloudFrontOriginAccessIdentitiesRequestMarshaller : object {
    private static ListCloudFrontOriginAccessIdentitiesRequestMarshaller _instance;
    public static ListCloudFrontOriginAccessIdentitiesRequestMarshaller Instance { get; }
    private static ListCloudFrontOriginAccessIdentitiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListCloudFrontOriginAccessIdentitiesRequest publicRequest);
    internal static ListCloudFrontOriginAccessIdentitiesRequestMarshaller GetInstance();
    public static ListCloudFrontOriginAccessIdentitiesRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListCloudFrontOriginAccessIdentitiesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListCloudFrontOriginAccessIdentitiesResponseUnmarshaller _instance;
    public static ListCloudFrontOriginAccessIdentitiesResponseUnmarshaller Instance { get; }
    private static ListCloudFrontOriginAccessIdentitiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListCloudFrontOriginAccessIdentitiesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListCloudFrontOriginAccessIdentitiesResponseUnmarshaller GetInstance();
    public static ListCloudFrontOriginAccessIdentitiesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListConflictingAliasesRequestMarshaller : object {
    private static ListConflictingAliasesRequestMarshaller _instance;
    public static ListConflictingAliasesRequestMarshaller Instance { get; }
    private static ListConflictingAliasesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListConflictingAliasesRequest publicRequest);
    internal static ListConflictingAliasesRequestMarshaller GetInstance();
    public static ListConflictingAliasesRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListConflictingAliasesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListConflictingAliasesResponseUnmarshaller _instance;
    public static ListConflictingAliasesResponseUnmarshaller Instance { get; }
    private static ListConflictingAliasesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListConflictingAliasesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListConflictingAliasesResponseUnmarshaller GetInstance();
    public static ListConflictingAliasesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListContinuousDeploymentPoliciesRequestMarshaller : object {
    private static ListContinuousDeploymentPoliciesRequestMarshaller _instance;
    public static ListContinuousDeploymentPoliciesRequestMarshaller Instance { get; }
    private static ListContinuousDeploymentPoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListContinuousDeploymentPoliciesRequest publicRequest);
    internal static ListContinuousDeploymentPoliciesRequestMarshaller GetInstance();
    public static ListContinuousDeploymentPoliciesRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListContinuousDeploymentPoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListContinuousDeploymentPoliciesResponseUnmarshaller _instance;
    public static ListContinuousDeploymentPoliciesResponseUnmarshaller Instance { get; }
    private static ListContinuousDeploymentPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListContinuousDeploymentPoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListContinuousDeploymentPoliciesResponseUnmarshaller GetInstance();
    public static ListContinuousDeploymentPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByCachePolicyIdRequestMarshaller : object {
    private static ListDistributionsByCachePolicyIdRequestMarshaller _instance;
    public static ListDistributionsByCachePolicyIdRequestMarshaller Instance { get; }
    private static ListDistributionsByCachePolicyIdRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDistributionsByCachePolicyIdRequest publicRequest);
    internal static ListDistributionsByCachePolicyIdRequestMarshaller GetInstance();
    public static ListDistributionsByCachePolicyIdRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByCachePolicyIdResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListDistributionsByCachePolicyIdResponseUnmarshaller _instance;
    public static ListDistributionsByCachePolicyIdResponseUnmarshaller Instance { get; }
    private static ListDistributionsByCachePolicyIdResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListDistributionsByCachePolicyIdResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDistributionsByCachePolicyIdResponseUnmarshaller GetInstance();
    public static ListDistributionsByCachePolicyIdResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByKeyGroupRequestMarshaller : object {
    private static ListDistributionsByKeyGroupRequestMarshaller _instance;
    public static ListDistributionsByKeyGroupRequestMarshaller Instance { get; }
    private static ListDistributionsByKeyGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDistributionsByKeyGroupRequest publicRequest);
    internal static ListDistributionsByKeyGroupRequestMarshaller GetInstance();
    public static ListDistributionsByKeyGroupRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByKeyGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListDistributionsByKeyGroupResponseUnmarshaller _instance;
    public static ListDistributionsByKeyGroupResponseUnmarshaller Instance { get; }
    private static ListDistributionsByKeyGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListDistributionsByKeyGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDistributionsByKeyGroupResponseUnmarshaller GetInstance();
    public static ListDistributionsByKeyGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByOriginRequestPolicyIdRequestMarshaller : object {
    private static ListDistributionsByOriginRequestPolicyIdRequestMarshaller _instance;
    public static ListDistributionsByOriginRequestPolicyIdRequestMarshaller Instance { get; }
    private static ListDistributionsByOriginRequestPolicyIdRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDistributionsByOriginRequestPolicyIdRequest publicRequest);
    internal static ListDistributionsByOriginRequestPolicyIdRequestMarshaller GetInstance();
    public static ListDistributionsByOriginRequestPolicyIdRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByOriginRequestPolicyIdResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListDistributionsByOriginRequestPolicyIdResponseUnmarshaller _instance;
    public static ListDistributionsByOriginRequestPolicyIdResponseUnmarshaller Instance { get; }
    private static ListDistributionsByOriginRequestPolicyIdResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListDistributionsByOriginRequestPolicyIdResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDistributionsByOriginRequestPolicyIdResponseUnmarshaller GetInstance();
    public static ListDistributionsByOriginRequestPolicyIdResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByRealtimeLogConfigRequestMarshaller : object {
    private static ListDistributionsByRealtimeLogConfigRequestMarshaller _instance;
    public static ListDistributionsByRealtimeLogConfigRequestMarshaller Instance { get; }
    private static ListDistributionsByRealtimeLogConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDistributionsByRealtimeLogConfigRequest publicRequest);
    internal static ListDistributionsByRealtimeLogConfigRequestMarshaller GetInstance();
    public static ListDistributionsByRealtimeLogConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByRealtimeLogConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListDistributionsByRealtimeLogConfigResponseUnmarshaller _instance;
    public static ListDistributionsByRealtimeLogConfigResponseUnmarshaller Instance { get; }
    private static ListDistributionsByRealtimeLogConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListDistributionsByRealtimeLogConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDistributionsByRealtimeLogConfigResponseUnmarshaller GetInstance();
    public static ListDistributionsByRealtimeLogConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByResponseHeadersPolicyIdRequestMarshaller : object {
    private static ListDistributionsByResponseHeadersPolicyIdRequestMarshaller _instance;
    public static ListDistributionsByResponseHeadersPolicyIdRequestMarshaller Instance { get; }
    private static ListDistributionsByResponseHeadersPolicyIdRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDistributionsByResponseHeadersPolicyIdRequest publicRequest);
    internal static ListDistributionsByResponseHeadersPolicyIdRequestMarshaller GetInstance();
    public static ListDistributionsByResponseHeadersPolicyIdRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByResponseHeadersPolicyIdResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListDistributionsByResponseHeadersPolicyIdResponseUnmarshaller _instance;
    public static ListDistributionsByResponseHeadersPolicyIdResponseUnmarshaller Instance { get; }
    private static ListDistributionsByResponseHeadersPolicyIdResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListDistributionsByResponseHeadersPolicyIdResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDistributionsByResponseHeadersPolicyIdResponseUnmarshaller GetInstance();
    public static ListDistributionsByResponseHeadersPolicyIdResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByWebACLIdRequestMarshaller : object {
    private static ListDistributionsByWebACLIdRequestMarshaller _instance;
    public static ListDistributionsByWebACLIdRequestMarshaller Instance { get; }
    private static ListDistributionsByWebACLIdRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDistributionsByWebACLIdRequest publicRequest);
    internal static ListDistributionsByWebACLIdRequestMarshaller GetInstance();
    public static ListDistributionsByWebACLIdRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsByWebACLIdResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListDistributionsByWebACLIdResponseUnmarshaller _instance;
    public static ListDistributionsByWebACLIdResponseUnmarshaller Instance { get; }
    private static ListDistributionsByWebACLIdResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListDistributionsByWebACLIdResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDistributionsByWebACLIdResponseUnmarshaller GetInstance();
    public static ListDistributionsByWebACLIdResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsRequestMarshaller : object {
    private static ListDistributionsRequestMarshaller _instance;
    public static ListDistributionsRequestMarshaller Instance { get; }
    private static ListDistributionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDistributionsRequest publicRequest);
    internal static ListDistributionsRequestMarshaller GetInstance();
    public static ListDistributionsRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListDistributionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListDistributionsResponseUnmarshaller _instance;
    public static ListDistributionsResponseUnmarshaller Instance { get; }
    private static ListDistributionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListDistributionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDistributionsResponseUnmarshaller GetInstance();
    public static ListDistributionsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListFieldLevelEncryptionConfigsRequestMarshaller : object {
    private static ListFieldLevelEncryptionConfigsRequestMarshaller _instance;
    public static ListFieldLevelEncryptionConfigsRequestMarshaller Instance { get; }
    private static ListFieldLevelEncryptionConfigsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFieldLevelEncryptionConfigsRequest publicRequest);
    internal static ListFieldLevelEncryptionConfigsRequestMarshaller GetInstance();
    public static ListFieldLevelEncryptionConfigsRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListFieldLevelEncryptionConfigsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListFieldLevelEncryptionConfigsResponseUnmarshaller _instance;
    public static ListFieldLevelEncryptionConfigsResponseUnmarshaller Instance { get; }
    private static ListFieldLevelEncryptionConfigsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListFieldLevelEncryptionConfigsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFieldLevelEncryptionConfigsResponseUnmarshaller GetInstance();
    public static ListFieldLevelEncryptionConfigsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListFieldLevelEncryptionProfilesRequestMarshaller : object {
    private static ListFieldLevelEncryptionProfilesRequestMarshaller _instance;
    public static ListFieldLevelEncryptionProfilesRequestMarshaller Instance { get; }
    private static ListFieldLevelEncryptionProfilesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFieldLevelEncryptionProfilesRequest publicRequest);
    internal static ListFieldLevelEncryptionProfilesRequestMarshaller GetInstance();
    public static ListFieldLevelEncryptionProfilesRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListFieldLevelEncryptionProfilesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListFieldLevelEncryptionProfilesResponseUnmarshaller _instance;
    public static ListFieldLevelEncryptionProfilesResponseUnmarshaller Instance { get; }
    private static ListFieldLevelEncryptionProfilesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListFieldLevelEncryptionProfilesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFieldLevelEncryptionProfilesResponseUnmarshaller GetInstance();
    public static ListFieldLevelEncryptionProfilesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListFunctionsRequestMarshaller : object {
    private static ListFunctionsRequestMarshaller _instance;
    public static ListFunctionsRequestMarshaller Instance { get; }
    private static ListFunctionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListFunctionsRequest publicRequest);
    internal static ListFunctionsRequestMarshaller GetInstance();
    public static ListFunctionsRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListFunctionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListFunctionsResponseUnmarshaller _instance;
    public static ListFunctionsResponseUnmarshaller Instance { get; }
    private static ListFunctionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListFunctionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListFunctionsResponseUnmarshaller GetInstance();
    public static ListFunctionsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListInvalidationsRequestMarshaller : object {
    private static ListInvalidationsRequestMarshaller _instance;
    public static ListInvalidationsRequestMarshaller Instance { get; }
    private static ListInvalidationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListInvalidationsRequest publicRequest);
    internal static ListInvalidationsRequestMarshaller GetInstance();
    public static ListInvalidationsRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListInvalidationsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListInvalidationsResponseUnmarshaller _instance;
    public static ListInvalidationsResponseUnmarshaller Instance { get; }
    private static ListInvalidationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListInvalidationsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListInvalidationsResponseUnmarshaller GetInstance();
    public static ListInvalidationsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListKeyGroupsRequestMarshaller : object {
    private static ListKeyGroupsRequestMarshaller _instance;
    public static ListKeyGroupsRequestMarshaller Instance { get; }
    private static ListKeyGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListKeyGroupsRequest publicRequest);
    internal static ListKeyGroupsRequestMarshaller GetInstance();
    public static ListKeyGroupsRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListKeyGroupsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListKeyGroupsResponseUnmarshaller _instance;
    public static ListKeyGroupsResponseUnmarshaller Instance { get; }
    private static ListKeyGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListKeyGroupsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListKeyGroupsResponseUnmarshaller GetInstance();
    public static ListKeyGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListKeyValueStoresRequestMarshaller : object {
    private static ListKeyValueStoresRequestMarshaller _instance;
    public static ListKeyValueStoresRequestMarshaller Instance { get; }
    private static ListKeyValueStoresRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListKeyValueStoresRequest publicRequest);
    internal static ListKeyValueStoresRequestMarshaller GetInstance();
    public static ListKeyValueStoresRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListKeyValueStoresResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListKeyValueStoresResponseUnmarshaller _instance;
    public static ListKeyValueStoresResponseUnmarshaller Instance { get; }
    private static ListKeyValueStoresResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListKeyValueStoresResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListKeyValueStoresResponseUnmarshaller GetInstance();
    public static ListKeyValueStoresResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListOriginAccessControlsRequestMarshaller : object {
    private static ListOriginAccessControlsRequestMarshaller _instance;
    public static ListOriginAccessControlsRequestMarshaller Instance { get; }
    private static ListOriginAccessControlsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListOriginAccessControlsRequest publicRequest);
    internal static ListOriginAccessControlsRequestMarshaller GetInstance();
    public static ListOriginAccessControlsRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListOriginAccessControlsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListOriginAccessControlsResponseUnmarshaller _instance;
    public static ListOriginAccessControlsResponseUnmarshaller Instance { get; }
    private static ListOriginAccessControlsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListOriginAccessControlsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListOriginAccessControlsResponseUnmarshaller GetInstance();
    public static ListOriginAccessControlsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListOriginRequestPoliciesRequestMarshaller : object {
    private static ListOriginRequestPoliciesRequestMarshaller _instance;
    public static ListOriginRequestPoliciesRequestMarshaller Instance { get; }
    private static ListOriginRequestPoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListOriginRequestPoliciesRequest publicRequest);
    internal static ListOriginRequestPoliciesRequestMarshaller GetInstance();
    public static ListOriginRequestPoliciesRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListOriginRequestPoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListOriginRequestPoliciesResponseUnmarshaller _instance;
    public static ListOriginRequestPoliciesResponseUnmarshaller Instance { get; }
    private static ListOriginRequestPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListOriginRequestPoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListOriginRequestPoliciesResponseUnmarshaller GetInstance();
    public static ListOriginRequestPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListPublicKeysRequestMarshaller : object {
    private static ListPublicKeysRequestMarshaller _instance;
    public static ListPublicKeysRequestMarshaller Instance { get; }
    private static ListPublicKeysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListPublicKeysRequest publicRequest);
    internal static ListPublicKeysRequestMarshaller GetInstance();
    public static ListPublicKeysRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListPublicKeysResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListPublicKeysResponseUnmarshaller _instance;
    public static ListPublicKeysResponseUnmarshaller Instance { get; }
    private static ListPublicKeysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListPublicKeysResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListPublicKeysResponseUnmarshaller GetInstance();
    public static ListPublicKeysResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListRealtimeLogConfigsRequestMarshaller : object {
    private static ListRealtimeLogConfigsRequestMarshaller _instance;
    public static ListRealtimeLogConfigsRequestMarshaller Instance { get; }
    private static ListRealtimeLogConfigsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListRealtimeLogConfigsRequest publicRequest);
    internal static ListRealtimeLogConfigsRequestMarshaller GetInstance();
    public static ListRealtimeLogConfigsRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListRealtimeLogConfigsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListRealtimeLogConfigsResponseUnmarshaller _instance;
    public static ListRealtimeLogConfigsResponseUnmarshaller Instance { get; }
    private static ListRealtimeLogConfigsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListRealtimeLogConfigsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListRealtimeLogConfigsResponseUnmarshaller GetInstance();
    public static ListRealtimeLogConfigsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListResponseHeadersPoliciesRequestMarshaller : object {
    private static ListResponseHeadersPoliciesRequestMarshaller _instance;
    public static ListResponseHeadersPoliciesRequestMarshaller Instance { get; }
    private static ListResponseHeadersPoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListResponseHeadersPoliciesRequest publicRequest);
    internal static ListResponseHeadersPoliciesRequestMarshaller GetInstance();
    public static ListResponseHeadersPoliciesRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListResponseHeadersPoliciesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListResponseHeadersPoliciesResponseUnmarshaller _instance;
    public static ListResponseHeadersPoliciesResponseUnmarshaller Instance { get; }
    private static ListResponseHeadersPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListResponseHeadersPoliciesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListResponseHeadersPoliciesResponseUnmarshaller GetInstance();
    public static ListResponseHeadersPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListStreamingDistributionsRequestMarshaller : object {
    private static ListStreamingDistributionsRequestMarshaller _instance;
    public static ListStreamingDistributionsRequestMarshaller Instance { get; }
    private static ListStreamingDistributionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListStreamingDistributionsRequest publicRequest);
    internal static ListStreamingDistributionsRequestMarshaller GetInstance();
    public static ListStreamingDistributionsRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListStreamingDistributionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListStreamingDistributionsResponseUnmarshaller _instance;
    public static ListStreamingDistributionsResponseUnmarshaller Instance { get; }
    private static ListStreamingDistributionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListStreamingDistributionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListStreamingDistributionsResponseUnmarshaller GetInstance();
    public static ListStreamingDistributionsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListTagsForResourceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.LoggingConfigUnmarshaller : object {
    private static LoggingConfigUnmarshaller _instance;
    public static LoggingConfigUnmarshaller Instance { get; }
    private static LoggingConfigUnmarshaller();
    public sealed virtual LoggingConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LoggingConfig Unmarshall(JsonUnmarshallerContext context);
    public static LoggingConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.MissingBodyExceptionUnmarshaller : object {
    private static MissingBodyExceptionUnmarshaller _instance;
    public static MissingBodyExceptionUnmarshaller Instance { get; }
    private static MissingBodyExceptionUnmarshaller();
    public sealed virtual MissingBodyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MissingBodyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static MissingBodyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.MonitoringSubscriptionAlreadyExistsExceptionUnmarshaller : object {
    private static MonitoringSubscriptionAlreadyExistsExceptionUnmarshaller _instance;
    public static MonitoringSubscriptionAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static MonitoringSubscriptionAlreadyExistsExceptionUnmarshaller();
    public sealed virtual MonitoringSubscriptionAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MonitoringSubscriptionAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static MonitoringSubscriptionAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.MonitoringSubscriptionUnmarshaller : object {
    private static MonitoringSubscriptionUnmarshaller _instance;
    public static MonitoringSubscriptionUnmarshaller Instance { get; }
    private static MonitoringSubscriptionUnmarshaller();
    public sealed virtual MonitoringSubscription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MonitoringSubscription Unmarshall(JsonUnmarshallerContext context);
    public static MonitoringSubscriptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchCachePolicyExceptionUnmarshaller : object {
    private static NoSuchCachePolicyExceptionUnmarshaller _instance;
    public static NoSuchCachePolicyExceptionUnmarshaller Instance { get; }
    private static NoSuchCachePolicyExceptionUnmarshaller();
    public sealed virtual NoSuchCachePolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchCachePolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchCachePolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchCloudFrontOriginAccessIdentityExceptionUnmarshaller : object {
    private static NoSuchCloudFrontOriginAccessIdentityExceptionUnmarshaller _instance;
    public static NoSuchCloudFrontOriginAccessIdentityExceptionUnmarshaller Instance { get; }
    private static NoSuchCloudFrontOriginAccessIdentityExceptionUnmarshaller();
    public sealed virtual NoSuchCloudFrontOriginAccessIdentityException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchCloudFrontOriginAccessIdentityException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchCloudFrontOriginAccessIdentityExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchContinuousDeploymentPolicyExceptionUnmarshaller : object {
    private static NoSuchContinuousDeploymentPolicyExceptionUnmarshaller _instance;
    public static NoSuchContinuousDeploymentPolicyExceptionUnmarshaller Instance { get; }
    private static NoSuchContinuousDeploymentPolicyExceptionUnmarshaller();
    public sealed virtual NoSuchContinuousDeploymentPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchContinuousDeploymentPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchContinuousDeploymentPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchDistributionExceptionUnmarshaller : object {
    private static NoSuchDistributionExceptionUnmarshaller _instance;
    public static NoSuchDistributionExceptionUnmarshaller Instance { get; }
    private static NoSuchDistributionExceptionUnmarshaller();
    public sealed virtual NoSuchDistributionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchDistributionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchDistributionExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchFieldLevelEncryptionConfigExceptionUnmarshaller : object {
    private static NoSuchFieldLevelEncryptionConfigExceptionUnmarshaller _instance;
    public static NoSuchFieldLevelEncryptionConfigExceptionUnmarshaller Instance { get; }
    private static NoSuchFieldLevelEncryptionConfigExceptionUnmarshaller();
    public sealed virtual NoSuchFieldLevelEncryptionConfigException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchFieldLevelEncryptionConfigException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchFieldLevelEncryptionConfigExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchFieldLevelEncryptionProfileExceptionUnmarshaller : object {
    private static NoSuchFieldLevelEncryptionProfileExceptionUnmarshaller _instance;
    public static NoSuchFieldLevelEncryptionProfileExceptionUnmarshaller Instance { get; }
    private static NoSuchFieldLevelEncryptionProfileExceptionUnmarshaller();
    public sealed virtual NoSuchFieldLevelEncryptionProfileException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchFieldLevelEncryptionProfileException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchFieldLevelEncryptionProfileExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchFunctionExistsExceptionUnmarshaller : object {
    private static NoSuchFunctionExistsExceptionUnmarshaller _instance;
    public static NoSuchFunctionExistsExceptionUnmarshaller Instance { get; }
    private static NoSuchFunctionExistsExceptionUnmarshaller();
    public sealed virtual NoSuchFunctionExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchFunctionExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchFunctionExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchInvalidationExceptionUnmarshaller : object {
    private static NoSuchInvalidationExceptionUnmarshaller _instance;
    public static NoSuchInvalidationExceptionUnmarshaller Instance { get; }
    private static NoSuchInvalidationExceptionUnmarshaller();
    public sealed virtual NoSuchInvalidationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchInvalidationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchInvalidationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchMonitoringSubscriptionExceptionUnmarshaller : object {
    private static NoSuchMonitoringSubscriptionExceptionUnmarshaller _instance;
    public static NoSuchMonitoringSubscriptionExceptionUnmarshaller Instance { get; }
    private static NoSuchMonitoringSubscriptionExceptionUnmarshaller();
    public sealed virtual NoSuchMonitoringSubscriptionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchMonitoringSubscriptionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchMonitoringSubscriptionExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchOriginAccessControlExceptionUnmarshaller : object {
    private static NoSuchOriginAccessControlExceptionUnmarshaller _instance;
    public static NoSuchOriginAccessControlExceptionUnmarshaller Instance { get; }
    private static NoSuchOriginAccessControlExceptionUnmarshaller();
    public sealed virtual NoSuchOriginAccessControlException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchOriginAccessControlException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchOriginAccessControlExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchOriginExceptionUnmarshaller : object {
    private static NoSuchOriginExceptionUnmarshaller _instance;
    public static NoSuchOriginExceptionUnmarshaller Instance { get; }
    private static NoSuchOriginExceptionUnmarshaller();
    public sealed virtual NoSuchOriginException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchOriginException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchOriginExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchOriginRequestPolicyExceptionUnmarshaller : object {
    private static NoSuchOriginRequestPolicyExceptionUnmarshaller _instance;
    public static NoSuchOriginRequestPolicyExceptionUnmarshaller Instance { get; }
    private static NoSuchOriginRequestPolicyExceptionUnmarshaller();
    public sealed virtual NoSuchOriginRequestPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchOriginRequestPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchOriginRequestPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchPublicKeyExceptionUnmarshaller : object {
    private static NoSuchPublicKeyExceptionUnmarshaller _instance;
    public static NoSuchPublicKeyExceptionUnmarshaller Instance { get; }
    private static NoSuchPublicKeyExceptionUnmarshaller();
    public sealed virtual NoSuchPublicKeyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchPublicKeyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchPublicKeyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchRealtimeLogConfigExceptionUnmarshaller : object {
    private static NoSuchRealtimeLogConfigExceptionUnmarshaller _instance;
    public static NoSuchRealtimeLogConfigExceptionUnmarshaller Instance { get; }
    private static NoSuchRealtimeLogConfigExceptionUnmarshaller();
    public sealed virtual NoSuchRealtimeLogConfigException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchRealtimeLogConfigException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchRealtimeLogConfigExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchResourceExceptionUnmarshaller : object {
    private static NoSuchResourceExceptionUnmarshaller _instance;
    public static NoSuchResourceExceptionUnmarshaller Instance { get; }
    private static NoSuchResourceExceptionUnmarshaller();
    public sealed virtual NoSuchResourceException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchResourceException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchResourceExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchResponseHeadersPolicyExceptionUnmarshaller : object {
    private static NoSuchResponseHeadersPolicyExceptionUnmarshaller _instance;
    public static NoSuchResponseHeadersPolicyExceptionUnmarshaller Instance { get; }
    private static NoSuchResponseHeadersPolicyExceptionUnmarshaller();
    public sealed virtual NoSuchResponseHeadersPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchResponseHeadersPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchResponseHeadersPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.NoSuchStreamingDistributionExceptionUnmarshaller : object {
    private static NoSuchStreamingDistributionExceptionUnmarshaller _instance;
    public static NoSuchStreamingDistributionExceptionUnmarshaller Instance { get; }
    private static NoSuchStreamingDistributionExceptionUnmarshaller();
    public sealed virtual NoSuchStreamingDistributionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NoSuchStreamingDistributionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoSuchStreamingDistributionExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginAccessControlAlreadyExistsExceptionUnmarshaller : object {
    private static OriginAccessControlAlreadyExistsExceptionUnmarshaller _instance;
    public static OriginAccessControlAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static OriginAccessControlAlreadyExistsExceptionUnmarshaller();
    public sealed virtual OriginAccessControlAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginAccessControlAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static OriginAccessControlAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginAccessControlConfigUnmarshaller : object {
    private static OriginAccessControlConfigUnmarshaller _instance;
    public static OriginAccessControlConfigUnmarshaller Instance { get; }
    private static OriginAccessControlConfigUnmarshaller();
    public sealed virtual OriginAccessControlConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginAccessControlConfig Unmarshall(JsonUnmarshallerContext context);
    public static OriginAccessControlConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginAccessControlInUseExceptionUnmarshaller : object {
    private static OriginAccessControlInUseExceptionUnmarshaller _instance;
    public static OriginAccessControlInUseExceptionUnmarshaller Instance { get; }
    private static OriginAccessControlInUseExceptionUnmarshaller();
    public sealed virtual OriginAccessControlInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginAccessControlInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static OriginAccessControlInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginAccessControlListUnmarshaller : object {
    private static OriginAccessControlListUnmarshaller _instance;
    public static OriginAccessControlListUnmarshaller Instance { get; }
    private static OriginAccessControlListUnmarshaller();
    public sealed virtual OriginAccessControlList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginAccessControlList Unmarshall(JsonUnmarshallerContext context);
    public static OriginAccessControlListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginAccessControlSummaryUnmarshaller : object {
    private static OriginAccessControlSummaryUnmarshaller _instance;
    public static OriginAccessControlSummaryUnmarshaller Instance { get; }
    private static OriginAccessControlSummaryUnmarshaller();
    public sealed virtual OriginAccessControlSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginAccessControlSummary Unmarshall(JsonUnmarshallerContext context);
    public static OriginAccessControlSummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginAccessControlUnmarshaller : object {
    private static OriginAccessControlUnmarshaller _instance;
    public static OriginAccessControlUnmarshaller Instance { get; }
    private static OriginAccessControlUnmarshaller();
    public sealed virtual OriginAccessControl Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginAccessControl Unmarshall(JsonUnmarshallerContext context);
    public static OriginAccessControlUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginCustomHeaderUnmarshaller : object {
    private static OriginCustomHeaderUnmarshaller _instance;
    public static OriginCustomHeaderUnmarshaller Instance { get; }
    private static OriginCustomHeaderUnmarshaller();
    public sealed virtual OriginCustomHeader Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginCustomHeader Unmarshall(JsonUnmarshallerContext context);
    public static OriginCustomHeaderUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginGroupFailoverCriteriaUnmarshaller : object {
    private static OriginGroupFailoverCriteriaUnmarshaller _instance;
    public static OriginGroupFailoverCriteriaUnmarshaller Instance { get; }
    private static OriginGroupFailoverCriteriaUnmarshaller();
    public sealed virtual OriginGroupFailoverCriteria Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginGroupFailoverCriteria Unmarshall(JsonUnmarshallerContext context);
    public static OriginGroupFailoverCriteriaUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginGroupMembersUnmarshaller : object {
    private static OriginGroupMembersUnmarshaller _instance;
    public static OriginGroupMembersUnmarshaller Instance { get; }
    private static OriginGroupMembersUnmarshaller();
    public sealed virtual OriginGroupMembers Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginGroupMembers Unmarshall(JsonUnmarshallerContext context);
    public static OriginGroupMembersUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginGroupMemberUnmarshaller : object {
    private static OriginGroupMemberUnmarshaller _instance;
    public static OriginGroupMemberUnmarshaller Instance { get; }
    private static OriginGroupMemberUnmarshaller();
    public sealed virtual OriginGroupMember Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginGroupMember Unmarshall(JsonUnmarshallerContext context);
    public static OriginGroupMemberUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginGroupsUnmarshaller : object {
    private static OriginGroupsUnmarshaller _instance;
    public static OriginGroupsUnmarshaller Instance { get; }
    private static OriginGroupsUnmarshaller();
    public sealed virtual OriginGroups Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginGroups Unmarshall(JsonUnmarshallerContext context);
    public static OriginGroupsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginGroupUnmarshaller : object {
    private static OriginGroupUnmarshaller _instance;
    public static OriginGroupUnmarshaller Instance { get; }
    private static OriginGroupUnmarshaller();
    public sealed virtual OriginGroup Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginGroup Unmarshall(JsonUnmarshallerContext context);
    public static OriginGroupUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginRequestPolicyAlreadyExistsExceptionUnmarshaller : object {
    private static OriginRequestPolicyAlreadyExistsExceptionUnmarshaller _instance;
    public static OriginRequestPolicyAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static OriginRequestPolicyAlreadyExistsExceptionUnmarshaller();
    public sealed virtual OriginRequestPolicyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginRequestPolicyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static OriginRequestPolicyAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginRequestPolicyConfigUnmarshaller : object {
    private static OriginRequestPolicyConfigUnmarshaller _instance;
    public static OriginRequestPolicyConfigUnmarshaller Instance { get; }
    private static OriginRequestPolicyConfigUnmarshaller();
    public sealed virtual OriginRequestPolicyConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginRequestPolicyConfig Unmarshall(JsonUnmarshallerContext context);
    public static OriginRequestPolicyConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginRequestPolicyCookiesConfigUnmarshaller : object {
    private static OriginRequestPolicyCookiesConfigUnmarshaller _instance;
    public static OriginRequestPolicyCookiesConfigUnmarshaller Instance { get; }
    private static OriginRequestPolicyCookiesConfigUnmarshaller();
    public sealed virtual OriginRequestPolicyCookiesConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginRequestPolicyCookiesConfig Unmarshall(JsonUnmarshallerContext context);
    public static OriginRequestPolicyCookiesConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginRequestPolicyHeadersConfigUnmarshaller : object {
    private static OriginRequestPolicyHeadersConfigUnmarshaller _instance;
    public static OriginRequestPolicyHeadersConfigUnmarshaller Instance { get; }
    private static OriginRequestPolicyHeadersConfigUnmarshaller();
    public sealed virtual OriginRequestPolicyHeadersConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginRequestPolicyHeadersConfig Unmarshall(JsonUnmarshallerContext context);
    public static OriginRequestPolicyHeadersConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginRequestPolicyInUseExceptionUnmarshaller : object {
    private static OriginRequestPolicyInUseExceptionUnmarshaller _instance;
    public static OriginRequestPolicyInUseExceptionUnmarshaller Instance { get; }
    private static OriginRequestPolicyInUseExceptionUnmarshaller();
    public sealed virtual OriginRequestPolicyInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginRequestPolicyInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static OriginRequestPolicyInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginRequestPolicyListUnmarshaller : object {
    private static OriginRequestPolicyListUnmarshaller _instance;
    public static OriginRequestPolicyListUnmarshaller Instance { get; }
    private static OriginRequestPolicyListUnmarshaller();
    public sealed virtual OriginRequestPolicyList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginRequestPolicyList Unmarshall(JsonUnmarshallerContext context);
    public static OriginRequestPolicyListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginRequestPolicyQueryStringsConfigUnmarshaller : object {
    private static OriginRequestPolicyQueryStringsConfigUnmarshaller _instance;
    public static OriginRequestPolicyQueryStringsConfigUnmarshaller Instance { get; }
    private static OriginRequestPolicyQueryStringsConfigUnmarshaller();
    public sealed virtual OriginRequestPolicyQueryStringsConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginRequestPolicyQueryStringsConfig Unmarshall(JsonUnmarshallerContext context);
    public static OriginRequestPolicyQueryStringsConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginRequestPolicySummaryUnmarshaller : object {
    private static OriginRequestPolicySummaryUnmarshaller _instance;
    public static OriginRequestPolicySummaryUnmarshaller Instance { get; }
    private static OriginRequestPolicySummaryUnmarshaller();
    public sealed virtual OriginRequestPolicySummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginRequestPolicySummary Unmarshall(JsonUnmarshallerContext context);
    public static OriginRequestPolicySummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginRequestPolicyUnmarshaller : object {
    private static OriginRequestPolicyUnmarshaller _instance;
    public static OriginRequestPolicyUnmarshaller Instance { get; }
    private static OriginRequestPolicyUnmarshaller();
    public sealed virtual OriginRequestPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginRequestPolicy Unmarshall(JsonUnmarshallerContext context);
    public static OriginRequestPolicyUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginShieldUnmarshaller : object {
    private static OriginShieldUnmarshaller _instance;
    public static OriginShieldUnmarshaller Instance { get; }
    private static OriginShieldUnmarshaller();
    public sealed virtual OriginShield Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginShield Unmarshall(JsonUnmarshallerContext context);
    public static OriginShieldUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginSslProtocolsUnmarshaller : object {
    private static OriginSslProtocolsUnmarshaller _instance;
    public static OriginSslProtocolsUnmarshaller Instance { get; }
    private static OriginSslProtocolsUnmarshaller();
    public sealed virtual OriginSslProtocols Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OriginSslProtocols Unmarshall(JsonUnmarshallerContext context);
    public static OriginSslProtocolsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginsUnmarshaller : object {
    private static OriginsUnmarshaller _instance;
    public static OriginsUnmarshaller Instance { get; }
    private static OriginsUnmarshaller();
    public sealed virtual Origins Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Origins Unmarshall(JsonUnmarshallerContext context);
    public static OriginsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.OriginUnmarshaller : object {
    private static OriginUnmarshaller _instance;
    public static OriginUnmarshaller Instance { get; }
    private static OriginUnmarshaller();
    public sealed virtual Origin Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Origin Unmarshall(JsonUnmarshallerContext context);
    public static OriginUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ParametersInCacheKeyAndForwardedToOriginUnmarshaller : object {
    private static ParametersInCacheKeyAndForwardedToOriginUnmarshaller _instance;
    public static ParametersInCacheKeyAndForwardedToOriginUnmarshaller Instance { get; }
    private static ParametersInCacheKeyAndForwardedToOriginUnmarshaller();
    public sealed virtual ParametersInCacheKeyAndForwardedToOrigin Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ParametersInCacheKeyAndForwardedToOrigin Unmarshall(JsonUnmarshallerContext context);
    public static ParametersInCacheKeyAndForwardedToOriginUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.PathsUnmarshaller : object {
    private static PathsUnmarshaller _instance;
    public static PathsUnmarshaller Instance { get; }
    private static PathsUnmarshaller();
    public sealed virtual Paths Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Paths Unmarshall(JsonUnmarshallerContext context);
    public static PathsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.PreconditionFailedExceptionUnmarshaller : object {
    private static PreconditionFailedExceptionUnmarshaller _instance;
    public static PreconditionFailedExceptionUnmarshaller Instance { get; }
    private static PreconditionFailedExceptionUnmarshaller();
    public sealed virtual PreconditionFailedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PreconditionFailedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static PreconditionFailedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.PublicKeyAlreadyExistsExceptionUnmarshaller : object {
    private static PublicKeyAlreadyExistsExceptionUnmarshaller _instance;
    public static PublicKeyAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static PublicKeyAlreadyExistsExceptionUnmarshaller();
    public sealed virtual PublicKeyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicKeyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static PublicKeyAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.PublicKeyConfigUnmarshaller : object {
    private static PublicKeyConfigUnmarshaller _instance;
    public static PublicKeyConfigUnmarshaller Instance { get; }
    private static PublicKeyConfigUnmarshaller();
    public sealed virtual PublicKeyConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicKeyConfig Unmarshall(JsonUnmarshallerContext context);
    public static PublicKeyConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.PublicKeyInUseExceptionUnmarshaller : object {
    private static PublicKeyInUseExceptionUnmarshaller _instance;
    public static PublicKeyInUseExceptionUnmarshaller Instance { get; }
    private static PublicKeyInUseExceptionUnmarshaller();
    public sealed virtual PublicKeyInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicKeyInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static PublicKeyInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.PublicKeyListUnmarshaller : object {
    private static PublicKeyListUnmarshaller _instance;
    public static PublicKeyListUnmarshaller Instance { get; }
    private static PublicKeyListUnmarshaller();
    public sealed virtual PublicKeyList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicKeyList Unmarshall(JsonUnmarshallerContext context);
    public static PublicKeyListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.PublicKeySummaryUnmarshaller : object {
    private static PublicKeySummaryUnmarshaller _instance;
    public static PublicKeySummaryUnmarshaller Instance { get; }
    private static PublicKeySummaryUnmarshaller();
    public sealed virtual PublicKeySummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicKeySummary Unmarshall(JsonUnmarshallerContext context);
    public static PublicKeySummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.PublicKeyUnmarshaller : object {
    private static PublicKeyUnmarshaller _instance;
    public static PublicKeyUnmarshaller Instance { get; }
    private static PublicKeyUnmarshaller();
    public sealed virtual PublicKey Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicKey Unmarshall(JsonUnmarshallerContext context);
    public static PublicKeyUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.PublishFunctionRequestMarshaller : object {
    private static PublishFunctionRequestMarshaller _instance;
    public static PublishFunctionRequestMarshaller Instance { get; }
    private static PublishFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PublishFunctionRequest publicRequest);
    internal static PublishFunctionRequestMarshaller GetInstance();
    public static PublishFunctionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.PublishFunctionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PublishFunctionResponseUnmarshaller _instance;
    public static PublishFunctionResponseUnmarshaller Instance { get; }
    private static PublishFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PublishFunctionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PublishFunctionResponseUnmarshaller GetInstance();
    public static PublishFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.QueryArgProfileConfigUnmarshaller : object {
    private static QueryArgProfileConfigUnmarshaller _instance;
    public static QueryArgProfileConfigUnmarshaller Instance { get; }
    private static QueryArgProfileConfigUnmarshaller();
    public sealed virtual QueryArgProfileConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryArgProfileConfig Unmarshall(JsonUnmarshallerContext context);
    public static QueryArgProfileConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.QueryArgProfileEmptyExceptionUnmarshaller : object {
    private static QueryArgProfileEmptyExceptionUnmarshaller _instance;
    public static QueryArgProfileEmptyExceptionUnmarshaller Instance { get; }
    private static QueryArgProfileEmptyExceptionUnmarshaller();
    public sealed virtual QueryArgProfileEmptyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryArgProfileEmptyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static QueryArgProfileEmptyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.QueryArgProfilesUnmarshaller : object {
    private static QueryArgProfilesUnmarshaller _instance;
    public static QueryArgProfilesUnmarshaller Instance { get; }
    private static QueryArgProfilesUnmarshaller();
    public sealed virtual QueryArgProfiles Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryArgProfiles Unmarshall(JsonUnmarshallerContext context);
    public static QueryArgProfilesUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.QueryArgProfileUnmarshaller : object {
    private static QueryArgProfileUnmarshaller _instance;
    public static QueryArgProfileUnmarshaller Instance { get; }
    private static QueryArgProfileUnmarshaller();
    public sealed virtual QueryArgProfile Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryArgProfile Unmarshall(JsonUnmarshallerContext context);
    public static QueryArgProfileUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.QueryStringCacheKeysUnmarshaller : object {
    private static QueryStringCacheKeysUnmarshaller _instance;
    public static QueryStringCacheKeysUnmarshaller Instance { get; }
    private static QueryStringCacheKeysUnmarshaller();
    public sealed virtual QueryStringCacheKeys Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryStringCacheKeys Unmarshall(JsonUnmarshallerContext context);
    public static QueryStringCacheKeysUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.QueryStringNamesUnmarshaller : object {
    private static QueryStringNamesUnmarshaller _instance;
    public static QueryStringNamesUnmarshaller Instance { get; }
    private static QueryStringNamesUnmarshaller();
    public sealed virtual QueryStringNames Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryStringNames Unmarshall(JsonUnmarshallerContext context);
    public static QueryStringNamesUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.RealtimeLogConfigAlreadyExistsExceptionUnmarshaller : object {
    private static RealtimeLogConfigAlreadyExistsExceptionUnmarshaller _instance;
    public static RealtimeLogConfigAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static RealtimeLogConfigAlreadyExistsExceptionUnmarshaller();
    public sealed virtual RealtimeLogConfigAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RealtimeLogConfigAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static RealtimeLogConfigAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.RealtimeLogConfigInUseExceptionUnmarshaller : object {
    private static RealtimeLogConfigInUseExceptionUnmarshaller _instance;
    public static RealtimeLogConfigInUseExceptionUnmarshaller Instance { get; }
    private static RealtimeLogConfigInUseExceptionUnmarshaller();
    public sealed virtual RealtimeLogConfigInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RealtimeLogConfigInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static RealtimeLogConfigInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.RealtimeLogConfigOwnerMismatchExceptionUnmarshaller : object {
    private static RealtimeLogConfigOwnerMismatchExceptionUnmarshaller _instance;
    public static RealtimeLogConfigOwnerMismatchExceptionUnmarshaller Instance { get; }
    private static RealtimeLogConfigOwnerMismatchExceptionUnmarshaller();
    public sealed virtual RealtimeLogConfigOwnerMismatchException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RealtimeLogConfigOwnerMismatchException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static RealtimeLogConfigOwnerMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.RealtimeLogConfigsUnmarshaller : object {
    private static RealtimeLogConfigsUnmarshaller _instance;
    public static RealtimeLogConfigsUnmarshaller Instance { get; }
    private static RealtimeLogConfigsUnmarshaller();
    public sealed virtual RealtimeLogConfigs Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RealtimeLogConfigs Unmarshall(JsonUnmarshallerContext context);
    public static RealtimeLogConfigsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.RealtimeLogConfigUnmarshaller : object {
    private static RealtimeLogConfigUnmarshaller _instance;
    public static RealtimeLogConfigUnmarshaller Instance { get; }
    private static RealtimeLogConfigUnmarshaller();
    public sealed virtual RealtimeLogConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RealtimeLogConfig Unmarshall(JsonUnmarshallerContext context);
    public static RealtimeLogConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.RealtimeMetricsSubscriptionConfigUnmarshaller : object {
    private static RealtimeMetricsSubscriptionConfigUnmarshaller _instance;
    public static RealtimeMetricsSubscriptionConfigUnmarshaller Instance { get; }
    private static RealtimeMetricsSubscriptionConfigUnmarshaller();
    public sealed virtual RealtimeMetricsSubscriptionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RealtimeMetricsSubscriptionConfig Unmarshall(JsonUnmarshallerContext context);
    public static RealtimeMetricsSubscriptionConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller : object {
    private static ResourceInUseExceptionUnmarshaller _instance;
    public static ResourceInUseExceptionUnmarshaller Instance { get; }
    private static ResourceInUseExceptionUnmarshaller();
    public sealed virtual ResourceInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyAccessControlAllowHeadersUnmarshaller : object {
    private static ResponseHeadersPolicyAccessControlAllowHeadersUnmarshaller _instance;
    public static ResponseHeadersPolicyAccessControlAllowHeadersUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyAccessControlAllowHeadersUnmarshaller();
    public sealed virtual ResponseHeadersPolicyAccessControlAllowHeaders Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyAccessControlAllowHeaders Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyAccessControlAllowHeadersUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyAccessControlAllowMethodsUnmarshaller : object {
    private static ResponseHeadersPolicyAccessControlAllowMethodsUnmarshaller _instance;
    public static ResponseHeadersPolicyAccessControlAllowMethodsUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyAccessControlAllowMethodsUnmarshaller();
    public sealed virtual ResponseHeadersPolicyAccessControlAllowMethods Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyAccessControlAllowMethods Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyAccessControlAllowMethodsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyAccessControlAllowOriginsUnmarshaller : object {
    private static ResponseHeadersPolicyAccessControlAllowOriginsUnmarshaller _instance;
    public static ResponseHeadersPolicyAccessControlAllowOriginsUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyAccessControlAllowOriginsUnmarshaller();
    public sealed virtual ResponseHeadersPolicyAccessControlAllowOrigins Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyAccessControlAllowOrigins Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyAccessControlAllowOriginsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyAccessControlExposeHeadersUnmarshaller : object {
    private static ResponseHeadersPolicyAccessControlExposeHeadersUnmarshaller _instance;
    public static ResponseHeadersPolicyAccessControlExposeHeadersUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyAccessControlExposeHeadersUnmarshaller();
    public sealed virtual ResponseHeadersPolicyAccessControlExposeHeaders Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyAccessControlExposeHeaders Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyAccessControlExposeHeadersUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyAlreadyExistsExceptionUnmarshaller : object {
    private static ResponseHeadersPolicyAlreadyExistsExceptionUnmarshaller _instance;
    public static ResponseHeadersPolicyAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ResponseHeadersPolicyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResponseHeadersPolicyAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyConfigUnmarshaller : object {
    private static ResponseHeadersPolicyConfigUnmarshaller _instance;
    public static ResponseHeadersPolicyConfigUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyConfigUnmarshaller();
    public sealed virtual ResponseHeadersPolicyConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyConfig Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyContentSecurityPolicyUnmarshaller : object {
    private static ResponseHeadersPolicyContentSecurityPolicyUnmarshaller _instance;
    public static ResponseHeadersPolicyContentSecurityPolicyUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyContentSecurityPolicyUnmarshaller();
    public sealed virtual ResponseHeadersPolicyContentSecurityPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyContentSecurityPolicy Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyContentSecurityPolicyUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyContentTypeOptionsUnmarshaller : object {
    private static ResponseHeadersPolicyContentTypeOptionsUnmarshaller _instance;
    public static ResponseHeadersPolicyContentTypeOptionsUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyContentTypeOptionsUnmarshaller();
    public sealed virtual ResponseHeadersPolicyContentTypeOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyContentTypeOptions Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyContentTypeOptionsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyCorsConfigUnmarshaller : object {
    private static ResponseHeadersPolicyCorsConfigUnmarshaller _instance;
    public static ResponseHeadersPolicyCorsConfigUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyCorsConfigUnmarshaller();
    public sealed virtual ResponseHeadersPolicyCorsConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyCorsConfig Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyCorsConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyCustomHeadersConfigUnmarshaller : object {
    private static ResponseHeadersPolicyCustomHeadersConfigUnmarshaller _instance;
    public static ResponseHeadersPolicyCustomHeadersConfigUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyCustomHeadersConfigUnmarshaller();
    public sealed virtual ResponseHeadersPolicyCustomHeadersConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyCustomHeadersConfig Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyCustomHeadersConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyCustomHeaderUnmarshaller : object {
    private static ResponseHeadersPolicyCustomHeaderUnmarshaller _instance;
    public static ResponseHeadersPolicyCustomHeaderUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyCustomHeaderUnmarshaller();
    public sealed virtual ResponseHeadersPolicyCustomHeader Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyCustomHeader Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyCustomHeaderUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyFrameOptionsUnmarshaller : object {
    private static ResponseHeadersPolicyFrameOptionsUnmarshaller _instance;
    public static ResponseHeadersPolicyFrameOptionsUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyFrameOptionsUnmarshaller();
    public sealed virtual ResponseHeadersPolicyFrameOptions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyFrameOptions Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyFrameOptionsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyInUseExceptionUnmarshaller : object {
    private static ResponseHeadersPolicyInUseExceptionUnmarshaller _instance;
    public static ResponseHeadersPolicyInUseExceptionUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyInUseExceptionUnmarshaller();
    public sealed virtual ResponseHeadersPolicyInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResponseHeadersPolicyInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyListUnmarshaller : object {
    private static ResponseHeadersPolicyListUnmarshaller _instance;
    public static ResponseHeadersPolicyListUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyListUnmarshaller();
    public sealed virtual ResponseHeadersPolicyList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyList Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyReferrerPolicyUnmarshaller : object {
    private static ResponseHeadersPolicyReferrerPolicyUnmarshaller _instance;
    public static ResponseHeadersPolicyReferrerPolicyUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyReferrerPolicyUnmarshaller();
    public sealed virtual ResponseHeadersPolicyReferrerPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyReferrerPolicy Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyReferrerPolicyUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyRemoveHeadersConfigUnmarshaller : object {
    private static ResponseHeadersPolicyRemoveHeadersConfigUnmarshaller _instance;
    public static ResponseHeadersPolicyRemoveHeadersConfigUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyRemoveHeadersConfigUnmarshaller();
    public sealed virtual ResponseHeadersPolicyRemoveHeadersConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyRemoveHeadersConfig Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyRemoveHeadersConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyRemoveHeaderUnmarshaller : object {
    private static ResponseHeadersPolicyRemoveHeaderUnmarshaller _instance;
    public static ResponseHeadersPolicyRemoveHeaderUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyRemoveHeaderUnmarshaller();
    public sealed virtual ResponseHeadersPolicyRemoveHeader Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyRemoveHeader Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyRemoveHeaderUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicySecurityHeadersConfigUnmarshaller : object {
    private static ResponseHeadersPolicySecurityHeadersConfigUnmarshaller _instance;
    public static ResponseHeadersPolicySecurityHeadersConfigUnmarshaller Instance { get; }
    private static ResponseHeadersPolicySecurityHeadersConfigUnmarshaller();
    public sealed virtual ResponseHeadersPolicySecurityHeadersConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicySecurityHeadersConfig Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicySecurityHeadersConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyServerTimingHeadersConfigUnmarshaller : object {
    private static ResponseHeadersPolicyServerTimingHeadersConfigUnmarshaller _instance;
    public static ResponseHeadersPolicyServerTimingHeadersConfigUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyServerTimingHeadersConfigUnmarshaller();
    public sealed virtual ResponseHeadersPolicyServerTimingHeadersConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyServerTimingHeadersConfig Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyServerTimingHeadersConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyStrictTransportSecurityUnmarshaller : object {
    private static ResponseHeadersPolicyStrictTransportSecurityUnmarshaller _instance;
    public static ResponseHeadersPolicyStrictTransportSecurityUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyStrictTransportSecurityUnmarshaller();
    public sealed virtual ResponseHeadersPolicyStrictTransportSecurity Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyStrictTransportSecurity Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyStrictTransportSecurityUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicySummaryUnmarshaller : object {
    private static ResponseHeadersPolicySummaryUnmarshaller _instance;
    public static ResponseHeadersPolicySummaryUnmarshaller Instance { get; }
    private static ResponseHeadersPolicySummaryUnmarshaller();
    public sealed virtual ResponseHeadersPolicySummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicySummary Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicySummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyUnmarshaller : object {
    private static ResponseHeadersPolicyUnmarshaller _instance;
    public static ResponseHeadersPolicyUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyUnmarshaller();
    public sealed virtual ResponseHeadersPolicy Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicy Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ResponseHeadersPolicyXSSProtectionUnmarshaller : object {
    private static ResponseHeadersPolicyXSSProtectionUnmarshaller _instance;
    public static ResponseHeadersPolicyXSSProtectionUnmarshaller Instance { get; }
    private static ResponseHeadersPolicyXSSProtectionUnmarshaller();
    public sealed virtual ResponseHeadersPolicyXSSProtection Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResponseHeadersPolicyXSSProtection Unmarshall(JsonUnmarshallerContext context);
    public static ResponseHeadersPolicyXSSProtectionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.RestrictionsUnmarshaller : object {
    private static RestrictionsUnmarshaller _instance;
    public static RestrictionsUnmarshaller Instance { get; }
    private static RestrictionsUnmarshaller();
    public sealed virtual Restrictions Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Restrictions Unmarshall(JsonUnmarshallerContext context);
    public static RestrictionsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.S3OriginConfigUnmarshaller : object {
    private static S3OriginConfigUnmarshaller _instance;
    public static S3OriginConfigUnmarshaller Instance { get; }
    private static S3OriginConfigUnmarshaller();
    public sealed virtual S3OriginConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3OriginConfig Unmarshall(JsonUnmarshallerContext context);
    public static S3OriginConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.S3OriginUnmarshaller : object {
    private static S3OriginUnmarshaller _instance;
    public static S3OriginUnmarshaller Instance { get; }
    private static S3OriginUnmarshaller();
    public sealed virtual S3Origin Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Origin Unmarshall(JsonUnmarshallerContext context);
    public static S3OriginUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.SessionStickinessConfigUnmarshaller : object {
    private static SessionStickinessConfigUnmarshaller _instance;
    public static SessionStickinessConfigUnmarshaller Instance { get; }
    private static SessionStickinessConfigUnmarshaller();
    public sealed virtual SessionStickinessConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SessionStickinessConfig Unmarshall(JsonUnmarshallerContext context);
    public static SessionStickinessConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.SignerUnmarshaller : object {
    private static SignerUnmarshaller _instance;
    public static SignerUnmarshaller Instance { get; }
    private static SignerUnmarshaller();
    public sealed virtual Signer Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Signer Unmarshall(JsonUnmarshallerContext context);
    public static SignerUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.StagingDistributionDnsNamesUnmarshaller : object {
    private static StagingDistributionDnsNamesUnmarshaller _instance;
    public static StagingDistributionDnsNamesUnmarshaller Instance { get; }
    private static StagingDistributionDnsNamesUnmarshaller();
    public sealed virtual StagingDistributionDnsNames Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StagingDistributionDnsNames Unmarshall(JsonUnmarshallerContext context);
    public static StagingDistributionDnsNamesUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.StagingDistributionInUseExceptionUnmarshaller : object {
    private static StagingDistributionInUseExceptionUnmarshaller _instance;
    public static StagingDistributionInUseExceptionUnmarshaller Instance { get; }
    private static StagingDistributionInUseExceptionUnmarshaller();
    public sealed virtual StagingDistributionInUseException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StagingDistributionInUseException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static StagingDistributionInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.StatusCodesUnmarshaller : object {
    private static StatusCodesUnmarshaller _instance;
    public static StatusCodesUnmarshaller Instance { get; }
    private static StatusCodesUnmarshaller();
    public sealed virtual StatusCodes Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StatusCodes Unmarshall(JsonUnmarshallerContext context);
    public static StatusCodesUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.StreamingDistributionAlreadyExistsExceptionUnmarshaller : object {
    private static StreamingDistributionAlreadyExistsExceptionUnmarshaller _instance;
    public static StreamingDistributionAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static StreamingDistributionAlreadyExistsExceptionUnmarshaller();
    public sealed virtual StreamingDistributionAlreadyExistsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamingDistributionAlreadyExistsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static StreamingDistributionAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.StreamingDistributionConfigUnmarshaller : object {
    private static StreamingDistributionConfigUnmarshaller _instance;
    public static StreamingDistributionConfigUnmarshaller Instance { get; }
    private static StreamingDistributionConfigUnmarshaller();
    public sealed virtual StreamingDistributionConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamingDistributionConfig Unmarshall(JsonUnmarshallerContext context);
    public static StreamingDistributionConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.StreamingDistributionListUnmarshaller : object {
    private static StreamingDistributionListUnmarshaller _instance;
    public static StreamingDistributionListUnmarshaller Instance { get; }
    private static StreamingDistributionListUnmarshaller();
    public sealed virtual StreamingDistributionList Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamingDistributionList Unmarshall(JsonUnmarshallerContext context);
    public static StreamingDistributionListUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.StreamingDistributionNotDisabledExceptionUnmarshaller : object {
    private static StreamingDistributionNotDisabledExceptionUnmarshaller _instance;
    public static StreamingDistributionNotDisabledExceptionUnmarshaller Instance { get; }
    private static StreamingDistributionNotDisabledExceptionUnmarshaller();
    public sealed virtual StreamingDistributionNotDisabledException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamingDistributionNotDisabledException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static StreamingDistributionNotDisabledExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.StreamingDistributionSummaryUnmarshaller : object {
    private static StreamingDistributionSummaryUnmarshaller _instance;
    public static StreamingDistributionSummaryUnmarshaller Instance { get; }
    private static StreamingDistributionSummaryUnmarshaller();
    public sealed virtual StreamingDistributionSummary Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamingDistributionSummary Unmarshall(JsonUnmarshallerContext context);
    public static StreamingDistributionSummaryUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.StreamingDistributionUnmarshaller : object {
    private static StreamingDistributionUnmarshaller _instance;
    public static StreamingDistributionUnmarshaller Instance { get; }
    private static StreamingDistributionUnmarshaller();
    public sealed virtual StreamingDistribution Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamingDistribution Unmarshall(JsonUnmarshallerContext context);
    public static StreamingDistributionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.StreamingLoggingConfigUnmarshaller : object {
    private static StreamingLoggingConfigUnmarshaller _instance;
    public static StreamingLoggingConfigUnmarshaller Instance { get; }
    private static StreamingLoggingConfigUnmarshaller();
    public sealed virtual StreamingLoggingConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamingLoggingConfig Unmarshall(JsonUnmarshallerContext context);
    public static StreamingLoggingConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TagsUnmarshaller : object {
    private static TagsUnmarshaller _instance;
    public static TagsUnmarshaller Instance { get; }
    private static TagsUnmarshaller();
    public sealed virtual Tags Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tags Unmarshall(JsonUnmarshallerContext context);
    public static TagsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    public sealed virtual Tag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TestFunctionFailedExceptionUnmarshaller : object {
    private static TestFunctionFailedExceptionUnmarshaller _instance;
    public static TestFunctionFailedExceptionUnmarshaller Instance { get; }
    private static TestFunctionFailedExceptionUnmarshaller();
    public sealed virtual TestFunctionFailedException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TestFunctionFailedException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TestFunctionFailedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TestFunctionRequestMarshaller : object {
    private static TestFunctionRequestMarshaller _instance;
    public static TestFunctionRequestMarshaller Instance { get; }
    private static TestFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TestFunctionRequest publicRequest);
    internal static TestFunctionRequestMarshaller GetInstance();
    public static TestFunctionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TestFunctionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static TestFunctionResponseUnmarshaller _instance;
    public static TestFunctionResponseUnmarshaller Instance { get; }
    private static TestFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, TestFunctionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TestFunctionResponseUnmarshaller GetInstance();
    public static TestFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TestResultUnmarshaller : object {
    private static TestResultUnmarshaller _instance;
    public static TestResultUnmarshaller Instance { get; }
    private static TestResultUnmarshaller();
    public sealed virtual TestResult Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TestResult Unmarshall(JsonUnmarshallerContext context);
    public static TestResultUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooLongCSPInResponseHeadersPolicyExceptionUnmarshaller : object {
    private static TooLongCSPInResponseHeadersPolicyExceptionUnmarshaller _instance;
    public static TooLongCSPInResponseHeadersPolicyExceptionUnmarshaller Instance { get; }
    private static TooLongCSPInResponseHeadersPolicyExceptionUnmarshaller();
    public sealed virtual TooLongCSPInResponseHeadersPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooLongCSPInResponseHeadersPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooLongCSPInResponseHeadersPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyCacheBehaviorsExceptionUnmarshaller : object {
    private static TooManyCacheBehaviorsExceptionUnmarshaller _instance;
    public static TooManyCacheBehaviorsExceptionUnmarshaller Instance { get; }
    private static TooManyCacheBehaviorsExceptionUnmarshaller();
    public sealed virtual TooManyCacheBehaviorsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyCacheBehaviorsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyCacheBehaviorsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyCachePoliciesExceptionUnmarshaller : object {
    private static TooManyCachePoliciesExceptionUnmarshaller _instance;
    public static TooManyCachePoliciesExceptionUnmarshaller Instance { get; }
    private static TooManyCachePoliciesExceptionUnmarshaller();
    public sealed virtual TooManyCachePoliciesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyCachePoliciesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyCachePoliciesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyCertificatesExceptionUnmarshaller : object {
    private static TooManyCertificatesExceptionUnmarshaller _instance;
    public static TooManyCertificatesExceptionUnmarshaller Instance { get; }
    private static TooManyCertificatesExceptionUnmarshaller();
    public sealed virtual TooManyCertificatesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyCertificatesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyCertificatesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyCloudFrontOriginAccessIdentitiesExceptionUnmarshaller : object {
    private static TooManyCloudFrontOriginAccessIdentitiesExceptionUnmarshaller _instance;
    public static TooManyCloudFrontOriginAccessIdentitiesExceptionUnmarshaller Instance { get; }
    private static TooManyCloudFrontOriginAccessIdentitiesExceptionUnmarshaller();
    public sealed virtual TooManyCloudFrontOriginAccessIdentitiesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyCloudFrontOriginAccessIdentitiesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyCloudFrontOriginAccessIdentitiesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyContinuousDeploymentPoliciesExceptionUnmarshaller : object {
    private static TooManyContinuousDeploymentPoliciesExceptionUnmarshaller _instance;
    public static TooManyContinuousDeploymentPoliciesExceptionUnmarshaller Instance { get; }
    private static TooManyContinuousDeploymentPoliciesExceptionUnmarshaller();
    public sealed virtual TooManyContinuousDeploymentPoliciesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyContinuousDeploymentPoliciesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyContinuousDeploymentPoliciesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyCookieNamesInWhiteListExceptionUnmarshaller : object {
    private static TooManyCookieNamesInWhiteListExceptionUnmarshaller _instance;
    public static TooManyCookieNamesInWhiteListExceptionUnmarshaller Instance { get; }
    private static TooManyCookieNamesInWhiteListExceptionUnmarshaller();
    public sealed virtual TooManyCookieNamesInWhiteListException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyCookieNamesInWhiteListException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyCookieNamesInWhiteListExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyCookiesInCachePolicyExceptionUnmarshaller : object {
    private static TooManyCookiesInCachePolicyExceptionUnmarshaller _instance;
    public static TooManyCookiesInCachePolicyExceptionUnmarshaller Instance { get; }
    private static TooManyCookiesInCachePolicyExceptionUnmarshaller();
    public sealed virtual TooManyCookiesInCachePolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyCookiesInCachePolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyCookiesInCachePolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyCookiesInOriginRequestPolicyExceptionUnmarshaller : object {
    private static TooManyCookiesInOriginRequestPolicyExceptionUnmarshaller _instance;
    public static TooManyCookiesInOriginRequestPolicyExceptionUnmarshaller Instance { get; }
    private static TooManyCookiesInOriginRequestPolicyExceptionUnmarshaller();
    public sealed virtual TooManyCookiesInOriginRequestPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyCookiesInOriginRequestPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyCookiesInOriginRequestPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyCustomHeadersInResponseHeadersPolicyExceptionUnmarshaller : object {
    private static TooManyCustomHeadersInResponseHeadersPolicyExceptionUnmarshaller _instance;
    public static TooManyCustomHeadersInResponseHeadersPolicyExceptionUnmarshaller Instance { get; }
    private static TooManyCustomHeadersInResponseHeadersPolicyExceptionUnmarshaller();
    public sealed virtual TooManyCustomHeadersInResponseHeadersPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyCustomHeadersInResponseHeadersPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyCustomHeadersInResponseHeadersPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionCNAMEsExceptionUnmarshaller : object {
    private static TooManyDistributionCNAMEsExceptionUnmarshaller _instance;
    public static TooManyDistributionCNAMEsExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionCNAMEsExceptionUnmarshaller();
    public sealed virtual TooManyDistributionCNAMEsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionCNAMEsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionCNAMEsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionsAssociatedToCachePolicyExceptionUnmarshaller : object {
    private static TooManyDistributionsAssociatedToCachePolicyExceptionUnmarshaller _instance;
    public static TooManyDistributionsAssociatedToCachePolicyExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionsAssociatedToCachePolicyExceptionUnmarshaller();
    public sealed virtual TooManyDistributionsAssociatedToCachePolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionsAssociatedToCachePolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionsAssociatedToCachePolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionsAssociatedToFieldLevelEncryptionConfigExceptionUnmarshaller : object {
    private static TooManyDistributionsAssociatedToFieldLevelEncryptionConfigExceptionUnmarshaller _instance;
    public static TooManyDistributionsAssociatedToFieldLevelEncryptionConfigExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionsAssociatedToFieldLevelEncryptionConfigExceptionUnmarshaller();
    public sealed virtual TooManyDistributionsAssociatedToFieldLevelEncryptionConfigException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionsAssociatedToFieldLevelEncryptionConfigException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionsAssociatedToFieldLevelEncryptionConfigExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionsAssociatedToKeyGroupExceptionUnmarshaller : object {
    private static TooManyDistributionsAssociatedToKeyGroupExceptionUnmarshaller _instance;
    public static TooManyDistributionsAssociatedToKeyGroupExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionsAssociatedToKeyGroupExceptionUnmarshaller();
    public sealed virtual TooManyDistributionsAssociatedToKeyGroupException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionsAssociatedToKeyGroupException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionsAssociatedToKeyGroupExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionsAssociatedToOriginAccessControlExceptionUnmarshaller : object {
    private static TooManyDistributionsAssociatedToOriginAccessControlExceptionUnmarshaller _instance;
    public static TooManyDistributionsAssociatedToOriginAccessControlExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionsAssociatedToOriginAccessControlExceptionUnmarshaller();
    public sealed virtual TooManyDistributionsAssociatedToOriginAccessControlException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionsAssociatedToOriginAccessControlException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionsAssociatedToOriginAccessControlExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionsAssociatedToOriginRequestPolicyExceptionUnmarshaller : object {
    private static TooManyDistributionsAssociatedToOriginRequestPolicyExceptionUnmarshaller _instance;
    public static TooManyDistributionsAssociatedToOriginRequestPolicyExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionsAssociatedToOriginRequestPolicyExceptionUnmarshaller();
    public sealed virtual TooManyDistributionsAssociatedToOriginRequestPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionsAssociatedToOriginRequestPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionsAssociatedToOriginRequestPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionsAssociatedToResponseHeadersPolicyExceptionUnmarshaller : object {
    private static TooManyDistributionsAssociatedToResponseHeadersPolicyExceptionUnmarshaller _instance;
    public static TooManyDistributionsAssociatedToResponseHeadersPolicyExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionsAssociatedToResponseHeadersPolicyExceptionUnmarshaller();
    public sealed virtual TooManyDistributionsAssociatedToResponseHeadersPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionsAssociatedToResponseHeadersPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionsAssociatedToResponseHeadersPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionsExceptionUnmarshaller : object {
    private static TooManyDistributionsExceptionUnmarshaller _instance;
    public static TooManyDistributionsExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionsExceptionUnmarshaller();
    public sealed virtual TooManyDistributionsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionsWithFunctionAssociationsExceptionUnmarshaller : object {
    private static TooManyDistributionsWithFunctionAssociationsExceptionUnmarshaller _instance;
    public static TooManyDistributionsWithFunctionAssociationsExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionsWithFunctionAssociationsExceptionUnmarshaller();
    public sealed virtual TooManyDistributionsWithFunctionAssociationsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionsWithFunctionAssociationsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionsWithFunctionAssociationsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionsWithLambdaAssociationsExceptionUnmarshaller : object {
    private static TooManyDistributionsWithLambdaAssociationsExceptionUnmarshaller _instance;
    public static TooManyDistributionsWithLambdaAssociationsExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionsWithLambdaAssociationsExceptionUnmarshaller();
    public sealed virtual TooManyDistributionsWithLambdaAssociationsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionsWithLambdaAssociationsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionsWithLambdaAssociationsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyDistributionsWithSingleFunctionARNExceptionUnmarshaller : object {
    private static TooManyDistributionsWithSingleFunctionARNExceptionUnmarshaller _instance;
    public static TooManyDistributionsWithSingleFunctionARNExceptionUnmarshaller Instance { get; }
    private static TooManyDistributionsWithSingleFunctionARNExceptionUnmarshaller();
    public sealed virtual TooManyDistributionsWithSingleFunctionARNException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyDistributionsWithSingleFunctionARNException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyDistributionsWithSingleFunctionARNExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyFieldLevelEncryptionConfigsExceptionUnmarshaller : object {
    private static TooManyFieldLevelEncryptionConfigsExceptionUnmarshaller _instance;
    public static TooManyFieldLevelEncryptionConfigsExceptionUnmarshaller Instance { get; }
    private static TooManyFieldLevelEncryptionConfigsExceptionUnmarshaller();
    public sealed virtual TooManyFieldLevelEncryptionConfigsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyFieldLevelEncryptionConfigsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyFieldLevelEncryptionConfigsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyFieldLevelEncryptionContentTypeProfilesExceptionUnmarshaller : object {
    private static TooManyFieldLevelEncryptionContentTypeProfilesExceptionUnmarshaller _instance;
    public static TooManyFieldLevelEncryptionContentTypeProfilesExceptionUnmarshaller Instance { get; }
    private static TooManyFieldLevelEncryptionContentTypeProfilesExceptionUnmarshaller();
    public sealed virtual TooManyFieldLevelEncryptionContentTypeProfilesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyFieldLevelEncryptionContentTypeProfilesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyFieldLevelEncryptionContentTypeProfilesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyFieldLevelEncryptionEncryptionEntitiesExceptionUnmarshaller : object {
    private static TooManyFieldLevelEncryptionEncryptionEntitiesExceptionUnmarshaller _instance;
    public static TooManyFieldLevelEncryptionEncryptionEntitiesExceptionUnmarshaller Instance { get; }
    private static TooManyFieldLevelEncryptionEncryptionEntitiesExceptionUnmarshaller();
    public sealed virtual TooManyFieldLevelEncryptionEncryptionEntitiesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyFieldLevelEncryptionEncryptionEntitiesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyFieldLevelEncryptionEncryptionEntitiesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyFieldLevelEncryptionFieldPatternsExceptionUnmarshaller : object {
    private static TooManyFieldLevelEncryptionFieldPatternsExceptionUnmarshaller _instance;
    public static TooManyFieldLevelEncryptionFieldPatternsExceptionUnmarshaller Instance { get; }
    private static TooManyFieldLevelEncryptionFieldPatternsExceptionUnmarshaller();
    public sealed virtual TooManyFieldLevelEncryptionFieldPatternsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyFieldLevelEncryptionFieldPatternsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyFieldLevelEncryptionFieldPatternsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyFieldLevelEncryptionProfilesExceptionUnmarshaller : object {
    private static TooManyFieldLevelEncryptionProfilesExceptionUnmarshaller _instance;
    public static TooManyFieldLevelEncryptionProfilesExceptionUnmarshaller Instance { get; }
    private static TooManyFieldLevelEncryptionProfilesExceptionUnmarshaller();
    public sealed virtual TooManyFieldLevelEncryptionProfilesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyFieldLevelEncryptionProfilesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyFieldLevelEncryptionProfilesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyFieldLevelEncryptionQueryArgProfilesExceptionUnmarshaller : object {
    private static TooManyFieldLevelEncryptionQueryArgProfilesExceptionUnmarshaller _instance;
    public static TooManyFieldLevelEncryptionQueryArgProfilesExceptionUnmarshaller Instance { get; }
    private static TooManyFieldLevelEncryptionQueryArgProfilesExceptionUnmarshaller();
    public sealed virtual TooManyFieldLevelEncryptionQueryArgProfilesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyFieldLevelEncryptionQueryArgProfilesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyFieldLevelEncryptionQueryArgProfilesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyFunctionAssociationsExceptionUnmarshaller : object {
    private static TooManyFunctionAssociationsExceptionUnmarshaller _instance;
    public static TooManyFunctionAssociationsExceptionUnmarshaller Instance { get; }
    private static TooManyFunctionAssociationsExceptionUnmarshaller();
    public sealed virtual TooManyFunctionAssociationsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyFunctionAssociationsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyFunctionAssociationsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyFunctionsExceptionUnmarshaller : object {
    private static TooManyFunctionsExceptionUnmarshaller _instance;
    public static TooManyFunctionsExceptionUnmarshaller Instance { get; }
    private static TooManyFunctionsExceptionUnmarshaller();
    public sealed virtual TooManyFunctionsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyFunctionsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyFunctionsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyHeadersInCachePolicyExceptionUnmarshaller : object {
    private static TooManyHeadersInCachePolicyExceptionUnmarshaller _instance;
    public static TooManyHeadersInCachePolicyExceptionUnmarshaller Instance { get; }
    private static TooManyHeadersInCachePolicyExceptionUnmarshaller();
    public sealed virtual TooManyHeadersInCachePolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyHeadersInCachePolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyHeadersInCachePolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyHeadersInForwardedValuesExceptionUnmarshaller : object {
    private static TooManyHeadersInForwardedValuesExceptionUnmarshaller _instance;
    public static TooManyHeadersInForwardedValuesExceptionUnmarshaller Instance { get; }
    private static TooManyHeadersInForwardedValuesExceptionUnmarshaller();
    public sealed virtual TooManyHeadersInForwardedValuesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyHeadersInForwardedValuesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyHeadersInForwardedValuesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyHeadersInOriginRequestPolicyExceptionUnmarshaller : object {
    private static TooManyHeadersInOriginRequestPolicyExceptionUnmarshaller _instance;
    public static TooManyHeadersInOriginRequestPolicyExceptionUnmarshaller Instance { get; }
    private static TooManyHeadersInOriginRequestPolicyExceptionUnmarshaller();
    public sealed virtual TooManyHeadersInOriginRequestPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyHeadersInOriginRequestPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyHeadersInOriginRequestPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyInvalidationsInProgressExceptionUnmarshaller : object {
    private static TooManyInvalidationsInProgressExceptionUnmarshaller _instance;
    public static TooManyInvalidationsInProgressExceptionUnmarshaller Instance { get; }
    private static TooManyInvalidationsInProgressExceptionUnmarshaller();
    public sealed virtual TooManyInvalidationsInProgressException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyInvalidationsInProgressException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyInvalidationsInProgressExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyKeyGroupsAssociatedToDistributionExceptionUnmarshaller : object {
    private static TooManyKeyGroupsAssociatedToDistributionExceptionUnmarshaller _instance;
    public static TooManyKeyGroupsAssociatedToDistributionExceptionUnmarshaller Instance { get; }
    private static TooManyKeyGroupsAssociatedToDistributionExceptionUnmarshaller();
    public sealed virtual TooManyKeyGroupsAssociatedToDistributionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyKeyGroupsAssociatedToDistributionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyKeyGroupsAssociatedToDistributionExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyKeyGroupsExceptionUnmarshaller : object {
    private static TooManyKeyGroupsExceptionUnmarshaller _instance;
    public static TooManyKeyGroupsExceptionUnmarshaller Instance { get; }
    private static TooManyKeyGroupsExceptionUnmarshaller();
    public sealed virtual TooManyKeyGroupsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyKeyGroupsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyKeyGroupsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyLambdaFunctionAssociationsExceptionUnmarshaller : object {
    private static TooManyLambdaFunctionAssociationsExceptionUnmarshaller _instance;
    public static TooManyLambdaFunctionAssociationsExceptionUnmarshaller Instance { get; }
    private static TooManyLambdaFunctionAssociationsExceptionUnmarshaller();
    public sealed virtual TooManyLambdaFunctionAssociationsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyLambdaFunctionAssociationsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyLambdaFunctionAssociationsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyOriginAccessControlsExceptionUnmarshaller : object {
    private static TooManyOriginAccessControlsExceptionUnmarshaller _instance;
    public static TooManyOriginAccessControlsExceptionUnmarshaller Instance { get; }
    private static TooManyOriginAccessControlsExceptionUnmarshaller();
    public sealed virtual TooManyOriginAccessControlsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyOriginAccessControlsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyOriginAccessControlsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyOriginCustomHeadersExceptionUnmarshaller : object {
    private static TooManyOriginCustomHeadersExceptionUnmarshaller _instance;
    public static TooManyOriginCustomHeadersExceptionUnmarshaller Instance { get; }
    private static TooManyOriginCustomHeadersExceptionUnmarshaller();
    public sealed virtual TooManyOriginCustomHeadersException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyOriginCustomHeadersException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyOriginCustomHeadersExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyOriginGroupsPerDistributionExceptionUnmarshaller : object {
    private static TooManyOriginGroupsPerDistributionExceptionUnmarshaller _instance;
    public static TooManyOriginGroupsPerDistributionExceptionUnmarshaller Instance { get; }
    private static TooManyOriginGroupsPerDistributionExceptionUnmarshaller();
    public sealed virtual TooManyOriginGroupsPerDistributionException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyOriginGroupsPerDistributionException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyOriginGroupsPerDistributionExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyOriginRequestPoliciesExceptionUnmarshaller : object {
    private static TooManyOriginRequestPoliciesExceptionUnmarshaller _instance;
    public static TooManyOriginRequestPoliciesExceptionUnmarshaller Instance { get; }
    private static TooManyOriginRequestPoliciesExceptionUnmarshaller();
    public sealed virtual TooManyOriginRequestPoliciesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyOriginRequestPoliciesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyOriginRequestPoliciesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyOriginsExceptionUnmarshaller : object {
    private static TooManyOriginsExceptionUnmarshaller _instance;
    public static TooManyOriginsExceptionUnmarshaller Instance { get; }
    private static TooManyOriginsExceptionUnmarshaller();
    public sealed virtual TooManyOriginsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyOriginsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyOriginsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyPublicKeysExceptionUnmarshaller : object {
    private static TooManyPublicKeysExceptionUnmarshaller _instance;
    public static TooManyPublicKeysExceptionUnmarshaller Instance { get; }
    private static TooManyPublicKeysExceptionUnmarshaller();
    public sealed virtual TooManyPublicKeysException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyPublicKeysException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyPublicKeysExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyPublicKeysInKeyGroupExceptionUnmarshaller : object {
    private static TooManyPublicKeysInKeyGroupExceptionUnmarshaller _instance;
    public static TooManyPublicKeysInKeyGroupExceptionUnmarshaller Instance { get; }
    private static TooManyPublicKeysInKeyGroupExceptionUnmarshaller();
    public sealed virtual TooManyPublicKeysInKeyGroupException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyPublicKeysInKeyGroupException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyPublicKeysInKeyGroupExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyQueryStringParametersExceptionUnmarshaller : object {
    private static TooManyQueryStringParametersExceptionUnmarshaller _instance;
    public static TooManyQueryStringParametersExceptionUnmarshaller Instance { get; }
    private static TooManyQueryStringParametersExceptionUnmarshaller();
    public sealed virtual TooManyQueryStringParametersException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyQueryStringParametersException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyQueryStringParametersExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyQueryStringsInCachePolicyExceptionUnmarshaller : object {
    private static TooManyQueryStringsInCachePolicyExceptionUnmarshaller _instance;
    public static TooManyQueryStringsInCachePolicyExceptionUnmarshaller Instance { get; }
    private static TooManyQueryStringsInCachePolicyExceptionUnmarshaller();
    public sealed virtual TooManyQueryStringsInCachePolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyQueryStringsInCachePolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyQueryStringsInCachePolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyQueryStringsInOriginRequestPolicyExceptionUnmarshaller : object {
    private static TooManyQueryStringsInOriginRequestPolicyExceptionUnmarshaller _instance;
    public static TooManyQueryStringsInOriginRequestPolicyExceptionUnmarshaller Instance { get; }
    private static TooManyQueryStringsInOriginRequestPolicyExceptionUnmarshaller();
    public sealed virtual TooManyQueryStringsInOriginRequestPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyQueryStringsInOriginRequestPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyQueryStringsInOriginRequestPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyRealtimeLogConfigsExceptionUnmarshaller : object {
    private static TooManyRealtimeLogConfigsExceptionUnmarshaller _instance;
    public static TooManyRealtimeLogConfigsExceptionUnmarshaller Instance { get; }
    private static TooManyRealtimeLogConfigsExceptionUnmarshaller();
    public sealed virtual TooManyRealtimeLogConfigsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyRealtimeLogConfigsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRealtimeLogConfigsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyRemoveHeadersInResponseHeadersPolicyExceptionUnmarshaller : object {
    private static TooManyRemoveHeadersInResponseHeadersPolicyExceptionUnmarshaller _instance;
    public static TooManyRemoveHeadersInResponseHeadersPolicyExceptionUnmarshaller Instance { get; }
    private static TooManyRemoveHeadersInResponseHeadersPolicyExceptionUnmarshaller();
    public sealed virtual TooManyRemoveHeadersInResponseHeadersPolicyException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyRemoveHeadersInResponseHeadersPolicyException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRemoveHeadersInResponseHeadersPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyResponseHeadersPoliciesExceptionUnmarshaller : object {
    private static TooManyResponseHeadersPoliciesExceptionUnmarshaller _instance;
    public static TooManyResponseHeadersPoliciesExceptionUnmarshaller Instance { get; }
    private static TooManyResponseHeadersPoliciesExceptionUnmarshaller();
    public sealed virtual TooManyResponseHeadersPoliciesException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyResponseHeadersPoliciesException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyResponseHeadersPoliciesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyStreamingDistributionCNAMEsExceptionUnmarshaller : object {
    private static TooManyStreamingDistributionCNAMEsExceptionUnmarshaller _instance;
    public static TooManyStreamingDistributionCNAMEsExceptionUnmarshaller Instance { get; }
    private static TooManyStreamingDistributionCNAMEsExceptionUnmarshaller();
    public sealed virtual TooManyStreamingDistributionCNAMEsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyStreamingDistributionCNAMEsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyStreamingDistributionCNAMEsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyStreamingDistributionsExceptionUnmarshaller : object {
    private static TooManyStreamingDistributionsExceptionUnmarshaller _instance;
    public static TooManyStreamingDistributionsExceptionUnmarshaller Instance { get; }
    private static TooManyStreamingDistributionsExceptionUnmarshaller();
    public sealed virtual TooManyStreamingDistributionsException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyStreamingDistributionsException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyStreamingDistributionsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TooManyTrustedSignersExceptionUnmarshaller : object {
    private static TooManyTrustedSignersExceptionUnmarshaller _instance;
    public static TooManyTrustedSignersExceptionUnmarshaller Instance { get; }
    private static TooManyTrustedSignersExceptionUnmarshaller();
    public sealed virtual TooManyTrustedSignersException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TooManyTrustedSignersException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTrustedSignersExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TrafficConfigUnmarshaller : object {
    private static TrafficConfigUnmarshaller _instance;
    public static TrafficConfigUnmarshaller Instance { get; }
    private static TrafficConfigUnmarshaller();
    public sealed virtual TrafficConfig Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrafficConfig Unmarshall(JsonUnmarshallerContext context);
    public static TrafficConfigUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TrustedKeyGroupDoesNotExistExceptionUnmarshaller : object {
    private static TrustedKeyGroupDoesNotExistExceptionUnmarshaller _instance;
    public static TrustedKeyGroupDoesNotExistExceptionUnmarshaller Instance { get; }
    private static TrustedKeyGroupDoesNotExistExceptionUnmarshaller();
    public sealed virtual TrustedKeyGroupDoesNotExistException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustedKeyGroupDoesNotExistException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrustedKeyGroupDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TrustedKeyGroupsUnmarshaller : object {
    private static TrustedKeyGroupsUnmarshaller _instance;
    public static TrustedKeyGroupsUnmarshaller Instance { get; }
    private static TrustedKeyGroupsUnmarshaller();
    public sealed virtual TrustedKeyGroups Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustedKeyGroups Unmarshall(JsonUnmarshallerContext context);
    public static TrustedKeyGroupsUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TrustedSignerDoesNotExistExceptionUnmarshaller : object {
    private static TrustedSignerDoesNotExistExceptionUnmarshaller _instance;
    public static TrustedSignerDoesNotExistExceptionUnmarshaller Instance { get; }
    private static TrustedSignerDoesNotExistExceptionUnmarshaller();
    public sealed virtual TrustedSignerDoesNotExistException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustedSignerDoesNotExistException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrustedSignerDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.TrustedSignersUnmarshaller : object {
    private static TrustedSignersUnmarshaller _instance;
    public static TrustedSignersUnmarshaller Instance { get; }
    private static TrustedSignersUnmarshaller();
    public sealed virtual TrustedSigners Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrustedSigners Unmarshall(JsonUnmarshallerContext context);
    public static TrustedSignersUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UnsupportedOperationExceptionUnmarshaller : object {
    private static UnsupportedOperationExceptionUnmarshaller _instance;
    public static UnsupportedOperationExceptionUnmarshaller Instance { get; }
    private static UnsupportedOperationExceptionUnmarshaller();
    public sealed virtual UnsupportedOperationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnsupportedOperationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedOperationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateCachePolicyRequestMarshaller : object {
    private static UpdateCachePolicyRequestMarshaller _instance;
    public static UpdateCachePolicyRequestMarshaller Instance { get; }
    private static UpdateCachePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateCachePolicyRequest publicRequest);
    internal static UpdateCachePolicyRequestMarshaller GetInstance();
    public static UpdateCachePolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateCachePolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateCachePolicyResponseUnmarshaller _instance;
    public static UpdateCachePolicyResponseUnmarshaller Instance { get; }
    private static UpdateCachePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateCachePolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateCachePolicyResponseUnmarshaller GetInstance();
    public static UpdateCachePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateCloudFrontOriginAccessIdentityRequestMarshaller : object {
    private static UpdateCloudFrontOriginAccessIdentityRequestMarshaller _instance;
    public static UpdateCloudFrontOriginAccessIdentityRequestMarshaller Instance { get; }
    private static UpdateCloudFrontOriginAccessIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateCloudFrontOriginAccessIdentityRequest publicRequest);
    internal static UpdateCloudFrontOriginAccessIdentityRequestMarshaller GetInstance();
    public static UpdateCloudFrontOriginAccessIdentityRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateCloudFrontOriginAccessIdentityResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateCloudFrontOriginAccessIdentityResponseUnmarshaller _instance;
    public static UpdateCloudFrontOriginAccessIdentityResponseUnmarshaller Instance { get; }
    private static UpdateCloudFrontOriginAccessIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateCloudFrontOriginAccessIdentityResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateCloudFrontOriginAccessIdentityResponseUnmarshaller GetInstance();
    public static UpdateCloudFrontOriginAccessIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateContinuousDeploymentPolicyRequestMarshaller : object {
    private static UpdateContinuousDeploymentPolicyRequestMarshaller _instance;
    public static UpdateContinuousDeploymentPolicyRequestMarshaller Instance { get; }
    private static UpdateContinuousDeploymentPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateContinuousDeploymentPolicyRequest publicRequest);
    internal static UpdateContinuousDeploymentPolicyRequestMarshaller GetInstance();
    public static UpdateContinuousDeploymentPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateContinuousDeploymentPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateContinuousDeploymentPolicyResponseUnmarshaller _instance;
    public static UpdateContinuousDeploymentPolicyResponseUnmarshaller Instance { get; }
    private static UpdateContinuousDeploymentPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateContinuousDeploymentPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateContinuousDeploymentPolicyResponseUnmarshaller GetInstance();
    public static UpdateContinuousDeploymentPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateDistributionRequestMarshaller : object {
    private static UpdateDistributionRequestMarshaller _instance;
    public static UpdateDistributionRequestMarshaller Instance { get; }
    private static UpdateDistributionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDistributionRequest publicRequest);
    internal static UpdateDistributionRequestMarshaller GetInstance();
    public static UpdateDistributionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateDistributionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateDistributionResponseUnmarshaller _instance;
    public static UpdateDistributionResponseUnmarshaller Instance { get; }
    private static UpdateDistributionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateDistributionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDistributionResponseUnmarshaller GetInstance();
    public static UpdateDistributionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateDistributionWithStagingConfigRequestMarshaller : object {
    private static UpdateDistributionWithStagingConfigRequestMarshaller _instance;
    public static UpdateDistributionWithStagingConfigRequestMarshaller Instance { get; }
    private static UpdateDistributionWithStagingConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDistributionWithStagingConfigRequest publicRequest);
    internal static UpdateDistributionWithStagingConfigRequestMarshaller GetInstance();
    public static UpdateDistributionWithStagingConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateDistributionWithStagingConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateDistributionWithStagingConfigResponseUnmarshaller _instance;
    public static UpdateDistributionWithStagingConfigResponseUnmarshaller Instance { get; }
    private static UpdateDistributionWithStagingConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateDistributionWithStagingConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDistributionWithStagingConfigResponseUnmarshaller GetInstance();
    public static UpdateDistributionWithStagingConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateFieldLevelEncryptionConfigRequestMarshaller : object {
    private static UpdateFieldLevelEncryptionConfigRequestMarshaller _instance;
    public static UpdateFieldLevelEncryptionConfigRequestMarshaller Instance { get; }
    private static UpdateFieldLevelEncryptionConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFieldLevelEncryptionConfigRequest publicRequest);
    internal static UpdateFieldLevelEncryptionConfigRequestMarshaller GetInstance();
    public static UpdateFieldLevelEncryptionConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateFieldLevelEncryptionConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateFieldLevelEncryptionConfigResponseUnmarshaller _instance;
    public static UpdateFieldLevelEncryptionConfigResponseUnmarshaller Instance { get; }
    private static UpdateFieldLevelEncryptionConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateFieldLevelEncryptionConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFieldLevelEncryptionConfigResponseUnmarshaller GetInstance();
    public static UpdateFieldLevelEncryptionConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateFieldLevelEncryptionProfileRequestMarshaller : object {
    private static UpdateFieldLevelEncryptionProfileRequestMarshaller _instance;
    public static UpdateFieldLevelEncryptionProfileRequestMarshaller Instance { get; }
    private static UpdateFieldLevelEncryptionProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFieldLevelEncryptionProfileRequest publicRequest);
    internal static UpdateFieldLevelEncryptionProfileRequestMarshaller GetInstance();
    public static UpdateFieldLevelEncryptionProfileRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateFieldLevelEncryptionProfileResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateFieldLevelEncryptionProfileResponseUnmarshaller _instance;
    public static UpdateFieldLevelEncryptionProfileResponseUnmarshaller Instance { get; }
    private static UpdateFieldLevelEncryptionProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateFieldLevelEncryptionProfileResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFieldLevelEncryptionProfileResponseUnmarshaller GetInstance();
    public static UpdateFieldLevelEncryptionProfileResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateFunctionRequestMarshaller : object {
    private static UpdateFunctionRequestMarshaller _instance;
    public static UpdateFunctionRequestMarshaller Instance { get; }
    private static UpdateFunctionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateFunctionRequest publicRequest);
    internal static UpdateFunctionRequestMarshaller GetInstance();
    public static UpdateFunctionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateFunctionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateFunctionResponseUnmarshaller _instance;
    public static UpdateFunctionResponseUnmarshaller Instance { get; }
    private static UpdateFunctionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateFunctionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateFunctionResponseUnmarshaller GetInstance();
    public static UpdateFunctionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateKeyGroupRequestMarshaller : object {
    private static UpdateKeyGroupRequestMarshaller _instance;
    public static UpdateKeyGroupRequestMarshaller Instance { get; }
    private static UpdateKeyGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateKeyGroupRequest publicRequest);
    internal static UpdateKeyGroupRequestMarshaller GetInstance();
    public static UpdateKeyGroupRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateKeyGroupResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateKeyGroupResponseUnmarshaller _instance;
    public static UpdateKeyGroupResponseUnmarshaller Instance { get; }
    private static UpdateKeyGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateKeyGroupResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateKeyGroupResponseUnmarshaller GetInstance();
    public static UpdateKeyGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateKeyValueStoreRequestMarshaller : object {
    private static UpdateKeyValueStoreRequestMarshaller _instance;
    public static UpdateKeyValueStoreRequestMarshaller Instance { get; }
    private static UpdateKeyValueStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateKeyValueStoreRequest publicRequest);
    internal static UpdateKeyValueStoreRequestMarshaller GetInstance();
    public static UpdateKeyValueStoreRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateKeyValueStoreResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateKeyValueStoreResponseUnmarshaller _instance;
    public static UpdateKeyValueStoreResponseUnmarshaller Instance { get; }
    private static UpdateKeyValueStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateKeyValueStoreResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateKeyValueStoreResponseUnmarshaller GetInstance();
    public static UpdateKeyValueStoreResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateOriginAccessControlRequestMarshaller : object {
    private static UpdateOriginAccessControlRequestMarshaller _instance;
    public static UpdateOriginAccessControlRequestMarshaller Instance { get; }
    private static UpdateOriginAccessControlRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateOriginAccessControlRequest publicRequest);
    internal static UpdateOriginAccessControlRequestMarshaller GetInstance();
    public static UpdateOriginAccessControlRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateOriginAccessControlResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateOriginAccessControlResponseUnmarshaller _instance;
    public static UpdateOriginAccessControlResponseUnmarshaller Instance { get; }
    private static UpdateOriginAccessControlResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateOriginAccessControlResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateOriginAccessControlResponseUnmarshaller GetInstance();
    public static UpdateOriginAccessControlResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateOriginRequestPolicyRequestMarshaller : object {
    private static UpdateOriginRequestPolicyRequestMarshaller _instance;
    public static UpdateOriginRequestPolicyRequestMarshaller Instance { get; }
    private static UpdateOriginRequestPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateOriginRequestPolicyRequest publicRequest);
    internal static UpdateOriginRequestPolicyRequestMarshaller GetInstance();
    public static UpdateOriginRequestPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateOriginRequestPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateOriginRequestPolicyResponseUnmarshaller _instance;
    public static UpdateOriginRequestPolicyResponseUnmarshaller Instance { get; }
    private static UpdateOriginRequestPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateOriginRequestPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateOriginRequestPolicyResponseUnmarshaller GetInstance();
    public static UpdateOriginRequestPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdatePublicKeyRequestMarshaller : object {
    private static UpdatePublicKeyRequestMarshaller _instance;
    public static UpdatePublicKeyRequestMarshaller Instance { get; }
    private static UpdatePublicKeyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdatePublicKeyRequest publicRequest);
    internal static UpdatePublicKeyRequestMarshaller GetInstance();
    public static UpdatePublicKeyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdatePublicKeyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdatePublicKeyResponseUnmarshaller _instance;
    public static UpdatePublicKeyResponseUnmarshaller Instance { get; }
    private static UpdatePublicKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdatePublicKeyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdatePublicKeyResponseUnmarshaller GetInstance();
    public static UpdatePublicKeyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateRealtimeLogConfigRequestMarshaller : object {
    private static UpdateRealtimeLogConfigRequestMarshaller _instance;
    public static UpdateRealtimeLogConfigRequestMarshaller Instance { get; }
    private static UpdateRealtimeLogConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateRealtimeLogConfigRequest publicRequest);
    internal static UpdateRealtimeLogConfigRequestMarshaller GetInstance();
    public static UpdateRealtimeLogConfigRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateRealtimeLogConfigResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateRealtimeLogConfigResponseUnmarshaller _instance;
    public static UpdateRealtimeLogConfigResponseUnmarshaller Instance { get; }
    private static UpdateRealtimeLogConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateRealtimeLogConfigResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateRealtimeLogConfigResponseUnmarshaller GetInstance();
    public static UpdateRealtimeLogConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateResponseHeadersPolicyRequestMarshaller : object {
    private static UpdateResponseHeadersPolicyRequestMarshaller _instance;
    public static UpdateResponseHeadersPolicyRequestMarshaller Instance { get; }
    private static UpdateResponseHeadersPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateResponseHeadersPolicyRequest publicRequest);
    internal static UpdateResponseHeadersPolicyRequestMarshaller GetInstance();
    public static UpdateResponseHeadersPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateResponseHeadersPolicyResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateResponseHeadersPolicyResponseUnmarshaller _instance;
    public static UpdateResponseHeadersPolicyResponseUnmarshaller Instance { get; }
    private static UpdateResponseHeadersPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateResponseHeadersPolicyResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateResponseHeadersPolicyResponseUnmarshaller GetInstance();
    public static UpdateResponseHeadersPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateStreamingDistributionRequestMarshaller : object {
    private static UpdateStreamingDistributionRequestMarshaller _instance;
    public static UpdateStreamingDistributionRequestMarshaller Instance { get; }
    private static UpdateStreamingDistributionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateStreamingDistributionRequest publicRequest);
    internal static UpdateStreamingDistributionRequestMarshaller GetInstance();
    public static UpdateStreamingDistributionRequestMarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.UpdateStreamingDistributionResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UpdateStreamingDistributionResponseUnmarshaller _instance;
    public static UpdateStreamingDistributionResponseUnmarshaller Instance { get; }
    private static UpdateStreamingDistributionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UpdateStreamingDistributionResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateStreamingDistributionResponseUnmarshaller GetInstance();
    public static UpdateStreamingDistributionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.Internal.MarshallTransformations.ViewerCertificateUnmarshaller : object {
    private static ViewerCertificateUnmarshaller _instance;
    public static ViewerCertificateUnmarshaller Instance { get; }
    private static ViewerCertificateUnmarshaller();
    public sealed virtual ViewerCertificate Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ViewerCertificate Unmarshall(JsonUnmarshallerContext context);
    public static ViewerCertificateUnmarshaller get_Instance();
}
public class Amazon.CloudFront.Model.InvalidArgumentException : AmazonCloudFrontException {
    public InvalidArgumentException(string message);
    public InvalidArgumentException(string message, Exception innerException);
    public InvalidArgumentException(Exception innerException);
    public InvalidArgumentException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidArgumentException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.Invalidation : object {
    private Nullable`1<DateTime> _createTime;
    private string _id;
    private InvalidationBatch _invalidationBatch;
    private string _status;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public InvalidationBatch InvalidationBatch { get; public set; }
    [AWSPropertyAttribute]
public string Status { get; public set; }
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public InvalidationBatch get_InvalidationBatch();
    public void set_InvalidationBatch(InvalidationBatch value);
    internal bool IsSetInvalidationBatch();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.CloudFront.Model.InvalidationBatch : object {
    private string _callerReference;
    private Paths _paths;
    [AWSPropertyAttribute]
public string CallerReference { get; public set; }
    [AWSPropertyAttribute]
public Paths Paths { get; public set; }
    public InvalidationBatch(Paths paths, string callerReference);
    public InvalidationBatch(string callerReference);
    public string get_CallerReference();
    public void set_CallerReference(string value);
    internal bool IsSetCallerReference();
    public Paths get_Paths();
    public void set_Paths(Paths value);
    internal bool IsSetPaths();
}
public class Amazon.CloudFront.Model.InvalidationList : object {
    private Nullable`1<bool> _isTruncated;
    private List`1<InvalidationSummary> _items;
    private string _marker;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public Nullable`1<bool> IsTruncated { get; public set; }
    public List`1<InvalidationSummary> Items { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public Nullable`1<bool> get_IsTruncated();
    public void set_IsTruncated(Nullable`1<bool> value);
    internal bool IsSetIsTruncated();
    public List`1<InvalidationSummary> get_Items();
    public void set_Items(List`1<InvalidationSummary> value);
    internal bool IsSetItems();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.InvalidationSummary : object {
    private Nullable`1<DateTime> _createTime;
    private string _id;
    private string _status;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string Status { get; public set; }
    public Nullable`1<DateTime> get_CreateTime();
    public void set_CreateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreateTime();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.CloudFront.Model.InvalidDefaultRootObjectException : AmazonCloudFrontException {
    public InvalidDefaultRootObjectException(string message);
    public InvalidDefaultRootObjectException(string message, Exception innerException);
    public InvalidDefaultRootObjectException(Exception innerException);
    public InvalidDefaultRootObjectException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDefaultRootObjectException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidDomainNameForOriginAccessControlException : AmazonCloudFrontException {
    public InvalidDomainNameForOriginAccessControlException(string message);
    public InvalidDomainNameForOriginAccessControlException(string message, Exception innerException);
    public InvalidDomainNameForOriginAccessControlException(Exception innerException);
    public InvalidDomainNameForOriginAccessControlException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDomainNameForOriginAccessControlException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidErrorCodeException : AmazonCloudFrontException {
    public InvalidErrorCodeException(string message);
    public InvalidErrorCodeException(string message, Exception innerException);
    public InvalidErrorCodeException(Exception innerException);
    public InvalidErrorCodeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidErrorCodeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidForwardCookiesException : AmazonCloudFrontException {
    public InvalidForwardCookiesException(string message);
    public InvalidForwardCookiesException(string message, Exception innerException);
    public InvalidForwardCookiesException(Exception innerException);
    public InvalidForwardCookiesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidForwardCookiesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidFunctionAssociationException : AmazonCloudFrontException {
    public InvalidFunctionAssociationException(string message);
    public InvalidFunctionAssociationException(string message, Exception innerException);
    public InvalidFunctionAssociationException(Exception innerException);
    public InvalidFunctionAssociationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidFunctionAssociationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidGeoRestrictionParameterException : AmazonCloudFrontException {
    public InvalidGeoRestrictionParameterException(string message);
    public InvalidGeoRestrictionParameterException(string message, Exception innerException);
    public InvalidGeoRestrictionParameterException(Exception innerException);
    public InvalidGeoRestrictionParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidGeoRestrictionParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidHeadersForS3OriginException : AmazonCloudFrontException {
    public InvalidHeadersForS3OriginException(string message);
    public InvalidHeadersForS3OriginException(string message, Exception innerException);
    public InvalidHeadersForS3OriginException(Exception innerException);
    public InvalidHeadersForS3OriginException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidHeadersForS3OriginException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidIfMatchVersionException : AmazonCloudFrontException {
    public InvalidIfMatchVersionException(string message);
    public InvalidIfMatchVersionException(string message, Exception innerException);
    public InvalidIfMatchVersionException(Exception innerException);
    public InvalidIfMatchVersionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidIfMatchVersionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidLambdaFunctionAssociationException : AmazonCloudFrontException {
    public InvalidLambdaFunctionAssociationException(string message);
    public InvalidLambdaFunctionAssociationException(string message, Exception innerException);
    public InvalidLambdaFunctionAssociationException(Exception innerException);
    public InvalidLambdaFunctionAssociationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidLambdaFunctionAssociationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidLocationCodeException : AmazonCloudFrontException {
    public InvalidLocationCodeException(string message);
    public InvalidLocationCodeException(string message, Exception innerException);
    public InvalidLocationCodeException(Exception innerException);
    public InvalidLocationCodeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidLocationCodeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidMinimumProtocolVersionException : AmazonCloudFrontException {
    public InvalidMinimumProtocolVersionException(string message);
    public InvalidMinimumProtocolVersionException(string message, Exception innerException);
    public InvalidMinimumProtocolVersionException(Exception innerException);
    public InvalidMinimumProtocolVersionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidMinimumProtocolVersionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidOriginAccessControlException : AmazonCloudFrontException {
    public InvalidOriginAccessControlException(string message);
    public InvalidOriginAccessControlException(string message, Exception innerException);
    public InvalidOriginAccessControlException(Exception innerException);
    public InvalidOriginAccessControlException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOriginAccessControlException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidOriginAccessIdentityException : AmazonCloudFrontException {
    public InvalidOriginAccessIdentityException(string message);
    public InvalidOriginAccessIdentityException(string message, Exception innerException);
    public InvalidOriginAccessIdentityException(Exception innerException);
    public InvalidOriginAccessIdentityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOriginAccessIdentityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidOriginException : AmazonCloudFrontException {
    public InvalidOriginException(string message);
    public InvalidOriginException(string message, Exception innerException);
    public InvalidOriginException(Exception innerException);
    public InvalidOriginException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOriginException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidOriginKeepaliveTimeoutException : AmazonCloudFrontException {
    public InvalidOriginKeepaliveTimeoutException(string message);
    public InvalidOriginKeepaliveTimeoutException(string message, Exception innerException);
    public InvalidOriginKeepaliveTimeoutException(Exception innerException);
    public InvalidOriginKeepaliveTimeoutException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOriginKeepaliveTimeoutException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidOriginReadTimeoutException : AmazonCloudFrontException {
    public InvalidOriginReadTimeoutException(string message);
    public InvalidOriginReadTimeoutException(string message, Exception innerException);
    public InvalidOriginReadTimeoutException(Exception innerException);
    public InvalidOriginReadTimeoutException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOriginReadTimeoutException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidProtocolSettingsException : AmazonCloudFrontException {
    public InvalidProtocolSettingsException(string message);
    public InvalidProtocolSettingsException(string message, Exception innerException);
    public InvalidProtocolSettingsException(Exception innerException);
    public InvalidProtocolSettingsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidProtocolSettingsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidQueryStringParametersException : AmazonCloudFrontException {
    public InvalidQueryStringParametersException(string message);
    public InvalidQueryStringParametersException(string message, Exception innerException);
    public InvalidQueryStringParametersException(Exception innerException);
    public InvalidQueryStringParametersException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidQueryStringParametersException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidRelativePathException : AmazonCloudFrontException {
    public InvalidRelativePathException(string message);
    public InvalidRelativePathException(string message, Exception innerException);
    public InvalidRelativePathException(Exception innerException);
    public InvalidRelativePathException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRelativePathException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidRequiredProtocolException : AmazonCloudFrontException {
    public InvalidRequiredProtocolException(string message);
    public InvalidRequiredProtocolException(string message, Exception innerException);
    public InvalidRequiredProtocolException(Exception innerException);
    public InvalidRequiredProtocolException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRequiredProtocolException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidResponseCodeException : AmazonCloudFrontException {
    public InvalidResponseCodeException(string message);
    public InvalidResponseCodeException(string message, Exception innerException);
    public InvalidResponseCodeException(Exception innerException);
    public InvalidResponseCodeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidResponseCodeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidTaggingException : AmazonCloudFrontException {
    public InvalidTaggingException(string message);
    public InvalidTaggingException(string message, Exception innerException);
    public InvalidTaggingException(Exception innerException);
    public InvalidTaggingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTaggingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidTTLOrderException : AmazonCloudFrontException {
    public InvalidTTLOrderException(string message);
    public InvalidTTLOrderException(string message, Exception innerException);
    public InvalidTTLOrderException(Exception innerException);
    public InvalidTTLOrderException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTTLOrderException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidViewerCertificateException : AmazonCloudFrontException {
    public InvalidViewerCertificateException(string message);
    public InvalidViewerCertificateException(string message, Exception innerException);
    public InvalidViewerCertificateException(Exception innerException);
    public InvalidViewerCertificateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidViewerCertificateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.InvalidWebACLIdException : AmazonCloudFrontException {
    public InvalidWebACLIdException(string message);
    public InvalidWebACLIdException(string message, Exception innerException);
    public InvalidWebACLIdException(Exception innerException);
    public InvalidWebACLIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidWebACLIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.KeyGroup : object {
    private string _id;
    private KeyGroupConfig _keyGroupConfig;
    private Nullable`1<DateTime> _lastModifiedTime;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public KeyGroupConfig KeyGroupConfig { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public KeyGroupConfig get_KeyGroupConfig();
    public void set_KeyGroupConfig(KeyGroupConfig value);
    internal bool IsSetKeyGroupConfig();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
}
public class Amazon.CloudFront.Model.KeyGroupAlreadyExistsException : AmazonCloudFrontException {
    public KeyGroupAlreadyExistsException(string message);
    public KeyGroupAlreadyExistsException(string message, Exception innerException);
    public KeyGroupAlreadyExistsException(Exception innerException);
    public KeyGroupAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KeyGroupAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.KeyGroupConfig : object {
    private string _comment;
    private List`1<string> _items;
    private string _name;
    public string Comment { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.KeyGroupList : object {
    private List`1<KeyGroupSummary> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<KeyGroupSummary> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<KeyGroupSummary> get_Items();
    public void set_Items(List`1<KeyGroupSummary> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.KeyGroupSummary : object {
    private KeyGroup _keyGroup;
    [AWSPropertyAttribute]
public KeyGroup KeyGroup { get; public set; }
    public KeyGroup get_KeyGroup();
    public void set_KeyGroup(KeyGroup value);
    internal bool IsSetKeyGroup();
}
public class Amazon.CloudFront.Model.KeyPairIds : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.KeyValueStore : object {
    private string _arn;
    private string _comment;
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _name;
    private string _status;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string Status { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.CloudFront.Model.KeyValueStoreAssociation : object {
    private string _keyValueStoreARN;
    [AWSPropertyAttribute]
public string KeyValueStoreARN { get; public set; }
    public string get_KeyValueStoreARN();
    public void set_KeyValueStoreARN(string value);
    internal bool IsSetKeyValueStoreARN();
}
public class Amazon.CloudFront.Model.KeyValueStoreAssociations : object {
    private List`1<KeyValueStoreAssociation> _items;
    private Nullable`1<int> _quantity;
    public List`1<KeyValueStoreAssociation> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<KeyValueStoreAssociation> get_Items();
    public void set_Items(List`1<KeyValueStoreAssociation> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.KeyValueStoreList : object {
    private List`1<KeyValueStore> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<KeyValueStore> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<KeyValueStore> get_Items();
    public void set_Items(List`1<KeyValueStore> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.KGKeyPairIds : object {
    private string _keyGroupId;
    private KeyPairIds _keyPairIds;
    public string KeyGroupId { get; public set; }
    public KeyPairIds KeyPairIds { get; public set; }
    public string get_KeyGroupId();
    public void set_KeyGroupId(string value);
    internal bool IsSetKeyGroupId();
    public KeyPairIds get_KeyPairIds();
    public void set_KeyPairIds(KeyPairIds value);
    internal bool IsSetKeyPairIds();
}
public class Amazon.CloudFront.Model.KinesisStreamConfig : object {
    private string _roleARN;
    private string _streamARN;
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    [AWSPropertyAttribute]
public string StreamARN { get; public set; }
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public string get_StreamARN();
    public void set_StreamARN(string value);
    internal bool IsSetStreamARN();
}
public class Amazon.CloudFront.Model.LambdaFunctionAssociation : object {
    private EventType _eventType;
    private Nullable`1<bool> _includeBody;
    private string _lambdaFunctionARN;
    [AWSPropertyAttribute]
public EventType EventType { get; public set; }
    public Nullable`1<bool> IncludeBody { get; public set; }
    [AWSPropertyAttribute]
public string LambdaFunctionARN { get; public set; }
    public EventType get_EventType();
    public void set_EventType(EventType value);
    internal bool IsSetEventType();
    public Nullable`1<bool> get_IncludeBody();
    public void set_IncludeBody(Nullable`1<bool> value);
    internal bool IsSetIncludeBody();
    public string get_LambdaFunctionARN();
    public void set_LambdaFunctionARN(string value);
    internal bool IsSetLambdaFunctionARN();
}
public class Amazon.CloudFront.Model.LambdaFunctionAssociations : object {
    private List`1<LambdaFunctionAssociation> _items;
    private Nullable`1<int> _quantity;
    public List`1<LambdaFunctionAssociation> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<LambdaFunctionAssociation> get_Items();
    public void set_Items(List`1<LambdaFunctionAssociation> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ListCachePoliciesRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    private CachePolicyType _type;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public CachePolicyType Type { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
    public CachePolicyType get_Type();
    public void set_Type(CachePolicyType value);
    internal bool IsSetType();
}
public class Amazon.CloudFront.Model.ListCachePoliciesResponse : AmazonWebServiceResponse {
    private CachePolicyList _cachePolicyList;
    public CachePolicyList CachePolicyList { get; public set; }
    public CachePolicyList get_CachePolicyList();
    public void set_CachePolicyList(CachePolicyList value);
    internal bool IsSetCachePolicyList();
}
internal class Amazon.CloudFront.Model.ListCloudFrontOriginAccessIdentitiesPaginator : object {
    private IAmazonCloudFront _client;
    private ListCloudFrontOriginAccessIdentitiesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListCloudFrontOriginAccessIdentitiesResponse> Responses { get; }
    public IPaginatedEnumerable`1<CloudFrontOriginAccessIdentitySummary> Items { get; }
    internal ListCloudFrontOriginAccessIdentitiesPaginator(IAmazonCloudFront client, ListCloudFrontOriginAccessIdentitiesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListCloudFrontOriginAccessIdentitiesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<CloudFrontOriginAccessIdentitySummary> get_Items();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudFront.Model.ListCloudFrontOriginAccessIdentitiesPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudFront-Model-ListCloudFrontOriginAccessIdentitiesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListCloudFrontOriginAccessIdentitiesResponse> Amazon.Runtime.IPaginator<Amazon.CloudFront.Model.ListCloudFrontOriginAccessIdentitiesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudFront.Model.ListCloudFrontOriginAccessIdentitiesRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListCloudFrontOriginAccessIdentitiesResponse : AmazonWebServiceResponse {
    private CloudFrontOriginAccessIdentityList _cloudFrontOriginAccessIdentityList;
    public CloudFrontOriginAccessIdentityList CloudFrontOriginAccessIdentityList { get; public set; }
    public CloudFrontOriginAccessIdentityList get_CloudFrontOriginAccessIdentityList();
    public void set_CloudFrontOriginAccessIdentityList(CloudFrontOriginAccessIdentityList value);
    internal bool IsSetCloudFrontOriginAccessIdentityList();
}
public class Amazon.CloudFront.Model.ListConflictingAliasesRequest : AmazonCloudFrontRequest {
    private string _alias;
    private string _distributionId;
    private string _marker;
    private Nullable`1<int> _maxItems;
    [AWSPropertyAttribute]
public string Alias { get; public set; }
    [AWSPropertyAttribute]
public string DistributionId { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string get_Alias();
    public void set_Alias(string value);
    internal bool IsSetAlias();
    public string get_DistributionId();
    public void set_DistributionId(string value);
    internal bool IsSetDistributionId();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListConflictingAliasesResponse : AmazonWebServiceResponse {
    private ConflictingAliasesList _conflictingAliasesList;
    public ConflictingAliasesList ConflictingAliasesList { get; public set; }
    public ConflictingAliasesList get_ConflictingAliasesList();
    public void set_ConflictingAliasesList(ConflictingAliasesList value);
    internal bool IsSetConflictingAliasesList();
}
public class Amazon.CloudFront.Model.ListContinuousDeploymentPoliciesRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListContinuousDeploymentPoliciesResponse : AmazonWebServiceResponse {
    private ContinuousDeploymentPolicyList _continuousDeploymentPolicyList;
    public ContinuousDeploymentPolicyList ContinuousDeploymentPolicyList { get; public set; }
    public ContinuousDeploymentPolicyList get_ContinuousDeploymentPolicyList();
    public void set_ContinuousDeploymentPolicyList(ContinuousDeploymentPolicyList value);
    internal bool IsSetContinuousDeploymentPolicyList();
}
public class Amazon.CloudFront.Model.ListDistributionsByCachePolicyIdRequest : AmazonCloudFrontRequest {
    private string _cachePolicyId;
    private string _marker;
    private string _maxItems;
    [AWSPropertyAttribute]
public string CachePolicyId { get; public set; }
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_CachePolicyId();
    public void set_CachePolicyId(string value);
    internal bool IsSetCachePolicyId();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListDistributionsByCachePolicyIdResponse : AmazonWebServiceResponse {
    private DistributionIdList _distributionIdList;
    public DistributionIdList DistributionIdList { get; public set; }
    public DistributionIdList get_DistributionIdList();
    public void set_DistributionIdList(DistributionIdList value);
    internal bool IsSetDistributionIdList();
}
public class Amazon.CloudFront.Model.ListDistributionsByKeyGroupRequest : AmazonCloudFrontRequest {
    private string _keyGroupId;
    private string _marker;
    private string _maxItems;
    [AWSPropertyAttribute]
public string KeyGroupId { get; public set; }
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_KeyGroupId();
    public void set_KeyGroupId(string value);
    internal bool IsSetKeyGroupId();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListDistributionsByKeyGroupResponse : AmazonWebServiceResponse {
    private DistributionIdList _distributionIdList;
    public DistributionIdList DistributionIdList { get; public set; }
    public DistributionIdList get_DistributionIdList();
    public void set_DistributionIdList(DistributionIdList value);
    internal bool IsSetDistributionIdList();
}
public class Amazon.CloudFront.Model.ListDistributionsByOriginRequestPolicyIdRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    private string _originRequestPolicyId;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    [AWSPropertyAttribute]
public string OriginRequestPolicyId { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
    public string get_OriginRequestPolicyId();
    public void set_OriginRequestPolicyId(string value);
    internal bool IsSetOriginRequestPolicyId();
}
public class Amazon.CloudFront.Model.ListDistributionsByOriginRequestPolicyIdResponse : AmazonWebServiceResponse {
    private DistributionIdList _distributionIdList;
    public DistributionIdList DistributionIdList { get; public set; }
    public DistributionIdList get_DistributionIdList();
    public void set_DistributionIdList(DistributionIdList value);
    internal bool IsSetDistributionIdList();
}
public class Amazon.CloudFront.Model.ListDistributionsByRealtimeLogConfigRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    private string _realtimeLogConfigArn;
    private string _realtimeLogConfigName;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string RealtimeLogConfigArn { get; public set; }
    public string RealtimeLogConfigName { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
    public string get_RealtimeLogConfigArn();
    public void set_RealtimeLogConfigArn(string value);
    internal bool IsSetRealtimeLogConfigArn();
    public string get_RealtimeLogConfigName();
    public void set_RealtimeLogConfigName(string value);
    internal bool IsSetRealtimeLogConfigName();
}
public class Amazon.CloudFront.Model.ListDistributionsByRealtimeLogConfigResponse : AmazonWebServiceResponse {
    private DistributionList _distributionList;
    public DistributionList DistributionList { get; public set; }
    public DistributionList get_DistributionList();
    public void set_DistributionList(DistributionList value);
    internal bool IsSetDistributionList();
}
public class Amazon.CloudFront.Model.ListDistributionsByResponseHeadersPolicyIdRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    private string _responseHeadersPolicyId;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    [AWSPropertyAttribute]
public string ResponseHeadersPolicyId { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
    public string get_ResponseHeadersPolicyId();
    public void set_ResponseHeadersPolicyId(string value);
    internal bool IsSetResponseHeadersPolicyId();
}
public class Amazon.CloudFront.Model.ListDistributionsByResponseHeadersPolicyIdResponse : AmazonWebServiceResponse {
    private DistributionIdList _distributionIdList;
    public DistributionIdList DistributionIdList { get; public set; }
    public DistributionIdList get_DistributionIdList();
    public void set_DistributionIdList(DistributionIdList value);
    internal bool IsSetDistributionIdList();
}
public class Amazon.CloudFront.Model.ListDistributionsByWebACLIdRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    private string _webACLId;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    [AWSPropertyAttribute]
public string WebACLId { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
    public string get_WebACLId();
    public void set_WebACLId(string value);
    internal bool IsSetWebACLId();
}
public class Amazon.CloudFront.Model.ListDistributionsByWebACLIdResponse : AmazonWebServiceResponse {
    private DistributionList _distributionList;
    public DistributionList DistributionList { get; public set; }
    public DistributionList get_DistributionList();
    public void set_DistributionList(DistributionList value);
    internal bool IsSetDistributionList();
}
internal class Amazon.CloudFront.Model.ListDistributionsPaginator : object {
    private IAmazonCloudFront _client;
    private ListDistributionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDistributionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DistributionSummary> Items { get; }
    internal ListDistributionsPaginator(IAmazonCloudFront client, ListDistributionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDistributionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DistributionSummary> get_Items();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudFront.Model.ListDistributionsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudFront-Model-ListDistributionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListDistributionsResponse> Amazon.Runtime.IPaginator<Amazon.CloudFront.Model.ListDistributionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudFront.Model.ListDistributionsRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListDistributionsResponse : AmazonWebServiceResponse {
    private DistributionList _distributionList;
    public DistributionList DistributionList { get; public set; }
    public DistributionList get_DistributionList();
    public void set_DistributionList(DistributionList value);
    internal bool IsSetDistributionList();
}
public class Amazon.CloudFront.Model.ListFieldLevelEncryptionConfigsRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListFieldLevelEncryptionConfigsResponse : AmazonWebServiceResponse {
    private FieldLevelEncryptionList _fieldLevelEncryptionList;
    public FieldLevelEncryptionList FieldLevelEncryptionList { get; public set; }
    public FieldLevelEncryptionList get_FieldLevelEncryptionList();
    public void set_FieldLevelEncryptionList(FieldLevelEncryptionList value);
    internal bool IsSetFieldLevelEncryptionList();
}
public class Amazon.CloudFront.Model.ListFieldLevelEncryptionProfilesRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListFieldLevelEncryptionProfilesResponse : AmazonWebServiceResponse {
    private FieldLevelEncryptionProfileList _fieldLevelEncryptionProfileList;
    public FieldLevelEncryptionProfileList FieldLevelEncryptionProfileList { get; public set; }
    public FieldLevelEncryptionProfileList get_FieldLevelEncryptionProfileList();
    public void set_FieldLevelEncryptionProfileList(FieldLevelEncryptionProfileList value);
    internal bool IsSetFieldLevelEncryptionProfileList();
}
public class Amazon.CloudFront.Model.ListFunctionsRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    private FunctionStage _stage;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public FunctionStage Stage { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
    public FunctionStage get_Stage();
    public void set_Stage(FunctionStage value);
    internal bool IsSetStage();
}
public class Amazon.CloudFront.Model.ListFunctionsResponse : AmazonWebServiceResponse {
    private FunctionList _functionList;
    public FunctionList FunctionList { get; public set; }
    public FunctionList get_FunctionList();
    public void set_FunctionList(FunctionList value);
    internal bool IsSetFunctionList();
}
internal class Amazon.CloudFront.Model.ListInvalidationsPaginator : object {
    private IAmazonCloudFront _client;
    private ListInvalidationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListInvalidationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<InvalidationSummary> Items { get; }
    internal ListInvalidationsPaginator(IAmazonCloudFront client, ListInvalidationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListInvalidationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<InvalidationSummary> get_Items();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudFront.Model.ListInvalidationsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudFront-Model-ListInvalidationsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListInvalidationsResponse> Amazon.Runtime.IPaginator<Amazon.CloudFront.Model.ListInvalidationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudFront.Model.ListInvalidationsRequest : AmazonCloudFrontRequest {
    private string _distributionId;
    private string _marker;
    private string _maxItems;
    [AWSPropertyAttribute]
public string DistributionId { get; public set; }
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public ListInvalidationsRequest(string distributionId);
    public string get_DistributionId();
    public void set_DistributionId(string value);
    internal bool IsSetDistributionId();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListInvalidationsResponse : AmazonWebServiceResponse {
    private InvalidationList _invalidationList;
    public InvalidationList InvalidationList { get; public set; }
    public InvalidationList get_InvalidationList();
    public void set_InvalidationList(InvalidationList value);
    internal bool IsSetInvalidationList();
}
public class Amazon.CloudFront.Model.ListKeyGroupsRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListKeyGroupsResponse : AmazonWebServiceResponse {
    private KeyGroupList _keyGroupList;
    public KeyGroupList KeyGroupList { get; public set; }
    public KeyGroupList get_KeyGroupList();
    public void set_KeyGroupList(KeyGroupList value);
    internal bool IsSetKeyGroupList();
}
internal class Amazon.CloudFront.Model.ListKeyValueStoresPaginator : object {
    private IAmazonCloudFront _client;
    private ListKeyValueStoresRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListKeyValueStoresResponse> Responses { get; }
    public IPaginatedEnumerable`1<KeyValueStore> Items { get; }
    internal ListKeyValueStoresPaginator(IAmazonCloudFront client, ListKeyValueStoresRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListKeyValueStoresResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<KeyValueStore> get_Items();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudFront.Model.ListKeyValueStoresPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudFront-Model-ListKeyValueStoresResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListKeyValueStoresResponse> Amazon.Runtime.IPaginator<Amazon.CloudFront.Model.ListKeyValueStoresResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudFront.Model.ListKeyValueStoresRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    private string _status;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string Status { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.CloudFront.Model.ListKeyValueStoresResponse : AmazonWebServiceResponse {
    private KeyValueStoreList _keyValueStoreList;
    public KeyValueStoreList KeyValueStoreList { get; public set; }
    public KeyValueStoreList get_KeyValueStoreList();
    public void set_KeyValueStoreList(KeyValueStoreList value);
    internal bool IsSetKeyValueStoreList();
}
public class Amazon.CloudFront.Model.ListOriginAccessControlsRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListOriginAccessControlsResponse : AmazonWebServiceResponse {
    private OriginAccessControlList _originAccessControlList;
    public OriginAccessControlList OriginAccessControlList { get; public set; }
    public OriginAccessControlList get_OriginAccessControlList();
    public void set_OriginAccessControlList(OriginAccessControlList value);
    internal bool IsSetOriginAccessControlList();
}
public class Amazon.CloudFront.Model.ListOriginRequestPoliciesRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    private OriginRequestPolicyType _type;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public OriginRequestPolicyType Type { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
    public OriginRequestPolicyType get_Type();
    public void set_Type(OriginRequestPolicyType value);
    internal bool IsSetType();
}
public class Amazon.CloudFront.Model.ListOriginRequestPoliciesResponse : AmazonWebServiceResponse {
    private OriginRequestPolicyList _originRequestPolicyList;
    public OriginRequestPolicyList OriginRequestPolicyList { get; public set; }
    public OriginRequestPolicyList get_OriginRequestPolicyList();
    public void set_OriginRequestPolicyList(OriginRequestPolicyList value);
    internal bool IsSetOriginRequestPolicyList();
}
public class Amazon.CloudFront.Model.ListPublicKeysRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListPublicKeysResponse : AmazonWebServiceResponse {
    private PublicKeyList _publicKeyList;
    public PublicKeyList PublicKeyList { get; public set; }
    public PublicKeyList get_PublicKeyList();
    public void set_PublicKeyList(PublicKeyList value);
    internal bool IsSetPublicKeyList();
}
public class Amazon.CloudFront.Model.ListRealtimeLogConfigsRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListRealtimeLogConfigsResponse : AmazonWebServiceResponse {
    private RealtimeLogConfigs _realtimeLogConfigs;
    public RealtimeLogConfigs RealtimeLogConfigs { get; public set; }
    public RealtimeLogConfigs get_RealtimeLogConfigs();
    public void set_RealtimeLogConfigs(RealtimeLogConfigs value);
    internal bool IsSetRealtimeLogConfigs();
}
public class Amazon.CloudFront.Model.ListResponseHeadersPoliciesRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    private ResponseHeadersPolicyType _type;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public ResponseHeadersPolicyType Type { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
    public ResponseHeadersPolicyType get_Type();
    public void set_Type(ResponseHeadersPolicyType value);
    internal bool IsSetType();
}
public class Amazon.CloudFront.Model.ListResponseHeadersPoliciesResponse : AmazonWebServiceResponse {
    private ResponseHeadersPolicyList _responseHeadersPolicyList;
    public ResponseHeadersPolicyList ResponseHeadersPolicyList { get; public set; }
    public ResponseHeadersPolicyList get_ResponseHeadersPolicyList();
    public void set_ResponseHeadersPolicyList(ResponseHeadersPolicyList value);
    internal bool IsSetResponseHeadersPolicyList();
}
internal class Amazon.CloudFront.Model.ListStreamingDistributionsPaginator : object {
    private IAmazonCloudFront _client;
    private ListStreamingDistributionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListStreamingDistributionsResponse> Responses { get; }
    public IPaginatedEnumerable`1<StreamingDistributionSummary> Items { get; }
    internal ListStreamingDistributionsPaginator(IAmazonCloudFront client, ListStreamingDistributionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListStreamingDistributionsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<StreamingDistributionSummary> get_Items();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudFront.Model.ListStreamingDistributionsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudFront-Model-ListStreamingDistributionsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListStreamingDistributionsResponse> Amazon.Runtime.IPaginator<Amazon.CloudFront.Model.ListStreamingDistributionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudFront.Model.ListStreamingDistributionsRequest : AmazonCloudFrontRequest {
    private string _marker;
    private string _maxItems;
    public string Marker { get; public set; }
    public string MaxItems { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MaxItems();
    public void set_MaxItems(string value);
    internal bool IsSetMaxItems();
}
public class Amazon.CloudFront.Model.ListStreamingDistributionsResponse : AmazonWebServiceResponse {
    private StreamingDistributionList _streamingDistributionList;
    public StreamingDistributionList StreamingDistributionList { get; public set; }
    public StreamingDistributionList get_StreamingDistributionList();
    public void set_StreamingDistributionList(StreamingDistributionList value);
    internal bool IsSetStreamingDistributionList();
}
public class Amazon.CloudFront.Model.ListTagsForResourceRequest : AmazonCloudFrontRequest {
    private string _resource;
    [AWSPropertyAttribute]
public string Resource { get; public set; }
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
}
public class Amazon.CloudFront.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private Tags _tags;
    [AWSPropertyAttribute]
public Tags Tags { get; public set; }
    public Tags get_Tags();
    public void set_Tags(Tags value);
    internal bool IsSetTags();
}
public class Amazon.CloudFront.Model.LoggingConfig : object {
    private string _bucket;
    private Nullable`1<bool> _enabled;
    private Nullable`1<bool> _includeCookies;
    private string _prefix;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> IncludeCookies { get; public set; }
    [AWSPropertyAttribute]
public string Prefix { get; public set; }
    public LoggingConfig(string bucket, string prefix);
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public Nullable`1<bool> get_IncludeCookies();
    public void set_IncludeCookies(Nullable`1<bool> value);
    internal bool IsSetIncludeCookies();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
}
public class Amazon.CloudFront.Model.MissingBodyException : AmazonCloudFrontException {
    public MissingBodyException(string message);
    public MissingBodyException(string message, Exception innerException);
    public MissingBodyException(Exception innerException);
    public MissingBodyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MissingBodyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.MonitoringSubscription : object {
    private RealtimeMetricsSubscriptionConfig _realtimeMetricsSubscriptionConfig;
    public RealtimeMetricsSubscriptionConfig RealtimeMetricsSubscriptionConfig { get; public set; }
    public RealtimeMetricsSubscriptionConfig get_RealtimeMetricsSubscriptionConfig();
    public void set_RealtimeMetricsSubscriptionConfig(RealtimeMetricsSubscriptionConfig value);
    internal bool IsSetRealtimeMetricsSubscriptionConfig();
}
public class Amazon.CloudFront.Model.MonitoringSubscriptionAlreadyExistsException : AmazonCloudFrontException {
    public MonitoringSubscriptionAlreadyExistsException(string message);
    public MonitoringSubscriptionAlreadyExistsException(string message, Exception innerException);
    public MonitoringSubscriptionAlreadyExistsException(Exception innerException);
    public MonitoringSubscriptionAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MonitoringSubscriptionAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchCachePolicyException : AmazonCloudFrontException {
    public NoSuchCachePolicyException(string message);
    public NoSuchCachePolicyException(string message, Exception innerException);
    public NoSuchCachePolicyException(Exception innerException);
    public NoSuchCachePolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchCachePolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchCloudFrontOriginAccessIdentityException : AmazonCloudFrontException {
    public NoSuchCloudFrontOriginAccessIdentityException(string message);
    public NoSuchCloudFrontOriginAccessIdentityException(string message, Exception innerException);
    public NoSuchCloudFrontOriginAccessIdentityException(Exception innerException);
    public NoSuchCloudFrontOriginAccessIdentityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchCloudFrontOriginAccessIdentityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchContinuousDeploymentPolicyException : AmazonCloudFrontException {
    public NoSuchContinuousDeploymentPolicyException(string message);
    public NoSuchContinuousDeploymentPolicyException(string message, Exception innerException);
    public NoSuchContinuousDeploymentPolicyException(Exception innerException);
    public NoSuchContinuousDeploymentPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchContinuousDeploymentPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchDistributionException : AmazonCloudFrontException {
    public NoSuchDistributionException(string message);
    public NoSuchDistributionException(string message, Exception innerException);
    public NoSuchDistributionException(Exception innerException);
    public NoSuchDistributionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchDistributionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchFieldLevelEncryptionConfigException : AmazonCloudFrontException {
    public NoSuchFieldLevelEncryptionConfigException(string message);
    public NoSuchFieldLevelEncryptionConfigException(string message, Exception innerException);
    public NoSuchFieldLevelEncryptionConfigException(Exception innerException);
    public NoSuchFieldLevelEncryptionConfigException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchFieldLevelEncryptionConfigException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchFieldLevelEncryptionProfileException : AmazonCloudFrontException {
    public NoSuchFieldLevelEncryptionProfileException(string message);
    public NoSuchFieldLevelEncryptionProfileException(string message, Exception innerException);
    public NoSuchFieldLevelEncryptionProfileException(Exception innerException);
    public NoSuchFieldLevelEncryptionProfileException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchFieldLevelEncryptionProfileException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchFunctionExistsException : AmazonCloudFrontException {
    public NoSuchFunctionExistsException(string message);
    public NoSuchFunctionExistsException(string message, Exception innerException);
    public NoSuchFunctionExistsException(Exception innerException);
    public NoSuchFunctionExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchFunctionExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchInvalidationException : AmazonCloudFrontException {
    public NoSuchInvalidationException(string message);
    public NoSuchInvalidationException(string message, Exception innerException);
    public NoSuchInvalidationException(Exception innerException);
    public NoSuchInvalidationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchInvalidationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchMonitoringSubscriptionException : AmazonCloudFrontException {
    public NoSuchMonitoringSubscriptionException(string message);
    public NoSuchMonitoringSubscriptionException(string message, Exception innerException);
    public NoSuchMonitoringSubscriptionException(Exception innerException);
    public NoSuchMonitoringSubscriptionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchMonitoringSubscriptionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchOriginAccessControlException : AmazonCloudFrontException {
    public NoSuchOriginAccessControlException(string message);
    public NoSuchOriginAccessControlException(string message, Exception innerException);
    public NoSuchOriginAccessControlException(Exception innerException);
    public NoSuchOriginAccessControlException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchOriginAccessControlException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchOriginException : AmazonCloudFrontException {
    public NoSuchOriginException(string message);
    public NoSuchOriginException(string message, Exception innerException);
    public NoSuchOriginException(Exception innerException);
    public NoSuchOriginException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchOriginException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchOriginRequestPolicyException : AmazonCloudFrontException {
    public NoSuchOriginRequestPolicyException(string message);
    public NoSuchOriginRequestPolicyException(string message, Exception innerException);
    public NoSuchOriginRequestPolicyException(Exception innerException);
    public NoSuchOriginRequestPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchOriginRequestPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchPublicKeyException : AmazonCloudFrontException {
    public NoSuchPublicKeyException(string message);
    public NoSuchPublicKeyException(string message, Exception innerException);
    public NoSuchPublicKeyException(Exception innerException);
    public NoSuchPublicKeyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchPublicKeyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchRealtimeLogConfigException : AmazonCloudFrontException {
    public NoSuchRealtimeLogConfigException(string message);
    public NoSuchRealtimeLogConfigException(string message, Exception innerException);
    public NoSuchRealtimeLogConfigException(Exception innerException);
    public NoSuchRealtimeLogConfigException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchRealtimeLogConfigException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchResourceException : AmazonCloudFrontException {
    public NoSuchResourceException(string message);
    public NoSuchResourceException(string message, Exception innerException);
    public NoSuchResourceException(Exception innerException);
    public NoSuchResourceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchResourceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchResponseHeadersPolicyException : AmazonCloudFrontException {
    public NoSuchResponseHeadersPolicyException(string message);
    public NoSuchResponseHeadersPolicyException(string message, Exception innerException);
    public NoSuchResponseHeadersPolicyException(Exception innerException);
    public NoSuchResponseHeadersPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchResponseHeadersPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.NoSuchStreamingDistributionException : AmazonCloudFrontException {
    public NoSuchStreamingDistributionException(string message);
    public NoSuchStreamingDistributionException(string message, Exception innerException);
    public NoSuchStreamingDistributionException(Exception innerException);
    public NoSuchStreamingDistributionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoSuchStreamingDistributionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.Origin : object {
    private Nullable`1<int> _connectionAttempts;
    private Nullable`1<int> _connectionTimeout;
    private CustomHeaders _customHeaders;
    private CustomOriginConfig _customOriginConfig;
    private string _domainName;
    private string _id;
    private string _originAccessControlId;
    private string _originPath;
    private OriginShield _originShield;
    private S3OriginConfig _s3OriginConfig;
    public Nullable`1<int> ConnectionAttempts { get; public set; }
    public Nullable`1<int> ConnectionTimeout { get; public set; }
    public CustomHeaders CustomHeaders { get; public set; }
    public CustomOriginConfig CustomOriginConfig { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string OriginAccessControlId { get; public set; }
    public string OriginPath { get; public set; }
    public OriginShield OriginShield { get; public set; }
    public S3OriginConfig S3OriginConfig { get; public set; }
    public Nullable`1<int> get_ConnectionAttempts();
    public void set_ConnectionAttempts(Nullable`1<int> value);
    internal bool IsSetConnectionAttempts();
    public Nullable`1<int> get_ConnectionTimeout();
    public void set_ConnectionTimeout(Nullable`1<int> value);
    internal bool IsSetConnectionTimeout();
    public CustomHeaders get_CustomHeaders();
    public void set_CustomHeaders(CustomHeaders value);
    internal bool IsSetCustomHeaders();
    public CustomOriginConfig get_CustomOriginConfig();
    public void set_CustomOriginConfig(CustomOriginConfig value);
    internal bool IsSetCustomOriginConfig();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_OriginAccessControlId();
    public void set_OriginAccessControlId(string value);
    internal bool IsSetOriginAccessControlId();
    public string get_OriginPath();
    public void set_OriginPath(string value);
    internal bool IsSetOriginPath();
    public OriginShield get_OriginShield();
    public void set_OriginShield(OriginShield value);
    internal bool IsSetOriginShield();
    public S3OriginConfig get_S3OriginConfig();
    public void set_S3OriginConfig(S3OriginConfig value);
    internal bool IsSetS3OriginConfig();
}
public class Amazon.CloudFront.Model.OriginAccessControl : object {
    private string _id;
    private OriginAccessControlConfig _originAccessControlConfig;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public OriginAccessControlConfig OriginAccessControlConfig { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public OriginAccessControlConfig get_OriginAccessControlConfig();
    public void set_OriginAccessControlConfig(OriginAccessControlConfig value);
    internal bool IsSetOriginAccessControlConfig();
}
public class Amazon.CloudFront.Model.OriginAccessControlAlreadyExistsException : AmazonCloudFrontException {
    public OriginAccessControlAlreadyExistsException(string message);
    public OriginAccessControlAlreadyExistsException(string message, Exception innerException);
    public OriginAccessControlAlreadyExistsException(Exception innerException);
    public OriginAccessControlAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OriginAccessControlAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.OriginAccessControlConfig : object {
    private string _description;
    private string _name;
    private OriginAccessControlOriginTypes _originAccessControlOriginType;
    private OriginAccessControlSigningBehaviors _signingBehavior;
    private OriginAccessControlSigningProtocols _signingProtocol;
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public OriginAccessControlOriginTypes OriginAccessControlOriginType { get; public set; }
    [AWSPropertyAttribute]
public OriginAccessControlSigningBehaviors SigningBehavior { get; public set; }
    [AWSPropertyAttribute]
public OriginAccessControlSigningProtocols SigningProtocol { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public OriginAccessControlOriginTypes get_OriginAccessControlOriginType();
    public void set_OriginAccessControlOriginType(OriginAccessControlOriginTypes value);
    internal bool IsSetOriginAccessControlOriginType();
    public OriginAccessControlSigningBehaviors get_SigningBehavior();
    public void set_SigningBehavior(OriginAccessControlSigningBehaviors value);
    internal bool IsSetSigningBehavior();
    public OriginAccessControlSigningProtocols get_SigningProtocol();
    public void set_SigningProtocol(OriginAccessControlSigningProtocols value);
    internal bool IsSetSigningProtocol();
}
public class Amazon.CloudFront.Model.OriginAccessControlInUseException : AmazonCloudFrontException {
    public OriginAccessControlInUseException(string message);
    public OriginAccessControlInUseException(string message, Exception innerException);
    public OriginAccessControlInUseException(Exception innerException);
    public OriginAccessControlInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OriginAccessControlInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.OriginAccessControlList : object {
    private Nullable`1<bool> _isTruncated;
    private List`1<OriginAccessControlSummary> _items;
    private string _marker;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public Nullable`1<bool> IsTruncated { get; public set; }
    public List`1<OriginAccessControlSummary> Items { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public Nullable`1<bool> get_IsTruncated();
    public void set_IsTruncated(Nullable`1<bool> value);
    internal bool IsSetIsTruncated();
    public List`1<OriginAccessControlSummary> get_Items();
    public void set_Items(List`1<OriginAccessControlSummary> value);
    internal bool IsSetItems();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.OriginAccessControlSummary : object {
    private string _description;
    private string _id;
    private string _name;
    private OriginAccessControlOriginTypes _originAccessControlOriginType;
    private OriginAccessControlSigningBehaviors _signingBehavior;
    private OriginAccessControlSigningProtocols _signingProtocol;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public OriginAccessControlOriginTypes OriginAccessControlOriginType { get; public set; }
    [AWSPropertyAttribute]
public OriginAccessControlSigningBehaviors SigningBehavior { get; public set; }
    [AWSPropertyAttribute]
public OriginAccessControlSigningProtocols SigningProtocol { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public OriginAccessControlOriginTypes get_OriginAccessControlOriginType();
    public void set_OriginAccessControlOriginType(OriginAccessControlOriginTypes value);
    internal bool IsSetOriginAccessControlOriginType();
    public OriginAccessControlSigningBehaviors get_SigningBehavior();
    public void set_SigningBehavior(OriginAccessControlSigningBehaviors value);
    internal bool IsSetSigningBehavior();
    public OriginAccessControlSigningProtocols get_SigningProtocol();
    public void set_SigningProtocol(OriginAccessControlSigningProtocols value);
    internal bool IsSetSigningProtocol();
}
public class Amazon.CloudFront.Model.OriginCustomHeader : object {
    private string _headerName;
    private string _headerValue;
    [AWSPropertyAttribute]
public string HeaderName { get; public set; }
    [AWSPropertyAttribute]
public string HeaderValue { get; public set; }
    public string get_HeaderName();
    public void set_HeaderName(string value);
    internal bool IsSetHeaderName();
    public string get_HeaderValue();
    public void set_HeaderValue(string value);
    internal bool IsSetHeaderValue();
}
public class Amazon.CloudFront.Model.OriginGroup : object {
    private OriginGroupFailoverCriteria _failoverCriteria;
    private string _id;
    private OriginGroupMembers _members;
    [AWSPropertyAttribute]
public OriginGroupFailoverCriteria FailoverCriteria { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public OriginGroupMembers Members { get; public set; }
    public OriginGroupFailoverCriteria get_FailoverCriteria();
    public void set_FailoverCriteria(OriginGroupFailoverCriteria value);
    internal bool IsSetFailoverCriteria();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public OriginGroupMembers get_Members();
    public void set_Members(OriginGroupMembers value);
    internal bool IsSetMembers();
}
public class Amazon.CloudFront.Model.OriginGroupFailoverCriteria : object {
    private StatusCodes _statusCodes;
    [AWSPropertyAttribute]
public StatusCodes StatusCodes { get; public set; }
    public StatusCodes get_StatusCodes();
    public void set_StatusCodes(StatusCodes value);
    internal bool IsSetStatusCodes();
}
public class Amazon.CloudFront.Model.OriginGroupMember : object {
    private string _originId;
    [AWSPropertyAttribute]
public string OriginId { get; public set; }
    public string get_OriginId();
    public void set_OriginId(string value);
    internal bool IsSetOriginId();
}
public class Amazon.CloudFront.Model.OriginGroupMembers : object {
    private List`1<OriginGroupMember> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public List`1<OriginGroupMember> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<OriginGroupMember> get_Items();
    public void set_Items(List`1<OriginGroupMember> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.OriginGroups : object {
    private List`1<OriginGroup> _items;
    private Nullable`1<int> _quantity;
    public List`1<OriginGroup> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<OriginGroup> get_Items();
    public void set_Items(List`1<OriginGroup> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.OriginRequestPolicy : object {
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    private OriginRequestPolicyConfig _originRequestPolicyConfig;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public OriginRequestPolicyConfig OriginRequestPolicyConfig { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public OriginRequestPolicyConfig get_OriginRequestPolicyConfig();
    public void set_OriginRequestPolicyConfig(OriginRequestPolicyConfig value);
    internal bool IsSetOriginRequestPolicyConfig();
}
public class Amazon.CloudFront.Model.OriginRequestPolicyAlreadyExistsException : AmazonCloudFrontException {
    public OriginRequestPolicyAlreadyExistsException(string message);
    public OriginRequestPolicyAlreadyExistsException(string message, Exception innerException);
    public OriginRequestPolicyAlreadyExistsException(Exception innerException);
    public OriginRequestPolicyAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OriginRequestPolicyAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.OriginRequestPolicyConfig : object {
    private string _comment;
    private OriginRequestPolicyCookiesConfig _cookiesConfig;
    private OriginRequestPolicyHeadersConfig _headersConfig;
    private string _name;
    private OriginRequestPolicyQueryStringsConfig _queryStringsConfig;
    public string Comment { get; public set; }
    [AWSPropertyAttribute]
public OriginRequestPolicyCookiesConfig CookiesConfig { get; public set; }
    [AWSPropertyAttribute]
public OriginRequestPolicyHeadersConfig HeadersConfig { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public OriginRequestPolicyQueryStringsConfig QueryStringsConfig { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public OriginRequestPolicyCookiesConfig get_CookiesConfig();
    public void set_CookiesConfig(OriginRequestPolicyCookiesConfig value);
    internal bool IsSetCookiesConfig();
    public OriginRequestPolicyHeadersConfig get_HeadersConfig();
    public void set_HeadersConfig(OriginRequestPolicyHeadersConfig value);
    internal bool IsSetHeadersConfig();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public OriginRequestPolicyQueryStringsConfig get_QueryStringsConfig();
    public void set_QueryStringsConfig(OriginRequestPolicyQueryStringsConfig value);
    internal bool IsSetQueryStringsConfig();
}
public class Amazon.CloudFront.Model.OriginRequestPolicyCookiesConfig : object {
    private OriginRequestPolicyCookieBehavior _cookieBehavior;
    private CookieNames _cookies;
    [AWSPropertyAttribute]
public OriginRequestPolicyCookieBehavior CookieBehavior { get; public set; }
    public CookieNames Cookies { get; public set; }
    public OriginRequestPolicyCookieBehavior get_CookieBehavior();
    public void set_CookieBehavior(OriginRequestPolicyCookieBehavior value);
    internal bool IsSetCookieBehavior();
    public CookieNames get_Cookies();
    public void set_Cookies(CookieNames value);
    internal bool IsSetCookies();
}
public class Amazon.CloudFront.Model.OriginRequestPolicyHeadersConfig : object {
    private OriginRequestPolicyHeaderBehavior _headerBehavior;
    private Headers _headers;
    [AWSPropertyAttribute]
public OriginRequestPolicyHeaderBehavior HeaderBehavior { get; public set; }
    public Headers Headers { get; public set; }
    public OriginRequestPolicyHeaderBehavior get_HeaderBehavior();
    public void set_HeaderBehavior(OriginRequestPolicyHeaderBehavior value);
    internal bool IsSetHeaderBehavior();
    public Headers get_Headers();
    public void set_Headers(Headers value);
    internal bool IsSetHeaders();
}
public class Amazon.CloudFront.Model.OriginRequestPolicyInUseException : AmazonCloudFrontException {
    public OriginRequestPolicyInUseException(string message);
    public OriginRequestPolicyInUseException(string message, Exception innerException);
    public OriginRequestPolicyInUseException(Exception innerException);
    public OriginRequestPolicyInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OriginRequestPolicyInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.OriginRequestPolicyList : object {
    private List`1<OriginRequestPolicySummary> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<OriginRequestPolicySummary> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<OriginRequestPolicySummary> get_Items();
    public void set_Items(List`1<OriginRequestPolicySummary> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.OriginRequestPolicyQueryStringsConfig : object {
    private OriginRequestPolicyQueryStringBehavior _queryStringBehavior;
    private QueryStringNames _queryStrings;
    [AWSPropertyAttribute]
public OriginRequestPolicyQueryStringBehavior QueryStringBehavior { get; public set; }
    public QueryStringNames QueryStrings { get; public set; }
    public OriginRequestPolicyQueryStringBehavior get_QueryStringBehavior();
    public void set_QueryStringBehavior(OriginRequestPolicyQueryStringBehavior value);
    internal bool IsSetQueryStringBehavior();
    public QueryStringNames get_QueryStrings();
    public void set_QueryStrings(QueryStringNames value);
    internal bool IsSetQueryStrings();
}
public class Amazon.CloudFront.Model.OriginRequestPolicySummary : object {
    private OriginRequestPolicy _originRequestPolicy;
    private OriginRequestPolicyType _type;
    [AWSPropertyAttribute]
public OriginRequestPolicy OriginRequestPolicy { get; public set; }
    [AWSPropertyAttribute]
public OriginRequestPolicyType Type { get; public set; }
    public OriginRequestPolicy get_OriginRequestPolicy();
    public void set_OriginRequestPolicy(OriginRequestPolicy value);
    internal bool IsSetOriginRequestPolicy();
    public OriginRequestPolicyType get_Type();
    public void set_Type(OriginRequestPolicyType value);
    internal bool IsSetType();
}
public class Amazon.CloudFront.Model.Origins : object {
    private List`1<Origin> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public List`1<Origin> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<Origin> get_Items();
    public void set_Items(List`1<Origin> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.OriginShield : object {
    private Nullable`1<bool> _enabled;
    private string _originShieldRegion;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public string OriginShieldRegion { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_OriginShieldRegion();
    public void set_OriginShieldRegion(string value);
    internal bool IsSetOriginShieldRegion();
}
public class Amazon.CloudFront.Model.OriginSslProtocols : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ParametersInCacheKeyAndForwardedToOrigin : object {
    private CachePolicyCookiesConfig _cookiesConfig;
    private Nullable`1<bool> _enableAcceptEncodingBrotli;
    private Nullable`1<bool> _enableAcceptEncodingGzip;
    private CachePolicyHeadersConfig _headersConfig;
    private CachePolicyQueryStringsConfig _queryStringsConfig;
    [AWSPropertyAttribute]
public CachePolicyCookiesConfig CookiesConfig { get; public set; }
    public Nullable`1<bool> EnableAcceptEncodingBrotli { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> EnableAcceptEncodingGzip { get; public set; }
    [AWSPropertyAttribute]
public CachePolicyHeadersConfig HeadersConfig { get; public set; }
    [AWSPropertyAttribute]
public CachePolicyQueryStringsConfig QueryStringsConfig { get; public set; }
    public CachePolicyCookiesConfig get_CookiesConfig();
    public void set_CookiesConfig(CachePolicyCookiesConfig value);
    internal bool IsSetCookiesConfig();
    public Nullable`1<bool> get_EnableAcceptEncodingBrotli();
    public void set_EnableAcceptEncodingBrotli(Nullable`1<bool> value);
    internal bool IsSetEnableAcceptEncodingBrotli();
    public Nullable`1<bool> get_EnableAcceptEncodingGzip();
    public void set_EnableAcceptEncodingGzip(Nullable`1<bool> value);
    internal bool IsSetEnableAcceptEncodingGzip();
    public CachePolicyHeadersConfig get_HeadersConfig();
    public void set_HeadersConfig(CachePolicyHeadersConfig value);
    internal bool IsSetHeadersConfig();
    public CachePolicyQueryStringsConfig get_QueryStringsConfig();
    public void set_QueryStringsConfig(CachePolicyQueryStringsConfig value);
    internal bool IsSetQueryStringsConfig();
}
public class Amazon.CloudFront.Model.Paths : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.PreconditionFailedException : AmazonCloudFrontException {
    public PreconditionFailedException(string message);
    public PreconditionFailedException(string message, Exception innerException);
    public PreconditionFailedException(Exception innerException);
    public PreconditionFailedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PreconditionFailedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.PublicKey : object {
    private Nullable`1<DateTime> _createdTime;
    private string _id;
    private PublicKeyConfig _publicKeyConfig;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public PublicKeyConfig PublicKeyConfig { get; public set; }
    public Nullable`1<DateTime> get_CreatedTime();
    public void set_CreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTime();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public PublicKeyConfig get_PublicKeyConfig();
    public void set_PublicKeyConfig(PublicKeyConfig value);
    internal bool IsSetPublicKeyConfig();
}
public class Amazon.CloudFront.Model.PublicKeyAlreadyExistsException : AmazonCloudFrontException {
    public PublicKeyAlreadyExistsException(string message);
    public PublicKeyAlreadyExistsException(string message, Exception innerException);
    public PublicKeyAlreadyExistsException(Exception innerException);
    public PublicKeyAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PublicKeyAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.PublicKeyConfig : object {
    private string _callerReference;
    private string _comment;
    private string _encodedKey;
    private string _name;
    [AWSPropertyAttribute]
public string CallerReference { get; public set; }
    public string Comment { get; public set; }
    [AWSPropertyAttribute]
public string EncodedKey { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_CallerReference();
    public void set_CallerReference(string value);
    internal bool IsSetCallerReference();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_EncodedKey();
    public void set_EncodedKey(string value);
    internal bool IsSetEncodedKey();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.PublicKeyInUseException : AmazonCloudFrontException {
    public PublicKeyInUseException(string message);
    public PublicKeyInUseException(string message, Exception innerException);
    public PublicKeyInUseException(Exception innerException);
    public PublicKeyInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PublicKeyInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.PublicKeyList : object {
    private List`1<PublicKeySummary> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<PublicKeySummary> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<PublicKeySummary> get_Items();
    public void set_Items(List`1<PublicKeySummary> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.PublicKeySummary : object {
    private string _comment;
    private Nullable`1<DateTime> _createdTime;
    private string _encodedKey;
    private string _id;
    private string _name;
    public string Comment { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreatedTime { get; public set; }
    [AWSPropertyAttribute]
public string EncodedKey { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public Nullable`1<DateTime> get_CreatedTime();
    public void set_CreatedTime(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTime();
    public string get_EncodedKey();
    public void set_EncodedKey(string value);
    internal bool IsSetEncodedKey();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.PublishFunctionRequest : AmazonCloudFrontRequest {
    private string _ifMatch;
    private string _name;
    [AWSPropertyAttribute]
public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.PublishFunctionResponse : AmazonWebServiceResponse {
    private FunctionSummary _functionSummary;
    public FunctionSummary FunctionSummary { get; public set; }
    public FunctionSummary get_FunctionSummary();
    public void set_FunctionSummary(FunctionSummary value);
    internal bool IsSetFunctionSummary();
}
public class Amazon.CloudFront.Model.QueryArgProfile : object {
    private string _profileId;
    private string _queryArg;
    [AWSPropertyAttribute]
public string ProfileId { get; public set; }
    [AWSPropertyAttribute]
public string QueryArg { get; public set; }
    public string get_ProfileId();
    public void set_ProfileId(string value);
    internal bool IsSetProfileId();
    public string get_QueryArg();
    public void set_QueryArg(string value);
    internal bool IsSetQueryArg();
}
public class Amazon.CloudFront.Model.QueryArgProfileConfig : object {
    private Nullable`1<bool> _forwardWhenQueryArgProfileIsUnknown;
    private QueryArgProfiles _queryArgProfiles;
    [AWSPropertyAttribute]
public Nullable`1<bool> ForwardWhenQueryArgProfileIsUnknown { get; public set; }
    public QueryArgProfiles QueryArgProfiles { get; public set; }
    public Nullable`1<bool> get_ForwardWhenQueryArgProfileIsUnknown();
    public void set_ForwardWhenQueryArgProfileIsUnknown(Nullable`1<bool> value);
    internal bool IsSetForwardWhenQueryArgProfileIsUnknown();
    public QueryArgProfiles get_QueryArgProfiles();
    public void set_QueryArgProfiles(QueryArgProfiles value);
    internal bool IsSetQueryArgProfiles();
}
public class Amazon.CloudFront.Model.QueryArgProfileEmptyException : AmazonCloudFrontException {
    public QueryArgProfileEmptyException(string message);
    public QueryArgProfileEmptyException(string message, Exception innerException);
    public QueryArgProfileEmptyException(Exception innerException);
    public QueryArgProfileEmptyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public QueryArgProfileEmptyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.QueryArgProfiles : object {
    private List`1<QueryArgProfile> _items;
    private Nullable`1<int> _quantity;
    public List`1<QueryArgProfile> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<QueryArgProfile> get_Items();
    public void set_Items(List`1<QueryArgProfile> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.QueryStringCacheKeys : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.QueryStringNames : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.RealtimeLogConfig : object {
    private string _arn;
    private List`1<EndPoint> _endPoints;
    private List`1<string> _fields;
    private string _name;
    private Nullable`1<long> _samplingRate;
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<EndPoint> EndPoints { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Fields { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> SamplingRate { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public List`1<EndPoint> get_EndPoints();
    public void set_EndPoints(List`1<EndPoint> value);
    internal bool IsSetEndPoints();
    public List`1<string> get_Fields();
    public void set_Fields(List`1<string> value);
    internal bool IsSetFields();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<long> get_SamplingRate();
    public void set_SamplingRate(Nullable`1<long> value);
    internal bool IsSetSamplingRate();
}
public class Amazon.CloudFront.Model.RealtimeLogConfigAlreadyExistsException : AmazonCloudFrontException {
    public RealtimeLogConfigAlreadyExistsException(string message);
    public RealtimeLogConfigAlreadyExistsException(string message, Exception innerException);
    public RealtimeLogConfigAlreadyExistsException(Exception innerException);
    public RealtimeLogConfigAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RealtimeLogConfigAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.RealtimeLogConfigInUseException : AmazonCloudFrontException {
    public RealtimeLogConfigInUseException(string message);
    public RealtimeLogConfigInUseException(string message, Exception innerException);
    public RealtimeLogConfigInUseException(Exception innerException);
    public RealtimeLogConfigInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RealtimeLogConfigInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.RealtimeLogConfigOwnerMismatchException : AmazonCloudFrontException {
    public RealtimeLogConfigOwnerMismatchException(string message);
    public RealtimeLogConfigOwnerMismatchException(string message, Exception innerException);
    public RealtimeLogConfigOwnerMismatchException(Exception innerException);
    public RealtimeLogConfigOwnerMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RealtimeLogConfigOwnerMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.RealtimeLogConfigs : object {
    private Nullable`1<bool> _isTruncated;
    private List`1<RealtimeLogConfig> _items;
    private string _marker;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    [AWSPropertyAttribute]
public Nullable`1<bool> IsTruncated { get; public set; }
    public List`1<RealtimeLogConfig> Items { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    public Nullable`1<bool> get_IsTruncated();
    public void set_IsTruncated(Nullable`1<bool> value);
    internal bool IsSetIsTruncated();
    public List`1<RealtimeLogConfig> get_Items();
    public void set_Items(List`1<RealtimeLogConfig> value);
    internal bool IsSetItems();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
}
public class Amazon.CloudFront.Model.RealtimeMetricsSubscriptionConfig : object {
    private RealtimeMetricsSubscriptionStatus _realtimeMetricsSubscriptionStatus;
    [AWSPropertyAttribute]
public RealtimeMetricsSubscriptionStatus RealtimeMetricsSubscriptionStatus { get; public set; }
    public RealtimeMetricsSubscriptionStatus get_RealtimeMetricsSubscriptionStatus();
    public void set_RealtimeMetricsSubscriptionStatus(RealtimeMetricsSubscriptionStatus value);
    internal bool IsSetRealtimeMetricsSubscriptionStatus();
}
public class Amazon.CloudFront.Model.ResourceInUseException : AmazonCloudFrontException {
    public ResourceInUseException(string message);
    public ResourceInUseException(string message, Exception innerException);
    public ResourceInUseException(Exception innerException);
    public ResourceInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicy : object {
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    private ResponseHeadersPolicyConfig _responseHeadersPolicyConfig;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public ResponseHeadersPolicyConfig ResponseHeadersPolicyConfig { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public ResponseHeadersPolicyConfig get_ResponseHeadersPolicyConfig();
    public void set_ResponseHeadersPolicyConfig(ResponseHeadersPolicyConfig value);
    internal bool IsSetResponseHeadersPolicyConfig();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyAccessControlAllowHeaders : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyAccessControlAllowMethods : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyAccessControlAllowOrigins : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyAccessControlExposeHeaders : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyAlreadyExistsException : AmazonCloudFrontException {
    public ResponseHeadersPolicyAlreadyExistsException(string message);
    public ResponseHeadersPolicyAlreadyExistsException(string message, Exception innerException);
    public ResponseHeadersPolicyAlreadyExistsException(Exception innerException);
    public ResponseHeadersPolicyAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResponseHeadersPolicyAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyConfig : object {
    private string _comment;
    private ResponseHeadersPolicyCorsConfig _corsConfig;
    private ResponseHeadersPolicyCustomHeadersConfig _customHeadersConfig;
    private string _name;
    private ResponseHeadersPolicyRemoveHeadersConfig _removeHeadersConfig;
    private ResponseHeadersPolicySecurityHeadersConfig _securityHeadersConfig;
    private ResponseHeadersPolicyServerTimingHeadersConfig _serverTimingHeadersConfig;
    public string Comment { get; public set; }
    public ResponseHeadersPolicyCorsConfig CorsConfig { get; public set; }
    public ResponseHeadersPolicyCustomHeadersConfig CustomHeadersConfig { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public ResponseHeadersPolicyRemoveHeadersConfig RemoveHeadersConfig { get; public set; }
    public ResponseHeadersPolicySecurityHeadersConfig SecurityHeadersConfig { get; public set; }
    public ResponseHeadersPolicyServerTimingHeadersConfig ServerTimingHeadersConfig { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public ResponseHeadersPolicyCorsConfig get_CorsConfig();
    public void set_CorsConfig(ResponseHeadersPolicyCorsConfig value);
    internal bool IsSetCorsConfig();
    public ResponseHeadersPolicyCustomHeadersConfig get_CustomHeadersConfig();
    public void set_CustomHeadersConfig(ResponseHeadersPolicyCustomHeadersConfig value);
    internal bool IsSetCustomHeadersConfig();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public ResponseHeadersPolicyRemoveHeadersConfig get_RemoveHeadersConfig();
    public void set_RemoveHeadersConfig(ResponseHeadersPolicyRemoveHeadersConfig value);
    internal bool IsSetRemoveHeadersConfig();
    public ResponseHeadersPolicySecurityHeadersConfig get_SecurityHeadersConfig();
    public void set_SecurityHeadersConfig(ResponseHeadersPolicySecurityHeadersConfig value);
    internal bool IsSetSecurityHeadersConfig();
    public ResponseHeadersPolicyServerTimingHeadersConfig get_ServerTimingHeadersConfig();
    public void set_ServerTimingHeadersConfig(ResponseHeadersPolicyServerTimingHeadersConfig value);
    internal bool IsSetServerTimingHeadersConfig();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyContentSecurityPolicy : object {
    private string _contentSecurityPolicy;
    private Nullable`1<bool> _override;
    [AWSPropertyAttribute]
public string ContentSecurityPolicy { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Override { get; public set; }
    public string get_ContentSecurityPolicy();
    public void set_ContentSecurityPolicy(string value);
    internal bool IsSetContentSecurityPolicy();
    public Nullable`1<bool> get_Override();
    public void set_Override(Nullable`1<bool> value);
    internal bool IsSetOverride();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyContentTypeOptions : object {
    private Nullable`1<bool> _override;
    [AWSPropertyAttribute]
public Nullable`1<bool> Override { get; public set; }
    public Nullable`1<bool> get_Override();
    public void set_Override(Nullable`1<bool> value);
    internal bool IsSetOverride();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyCorsConfig : object {
    private Nullable`1<bool> _accessControlAllowCredentials;
    private ResponseHeadersPolicyAccessControlAllowHeaders _accessControlAllowHeaders;
    private ResponseHeadersPolicyAccessControlAllowMethods _accessControlAllowMethods;
    private ResponseHeadersPolicyAccessControlAllowOrigins _accessControlAllowOrigins;
    private ResponseHeadersPolicyAccessControlExposeHeaders _accessControlExposeHeaders;
    private Nullable`1<int> _accessControlMaxAgeSec;
    private Nullable`1<bool> _originOverride;
    [AWSPropertyAttribute]
public Nullable`1<bool> AccessControlAllowCredentials { get; public set; }
    [AWSPropertyAttribute]
public ResponseHeadersPolicyAccessControlAllowHeaders AccessControlAllowHeaders { get; public set; }
    [AWSPropertyAttribute]
public ResponseHeadersPolicyAccessControlAllowMethods AccessControlAllowMethods { get; public set; }
    [AWSPropertyAttribute]
public ResponseHeadersPolicyAccessControlAllowOrigins AccessControlAllowOrigins { get; public set; }
    public ResponseHeadersPolicyAccessControlExposeHeaders AccessControlExposeHeaders { get; public set; }
    public Nullable`1<int> AccessControlMaxAgeSec { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> OriginOverride { get; public set; }
    public Nullable`1<bool> get_AccessControlAllowCredentials();
    public void set_AccessControlAllowCredentials(Nullable`1<bool> value);
    internal bool IsSetAccessControlAllowCredentials();
    public ResponseHeadersPolicyAccessControlAllowHeaders get_AccessControlAllowHeaders();
    public void set_AccessControlAllowHeaders(ResponseHeadersPolicyAccessControlAllowHeaders value);
    internal bool IsSetAccessControlAllowHeaders();
    public ResponseHeadersPolicyAccessControlAllowMethods get_AccessControlAllowMethods();
    public void set_AccessControlAllowMethods(ResponseHeadersPolicyAccessControlAllowMethods value);
    internal bool IsSetAccessControlAllowMethods();
    public ResponseHeadersPolicyAccessControlAllowOrigins get_AccessControlAllowOrigins();
    public void set_AccessControlAllowOrigins(ResponseHeadersPolicyAccessControlAllowOrigins value);
    internal bool IsSetAccessControlAllowOrigins();
    public ResponseHeadersPolicyAccessControlExposeHeaders get_AccessControlExposeHeaders();
    public void set_AccessControlExposeHeaders(ResponseHeadersPolicyAccessControlExposeHeaders value);
    internal bool IsSetAccessControlExposeHeaders();
    public Nullable`1<int> get_AccessControlMaxAgeSec();
    public void set_AccessControlMaxAgeSec(Nullable`1<int> value);
    internal bool IsSetAccessControlMaxAgeSec();
    public Nullable`1<bool> get_OriginOverride();
    public void set_OriginOverride(Nullable`1<bool> value);
    internal bool IsSetOriginOverride();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyCustomHeader : object {
    private string _header;
    private Nullable`1<bool> _override;
    private string _value;
    [AWSPropertyAttribute]
public string Header { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Override { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Header();
    public void set_Header(string value);
    internal bool IsSetHeader();
    public Nullable`1<bool> get_Override();
    public void set_Override(Nullable`1<bool> value);
    internal bool IsSetOverride();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyCustomHeadersConfig : object {
    private List`1<ResponseHeadersPolicyCustomHeader> _items;
    private Nullable`1<int> _quantity;
    public List`1<ResponseHeadersPolicyCustomHeader> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<ResponseHeadersPolicyCustomHeader> get_Items();
    public void set_Items(List`1<ResponseHeadersPolicyCustomHeader> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyFrameOptions : object {
    private FrameOptionsList _frameOption;
    private Nullable`1<bool> _override;
    [AWSPropertyAttribute]
public FrameOptionsList FrameOption { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Override { get; public set; }
    public FrameOptionsList get_FrameOption();
    public void set_FrameOption(FrameOptionsList value);
    internal bool IsSetFrameOption();
    public Nullable`1<bool> get_Override();
    public void set_Override(Nullable`1<bool> value);
    internal bool IsSetOverride();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyInUseException : AmazonCloudFrontException {
    public ResponseHeadersPolicyInUseException(string message);
    public ResponseHeadersPolicyInUseException(string message, Exception innerException);
    public ResponseHeadersPolicyInUseException(Exception innerException);
    public ResponseHeadersPolicyInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResponseHeadersPolicyInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyList : object {
    private List`1<ResponseHeadersPolicySummary> _items;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    public List`1<ResponseHeadersPolicySummary> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<ResponseHeadersPolicySummary> get_Items();
    public void set_Items(List`1<ResponseHeadersPolicySummary> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyReferrerPolicy : object {
    private Nullable`1<bool> _override;
    private ReferrerPolicyList _referrerPolicy;
    [AWSPropertyAttribute]
public Nullable`1<bool> Override { get; public set; }
    [AWSPropertyAttribute]
public ReferrerPolicyList ReferrerPolicy { get; public set; }
    public Nullable`1<bool> get_Override();
    public void set_Override(Nullable`1<bool> value);
    internal bool IsSetOverride();
    public ReferrerPolicyList get_ReferrerPolicy();
    public void set_ReferrerPolicy(ReferrerPolicyList value);
    internal bool IsSetReferrerPolicy();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyRemoveHeader : object {
    private string _header;
    [AWSPropertyAttribute]
public string Header { get; public set; }
    public string get_Header();
    public void set_Header(string value);
    internal bool IsSetHeader();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyRemoveHeadersConfig : object {
    private List`1<ResponseHeadersPolicyRemoveHeader> _items;
    private Nullable`1<int> _quantity;
    public List`1<ResponseHeadersPolicyRemoveHeader> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<ResponseHeadersPolicyRemoveHeader> get_Items();
    public void set_Items(List`1<ResponseHeadersPolicyRemoveHeader> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicySecurityHeadersConfig : object {
    private ResponseHeadersPolicyContentSecurityPolicy _contentSecurityPolicy;
    private ResponseHeadersPolicyContentTypeOptions _contentTypeOptions;
    private ResponseHeadersPolicyFrameOptions _frameOptions;
    private ResponseHeadersPolicyReferrerPolicy _referrerPolicy;
    private ResponseHeadersPolicyStrictTransportSecurity _strictTransportSecurity;
    private ResponseHeadersPolicyXSSProtection _xssProtection;
    public ResponseHeadersPolicyContentSecurityPolicy ContentSecurityPolicy { get; public set; }
    public ResponseHeadersPolicyContentTypeOptions ContentTypeOptions { get; public set; }
    public ResponseHeadersPolicyFrameOptions FrameOptions { get; public set; }
    public ResponseHeadersPolicyReferrerPolicy ReferrerPolicy { get; public set; }
    public ResponseHeadersPolicyStrictTransportSecurity StrictTransportSecurity { get; public set; }
    public ResponseHeadersPolicyXSSProtection XSSProtection { get; public set; }
    public ResponseHeadersPolicyContentSecurityPolicy get_ContentSecurityPolicy();
    public void set_ContentSecurityPolicy(ResponseHeadersPolicyContentSecurityPolicy value);
    internal bool IsSetContentSecurityPolicy();
    public ResponseHeadersPolicyContentTypeOptions get_ContentTypeOptions();
    public void set_ContentTypeOptions(ResponseHeadersPolicyContentTypeOptions value);
    internal bool IsSetContentTypeOptions();
    public ResponseHeadersPolicyFrameOptions get_FrameOptions();
    public void set_FrameOptions(ResponseHeadersPolicyFrameOptions value);
    internal bool IsSetFrameOptions();
    public ResponseHeadersPolicyReferrerPolicy get_ReferrerPolicy();
    public void set_ReferrerPolicy(ResponseHeadersPolicyReferrerPolicy value);
    internal bool IsSetReferrerPolicy();
    public ResponseHeadersPolicyStrictTransportSecurity get_StrictTransportSecurity();
    public void set_StrictTransportSecurity(ResponseHeadersPolicyStrictTransportSecurity value);
    internal bool IsSetStrictTransportSecurity();
    public ResponseHeadersPolicyXSSProtection get_XSSProtection();
    public void set_XSSProtection(ResponseHeadersPolicyXSSProtection value);
    internal bool IsSetXSSProtection();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyServerTimingHeadersConfig : object {
    private Nullable`1<bool> _enabled;
    private Nullable`1<double> _samplingRate;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> SamplingRate { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public Nullable`1<double> get_SamplingRate();
    public void set_SamplingRate(Nullable`1<double> value);
    internal bool IsSetSamplingRate();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyStrictTransportSecurity : object {
    private Nullable`1<int> _accessControlMaxAgeSec;
    private Nullable`1<bool> _includeSubdomains;
    private Nullable`1<bool> _override;
    private Nullable`1<bool> _preload;
    [AWSPropertyAttribute]
public Nullable`1<int> AccessControlMaxAgeSec { get; public set; }
    public Nullable`1<bool> IncludeSubdomains { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Override { get; public set; }
    public Nullable`1<bool> Preload { get; public set; }
    public Nullable`1<int> get_AccessControlMaxAgeSec();
    public void set_AccessControlMaxAgeSec(Nullable`1<int> value);
    internal bool IsSetAccessControlMaxAgeSec();
    public Nullable`1<bool> get_IncludeSubdomains();
    public void set_IncludeSubdomains(Nullable`1<bool> value);
    internal bool IsSetIncludeSubdomains();
    public Nullable`1<bool> get_Override();
    public void set_Override(Nullable`1<bool> value);
    internal bool IsSetOverride();
    public Nullable`1<bool> get_Preload();
    public void set_Preload(Nullable`1<bool> value);
    internal bool IsSetPreload();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicySummary : object {
    private ResponseHeadersPolicy _responseHeadersPolicy;
    private ResponseHeadersPolicyType _type;
    [AWSPropertyAttribute]
public ResponseHeadersPolicy ResponseHeadersPolicy { get; public set; }
    [AWSPropertyAttribute]
public ResponseHeadersPolicyType Type { get; public set; }
    public ResponseHeadersPolicy get_ResponseHeadersPolicy();
    public void set_ResponseHeadersPolicy(ResponseHeadersPolicy value);
    internal bool IsSetResponseHeadersPolicy();
    public ResponseHeadersPolicyType get_Type();
    public void set_Type(ResponseHeadersPolicyType value);
    internal bool IsSetType();
}
public class Amazon.CloudFront.Model.ResponseHeadersPolicyXSSProtection : object {
    private Nullable`1<bool> _modeBlock;
    private Nullable`1<bool> _override;
    private Nullable`1<bool> _protection;
    private string _reportUri;
    public Nullable`1<bool> ModeBlock { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Override { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Protection { get; public set; }
    public string ReportUri { get; public set; }
    public Nullable`1<bool> get_ModeBlock();
    public void set_ModeBlock(Nullable`1<bool> value);
    internal bool IsSetModeBlock();
    public Nullable`1<bool> get_Override();
    public void set_Override(Nullable`1<bool> value);
    internal bool IsSetOverride();
    public Nullable`1<bool> get_Protection();
    public void set_Protection(Nullable`1<bool> value);
    internal bool IsSetProtection();
    public string get_ReportUri();
    public void set_ReportUri(string value);
    internal bool IsSetReportUri();
}
public class Amazon.CloudFront.Model.Restrictions : object {
    private GeoRestriction _geoRestriction;
    [AWSPropertyAttribute]
public GeoRestriction GeoRestriction { get; public set; }
    public Restrictions(GeoRestriction geoRestriction);
    public GeoRestriction get_GeoRestriction();
    public void set_GeoRestriction(GeoRestriction value);
    internal bool IsSetGeoRestriction();
}
public class Amazon.CloudFront.Model.S3Origin : object {
    private string _domainName;
    private string _originAccessIdentity;
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    [AWSPropertyAttribute]
public string OriginAccessIdentity { get; public set; }
    public S3Origin(string domainName);
    public S3Origin(string domainName, string originAccessIdentity);
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public string get_OriginAccessIdentity();
    public void set_OriginAccessIdentity(string value);
    internal bool IsSetOriginAccessIdentity();
}
public class Amazon.CloudFront.Model.S3OriginConfig : object {
    private string _originAccessIdentity;
    [AWSPropertyAttribute]
public string OriginAccessIdentity { get; public set; }
    public string get_OriginAccessIdentity();
    public void set_OriginAccessIdentity(string value);
    internal bool IsSetOriginAccessIdentity();
}
public class Amazon.CloudFront.Model.SessionStickinessConfig : object {
    private Nullable`1<int> _idleTTL;
    private Nullable`1<int> _maximumTTL;
    [AWSPropertyAttribute]
public Nullable`1<int> IdleTTL { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaximumTTL { get; public set; }
    public Nullable`1<int> get_IdleTTL();
    public void set_IdleTTL(Nullable`1<int> value);
    internal bool IsSetIdleTTL();
    public Nullable`1<int> get_MaximumTTL();
    public void set_MaximumTTL(Nullable`1<int> value);
    internal bool IsSetMaximumTTL();
}
public class Amazon.CloudFront.Model.Signer : object {
    private string _awsAccountNumber;
    private KeyPairIds _keyPairIds;
    public string AwsAccountNumber { get; public set; }
    public KeyPairIds KeyPairIds { get; public set; }
    public string get_AwsAccountNumber();
    public void set_AwsAccountNumber(string value);
    internal bool IsSetAwsAccountNumber();
    public KeyPairIds get_KeyPairIds();
    public void set_KeyPairIds(KeyPairIds value);
    internal bool IsSetKeyPairIds();
}
public class Amazon.CloudFront.Model.StagingDistributionDnsNames : object {
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.StagingDistributionInUseException : AmazonCloudFrontException {
    public StagingDistributionInUseException(string message);
    public StagingDistributionInUseException(string message, Exception innerException);
    public StagingDistributionInUseException(Exception innerException);
    public StagingDistributionInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StagingDistributionInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.StatusCodes : object {
    private List`1<int> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public List`1<int> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public List`1<int> get_Items();
    public void set_Items(List`1<int> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.StreamingDistribution : object {
    private ActiveTrustedSigners _activeTrustedSigners;
    private string _arn;
    private string _domainName;
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    private string _status;
    private StreamingDistributionConfig _streamingDistributionConfig;
    [AWSPropertyAttribute]
public ActiveTrustedSigners ActiveTrustedSigners { get; public set; }
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public string Status { get; public set; }
    [AWSPropertyAttribute]
public StreamingDistributionConfig StreamingDistributionConfig { get; public set; }
    public ActiveTrustedSigners get_ActiveTrustedSigners();
    public void set_ActiveTrustedSigners(ActiveTrustedSigners value);
    internal bool IsSetActiveTrustedSigners();
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public StreamingDistributionConfig get_StreamingDistributionConfig();
    public void set_StreamingDistributionConfig(StreamingDistributionConfig value);
    internal bool IsSetStreamingDistributionConfig();
}
public class Amazon.CloudFront.Model.StreamingDistributionAlreadyExistsException : AmazonCloudFrontException {
    public StreamingDistributionAlreadyExistsException(string message);
    public StreamingDistributionAlreadyExistsException(string message, Exception innerException);
    public StreamingDistributionAlreadyExistsException(Exception innerException);
    public StreamingDistributionAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StreamingDistributionAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.StreamingDistributionConfig : object {
    private Aliases _aliases;
    private string _callerReference;
    private string _comment;
    private Nullable`1<bool> _enabled;
    private StreamingLoggingConfig _logging;
    private PriceClass _priceClass;
    private S3Origin _s3Origin;
    private TrustedSigners _trustedSigners;
    public Aliases Aliases { get; public set; }
    [AWSPropertyAttribute]
public string CallerReference { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public StreamingLoggingConfig Logging { get; public set; }
    public PriceClass PriceClass { get; public set; }
    [AWSPropertyAttribute]
public S3Origin S3Origin { get; public set; }
    [AWSPropertyAttribute]
public TrustedSigners TrustedSigners { get; public set; }
    public Aliases get_Aliases();
    public void set_Aliases(Aliases value);
    internal bool IsSetAliases();
    public string get_CallerReference();
    public void set_CallerReference(string value);
    internal bool IsSetCallerReference();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public StreamingLoggingConfig get_Logging();
    public void set_Logging(StreamingLoggingConfig value);
    internal bool IsSetLogging();
    public PriceClass get_PriceClass();
    public void set_PriceClass(PriceClass value);
    internal bool IsSetPriceClass();
    public S3Origin get_S3Origin();
    public void set_S3Origin(S3Origin value);
    internal bool IsSetS3Origin();
    public TrustedSigners get_TrustedSigners();
    public void set_TrustedSigners(TrustedSigners value);
    internal bool IsSetTrustedSigners();
}
public class Amazon.CloudFront.Model.StreamingDistributionConfigWithTags : object {
    private StreamingDistributionConfig _streamingDistributionConfig;
    private Tags _tags;
    [AWSPropertyAttribute]
public StreamingDistributionConfig StreamingDistributionConfig { get; public set; }
    [AWSPropertyAttribute]
public Tags Tags { get; public set; }
    public StreamingDistributionConfig get_StreamingDistributionConfig();
    public void set_StreamingDistributionConfig(StreamingDistributionConfig value);
    internal bool IsSetStreamingDistributionConfig();
    public Tags get_Tags();
    public void set_Tags(Tags value);
    internal bool IsSetTags();
}
public class Amazon.CloudFront.Model.StreamingDistributionList : object {
    private Nullable`1<bool> _isTruncated;
    private List`1<StreamingDistributionSummary> _items;
    private string _marker;
    private Nullable`1<int> _maxItems;
    private string _nextMarker;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public Nullable`1<bool> IsTruncated { get; public set; }
    public List`1<StreamingDistributionSummary> Items { get; public set; }
    [AWSPropertyAttribute]
public string Marker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxItems { get; public set; }
    public string NextMarker { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public Nullable`1<bool> get_IsTruncated();
    public void set_IsTruncated(Nullable`1<bool> value);
    internal bool IsSetIsTruncated();
    public List`1<StreamingDistributionSummary> get_Items();
    public void set_Items(List`1<StreamingDistributionSummary> value);
    internal bool IsSetItems();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxItems();
    public void set_MaxItems(Nullable`1<int> value);
    internal bool IsSetMaxItems();
    public string get_NextMarker();
    public void set_NextMarker(string value);
    internal bool IsSetNextMarker();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.StreamingDistributionNotDisabledException : AmazonCloudFrontException {
    public StreamingDistributionNotDisabledException(string message);
    public StreamingDistributionNotDisabledException(string message, Exception innerException);
    public StreamingDistributionNotDisabledException(Exception innerException);
    public StreamingDistributionNotDisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StreamingDistributionNotDisabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.StreamingDistributionSummary : object {
    private Aliases _aliases;
    private string _arn;
    private string _comment;
    private string _domainName;
    private Nullable`1<bool> _enabled;
    private string _id;
    private Nullable`1<DateTime> _lastModifiedTime;
    private PriceClass _priceClass;
    private S3Origin _s3Origin;
    private string _status;
    private TrustedSigners _trustedSigners;
    [AWSPropertyAttribute]
public Aliases Aliases { get; public set; }
    [AWSPropertyAttribute]
public string ARN { get; public set; }
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    [AWSPropertyAttribute]
public string DomainName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    [AWSPropertyAttribute]
public PriceClass PriceClass { get; public set; }
    [AWSPropertyAttribute]
public S3Origin S3Origin { get; public set; }
    [AWSPropertyAttribute]
public string Status { get; public set; }
    [AWSPropertyAttribute]
public TrustedSigners TrustedSigners { get; public set; }
    public Aliases get_Aliases();
    public void set_Aliases(Aliases value);
    internal bool IsSetAliases();
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_DomainName();
    public void set_DomainName(string value);
    internal bool IsSetDomainName();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Nullable`1<DateTime> get_LastModifiedTime();
    public void set_LastModifiedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedTime();
    public PriceClass get_PriceClass();
    public void set_PriceClass(PriceClass value);
    internal bool IsSetPriceClass();
    public S3Origin get_S3Origin();
    public void set_S3Origin(S3Origin value);
    internal bool IsSetS3Origin();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public TrustedSigners get_TrustedSigners();
    public void set_TrustedSigners(TrustedSigners value);
    internal bool IsSetTrustedSigners();
}
public class Amazon.CloudFront.Model.StreamingLoggingConfig : object {
    private string _bucket;
    private Nullable`1<bool> _enabled;
    private string _prefix;
    [AWSPropertyAttribute]
public string Bucket { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [AWSPropertyAttribute]
public string Prefix { get; public set; }
    public string get_Bucket();
    public void set_Bucket(string value);
    internal bool IsSetBucket();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
}
public class Amazon.CloudFront.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudFront.Model.TagKeys : object {
    private List`1<string> _items;
    public List`1<string> Items { get; public set; }
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
}
public class Amazon.CloudFront.Model.TagResourceRequest : AmazonCloudFrontRequest {
    private string _resource;
    private Tags _tags;
    [AWSPropertyAttribute]
public string Resource { get; public set; }
    [AWSPropertyAttribute]
public Tags Tags { get; public set; }
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public Tags get_Tags();
    public void set_Tags(Tags value);
    internal bool IsSetTags();
}
public class Amazon.CloudFront.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.Tags : object {
    private List`1<Tag> _items;
    public List`1<Tag> Items { get; public set; }
    public List`1<Tag> get_Items();
    public void set_Items(List`1<Tag> value);
    internal bool IsSetItems();
}
public class Amazon.CloudFront.Model.TestFunctionFailedException : AmazonCloudFrontException {
    public TestFunctionFailedException(string message);
    public TestFunctionFailedException(string message, Exception innerException);
    public TestFunctionFailedException(Exception innerException);
    public TestFunctionFailedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TestFunctionFailedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TestFunctionRequest : AmazonCloudFrontRequest {
    private MemoryStream _eventObject;
    private string _ifMatch;
    private string _name;
    private FunctionStage _stage;
    [AWSPropertyAttribute]
public MemoryStream EventObject { get; public set; }
    [AWSPropertyAttribute]
public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public FunctionStage Stage { get; public set; }
    public MemoryStream get_EventObject();
    public void set_EventObject(MemoryStream value);
    internal bool IsSetEventObject();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public FunctionStage get_Stage();
    public void set_Stage(FunctionStage value);
    internal bool IsSetStage();
}
public class Amazon.CloudFront.Model.TestFunctionResponse : AmazonWebServiceResponse {
    private TestResult _testResult;
    public TestResult TestResult { get; public set; }
    public TestResult get_TestResult();
    public void set_TestResult(TestResult value);
    internal bool IsSetTestResult();
}
public class Amazon.CloudFront.Model.TestResult : object {
    private string _computeUtilization;
    private string _functionErrorMessage;
    private List`1<string> _functionExecutionLogs;
    private string _functionOutput;
    private FunctionSummary _functionSummary;
    public string ComputeUtilization { get; public set; }
    [AWSPropertyAttribute]
public string FunctionErrorMessage { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> FunctionExecutionLogs { get; public set; }
    [AWSPropertyAttribute]
public string FunctionOutput { get; public set; }
    public FunctionSummary FunctionSummary { get; public set; }
    public string get_ComputeUtilization();
    public void set_ComputeUtilization(string value);
    internal bool IsSetComputeUtilization();
    public string get_FunctionErrorMessage();
    public void set_FunctionErrorMessage(string value);
    internal bool IsSetFunctionErrorMessage();
    public List`1<string> get_FunctionExecutionLogs();
    public void set_FunctionExecutionLogs(List`1<string> value);
    internal bool IsSetFunctionExecutionLogs();
    public string get_FunctionOutput();
    public void set_FunctionOutput(string value);
    internal bool IsSetFunctionOutput();
    public FunctionSummary get_FunctionSummary();
    public void set_FunctionSummary(FunctionSummary value);
    internal bool IsSetFunctionSummary();
}
public class Amazon.CloudFront.Model.TooLongCSPInResponseHeadersPolicyException : AmazonCloudFrontException {
    public TooLongCSPInResponseHeadersPolicyException(string message);
    public TooLongCSPInResponseHeadersPolicyException(string message, Exception innerException);
    public TooLongCSPInResponseHeadersPolicyException(Exception innerException);
    public TooLongCSPInResponseHeadersPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooLongCSPInResponseHeadersPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyCacheBehaviorsException : AmazonCloudFrontException {
    public TooManyCacheBehaviorsException(string message);
    public TooManyCacheBehaviorsException(string message, Exception innerException);
    public TooManyCacheBehaviorsException(Exception innerException);
    public TooManyCacheBehaviorsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyCacheBehaviorsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyCachePoliciesException : AmazonCloudFrontException {
    public TooManyCachePoliciesException(string message);
    public TooManyCachePoliciesException(string message, Exception innerException);
    public TooManyCachePoliciesException(Exception innerException);
    public TooManyCachePoliciesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyCachePoliciesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyCertificatesException : AmazonCloudFrontException {
    public TooManyCertificatesException(string message);
    public TooManyCertificatesException(string message, Exception innerException);
    public TooManyCertificatesException(Exception innerException);
    public TooManyCertificatesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyCertificatesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyCloudFrontOriginAccessIdentitiesException : AmazonCloudFrontException {
    public TooManyCloudFrontOriginAccessIdentitiesException(string message);
    public TooManyCloudFrontOriginAccessIdentitiesException(string message, Exception innerException);
    public TooManyCloudFrontOriginAccessIdentitiesException(Exception innerException);
    public TooManyCloudFrontOriginAccessIdentitiesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyCloudFrontOriginAccessIdentitiesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyContinuousDeploymentPoliciesException : AmazonCloudFrontException {
    public TooManyContinuousDeploymentPoliciesException(string message);
    public TooManyContinuousDeploymentPoliciesException(string message, Exception innerException);
    public TooManyContinuousDeploymentPoliciesException(Exception innerException);
    public TooManyContinuousDeploymentPoliciesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyContinuousDeploymentPoliciesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyCookieNamesInWhiteListException : AmazonCloudFrontException {
    public TooManyCookieNamesInWhiteListException(string message);
    public TooManyCookieNamesInWhiteListException(string message, Exception innerException);
    public TooManyCookieNamesInWhiteListException(Exception innerException);
    public TooManyCookieNamesInWhiteListException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyCookieNamesInWhiteListException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyCookiesInCachePolicyException : AmazonCloudFrontException {
    public TooManyCookiesInCachePolicyException(string message);
    public TooManyCookiesInCachePolicyException(string message, Exception innerException);
    public TooManyCookiesInCachePolicyException(Exception innerException);
    public TooManyCookiesInCachePolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyCookiesInCachePolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyCookiesInOriginRequestPolicyException : AmazonCloudFrontException {
    public TooManyCookiesInOriginRequestPolicyException(string message);
    public TooManyCookiesInOriginRequestPolicyException(string message, Exception innerException);
    public TooManyCookiesInOriginRequestPolicyException(Exception innerException);
    public TooManyCookiesInOriginRequestPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyCookiesInOriginRequestPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyCustomHeadersInResponseHeadersPolicyException : AmazonCloudFrontException {
    public TooManyCustomHeadersInResponseHeadersPolicyException(string message);
    public TooManyCustomHeadersInResponseHeadersPolicyException(string message, Exception innerException);
    public TooManyCustomHeadersInResponseHeadersPolicyException(Exception innerException);
    public TooManyCustomHeadersInResponseHeadersPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyCustomHeadersInResponseHeadersPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionCNAMEsException : AmazonCloudFrontException {
    public TooManyDistributionCNAMEsException(string message);
    public TooManyDistributionCNAMEsException(string message, Exception innerException);
    public TooManyDistributionCNAMEsException(Exception innerException);
    public TooManyDistributionCNAMEsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionCNAMEsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionsAssociatedToCachePolicyException : AmazonCloudFrontException {
    public TooManyDistributionsAssociatedToCachePolicyException(string message);
    public TooManyDistributionsAssociatedToCachePolicyException(string message, Exception innerException);
    public TooManyDistributionsAssociatedToCachePolicyException(Exception innerException);
    public TooManyDistributionsAssociatedToCachePolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionsAssociatedToCachePolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionsAssociatedToFieldLevelEncryptionConfigException : AmazonCloudFrontException {
    public TooManyDistributionsAssociatedToFieldLevelEncryptionConfigException(string message);
    public TooManyDistributionsAssociatedToFieldLevelEncryptionConfigException(string message, Exception innerException);
    public TooManyDistributionsAssociatedToFieldLevelEncryptionConfigException(Exception innerException);
    public TooManyDistributionsAssociatedToFieldLevelEncryptionConfigException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionsAssociatedToFieldLevelEncryptionConfigException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionsAssociatedToKeyGroupException : AmazonCloudFrontException {
    public TooManyDistributionsAssociatedToKeyGroupException(string message);
    public TooManyDistributionsAssociatedToKeyGroupException(string message, Exception innerException);
    public TooManyDistributionsAssociatedToKeyGroupException(Exception innerException);
    public TooManyDistributionsAssociatedToKeyGroupException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionsAssociatedToKeyGroupException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionsAssociatedToOriginAccessControlException : AmazonCloudFrontException {
    public TooManyDistributionsAssociatedToOriginAccessControlException(string message);
    public TooManyDistributionsAssociatedToOriginAccessControlException(string message, Exception innerException);
    public TooManyDistributionsAssociatedToOriginAccessControlException(Exception innerException);
    public TooManyDistributionsAssociatedToOriginAccessControlException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionsAssociatedToOriginAccessControlException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionsAssociatedToOriginRequestPolicyException : AmazonCloudFrontException {
    public TooManyDistributionsAssociatedToOriginRequestPolicyException(string message);
    public TooManyDistributionsAssociatedToOriginRequestPolicyException(string message, Exception innerException);
    public TooManyDistributionsAssociatedToOriginRequestPolicyException(Exception innerException);
    public TooManyDistributionsAssociatedToOriginRequestPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionsAssociatedToOriginRequestPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionsAssociatedToResponseHeadersPolicyException : AmazonCloudFrontException {
    public TooManyDistributionsAssociatedToResponseHeadersPolicyException(string message);
    public TooManyDistributionsAssociatedToResponseHeadersPolicyException(string message, Exception innerException);
    public TooManyDistributionsAssociatedToResponseHeadersPolicyException(Exception innerException);
    public TooManyDistributionsAssociatedToResponseHeadersPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionsAssociatedToResponseHeadersPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionsException : AmazonCloudFrontException {
    public TooManyDistributionsException(string message);
    public TooManyDistributionsException(string message, Exception innerException);
    public TooManyDistributionsException(Exception innerException);
    public TooManyDistributionsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionsWithFunctionAssociationsException : AmazonCloudFrontException {
    public TooManyDistributionsWithFunctionAssociationsException(string message);
    public TooManyDistributionsWithFunctionAssociationsException(string message, Exception innerException);
    public TooManyDistributionsWithFunctionAssociationsException(Exception innerException);
    public TooManyDistributionsWithFunctionAssociationsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionsWithFunctionAssociationsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionsWithLambdaAssociationsException : AmazonCloudFrontException {
    public TooManyDistributionsWithLambdaAssociationsException(string message);
    public TooManyDistributionsWithLambdaAssociationsException(string message, Exception innerException);
    public TooManyDistributionsWithLambdaAssociationsException(Exception innerException);
    public TooManyDistributionsWithLambdaAssociationsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionsWithLambdaAssociationsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyDistributionsWithSingleFunctionARNException : AmazonCloudFrontException {
    public TooManyDistributionsWithSingleFunctionARNException(string message);
    public TooManyDistributionsWithSingleFunctionARNException(string message, Exception innerException);
    public TooManyDistributionsWithSingleFunctionARNException(Exception innerException);
    public TooManyDistributionsWithSingleFunctionARNException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyDistributionsWithSingleFunctionARNException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyFieldLevelEncryptionConfigsException : AmazonCloudFrontException {
    public TooManyFieldLevelEncryptionConfigsException(string message);
    public TooManyFieldLevelEncryptionConfigsException(string message, Exception innerException);
    public TooManyFieldLevelEncryptionConfigsException(Exception innerException);
    public TooManyFieldLevelEncryptionConfigsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyFieldLevelEncryptionConfigsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyFieldLevelEncryptionContentTypeProfilesException : AmazonCloudFrontException {
    public TooManyFieldLevelEncryptionContentTypeProfilesException(string message);
    public TooManyFieldLevelEncryptionContentTypeProfilesException(string message, Exception innerException);
    public TooManyFieldLevelEncryptionContentTypeProfilesException(Exception innerException);
    public TooManyFieldLevelEncryptionContentTypeProfilesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyFieldLevelEncryptionContentTypeProfilesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyFieldLevelEncryptionEncryptionEntitiesException : AmazonCloudFrontException {
    public TooManyFieldLevelEncryptionEncryptionEntitiesException(string message);
    public TooManyFieldLevelEncryptionEncryptionEntitiesException(string message, Exception innerException);
    public TooManyFieldLevelEncryptionEncryptionEntitiesException(Exception innerException);
    public TooManyFieldLevelEncryptionEncryptionEntitiesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyFieldLevelEncryptionEncryptionEntitiesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyFieldLevelEncryptionFieldPatternsException : AmazonCloudFrontException {
    public TooManyFieldLevelEncryptionFieldPatternsException(string message);
    public TooManyFieldLevelEncryptionFieldPatternsException(string message, Exception innerException);
    public TooManyFieldLevelEncryptionFieldPatternsException(Exception innerException);
    public TooManyFieldLevelEncryptionFieldPatternsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyFieldLevelEncryptionFieldPatternsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyFieldLevelEncryptionProfilesException : AmazonCloudFrontException {
    public TooManyFieldLevelEncryptionProfilesException(string message);
    public TooManyFieldLevelEncryptionProfilesException(string message, Exception innerException);
    public TooManyFieldLevelEncryptionProfilesException(Exception innerException);
    public TooManyFieldLevelEncryptionProfilesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyFieldLevelEncryptionProfilesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyFieldLevelEncryptionQueryArgProfilesException : AmazonCloudFrontException {
    public TooManyFieldLevelEncryptionQueryArgProfilesException(string message);
    public TooManyFieldLevelEncryptionQueryArgProfilesException(string message, Exception innerException);
    public TooManyFieldLevelEncryptionQueryArgProfilesException(Exception innerException);
    public TooManyFieldLevelEncryptionQueryArgProfilesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyFieldLevelEncryptionQueryArgProfilesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyFunctionAssociationsException : AmazonCloudFrontException {
    public TooManyFunctionAssociationsException(string message);
    public TooManyFunctionAssociationsException(string message, Exception innerException);
    public TooManyFunctionAssociationsException(Exception innerException);
    public TooManyFunctionAssociationsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyFunctionAssociationsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyFunctionsException : AmazonCloudFrontException {
    public TooManyFunctionsException(string message);
    public TooManyFunctionsException(string message, Exception innerException);
    public TooManyFunctionsException(Exception innerException);
    public TooManyFunctionsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyFunctionsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyHeadersInCachePolicyException : AmazonCloudFrontException {
    public TooManyHeadersInCachePolicyException(string message);
    public TooManyHeadersInCachePolicyException(string message, Exception innerException);
    public TooManyHeadersInCachePolicyException(Exception innerException);
    public TooManyHeadersInCachePolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyHeadersInCachePolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyHeadersInForwardedValuesException : AmazonCloudFrontException {
    public TooManyHeadersInForwardedValuesException(string message);
    public TooManyHeadersInForwardedValuesException(string message, Exception innerException);
    public TooManyHeadersInForwardedValuesException(Exception innerException);
    public TooManyHeadersInForwardedValuesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyHeadersInForwardedValuesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyHeadersInOriginRequestPolicyException : AmazonCloudFrontException {
    public TooManyHeadersInOriginRequestPolicyException(string message);
    public TooManyHeadersInOriginRequestPolicyException(string message, Exception innerException);
    public TooManyHeadersInOriginRequestPolicyException(Exception innerException);
    public TooManyHeadersInOriginRequestPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyHeadersInOriginRequestPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyInvalidationsInProgressException : AmazonCloudFrontException {
    public TooManyInvalidationsInProgressException(string message);
    public TooManyInvalidationsInProgressException(string message, Exception innerException);
    public TooManyInvalidationsInProgressException(Exception innerException);
    public TooManyInvalidationsInProgressException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyInvalidationsInProgressException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyKeyGroupsAssociatedToDistributionException : AmazonCloudFrontException {
    public TooManyKeyGroupsAssociatedToDistributionException(string message);
    public TooManyKeyGroupsAssociatedToDistributionException(string message, Exception innerException);
    public TooManyKeyGroupsAssociatedToDistributionException(Exception innerException);
    public TooManyKeyGroupsAssociatedToDistributionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyKeyGroupsAssociatedToDistributionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyKeyGroupsException : AmazonCloudFrontException {
    public TooManyKeyGroupsException(string message);
    public TooManyKeyGroupsException(string message, Exception innerException);
    public TooManyKeyGroupsException(Exception innerException);
    public TooManyKeyGroupsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyKeyGroupsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyLambdaFunctionAssociationsException : AmazonCloudFrontException {
    public TooManyLambdaFunctionAssociationsException(string message);
    public TooManyLambdaFunctionAssociationsException(string message, Exception innerException);
    public TooManyLambdaFunctionAssociationsException(Exception innerException);
    public TooManyLambdaFunctionAssociationsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyLambdaFunctionAssociationsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyOriginAccessControlsException : AmazonCloudFrontException {
    public TooManyOriginAccessControlsException(string message);
    public TooManyOriginAccessControlsException(string message, Exception innerException);
    public TooManyOriginAccessControlsException(Exception innerException);
    public TooManyOriginAccessControlsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyOriginAccessControlsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyOriginCustomHeadersException : AmazonCloudFrontException {
    public TooManyOriginCustomHeadersException(string message);
    public TooManyOriginCustomHeadersException(string message, Exception innerException);
    public TooManyOriginCustomHeadersException(Exception innerException);
    public TooManyOriginCustomHeadersException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyOriginCustomHeadersException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyOriginGroupsPerDistributionException : AmazonCloudFrontException {
    public TooManyOriginGroupsPerDistributionException(string message);
    public TooManyOriginGroupsPerDistributionException(string message, Exception innerException);
    public TooManyOriginGroupsPerDistributionException(Exception innerException);
    public TooManyOriginGroupsPerDistributionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyOriginGroupsPerDistributionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyOriginRequestPoliciesException : AmazonCloudFrontException {
    public TooManyOriginRequestPoliciesException(string message);
    public TooManyOriginRequestPoliciesException(string message, Exception innerException);
    public TooManyOriginRequestPoliciesException(Exception innerException);
    public TooManyOriginRequestPoliciesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyOriginRequestPoliciesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyOriginsException : AmazonCloudFrontException {
    public TooManyOriginsException(string message);
    public TooManyOriginsException(string message, Exception innerException);
    public TooManyOriginsException(Exception innerException);
    public TooManyOriginsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyOriginsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyPublicKeysException : AmazonCloudFrontException {
    public TooManyPublicKeysException(string message);
    public TooManyPublicKeysException(string message, Exception innerException);
    public TooManyPublicKeysException(Exception innerException);
    public TooManyPublicKeysException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyPublicKeysException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyPublicKeysInKeyGroupException : AmazonCloudFrontException {
    public TooManyPublicKeysInKeyGroupException(string message);
    public TooManyPublicKeysInKeyGroupException(string message, Exception innerException);
    public TooManyPublicKeysInKeyGroupException(Exception innerException);
    public TooManyPublicKeysInKeyGroupException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyPublicKeysInKeyGroupException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyQueryStringParametersException : AmazonCloudFrontException {
    public TooManyQueryStringParametersException(string message);
    public TooManyQueryStringParametersException(string message, Exception innerException);
    public TooManyQueryStringParametersException(Exception innerException);
    public TooManyQueryStringParametersException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyQueryStringParametersException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyQueryStringsInCachePolicyException : AmazonCloudFrontException {
    public TooManyQueryStringsInCachePolicyException(string message);
    public TooManyQueryStringsInCachePolicyException(string message, Exception innerException);
    public TooManyQueryStringsInCachePolicyException(Exception innerException);
    public TooManyQueryStringsInCachePolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyQueryStringsInCachePolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyQueryStringsInOriginRequestPolicyException : AmazonCloudFrontException {
    public TooManyQueryStringsInOriginRequestPolicyException(string message);
    public TooManyQueryStringsInOriginRequestPolicyException(string message, Exception innerException);
    public TooManyQueryStringsInOriginRequestPolicyException(Exception innerException);
    public TooManyQueryStringsInOriginRequestPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyQueryStringsInOriginRequestPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyRealtimeLogConfigsException : AmazonCloudFrontException {
    public TooManyRealtimeLogConfigsException(string message);
    public TooManyRealtimeLogConfigsException(string message, Exception innerException);
    public TooManyRealtimeLogConfigsException(Exception innerException);
    public TooManyRealtimeLogConfigsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRealtimeLogConfigsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyRemoveHeadersInResponseHeadersPolicyException : AmazonCloudFrontException {
    public TooManyRemoveHeadersInResponseHeadersPolicyException(string message);
    public TooManyRemoveHeadersInResponseHeadersPolicyException(string message, Exception innerException);
    public TooManyRemoveHeadersInResponseHeadersPolicyException(Exception innerException);
    public TooManyRemoveHeadersInResponseHeadersPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRemoveHeadersInResponseHeadersPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyResponseHeadersPoliciesException : AmazonCloudFrontException {
    public TooManyResponseHeadersPoliciesException(string message);
    public TooManyResponseHeadersPoliciesException(string message, Exception innerException);
    public TooManyResponseHeadersPoliciesException(Exception innerException);
    public TooManyResponseHeadersPoliciesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyResponseHeadersPoliciesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyStreamingDistributionCNAMEsException : AmazonCloudFrontException {
    public TooManyStreamingDistributionCNAMEsException(string message);
    public TooManyStreamingDistributionCNAMEsException(string message, Exception innerException);
    public TooManyStreamingDistributionCNAMEsException(Exception innerException);
    public TooManyStreamingDistributionCNAMEsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyStreamingDistributionCNAMEsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyStreamingDistributionsException : AmazonCloudFrontException {
    public TooManyStreamingDistributionsException(string message);
    public TooManyStreamingDistributionsException(string message, Exception innerException);
    public TooManyStreamingDistributionsException(Exception innerException);
    public TooManyStreamingDistributionsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyStreamingDistributionsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TooManyTrustedSignersException : AmazonCloudFrontException {
    public TooManyTrustedSignersException(string message);
    public TooManyTrustedSignersException(string message, Exception innerException);
    public TooManyTrustedSignersException(Exception innerException);
    public TooManyTrustedSignersException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTrustedSignersException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TrafficConfig : object {
    private ContinuousDeploymentSingleHeaderConfig _singleHeaderConfig;
    private ContinuousDeploymentSingleWeightConfig _singleWeightConfig;
    private ContinuousDeploymentPolicyType _type;
    public ContinuousDeploymentSingleHeaderConfig SingleHeaderConfig { get; public set; }
    public ContinuousDeploymentSingleWeightConfig SingleWeightConfig { get; public set; }
    [AWSPropertyAttribute]
public ContinuousDeploymentPolicyType Type { get; public set; }
    public ContinuousDeploymentSingleHeaderConfig get_SingleHeaderConfig();
    public void set_SingleHeaderConfig(ContinuousDeploymentSingleHeaderConfig value);
    internal bool IsSetSingleHeaderConfig();
    public ContinuousDeploymentSingleWeightConfig get_SingleWeightConfig();
    public void set_SingleWeightConfig(ContinuousDeploymentSingleWeightConfig value);
    internal bool IsSetSingleWeightConfig();
    public ContinuousDeploymentPolicyType get_Type();
    public void set_Type(ContinuousDeploymentPolicyType value);
    internal bool IsSetType();
}
public class Amazon.CloudFront.Model.TrustedKeyGroupDoesNotExistException : AmazonCloudFrontException {
    public TrustedKeyGroupDoesNotExistException(string message);
    public TrustedKeyGroupDoesNotExistException(string message, Exception innerException);
    public TrustedKeyGroupDoesNotExistException(Exception innerException);
    public TrustedKeyGroupDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrustedKeyGroupDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TrustedKeyGroups : object {
    private Nullable`1<bool> _enabled;
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.TrustedSignerDoesNotExistException : AmazonCloudFrontException {
    public TrustedSignerDoesNotExistException(string message);
    public TrustedSignerDoesNotExistException(string message, Exception innerException);
    public TrustedSignerDoesNotExistException(Exception innerException);
    public TrustedSignerDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrustedSignerDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.TrustedSigners : object {
    private Nullable`1<bool> _enabled;
    private List`1<string> _items;
    private Nullable`1<int> _quantity;
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public List`1<string> Items { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Quantity { get; public set; }
    public TrustedSigners(List`1<string> items);
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<string> get_Items();
    public void set_Items(List`1<string> value);
    internal bool IsSetItems();
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    internal bool IsSetQuantity();
}
public class Amazon.CloudFront.Model.UnsupportedOperationException : AmazonCloudFrontException {
    public UnsupportedOperationException(string message);
    public UnsupportedOperationException(string message, Exception innerException);
    public UnsupportedOperationException(Exception innerException);
    public UnsupportedOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedOperationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudFront.Model.UntagResourceRequest : AmazonCloudFrontRequest {
    private string _resource;
    private TagKeys _tagKeys;
    [AWSPropertyAttribute]
public string Resource { get; public set; }
    [AWSPropertyAttribute]
public TagKeys TagKeys { get; public set; }
    public string get_Resource();
    public void set_Resource(string value);
    internal bool IsSetResource();
    public TagKeys get_TagKeys();
    public void set_TagKeys(TagKeys value);
    internal bool IsSetTagKeys();
}
public class Amazon.CloudFront.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudFront.Model.UpdateCachePolicyRequest : AmazonCloudFrontRequest {
    private CachePolicyConfig _cachePolicyConfig;
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public CachePolicyConfig CachePolicyConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public CachePolicyConfig get_CachePolicyConfig();
    public void set_CachePolicyConfig(CachePolicyConfig value);
    internal bool IsSetCachePolicyConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.UpdateCachePolicyResponse : AmazonWebServiceResponse {
    private CachePolicy _cachePolicy;
    private string _eTag;
    public CachePolicy CachePolicy { get; public set; }
    public string ETag { get; public set; }
    public CachePolicy get_CachePolicy();
    public void set_CachePolicy(CachePolicy value);
    internal bool IsSetCachePolicy();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.UpdateCloudFrontOriginAccessIdentityRequest : AmazonCloudFrontRequest {
    private CloudFrontOriginAccessIdentityConfig _cloudFrontOriginAccessIdentityConfig;
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public CloudFrontOriginAccessIdentityConfig CloudFrontOriginAccessIdentityConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public UpdateCloudFrontOriginAccessIdentityRequest(string id, string ifMatch, CloudFrontOriginAccessIdentityConfig cloudFrontOriginAccessIdentityConfig);
    public CloudFrontOriginAccessIdentityConfig get_CloudFrontOriginAccessIdentityConfig();
    public void set_CloudFrontOriginAccessIdentityConfig(CloudFrontOriginAccessIdentityConfig value);
    internal bool IsSetCloudFrontOriginAccessIdentityConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.UpdateCloudFrontOriginAccessIdentityResponse : AmazonWebServiceResponse {
    private CloudFrontOriginAccessIdentity _cloudFrontOriginAccessIdentity;
    private string _eTag;
    public CloudFrontOriginAccessIdentity CloudFrontOriginAccessIdentity { get; public set; }
    public string ETag { get; public set; }
    public CloudFrontOriginAccessIdentity get_CloudFrontOriginAccessIdentity();
    public void set_CloudFrontOriginAccessIdentity(CloudFrontOriginAccessIdentity value);
    internal bool IsSetCloudFrontOriginAccessIdentity();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.UpdateContinuousDeploymentPolicyRequest : AmazonCloudFrontRequest {
    private ContinuousDeploymentPolicyConfig _continuousDeploymentPolicyConfig;
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public ContinuousDeploymentPolicyConfig ContinuousDeploymentPolicyConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public ContinuousDeploymentPolicyConfig get_ContinuousDeploymentPolicyConfig();
    public void set_ContinuousDeploymentPolicyConfig(ContinuousDeploymentPolicyConfig value);
    internal bool IsSetContinuousDeploymentPolicyConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.UpdateContinuousDeploymentPolicyResponse : AmazonWebServiceResponse {
    private ContinuousDeploymentPolicy _continuousDeploymentPolicy;
    private string _eTag;
    public ContinuousDeploymentPolicy ContinuousDeploymentPolicy { get; public set; }
    public string ETag { get; public set; }
    public ContinuousDeploymentPolicy get_ContinuousDeploymentPolicy();
    public void set_ContinuousDeploymentPolicy(ContinuousDeploymentPolicy value);
    internal bool IsSetContinuousDeploymentPolicy();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.UpdateDistributionRequest : AmazonCloudFrontRequest {
    private DistributionConfig _distributionConfig;
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public DistributionConfig DistributionConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public UpdateDistributionRequest(string id, string ifMatch, DistributionConfig distributionConfig);
    public DistributionConfig get_DistributionConfig();
    public void set_DistributionConfig(DistributionConfig value);
    internal bool IsSetDistributionConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.UpdateDistributionResponse : AmazonWebServiceResponse {
    private Distribution _distribution;
    private string _eTag;
    public Distribution Distribution { get; public set; }
    public string ETag { get; public set; }
    public Distribution get_Distribution();
    public void set_Distribution(Distribution value);
    internal bool IsSetDistribution();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.UpdateDistributionWithStagingConfigRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    private string _stagingDistributionId;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public string StagingDistributionId { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public string get_StagingDistributionId();
    public void set_StagingDistributionId(string value);
    internal bool IsSetStagingDistributionId();
}
public class Amazon.CloudFront.Model.UpdateDistributionWithStagingConfigResponse : AmazonWebServiceResponse {
    private Distribution _distribution;
    private string _eTag;
    public Distribution Distribution { get; public set; }
    public string ETag { get; public set; }
    public Distribution get_Distribution();
    public void set_Distribution(Distribution value);
    internal bool IsSetDistribution();
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
}
public class Amazon.CloudFront.Model.UpdateFieldLevelEncryptionConfigRequest : AmazonCloudFrontRequest {
    private FieldLevelEncryptionConfig _fieldLevelEncryptionConfig;
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public FieldLevelEncryptionConfig FieldLevelEncryptionConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public FieldLevelEncryptionConfig get_FieldLevelEncryptionConfig();
    public void set_FieldLevelEncryptionConfig(FieldLevelEncryptionConfig value);
    internal bool IsSetFieldLevelEncryptionConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.UpdateFieldLevelEncryptionConfigResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FieldLevelEncryption _fieldLevelEncryption;
    public string ETag { get; public set; }
    public FieldLevelEncryption FieldLevelEncryption { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FieldLevelEncryption get_FieldLevelEncryption();
    public void set_FieldLevelEncryption(FieldLevelEncryption value);
    internal bool IsSetFieldLevelEncryption();
}
public class Amazon.CloudFront.Model.UpdateFieldLevelEncryptionProfileRequest : AmazonCloudFrontRequest {
    private FieldLevelEncryptionProfileConfig _fieldLevelEncryptionProfileConfig;
    private string _id;
    private string _ifMatch;
    [AWSPropertyAttribute]
public FieldLevelEncryptionProfileConfig FieldLevelEncryptionProfileConfig { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    public FieldLevelEncryptionProfileConfig get_FieldLevelEncryptionProfileConfig();
    public void set_FieldLevelEncryptionProfileConfig(FieldLevelEncryptionProfileConfig value);
    internal bool IsSetFieldLevelEncryptionProfileConfig();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
}
public class Amazon.CloudFront.Model.UpdateFieldLevelEncryptionProfileResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FieldLevelEncryptionProfile _fieldLevelEncryptionProfile;
    public string ETag { get; public set; }
    public FieldLevelEncryptionProfile FieldLevelEncryptionProfile { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FieldLevelEncryptionProfile get_FieldLevelEncryptionProfile();
    public void set_FieldLevelEncryptionProfile(FieldLevelEncryptionProfile value);
    internal bool IsSetFieldLevelEncryptionProfile();
}
public class Amazon.CloudFront.Model.UpdateFunctionRequest : AmazonCloudFrontRequest {
    private MemoryStream _functionCode;
    private FunctionConfig _functionConfig;
    private string _ifMatch;
    private string _name;
    [AWSPropertyAttribute]
public MemoryStream FunctionCode { get; public set; }
    [AWSPropertyAttribute]
public FunctionConfig FunctionConfig { get; public set; }
    [AWSPropertyAttribute]
public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public MemoryStream get_FunctionCode();
    public void set_FunctionCode(MemoryStream value);
    internal bool IsSetFunctionCode();
    public FunctionConfig get_FunctionConfig();
    public void set_FunctionConfig(FunctionConfig value);
    internal bool IsSetFunctionConfig();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.UpdateFunctionResponse : AmazonWebServiceResponse {
    private string _eTag;
    private FunctionSummary _functionSummary;
    public string ETag { get; public set; }
    public FunctionSummary FunctionSummary { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public FunctionSummary get_FunctionSummary();
    public void set_FunctionSummary(FunctionSummary value);
    internal bool IsSetFunctionSummary();
}
public class Amazon.CloudFront.Model.UpdateKeyGroupRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    private KeyGroupConfig _keyGroupConfig;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public KeyGroupConfig KeyGroupConfig { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public KeyGroupConfig get_KeyGroupConfig();
    public void set_KeyGroupConfig(KeyGroupConfig value);
    internal bool IsSetKeyGroupConfig();
}
public class Amazon.CloudFront.Model.UpdateKeyGroupResponse : AmazonWebServiceResponse {
    private string _eTag;
    private KeyGroup _keyGroup;
    public string ETag { get; public set; }
    public KeyGroup KeyGroup { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public KeyGroup get_KeyGroup();
    public void set_KeyGroup(KeyGroup value);
    internal bool IsSetKeyGroup();
}
public class Amazon.CloudFront.Model.UpdateKeyValueStoreRequest : AmazonCloudFrontRequest {
    private string _comment;
    private string _ifMatch;
    private string _name;
    [AWSPropertyAttribute]
public string Comment { get; public set; }
    [AWSPropertyAttribute]
public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Comment();
    public void set_Comment(string value);
    internal bool IsSetComment();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudFront.Model.UpdateKeyValueStoreResponse : AmazonWebServiceResponse {
    private string _eTag;
    private KeyValueStore _keyValueStore;
    public string ETag { get; public set; }
    public KeyValueStore KeyValueStore { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public KeyValueStore get_KeyValueStore();
    public void set_KeyValueStore(KeyValueStore value);
    internal bool IsSetKeyValueStore();
}
public class Amazon.CloudFront.Model.UpdateOriginAccessControlRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    private OriginAccessControlConfig _originAccessControlConfig;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public OriginAccessControlConfig OriginAccessControlConfig { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public OriginAccessControlConfig get_OriginAccessControlConfig();
    public void set_OriginAccessControlConfig(OriginAccessControlConfig value);
    internal bool IsSetOriginAccessControlConfig();
}
public class Amazon.CloudFront.Model.UpdateOriginAccessControlResponse : AmazonWebServiceResponse {
    private string _eTag;
    private OriginAccessControl _originAccessControl;
    public string ETag { get; public set; }
    public OriginAccessControl OriginAccessControl { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public OriginAccessControl get_OriginAccessControl();
    public void set_OriginAccessControl(OriginAccessControl value);
    internal bool IsSetOriginAccessControl();
}
public class Amazon.CloudFront.Model.UpdateOriginRequestPolicyRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    private OriginRequestPolicyConfig _originRequestPolicyConfig;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public OriginRequestPolicyConfig OriginRequestPolicyConfig { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public OriginRequestPolicyConfig get_OriginRequestPolicyConfig();
    public void set_OriginRequestPolicyConfig(OriginRequestPolicyConfig value);
    internal bool IsSetOriginRequestPolicyConfig();
}
public class Amazon.CloudFront.Model.UpdateOriginRequestPolicyResponse : AmazonWebServiceResponse {
    private string _eTag;
    private OriginRequestPolicy _originRequestPolicy;
    public string ETag { get; public set; }
    public OriginRequestPolicy OriginRequestPolicy { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public OriginRequestPolicy get_OriginRequestPolicy();
    public void set_OriginRequestPolicy(OriginRequestPolicy value);
    internal bool IsSetOriginRequestPolicy();
}
public class Amazon.CloudFront.Model.UpdatePublicKeyRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    private PublicKeyConfig _publicKeyConfig;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public PublicKeyConfig PublicKeyConfig { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public PublicKeyConfig get_PublicKeyConfig();
    public void set_PublicKeyConfig(PublicKeyConfig value);
    internal bool IsSetPublicKeyConfig();
}
public class Amazon.CloudFront.Model.UpdatePublicKeyResponse : AmazonWebServiceResponse {
    private string _eTag;
    private PublicKey _publicKey;
    public string ETag { get; public set; }
    public PublicKey PublicKey { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public PublicKey get_PublicKey();
    public void set_PublicKey(PublicKey value);
    internal bool IsSetPublicKey();
}
public class Amazon.CloudFront.Model.UpdateRealtimeLogConfigRequest : AmazonCloudFrontRequest {
    private string _arn;
    private List`1<EndPoint> _endPoints;
    private List`1<string> _fields;
    private string _name;
    private Nullable`1<long> _samplingRate;
    public string ARN { get; public set; }
    public List`1<EndPoint> EndPoints { get; public set; }
    public List`1<string> Fields { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<long> SamplingRate { get; public set; }
    public string get_ARN();
    public void set_ARN(string value);
    internal bool IsSetARN();
    public List`1<EndPoint> get_EndPoints();
    public void set_EndPoints(List`1<EndPoint> value);
    internal bool IsSetEndPoints();
    public List`1<string> get_Fields();
    public void set_Fields(List`1<string> value);
    internal bool IsSetFields();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<long> get_SamplingRate();
    public void set_SamplingRate(Nullable`1<long> value);
    internal bool IsSetSamplingRate();
}
public class Amazon.CloudFront.Model.UpdateRealtimeLogConfigResponse : AmazonWebServiceResponse {
    private RealtimeLogConfig _realtimeLogConfig;
    public RealtimeLogConfig RealtimeLogConfig { get; public set; }
    public RealtimeLogConfig get_RealtimeLogConfig();
    public void set_RealtimeLogConfig(RealtimeLogConfig value);
    internal bool IsSetRealtimeLogConfig();
}
public class Amazon.CloudFront.Model.UpdateResponseHeadersPolicyRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    private ResponseHeadersPolicyConfig _responseHeadersPolicyConfig;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public ResponseHeadersPolicyConfig ResponseHeadersPolicyConfig { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public ResponseHeadersPolicyConfig get_ResponseHeadersPolicyConfig();
    public void set_ResponseHeadersPolicyConfig(ResponseHeadersPolicyConfig value);
    internal bool IsSetResponseHeadersPolicyConfig();
}
public class Amazon.CloudFront.Model.UpdateResponseHeadersPolicyResponse : AmazonWebServiceResponse {
    private string _eTag;
    private ResponseHeadersPolicy _responseHeadersPolicy;
    public string ETag { get; public set; }
    public ResponseHeadersPolicy ResponseHeadersPolicy { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public ResponseHeadersPolicy get_ResponseHeadersPolicy();
    public void set_ResponseHeadersPolicy(ResponseHeadersPolicy value);
    internal bool IsSetResponseHeadersPolicy();
}
public class Amazon.CloudFront.Model.UpdateStreamingDistributionRequest : AmazonCloudFrontRequest {
    private string _id;
    private string _ifMatch;
    private StreamingDistributionConfig _streamingDistributionConfig;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string IfMatch { get; public set; }
    [AWSPropertyAttribute]
public StreamingDistributionConfig StreamingDistributionConfig { get; public set; }
    public UpdateStreamingDistributionRequest(string id, string ifMatch, StreamingDistributionConfig streamingDistributionConfig);
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_IfMatch();
    public void set_IfMatch(string value);
    internal bool IsSetIfMatch();
    public StreamingDistributionConfig get_StreamingDistributionConfig();
    public void set_StreamingDistributionConfig(StreamingDistributionConfig value);
    internal bool IsSetStreamingDistributionConfig();
}
public class Amazon.CloudFront.Model.UpdateStreamingDistributionResponse : AmazonWebServiceResponse {
    private string _eTag;
    private StreamingDistribution _streamingDistribution;
    public string ETag { get; public set; }
    public StreamingDistribution StreamingDistribution { get; public set; }
    public string get_ETag();
    public void set_ETag(string value);
    internal bool IsSetETag();
    public StreamingDistribution get_StreamingDistribution();
    public void set_StreamingDistribution(StreamingDistribution value);
    internal bool IsSetStreamingDistribution();
}
public class Amazon.CloudFront.Model.ViewerCertificate : object {
    private string _acmCertificateArn;
    private string _certificate;
    private CertificateSource _certificateSource;
    private Nullable`1<bool> _cloudFrontDefaultCertificate;
    private string _iamCertificateId;
    private MinimumProtocolVersion _minimumProtocolVersion;
    private SSLSupportMethod _sslSupportMethod;
    public string ACMCertificateArn { get; public set; }
    [ObsoleteAttribute("This field has been deprecated. Use one of the following fields instead: ACMCertificateArn, IAMCertificateId or CloudFrontDefaultCertificate.")]
public string Certificate { get; public set; }
    [ObsoleteAttribute("This field has been deprecated. Use one of the following fields instead: ACMCertificateArn, IAMCertificateId or CloudFrontDefaultCertificate.")]
public CertificateSource CertificateSource { get; public set; }
    public Nullable`1<bool> CloudFrontDefaultCertificate { get; public set; }
    public string IAMCertificateId { get; public set; }
    public MinimumProtocolVersion MinimumProtocolVersion { get; public set; }
    public SSLSupportMethod SSLSupportMethod { get; public set; }
    public string get_ACMCertificateArn();
    public void set_ACMCertificateArn(string value);
    internal bool IsSetACMCertificateArn();
    public string get_Certificate();
    public void set_Certificate(string value);
    internal bool IsSetCertificate();
    public CertificateSource get_CertificateSource();
    public void set_CertificateSource(CertificateSource value);
    internal bool IsSetCertificateSource();
    public Nullable`1<bool> get_CloudFrontDefaultCertificate();
    public void set_CloudFrontDefaultCertificate(Nullable`1<bool> value);
    internal bool IsSetCloudFrontDefaultCertificate();
    public string get_IAMCertificateId();
    public void set_IAMCertificateId(string value);
    internal bool IsSetIAMCertificateId();
    public MinimumProtocolVersion get_MinimumProtocolVersion();
    public void set_MinimumProtocolVersion(MinimumProtocolVersion value);
    internal bool IsSetMinimumProtocolVersion();
    public SSLSupportMethod get_SSLSupportMethod();
    public void set_SSLSupportMethod(SSLSupportMethod value);
    internal bool IsSetSSLSupportMethod();
}
public class Amazon.CloudFront.OriginAccessControlOriginTypes : ConstantClass {
    public static OriginAccessControlOriginTypes Lambda;
    public static OriginAccessControlOriginTypes Mediapackagev2;
    public static OriginAccessControlOriginTypes Mediastore;
    public static OriginAccessControlOriginTypes S3;
    public OriginAccessControlOriginTypes(string value);
    private static OriginAccessControlOriginTypes();
    public static OriginAccessControlOriginTypes FindValue(string value);
    public static OriginAccessControlOriginTypes op_Implicit(string value);
}
public class Amazon.CloudFront.OriginAccessControlSigningBehaviors : ConstantClass {
    public static OriginAccessControlSigningBehaviors Always;
    public static OriginAccessControlSigningBehaviors Never;
    public static OriginAccessControlSigningBehaviors NoOverride;
    public OriginAccessControlSigningBehaviors(string value);
    private static OriginAccessControlSigningBehaviors();
    public static OriginAccessControlSigningBehaviors FindValue(string value);
    public static OriginAccessControlSigningBehaviors op_Implicit(string value);
}
public class Amazon.CloudFront.OriginAccessControlSigningProtocols : ConstantClass {
    public static OriginAccessControlSigningProtocols Sigv4;
    public OriginAccessControlSigningProtocols(string value);
    private static OriginAccessControlSigningProtocols();
    public static OriginAccessControlSigningProtocols FindValue(string value);
    public static OriginAccessControlSigningProtocols op_Implicit(string value);
}
public class Amazon.CloudFront.OriginProtocolPolicy : ConstantClass {
    public static OriginProtocolPolicy HttpOnly;
    public static OriginProtocolPolicy HttpsOnly;
    public static OriginProtocolPolicy MatchViewer;
    public OriginProtocolPolicy(string value);
    private static OriginProtocolPolicy();
    public static OriginProtocolPolicy FindValue(string value);
    public static OriginProtocolPolicy op_Implicit(string value);
}
public class Amazon.CloudFront.OriginRequestPolicyCookieBehavior : ConstantClass {
    public static OriginRequestPolicyCookieBehavior All;
    public static OriginRequestPolicyCookieBehavior AllExcept;
    public static OriginRequestPolicyCookieBehavior None;
    public static OriginRequestPolicyCookieBehavior Whitelist;
    public OriginRequestPolicyCookieBehavior(string value);
    private static OriginRequestPolicyCookieBehavior();
    public static OriginRequestPolicyCookieBehavior FindValue(string value);
    public static OriginRequestPolicyCookieBehavior op_Implicit(string value);
}
public class Amazon.CloudFront.OriginRequestPolicyHeaderBehavior : ConstantClass {
    public static OriginRequestPolicyHeaderBehavior AllExcept;
    public static OriginRequestPolicyHeaderBehavior AllViewer;
    public static OriginRequestPolicyHeaderBehavior AllViewerAndWhitelistCloudFront;
    public static OriginRequestPolicyHeaderBehavior None;
    public static OriginRequestPolicyHeaderBehavior Whitelist;
    public OriginRequestPolicyHeaderBehavior(string value);
    private static OriginRequestPolicyHeaderBehavior();
    public static OriginRequestPolicyHeaderBehavior FindValue(string value);
    public static OriginRequestPolicyHeaderBehavior op_Implicit(string value);
}
public class Amazon.CloudFront.OriginRequestPolicyQueryStringBehavior : ConstantClass {
    public static OriginRequestPolicyQueryStringBehavior All;
    public static OriginRequestPolicyQueryStringBehavior AllExcept;
    public static OriginRequestPolicyQueryStringBehavior None;
    public static OriginRequestPolicyQueryStringBehavior Whitelist;
    public OriginRequestPolicyQueryStringBehavior(string value);
    private static OriginRequestPolicyQueryStringBehavior();
    public static OriginRequestPolicyQueryStringBehavior FindValue(string value);
    public static OriginRequestPolicyQueryStringBehavior op_Implicit(string value);
}
public class Amazon.CloudFront.OriginRequestPolicyType : ConstantClass {
    public static OriginRequestPolicyType Custom;
    public static OriginRequestPolicyType Managed;
    public OriginRequestPolicyType(string value);
    private static OriginRequestPolicyType();
    public static OriginRequestPolicyType FindValue(string value);
    public static OriginRequestPolicyType op_Implicit(string value);
}
public class Amazon.CloudFront.PriceClass : ConstantClass {
    public static PriceClass PriceClass_100;
    public static PriceClass PriceClass_200;
    public static PriceClass PriceClass_All;
    public PriceClass(string value);
    private static PriceClass();
    public static PriceClass FindValue(string value);
    public static PriceClass op_Implicit(string value);
}
public class Amazon.CloudFront.RealtimeMetricsSubscriptionStatus : ConstantClass {
    public static RealtimeMetricsSubscriptionStatus Disabled;
    public static RealtimeMetricsSubscriptionStatus Enabled;
    public RealtimeMetricsSubscriptionStatus(string value);
    private static RealtimeMetricsSubscriptionStatus();
    public static RealtimeMetricsSubscriptionStatus FindValue(string value);
    public static RealtimeMetricsSubscriptionStatus op_Implicit(string value);
}
public class Amazon.CloudFront.ReferrerPolicyList : ConstantClass {
    public static ReferrerPolicyList NoReferrer;
    public static ReferrerPolicyList NoReferrerWhenDowngrade;
    public static ReferrerPolicyList Origin;
    public static ReferrerPolicyList OriginWhenCrossOrigin;
    public static ReferrerPolicyList SameOrigin;
    public static ReferrerPolicyList StrictOrigin;
    public static ReferrerPolicyList StrictOriginWhenCrossOrigin;
    public static ReferrerPolicyList UnsafeUrl;
    public ReferrerPolicyList(string value);
    private static ReferrerPolicyList();
    public static ReferrerPolicyList FindValue(string value);
    public static ReferrerPolicyList op_Implicit(string value);
}
public class Amazon.CloudFront.ResponseHeadersPolicyAccessControlAllowMethodsValues : ConstantClass {
    public static ResponseHeadersPolicyAccessControlAllowMethodsValues ALL;
    public static ResponseHeadersPolicyAccessControlAllowMethodsValues DELETE;
    public static ResponseHeadersPolicyAccessControlAllowMethodsValues GET;
    public static ResponseHeadersPolicyAccessControlAllowMethodsValues HEAD;
    public static ResponseHeadersPolicyAccessControlAllowMethodsValues OPTIONS;
    public static ResponseHeadersPolicyAccessControlAllowMethodsValues PATCH;
    public static ResponseHeadersPolicyAccessControlAllowMethodsValues POST;
    public static ResponseHeadersPolicyAccessControlAllowMethodsValues PUT;
    public ResponseHeadersPolicyAccessControlAllowMethodsValues(string value);
    private static ResponseHeadersPolicyAccessControlAllowMethodsValues();
    public static ResponseHeadersPolicyAccessControlAllowMethodsValues FindValue(string value);
    public static ResponseHeadersPolicyAccessControlAllowMethodsValues op_Implicit(string value);
}
public class Amazon.CloudFront.ResponseHeadersPolicyType : ConstantClass {
    public static ResponseHeadersPolicyType Custom;
    public static ResponseHeadersPolicyType Managed;
    public ResponseHeadersPolicyType(string value);
    private static ResponseHeadersPolicyType();
    public static ResponseHeadersPolicyType FindValue(string value);
    public static ResponseHeadersPolicyType op_Implicit(string value);
}
public abstract class Amazon.CloudFront.SignedCookies : object {
    [CompilerGeneratedAttribute]
private KeyValuePair`2<string, string> <KeyPairId>k__BackingField;
    [CompilerGeneratedAttribute]
private KeyValuePair`2<string, string> <Signature>k__BackingField;
    public KeyValuePair`2<string, string> KeyPairId { get; internal set; }
    public KeyValuePair`2<string, string> Signature { get; internal set; }
    [CompilerGeneratedAttribute]
public KeyValuePair`2<string, string> get_KeyPairId();
    [CompilerGeneratedAttribute]
internal void set_KeyPairId(KeyValuePair`2<string, string> value);
    [CompilerGeneratedAttribute]
public KeyValuePair`2<string, string> get_Signature();
    [CompilerGeneratedAttribute]
internal void set_Signature(KeyValuePair`2<string, string> value);
}
public class Amazon.CloudFront.SslProtocol : ConstantClass {
    public static SslProtocol SSLv3;
    public static SslProtocol TLSv1;
    public static SslProtocol TLSv11;
    public static SslProtocol TLSv12;
    public SslProtocol(string value);
    private static SslProtocol();
    public static SslProtocol FindValue(string value);
    public static SslProtocol op_Implicit(string value);
}
public class Amazon.CloudFront.SSLSupportMethod : ConstantClass {
    public static SSLSupportMethod SniOnly;
    public static SSLSupportMethod StaticIp;
    public static SSLSupportMethod Vip;
    public SSLSupportMethod(string value);
    private static SSLSupportMethod();
    public static SSLSupportMethod FindValue(string value);
    public static SSLSupportMethod op_Implicit(string value);
}
internal static class Amazon.CloudFront.Util.CloudFrontConstants : object {
    internal static string AmzRequestIdHeader;
    internal static string AmzDateHeader;
    internal static string AuthorizationHeader;
    internal static String[] Verbs;
    internal static string GetVerb;
    internal static string PostVerb;
    internal static string PutVerb;
    internal static string DeleteVerb;
    internal static string ServiceResource;
    internal static string ConfigQuery;
    internal static string RequestParam;
    private static CloudFrontConstants();
}
public class Amazon.CloudFront.ViewerProtocolPolicy : ConstantClass {
    public static ViewerProtocolPolicy AllowAll;
    public static ViewerProtocolPolicy HttpsOnly;
    public static ViewerProtocolPolicy RedirectToHttps;
    public ViewerProtocolPolicy(string value);
    private static ViewerProtocolPolicy();
    public static ViewerProtocolPolicy FindValue(string value);
    public static ViewerProtocolPolicy op_Implicit(string value);
}
