public class Amazon.CloudTrail.AmazonCloudTrailClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ICloudTrailPaginatorFactory _paginators;
    public ICloudTrailPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonCloudTrailClient(RegionEndpoint region);
    public AmazonCloudTrailClient(AmazonCloudTrailConfig config);
    public AmazonCloudTrailClient(AWSCredentials credentials);
    public AmazonCloudTrailClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonCloudTrailClient(AWSCredentials credentials, AmazonCloudTrailConfig clientConfig);
    public AmazonCloudTrailClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonCloudTrailClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonCloudTrailClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonCloudTrailConfig clientConfig);
    public AmazonCloudTrailClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonCloudTrailClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonCloudTrailClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonCloudTrailConfig clientConfig);
    private static AmazonCloudTrailClient();
    public sealed virtual ICloudTrailPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AddTagsResponse AddTags(AddTagsRequest request);
    public virtual Task`1<AddTagsResponse> AddTagsAsync(AddTagsRequest request, CancellationToken cancellationToken);
    internal virtual CancelQueryResponse CancelQuery(CancelQueryRequest request);
    public virtual Task`1<CancelQueryResponse> CancelQueryAsync(CancelQueryRequest request, CancellationToken cancellationToken);
    internal virtual CreateChannelResponse CreateChannel(CreateChannelRequest request);
    public virtual Task`1<CreateChannelResponse> CreateChannelAsync(CreateChannelRequest request, CancellationToken cancellationToken);
    internal virtual CreateEventDataStoreResponse CreateEventDataStore(CreateEventDataStoreRequest request);
    public virtual Task`1<CreateEventDataStoreResponse> CreateEventDataStoreAsync(CreateEventDataStoreRequest request, CancellationToken cancellationToken);
    internal virtual CreateTrailResponse CreateTrail(CreateTrailRequest request);
    public virtual Task`1<CreateTrailResponse> CreateTrailAsync(CreateTrailRequest request, CancellationToken cancellationToken);
    internal virtual DeleteChannelResponse DeleteChannel(DeleteChannelRequest request);
    public virtual Task`1<DeleteChannelResponse> DeleteChannelAsync(DeleteChannelRequest request, CancellationToken cancellationToken);
    internal virtual DeleteEventDataStoreResponse DeleteEventDataStore(DeleteEventDataStoreRequest request);
    public virtual Task`1<DeleteEventDataStoreResponse> DeleteEventDataStoreAsync(DeleteEventDataStoreRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTrailResponse DeleteTrail(DeleteTrailRequest request);
    public virtual Task`1<DeleteTrailResponse> DeleteTrailAsync(DeleteTrailRequest request, CancellationToken cancellationToken);
    internal virtual DeregisterOrganizationDelegatedAdminResponse DeregisterOrganizationDelegatedAdmin(DeregisterOrganizationDelegatedAdminRequest request);
    public virtual Task`1<DeregisterOrganizationDelegatedAdminResponse> DeregisterOrganizationDelegatedAdminAsync(DeregisterOrganizationDelegatedAdminRequest request, CancellationToken cancellationToken);
    internal virtual DescribeQueryResponse DescribeQuery(DescribeQueryRequest request);
    public virtual Task`1<DescribeQueryResponse> DescribeQueryAsync(DescribeQueryRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTrailsResponse DescribeTrails();
    internal virtual DescribeTrailsResponse DescribeTrails(DescribeTrailsRequest request);
    public virtual Task`1<DescribeTrailsResponse> DescribeTrailsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeTrailsResponse> DescribeTrailsAsync(DescribeTrailsRequest request, CancellationToken cancellationToken);
    internal virtual DisableFederationResponse DisableFederation(DisableFederationRequest request);
    public virtual Task`1<DisableFederationResponse> DisableFederationAsync(DisableFederationRequest request, CancellationToken cancellationToken);
    internal virtual EnableFederationResponse EnableFederation(EnableFederationRequest request);
    public virtual Task`1<EnableFederationResponse> EnableFederationAsync(EnableFederationRequest request, CancellationToken cancellationToken);
    internal virtual GetChannelResponse GetChannel(GetChannelRequest request);
    public virtual Task`1<GetChannelResponse> GetChannelAsync(GetChannelRequest request, CancellationToken cancellationToken);
    internal virtual GetEventDataStoreResponse GetEventDataStore(GetEventDataStoreRequest request);
    public virtual Task`1<GetEventDataStoreResponse> GetEventDataStoreAsync(GetEventDataStoreRequest request, CancellationToken cancellationToken);
    internal virtual GetEventSelectorsResponse GetEventSelectors(GetEventSelectorsRequest request);
    public virtual Task`1<GetEventSelectorsResponse> GetEventSelectorsAsync(GetEventSelectorsRequest request, CancellationToken cancellationToken);
    internal virtual GetImportResponse GetImport(GetImportRequest request);
    public virtual Task`1<GetImportResponse> GetImportAsync(GetImportRequest request, CancellationToken cancellationToken);
    internal virtual GetInsightSelectorsResponse GetInsightSelectors(GetInsightSelectorsRequest request);
    public virtual Task`1<GetInsightSelectorsResponse> GetInsightSelectorsAsync(GetInsightSelectorsRequest request, CancellationToken cancellationToken);
    internal virtual GetQueryResultsResponse GetQueryResults(GetQueryResultsRequest request);
    public virtual Task`1<GetQueryResultsResponse> GetQueryResultsAsync(GetQueryResultsRequest request, CancellationToken cancellationToken);
    internal virtual GetResourcePolicyResponse GetResourcePolicy(GetResourcePolicyRequest request);
    public virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetTrailResponse GetTrail(GetTrailRequest request);
    public virtual Task`1<GetTrailResponse> GetTrailAsync(GetTrailRequest request, CancellationToken cancellationToken);
    internal virtual GetTrailStatusResponse GetTrailStatus(GetTrailStatusRequest request);
    public virtual Task`1<GetTrailStatusResponse> GetTrailStatusAsync(GetTrailStatusRequest request, CancellationToken cancellationToken);
    internal virtual ListChannelsResponse ListChannels(ListChannelsRequest request);
    public virtual Task`1<ListChannelsResponse> ListChannelsAsync(ListChannelsRequest request, CancellationToken cancellationToken);
    internal virtual ListEventDataStoresResponse ListEventDataStores(ListEventDataStoresRequest request);
    public virtual Task`1<ListEventDataStoresResponse> ListEventDataStoresAsync(ListEventDataStoresRequest request, CancellationToken cancellationToken);
    internal virtual ListImportFailuresResponse ListImportFailures(ListImportFailuresRequest request);
    public virtual Task`1<ListImportFailuresResponse> ListImportFailuresAsync(ListImportFailuresRequest request, CancellationToken cancellationToken);
    internal virtual ListImportsResponse ListImports(ListImportsRequest request);
    public virtual Task`1<ListImportsResponse> ListImportsAsync(ListImportsRequest request, CancellationToken cancellationToken);
    internal virtual ListInsightsMetricDataResponse ListInsightsMetricData(ListInsightsMetricDataRequest request);
    public virtual Task`1<ListInsightsMetricDataResponse> ListInsightsMetricDataAsync(ListInsightsMetricDataRequest request, CancellationToken cancellationToken);
    internal virtual ListPublicKeysResponse ListPublicKeys(ListPublicKeysRequest request);
    public virtual Task`1<ListPublicKeysResponse> ListPublicKeysAsync(ListPublicKeysRequest request, CancellationToken cancellationToken);
    internal virtual ListQueriesResponse ListQueries(ListQueriesRequest request);
    public virtual Task`1<ListQueriesResponse> ListQueriesAsync(ListQueriesRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsResponse ListTags(ListTagsRequest request);
    public virtual Task`1<ListTagsResponse> ListTagsAsync(ListTagsRequest request, CancellationToken cancellationToken);
    internal virtual ListTrailsResponse ListTrails(ListTrailsRequest request);
    public virtual Task`1<ListTrailsResponse> ListTrailsAsync(ListTrailsRequest request, CancellationToken cancellationToken);
    internal virtual LookupEventsResponse LookupEvents(LookupEventsRequest request);
    public virtual Task`1<LookupEventsResponse> LookupEventsAsync(LookupEventsRequest request, CancellationToken cancellationToken);
    internal virtual PutEventSelectorsResponse PutEventSelectors(PutEventSelectorsRequest request);
    public virtual Task`1<PutEventSelectorsResponse> PutEventSelectorsAsync(PutEventSelectorsRequest request, CancellationToken cancellationToken);
    internal virtual PutInsightSelectorsResponse PutInsightSelectors(PutInsightSelectorsRequest request);
    public virtual Task`1<PutInsightSelectorsResponse> PutInsightSelectorsAsync(PutInsightSelectorsRequest request, CancellationToken cancellationToken);
    internal virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual RegisterOrganizationDelegatedAdminResponse RegisterOrganizationDelegatedAdmin(RegisterOrganizationDelegatedAdminRequest request);
    public virtual Task`1<RegisterOrganizationDelegatedAdminResponse> RegisterOrganizationDelegatedAdminAsync(RegisterOrganizationDelegatedAdminRequest request, CancellationToken cancellationToken);
    internal virtual RemoveTagsResponse RemoveTags(RemoveTagsRequest request);
    public virtual Task`1<RemoveTagsResponse> RemoveTagsAsync(RemoveTagsRequest request, CancellationToken cancellationToken);
    internal virtual RestoreEventDataStoreResponse RestoreEventDataStore(RestoreEventDataStoreRequest request);
    public virtual Task`1<RestoreEventDataStoreResponse> RestoreEventDataStoreAsync(RestoreEventDataStoreRequest request, CancellationToken cancellationToken);
    internal virtual StartEventDataStoreIngestionResponse StartEventDataStoreIngestion(StartEventDataStoreIngestionRequest request);
    public virtual Task`1<StartEventDataStoreIngestionResponse> StartEventDataStoreIngestionAsync(StartEventDataStoreIngestionRequest request, CancellationToken cancellationToken);
    internal virtual StartImportResponse StartImport(StartImportRequest request);
    public virtual Task`1<StartImportResponse> StartImportAsync(StartImportRequest request, CancellationToken cancellationToken);
    internal virtual StartLoggingResponse StartLogging(StartLoggingRequest request);
    public virtual Task`1<StartLoggingResponse> StartLoggingAsync(StartLoggingRequest request, CancellationToken cancellationToken);
    internal virtual StartQueryResponse StartQuery(StartQueryRequest request);
    public virtual Task`1<StartQueryResponse> StartQueryAsync(StartQueryRequest request, CancellationToken cancellationToken);
    internal virtual StopEventDataStoreIngestionResponse StopEventDataStoreIngestion(StopEventDataStoreIngestionRequest request);
    public virtual Task`1<StopEventDataStoreIngestionResponse> StopEventDataStoreIngestionAsync(StopEventDataStoreIngestionRequest request, CancellationToken cancellationToken);
    internal virtual StopImportResponse StopImport(StopImportRequest request);
    public virtual Task`1<StopImportResponse> StopImportAsync(StopImportRequest request, CancellationToken cancellationToken);
    internal virtual StopLoggingResponse StopLogging(StopLoggingRequest request);
    public virtual Task`1<StopLoggingResponse> StopLoggingAsync(StopLoggingRequest request, CancellationToken cancellationToken);
    internal virtual UpdateChannelResponse UpdateChannel(UpdateChannelRequest request);
    public virtual Task`1<UpdateChannelResponse> UpdateChannelAsync(UpdateChannelRequest request, CancellationToken cancellationToken);
    internal virtual UpdateEventDataStoreResponse UpdateEventDataStore(UpdateEventDataStoreRequest request);
    public virtual Task`1<UpdateEventDataStoreResponse> UpdateEventDataStoreAsync(UpdateEventDataStoreRequest request, CancellationToken cancellationToken);
    internal virtual UpdateTrailResponse UpdateTrail(UpdateTrailRequest request);
    public virtual Task`1<UpdateTrailResponse> UpdateTrailAsync(UpdateTrailRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.CloudTrail.AmazonCloudTrailConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonCloudTrailEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonCloudTrailConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.CloudTrail.AmazonCloudTrailDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonCloudTrailDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.CloudTrail.AmazonCloudTrailException : AmazonServiceException {
    public AmazonCloudTrailException(string message);
    public AmazonCloudTrailException(string message, Exception innerException);
    public AmazonCloudTrailException(Exception innerException);
    public AmazonCloudTrailException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonCloudTrailException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.AmazonCloudTrailRequest : AmazonWebServiceRequest {
}
public class Amazon.CloudTrail.BillingMode : ConstantClass {
    public static BillingMode EXTENDABLE_RETENTION_PRICING;
    public static BillingMode FIXED_RETENTION_PRICING;
    public BillingMode(string value);
    private static BillingMode();
    public static BillingMode FindValue(string value);
    public static BillingMode op_Implicit(string value);
}
public class Amazon.CloudTrail.DeliveryStatus : ConstantClass {
    public static DeliveryStatus ACCESS_DENIED;
    public static DeliveryStatus ACCESS_DENIED_SIGNING_FILE;
    public static DeliveryStatus CANCELLED;
    public static DeliveryStatus FAILED;
    public static DeliveryStatus FAILED_SIGNING_FILE;
    public static DeliveryStatus PENDING;
    public static DeliveryStatus RESOURCE_NOT_FOUND;
    public static DeliveryStatus SUCCESS;
    public static DeliveryStatus UNKNOWN;
    public DeliveryStatus(string value);
    private static DeliveryStatus();
    public static DeliveryStatus FindValue(string value);
    public static DeliveryStatus op_Implicit(string value);
}
public class Amazon.CloudTrail.DestinationType : ConstantClass {
    public static DestinationType AWS_SERVICE;
    public static DestinationType EVENT_DATA_STORE;
    public DestinationType(string value);
    private static DestinationType();
    public static DestinationType FindValue(string value);
    public static DestinationType op_Implicit(string value);
}
public class Amazon.CloudTrail.Endpoints.CloudTrailEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.CloudTrail.EventCategory : ConstantClass {
    public static EventCategory Insight;
    public EventCategory(string value);
    private static EventCategory();
    public static EventCategory FindValue(string value);
    public static EventCategory op_Implicit(string value);
}
public class Amazon.CloudTrail.EventDataStoreStatus : ConstantClass {
    public static EventDataStoreStatus CREATED;
    public static EventDataStoreStatus ENABLED;
    public static EventDataStoreStatus PENDING_DELETION;
    public static EventDataStoreStatus STARTING_INGESTION;
    public static EventDataStoreStatus STOPPED_INGESTION;
    public static EventDataStoreStatus STOPPING_INGESTION;
    public EventDataStoreStatus(string value);
    private static EventDataStoreStatus();
    public static EventDataStoreStatus FindValue(string value);
    public static EventDataStoreStatus op_Implicit(string value);
}
public class Amazon.CloudTrail.FederationStatus : ConstantClass {
    public static FederationStatus DISABLED;
    public static FederationStatus DISABLING;
    public static FederationStatus ENABLED;
    public static FederationStatus ENABLING;
    public FederationStatus(string value);
    private static FederationStatus();
    public static FederationStatus FindValue(string value);
    public static FederationStatus op_Implicit(string value);
}
public interface Amazon.CloudTrail.IAmazonCloudTrail {
    public ICloudTrailPaginatorFactory Paginators { get; }
    public abstract virtual ICloudTrailPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AddTagsResponse> AddTagsAsync(AddTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelQueryResponse> CancelQueryAsync(CancelQueryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateChannelResponse> CreateChannelAsync(CreateChannelRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateEventDataStoreResponse> CreateEventDataStoreAsync(CreateEventDataStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTrailResponse> CreateTrailAsync(CreateTrailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteChannelResponse> DeleteChannelAsync(DeleteChannelRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteEventDataStoreResponse> DeleteEventDataStoreAsync(DeleteEventDataStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTrailResponse> DeleteTrailAsync(DeleteTrailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeregisterOrganizationDelegatedAdminResponse> DeregisterOrganizationDelegatedAdminAsync(DeregisterOrganizationDelegatedAdminRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeQueryResponse> DescribeQueryAsync(DescribeQueryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTrailsResponse> DescribeTrailsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTrailsResponse> DescribeTrailsAsync(DescribeTrailsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableFederationResponse> DisableFederationAsync(DisableFederationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableFederationResponse> EnableFederationAsync(EnableFederationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetChannelResponse> GetChannelAsync(GetChannelRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetEventDataStoreResponse> GetEventDataStoreAsync(GetEventDataStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetEventSelectorsResponse> GetEventSelectorsAsync(GetEventSelectorsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetImportResponse> GetImportAsync(GetImportRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetInsightSelectorsResponse> GetInsightSelectorsAsync(GetInsightSelectorsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetQueryResultsResponse> GetQueryResultsAsync(GetQueryResultsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTrailResponse> GetTrailAsync(GetTrailRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetTrailStatusResponse> GetTrailStatusAsync(GetTrailStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListChannelsResponse> ListChannelsAsync(ListChannelsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListEventDataStoresResponse> ListEventDataStoresAsync(ListEventDataStoresRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListImportFailuresResponse> ListImportFailuresAsync(ListImportFailuresRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListImportsResponse> ListImportsAsync(ListImportsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListInsightsMetricDataResponse> ListInsightsMetricDataAsync(ListInsightsMetricDataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListPublicKeysResponse> ListPublicKeysAsync(ListPublicKeysRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListQueriesResponse> ListQueriesAsync(ListQueriesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsResponse> ListTagsAsync(ListTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTrailsResponse> ListTrailsAsync(ListTrailsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LookupEventsResponse> LookupEventsAsync(LookupEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutEventSelectorsResponse> PutEventSelectorsAsync(PutEventSelectorsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutInsightSelectorsResponse> PutInsightSelectorsAsync(PutInsightSelectorsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RegisterOrganizationDelegatedAdminResponse> RegisterOrganizationDelegatedAdminAsync(RegisterOrganizationDelegatedAdminRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTagsResponse> RemoveTagsAsync(RemoveTagsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreEventDataStoreResponse> RestoreEventDataStoreAsync(RestoreEventDataStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartEventDataStoreIngestionResponse> StartEventDataStoreIngestionAsync(StartEventDataStoreIngestionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartImportResponse> StartImportAsync(StartImportRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartLoggingResponse> StartLoggingAsync(StartLoggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartQueryResponse> StartQueryAsync(StartQueryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopEventDataStoreIngestionResponse> StopEventDataStoreIngestionAsync(StopEventDataStoreIngestionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopImportResponse> StopImportAsync(StopImportRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopLoggingResponse> StopLoggingAsync(StopLoggingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateChannelResponse> UpdateChannelAsync(UpdateChannelRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateEventDataStoreResponse> UpdateEventDataStoreAsync(UpdateEventDataStoreRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTrailResponse> UpdateTrailAsync(UpdateTrailRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.CloudTrail.AmazonCloudTrailConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.CloudTrail.ImportFailureStatus : ConstantClass {
    public static ImportFailureStatus FAILED;
    public static ImportFailureStatus RETRY;
    public static ImportFailureStatus SUCCEEDED;
    public ImportFailureStatus(string value);
    private static ImportFailureStatus();
    public static ImportFailureStatus FindValue(string value);
    public static ImportFailureStatus op_Implicit(string value);
}
public class Amazon.CloudTrail.ImportStatus : ConstantClass {
    public static ImportStatus COMPLETED;
    public static ImportStatus FAILED;
    public static ImportStatus IN_PROGRESS;
    public static ImportStatus INITIALIZING;
    public static ImportStatus STOPPED;
    public ImportStatus(string value);
    private static ImportStatus();
    public static ImportStatus FindValue(string value);
    public static ImportStatus op_Implicit(string value);
}
public class Amazon.CloudTrail.InsightsMetricDataType : ConstantClass {
    public static InsightsMetricDataType FillWithZeros;
    public static InsightsMetricDataType NonZeroData;
    public InsightsMetricDataType(string value);
    private static InsightsMetricDataType();
    public static InsightsMetricDataType FindValue(string value);
    public static InsightsMetricDataType op_Implicit(string value);
}
public class Amazon.CloudTrail.InsightType : ConstantClass {
    public static InsightType ApiCallRateInsight;
    public static InsightType ApiErrorRateInsight;
    public InsightType(string value);
    private static InsightType();
    public static InsightType FindValue(string value);
    public static InsightType op_Implicit(string value);
}
public class Amazon.CloudTrail.Internal.AmazonCloudTrailEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.CloudTrail.Internal.AmazonCloudTrailEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.CloudTrail.Internal.AmazonCloudTrailMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.CloudTrail.LookupAttributeKey : ConstantClass {
    public static LookupAttributeKey AccessKeyId;
    public static LookupAttributeKey EventId;
    public static LookupAttributeKey EventName;
    public static LookupAttributeKey EventSource;
    public static LookupAttributeKey ReadOnly;
    public static LookupAttributeKey ResourceName;
    public static LookupAttributeKey ResourceType;
    public static LookupAttributeKey Username;
    public LookupAttributeKey(string value);
    private static LookupAttributeKey();
    public static LookupAttributeKey FindValue(string value);
    public static LookupAttributeKey op_Implicit(string value);
}
public class Amazon.CloudTrail.Model.AccessDeniedException : AmazonCloudTrailException {
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception innerException);
    public AccessDeniedException(Exception innerException);
    public AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.AccountHasOngoingImportException : AmazonCloudTrailException {
    public AccountHasOngoingImportException(string message);
    public AccountHasOngoingImportException(string message, Exception innerException);
    public AccountHasOngoingImportException(Exception innerException);
    public AccountHasOngoingImportException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccountHasOngoingImportException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.AccountNotFoundException : AmazonCloudTrailException {
    public AccountNotFoundException(string message);
    public AccountNotFoundException(string message, Exception innerException);
    public AccountNotFoundException(Exception innerException);
    public AccountNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccountNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.AccountNotRegisteredException : AmazonCloudTrailException {
    public AccountNotRegisteredException(string message);
    public AccountNotRegisteredException(string message, Exception innerException);
    public AccountNotRegisteredException(Exception innerException);
    public AccountNotRegisteredException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccountNotRegisteredException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.AccountRegisteredException : AmazonCloudTrailException {
    public AccountRegisteredException(string message);
    public AccountRegisteredException(string message, Exception innerException);
    public AccountRegisteredException(Exception innerException);
    public AccountRegisteredException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccountRegisteredException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.AddTagsRequest : AmazonCloudTrailRequest {
    private string _resourceId;
    private List`1<Tag> _tagsList;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> TagsList { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public List`1<Tag> get_TagsList();
    public void set_TagsList(List`1<Tag> value);
    internal bool IsSetTagsList();
}
public class Amazon.CloudTrail.Model.AddTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.AdvancedEventSelector : object {
    private List`1<AdvancedFieldSelector> _fieldSelectors;
    private string _name;
    [AWSPropertyAttribute]
public List`1<AdvancedFieldSelector> FieldSelectors { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<AdvancedFieldSelector> get_FieldSelectors();
    public void set_FieldSelectors(List`1<AdvancedFieldSelector> value);
    internal bool IsSetFieldSelectors();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudTrail.Model.AdvancedFieldSelector : object {
    private List`1<string> _endsWith;
    private List`1<string> _equals;
    private string _field;
    private List`1<string> _notEndsWith;
    private List`1<string> _notEquals;
    private List`1<string> _notStartsWith;
    private List`1<string> _startsWith;
    [AWSPropertyAttribute]
public List`1<string> EndsWith { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Equals { get; public set; }
    [AWSPropertyAttribute]
public string Field { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> NotEndsWith { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> NotEquals { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> NotStartsWith { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> StartsWith { get; public set; }
    public List`1<string> get_EndsWith();
    public void set_EndsWith(List`1<string> value);
    internal bool IsSetEndsWith();
    public List`1<string> get_Equals();
    public void set_Equals(List`1<string> value);
    internal bool IsSetEquals();
    public string get_Field();
    public void set_Field(string value);
    internal bool IsSetField();
    public List`1<string> get_NotEndsWith();
    public void set_NotEndsWith(List`1<string> value);
    internal bool IsSetNotEndsWith();
    public List`1<string> get_NotEquals();
    public void set_NotEquals(List`1<string> value);
    internal bool IsSetNotEquals();
    public List`1<string> get_NotStartsWith();
    public void set_NotStartsWith(List`1<string> value);
    internal bool IsSetNotStartsWith();
    public List`1<string> get_StartsWith();
    public void set_StartsWith(List`1<string> value);
    internal bool IsSetStartsWith();
}
public class Amazon.CloudTrail.Model.CancelQueryRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    private string _queryId;
    [ObsoleteAttribute("EventDataStore is no longer required by CancelQueryRequest")]
[AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
}
public class Amazon.CloudTrail.Model.CancelQueryResponse : AmazonWebServiceResponse {
    private string _queryId;
    private QueryStatus _queryStatus;
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    [AWSPropertyAttribute]
public QueryStatus QueryStatus { get; public set; }
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
    public QueryStatus get_QueryStatus();
    public void set_QueryStatus(QueryStatus value);
    internal bool IsSetQueryStatus();
}
public class Amazon.CloudTrail.Model.CannotDelegateManagementAccountException : AmazonCloudTrailException {
    public CannotDelegateManagementAccountException(string message);
    public CannotDelegateManagementAccountException(string message, Exception innerException);
    public CannotDelegateManagementAccountException(Exception innerException);
    public CannotDelegateManagementAccountException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CannotDelegateManagementAccountException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.Channel : object {
    private string _channelArn;
    private string _name;
    [AWSPropertyAttribute]
public string ChannelArn { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_ChannelArn();
    public void set_ChannelArn(string value);
    internal bool IsSetChannelArn();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudTrail.Model.ChannelAlreadyExistsException : AmazonCloudTrailException {
    public ChannelAlreadyExistsException(string message);
    public ChannelAlreadyExistsException(string message, Exception innerException);
    public ChannelAlreadyExistsException(Exception innerException);
    public ChannelAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ChannelAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ChannelARNInvalidException : AmazonCloudTrailException {
    public ChannelARNInvalidException(string message);
    public ChannelARNInvalidException(string message, Exception innerException);
    public ChannelARNInvalidException(Exception innerException);
    public ChannelARNInvalidException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ChannelARNInvalidException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ChannelExistsForEDSException : AmazonCloudTrailException {
    public ChannelExistsForEDSException(string message);
    public ChannelExistsForEDSException(string message, Exception innerException);
    public ChannelExistsForEDSException(Exception innerException);
    public ChannelExistsForEDSException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ChannelExistsForEDSException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ChannelMaxLimitExceededException : AmazonCloudTrailException {
    public ChannelMaxLimitExceededException(string message);
    public ChannelMaxLimitExceededException(string message, Exception innerException);
    public ChannelMaxLimitExceededException(Exception innerException);
    public ChannelMaxLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ChannelMaxLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ChannelNotFoundException : AmazonCloudTrailException {
    public ChannelNotFoundException(string message);
    public ChannelNotFoundException(string message, Exception innerException);
    public ChannelNotFoundException(Exception innerException);
    public ChannelNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ChannelNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.CloudTrailAccessNotEnabledException : AmazonCloudTrailException {
    public CloudTrailAccessNotEnabledException(string message);
    public CloudTrailAccessNotEnabledException(string message, Exception innerException);
    public CloudTrailAccessNotEnabledException(Exception innerException);
    public CloudTrailAccessNotEnabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CloudTrailAccessNotEnabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.CloudTrailARNInvalidException : AmazonCloudTrailException {
    public CloudTrailARNInvalidException(string message);
    public CloudTrailARNInvalidException(string message, Exception innerException);
    public CloudTrailARNInvalidException(Exception innerException);
    public CloudTrailARNInvalidException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CloudTrailARNInvalidException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.CloudTrailInvalidClientTokenIdException : AmazonCloudTrailException {
    public CloudTrailInvalidClientTokenIdException(string message);
    public CloudTrailInvalidClientTokenIdException(string message, Exception innerException);
    public CloudTrailInvalidClientTokenIdException(Exception innerException);
    public CloudTrailInvalidClientTokenIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CloudTrailInvalidClientTokenIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.CloudTrailPaginatorFactory : object {
    private IAmazonCloudTrail client;
    internal CloudTrailPaginatorFactory(IAmazonCloudTrail client);
    public sealed virtual IGetQueryResultsPaginator GetQueryResults(GetQueryResultsRequest request);
    public sealed virtual IListChannelsPaginator ListChannels(ListChannelsRequest request);
    public sealed virtual IListEventDataStoresPaginator ListEventDataStores(ListEventDataStoresRequest request);
    public sealed virtual IListImportFailuresPaginator ListImportFailures(ListImportFailuresRequest request);
    public sealed virtual IListImportsPaginator ListImports(ListImportsRequest request);
    public sealed virtual IListInsightsMetricDataPaginator ListInsightsMetricData(ListInsightsMetricDataRequest request);
    public sealed virtual IListPublicKeysPaginator ListPublicKeys(ListPublicKeysRequest request);
    public sealed virtual IListQueriesPaginator ListQueries(ListQueriesRequest request);
    public sealed virtual IListTagsPaginator ListTags(ListTagsRequest request);
    public sealed virtual IListTrailsPaginator ListTrails(ListTrailsRequest request);
    public sealed virtual ILookupEventsPaginator LookupEvents(LookupEventsRequest request);
}
public class Amazon.CloudTrail.Model.CloudWatchLogsDeliveryUnavailableException : AmazonCloudTrailException {
    public CloudWatchLogsDeliveryUnavailableException(string message);
    public CloudWatchLogsDeliveryUnavailableException(string message, Exception innerException);
    public CloudWatchLogsDeliveryUnavailableException(Exception innerException);
    public CloudWatchLogsDeliveryUnavailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CloudWatchLogsDeliveryUnavailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ConcurrentModificationException : AmazonCloudTrailException {
    public ConcurrentModificationException(string message);
    public ConcurrentModificationException(string message, Exception innerException);
    public ConcurrentModificationException(Exception innerException);
    public ConcurrentModificationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConcurrentModificationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ConflictException : AmazonCloudTrailException {
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.CreateChannelRequest : AmazonCloudTrailRequest {
    private List`1<Destination> _destinations;
    private string _name;
    private string _source;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<Destination> Destinations { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public List`1<Destination> get_Destinations();
    public void set_Destinations(List`1<Destination> value);
    internal bool IsSetDestinations();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.CloudTrail.Model.CreateChannelResponse : AmazonWebServiceResponse {
    private string _channelArn;
    private List`1<Destination> _destinations;
    private string _name;
    private string _source;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ChannelArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Destination> Destinations { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ChannelArn();
    public void set_ChannelArn(string value);
    internal bool IsSetChannelArn();
    public List`1<Destination> get_Destinations();
    public void set_Destinations(List`1<Destination> value);
    internal bool IsSetDestinations();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.CloudTrail.Model.CreateEventDataStoreRequest : AmazonCloudTrailRequest {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private BillingMode _billingMode;
    private string _kmsKeyId;
    private Nullable`1<bool> _multiRegionEnabled;
    private string _name;
    private Nullable`1<bool> _organizationEnabled;
    private Nullable`1<int> _retentionPeriod;
    private Nullable`1<bool> _startIngestion;
    private List`1<Tag> _tagsList;
    private Nullable`1<bool> _terminationProtectionEnabled;
    public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    public BillingMode BillingMode { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public Nullable`1<bool> MultiRegionEnabled { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> OrganizationEnabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriod { get; public set; }
    public Nullable`1<bool> StartIngestion { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> TagsList { get; public set; }
    public Nullable`1<bool> TerminationProtectionEnabled { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_MultiRegionEnabled();
    public void set_MultiRegionEnabled(Nullable`1<bool> value);
    internal bool IsSetMultiRegionEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_OrganizationEnabled();
    public void set_OrganizationEnabled(Nullable`1<bool> value);
    internal bool IsSetOrganizationEnabled();
    public Nullable`1<int> get_RetentionPeriod();
    public void set_RetentionPeriod(Nullable`1<int> value);
    internal bool IsSetRetentionPeriod();
    public Nullable`1<bool> get_StartIngestion();
    public void set_StartIngestion(Nullable`1<bool> value);
    internal bool IsSetStartIngestion();
    public List`1<Tag> get_TagsList();
    public void set_TagsList(List`1<Tag> value);
    internal bool IsSetTagsList();
    public Nullable`1<bool> get_TerminationProtectionEnabled();
    public void set_TerminationProtectionEnabled(Nullable`1<bool> value);
    internal bool IsSetTerminationProtectionEnabled();
}
public class Amazon.CloudTrail.Model.CreateEventDataStoreResponse : AmazonWebServiceResponse {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private BillingMode _billingMode;
    private Nullable`1<DateTime> _createdTimestamp;
    private string _eventDataStoreArn;
    private string _kmsKeyId;
    private Nullable`1<bool> _multiRegionEnabled;
    private string _name;
    private Nullable`1<bool> _organizationEnabled;
    private Nullable`1<int> _retentionPeriod;
    private EventDataStoreStatus _status;
    private List`1<Tag> _tagsList;
    private Nullable`1<bool> _terminationProtectionEnabled;
    private Nullable`1<DateTime> _updatedTimestamp;
    public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    public BillingMode BillingMode { get; public set; }
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string EventDataStoreArn { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public Nullable`1<bool> MultiRegionEnabled { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> OrganizationEnabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriod { get; public set; }
    public EventDataStoreStatus Status { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> TagsList { get; public set; }
    public Nullable`1<bool> TerminationProtectionEnabled { get; public set; }
    public Nullable`1<DateTime> UpdatedTimestamp { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public string get_EventDataStoreArn();
    public void set_EventDataStoreArn(string value);
    internal bool IsSetEventDataStoreArn();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_MultiRegionEnabled();
    public void set_MultiRegionEnabled(Nullable`1<bool> value);
    internal bool IsSetMultiRegionEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_OrganizationEnabled();
    public void set_OrganizationEnabled(Nullable`1<bool> value);
    internal bool IsSetOrganizationEnabled();
    public Nullable`1<int> get_RetentionPeriod();
    public void set_RetentionPeriod(Nullable`1<int> value);
    internal bool IsSetRetentionPeriod();
    public EventDataStoreStatus get_Status();
    public void set_Status(EventDataStoreStatus value);
    internal bool IsSetStatus();
    public List`1<Tag> get_TagsList();
    public void set_TagsList(List`1<Tag> value);
    internal bool IsSetTagsList();
    public Nullable`1<bool> get_TerminationProtectionEnabled();
    public void set_TerminationProtectionEnabled(Nullable`1<bool> value);
    internal bool IsSetTerminationProtectionEnabled();
    public Nullable`1<DateTime> get_UpdatedTimestamp();
    public void set_UpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTimestamp();
}
public class Amazon.CloudTrail.Model.CreateTrailRequest : AmazonCloudTrailRequest {
    private string _cloudWatchLogsLogGroupArn;
    private string _cloudWatchLogsRoleArn;
    private Nullable`1<bool> _enableLogFileValidation;
    private Nullable`1<bool> _includeGlobalServiceEvents;
    private Nullable`1<bool> _isMultiRegionTrail;
    private Nullable`1<bool> _isOrganizationTrail;
    private string _kmsKeyId;
    private string _name;
    private string _s3BucketName;
    private string _s3KeyPrefix;
    private string _snsTopicName;
    private List`1<Tag> _tagsList;
    public string CloudWatchLogsLogGroupArn { get; public set; }
    public string CloudWatchLogsRoleArn { get; public set; }
    public Nullable`1<bool> EnableLogFileValidation { get; public set; }
    public Nullable`1<bool> IncludeGlobalServiceEvents { get; public set; }
    public Nullable`1<bool> IsMultiRegionTrail { get; public set; }
    public Nullable`1<bool> IsOrganizationTrail { get; public set; }
    public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string S3BucketName { get; public set; }
    public string S3KeyPrefix { get; public set; }
    public string SnsTopicName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> TagsList { get; public set; }
    public string get_CloudWatchLogsLogGroupArn();
    public void set_CloudWatchLogsLogGroupArn(string value);
    internal bool IsSetCloudWatchLogsLogGroupArn();
    public string get_CloudWatchLogsRoleArn();
    public void set_CloudWatchLogsRoleArn(string value);
    internal bool IsSetCloudWatchLogsRoleArn();
    public Nullable`1<bool> get_EnableLogFileValidation();
    public void set_EnableLogFileValidation(Nullable`1<bool> value);
    internal bool IsSetEnableLogFileValidation();
    public Nullable`1<bool> get_IncludeGlobalServiceEvents();
    public void set_IncludeGlobalServiceEvents(Nullable`1<bool> value);
    internal bool IsSetIncludeGlobalServiceEvents();
    public Nullable`1<bool> get_IsMultiRegionTrail();
    public void set_IsMultiRegionTrail(Nullable`1<bool> value);
    internal bool IsSetIsMultiRegionTrail();
    public Nullable`1<bool> get_IsOrganizationTrail();
    public void set_IsOrganizationTrail(Nullable`1<bool> value);
    internal bool IsSetIsOrganizationTrail();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_S3KeyPrefix();
    public void set_S3KeyPrefix(string value);
    internal bool IsSetS3KeyPrefix();
    public string get_SnsTopicName();
    public void set_SnsTopicName(string value);
    internal bool IsSetSnsTopicName();
    public List`1<Tag> get_TagsList();
    public void set_TagsList(List`1<Tag> value);
    internal bool IsSetTagsList();
}
public class Amazon.CloudTrail.Model.CreateTrailResponse : AmazonWebServiceResponse {
    private string _cloudWatchLogsLogGroupArn;
    private string _cloudWatchLogsRoleArn;
    private Nullable`1<bool> _includeGlobalServiceEvents;
    private Nullable`1<bool> _isMultiRegionTrail;
    private Nullable`1<bool> _isOrganizationTrail;
    private string _kmsKeyId;
    private Nullable`1<bool> _logFileValidationEnabled;
    private string _name;
    private string _s3BucketName;
    private string _s3KeyPrefix;
    private string _snsTopicARN;
    private string _snsTopicName;
    private string _trailARN;
    public string CloudWatchLogsLogGroupArn { get; public set; }
    public string CloudWatchLogsRoleArn { get; public set; }
    public Nullable`1<bool> IncludeGlobalServiceEvents { get; public set; }
    public Nullable`1<bool> IsMultiRegionTrail { get; public set; }
    public Nullable`1<bool> IsOrganizationTrail { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<bool> LogFileValidationEnabled { get; public set; }
    public string Name { get; public set; }
    public string S3BucketName { get; public set; }
    public string S3KeyPrefix { get; public set; }
    public string SnsTopicARN { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use SnsTopicARN.")]
public string SnsTopicName { get; public set; }
    public string TrailARN { get; public set; }
    public string get_CloudWatchLogsLogGroupArn();
    public void set_CloudWatchLogsLogGroupArn(string value);
    internal bool IsSetCloudWatchLogsLogGroupArn();
    public string get_CloudWatchLogsRoleArn();
    public void set_CloudWatchLogsRoleArn(string value);
    internal bool IsSetCloudWatchLogsRoleArn();
    public Nullable`1<bool> get_IncludeGlobalServiceEvents();
    public void set_IncludeGlobalServiceEvents(Nullable`1<bool> value);
    internal bool IsSetIncludeGlobalServiceEvents();
    public Nullable`1<bool> get_IsMultiRegionTrail();
    public void set_IsMultiRegionTrail(Nullable`1<bool> value);
    internal bool IsSetIsMultiRegionTrail();
    public Nullable`1<bool> get_IsOrganizationTrail();
    public void set_IsOrganizationTrail(Nullable`1<bool> value);
    internal bool IsSetIsOrganizationTrail();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_LogFileValidationEnabled();
    public void set_LogFileValidationEnabled(Nullable`1<bool> value);
    internal bool IsSetLogFileValidationEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_S3KeyPrefix();
    public void set_S3KeyPrefix(string value);
    internal bool IsSetS3KeyPrefix();
    public string get_SnsTopicARN();
    public void set_SnsTopicARN(string value);
    internal bool IsSetSnsTopicARN();
    public string get_SnsTopicName();
    public void set_SnsTopicName(string value);
    internal bool IsSetSnsTopicName();
    public string get_TrailARN();
    public void set_TrailARN(string value);
    internal bool IsSetTrailARN();
}
public class Amazon.CloudTrail.Model.DataResource : object {
    private string _type;
    private List`1<string> _values;
    public string Type { get; public set; }
    public List`1<string> Values { get; public set; }
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.CloudTrail.Model.DelegatedAdminAccountLimitExceededException : AmazonCloudTrailException {
    public DelegatedAdminAccountLimitExceededException(string message);
    public DelegatedAdminAccountLimitExceededException(string message, Exception innerException);
    public DelegatedAdminAccountLimitExceededException(Exception innerException);
    public DelegatedAdminAccountLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DelegatedAdminAccountLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.DeleteChannelRequest : AmazonCloudTrailRequest {
    private string _channel;
    [AWSPropertyAttribute]
public string Channel { get; public set; }
    public string get_Channel();
    public void set_Channel(string value);
    internal bool IsSetChannel();
}
public class Amazon.CloudTrail.Model.DeleteChannelResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.DeleteEventDataStoreRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
}
public class Amazon.CloudTrail.Model.DeleteEventDataStoreResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.DeleteResourcePolicyRequest : AmazonCloudTrailRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.CloudTrail.Model.DeleteResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.DeleteTrailRequest : AmazonCloudTrailRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudTrail.Model.DeleteTrailResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.DeregisterOrganizationDelegatedAdminRequest : AmazonCloudTrailRequest {
    private string _delegatedAdminAccountId;
    [AWSPropertyAttribute]
public string DelegatedAdminAccountId { get; public set; }
    public string get_DelegatedAdminAccountId();
    public void set_DelegatedAdminAccountId(string value);
    internal bool IsSetDelegatedAdminAccountId();
}
public class Amazon.CloudTrail.Model.DeregisterOrganizationDelegatedAdminResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.DescribeQueryRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    private string _queryAlias;
    private string _queryId;
    [ObsoleteAttribute("EventDataStore is no longer required by DescribeQueryRequest")]
[AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    [AWSPropertyAttribute]
public string QueryAlias { get; public set; }
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
    public string get_QueryAlias();
    public void set_QueryAlias(string value);
    internal bool IsSetQueryAlias();
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
}
public class Amazon.CloudTrail.Model.DescribeQueryResponse : AmazonWebServiceResponse {
    private string _deliveryS3Uri;
    private DeliveryStatus _deliveryStatus;
    private string _errorMessage;
    private string _queryId;
    private QueryStatisticsForDescribeQuery _queryStatistics;
    private QueryStatus _queryStatus;
    private string _queryString;
    [AWSPropertyAttribute]
public string DeliveryS3Uri { get; public set; }
    public DeliveryStatus DeliveryStatus { get; public set; }
    [AWSPropertyAttribute]
public string ErrorMessage { get; public set; }
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    public QueryStatisticsForDescribeQuery QueryStatistics { get; public set; }
    public QueryStatus QueryStatus { get; public set; }
    [AWSPropertyAttribute]
public string QueryString { get; public set; }
    public string get_DeliveryS3Uri();
    public void set_DeliveryS3Uri(string value);
    internal bool IsSetDeliveryS3Uri();
    public DeliveryStatus get_DeliveryStatus();
    public void set_DeliveryStatus(DeliveryStatus value);
    internal bool IsSetDeliveryStatus();
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
    public QueryStatisticsForDescribeQuery get_QueryStatistics();
    public void set_QueryStatistics(QueryStatisticsForDescribeQuery value);
    internal bool IsSetQueryStatistics();
    public QueryStatus get_QueryStatus();
    public void set_QueryStatus(QueryStatus value);
    internal bool IsSetQueryStatus();
    public string get_QueryString();
    public void set_QueryString(string value);
    internal bool IsSetQueryString();
}
public class Amazon.CloudTrail.Model.DescribeTrailsRequest : AmazonCloudTrailRequest {
    private Nullable`1<bool> _includeShadowTrails;
    private List`1<string> _trailNameList;
    public Nullable`1<bool> IncludeShadowTrails { get; public set; }
    public List`1<string> TrailNameList { get; public set; }
    public Nullable`1<bool> get_IncludeShadowTrails();
    public void set_IncludeShadowTrails(Nullable`1<bool> value);
    internal bool IsSetIncludeShadowTrails();
    public List`1<string> get_TrailNameList();
    public void set_TrailNameList(List`1<string> value);
    internal bool IsSetTrailNameList();
}
public class Amazon.CloudTrail.Model.DescribeTrailsResponse : AmazonWebServiceResponse {
    private List`1<Trail> _trailList;
    public List`1<Trail> TrailList { get; public set; }
    public List`1<Trail> get_TrailList();
    public void set_TrailList(List`1<Trail> value);
    internal bool IsSetTrailList();
}
public class Amazon.CloudTrail.Model.Destination : object {
    private string _location;
    private DestinationType _type;
    [AWSPropertyAttribute]
public string Location { get; public set; }
    [AWSPropertyAttribute]
public DestinationType Type { get; public set; }
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public DestinationType get_Type();
    public void set_Type(DestinationType value);
    internal bool IsSetType();
}
public class Amazon.CloudTrail.Model.DisableFederationRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
}
public class Amazon.CloudTrail.Model.DisableFederationResponse : AmazonWebServiceResponse {
    private string _eventDataStoreArn;
    private FederationStatus _federationStatus;
    [AWSPropertyAttribute]
public string EventDataStoreArn { get; public set; }
    public FederationStatus FederationStatus { get; public set; }
    public string get_EventDataStoreArn();
    public void set_EventDataStoreArn(string value);
    internal bool IsSetEventDataStoreArn();
    public FederationStatus get_FederationStatus();
    public void set_FederationStatus(FederationStatus value);
    internal bool IsSetFederationStatus();
}
public class Amazon.CloudTrail.Model.EnableFederationRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    private string _federationRoleArn;
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    [AWSPropertyAttribute]
public string FederationRoleArn { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
    public string get_FederationRoleArn();
    public void set_FederationRoleArn(string value);
    internal bool IsSetFederationRoleArn();
}
public class Amazon.CloudTrail.Model.EnableFederationResponse : AmazonWebServiceResponse {
    private string _eventDataStoreArn;
    private string _federationRoleArn;
    private FederationStatus _federationStatus;
    [AWSPropertyAttribute]
public string EventDataStoreArn { get; public set; }
    [AWSPropertyAttribute]
public string FederationRoleArn { get; public set; }
    public FederationStatus FederationStatus { get; public set; }
    public string get_EventDataStoreArn();
    public void set_EventDataStoreArn(string value);
    internal bool IsSetEventDataStoreArn();
    public string get_FederationRoleArn();
    public void set_FederationRoleArn(string value);
    internal bool IsSetFederationRoleArn();
    public FederationStatus get_FederationStatus();
    public void set_FederationStatus(FederationStatus value);
    internal bool IsSetFederationStatus();
}
public class Amazon.CloudTrail.Model.Event : object {
    private string _accessKeyId;
    private string _cloudTrailEvent;
    private string _eventId;
    private string _eventName;
    private string _eventSource;
    private Nullable`1<DateTime> _eventTime;
    private string _readOnly;
    private List`1<Resource> _resources;
    private string _username;
    public string AccessKeyId { get; public set; }
    public string CloudTrailEvent { get; public set; }
    public string EventId { get; public set; }
    public string EventName { get; public set; }
    public string EventSource { get; public set; }
    public Nullable`1<DateTime> EventTime { get; public set; }
    public string ReadOnly { get; public set; }
    public List`1<Resource> Resources { get; public set; }
    public string Username { get; public set; }
    public string get_AccessKeyId();
    public void set_AccessKeyId(string value);
    internal bool IsSetAccessKeyId();
    public string get_CloudTrailEvent();
    public void set_CloudTrailEvent(string value);
    internal bool IsSetCloudTrailEvent();
    public string get_EventId();
    public void set_EventId(string value);
    internal bool IsSetEventId();
    public string get_EventName();
    public void set_EventName(string value);
    internal bool IsSetEventName();
    public string get_EventSource();
    public void set_EventSource(string value);
    internal bool IsSetEventSource();
    public Nullable`1<DateTime> get_EventTime();
    public void set_EventTime(Nullable`1<DateTime> value);
    internal bool IsSetEventTime();
    public string get_ReadOnly();
    public void set_ReadOnly(string value);
    internal bool IsSetReadOnly();
    public List`1<Resource> get_Resources();
    public void set_Resources(List`1<Resource> value);
    internal bool IsSetResources();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.CloudTrail.Model.EventDataStore : object {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private Nullable`1<DateTime> _createdTimestamp;
    private string _eventDataStoreArn;
    private Nullable`1<bool> _multiRegionEnabled;
    private string _name;
    private Nullable`1<bool> _organizationEnabled;
    private Nullable`1<int> _retentionPeriod;
    private EventDataStoreStatus _status;
    private Nullable`1<bool> _terminationProtectionEnabled;
    private Nullable`1<DateTime> _updatedTimestamp;
    [ObsoleteAttribute("AdvancedEventSelectors is no longer returned by ListEventDataStores")]
public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    [ObsoleteAttribute("CreatedTimestamp is no longer returned by ListEventDataStores")]
public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string EventDataStoreArn { get; public set; }
    [ObsoleteAttribute("MultiRegionEnabled is no longer returned by ListEventDataStores")]
public Nullable`1<bool> MultiRegionEnabled { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [ObsoleteAttribute("OrganizationEnabled is no longer returned by ListEventDataStores")]
public Nullable`1<bool> OrganizationEnabled { get; public set; }
    [ObsoleteAttribute("RetentionPeriod is no longer returned by ListEventDataStores")]
[AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriod { get; public set; }
    [ObsoleteAttribute("Status is no longer returned by ListEventDataStores")]
public EventDataStoreStatus Status { get; public set; }
    [ObsoleteAttribute("TerminationProtectionEnabled is no longer returned by ListEventDataStores")]
public Nullable`1<bool> TerminationProtectionEnabled { get; public set; }
    [ObsoleteAttribute("UpdatedTimestamp is no longer returned by ListEventDataStores")]
public Nullable`1<DateTime> UpdatedTimestamp { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public string get_EventDataStoreArn();
    public void set_EventDataStoreArn(string value);
    internal bool IsSetEventDataStoreArn();
    public Nullable`1<bool> get_MultiRegionEnabled();
    public void set_MultiRegionEnabled(Nullable`1<bool> value);
    internal bool IsSetMultiRegionEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_OrganizationEnabled();
    public void set_OrganizationEnabled(Nullable`1<bool> value);
    internal bool IsSetOrganizationEnabled();
    public Nullable`1<int> get_RetentionPeriod();
    public void set_RetentionPeriod(Nullable`1<int> value);
    internal bool IsSetRetentionPeriod();
    public EventDataStoreStatus get_Status();
    public void set_Status(EventDataStoreStatus value);
    internal bool IsSetStatus();
    public Nullable`1<bool> get_TerminationProtectionEnabled();
    public void set_TerminationProtectionEnabled(Nullable`1<bool> value);
    internal bool IsSetTerminationProtectionEnabled();
    public Nullable`1<DateTime> get_UpdatedTimestamp();
    public void set_UpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTimestamp();
}
public class Amazon.CloudTrail.Model.EventDataStoreAlreadyExistsException : AmazonCloudTrailException {
    public EventDataStoreAlreadyExistsException(string message);
    public EventDataStoreAlreadyExistsException(string message, Exception innerException);
    public EventDataStoreAlreadyExistsException(Exception innerException);
    public EventDataStoreAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EventDataStoreAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.EventDataStoreARNInvalidException : AmazonCloudTrailException {
    public EventDataStoreARNInvalidException(string message);
    public EventDataStoreARNInvalidException(string message, Exception innerException);
    public EventDataStoreARNInvalidException(Exception innerException);
    public EventDataStoreARNInvalidException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EventDataStoreARNInvalidException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.EventDataStoreFederationEnabledException : AmazonCloudTrailException {
    public EventDataStoreFederationEnabledException(string message);
    public EventDataStoreFederationEnabledException(string message, Exception innerException);
    public EventDataStoreFederationEnabledException(Exception innerException);
    public EventDataStoreFederationEnabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EventDataStoreFederationEnabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.EventDataStoreHasOngoingImportException : AmazonCloudTrailException {
    public EventDataStoreHasOngoingImportException(string message);
    public EventDataStoreHasOngoingImportException(string message, Exception innerException);
    public EventDataStoreHasOngoingImportException(Exception innerException);
    public EventDataStoreHasOngoingImportException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EventDataStoreHasOngoingImportException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.EventDataStoreMaxLimitExceededException : AmazonCloudTrailException {
    public EventDataStoreMaxLimitExceededException(string message);
    public EventDataStoreMaxLimitExceededException(string message, Exception innerException);
    public EventDataStoreMaxLimitExceededException(Exception innerException);
    public EventDataStoreMaxLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EventDataStoreMaxLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.EventDataStoreNotFoundException : AmazonCloudTrailException {
    public EventDataStoreNotFoundException(string message);
    public EventDataStoreNotFoundException(string message, Exception innerException);
    public EventDataStoreNotFoundException(Exception innerException);
    public EventDataStoreNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EventDataStoreNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.EventDataStoreTerminationProtectedException : AmazonCloudTrailException {
    public EventDataStoreTerminationProtectedException(string message);
    public EventDataStoreTerminationProtectedException(string message, Exception innerException);
    public EventDataStoreTerminationProtectedException(Exception innerException);
    public EventDataStoreTerminationProtectedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EventDataStoreTerminationProtectedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.EventSelector : object {
    private List`1<DataResource> _dataResources;
    private List`1<string> _excludeManagementEventSources;
    private Nullable`1<bool> _includeManagementEvents;
    private ReadWriteType _readWriteType;
    public List`1<DataResource> DataResources { get; public set; }
    public List`1<string> ExcludeManagementEventSources { get; public set; }
    public Nullable`1<bool> IncludeManagementEvents { get; public set; }
    public ReadWriteType ReadWriteType { get; public set; }
    public List`1<DataResource> get_DataResources();
    public void set_DataResources(List`1<DataResource> value);
    internal bool IsSetDataResources();
    public List`1<string> get_ExcludeManagementEventSources();
    public void set_ExcludeManagementEventSources(List`1<string> value);
    internal bool IsSetExcludeManagementEventSources();
    public Nullable`1<bool> get_IncludeManagementEvents();
    public void set_IncludeManagementEvents(Nullable`1<bool> value);
    internal bool IsSetIncludeManagementEvents();
    public ReadWriteType get_ReadWriteType();
    public void set_ReadWriteType(ReadWriteType value);
    internal bool IsSetReadWriteType();
}
public class Amazon.CloudTrail.Model.GetChannelRequest : AmazonCloudTrailRequest {
    private string _channel;
    [AWSPropertyAttribute]
public string Channel { get; public set; }
    public string get_Channel();
    public void set_Channel(string value);
    internal bool IsSetChannel();
}
public class Amazon.CloudTrail.Model.GetChannelResponse : AmazonWebServiceResponse {
    private string _channelArn;
    private List`1<Destination> _destinations;
    private IngestionStatus _ingestionStatus;
    private string _name;
    private string _source;
    private SourceConfig _sourceConfig;
    [AWSPropertyAttribute]
public string ChannelArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Destination> Destinations { get; public set; }
    public IngestionStatus IngestionStatus { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    public SourceConfig SourceConfig { get; public set; }
    public string get_ChannelArn();
    public void set_ChannelArn(string value);
    internal bool IsSetChannelArn();
    public List`1<Destination> get_Destinations();
    public void set_Destinations(List`1<Destination> value);
    internal bool IsSetDestinations();
    public IngestionStatus get_IngestionStatus();
    public void set_IngestionStatus(IngestionStatus value);
    internal bool IsSetIngestionStatus();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
    public SourceConfig get_SourceConfig();
    public void set_SourceConfig(SourceConfig value);
    internal bool IsSetSourceConfig();
}
public class Amazon.CloudTrail.Model.GetEventDataStoreRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
}
public class Amazon.CloudTrail.Model.GetEventDataStoreResponse : AmazonWebServiceResponse {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private BillingMode _billingMode;
    private Nullable`1<DateTime> _createdTimestamp;
    private string _eventDataStoreArn;
    private string _federationRoleArn;
    private FederationStatus _federationStatus;
    private string _kmsKeyId;
    private Nullable`1<bool> _multiRegionEnabled;
    private string _name;
    private Nullable`1<bool> _organizationEnabled;
    private List`1<PartitionKey> _partitionKeys;
    private Nullable`1<int> _retentionPeriod;
    private EventDataStoreStatus _status;
    private Nullable`1<bool> _terminationProtectionEnabled;
    private Nullable`1<DateTime> _updatedTimestamp;
    public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    public BillingMode BillingMode { get; public set; }
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string EventDataStoreArn { get; public set; }
    [AWSPropertyAttribute]
public string FederationRoleArn { get; public set; }
    public FederationStatus FederationStatus { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public Nullable`1<bool> MultiRegionEnabled { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> OrganizationEnabled { get; public set; }
    [AWSPropertyAttribute]
public List`1<PartitionKey> PartitionKeys { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriod { get; public set; }
    public EventDataStoreStatus Status { get; public set; }
    public Nullable`1<bool> TerminationProtectionEnabled { get; public set; }
    public Nullable`1<DateTime> UpdatedTimestamp { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public string get_EventDataStoreArn();
    public void set_EventDataStoreArn(string value);
    internal bool IsSetEventDataStoreArn();
    public string get_FederationRoleArn();
    public void set_FederationRoleArn(string value);
    internal bool IsSetFederationRoleArn();
    public FederationStatus get_FederationStatus();
    public void set_FederationStatus(FederationStatus value);
    internal bool IsSetFederationStatus();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_MultiRegionEnabled();
    public void set_MultiRegionEnabled(Nullable`1<bool> value);
    internal bool IsSetMultiRegionEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_OrganizationEnabled();
    public void set_OrganizationEnabled(Nullable`1<bool> value);
    internal bool IsSetOrganizationEnabled();
    public List`1<PartitionKey> get_PartitionKeys();
    public void set_PartitionKeys(List`1<PartitionKey> value);
    internal bool IsSetPartitionKeys();
    public Nullable`1<int> get_RetentionPeriod();
    public void set_RetentionPeriod(Nullable`1<int> value);
    internal bool IsSetRetentionPeriod();
    public EventDataStoreStatus get_Status();
    public void set_Status(EventDataStoreStatus value);
    internal bool IsSetStatus();
    public Nullable`1<bool> get_TerminationProtectionEnabled();
    public void set_TerminationProtectionEnabled(Nullable`1<bool> value);
    internal bool IsSetTerminationProtectionEnabled();
    public Nullable`1<DateTime> get_UpdatedTimestamp();
    public void set_UpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTimestamp();
}
public class Amazon.CloudTrail.Model.GetEventSelectorsRequest : AmazonCloudTrailRequest {
    private string _trailName;
    [AWSPropertyAttribute]
public string TrailName { get; public set; }
    public string get_TrailName();
    public void set_TrailName(string value);
    internal bool IsSetTrailName();
}
public class Amazon.CloudTrail.Model.GetEventSelectorsResponse : AmazonWebServiceResponse {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private List`1<EventSelector> _eventSelectors;
    private string _trailARN;
    public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    public List`1<EventSelector> EventSelectors { get; public set; }
    public string TrailARN { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public List`1<EventSelector> get_EventSelectors();
    public void set_EventSelectors(List`1<EventSelector> value);
    internal bool IsSetEventSelectors();
    public string get_TrailARN();
    public void set_TrailARN(string value);
    internal bool IsSetTrailARN();
}
public class Amazon.CloudTrail.Model.GetImportRequest : AmazonCloudTrailRequest {
    private string _importId;
    [AWSPropertyAttribute]
public string ImportId { get; public set; }
    public string get_ImportId();
    public void set_ImportId(string value);
    internal bool IsSetImportId();
}
public class Amazon.CloudTrail.Model.GetImportResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdTimestamp;
    private List`1<string> _destinations;
    private Nullable`1<DateTime> _endEventTime;
    private string _importId;
    private ImportSource _importSource;
    private ImportStatistics _importStatistics;
    private ImportStatus _importStatus;
    private Nullable`1<DateTime> _startEventTime;
    private Nullable`1<DateTime> _updatedTimestamp;
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Destinations { get; public set; }
    public Nullable`1<DateTime> EndEventTime { get; public set; }
    [AWSPropertyAttribute]
public string ImportId { get; public set; }
    public ImportSource ImportSource { get; public set; }
    public ImportStatistics ImportStatistics { get; public set; }
    public ImportStatus ImportStatus { get; public set; }
    public Nullable`1<DateTime> StartEventTime { get; public set; }
    public Nullable`1<DateTime> UpdatedTimestamp { get; public set; }
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public List`1<string> get_Destinations();
    public void set_Destinations(List`1<string> value);
    internal bool IsSetDestinations();
    public Nullable`1<DateTime> get_EndEventTime();
    public void set_EndEventTime(Nullable`1<DateTime> value);
    internal bool IsSetEndEventTime();
    public string get_ImportId();
    public void set_ImportId(string value);
    internal bool IsSetImportId();
    public ImportSource get_ImportSource();
    public void set_ImportSource(ImportSource value);
    internal bool IsSetImportSource();
    public ImportStatistics get_ImportStatistics();
    public void set_ImportStatistics(ImportStatistics value);
    internal bool IsSetImportStatistics();
    public ImportStatus get_ImportStatus();
    public void set_ImportStatus(ImportStatus value);
    internal bool IsSetImportStatus();
    public Nullable`1<DateTime> get_StartEventTime();
    public void set_StartEventTime(Nullable`1<DateTime> value);
    internal bool IsSetStartEventTime();
    public Nullable`1<DateTime> get_UpdatedTimestamp();
    public void set_UpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTimestamp();
}
public class Amazon.CloudTrail.Model.GetInsightSelectorsRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    private string _trailName;
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    public string TrailName { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
    public string get_TrailName();
    public void set_TrailName(string value);
    internal bool IsSetTrailName();
}
public class Amazon.CloudTrail.Model.GetInsightSelectorsResponse : AmazonWebServiceResponse {
    private string _eventDataStoreArn;
    private string _insightsDestination;
    private List`1<InsightSelector> _insightSelectors;
    private string _trailARN;
    [AWSPropertyAttribute]
public string EventDataStoreArn { get; public set; }
    [AWSPropertyAttribute]
public string InsightsDestination { get; public set; }
    public List`1<InsightSelector> InsightSelectors { get; public set; }
    public string TrailARN { get; public set; }
    public string get_EventDataStoreArn();
    public void set_EventDataStoreArn(string value);
    internal bool IsSetEventDataStoreArn();
    public string get_InsightsDestination();
    public void set_InsightsDestination(string value);
    internal bool IsSetInsightsDestination();
    public List`1<InsightSelector> get_InsightSelectors();
    public void set_InsightSelectors(List`1<InsightSelector> value);
    internal bool IsSetInsightSelectors();
    public string get_TrailARN();
    public void set_TrailARN(string value);
    internal bool IsSetTrailARN();
}
internal class Amazon.CloudTrail.Model.GetQueryResultsPaginator : object {
    private IAmazonCloudTrail _client;
    private GetQueryResultsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetQueryResultsResponse> Responses { get; }
    internal GetQueryResultsPaginator(IAmazonCloudTrail client, GetQueryResultsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetQueryResultsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.GetQueryResultsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-GetQueryResultsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<GetQueryResultsResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.GetQueryResultsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.GetQueryResultsRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    private Nullable`1<int> _maxQueryResults;
    private string _nextToken;
    private string _queryId;
    [ObsoleteAttribute("EventDataStore is no longer required by GetQueryResultsRequest")]
[AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxQueryResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
    public Nullable`1<int> get_MaxQueryResults();
    public void set_MaxQueryResults(Nullable`1<int> value);
    internal bool IsSetMaxQueryResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
}
public class Amazon.CloudTrail.Model.GetQueryResultsResponse : AmazonWebServiceResponse {
    private string _errorMessage;
    private string _nextToken;
    private List`1<List`1<Dictionary`2<string, string>>> _queryResultRows;
    private QueryStatistics _queryStatistics;
    private QueryStatus _queryStatus;
    [AWSPropertyAttribute]
public string ErrorMessage { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<List`1<Dictionary`2<string, string>>> QueryResultRows { get; public set; }
    public QueryStatistics QueryStatistics { get; public set; }
    public QueryStatus QueryStatus { get; public set; }
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<List`1<Dictionary`2<string, string>>> get_QueryResultRows();
    public void set_QueryResultRows(List`1<List`1<Dictionary`2<string, string>>> value);
    internal bool IsSetQueryResultRows();
    public QueryStatistics get_QueryStatistics();
    public void set_QueryStatistics(QueryStatistics value);
    internal bool IsSetQueryStatistics();
    public QueryStatus get_QueryStatus();
    public void set_QueryStatus(QueryStatus value);
    internal bool IsSetQueryStatus();
}
public class Amazon.CloudTrail.Model.GetResourcePolicyRequest : AmazonCloudTrailRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.CloudTrail.Model.GetResourcePolicyResponse : AmazonWebServiceResponse {
    private string _resourceArn;
    private string _resourcePolicy;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public string ResourcePolicy { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public string get_ResourcePolicy();
    public void set_ResourcePolicy(string value);
    internal bool IsSetResourcePolicy();
}
public class Amazon.CloudTrail.Model.GetTrailRequest : AmazonCloudTrailRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudTrail.Model.GetTrailResponse : AmazonWebServiceResponse {
    private Trail _trail;
    public Trail Trail { get; public set; }
    public Trail get_Trail();
    public void set_Trail(Trail value);
    internal bool IsSetTrail();
}
public class Amazon.CloudTrail.Model.GetTrailStatusRequest : AmazonCloudTrailRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudTrail.Model.GetTrailStatusResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _isLogging;
    private string _latestCloudWatchLogsDeliveryError;
    private Nullable`1<DateTime> _latestCloudWatchLogsDeliveryTime;
    private string _latestDeliveryAttemptSucceeded;
    private string _latestDeliveryAttemptTime;
    private string _latestDeliveryError;
    private Nullable`1<DateTime> _latestDeliveryTime;
    private string _latestDigestDeliveryError;
    private Nullable`1<DateTime> _latestDigestDeliveryTime;
    private string _latestNotificationAttemptSucceeded;
    private string _latestNotificationAttemptTime;
    private string _latestNotificationError;
    private Nullable`1<DateTime> _latestNotificationTime;
    private Nullable`1<DateTime> _startLoggingTime;
    private Nullable`1<DateTime> _stopLoggingTime;
    private string _timeLoggingStarted;
    private string _timeLoggingStopped;
    public Nullable`1<bool> IsLogging { get; public set; }
    public string LatestCloudWatchLogsDeliveryError { get; public set; }
    public Nullable`1<DateTime> LatestCloudWatchLogsDeliveryTime { get; public set; }
    public string LatestDeliveryAttemptSucceeded { get; public set; }
    public string LatestDeliveryAttemptTime { get; public set; }
    public string LatestDeliveryError { get; public set; }
    public Nullable`1<DateTime> LatestDeliveryTime { get; public set; }
    public string LatestDigestDeliveryError { get; public set; }
    public Nullable`1<DateTime> LatestDigestDeliveryTime { get; public set; }
    public string LatestNotificationAttemptSucceeded { get; public set; }
    public string LatestNotificationAttemptTime { get; public set; }
    public string LatestNotificationError { get; public set; }
    public Nullable`1<DateTime> LatestNotificationTime { get; public set; }
    public Nullable`1<DateTime> StartLoggingTime { get; public set; }
    public Nullable`1<DateTime> StopLoggingTime { get; public set; }
    public string TimeLoggingStarted { get; public set; }
    public string TimeLoggingStopped { get; public set; }
    public Nullable`1<bool> get_IsLogging();
    public void set_IsLogging(Nullable`1<bool> value);
    internal bool IsSetIsLogging();
    public string get_LatestCloudWatchLogsDeliveryError();
    public void set_LatestCloudWatchLogsDeliveryError(string value);
    internal bool IsSetLatestCloudWatchLogsDeliveryError();
    public Nullable`1<DateTime> get_LatestCloudWatchLogsDeliveryTime();
    public void set_LatestCloudWatchLogsDeliveryTime(Nullable`1<DateTime> value);
    internal bool IsSetLatestCloudWatchLogsDeliveryTime();
    public string get_LatestDeliveryAttemptSucceeded();
    public void set_LatestDeliveryAttemptSucceeded(string value);
    internal bool IsSetLatestDeliveryAttemptSucceeded();
    public string get_LatestDeliveryAttemptTime();
    public void set_LatestDeliveryAttemptTime(string value);
    internal bool IsSetLatestDeliveryAttemptTime();
    public string get_LatestDeliveryError();
    public void set_LatestDeliveryError(string value);
    internal bool IsSetLatestDeliveryError();
    public Nullable`1<DateTime> get_LatestDeliveryTime();
    public void set_LatestDeliveryTime(Nullable`1<DateTime> value);
    internal bool IsSetLatestDeliveryTime();
    public string get_LatestDigestDeliveryError();
    public void set_LatestDigestDeliveryError(string value);
    internal bool IsSetLatestDigestDeliveryError();
    public Nullable`1<DateTime> get_LatestDigestDeliveryTime();
    public void set_LatestDigestDeliveryTime(Nullable`1<DateTime> value);
    internal bool IsSetLatestDigestDeliveryTime();
    public string get_LatestNotificationAttemptSucceeded();
    public void set_LatestNotificationAttemptSucceeded(string value);
    internal bool IsSetLatestNotificationAttemptSucceeded();
    public string get_LatestNotificationAttemptTime();
    public void set_LatestNotificationAttemptTime(string value);
    internal bool IsSetLatestNotificationAttemptTime();
    public string get_LatestNotificationError();
    public void set_LatestNotificationError(string value);
    internal bool IsSetLatestNotificationError();
    public Nullable`1<DateTime> get_LatestNotificationTime();
    public void set_LatestNotificationTime(Nullable`1<DateTime> value);
    internal bool IsSetLatestNotificationTime();
    public Nullable`1<DateTime> get_StartLoggingTime();
    public void set_StartLoggingTime(Nullable`1<DateTime> value);
    internal bool IsSetStartLoggingTime();
    public Nullable`1<DateTime> get_StopLoggingTime();
    public void set_StopLoggingTime(Nullable`1<DateTime> value);
    internal bool IsSetStopLoggingTime();
    public string get_TimeLoggingStarted();
    public void set_TimeLoggingStarted(string value);
    internal bool IsSetTimeLoggingStarted();
    public string get_TimeLoggingStopped();
    public void set_TimeLoggingStopped(string value);
    internal bool IsSetTimeLoggingStopped();
}
public interface Amazon.CloudTrail.Model.ICloudTrailPaginatorFactory {
    public abstract virtual IGetQueryResultsPaginator GetQueryResults(GetQueryResultsRequest request);
    public abstract virtual IListChannelsPaginator ListChannels(ListChannelsRequest request);
    public abstract virtual IListEventDataStoresPaginator ListEventDataStores(ListEventDataStoresRequest request);
    public abstract virtual IListImportFailuresPaginator ListImportFailures(ListImportFailuresRequest request);
    public abstract virtual IListImportsPaginator ListImports(ListImportsRequest request);
    public abstract virtual IListInsightsMetricDataPaginator ListInsightsMetricData(ListInsightsMetricDataRequest request);
    public abstract virtual IListPublicKeysPaginator ListPublicKeys(ListPublicKeysRequest request);
    public abstract virtual IListQueriesPaginator ListQueries(ListQueriesRequest request);
    public abstract virtual IListTagsPaginator ListTags(ListTagsRequest request);
    public abstract virtual IListTrailsPaginator ListTrails(ListTrailsRequest request);
    public abstract virtual ILookupEventsPaginator LookupEvents(LookupEventsRequest request);
}
public interface Amazon.CloudTrail.Model.IGetQueryResultsPaginator {
    public IPaginatedEnumerable`1<GetQueryResultsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<GetQueryResultsResponse> get_Responses();
}
public interface Amazon.CloudTrail.Model.IListChannelsPaginator {
    public IPaginatedEnumerable`1<ListChannelsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListChannelsResponse> get_Responses();
}
public interface Amazon.CloudTrail.Model.IListEventDataStoresPaginator {
    public IPaginatedEnumerable`1<ListEventDataStoresResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListEventDataStoresResponse> get_Responses();
}
public interface Amazon.CloudTrail.Model.IListImportFailuresPaginator {
    public IPaginatedEnumerable`1<ListImportFailuresResponse> Responses { get; }
    public IPaginatedEnumerable`1<ImportFailureListItem> Failures { get; }
    public abstract virtual IPaginatedEnumerable`1<ListImportFailuresResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ImportFailureListItem> get_Failures();
}
public interface Amazon.CloudTrail.Model.IListImportsPaginator {
    public IPaginatedEnumerable`1<ListImportsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ImportsListItem> Imports { get; }
    public abstract virtual IPaginatedEnumerable`1<ListImportsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ImportsListItem> get_Imports();
}
public interface Amazon.CloudTrail.Model.IListInsightsMetricDataPaginator {
    public IPaginatedEnumerable`1<ListInsightsMetricDataResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListInsightsMetricDataResponse> get_Responses();
}
public interface Amazon.CloudTrail.Model.IListPublicKeysPaginator {
    public IPaginatedEnumerable`1<ListPublicKeysResponse> Responses { get; }
    public IPaginatedEnumerable`1<PublicKey> PublicKeyList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListPublicKeysResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PublicKey> get_PublicKeyList();
}
public interface Amazon.CloudTrail.Model.IListQueriesPaginator {
    public IPaginatedEnumerable`1<ListQueriesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListQueriesResponse> get_Responses();
}
public interface Amazon.CloudTrail.Model.IListTagsPaginator {
    public IPaginatedEnumerable`1<ListTagsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ResourceTag> ResourceTagList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTagsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ResourceTag> get_ResourceTagList();
}
public interface Amazon.CloudTrail.Model.IListTrailsPaginator {
    public IPaginatedEnumerable`1<ListTrailsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TrailInfo> Trails { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTrailsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<TrailInfo> get_Trails();
}
public interface Amazon.CloudTrail.Model.ILookupEventsPaginator {
    public IPaginatedEnumerable`1<LookupEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Event> Events { get; }
    public abstract virtual IPaginatedEnumerable`1<LookupEventsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Event> get_Events();
}
public class Amazon.CloudTrail.Model.ImportFailureListItem : object {
    private string _errorMessage;
    private string _errorType;
    private Nullable`1<DateTime> _lastUpdatedTime;
    private string _location;
    private ImportFailureStatus _status;
    public string ErrorMessage { get; public set; }
    public string ErrorType { get; public set; }
    public Nullable`1<DateTime> LastUpdatedTime { get; public set; }
    public string Location { get; public set; }
    public ImportFailureStatus Status { get; public set; }
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    internal bool IsSetErrorMessage();
    public string get_ErrorType();
    public void set_ErrorType(string value);
    internal bool IsSetErrorType();
    public Nullable`1<DateTime> get_LastUpdatedTime();
    public void set_LastUpdatedTime(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdatedTime();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public ImportFailureStatus get_Status();
    public void set_Status(ImportFailureStatus value);
    internal bool IsSetStatus();
}
public class Amazon.CloudTrail.Model.ImportNotFoundException : AmazonCloudTrailException {
    public ImportNotFoundException(string message);
    public ImportNotFoundException(string message, Exception innerException);
    public ImportNotFoundException(Exception innerException);
    public ImportNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ImportNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ImportsListItem : object {
    private Nullable`1<DateTime> _createdTimestamp;
    private List`1<string> _destinations;
    private string _importId;
    private ImportStatus _importStatus;
    private Nullable`1<DateTime> _updatedTimestamp;
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Destinations { get; public set; }
    [AWSPropertyAttribute]
public string ImportId { get; public set; }
    public ImportStatus ImportStatus { get; public set; }
    public Nullable`1<DateTime> UpdatedTimestamp { get; public set; }
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public List`1<string> get_Destinations();
    public void set_Destinations(List`1<string> value);
    internal bool IsSetDestinations();
    public string get_ImportId();
    public void set_ImportId(string value);
    internal bool IsSetImportId();
    public ImportStatus get_ImportStatus();
    public void set_ImportStatus(ImportStatus value);
    internal bool IsSetImportStatus();
    public Nullable`1<DateTime> get_UpdatedTimestamp();
    public void set_UpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTimestamp();
}
public class Amazon.CloudTrail.Model.ImportSource : object {
    private S3ImportSource _s3;
    [AWSPropertyAttribute]
public S3ImportSource S3 { get; public set; }
    public S3ImportSource get_S3();
    public void set_S3(S3ImportSource value);
    internal bool IsSetS3();
}
public class Amazon.CloudTrail.Model.ImportStatistics : object {
    private Nullable`1<long> _eventsCompleted;
    private Nullable`1<long> _failedEntries;
    private Nullable`1<long> _filesCompleted;
    private Nullable`1<long> _prefixesCompleted;
    private Nullable`1<long> _prefixesFound;
    public Nullable`1<long> EventsCompleted { get; public set; }
    public Nullable`1<long> FailedEntries { get; public set; }
    public Nullable`1<long> FilesCompleted { get; public set; }
    public Nullable`1<long> PrefixesCompleted { get; public set; }
    public Nullable`1<long> PrefixesFound { get; public set; }
    public Nullable`1<long> get_EventsCompleted();
    public void set_EventsCompleted(Nullable`1<long> value);
    internal bool IsSetEventsCompleted();
    public Nullable`1<long> get_FailedEntries();
    public void set_FailedEntries(Nullable`1<long> value);
    internal bool IsSetFailedEntries();
    public Nullable`1<long> get_FilesCompleted();
    public void set_FilesCompleted(Nullable`1<long> value);
    internal bool IsSetFilesCompleted();
    public Nullable`1<long> get_PrefixesCompleted();
    public void set_PrefixesCompleted(Nullable`1<long> value);
    internal bool IsSetPrefixesCompleted();
    public Nullable`1<long> get_PrefixesFound();
    public void set_PrefixesFound(Nullable`1<long> value);
    internal bool IsSetPrefixesFound();
}
public class Amazon.CloudTrail.Model.InactiveEventDataStoreException : AmazonCloudTrailException {
    public InactiveEventDataStoreException(string message);
    public InactiveEventDataStoreException(string message, Exception innerException);
    public InactiveEventDataStoreException(Exception innerException);
    public InactiveEventDataStoreException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InactiveEventDataStoreException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InactiveQueryException : AmazonCloudTrailException {
    public InactiveQueryException(string message);
    public InactiveQueryException(string message, Exception innerException);
    public InactiveQueryException(Exception innerException);
    public InactiveQueryException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InactiveQueryException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.IngestionStatus : object {
    private string _latestIngestionAttemptEventID;
    private Nullable`1<DateTime> _latestIngestionAttemptTime;
    private string _latestIngestionErrorCode;
    private string _latestIngestionSuccessEventID;
    private Nullable`1<DateTime> _latestIngestionSuccessTime;
    [AWSPropertyAttribute]
public string LatestIngestionAttemptEventID { get; public set; }
    public Nullable`1<DateTime> LatestIngestionAttemptTime { get; public set; }
    [AWSPropertyAttribute]
public string LatestIngestionErrorCode { get; public set; }
    [AWSPropertyAttribute]
public string LatestIngestionSuccessEventID { get; public set; }
    public Nullable`1<DateTime> LatestIngestionSuccessTime { get; public set; }
    public string get_LatestIngestionAttemptEventID();
    public void set_LatestIngestionAttemptEventID(string value);
    internal bool IsSetLatestIngestionAttemptEventID();
    public Nullable`1<DateTime> get_LatestIngestionAttemptTime();
    public void set_LatestIngestionAttemptTime(Nullable`1<DateTime> value);
    internal bool IsSetLatestIngestionAttemptTime();
    public string get_LatestIngestionErrorCode();
    public void set_LatestIngestionErrorCode(string value);
    internal bool IsSetLatestIngestionErrorCode();
    public string get_LatestIngestionSuccessEventID();
    public void set_LatestIngestionSuccessEventID(string value);
    internal bool IsSetLatestIngestionSuccessEventID();
    public Nullable`1<DateTime> get_LatestIngestionSuccessTime();
    public void set_LatestIngestionSuccessTime(Nullable`1<DateTime> value);
    internal bool IsSetLatestIngestionSuccessTime();
}
public class Amazon.CloudTrail.Model.InsightNotEnabledException : AmazonCloudTrailException {
    public InsightNotEnabledException(string message);
    public InsightNotEnabledException(string message, Exception innerException);
    public InsightNotEnabledException(Exception innerException);
    public InsightNotEnabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsightNotEnabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InsightSelector : object {
    private InsightType _insightType;
    public InsightType InsightType { get; public set; }
    public InsightType get_InsightType();
    public void set_InsightType(InsightType value);
    internal bool IsSetInsightType();
}
public class Amazon.CloudTrail.Model.InsufficientDependencyServiceAccessPermissionException : AmazonCloudTrailException {
    public InsufficientDependencyServiceAccessPermissionException(string message);
    public InsufficientDependencyServiceAccessPermissionException(string message, Exception innerException);
    public InsufficientDependencyServiceAccessPermissionException(Exception innerException);
    public InsufficientDependencyServiceAccessPermissionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientDependencyServiceAccessPermissionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InsufficientEncryptionPolicyException : AmazonCloudTrailException {
    public InsufficientEncryptionPolicyException(string message);
    public InsufficientEncryptionPolicyException(string message, Exception innerException);
    public InsufficientEncryptionPolicyException(Exception innerException);
    public InsufficientEncryptionPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientEncryptionPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InsufficientS3BucketPolicyException : AmazonCloudTrailException {
    public InsufficientS3BucketPolicyException(string message);
    public InsufficientS3BucketPolicyException(string message, Exception innerException);
    public InsufficientS3BucketPolicyException(Exception innerException);
    public InsufficientS3BucketPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientS3BucketPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InsufficientSnsTopicPolicyException : AmazonCloudTrailException {
    public InsufficientSnsTopicPolicyException(string message);
    public InsufficientSnsTopicPolicyException(string message, Exception innerException);
    public InsufficientSnsTopicPolicyException(Exception innerException);
    public InsufficientSnsTopicPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientSnsTopicPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller : object {
    private static AccessDeniedExceptionUnmarshaller _instance;
    public static AccessDeniedExceptionUnmarshaller Instance { get; }
    private static AccessDeniedExceptionUnmarshaller();
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AccountHasOngoingImportExceptionUnmarshaller : object {
    private static AccountHasOngoingImportExceptionUnmarshaller _instance;
    public static AccountHasOngoingImportExceptionUnmarshaller Instance { get; }
    private static AccountHasOngoingImportExceptionUnmarshaller();
    public sealed virtual AccountHasOngoingImportException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccountHasOngoingImportException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccountHasOngoingImportExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AccountNotFoundExceptionUnmarshaller : object {
    private static AccountNotFoundExceptionUnmarshaller _instance;
    public static AccountNotFoundExceptionUnmarshaller Instance { get; }
    private static AccountNotFoundExceptionUnmarshaller();
    public sealed virtual AccountNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccountNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccountNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AccountNotRegisteredExceptionUnmarshaller : object {
    private static AccountNotRegisteredExceptionUnmarshaller _instance;
    public static AccountNotRegisteredExceptionUnmarshaller Instance { get; }
    private static AccountNotRegisteredExceptionUnmarshaller();
    public sealed virtual AccountNotRegisteredException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccountNotRegisteredException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccountNotRegisteredExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AccountRegisteredExceptionUnmarshaller : object {
    private static AccountRegisteredExceptionUnmarshaller _instance;
    public static AccountRegisteredExceptionUnmarshaller Instance { get; }
    private static AccountRegisteredExceptionUnmarshaller();
    public sealed virtual AccountRegisteredException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccountRegisteredException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccountRegisteredExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AddTagsRequestMarshaller : object {
    private static AddTagsRequestMarshaller _instance;
    public static AddTagsRequestMarshaller Instance { get; }
    private static AddTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTagsRequest publicRequest);
    internal static AddTagsRequestMarshaller GetInstance();
    public static AddTagsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AddTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddTagsResponseUnmarshaller _instance;
    public static AddTagsResponseUnmarshaller Instance { get; }
    private static AddTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTagsResponseUnmarshaller GetInstance();
    public static AddTagsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AdvancedEventSelectorMarshaller : object {
    public static AdvancedEventSelectorMarshaller Instance;
    private static AdvancedEventSelectorMarshaller();
    public sealed virtual void Marshall(AdvancedEventSelector requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AdvancedEventSelectorUnmarshaller : object {
    private static AdvancedEventSelectorUnmarshaller _instance;
    public static AdvancedEventSelectorUnmarshaller Instance { get; }
    private static AdvancedEventSelectorUnmarshaller();
    private sealed virtual override AdvancedEventSelector Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.AdvancedEventSelector,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AdvancedEventSelector Unmarshall(JsonUnmarshallerContext context);
    public static AdvancedEventSelectorUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AdvancedFieldSelectorMarshaller : object {
    public static AdvancedFieldSelectorMarshaller Instance;
    private static AdvancedFieldSelectorMarshaller();
    public sealed virtual void Marshall(AdvancedFieldSelector requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.AdvancedFieldSelectorUnmarshaller : object {
    private static AdvancedFieldSelectorUnmarshaller _instance;
    public static AdvancedFieldSelectorUnmarshaller Instance { get; }
    private static AdvancedFieldSelectorUnmarshaller();
    private sealed virtual override AdvancedFieldSelector Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.AdvancedFieldSelector,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AdvancedFieldSelector Unmarshall(JsonUnmarshallerContext context);
    public static AdvancedFieldSelectorUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CancelQueryRequestMarshaller : object {
    private static CancelQueryRequestMarshaller _instance;
    public static CancelQueryRequestMarshaller Instance { get; }
    private static CancelQueryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelQueryRequest publicRequest);
    internal static CancelQueryRequestMarshaller GetInstance();
    public static CancelQueryRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CancelQueryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelQueryResponseUnmarshaller _instance;
    public static CancelQueryResponseUnmarshaller Instance { get; }
    private static CancelQueryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelQueryResponseUnmarshaller GetInstance();
    public static CancelQueryResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CannotDelegateManagementAccountExceptionUnmarshaller : object {
    private static CannotDelegateManagementAccountExceptionUnmarshaller _instance;
    public static CannotDelegateManagementAccountExceptionUnmarshaller Instance { get; }
    private static CannotDelegateManagementAccountExceptionUnmarshaller();
    public sealed virtual CannotDelegateManagementAccountException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CannotDelegateManagementAccountException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CannotDelegateManagementAccountExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ChannelAlreadyExistsExceptionUnmarshaller : object {
    private static ChannelAlreadyExistsExceptionUnmarshaller _instance;
    public static ChannelAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ChannelAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ChannelAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ChannelAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ChannelAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ChannelARNInvalidExceptionUnmarshaller : object {
    private static ChannelARNInvalidExceptionUnmarshaller _instance;
    public static ChannelARNInvalidExceptionUnmarshaller Instance { get; }
    private static ChannelARNInvalidExceptionUnmarshaller();
    public sealed virtual ChannelARNInvalidException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ChannelARNInvalidException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ChannelARNInvalidExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ChannelExistsForEDSExceptionUnmarshaller : object {
    private static ChannelExistsForEDSExceptionUnmarshaller _instance;
    public static ChannelExistsForEDSExceptionUnmarshaller Instance { get; }
    private static ChannelExistsForEDSExceptionUnmarshaller();
    public sealed virtual ChannelExistsForEDSException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ChannelExistsForEDSException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ChannelExistsForEDSExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ChannelMaxLimitExceededExceptionUnmarshaller : object {
    private static ChannelMaxLimitExceededExceptionUnmarshaller _instance;
    public static ChannelMaxLimitExceededExceptionUnmarshaller Instance { get; }
    private static ChannelMaxLimitExceededExceptionUnmarshaller();
    public sealed virtual ChannelMaxLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ChannelMaxLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ChannelMaxLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ChannelNotFoundExceptionUnmarshaller : object {
    private static ChannelNotFoundExceptionUnmarshaller _instance;
    public static ChannelNotFoundExceptionUnmarshaller Instance { get; }
    private static ChannelNotFoundExceptionUnmarshaller();
    public sealed virtual ChannelNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ChannelNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ChannelNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ChannelUnmarshaller : object {
    private static ChannelUnmarshaller _instance;
    public static ChannelUnmarshaller Instance { get; }
    private static ChannelUnmarshaller();
    private sealed virtual override Channel Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.Channel,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Channel Unmarshall(JsonUnmarshallerContext context);
    public static ChannelUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CloudTrailAccessNotEnabledExceptionUnmarshaller : object {
    private static CloudTrailAccessNotEnabledExceptionUnmarshaller _instance;
    public static CloudTrailAccessNotEnabledExceptionUnmarshaller Instance { get; }
    private static CloudTrailAccessNotEnabledExceptionUnmarshaller();
    public sealed virtual CloudTrailAccessNotEnabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CloudTrailAccessNotEnabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CloudTrailAccessNotEnabledExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CloudTrailARNInvalidExceptionUnmarshaller : object {
    private static CloudTrailARNInvalidExceptionUnmarshaller _instance;
    public static CloudTrailARNInvalidExceptionUnmarshaller Instance { get; }
    private static CloudTrailARNInvalidExceptionUnmarshaller();
    public sealed virtual CloudTrailARNInvalidException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CloudTrailARNInvalidException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CloudTrailARNInvalidExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CloudTrailInvalidClientTokenIdExceptionUnmarshaller : object {
    private static CloudTrailInvalidClientTokenIdExceptionUnmarshaller _instance;
    public static CloudTrailInvalidClientTokenIdExceptionUnmarshaller Instance { get; }
    private static CloudTrailInvalidClientTokenIdExceptionUnmarshaller();
    public sealed virtual CloudTrailInvalidClientTokenIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CloudTrailInvalidClientTokenIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CloudTrailInvalidClientTokenIdExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CloudWatchLogsDeliveryUnavailableExceptionUnmarshaller : object {
    private static CloudWatchLogsDeliveryUnavailableExceptionUnmarshaller _instance;
    public static CloudWatchLogsDeliveryUnavailableExceptionUnmarshaller Instance { get; }
    private static CloudWatchLogsDeliveryUnavailableExceptionUnmarshaller();
    public sealed virtual CloudWatchLogsDeliveryUnavailableException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CloudWatchLogsDeliveryUnavailableException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CloudWatchLogsDeliveryUnavailableExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller : object {
    private static ConcurrentModificationExceptionUnmarshaller _instance;
    public static ConcurrentModificationExceptionUnmarshaller Instance { get; }
    private static ConcurrentModificationExceptionUnmarshaller();
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConcurrentModificationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CreateChannelRequestMarshaller : object {
    private static CreateChannelRequestMarshaller _instance;
    public static CreateChannelRequestMarshaller Instance { get; }
    private static CreateChannelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateChannelRequest publicRequest);
    internal static CreateChannelRequestMarshaller GetInstance();
    public static CreateChannelRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CreateChannelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateChannelResponseUnmarshaller _instance;
    public static CreateChannelResponseUnmarshaller Instance { get; }
    private static CreateChannelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateChannelResponseUnmarshaller GetInstance();
    public static CreateChannelResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CreateEventDataStoreRequestMarshaller : object {
    private static CreateEventDataStoreRequestMarshaller _instance;
    public static CreateEventDataStoreRequestMarshaller Instance { get; }
    private static CreateEventDataStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateEventDataStoreRequest publicRequest);
    internal static CreateEventDataStoreRequestMarshaller GetInstance();
    public static CreateEventDataStoreRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CreateEventDataStoreResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateEventDataStoreResponseUnmarshaller _instance;
    public static CreateEventDataStoreResponseUnmarshaller Instance { get; }
    private static CreateEventDataStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateEventDataStoreResponseUnmarshaller GetInstance();
    public static CreateEventDataStoreResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CreateTrailRequestMarshaller : object {
    private static CreateTrailRequestMarshaller _instance;
    public static CreateTrailRequestMarshaller Instance { get; }
    private static CreateTrailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTrailRequest publicRequest);
    internal static CreateTrailRequestMarshaller GetInstance();
    public static CreateTrailRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.CreateTrailResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTrailResponseUnmarshaller _instance;
    public static CreateTrailResponseUnmarshaller Instance { get; }
    private static CreateTrailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTrailResponseUnmarshaller GetInstance();
    public static CreateTrailResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DataResourceMarshaller : object {
    public static DataResourceMarshaller Instance;
    private static DataResourceMarshaller();
    public sealed virtual void Marshall(DataResource requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DataResourceUnmarshaller : object {
    private static DataResourceUnmarshaller _instance;
    public static DataResourceUnmarshaller Instance { get; }
    private static DataResourceUnmarshaller();
    private sealed virtual override DataResource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.DataResource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataResource Unmarshall(JsonUnmarshallerContext context);
    public static DataResourceUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DelegatedAdminAccountLimitExceededExceptionUnmarshaller : object {
    private static DelegatedAdminAccountLimitExceededExceptionUnmarshaller _instance;
    public static DelegatedAdminAccountLimitExceededExceptionUnmarshaller Instance { get; }
    private static DelegatedAdminAccountLimitExceededExceptionUnmarshaller();
    public sealed virtual DelegatedAdminAccountLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DelegatedAdminAccountLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DelegatedAdminAccountLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DeleteChannelRequestMarshaller : object {
    private static DeleteChannelRequestMarshaller _instance;
    public static DeleteChannelRequestMarshaller Instance { get; }
    private static DeleteChannelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteChannelRequest publicRequest);
    internal static DeleteChannelRequestMarshaller GetInstance();
    public static DeleteChannelRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DeleteChannelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteChannelResponseUnmarshaller _instance;
    public static DeleteChannelResponseUnmarshaller Instance { get; }
    private static DeleteChannelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteChannelResponseUnmarshaller GetInstance();
    public static DeleteChannelResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DeleteEventDataStoreRequestMarshaller : object {
    private static DeleteEventDataStoreRequestMarshaller _instance;
    public static DeleteEventDataStoreRequestMarshaller Instance { get; }
    private static DeleteEventDataStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteEventDataStoreRequest publicRequest);
    internal static DeleteEventDataStoreRequestMarshaller GetInstance();
    public static DeleteEventDataStoreRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DeleteEventDataStoreResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteEventDataStoreResponseUnmarshaller _instance;
    public static DeleteEventDataStoreResponseUnmarshaller Instance { get; }
    private static DeleteEventDataStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteEventDataStoreResponseUnmarshaller GetInstance();
    public static DeleteEventDataStoreResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller : object {
    private static DeleteResourcePolicyRequestMarshaller _instance;
    public static DeleteResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourcePolicyRequest publicRequest);
    internal static DeleteResourcePolicyRequestMarshaller GetInstance();
    public static DeleteResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourcePolicyResponseUnmarshaller _instance;
    public static DeleteResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DeleteTrailRequestMarshaller : object {
    private static DeleteTrailRequestMarshaller _instance;
    public static DeleteTrailRequestMarshaller Instance { get; }
    private static DeleteTrailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTrailRequest publicRequest);
    internal static DeleteTrailRequestMarshaller GetInstance();
    public static DeleteTrailRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DeleteTrailResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTrailResponseUnmarshaller _instance;
    public static DeleteTrailResponseUnmarshaller Instance { get; }
    private static DeleteTrailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTrailResponseUnmarshaller GetInstance();
    public static DeleteTrailResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DeregisterOrganizationDelegatedAdminRequestMarshaller : object {
    private static DeregisterOrganizationDelegatedAdminRequestMarshaller _instance;
    public static DeregisterOrganizationDelegatedAdminRequestMarshaller Instance { get; }
    private static DeregisterOrganizationDelegatedAdminRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeregisterOrganizationDelegatedAdminRequest publicRequest);
    internal static DeregisterOrganizationDelegatedAdminRequestMarshaller GetInstance();
    public static DeregisterOrganizationDelegatedAdminRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DeregisterOrganizationDelegatedAdminResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeregisterOrganizationDelegatedAdminResponseUnmarshaller _instance;
    public static DeregisterOrganizationDelegatedAdminResponseUnmarshaller Instance { get; }
    private static DeregisterOrganizationDelegatedAdminResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeregisterOrganizationDelegatedAdminResponseUnmarshaller GetInstance();
    public static DeregisterOrganizationDelegatedAdminResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DescribeQueryRequestMarshaller : object {
    private static DescribeQueryRequestMarshaller _instance;
    public static DescribeQueryRequestMarshaller Instance { get; }
    private static DescribeQueryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeQueryRequest publicRequest);
    internal static DescribeQueryRequestMarshaller GetInstance();
    public static DescribeQueryRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DescribeQueryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeQueryResponseUnmarshaller _instance;
    public static DescribeQueryResponseUnmarshaller Instance { get; }
    private static DescribeQueryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeQueryResponseUnmarshaller GetInstance();
    public static DescribeQueryResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DescribeTrailsRequestMarshaller : object {
    private static DescribeTrailsRequestMarshaller _instance;
    public static DescribeTrailsRequestMarshaller Instance { get; }
    private static DescribeTrailsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTrailsRequest publicRequest);
    internal static DescribeTrailsRequestMarshaller GetInstance();
    public static DescribeTrailsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DescribeTrailsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTrailsResponseUnmarshaller _instance;
    public static DescribeTrailsResponseUnmarshaller Instance { get; }
    private static DescribeTrailsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTrailsResponseUnmarshaller GetInstance();
    public static DescribeTrailsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DestinationMarshaller : object {
    public static DestinationMarshaller Instance;
    private static DestinationMarshaller();
    public sealed virtual void Marshall(Destination requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DestinationUnmarshaller : object {
    private static DestinationUnmarshaller _instance;
    public static DestinationUnmarshaller Instance { get; }
    private static DestinationUnmarshaller();
    private sealed virtual override Destination Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.Destination,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Destination Unmarshall(JsonUnmarshallerContext context);
    public static DestinationUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DisableFederationRequestMarshaller : object {
    private static DisableFederationRequestMarshaller _instance;
    public static DisableFederationRequestMarshaller Instance { get; }
    private static DisableFederationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableFederationRequest publicRequest);
    internal static DisableFederationRequestMarshaller GetInstance();
    public static DisableFederationRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.DisableFederationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisableFederationResponseUnmarshaller _instance;
    public static DisableFederationResponseUnmarshaller Instance { get; }
    private static DisableFederationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableFederationResponseUnmarshaller GetInstance();
    public static DisableFederationResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EnableFederationRequestMarshaller : object {
    private static EnableFederationRequestMarshaller _instance;
    public static EnableFederationRequestMarshaller Instance { get; }
    private static EnableFederationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableFederationRequest publicRequest);
    internal static EnableFederationRequestMarshaller GetInstance();
    public static EnableFederationRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EnableFederationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static EnableFederationResponseUnmarshaller _instance;
    public static EnableFederationResponseUnmarshaller Instance { get; }
    private static EnableFederationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableFederationResponseUnmarshaller GetInstance();
    public static EnableFederationResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventDataStoreAlreadyExistsExceptionUnmarshaller : object {
    private static EventDataStoreAlreadyExistsExceptionUnmarshaller _instance;
    public static EventDataStoreAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static EventDataStoreAlreadyExistsExceptionUnmarshaller();
    public sealed virtual EventDataStoreAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EventDataStoreAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EventDataStoreAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventDataStoreARNInvalidExceptionUnmarshaller : object {
    private static EventDataStoreARNInvalidExceptionUnmarshaller _instance;
    public static EventDataStoreARNInvalidExceptionUnmarshaller Instance { get; }
    private static EventDataStoreARNInvalidExceptionUnmarshaller();
    public sealed virtual EventDataStoreARNInvalidException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EventDataStoreARNInvalidException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EventDataStoreARNInvalidExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventDataStoreFederationEnabledExceptionUnmarshaller : object {
    private static EventDataStoreFederationEnabledExceptionUnmarshaller _instance;
    public static EventDataStoreFederationEnabledExceptionUnmarshaller Instance { get; }
    private static EventDataStoreFederationEnabledExceptionUnmarshaller();
    public sealed virtual EventDataStoreFederationEnabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EventDataStoreFederationEnabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EventDataStoreFederationEnabledExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventDataStoreHasOngoingImportExceptionUnmarshaller : object {
    private static EventDataStoreHasOngoingImportExceptionUnmarshaller _instance;
    public static EventDataStoreHasOngoingImportExceptionUnmarshaller Instance { get; }
    private static EventDataStoreHasOngoingImportExceptionUnmarshaller();
    public sealed virtual EventDataStoreHasOngoingImportException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EventDataStoreHasOngoingImportException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EventDataStoreHasOngoingImportExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventDataStoreMaxLimitExceededExceptionUnmarshaller : object {
    private static EventDataStoreMaxLimitExceededExceptionUnmarshaller _instance;
    public static EventDataStoreMaxLimitExceededExceptionUnmarshaller Instance { get; }
    private static EventDataStoreMaxLimitExceededExceptionUnmarshaller();
    public sealed virtual EventDataStoreMaxLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EventDataStoreMaxLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EventDataStoreMaxLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventDataStoreNotFoundExceptionUnmarshaller : object {
    private static EventDataStoreNotFoundExceptionUnmarshaller _instance;
    public static EventDataStoreNotFoundExceptionUnmarshaller Instance { get; }
    private static EventDataStoreNotFoundExceptionUnmarshaller();
    public sealed virtual EventDataStoreNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EventDataStoreNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EventDataStoreNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventDataStoreTerminationProtectedExceptionUnmarshaller : object {
    private static EventDataStoreTerminationProtectedExceptionUnmarshaller _instance;
    public static EventDataStoreTerminationProtectedExceptionUnmarshaller Instance { get; }
    private static EventDataStoreTerminationProtectedExceptionUnmarshaller();
    public sealed virtual EventDataStoreTerminationProtectedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EventDataStoreTerminationProtectedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EventDataStoreTerminationProtectedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventDataStoreUnmarshaller : object {
    private static EventDataStoreUnmarshaller _instance;
    public static EventDataStoreUnmarshaller Instance { get; }
    private static EventDataStoreUnmarshaller();
    private sealed virtual override EventDataStore Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.EventDataStore,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventDataStore Unmarshall(JsonUnmarshallerContext context);
    public static EventDataStoreUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventSelectorMarshaller : object {
    public static EventSelectorMarshaller Instance;
    private static EventSelectorMarshaller();
    public sealed virtual void Marshall(EventSelector requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventSelectorUnmarshaller : object {
    private static EventSelectorUnmarshaller _instance;
    public static EventSelectorUnmarshaller Instance { get; }
    private static EventSelectorUnmarshaller();
    private sealed virtual override EventSelector Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.EventSelector,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventSelector Unmarshall(JsonUnmarshallerContext context);
    public static EventSelectorUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.EventUnmarshaller : object {
    private static EventUnmarshaller _instance;
    public static EventUnmarshaller Instance { get; }
    private static EventUnmarshaller();
    private sealed virtual override Event Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.Event,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Event Unmarshall(JsonUnmarshallerContext context);
    public static EventUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetChannelRequestMarshaller : object {
    private static GetChannelRequestMarshaller _instance;
    public static GetChannelRequestMarshaller Instance { get; }
    private static GetChannelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetChannelRequest publicRequest);
    internal static GetChannelRequestMarshaller GetInstance();
    public static GetChannelRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetChannelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetChannelResponseUnmarshaller _instance;
    public static GetChannelResponseUnmarshaller Instance { get; }
    private static GetChannelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetChannelResponseUnmarshaller GetInstance();
    public static GetChannelResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetEventDataStoreRequestMarshaller : object {
    private static GetEventDataStoreRequestMarshaller _instance;
    public static GetEventDataStoreRequestMarshaller Instance { get; }
    private static GetEventDataStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetEventDataStoreRequest publicRequest);
    internal static GetEventDataStoreRequestMarshaller GetInstance();
    public static GetEventDataStoreRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetEventDataStoreResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetEventDataStoreResponseUnmarshaller _instance;
    public static GetEventDataStoreResponseUnmarshaller Instance { get; }
    private static GetEventDataStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetEventDataStoreResponseUnmarshaller GetInstance();
    public static GetEventDataStoreResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetEventSelectorsRequestMarshaller : object {
    private static GetEventSelectorsRequestMarshaller _instance;
    public static GetEventSelectorsRequestMarshaller Instance { get; }
    private static GetEventSelectorsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetEventSelectorsRequest publicRequest);
    internal static GetEventSelectorsRequestMarshaller GetInstance();
    public static GetEventSelectorsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetEventSelectorsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetEventSelectorsResponseUnmarshaller _instance;
    public static GetEventSelectorsResponseUnmarshaller Instance { get; }
    private static GetEventSelectorsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetEventSelectorsResponseUnmarshaller GetInstance();
    public static GetEventSelectorsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetImportRequestMarshaller : object {
    private static GetImportRequestMarshaller _instance;
    public static GetImportRequestMarshaller Instance { get; }
    private static GetImportRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetImportRequest publicRequest);
    internal static GetImportRequestMarshaller GetInstance();
    public static GetImportRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetImportResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetImportResponseUnmarshaller _instance;
    public static GetImportResponseUnmarshaller Instance { get; }
    private static GetImportResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetImportResponseUnmarshaller GetInstance();
    public static GetImportResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetInsightSelectorsRequestMarshaller : object {
    private static GetInsightSelectorsRequestMarshaller _instance;
    public static GetInsightSelectorsRequestMarshaller Instance { get; }
    private static GetInsightSelectorsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInsightSelectorsRequest publicRequest);
    internal static GetInsightSelectorsRequestMarshaller GetInstance();
    public static GetInsightSelectorsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetInsightSelectorsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetInsightSelectorsResponseUnmarshaller _instance;
    public static GetInsightSelectorsResponseUnmarshaller Instance { get; }
    private static GetInsightSelectorsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInsightSelectorsResponseUnmarshaller GetInstance();
    public static GetInsightSelectorsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetQueryResultsRequestMarshaller : object {
    private static GetQueryResultsRequestMarshaller _instance;
    public static GetQueryResultsRequestMarshaller Instance { get; }
    private static GetQueryResultsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetQueryResultsRequest publicRequest);
    internal static GetQueryResultsRequestMarshaller GetInstance();
    public static GetQueryResultsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetQueryResultsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetQueryResultsResponseUnmarshaller _instance;
    public static GetQueryResultsResponseUnmarshaller Instance { get; }
    private static GetQueryResultsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetQueryResultsResponseUnmarshaller GetInstance();
    public static GetQueryResultsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller : object {
    private static GetResourcePolicyRequestMarshaller _instance;
    public static GetResourcePolicyRequestMarshaller Instance { get; }
    private static GetResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetResourcePolicyRequest publicRequest);
    internal static GetResourcePolicyRequestMarshaller GetInstance();
    public static GetResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetResourcePolicyResponseUnmarshaller _instance;
    public static GetResourcePolicyResponseUnmarshaller Instance { get; }
    private static GetResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetResourcePolicyResponseUnmarshaller GetInstance();
    public static GetResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetTrailRequestMarshaller : object {
    private static GetTrailRequestMarshaller _instance;
    public static GetTrailRequestMarshaller Instance { get; }
    private static GetTrailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTrailRequest publicRequest);
    internal static GetTrailRequestMarshaller GetInstance();
    public static GetTrailRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetTrailResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTrailResponseUnmarshaller _instance;
    public static GetTrailResponseUnmarshaller Instance { get; }
    private static GetTrailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTrailResponseUnmarshaller GetInstance();
    public static GetTrailResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetTrailStatusRequestMarshaller : object {
    private static GetTrailStatusRequestMarshaller _instance;
    public static GetTrailStatusRequestMarshaller Instance { get; }
    private static GetTrailStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetTrailStatusRequest publicRequest);
    internal static GetTrailStatusRequestMarshaller GetInstance();
    public static GetTrailStatusRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.GetTrailStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetTrailStatusResponseUnmarshaller _instance;
    public static GetTrailStatusResponseUnmarshaller Instance { get; }
    private static GetTrailStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetTrailStatusResponseUnmarshaller GetInstance();
    public static GetTrailStatusResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ImportFailureListItemUnmarshaller : object {
    private static ImportFailureListItemUnmarshaller _instance;
    public static ImportFailureListItemUnmarshaller Instance { get; }
    private static ImportFailureListItemUnmarshaller();
    private sealed virtual override ImportFailureListItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.ImportFailureListItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportFailureListItem Unmarshall(JsonUnmarshallerContext context);
    public static ImportFailureListItemUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ImportNotFoundExceptionUnmarshaller : object {
    private static ImportNotFoundExceptionUnmarshaller _instance;
    public static ImportNotFoundExceptionUnmarshaller Instance { get; }
    private static ImportNotFoundExceptionUnmarshaller();
    public sealed virtual ImportNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ImportNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ImportNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ImportsListItemUnmarshaller : object {
    private static ImportsListItemUnmarshaller _instance;
    public static ImportsListItemUnmarshaller Instance { get; }
    private static ImportsListItemUnmarshaller();
    private sealed virtual override ImportsListItem Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.ImportsListItem,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportsListItem Unmarshall(JsonUnmarshallerContext context);
    public static ImportsListItemUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ImportSourceMarshaller : object {
    public static ImportSourceMarshaller Instance;
    private static ImportSourceMarshaller();
    public sealed virtual void Marshall(ImportSource requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ImportSourceUnmarshaller : object {
    private static ImportSourceUnmarshaller _instance;
    public static ImportSourceUnmarshaller Instance { get; }
    private static ImportSourceUnmarshaller();
    private sealed virtual override ImportSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.ImportSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportSource Unmarshall(JsonUnmarshallerContext context);
    public static ImportSourceUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ImportStatisticsUnmarshaller : object {
    private static ImportStatisticsUnmarshaller _instance;
    public static ImportStatisticsUnmarshaller Instance { get; }
    private static ImportStatisticsUnmarshaller();
    private sealed virtual override ImportStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.ImportStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportStatistics Unmarshall(JsonUnmarshallerContext context);
    public static ImportStatisticsUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InactiveEventDataStoreExceptionUnmarshaller : object {
    private static InactiveEventDataStoreExceptionUnmarshaller _instance;
    public static InactiveEventDataStoreExceptionUnmarshaller Instance { get; }
    private static InactiveEventDataStoreExceptionUnmarshaller();
    public sealed virtual InactiveEventDataStoreException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InactiveEventDataStoreException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InactiveEventDataStoreExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InactiveQueryExceptionUnmarshaller : object {
    private static InactiveQueryExceptionUnmarshaller _instance;
    public static InactiveQueryExceptionUnmarshaller Instance { get; }
    private static InactiveQueryExceptionUnmarshaller();
    public sealed virtual InactiveQueryException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InactiveQueryException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InactiveQueryExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.IngestionStatusUnmarshaller : object {
    private static IngestionStatusUnmarshaller _instance;
    public static IngestionStatusUnmarshaller Instance { get; }
    private static IngestionStatusUnmarshaller();
    private sealed virtual override IngestionStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.IngestionStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IngestionStatus Unmarshall(JsonUnmarshallerContext context);
    public static IngestionStatusUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InsightNotEnabledExceptionUnmarshaller : object {
    private static InsightNotEnabledExceptionUnmarshaller _instance;
    public static InsightNotEnabledExceptionUnmarshaller Instance { get; }
    private static InsightNotEnabledExceptionUnmarshaller();
    public sealed virtual InsightNotEnabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InsightNotEnabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsightNotEnabledExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InsightSelectorMarshaller : object {
    public static InsightSelectorMarshaller Instance;
    private static InsightSelectorMarshaller();
    public sealed virtual void Marshall(InsightSelector requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InsightSelectorUnmarshaller : object {
    private static InsightSelectorUnmarshaller _instance;
    public static InsightSelectorUnmarshaller Instance { get; }
    private static InsightSelectorUnmarshaller();
    private sealed virtual override InsightSelector Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.InsightSelector,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsightSelector Unmarshall(JsonUnmarshallerContext context);
    public static InsightSelectorUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InsufficientDependencyServiceAccessPermissionExceptionUnmarshaller : object {
    private static InsufficientDependencyServiceAccessPermissionExceptionUnmarshaller _instance;
    public static InsufficientDependencyServiceAccessPermissionExceptionUnmarshaller Instance { get; }
    private static InsufficientDependencyServiceAccessPermissionExceptionUnmarshaller();
    public sealed virtual InsufficientDependencyServiceAccessPermissionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InsufficientDependencyServiceAccessPermissionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientDependencyServiceAccessPermissionExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InsufficientEncryptionPolicyExceptionUnmarshaller : object {
    private static InsufficientEncryptionPolicyExceptionUnmarshaller _instance;
    public static InsufficientEncryptionPolicyExceptionUnmarshaller Instance { get; }
    private static InsufficientEncryptionPolicyExceptionUnmarshaller();
    public sealed virtual InsufficientEncryptionPolicyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InsufficientEncryptionPolicyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientEncryptionPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InsufficientS3BucketPolicyExceptionUnmarshaller : object {
    private static InsufficientS3BucketPolicyExceptionUnmarshaller _instance;
    public static InsufficientS3BucketPolicyExceptionUnmarshaller Instance { get; }
    private static InsufficientS3BucketPolicyExceptionUnmarshaller();
    public sealed virtual InsufficientS3BucketPolicyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InsufficientS3BucketPolicyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientS3BucketPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InsufficientSnsTopicPolicyExceptionUnmarshaller : object {
    private static InsufficientSnsTopicPolicyExceptionUnmarshaller _instance;
    public static InsufficientSnsTopicPolicyExceptionUnmarshaller Instance { get; }
    private static InsufficientSnsTopicPolicyExceptionUnmarshaller();
    public sealed virtual InsufficientSnsTopicPolicyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InsufficientSnsTopicPolicyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientSnsTopicPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidCloudWatchLogsLogGroupArnExceptionUnmarshaller : object {
    private static InvalidCloudWatchLogsLogGroupArnExceptionUnmarshaller _instance;
    public static InvalidCloudWatchLogsLogGroupArnExceptionUnmarshaller Instance { get; }
    private static InvalidCloudWatchLogsLogGroupArnExceptionUnmarshaller();
    public sealed virtual InvalidCloudWatchLogsLogGroupArnException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidCloudWatchLogsLogGroupArnException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidCloudWatchLogsLogGroupArnExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidCloudWatchLogsRoleArnExceptionUnmarshaller : object {
    private static InvalidCloudWatchLogsRoleArnExceptionUnmarshaller _instance;
    public static InvalidCloudWatchLogsRoleArnExceptionUnmarshaller Instance { get; }
    private static InvalidCloudWatchLogsRoleArnExceptionUnmarshaller();
    public sealed virtual InvalidCloudWatchLogsRoleArnException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidCloudWatchLogsRoleArnException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidCloudWatchLogsRoleArnExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidDateRangeExceptionUnmarshaller : object {
    private static InvalidDateRangeExceptionUnmarshaller _instance;
    public static InvalidDateRangeExceptionUnmarshaller Instance { get; }
    private static InvalidDateRangeExceptionUnmarshaller();
    public sealed virtual InvalidDateRangeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidDateRangeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidDateRangeExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidEventCategoryExceptionUnmarshaller : object {
    private static InvalidEventCategoryExceptionUnmarshaller _instance;
    public static InvalidEventCategoryExceptionUnmarshaller Instance { get; }
    private static InvalidEventCategoryExceptionUnmarshaller();
    public sealed virtual InvalidEventCategoryException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidEventCategoryException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidEventCategoryExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidEventDataStoreCategoryExceptionUnmarshaller : object {
    private static InvalidEventDataStoreCategoryExceptionUnmarshaller _instance;
    public static InvalidEventDataStoreCategoryExceptionUnmarshaller Instance { get; }
    private static InvalidEventDataStoreCategoryExceptionUnmarshaller();
    public sealed virtual InvalidEventDataStoreCategoryException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidEventDataStoreCategoryException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidEventDataStoreCategoryExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidEventDataStoreStatusExceptionUnmarshaller : object {
    private static InvalidEventDataStoreStatusExceptionUnmarshaller _instance;
    public static InvalidEventDataStoreStatusExceptionUnmarshaller Instance { get; }
    private static InvalidEventDataStoreStatusExceptionUnmarshaller();
    public sealed virtual InvalidEventDataStoreStatusException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidEventDataStoreStatusException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidEventDataStoreStatusExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidEventSelectorsExceptionUnmarshaller : object {
    private static InvalidEventSelectorsExceptionUnmarshaller _instance;
    public static InvalidEventSelectorsExceptionUnmarshaller Instance { get; }
    private static InvalidEventSelectorsExceptionUnmarshaller();
    public sealed virtual InvalidEventSelectorsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidEventSelectorsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidEventSelectorsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidHomeRegionExceptionUnmarshaller : object {
    private static InvalidHomeRegionExceptionUnmarshaller _instance;
    public static InvalidHomeRegionExceptionUnmarshaller Instance { get; }
    private static InvalidHomeRegionExceptionUnmarshaller();
    public sealed virtual InvalidHomeRegionException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidHomeRegionException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidHomeRegionExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidImportSourceExceptionUnmarshaller : object {
    private static InvalidImportSourceExceptionUnmarshaller _instance;
    public static InvalidImportSourceExceptionUnmarshaller Instance { get; }
    private static InvalidImportSourceExceptionUnmarshaller();
    public sealed virtual InvalidImportSourceException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidImportSourceException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidImportSourceExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidInsightSelectorsExceptionUnmarshaller : object {
    private static InvalidInsightSelectorsExceptionUnmarshaller _instance;
    public static InvalidInsightSelectorsExceptionUnmarshaller Instance { get; }
    private static InvalidInsightSelectorsExceptionUnmarshaller();
    public sealed virtual InvalidInsightSelectorsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidInsightSelectorsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidInsightSelectorsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidKmsKeyIdExceptionUnmarshaller : object {
    private static InvalidKmsKeyIdExceptionUnmarshaller _instance;
    public static InvalidKmsKeyIdExceptionUnmarshaller Instance { get; }
    private static InvalidKmsKeyIdExceptionUnmarshaller();
    public sealed virtual InvalidKmsKeyIdException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidKmsKeyIdException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidKmsKeyIdExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidLookupAttributesExceptionUnmarshaller : object {
    private static InvalidLookupAttributesExceptionUnmarshaller _instance;
    public static InvalidLookupAttributesExceptionUnmarshaller Instance { get; }
    private static InvalidLookupAttributesExceptionUnmarshaller();
    public sealed virtual InvalidLookupAttributesException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidLookupAttributesException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidLookupAttributesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidMaxResultsExceptionUnmarshaller : object {
    private static InvalidMaxResultsExceptionUnmarshaller _instance;
    public static InvalidMaxResultsExceptionUnmarshaller Instance { get; }
    private static InvalidMaxResultsExceptionUnmarshaller();
    public sealed virtual InvalidMaxResultsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidMaxResultsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidMaxResultsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller : object {
    private static InvalidNextTokenExceptionUnmarshaller _instance;
    public static InvalidNextTokenExceptionUnmarshaller Instance { get; }
    private static InvalidNextTokenExceptionUnmarshaller();
    public sealed virtual InvalidNextTokenException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidNextTokenException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidNextTokenExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidParameterCombinationExceptionUnmarshaller : object {
    private static InvalidParameterCombinationExceptionUnmarshaller _instance;
    public static InvalidParameterCombinationExceptionUnmarshaller Instance { get; }
    private static InvalidParameterCombinationExceptionUnmarshaller();
    public sealed virtual InvalidParameterCombinationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterCombinationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterCombinationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller : object {
    private static InvalidParameterExceptionUnmarshaller _instance;
    public static InvalidParameterExceptionUnmarshaller Instance { get; }
    private static InvalidParameterExceptionUnmarshaller();
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidQueryStatementExceptionUnmarshaller : object {
    private static InvalidQueryStatementExceptionUnmarshaller _instance;
    public static InvalidQueryStatementExceptionUnmarshaller Instance { get; }
    private static InvalidQueryStatementExceptionUnmarshaller();
    public sealed virtual InvalidQueryStatementException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidQueryStatementException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidQueryStatementExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidQueryStatusExceptionUnmarshaller : object {
    private static InvalidQueryStatusExceptionUnmarshaller _instance;
    public static InvalidQueryStatusExceptionUnmarshaller Instance { get; }
    private static InvalidQueryStatusExceptionUnmarshaller();
    public sealed virtual InvalidQueryStatusException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidQueryStatusException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidQueryStatusExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidS3BucketNameExceptionUnmarshaller : object {
    private static InvalidS3BucketNameExceptionUnmarshaller _instance;
    public static InvalidS3BucketNameExceptionUnmarshaller Instance { get; }
    private static InvalidS3BucketNameExceptionUnmarshaller();
    public sealed virtual InvalidS3BucketNameException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidS3BucketNameException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidS3BucketNameExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidS3PrefixExceptionUnmarshaller : object {
    private static InvalidS3PrefixExceptionUnmarshaller _instance;
    public static InvalidS3PrefixExceptionUnmarshaller Instance { get; }
    private static InvalidS3PrefixExceptionUnmarshaller();
    public sealed virtual InvalidS3PrefixException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidS3PrefixException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidS3PrefixExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidSnsTopicNameExceptionUnmarshaller : object {
    private static InvalidSnsTopicNameExceptionUnmarshaller _instance;
    public static InvalidSnsTopicNameExceptionUnmarshaller Instance { get; }
    private static InvalidSnsTopicNameExceptionUnmarshaller();
    public sealed virtual InvalidSnsTopicNameException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidSnsTopicNameException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSnsTopicNameExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidSourceExceptionUnmarshaller : object {
    private static InvalidSourceExceptionUnmarshaller _instance;
    public static InvalidSourceExceptionUnmarshaller Instance { get; }
    private static InvalidSourceExceptionUnmarshaller();
    public sealed virtual InvalidSourceException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidSourceException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSourceExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidTagParameterExceptionUnmarshaller : object {
    private static InvalidTagParameterExceptionUnmarshaller _instance;
    public static InvalidTagParameterExceptionUnmarshaller Instance { get; }
    private static InvalidTagParameterExceptionUnmarshaller();
    public sealed virtual InvalidTagParameterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidTagParameterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTagParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidTimeRangeExceptionUnmarshaller : object {
    private static InvalidTimeRangeExceptionUnmarshaller _instance;
    public static InvalidTimeRangeExceptionUnmarshaller Instance { get; }
    private static InvalidTimeRangeExceptionUnmarshaller();
    public sealed virtual InvalidTimeRangeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidTimeRangeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTimeRangeExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidTokenExceptionUnmarshaller : object {
    private static InvalidTokenExceptionUnmarshaller _instance;
    public static InvalidTokenExceptionUnmarshaller Instance { get; }
    private static InvalidTokenExceptionUnmarshaller();
    public sealed virtual InvalidTokenException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidTokenException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTokenExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.InvalidTrailNameExceptionUnmarshaller : object {
    private static InvalidTrailNameExceptionUnmarshaller _instance;
    public static InvalidTrailNameExceptionUnmarshaller Instance { get; }
    private static InvalidTrailNameExceptionUnmarshaller();
    public sealed virtual InvalidTrailNameException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidTrailNameException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidTrailNameExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.KmsExceptionUnmarshaller : object {
    private static KmsExceptionUnmarshaller _instance;
    public static KmsExceptionUnmarshaller Instance { get; }
    private static KmsExceptionUnmarshaller();
    public sealed virtual KmsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KmsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KmsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.KmsKeyDisabledExceptionUnmarshaller : object {
    private static KmsKeyDisabledExceptionUnmarshaller _instance;
    public static KmsKeyDisabledExceptionUnmarshaller Instance { get; }
    private static KmsKeyDisabledExceptionUnmarshaller();
    public sealed virtual KmsKeyDisabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KmsKeyDisabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KmsKeyDisabledExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.KmsKeyNotFoundExceptionUnmarshaller : object {
    private static KmsKeyNotFoundExceptionUnmarshaller _instance;
    public static KmsKeyNotFoundExceptionUnmarshaller Instance { get; }
    private static KmsKeyNotFoundExceptionUnmarshaller();
    public sealed virtual KmsKeyNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KmsKeyNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KmsKeyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListChannelsRequestMarshaller : object {
    private static ListChannelsRequestMarshaller _instance;
    public static ListChannelsRequestMarshaller Instance { get; }
    private static ListChannelsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListChannelsRequest publicRequest);
    internal static ListChannelsRequestMarshaller GetInstance();
    public static ListChannelsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListChannelsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListChannelsResponseUnmarshaller _instance;
    public static ListChannelsResponseUnmarshaller Instance { get; }
    private static ListChannelsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListChannelsResponseUnmarshaller GetInstance();
    public static ListChannelsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListEventDataStoresRequestMarshaller : object {
    private static ListEventDataStoresRequestMarshaller _instance;
    public static ListEventDataStoresRequestMarshaller Instance { get; }
    private static ListEventDataStoresRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListEventDataStoresRequest publicRequest);
    internal static ListEventDataStoresRequestMarshaller GetInstance();
    public static ListEventDataStoresRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListEventDataStoresResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListEventDataStoresResponseUnmarshaller _instance;
    public static ListEventDataStoresResponseUnmarshaller Instance { get; }
    private static ListEventDataStoresResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListEventDataStoresResponseUnmarshaller GetInstance();
    public static ListEventDataStoresResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListImportFailuresRequestMarshaller : object {
    private static ListImportFailuresRequestMarshaller _instance;
    public static ListImportFailuresRequestMarshaller Instance { get; }
    private static ListImportFailuresRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListImportFailuresRequest publicRequest);
    internal static ListImportFailuresRequestMarshaller GetInstance();
    public static ListImportFailuresRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListImportFailuresResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListImportFailuresResponseUnmarshaller _instance;
    public static ListImportFailuresResponseUnmarshaller Instance { get; }
    private static ListImportFailuresResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListImportFailuresResponseUnmarshaller GetInstance();
    public static ListImportFailuresResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListImportsRequestMarshaller : object {
    private static ListImportsRequestMarshaller _instance;
    public static ListImportsRequestMarshaller Instance { get; }
    private static ListImportsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListImportsRequest publicRequest);
    internal static ListImportsRequestMarshaller GetInstance();
    public static ListImportsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListImportsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListImportsResponseUnmarshaller _instance;
    public static ListImportsResponseUnmarshaller Instance { get; }
    private static ListImportsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListImportsResponseUnmarshaller GetInstance();
    public static ListImportsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListInsightsMetricDataRequestMarshaller : object {
    private static ListInsightsMetricDataRequestMarshaller _instance;
    public static ListInsightsMetricDataRequestMarshaller Instance { get; }
    private static ListInsightsMetricDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListInsightsMetricDataRequest publicRequest);
    internal static ListInsightsMetricDataRequestMarshaller GetInstance();
    public static ListInsightsMetricDataRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListInsightsMetricDataResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListInsightsMetricDataResponseUnmarshaller _instance;
    public static ListInsightsMetricDataResponseUnmarshaller Instance { get; }
    private static ListInsightsMetricDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListInsightsMetricDataResponseUnmarshaller GetInstance();
    public static ListInsightsMetricDataResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListPublicKeysRequestMarshaller : object {
    private static ListPublicKeysRequestMarshaller _instance;
    public static ListPublicKeysRequestMarshaller Instance { get; }
    private static ListPublicKeysRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListPublicKeysRequest publicRequest);
    internal static ListPublicKeysRequestMarshaller GetInstance();
    public static ListPublicKeysRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListPublicKeysResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListPublicKeysResponseUnmarshaller _instance;
    public static ListPublicKeysResponseUnmarshaller Instance { get; }
    private static ListPublicKeysResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListPublicKeysResponseUnmarshaller GetInstance();
    public static ListPublicKeysResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListQueriesRequestMarshaller : object {
    private static ListQueriesRequestMarshaller _instance;
    public static ListQueriesRequestMarshaller Instance { get; }
    private static ListQueriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListQueriesRequest publicRequest);
    internal static ListQueriesRequestMarshaller GetInstance();
    public static ListQueriesRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListQueriesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListQueriesResponseUnmarshaller _instance;
    public static ListQueriesResponseUnmarshaller Instance { get; }
    private static ListQueriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListQueriesResponseUnmarshaller GetInstance();
    public static ListQueriesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller : object {
    private static ListTagsRequestMarshaller _instance;
    public static ListTagsRequestMarshaller Instance { get; }
    private static ListTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsRequest publicRequest);
    internal static ListTagsRequestMarshaller GetInstance();
    public static ListTagsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsResponseUnmarshaller _instance;
    public static ListTagsResponseUnmarshaller Instance { get; }
    private static ListTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsResponseUnmarshaller GetInstance();
    public static ListTagsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListTrailsRequestMarshaller : object {
    private static ListTrailsRequestMarshaller _instance;
    public static ListTrailsRequestMarshaller Instance { get; }
    private static ListTrailsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTrailsRequest publicRequest);
    internal static ListTrailsRequestMarshaller GetInstance();
    public static ListTrailsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ListTrailsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTrailsResponseUnmarshaller _instance;
    public static ListTrailsResponseUnmarshaller Instance { get; }
    private static ListTrailsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTrailsResponseUnmarshaller GetInstance();
    public static ListTrailsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.LookupAttributeMarshaller : object {
    public static LookupAttributeMarshaller Instance;
    private static LookupAttributeMarshaller();
    public sealed virtual void Marshall(LookupAttribute requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.LookupEventsRequestMarshaller : object {
    private static LookupEventsRequestMarshaller _instance;
    public static LookupEventsRequestMarshaller Instance { get; }
    private static LookupEventsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(LookupEventsRequest publicRequest);
    internal static LookupEventsRequestMarshaller GetInstance();
    public static LookupEventsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.LookupEventsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static LookupEventsResponseUnmarshaller _instance;
    public static LookupEventsResponseUnmarshaller Instance { get; }
    private static LookupEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static LookupEventsResponseUnmarshaller GetInstance();
    public static LookupEventsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.MaxConcurrentQueriesExceptionUnmarshaller : object {
    private static MaxConcurrentQueriesExceptionUnmarshaller _instance;
    public static MaxConcurrentQueriesExceptionUnmarshaller Instance { get; }
    private static MaxConcurrentQueriesExceptionUnmarshaller();
    public sealed virtual MaxConcurrentQueriesException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MaxConcurrentQueriesException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MaxConcurrentQueriesExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.MaximumNumberOfTrailsExceededExceptionUnmarshaller : object {
    private static MaximumNumberOfTrailsExceededExceptionUnmarshaller _instance;
    public static MaximumNumberOfTrailsExceededExceptionUnmarshaller Instance { get; }
    private static MaximumNumberOfTrailsExceededExceptionUnmarshaller();
    public sealed virtual MaximumNumberOfTrailsExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MaximumNumberOfTrailsExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MaximumNumberOfTrailsExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.NoManagementAccountSLRExistsExceptionUnmarshaller : object {
    private static NoManagementAccountSLRExistsExceptionUnmarshaller _instance;
    public static NoManagementAccountSLRExistsExceptionUnmarshaller Instance { get; }
    private static NoManagementAccountSLRExistsExceptionUnmarshaller();
    public sealed virtual NoManagementAccountSLRExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NoManagementAccountSLRExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NoManagementAccountSLRExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.NotOrganizationManagementAccountExceptionUnmarshaller : object {
    private static NotOrganizationManagementAccountExceptionUnmarshaller _instance;
    public static NotOrganizationManagementAccountExceptionUnmarshaller Instance { get; }
    private static NotOrganizationManagementAccountExceptionUnmarshaller();
    public sealed virtual NotOrganizationManagementAccountException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NotOrganizationManagementAccountException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NotOrganizationManagementAccountExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.NotOrganizationMasterAccountExceptionUnmarshaller : object {
    private static NotOrganizationMasterAccountExceptionUnmarshaller _instance;
    public static NotOrganizationMasterAccountExceptionUnmarshaller Instance { get; }
    private static NotOrganizationMasterAccountExceptionUnmarshaller();
    public sealed virtual NotOrganizationMasterAccountException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NotOrganizationMasterAccountException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NotOrganizationMasterAccountExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.OperationNotPermittedExceptionUnmarshaller : object {
    private static OperationNotPermittedExceptionUnmarshaller _instance;
    public static OperationNotPermittedExceptionUnmarshaller Instance { get; }
    private static OperationNotPermittedExceptionUnmarshaller();
    public sealed virtual OperationNotPermittedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OperationNotPermittedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OperationNotPermittedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.OrganizationNotInAllFeaturesModeExceptionUnmarshaller : object {
    private static OrganizationNotInAllFeaturesModeExceptionUnmarshaller _instance;
    public static OrganizationNotInAllFeaturesModeExceptionUnmarshaller Instance { get; }
    private static OrganizationNotInAllFeaturesModeExceptionUnmarshaller();
    public sealed virtual OrganizationNotInAllFeaturesModeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OrganizationNotInAllFeaturesModeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OrganizationNotInAllFeaturesModeExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.OrganizationsNotInUseExceptionUnmarshaller : object {
    private static OrganizationsNotInUseExceptionUnmarshaller _instance;
    public static OrganizationsNotInUseExceptionUnmarshaller Instance { get; }
    private static OrganizationsNotInUseExceptionUnmarshaller();
    public sealed virtual OrganizationsNotInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OrganizationsNotInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OrganizationsNotInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.PartitionKeyUnmarshaller : object {
    private static PartitionKeyUnmarshaller _instance;
    public static PartitionKeyUnmarshaller Instance { get; }
    private static PartitionKeyUnmarshaller();
    private sealed virtual override PartitionKey Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.PartitionKey,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PartitionKey Unmarshall(JsonUnmarshallerContext context);
    public static PartitionKeyUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.PublicKeyUnmarshaller : object {
    private static PublicKeyUnmarshaller _instance;
    public static PublicKeyUnmarshaller Instance { get; }
    private static PublicKeyUnmarshaller();
    private sealed virtual override PublicKey Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.PublicKey,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PublicKey Unmarshall(JsonUnmarshallerContext context);
    public static PublicKeyUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.PutEventSelectorsRequestMarshaller : object {
    private static PutEventSelectorsRequestMarshaller _instance;
    public static PutEventSelectorsRequestMarshaller Instance { get; }
    private static PutEventSelectorsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutEventSelectorsRequest publicRequest);
    internal static PutEventSelectorsRequestMarshaller GetInstance();
    public static PutEventSelectorsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.PutEventSelectorsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutEventSelectorsResponseUnmarshaller _instance;
    public static PutEventSelectorsResponseUnmarshaller Instance { get; }
    private static PutEventSelectorsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutEventSelectorsResponseUnmarshaller GetInstance();
    public static PutEventSelectorsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.PutInsightSelectorsRequestMarshaller : object {
    private static PutInsightSelectorsRequestMarshaller _instance;
    public static PutInsightSelectorsRequestMarshaller Instance { get; }
    private static PutInsightSelectorsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutInsightSelectorsRequest publicRequest);
    internal static PutInsightSelectorsRequestMarshaller GetInstance();
    public static PutInsightSelectorsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.PutInsightSelectorsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutInsightSelectorsResponseUnmarshaller _instance;
    public static PutInsightSelectorsResponseUnmarshaller Instance { get; }
    private static PutInsightSelectorsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutInsightSelectorsResponseUnmarshaller GetInstance();
    public static PutInsightSelectorsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller : object {
    private static PutResourcePolicyRequestMarshaller _instance;
    public static PutResourcePolicyRequestMarshaller Instance { get; }
    private static PutResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutResourcePolicyRequest publicRequest);
    internal static PutResourcePolicyRequestMarshaller GetInstance();
    public static PutResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutResourcePolicyResponseUnmarshaller _instance;
    public static PutResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutResourcePolicyResponseUnmarshaller GetInstance();
    public static PutResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.QueryIdNotFoundExceptionUnmarshaller : object {
    private static QueryIdNotFoundExceptionUnmarshaller _instance;
    public static QueryIdNotFoundExceptionUnmarshaller Instance { get; }
    private static QueryIdNotFoundExceptionUnmarshaller();
    public sealed virtual QueryIdNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual QueryIdNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static QueryIdNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.QueryStatisticsForDescribeQueryUnmarshaller : object {
    private static QueryStatisticsForDescribeQueryUnmarshaller _instance;
    public static QueryStatisticsForDescribeQueryUnmarshaller Instance { get; }
    private static QueryStatisticsForDescribeQueryUnmarshaller();
    private sealed virtual override QueryStatisticsForDescribeQuery Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.QueryStatisticsForDescribeQuery,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryStatisticsForDescribeQuery Unmarshall(JsonUnmarshallerContext context);
    public static QueryStatisticsForDescribeQueryUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.QueryStatisticsUnmarshaller : object {
    private static QueryStatisticsUnmarshaller _instance;
    public static QueryStatisticsUnmarshaller Instance { get; }
    private static QueryStatisticsUnmarshaller();
    private sealed virtual override QueryStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.QueryStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryStatistics Unmarshall(JsonUnmarshallerContext context);
    public static QueryStatisticsUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.QueryUnmarshaller : object {
    private static QueryUnmarshaller _instance;
    public static QueryUnmarshaller Instance { get; }
    private static QueryUnmarshaller();
    private sealed virtual override Query Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.Query,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Query Unmarshall(JsonUnmarshallerContext context);
    public static QueryUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.RegisterOrganizationDelegatedAdminRequestMarshaller : object {
    private static RegisterOrganizationDelegatedAdminRequestMarshaller _instance;
    public static RegisterOrganizationDelegatedAdminRequestMarshaller Instance { get; }
    private static RegisterOrganizationDelegatedAdminRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RegisterOrganizationDelegatedAdminRequest publicRequest);
    internal static RegisterOrganizationDelegatedAdminRequestMarshaller GetInstance();
    public static RegisterOrganizationDelegatedAdminRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.RegisterOrganizationDelegatedAdminResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RegisterOrganizationDelegatedAdminResponseUnmarshaller _instance;
    public static RegisterOrganizationDelegatedAdminResponseUnmarshaller Instance { get; }
    private static RegisterOrganizationDelegatedAdminResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RegisterOrganizationDelegatedAdminResponseUnmarshaller GetInstance();
    public static RegisterOrganizationDelegatedAdminResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.RemoveTagsRequestMarshaller : object {
    private static RemoveTagsRequestMarshaller _instance;
    public static RemoveTagsRequestMarshaller Instance { get; }
    private static RemoveTagsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTagsRequest publicRequest);
    internal static RemoveTagsRequestMarshaller GetInstance();
    public static RemoveTagsRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.RemoveTagsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveTagsResponseUnmarshaller _instance;
    public static RemoveTagsResponseUnmarshaller Instance { get; }
    private static RemoveTagsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTagsResponseUnmarshaller GetInstance();
    public static RemoveTagsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ResourceARNNotValidExceptionUnmarshaller : object {
    private static ResourceARNNotValidExceptionUnmarshaller _instance;
    public static ResourceARNNotValidExceptionUnmarshaller Instance { get; }
    private static ResourceARNNotValidExceptionUnmarshaller();
    public sealed virtual ResourceARNNotValidException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceARNNotValidException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceARNNotValidExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ResourcePolicyNotFoundExceptionUnmarshaller : object {
    private static ResourcePolicyNotFoundExceptionUnmarshaller _instance;
    public static ResourcePolicyNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourcePolicyNotFoundExceptionUnmarshaller();
    public sealed virtual ResourcePolicyNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourcePolicyNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourcePolicyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ResourcePolicyNotValidExceptionUnmarshaller : object {
    private static ResourcePolicyNotValidExceptionUnmarshaller _instance;
    public static ResourcePolicyNotValidExceptionUnmarshaller Instance { get; }
    private static ResourcePolicyNotValidExceptionUnmarshaller();
    public sealed virtual ResourcePolicyNotValidException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourcePolicyNotValidException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourcePolicyNotValidExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ResourceTagUnmarshaller : object {
    private static ResourceTagUnmarshaller _instance;
    public static ResourceTagUnmarshaller Instance { get; }
    private static ResourceTagUnmarshaller();
    private sealed virtual override ResourceTag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.ResourceTag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceTag Unmarshall(JsonUnmarshallerContext context);
    public static ResourceTagUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ResourceTypeNotSupportedExceptionUnmarshaller : object {
    private static ResourceTypeNotSupportedExceptionUnmarshaller _instance;
    public static ResourceTypeNotSupportedExceptionUnmarshaller Instance { get; }
    private static ResourceTypeNotSupportedExceptionUnmarshaller();
    public sealed virtual ResourceTypeNotSupportedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceTypeNotSupportedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceTypeNotSupportedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ResourceUnmarshaller : object {
    private static ResourceUnmarshaller _instance;
    public static ResourceUnmarshaller Instance { get; }
    private static ResourceUnmarshaller();
    private sealed virtual override Resource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.Resource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Resource Unmarshall(JsonUnmarshallerContext context);
    public static ResourceUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.RestoreEventDataStoreRequestMarshaller : object {
    private static RestoreEventDataStoreRequestMarshaller _instance;
    public static RestoreEventDataStoreRequestMarshaller Instance { get; }
    private static RestoreEventDataStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreEventDataStoreRequest publicRequest);
    internal static RestoreEventDataStoreRequestMarshaller GetInstance();
    public static RestoreEventDataStoreRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.RestoreEventDataStoreResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RestoreEventDataStoreResponseUnmarshaller _instance;
    public static RestoreEventDataStoreResponseUnmarshaller Instance { get; }
    private static RestoreEventDataStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreEventDataStoreResponseUnmarshaller GetInstance();
    public static RestoreEventDataStoreResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.S3BucketDoesNotExistExceptionUnmarshaller : object {
    private static S3BucketDoesNotExistExceptionUnmarshaller _instance;
    public static S3BucketDoesNotExistExceptionUnmarshaller Instance { get; }
    private static S3BucketDoesNotExistExceptionUnmarshaller();
    public sealed virtual S3BucketDoesNotExistException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual S3BucketDoesNotExistException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static S3BucketDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.S3ImportSourceMarshaller : object {
    public static S3ImportSourceMarshaller Instance;
    private static S3ImportSourceMarshaller();
    public sealed virtual void Marshall(S3ImportSource requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.S3ImportSourceUnmarshaller : object {
    private static S3ImportSourceUnmarshaller _instance;
    public static S3ImportSourceUnmarshaller Instance { get; }
    private static S3ImportSourceUnmarshaller();
    private sealed virtual override S3ImportSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.S3ImportSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3ImportSource Unmarshall(JsonUnmarshallerContext context);
    public static S3ImportSourceUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.SourceConfigUnmarshaller : object {
    private static SourceConfigUnmarshaller _instance;
    public static SourceConfigUnmarshaller Instance { get; }
    private static SourceConfigUnmarshaller();
    private sealed virtual override SourceConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.SourceConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceConfig Unmarshall(JsonUnmarshallerContext context);
    public static SourceConfigUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StartEventDataStoreIngestionRequestMarshaller : object {
    private static StartEventDataStoreIngestionRequestMarshaller _instance;
    public static StartEventDataStoreIngestionRequestMarshaller Instance { get; }
    private static StartEventDataStoreIngestionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartEventDataStoreIngestionRequest publicRequest);
    internal static StartEventDataStoreIngestionRequestMarshaller GetInstance();
    public static StartEventDataStoreIngestionRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StartEventDataStoreIngestionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartEventDataStoreIngestionResponseUnmarshaller _instance;
    public static StartEventDataStoreIngestionResponseUnmarshaller Instance { get; }
    private static StartEventDataStoreIngestionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartEventDataStoreIngestionResponseUnmarshaller GetInstance();
    public static StartEventDataStoreIngestionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StartImportRequestMarshaller : object {
    private static StartImportRequestMarshaller _instance;
    public static StartImportRequestMarshaller Instance { get; }
    private static StartImportRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartImportRequest publicRequest);
    internal static StartImportRequestMarshaller GetInstance();
    public static StartImportRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StartImportResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartImportResponseUnmarshaller _instance;
    public static StartImportResponseUnmarshaller Instance { get; }
    private static StartImportResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartImportResponseUnmarshaller GetInstance();
    public static StartImportResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StartLoggingRequestMarshaller : object {
    private static StartLoggingRequestMarshaller _instance;
    public static StartLoggingRequestMarshaller Instance { get; }
    private static StartLoggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartLoggingRequest publicRequest);
    internal static StartLoggingRequestMarshaller GetInstance();
    public static StartLoggingRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StartLoggingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartLoggingResponseUnmarshaller _instance;
    public static StartLoggingResponseUnmarshaller Instance { get; }
    private static StartLoggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartLoggingResponseUnmarshaller GetInstance();
    public static StartLoggingResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StartQueryRequestMarshaller : object {
    private static StartQueryRequestMarshaller _instance;
    public static StartQueryRequestMarshaller Instance { get; }
    private static StartQueryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartQueryRequest publicRequest);
    internal static StartQueryRequestMarshaller GetInstance();
    public static StartQueryRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StartQueryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartQueryResponseUnmarshaller _instance;
    public static StartQueryResponseUnmarshaller Instance { get; }
    private static StartQueryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartQueryResponseUnmarshaller GetInstance();
    public static StartQueryResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StopEventDataStoreIngestionRequestMarshaller : object {
    private static StopEventDataStoreIngestionRequestMarshaller _instance;
    public static StopEventDataStoreIngestionRequestMarshaller Instance { get; }
    private static StopEventDataStoreIngestionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopEventDataStoreIngestionRequest publicRequest);
    internal static StopEventDataStoreIngestionRequestMarshaller GetInstance();
    public static StopEventDataStoreIngestionRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StopEventDataStoreIngestionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopEventDataStoreIngestionResponseUnmarshaller _instance;
    public static StopEventDataStoreIngestionResponseUnmarshaller Instance { get; }
    private static StopEventDataStoreIngestionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopEventDataStoreIngestionResponseUnmarshaller GetInstance();
    public static StopEventDataStoreIngestionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StopImportRequestMarshaller : object {
    private static StopImportRequestMarshaller _instance;
    public static StopImportRequestMarshaller Instance { get; }
    private static StopImportRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopImportRequest publicRequest);
    internal static StopImportRequestMarshaller GetInstance();
    public static StopImportRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StopImportResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopImportResponseUnmarshaller _instance;
    public static StopImportResponseUnmarshaller Instance { get; }
    private static StopImportResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopImportResponseUnmarshaller GetInstance();
    public static StopImportResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StopLoggingRequestMarshaller : object {
    private static StopLoggingRequestMarshaller _instance;
    public static StopLoggingRequestMarshaller Instance { get; }
    private static StopLoggingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopLoggingRequest publicRequest);
    internal static StopLoggingRequestMarshaller GetInstance();
    public static StopLoggingRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.StopLoggingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopLoggingResponseUnmarshaller _instance;
    public static StopLoggingResponseUnmarshaller Instance { get; }
    private static StopLoggingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopLoggingResponseUnmarshaller GetInstance();
    public static StopLoggingResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.TagsLimitExceededExceptionUnmarshaller : object {
    private static TagsLimitExceededExceptionUnmarshaller _instance;
    public static TagsLimitExceededExceptionUnmarshaller Instance { get; }
    private static TagsLimitExceededExceptionUnmarshaller();
    public sealed virtual TagsLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TagsLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TagsLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller : object {
    private static ThrottlingExceptionUnmarshaller _instance;
    public static ThrottlingExceptionUnmarshaller Instance { get; }
    private static ThrottlingExceptionUnmarshaller();
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ThrottlingExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.TrailAlreadyExistsExceptionUnmarshaller : object {
    private static TrailAlreadyExistsExceptionUnmarshaller _instance;
    public static TrailAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static TrailAlreadyExistsExceptionUnmarshaller();
    public sealed virtual TrailAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TrailAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrailAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.TrailInfoUnmarshaller : object {
    private static TrailInfoUnmarshaller _instance;
    public static TrailInfoUnmarshaller Instance { get; }
    private static TrailInfoUnmarshaller();
    private sealed virtual override TrailInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.TrailInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TrailInfo Unmarshall(JsonUnmarshallerContext context);
    public static TrailInfoUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.TrailNotFoundExceptionUnmarshaller : object {
    private static TrailNotFoundExceptionUnmarshaller _instance;
    public static TrailNotFoundExceptionUnmarshaller Instance { get; }
    private static TrailNotFoundExceptionUnmarshaller();
    public sealed virtual TrailNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TrailNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrailNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.TrailNotProvidedExceptionUnmarshaller : object {
    private static TrailNotProvidedExceptionUnmarshaller _instance;
    public static TrailNotProvidedExceptionUnmarshaller Instance { get; }
    private static TrailNotProvidedExceptionUnmarshaller();
    public sealed virtual TrailNotProvidedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TrailNotProvidedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrailNotProvidedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.TrailUnmarshaller : object {
    private static TrailUnmarshaller _instance;
    public static TrailUnmarshaller Instance { get; }
    private static TrailUnmarshaller();
    private sealed virtual override Trail Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudTrail.Model.Trail,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Trail Unmarshall(JsonUnmarshallerContext context);
    public static TrailUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.UnsupportedOperationExceptionUnmarshaller : object {
    private static UnsupportedOperationExceptionUnmarshaller _instance;
    public static UnsupportedOperationExceptionUnmarshaller Instance { get; }
    private static UnsupportedOperationExceptionUnmarshaller();
    public sealed virtual UnsupportedOperationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedOperationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedOperationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.UpdateChannelRequestMarshaller : object {
    private static UpdateChannelRequestMarshaller _instance;
    public static UpdateChannelRequestMarshaller Instance { get; }
    private static UpdateChannelRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateChannelRequest publicRequest);
    internal static UpdateChannelRequestMarshaller GetInstance();
    public static UpdateChannelRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.UpdateChannelResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateChannelResponseUnmarshaller _instance;
    public static UpdateChannelResponseUnmarshaller Instance { get; }
    private static UpdateChannelResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateChannelResponseUnmarshaller GetInstance();
    public static UpdateChannelResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.UpdateEventDataStoreRequestMarshaller : object {
    private static UpdateEventDataStoreRequestMarshaller _instance;
    public static UpdateEventDataStoreRequestMarshaller Instance { get; }
    private static UpdateEventDataStoreRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateEventDataStoreRequest publicRequest);
    internal static UpdateEventDataStoreRequestMarshaller GetInstance();
    public static UpdateEventDataStoreRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.UpdateEventDataStoreResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateEventDataStoreResponseUnmarshaller _instance;
    public static UpdateEventDataStoreResponseUnmarshaller Instance { get; }
    private static UpdateEventDataStoreResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateEventDataStoreResponseUnmarshaller GetInstance();
    public static UpdateEventDataStoreResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.UpdateTrailRequestMarshaller : object {
    private static UpdateTrailRequestMarshaller _instance;
    public static UpdateTrailRequestMarshaller Instance { get; }
    private static UpdateTrailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateTrailRequest publicRequest);
    internal static UpdateTrailRequestMarshaller GetInstance();
    public static UpdateTrailRequestMarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.Internal.MarshallTransformations.UpdateTrailResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateTrailResponseUnmarshaller _instance;
    public static UpdateTrailResponseUnmarshaller Instance { get; }
    private static UpdateTrailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateTrailResponseUnmarshaller GetInstance();
    public static UpdateTrailResponseUnmarshaller get_Instance();
}
public class Amazon.CloudTrail.Model.InvalidCloudWatchLogsLogGroupArnException : AmazonCloudTrailException {
    public InvalidCloudWatchLogsLogGroupArnException(string message);
    public InvalidCloudWatchLogsLogGroupArnException(string message, Exception innerException);
    public InvalidCloudWatchLogsLogGroupArnException(Exception innerException);
    public InvalidCloudWatchLogsLogGroupArnException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidCloudWatchLogsLogGroupArnException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidCloudWatchLogsRoleArnException : AmazonCloudTrailException {
    public InvalidCloudWatchLogsRoleArnException(string message);
    public InvalidCloudWatchLogsRoleArnException(string message, Exception innerException);
    public InvalidCloudWatchLogsRoleArnException(Exception innerException);
    public InvalidCloudWatchLogsRoleArnException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidCloudWatchLogsRoleArnException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidDateRangeException : AmazonCloudTrailException {
    public InvalidDateRangeException(string message);
    public InvalidDateRangeException(string message, Exception innerException);
    public InvalidDateRangeException(Exception innerException);
    public InvalidDateRangeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidDateRangeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidEventCategoryException : AmazonCloudTrailException {
    public InvalidEventCategoryException(string message);
    public InvalidEventCategoryException(string message, Exception innerException);
    public InvalidEventCategoryException(Exception innerException);
    public InvalidEventCategoryException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidEventCategoryException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidEventDataStoreCategoryException : AmazonCloudTrailException {
    public InvalidEventDataStoreCategoryException(string message);
    public InvalidEventDataStoreCategoryException(string message, Exception innerException);
    public InvalidEventDataStoreCategoryException(Exception innerException);
    public InvalidEventDataStoreCategoryException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidEventDataStoreCategoryException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidEventDataStoreStatusException : AmazonCloudTrailException {
    public InvalidEventDataStoreStatusException(string message);
    public InvalidEventDataStoreStatusException(string message, Exception innerException);
    public InvalidEventDataStoreStatusException(Exception innerException);
    public InvalidEventDataStoreStatusException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidEventDataStoreStatusException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidEventSelectorsException : AmazonCloudTrailException {
    public InvalidEventSelectorsException(string message);
    public InvalidEventSelectorsException(string message, Exception innerException);
    public InvalidEventSelectorsException(Exception innerException);
    public InvalidEventSelectorsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidEventSelectorsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidHomeRegionException : AmazonCloudTrailException {
    public InvalidHomeRegionException(string message);
    public InvalidHomeRegionException(string message, Exception innerException);
    public InvalidHomeRegionException(Exception innerException);
    public InvalidHomeRegionException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidHomeRegionException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidImportSourceException : AmazonCloudTrailException {
    public InvalidImportSourceException(string message);
    public InvalidImportSourceException(string message, Exception innerException);
    public InvalidImportSourceException(Exception innerException);
    public InvalidImportSourceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidImportSourceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidInsightSelectorsException : AmazonCloudTrailException {
    public InvalidInsightSelectorsException(string message);
    public InvalidInsightSelectorsException(string message, Exception innerException);
    public InvalidInsightSelectorsException(Exception innerException);
    public InvalidInsightSelectorsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidInsightSelectorsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidKmsKeyIdException : AmazonCloudTrailException {
    public InvalidKmsKeyIdException(string message);
    public InvalidKmsKeyIdException(string message, Exception innerException);
    public InvalidKmsKeyIdException(Exception innerException);
    public InvalidKmsKeyIdException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidKmsKeyIdException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidLookupAttributesException : AmazonCloudTrailException {
    public InvalidLookupAttributesException(string message);
    public InvalidLookupAttributesException(string message, Exception innerException);
    public InvalidLookupAttributesException(Exception innerException);
    public InvalidLookupAttributesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidLookupAttributesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidMaxResultsException : AmazonCloudTrailException {
    public InvalidMaxResultsException(string message);
    public InvalidMaxResultsException(string message, Exception innerException);
    public InvalidMaxResultsException(Exception innerException);
    public InvalidMaxResultsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidMaxResultsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidNextTokenException : AmazonCloudTrailException {
    public InvalidNextTokenException(string message);
    public InvalidNextTokenException(string message, Exception innerException);
    public InvalidNextTokenException(Exception innerException);
    public InvalidNextTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidNextTokenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidParameterCombinationException : AmazonCloudTrailException {
    public InvalidParameterCombinationException(string message);
    public InvalidParameterCombinationException(string message, Exception innerException);
    public InvalidParameterCombinationException(Exception innerException);
    public InvalidParameterCombinationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterCombinationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidParameterException : AmazonCloudTrailException {
    public InvalidParameterException(string message);
    public InvalidParameterException(string message, Exception innerException);
    public InvalidParameterException(Exception innerException);
    public InvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidQueryStatementException : AmazonCloudTrailException {
    public InvalidQueryStatementException(string message);
    public InvalidQueryStatementException(string message, Exception innerException);
    public InvalidQueryStatementException(Exception innerException);
    public InvalidQueryStatementException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidQueryStatementException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidQueryStatusException : AmazonCloudTrailException {
    public InvalidQueryStatusException(string message);
    public InvalidQueryStatusException(string message, Exception innerException);
    public InvalidQueryStatusException(Exception innerException);
    public InvalidQueryStatusException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidQueryStatusException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidS3BucketNameException : AmazonCloudTrailException {
    public InvalidS3BucketNameException(string message);
    public InvalidS3BucketNameException(string message, Exception innerException);
    public InvalidS3BucketNameException(Exception innerException);
    public InvalidS3BucketNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidS3BucketNameException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidS3PrefixException : AmazonCloudTrailException {
    public InvalidS3PrefixException(string message);
    public InvalidS3PrefixException(string message, Exception innerException);
    public InvalidS3PrefixException(Exception innerException);
    public InvalidS3PrefixException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidS3PrefixException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidSnsTopicNameException : AmazonCloudTrailException {
    public InvalidSnsTopicNameException(string message);
    public InvalidSnsTopicNameException(string message, Exception innerException);
    public InvalidSnsTopicNameException(Exception innerException);
    public InvalidSnsTopicNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSnsTopicNameException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidSourceException : AmazonCloudTrailException {
    public InvalidSourceException(string message);
    public InvalidSourceException(string message, Exception innerException);
    public InvalidSourceException(Exception innerException);
    public InvalidSourceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSourceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidTagParameterException : AmazonCloudTrailException {
    public InvalidTagParameterException(string message);
    public InvalidTagParameterException(string message, Exception innerException);
    public InvalidTagParameterException(Exception innerException);
    public InvalidTagParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTagParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidTimeRangeException : AmazonCloudTrailException {
    public InvalidTimeRangeException(string message);
    public InvalidTimeRangeException(string message, Exception innerException);
    public InvalidTimeRangeException(Exception innerException);
    public InvalidTimeRangeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTimeRangeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidTokenException : AmazonCloudTrailException {
    public InvalidTokenException(string message);
    public InvalidTokenException(string message, Exception innerException);
    public InvalidTokenException(Exception innerException);
    public InvalidTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTokenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.InvalidTrailNameException : AmazonCloudTrailException {
    public InvalidTrailNameException(string message);
    public InvalidTrailNameException(string message, Exception innerException);
    public InvalidTrailNameException(Exception innerException);
    public InvalidTrailNameException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidTrailNameException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.KmsException : AmazonCloudTrailException {
    public KmsException(string message);
    public KmsException(string message, Exception innerException);
    public KmsException(Exception innerException);
    public KmsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KmsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
[ObsoleteAttribute("This exception is deprecated.")]
public class Amazon.CloudTrail.Model.KmsKeyDisabledException : AmazonCloudTrailException {
    public KmsKeyDisabledException(string message);
    public KmsKeyDisabledException(string message, Exception innerException);
    public KmsKeyDisabledException(Exception innerException);
    public KmsKeyDisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KmsKeyDisabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.KmsKeyNotFoundException : AmazonCloudTrailException {
    public KmsKeyNotFoundException(string message);
    public KmsKeyNotFoundException(string message, Exception innerException);
    public KmsKeyNotFoundException(Exception innerException);
    public KmsKeyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KmsKeyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
internal class Amazon.CloudTrail.Model.ListChannelsPaginator : object {
    private IAmazonCloudTrail _client;
    private ListChannelsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListChannelsResponse> Responses { get; }
    internal ListChannelsPaginator(IAmazonCloudTrail client, ListChannelsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListChannelsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.ListChannelsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-ListChannelsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListChannelsResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.ListChannelsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.ListChannelsRequest : AmazonCloudTrailRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudTrail.Model.ListChannelsResponse : AmazonWebServiceResponse {
    private List`1<Channel> _channels;
    private string _nextToken;
    public List`1<Channel> Channels { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Channel> get_Channels();
    public void set_Channels(List`1<Channel> value);
    internal bool IsSetChannels();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudTrail.Model.ListEventDataStoresPaginator : object {
    private IAmazonCloudTrail _client;
    private ListEventDataStoresRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListEventDataStoresResponse> Responses { get; }
    internal ListEventDataStoresPaginator(IAmazonCloudTrail client, ListEventDataStoresRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListEventDataStoresResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.ListEventDataStoresPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-ListEventDataStoresResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListEventDataStoresResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.ListEventDataStoresResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.ListEventDataStoresRequest : AmazonCloudTrailRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudTrail.Model.ListEventDataStoresResponse : AmazonWebServiceResponse {
    private List`1<EventDataStore> _eventDataStores;
    private string _nextToken;
    public List`1<EventDataStore> EventDataStores { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<EventDataStore> get_EventDataStores();
    public void set_EventDataStores(List`1<EventDataStore> value);
    internal bool IsSetEventDataStores();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudTrail.Model.ListImportFailuresPaginator : object {
    private IAmazonCloudTrail _client;
    private ListImportFailuresRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListImportFailuresResponse> Responses { get; }
    public IPaginatedEnumerable`1<ImportFailureListItem> Failures { get; }
    internal ListImportFailuresPaginator(IAmazonCloudTrail client, ListImportFailuresRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListImportFailuresResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ImportFailureListItem> get_Failures();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.ListImportFailuresPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-ListImportFailuresResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListImportFailuresResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.ListImportFailuresResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.ListImportFailuresRequest : AmazonCloudTrailRequest {
    private string _importId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string ImportId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_ImportId();
    public void set_ImportId(string value);
    internal bool IsSetImportId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudTrail.Model.ListImportFailuresResponse : AmazonWebServiceResponse {
    private List`1<ImportFailureListItem> _failures;
    private string _nextToken;
    public List`1<ImportFailureListItem> Failures { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<ImportFailureListItem> get_Failures();
    public void set_Failures(List`1<ImportFailureListItem> value);
    internal bool IsSetFailures();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudTrail.Model.ListImportsPaginator : object {
    private IAmazonCloudTrail _client;
    private ListImportsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListImportsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ImportsListItem> Imports { get; }
    internal ListImportsPaginator(IAmazonCloudTrail client, ListImportsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListImportsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ImportsListItem> get_Imports();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.ListImportsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-ListImportsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListImportsResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.ListImportsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.ListImportsRequest : AmazonCloudTrailRequest {
    private string _destination;
    private ImportStatus _importStatus;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string Destination { get; public set; }
    public ImportStatus ImportStatus { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public ImportStatus get_ImportStatus();
    public void set_ImportStatus(ImportStatus value);
    internal bool IsSetImportStatus();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudTrail.Model.ListImportsResponse : AmazonWebServiceResponse {
    private List`1<ImportsListItem> _imports;
    private string _nextToken;
    public List`1<ImportsListItem> Imports { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<ImportsListItem> get_Imports();
    public void set_Imports(List`1<ImportsListItem> value);
    internal bool IsSetImports();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudTrail.Model.ListInsightsMetricDataPaginator : object {
    private IAmazonCloudTrail _client;
    private ListInsightsMetricDataRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListInsightsMetricDataResponse> Responses { get; }
    internal ListInsightsMetricDataPaginator(IAmazonCloudTrail client, ListInsightsMetricDataRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListInsightsMetricDataResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.ListInsightsMetricDataPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-ListInsightsMetricDataResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListInsightsMetricDataResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.ListInsightsMetricDataResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.ListInsightsMetricDataRequest : AmazonCloudTrailRequest {
    private InsightsMetricDataType _dataType;
    private Nullable`1<DateTime> _endTime;
    private string _errorCode;
    private string _eventName;
    private string _eventSource;
    private InsightType _insightType;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<int> _period;
    private Nullable`1<DateTime> _startTime;
    public InsightsMetricDataType DataType { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string ErrorCode { get; public set; }
    [AWSPropertyAttribute]
public string EventName { get; public set; }
    [AWSPropertyAttribute]
public string EventSource { get; public set; }
    [AWSPropertyAttribute]
public InsightType InsightType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Period { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public InsightsMetricDataType get_DataType();
    public void set_DataType(InsightsMetricDataType value);
    internal bool IsSetDataType();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_EventName();
    public void set_EventName(string value);
    internal bool IsSetEventName();
    public string get_EventSource();
    public void set_EventSource(string value);
    internal bool IsSetEventSource();
    public InsightType get_InsightType();
    public void set_InsightType(InsightType value);
    internal bool IsSetInsightType();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<int> get_Period();
    public void set_Period(Nullable`1<int> value);
    internal bool IsSetPeriod();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.CloudTrail.Model.ListInsightsMetricDataResponse : AmazonWebServiceResponse {
    private string _errorCode;
    private string _eventName;
    private string _eventSource;
    private InsightType _insightType;
    private string _nextToken;
    private List`1<DateTime> _timestamps;
    private List`1<double> _values;
    [AWSPropertyAttribute]
public string ErrorCode { get; public set; }
    [AWSPropertyAttribute]
public string EventName { get; public set; }
    [AWSPropertyAttribute]
public string EventSource { get; public set; }
    public InsightType InsightType { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<DateTime> Timestamps { get; public set; }
    public List`1<double> Values { get; public set; }
    public string get_ErrorCode();
    public void set_ErrorCode(string value);
    internal bool IsSetErrorCode();
    public string get_EventName();
    public void set_EventName(string value);
    internal bool IsSetEventName();
    public string get_EventSource();
    public void set_EventSource(string value);
    internal bool IsSetEventSource();
    public InsightType get_InsightType();
    public void set_InsightType(InsightType value);
    internal bool IsSetInsightType();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<DateTime> get_Timestamps();
    public void set_Timestamps(List`1<DateTime> value);
    internal bool IsSetTimestamps();
    public List`1<double> get_Values();
    public void set_Values(List`1<double> value);
    internal bool IsSetValues();
}
internal class Amazon.CloudTrail.Model.ListPublicKeysPaginator : object {
    private IAmazonCloudTrail _client;
    private ListPublicKeysRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListPublicKeysResponse> Responses { get; }
    public IPaginatedEnumerable`1<PublicKey> PublicKeyList { get; }
    internal ListPublicKeysPaginator(IAmazonCloudTrail client, ListPublicKeysRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListPublicKeysResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PublicKey> get_PublicKeyList();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.ListPublicKeysPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-ListPublicKeysResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListPublicKeysResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.ListPublicKeysResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.ListPublicKeysRequest : AmazonCloudTrailRequest {
    private Nullable`1<DateTime> _endTime;
    private string _nextToken;
    private Nullable`1<DateTime> _startTime;
    public Nullable`1<DateTime> EndTime { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.CloudTrail.Model.ListPublicKeysResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<PublicKey> _publicKeyList;
    public string NextToken { get; public set; }
    public List`1<PublicKey> PublicKeyList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<PublicKey> get_PublicKeyList();
    public void set_PublicKeyList(List`1<PublicKey> value);
    internal bool IsSetPublicKeyList();
}
internal class Amazon.CloudTrail.Model.ListQueriesPaginator : object {
    private IAmazonCloudTrail _client;
    private ListQueriesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListQueriesResponse> Responses { get; }
    internal ListQueriesPaginator(IAmazonCloudTrail client, ListQueriesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListQueriesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.ListQueriesPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-ListQueriesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListQueriesResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.ListQueriesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.ListQueriesRequest : AmazonCloudTrailRequest {
    private Nullable`1<DateTime> _endTime;
    private string _eventDataStore;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private QueryStatus _queryStatus;
    private Nullable`1<DateTime> _startTime;
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public QueryStatus QueryStatus { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public QueryStatus get_QueryStatus();
    public void set_QueryStatus(QueryStatus value);
    internal bool IsSetQueryStatus();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.CloudTrail.Model.ListQueriesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Query> _queries;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Query> Queries { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Query> get_Queries();
    public void set_Queries(List`1<Query> value);
    internal bool IsSetQueries();
}
internal class Amazon.CloudTrail.Model.ListTagsPaginator : object {
    private IAmazonCloudTrail _client;
    private ListTagsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTagsResponse> Responses { get; }
    public IPaginatedEnumerable`1<ResourceTag> ResourceTagList { get; }
    internal ListTagsPaginator(IAmazonCloudTrail client, ListTagsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTagsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ResourceTag> get_ResourceTagList();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.ListTagsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-ListTagsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListTagsResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.ListTagsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.ListTagsRequest : AmazonCloudTrailRequest {
    private string _nextToken;
    private List`1<string> _resourceIdList;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ResourceIdList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_ResourceIdList();
    public void set_ResourceIdList(List`1<string> value);
    internal bool IsSetResourceIdList();
}
public class Amazon.CloudTrail.Model.ListTagsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ResourceTag> _resourceTagList;
    public string NextToken { get; public set; }
    public List`1<ResourceTag> ResourceTagList { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ResourceTag> get_ResourceTagList();
    public void set_ResourceTagList(List`1<ResourceTag> value);
    internal bool IsSetResourceTagList();
}
internal class Amazon.CloudTrail.Model.ListTrailsPaginator : object {
    private IAmazonCloudTrail _client;
    private ListTrailsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTrailsResponse> Responses { get; }
    public IPaginatedEnumerable`1<TrailInfo> Trails { get; }
    internal ListTrailsPaginator(IAmazonCloudTrail client, ListTrailsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTrailsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<TrailInfo> get_Trails();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.ListTrailsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-ListTrailsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListTrailsResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.ListTrailsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.ListTrailsRequest : AmazonCloudTrailRequest {
    private string _nextToken;
    public string NextToken { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudTrail.Model.ListTrailsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<TrailInfo> _trails;
    public string NextToken { get; public set; }
    public List`1<TrailInfo> Trails { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<TrailInfo> get_Trails();
    public void set_Trails(List`1<TrailInfo> value);
    internal bool IsSetTrails();
}
public class Amazon.CloudTrail.Model.LookupAttribute : object {
    private LookupAttributeKey _attributeKey;
    private string _attributeValue;
    [AWSPropertyAttribute]
public LookupAttributeKey AttributeKey { get; public set; }
    [AWSPropertyAttribute]
public string AttributeValue { get; public set; }
    public LookupAttributeKey get_AttributeKey();
    public void set_AttributeKey(LookupAttributeKey value);
    internal bool IsSetAttributeKey();
    public string get_AttributeValue();
    public void set_AttributeValue(string value);
    internal bool IsSetAttributeValue();
}
internal class Amazon.CloudTrail.Model.LookupEventsPaginator : object {
    private IAmazonCloudTrail _client;
    private LookupEventsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<LookupEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Event> Events { get; }
    internal LookupEventsPaginator(IAmazonCloudTrail client, LookupEventsRequest request);
    public sealed virtual IPaginatedEnumerable`1<LookupEventsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Event> get_Events();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudTrail.Model.LookupEventsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudTrail-Model-LookupEventsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<LookupEventsResponse> Amazon.Runtime.IPaginator<Amazon.CloudTrail.Model.LookupEventsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudTrail.Model.LookupEventsRequest : AmazonCloudTrailRequest {
    private Nullable`1<DateTime> _endTime;
    private EventCategory _eventCategory;
    private List`1<LookupAttribute> _lookupAttributes;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private Nullable`1<DateTime> _startTime;
    public Nullable`1<DateTime> EndTime { get; public set; }
    public EventCategory EventCategory { get; public set; }
    public List`1<LookupAttribute> LookupAttributes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public EventCategory get_EventCategory();
    public void set_EventCategory(EventCategory value);
    internal bool IsSetEventCategory();
    public List`1<LookupAttribute> get_LookupAttributes();
    public void set_LookupAttributes(List`1<LookupAttribute> value);
    internal bool IsSetLookupAttributes();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.CloudTrail.Model.LookupEventsResponse : AmazonWebServiceResponse {
    private List`1<Event> _events;
    private string _nextToken;
    public List`1<Event> Events { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Event> get_Events();
    public void set_Events(List`1<Event> value);
    internal bool IsSetEvents();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudTrail.Model.MaxConcurrentQueriesException : AmazonCloudTrailException {
    public MaxConcurrentQueriesException(string message);
    public MaxConcurrentQueriesException(string message, Exception innerException);
    public MaxConcurrentQueriesException(Exception innerException);
    public MaxConcurrentQueriesException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MaxConcurrentQueriesException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.MaximumNumberOfTrailsExceededException : AmazonCloudTrailException {
    public MaximumNumberOfTrailsExceededException(string message);
    public MaximumNumberOfTrailsExceededException(string message, Exception innerException);
    public MaximumNumberOfTrailsExceededException(Exception innerException);
    public MaximumNumberOfTrailsExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MaximumNumberOfTrailsExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.NoManagementAccountSLRExistsException : AmazonCloudTrailException {
    public NoManagementAccountSLRExistsException(string message);
    public NoManagementAccountSLRExistsException(string message, Exception innerException);
    public NoManagementAccountSLRExistsException(Exception innerException);
    public NoManagementAccountSLRExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NoManagementAccountSLRExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.NotOrganizationManagementAccountException : AmazonCloudTrailException {
    public NotOrganizationManagementAccountException(string message);
    public NotOrganizationManagementAccountException(string message, Exception innerException);
    public NotOrganizationManagementAccountException(Exception innerException);
    public NotOrganizationManagementAccountException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NotOrganizationManagementAccountException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.NotOrganizationMasterAccountException : AmazonCloudTrailException {
    public NotOrganizationMasterAccountException(string message);
    public NotOrganizationMasterAccountException(string message, Exception innerException);
    public NotOrganizationMasterAccountException(Exception innerException);
    public NotOrganizationMasterAccountException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NotOrganizationMasterAccountException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.OperationNotPermittedException : AmazonCloudTrailException {
    public OperationNotPermittedException(string message);
    public OperationNotPermittedException(string message, Exception innerException);
    public OperationNotPermittedException(Exception innerException);
    public OperationNotPermittedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OperationNotPermittedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.OrganizationNotInAllFeaturesModeException : AmazonCloudTrailException {
    public OrganizationNotInAllFeaturesModeException(string message);
    public OrganizationNotInAllFeaturesModeException(string message, Exception innerException);
    public OrganizationNotInAllFeaturesModeException(Exception innerException);
    public OrganizationNotInAllFeaturesModeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OrganizationNotInAllFeaturesModeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.OrganizationsNotInUseException : AmazonCloudTrailException {
    public OrganizationsNotInUseException(string message);
    public OrganizationsNotInUseException(string message, Exception innerException);
    public OrganizationsNotInUseException(Exception innerException);
    public OrganizationsNotInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OrganizationsNotInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.PartitionKey : object {
    private string _name;
    private string _type;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Type { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.CloudTrail.Model.PublicKey : object {
    private string _fingerprint;
    private Nullable`1<DateTime> _validityEndTime;
    private Nullable`1<DateTime> _validityStartTime;
    private MemoryStream _value;
    public string Fingerprint { get; public set; }
    public Nullable`1<DateTime> ValidityEndTime { get; public set; }
    public Nullable`1<DateTime> ValidityStartTime { get; public set; }
    public MemoryStream Value { get; public set; }
    public string get_Fingerprint();
    public void set_Fingerprint(string value);
    internal bool IsSetFingerprint();
    public Nullable`1<DateTime> get_ValidityEndTime();
    public void set_ValidityEndTime(Nullable`1<DateTime> value);
    internal bool IsSetValidityEndTime();
    public Nullable`1<DateTime> get_ValidityStartTime();
    public void set_ValidityStartTime(Nullable`1<DateTime> value);
    internal bool IsSetValidityStartTime();
    public MemoryStream get_Value();
    public void set_Value(MemoryStream value);
    internal bool IsSetValue();
}
public class Amazon.CloudTrail.Model.PutEventSelectorsRequest : AmazonCloudTrailRequest {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private List`1<EventSelector> _eventSelectors;
    private string _trailName;
    public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    public List`1<EventSelector> EventSelectors { get; public set; }
    [AWSPropertyAttribute]
public string TrailName { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public List`1<EventSelector> get_EventSelectors();
    public void set_EventSelectors(List`1<EventSelector> value);
    internal bool IsSetEventSelectors();
    public string get_TrailName();
    public void set_TrailName(string value);
    internal bool IsSetTrailName();
}
public class Amazon.CloudTrail.Model.PutEventSelectorsResponse : AmazonWebServiceResponse {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private List`1<EventSelector> _eventSelectors;
    private string _trailARN;
    public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    public List`1<EventSelector> EventSelectors { get; public set; }
    public string TrailARN { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public List`1<EventSelector> get_EventSelectors();
    public void set_EventSelectors(List`1<EventSelector> value);
    internal bool IsSetEventSelectors();
    public string get_TrailARN();
    public void set_TrailARN(string value);
    internal bool IsSetTrailARN();
}
public class Amazon.CloudTrail.Model.PutInsightSelectorsRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    private string _insightsDestination;
    private List`1<InsightSelector> _insightSelectors;
    private string _trailName;
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    [AWSPropertyAttribute]
public string InsightsDestination { get; public set; }
    [AWSPropertyAttribute]
public List`1<InsightSelector> InsightSelectors { get; public set; }
    public string TrailName { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
    public string get_InsightsDestination();
    public void set_InsightsDestination(string value);
    internal bool IsSetInsightsDestination();
    public List`1<InsightSelector> get_InsightSelectors();
    public void set_InsightSelectors(List`1<InsightSelector> value);
    internal bool IsSetInsightSelectors();
    public string get_TrailName();
    public void set_TrailName(string value);
    internal bool IsSetTrailName();
}
public class Amazon.CloudTrail.Model.PutInsightSelectorsResponse : AmazonWebServiceResponse {
    private string _eventDataStoreArn;
    private string _insightsDestination;
    private List`1<InsightSelector> _insightSelectors;
    private string _trailARN;
    [AWSPropertyAttribute]
public string EventDataStoreArn { get; public set; }
    [AWSPropertyAttribute]
public string InsightsDestination { get; public set; }
    public List`1<InsightSelector> InsightSelectors { get; public set; }
    public string TrailARN { get; public set; }
    public string get_EventDataStoreArn();
    public void set_EventDataStoreArn(string value);
    internal bool IsSetEventDataStoreArn();
    public string get_InsightsDestination();
    public void set_InsightsDestination(string value);
    internal bool IsSetInsightsDestination();
    public List`1<InsightSelector> get_InsightSelectors();
    public void set_InsightSelectors(List`1<InsightSelector> value);
    internal bool IsSetInsightSelectors();
    public string get_TrailARN();
    public void set_TrailARN(string value);
    internal bool IsSetTrailARN();
}
public class Amazon.CloudTrail.Model.PutResourcePolicyRequest : AmazonCloudTrailRequest {
    private string _resourceArn;
    private string _resourcePolicy;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public string ResourcePolicy { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public string get_ResourcePolicy();
    public void set_ResourcePolicy(string value);
    internal bool IsSetResourcePolicy();
}
public class Amazon.CloudTrail.Model.PutResourcePolicyResponse : AmazonWebServiceResponse {
    private string _resourceArn;
    private string _resourcePolicy;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public string ResourcePolicy { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public string get_ResourcePolicy();
    public void set_ResourcePolicy(string value);
    internal bool IsSetResourcePolicy();
}
public class Amazon.CloudTrail.Model.Query : object {
    private Nullable`1<DateTime> _creationTime;
    private string _queryId;
    private QueryStatus _queryStatus;
    public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    public QueryStatus QueryStatus { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
    public QueryStatus get_QueryStatus();
    public void set_QueryStatus(QueryStatus value);
    internal bool IsSetQueryStatus();
}
public class Amazon.CloudTrail.Model.QueryIdNotFoundException : AmazonCloudTrailException {
    public QueryIdNotFoundException(string message);
    public QueryIdNotFoundException(string message, Exception innerException);
    public QueryIdNotFoundException(Exception innerException);
    public QueryIdNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public QueryIdNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.QueryStatistics : object {
    private Nullable`1<long> _bytesScanned;
    private Nullable`1<int> _resultsCount;
    private Nullable`1<int> _totalResultsCount;
    public Nullable`1<long> BytesScanned { get; public set; }
    public Nullable`1<int> ResultsCount { get; public set; }
    public Nullable`1<int> TotalResultsCount { get; public set; }
    public Nullable`1<long> get_BytesScanned();
    public void set_BytesScanned(Nullable`1<long> value);
    internal bool IsSetBytesScanned();
    public Nullable`1<int> get_ResultsCount();
    public void set_ResultsCount(Nullable`1<int> value);
    internal bool IsSetResultsCount();
    public Nullable`1<int> get_TotalResultsCount();
    public void set_TotalResultsCount(Nullable`1<int> value);
    internal bool IsSetTotalResultsCount();
}
public class Amazon.CloudTrail.Model.QueryStatisticsForDescribeQuery : object {
    private Nullable`1<long> _bytesScanned;
    private Nullable`1<DateTime> _creationTime;
    private Nullable`1<long> _eventsMatched;
    private Nullable`1<long> _eventsScanned;
    private Nullable`1<int> _executionTimeInMillis;
    public Nullable`1<long> BytesScanned { get; public set; }
    public Nullable`1<DateTime> CreationTime { get; public set; }
    public Nullable`1<long> EventsMatched { get; public set; }
    public Nullable`1<long> EventsScanned { get; public set; }
    public Nullable`1<int> ExecutionTimeInMillis { get; public set; }
    public Nullable`1<long> get_BytesScanned();
    public void set_BytesScanned(Nullable`1<long> value);
    internal bool IsSetBytesScanned();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public Nullable`1<long> get_EventsMatched();
    public void set_EventsMatched(Nullable`1<long> value);
    internal bool IsSetEventsMatched();
    public Nullable`1<long> get_EventsScanned();
    public void set_EventsScanned(Nullable`1<long> value);
    internal bool IsSetEventsScanned();
    public Nullable`1<int> get_ExecutionTimeInMillis();
    public void set_ExecutionTimeInMillis(Nullable`1<int> value);
    internal bool IsSetExecutionTimeInMillis();
}
public class Amazon.CloudTrail.Model.RegisterOrganizationDelegatedAdminRequest : AmazonCloudTrailRequest {
    private string _memberAccountId;
    [AWSPropertyAttribute]
public string MemberAccountId { get; public set; }
    public string get_MemberAccountId();
    public void set_MemberAccountId(string value);
    internal bool IsSetMemberAccountId();
}
public class Amazon.CloudTrail.Model.RegisterOrganizationDelegatedAdminResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.RemoveTagsRequest : AmazonCloudTrailRequest {
    private string _resourceId;
    private List`1<Tag> _tagsList;
    [AWSPropertyAttribute]
public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> TagsList { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public List`1<Tag> get_TagsList();
    public void set_TagsList(List`1<Tag> value);
    internal bool IsSetTagsList();
}
public class Amazon.CloudTrail.Model.RemoveTagsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.Resource : object {
    private string _resourceName;
    private string _resourceType;
    public string ResourceName { get; public set; }
    public string ResourceType { get; public set; }
    public string get_ResourceName();
    public void set_ResourceName(string value);
    internal bool IsSetResourceName();
    public string get_ResourceType();
    public void set_ResourceType(string value);
    internal bool IsSetResourceType();
}
public class Amazon.CloudTrail.Model.ResourceARNNotValidException : AmazonCloudTrailException {
    public ResourceARNNotValidException(string message);
    public ResourceARNNotValidException(string message, Exception innerException);
    public ResourceARNNotValidException(Exception innerException);
    public ResourceARNNotValidException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceARNNotValidException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ResourceNotFoundException : AmazonCloudTrailException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ResourcePolicyNotFoundException : AmazonCloudTrailException {
    public ResourcePolicyNotFoundException(string message);
    public ResourcePolicyNotFoundException(string message, Exception innerException);
    public ResourcePolicyNotFoundException(Exception innerException);
    public ResourcePolicyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourcePolicyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ResourcePolicyNotValidException : AmazonCloudTrailException {
    public ResourcePolicyNotValidException(string message);
    public ResourcePolicyNotValidException(string message, Exception innerException);
    public ResourcePolicyNotValidException(Exception innerException);
    public ResourcePolicyNotValidException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourcePolicyNotValidException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ResourceTag : object {
    private string _resourceId;
    private List`1<Tag> _tagsList;
    public string ResourceId { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> TagsList { get; public set; }
    public string get_ResourceId();
    public void set_ResourceId(string value);
    internal bool IsSetResourceId();
    public List`1<Tag> get_TagsList();
    public void set_TagsList(List`1<Tag> value);
    internal bool IsSetTagsList();
}
public class Amazon.CloudTrail.Model.ResourceTypeNotSupportedException : AmazonCloudTrailException {
    public ResourceTypeNotSupportedException(string message);
    public ResourceTypeNotSupportedException(string message, Exception innerException);
    public ResourceTypeNotSupportedException(Exception innerException);
    public ResourceTypeNotSupportedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceTypeNotSupportedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.RestoreEventDataStoreRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
}
public class Amazon.CloudTrail.Model.RestoreEventDataStoreResponse : AmazonWebServiceResponse {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private BillingMode _billingMode;
    private Nullable`1<DateTime> _createdTimestamp;
    private string _eventDataStoreArn;
    private string _kmsKeyId;
    private Nullable`1<bool> _multiRegionEnabled;
    private string _name;
    private Nullable`1<bool> _organizationEnabled;
    private Nullable`1<int> _retentionPeriod;
    private EventDataStoreStatus _status;
    private Nullable`1<bool> _terminationProtectionEnabled;
    private Nullable`1<DateTime> _updatedTimestamp;
    public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    public BillingMode BillingMode { get; public set; }
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string EventDataStoreArn { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public Nullable`1<bool> MultiRegionEnabled { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> OrganizationEnabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriod { get; public set; }
    public EventDataStoreStatus Status { get; public set; }
    public Nullable`1<bool> TerminationProtectionEnabled { get; public set; }
    public Nullable`1<DateTime> UpdatedTimestamp { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public string get_EventDataStoreArn();
    public void set_EventDataStoreArn(string value);
    internal bool IsSetEventDataStoreArn();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_MultiRegionEnabled();
    public void set_MultiRegionEnabled(Nullable`1<bool> value);
    internal bool IsSetMultiRegionEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_OrganizationEnabled();
    public void set_OrganizationEnabled(Nullable`1<bool> value);
    internal bool IsSetOrganizationEnabled();
    public Nullable`1<int> get_RetentionPeriod();
    public void set_RetentionPeriod(Nullable`1<int> value);
    internal bool IsSetRetentionPeriod();
    public EventDataStoreStatus get_Status();
    public void set_Status(EventDataStoreStatus value);
    internal bool IsSetStatus();
    public Nullable`1<bool> get_TerminationProtectionEnabled();
    public void set_TerminationProtectionEnabled(Nullable`1<bool> value);
    internal bool IsSetTerminationProtectionEnabled();
    public Nullable`1<DateTime> get_UpdatedTimestamp();
    public void set_UpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTimestamp();
}
public class Amazon.CloudTrail.Model.S3BucketDoesNotExistException : AmazonCloudTrailException {
    public S3BucketDoesNotExistException(string message);
    public S3BucketDoesNotExistException(string message, Exception innerException);
    public S3BucketDoesNotExistException(Exception innerException);
    public S3BucketDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public S3BucketDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.S3ImportSource : object {
    private string _s3BucketAccessRoleArn;
    private string _s3BucketRegion;
    private string _s3LocationUri;
    [AWSPropertyAttribute]
public string S3BucketAccessRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string S3BucketRegion { get; public set; }
    [AWSPropertyAttribute]
public string S3LocationUri { get; public set; }
    public string get_S3BucketAccessRoleArn();
    public void set_S3BucketAccessRoleArn(string value);
    internal bool IsSetS3BucketAccessRoleArn();
    public string get_S3BucketRegion();
    public void set_S3BucketRegion(string value);
    internal bool IsSetS3BucketRegion();
    public string get_S3LocationUri();
    public void set_S3LocationUri(string value);
    internal bool IsSetS3LocationUri();
}
public class Amazon.CloudTrail.Model.SourceConfig : object {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private Nullable`1<bool> _applyToAllRegions;
    public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    public Nullable`1<bool> ApplyToAllRegions { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public Nullable`1<bool> get_ApplyToAllRegions();
    public void set_ApplyToAllRegions(Nullable`1<bool> value);
    internal bool IsSetApplyToAllRegions();
}
public class Amazon.CloudTrail.Model.StartEventDataStoreIngestionRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
}
public class Amazon.CloudTrail.Model.StartEventDataStoreIngestionResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.StartImportRequest : AmazonCloudTrailRequest {
    private List`1<string> _destinations;
    private Nullable`1<DateTime> _endEventTime;
    private string _importId;
    private ImportSource _importSource;
    private Nullable`1<DateTime> _startEventTime;
    [AWSPropertyAttribute]
public List`1<string> Destinations { get; public set; }
    public Nullable`1<DateTime> EndEventTime { get; public set; }
    [AWSPropertyAttribute]
public string ImportId { get; public set; }
    public ImportSource ImportSource { get; public set; }
    public Nullable`1<DateTime> StartEventTime { get; public set; }
    public List`1<string> get_Destinations();
    public void set_Destinations(List`1<string> value);
    internal bool IsSetDestinations();
    public Nullable`1<DateTime> get_EndEventTime();
    public void set_EndEventTime(Nullable`1<DateTime> value);
    internal bool IsSetEndEventTime();
    public string get_ImportId();
    public void set_ImportId(string value);
    internal bool IsSetImportId();
    public ImportSource get_ImportSource();
    public void set_ImportSource(ImportSource value);
    internal bool IsSetImportSource();
    public Nullable`1<DateTime> get_StartEventTime();
    public void set_StartEventTime(Nullable`1<DateTime> value);
    internal bool IsSetStartEventTime();
}
public class Amazon.CloudTrail.Model.StartImportResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdTimestamp;
    private List`1<string> _destinations;
    private Nullable`1<DateTime> _endEventTime;
    private string _importId;
    private ImportSource _importSource;
    private ImportStatus _importStatus;
    private Nullable`1<DateTime> _startEventTime;
    private Nullable`1<DateTime> _updatedTimestamp;
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Destinations { get; public set; }
    public Nullable`1<DateTime> EndEventTime { get; public set; }
    [AWSPropertyAttribute]
public string ImportId { get; public set; }
    public ImportSource ImportSource { get; public set; }
    public ImportStatus ImportStatus { get; public set; }
    public Nullable`1<DateTime> StartEventTime { get; public set; }
    public Nullable`1<DateTime> UpdatedTimestamp { get; public set; }
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public List`1<string> get_Destinations();
    public void set_Destinations(List`1<string> value);
    internal bool IsSetDestinations();
    public Nullable`1<DateTime> get_EndEventTime();
    public void set_EndEventTime(Nullable`1<DateTime> value);
    internal bool IsSetEndEventTime();
    public string get_ImportId();
    public void set_ImportId(string value);
    internal bool IsSetImportId();
    public ImportSource get_ImportSource();
    public void set_ImportSource(ImportSource value);
    internal bool IsSetImportSource();
    public ImportStatus get_ImportStatus();
    public void set_ImportStatus(ImportStatus value);
    internal bool IsSetImportStatus();
    public Nullable`1<DateTime> get_StartEventTime();
    public void set_StartEventTime(Nullable`1<DateTime> value);
    internal bool IsSetStartEventTime();
    public Nullable`1<DateTime> get_UpdatedTimestamp();
    public void set_UpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTimestamp();
}
public class Amazon.CloudTrail.Model.StartLoggingRequest : AmazonCloudTrailRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudTrail.Model.StartLoggingResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.StartQueryRequest : AmazonCloudTrailRequest {
    private string _deliveryS3Uri;
    private string _queryAlias;
    private List`1<string> _queryParameters;
    private string _queryStatement;
    [AWSPropertyAttribute]
public string DeliveryS3Uri { get; public set; }
    [AWSPropertyAttribute]
public string QueryAlias { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> QueryParameters { get; public set; }
    [AWSPropertyAttribute]
public string QueryStatement { get; public set; }
    public string get_DeliveryS3Uri();
    public void set_DeliveryS3Uri(string value);
    internal bool IsSetDeliveryS3Uri();
    public string get_QueryAlias();
    public void set_QueryAlias(string value);
    internal bool IsSetQueryAlias();
    public List`1<string> get_QueryParameters();
    public void set_QueryParameters(List`1<string> value);
    internal bool IsSetQueryParameters();
    public string get_QueryStatement();
    public void set_QueryStatement(string value);
    internal bool IsSetQueryStatement();
}
public class Amazon.CloudTrail.Model.StartQueryResponse : AmazonWebServiceResponse {
    private string _queryId;
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
}
public class Amazon.CloudTrail.Model.StopEventDataStoreIngestionRequest : AmazonCloudTrailRequest {
    private string _eventDataStore;
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
}
public class Amazon.CloudTrail.Model.StopEventDataStoreIngestionResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.StopImportRequest : AmazonCloudTrailRequest {
    private string _importId;
    [AWSPropertyAttribute]
public string ImportId { get; public set; }
    public string get_ImportId();
    public void set_ImportId(string value);
    internal bool IsSetImportId();
}
public class Amazon.CloudTrail.Model.StopImportResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _createdTimestamp;
    private List`1<string> _destinations;
    private Nullable`1<DateTime> _endEventTime;
    private string _importId;
    private ImportSource _importSource;
    private ImportStatistics _importStatistics;
    private ImportStatus _importStatus;
    private Nullable`1<DateTime> _startEventTime;
    private Nullable`1<DateTime> _updatedTimestamp;
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Destinations { get; public set; }
    public Nullable`1<DateTime> EndEventTime { get; public set; }
    [AWSPropertyAttribute]
public string ImportId { get; public set; }
    public ImportSource ImportSource { get; public set; }
    public ImportStatistics ImportStatistics { get; public set; }
    public ImportStatus ImportStatus { get; public set; }
    public Nullable`1<DateTime> StartEventTime { get; public set; }
    public Nullable`1<DateTime> UpdatedTimestamp { get; public set; }
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public List`1<string> get_Destinations();
    public void set_Destinations(List`1<string> value);
    internal bool IsSetDestinations();
    public Nullable`1<DateTime> get_EndEventTime();
    public void set_EndEventTime(Nullable`1<DateTime> value);
    internal bool IsSetEndEventTime();
    public string get_ImportId();
    public void set_ImportId(string value);
    internal bool IsSetImportId();
    public ImportSource get_ImportSource();
    public void set_ImportSource(ImportSource value);
    internal bool IsSetImportSource();
    public ImportStatistics get_ImportStatistics();
    public void set_ImportStatistics(ImportStatistics value);
    internal bool IsSetImportStatistics();
    public ImportStatus get_ImportStatus();
    public void set_ImportStatus(ImportStatus value);
    internal bool IsSetImportStatus();
    public Nullable`1<DateTime> get_StartEventTime();
    public void set_StartEventTime(Nullable`1<DateTime> value);
    internal bool IsSetStartEventTime();
    public Nullable`1<DateTime> get_UpdatedTimestamp();
    public void set_UpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTimestamp();
}
public class Amazon.CloudTrail.Model.StopLoggingRequest : AmazonCloudTrailRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudTrail.Model.StopLoggingResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudTrail.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudTrail.Model.TagsLimitExceededException : AmazonCloudTrailException {
    public TagsLimitExceededException(string message);
    public TagsLimitExceededException(string message, Exception innerException);
    public TagsLimitExceededException(Exception innerException);
    public TagsLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TagsLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.ThrottlingException : AmazonCloudTrailException {
    public ThrottlingException(string message);
    public ThrottlingException(string message, Exception innerException);
    public ThrottlingException(Exception innerException);
    public ThrottlingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ThrottlingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.Trail : object {
    private string _cloudWatchLogsLogGroupArn;
    private string _cloudWatchLogsRoleArn;
    private Nullable`1<bool> _hasCustomEventSelectors;
    private Nullable`1<bool> _hasInsightSelectors;
    private string _homeRegion;
    private Nullable`1<bool> _includeGlobalServiceEvents;
    private Nullable`1<bool> _isMultiRegionTrail;
    private Nullable`1<bool> _isOrganizationTrail;
    private string _kmsKeyId;
    private Nullable`1<bool> _logFileValidationEnabled;
    private string _name;
    private string _s3BucketName;
    private string _s3KeyPrefix;
    private string _snsTopicARN;
    private string _snsTopicName;
    private string _trailARN;
    public string CloudWatchLogsLogGroupArn { get; public set; }
    public string CloudWatchLogsRoleArn { get; public set; }
    public Nullable`1<bool> HasCustomEventSelectors { get; public set; }
    public Nullable`1<bool> HasInsightSelectors { get; public set; }
    public string HomeRegion { get; public set; }
    public Nullable`1<bool> IncludeGlobalServiceEvents { get; public set; }
    public Nullable`1<bool> IsMultiRegionTrail { get; public set; }
    public Nullable`1<bool> IsOrganizationTrail { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<bool> LogFileValidationEnabled { get; public set; }
    public string Name { get; public set; }
    public string S3BucketName { get; public set; }
    public string S3KeyPrefix { get; public set; }
    public string SnsTopicARN { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use SnsTopicARN.")]
public string SnsTopicName { get; public set; }
    public string TrailARN { get; public set; }
    public string get_CloudWatchLogsLogGroupArn();
    public void set_CloudWatchLogsLogGroupArn(string value);
    internal bool IsSetCloudWatchLogsLogGroupArn();
    public string get_CloudWatchLogsRoleArn();
    public void set_CloudWatchLogsRoleArn(string value);
    internal bool IsSetCloudWatchLogsRoleArn();
    public Nullable`1<bool> get_HasCustomEventSelectors();
    public void set_HasCustomEventSelectors(Nullable`1<bool> value);
    internal bool IsSetHasCustomEventSelectors();
    public Nullable`1<bool> get_HasInsightSelectors();
    public void set_HasInsightSelectors(Nullable`1<bool> value);
    internal bool IsSetHasInsightSelectors();
    public string get_HomeRegion();
    public void set_HomeRegion(string value);
    internal bool IsSetHomeRegion();
    public Nullable`1<bool> get_IncludeGlobalServiceEvents();
    public void set_IncludeGlobalServiceEvents(Nullable`1<bool> value);
    internal bool IsSetIncludeGlobalServiceEvents();
    public Nullable`1<bool> get_IsMultiRegionTrail();
    public void set_IsMultiRegionTrail(Nullable`1<bool> value);
    internal bool IsSetIsMultiRegionTrail();
    public Nullable`1<bool> get_IsOrganizationTrail();
    public void set_IsOrganizationTrail(Nullable`1<bool> value);
    internal bool IsSetIsOrganizationTrail();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_LogFileValidationEnabled();
    public void set_LogFileValidationEnabled(Nullable`1<bool> value);
    internal bool IsSetLogFileValidationEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_S3KeyPrefix();
    public void set_S3KeyPrefix(string value);
    internal bool IsSetS3KeyPrefix();
    public string get_SnsTopicARN();
    public void set_SnsTopicARN(string value);
    internal bool IsSetSnsTopicARN();
    public string get_SnsTopicName();
    public void set_SnsTopicName(string value);
    internal bool IsSetSnsTopicName();
    public string get_TrailARN();
    public void set_TrailARN(string value);
    internal bool IsSetTrailARN();
}
public class Amazon.CloudTrail.Model.TrailAlreadyExistsException : AmazonCloudTrailException {
    public TrailAlreadyExistsException(string message);
    public TrailAlreadyExistsException(string message, Exception innerException);
    public TrailAlreadyExistsException(Exception innerException);
    public TrailAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrailAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.TrailInfo : object {
    private string _homeRegion;
    private string _name;
    private string _trailARN;
    public string HomeRegion { get; public set; }
    public string Name { get; public set; }
    public string TrailARN { get; public set; }
    public string get_HomeRegion();
    public void set_HomeRegion(string value);
    internal bool IsSetHomeRegion();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_TrailARN();
    public void set_TrailARN(string value);
    internal bool IsSetTrailARN();
}
public class Amazon.CloudTrail.Model.TrailNotFoundException : AmazonCloudTrailException {
    public TrailNotFoundException(string message);
    public TrailNotFoundException(string message, Exception innerException);
    public TrailNotFoundException(Exception innerException);
    public TrailNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrailNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.TrailNotProvidedException : AmazonCloudTrailException {
    public TrailNotProvidedException(string message);
    public TrailNotProvidedException(string message, Exception innerException);
    public TrailNotProvidedException(Exception innerException);
    public TrailNotProvidedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrailNotProvidedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.UnsupportedOperationException : AmazonCloudTrailException {
    public UnsupportedOperationException(string message);
    public UnsupportedOperationException(string message, Exception innerException);
    public UnsupportedOperationException(Exception innerException);
    public UnsupportedOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedOperationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudTrail.Model.UpdateChannelRequest : AmazonCloudTrailRequest {
    private string _channel;
    private List`1<Destination> _destinations;
    private string _name;
    [AWSPropertyAttribute]
public string Channel { get; public set; }
    [AWSPropertyAttribute]
public List`1<Destination> Destinations { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Channel();
    public void set_Channel(string value);
    internal bool IsSetChannel();
    public List`1<Destination> get_Destinations();
    public void set_Destinations(List`1<Destination> value);
    internal bool IsSetDestinations();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudTrail.Model.UpdateChannelResponse : AmazonWebServiceResponse {
    private string _channelArn;
    private List`1<Destination> _destinations;
    private string _name;
    private string _source;
    [AWSPropertyAttribute]
public string ChannelArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Destination> Destinations { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Source { get; public set; }
    public string get_ChannelArn();
    public void set_ChannelArn(string value);
    internal bool IsSetChannelArn();
    public List`1<Destination> get_Destinations();
    public void set_Destinations(List`1<Destination> value);
    internal bool IsSetDestinations();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Source();
    public void set_Source(string value);
    internal bool IsSetSource();
}
public class Amazon.CloudTrail.Model.UpdateEventDataStoreRequest : AmazonCloudTrailRequest {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private BillingMode _billingMode;
    private string _eventDataStore;
    private string _kmsKeyId;
    private Nullable`1<bool> _multiRegionEnabled;
    private string _name;
    private Nullable`1<bool> _organizationEnabled;
    private Nullable`1<int> _retentionPeriod;
    private Nullable`1<bool> _terminationProtectionEnabled;
    public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    public BillingMode BillingMode { get; public set; }
    [AWSPropertyAttribute]
public string EventDataStore { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public Nullable`1<bool> MultiRegionEnabled { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> OrganizationEnabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriod { get; public set; }
    public Nullable`1<bool> TerminationProtectionEnabled { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public string get_EventDataStore();
    public void set_EventDataStore(string value);
    internal bool IsSetEventDataStore();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_MultiRegionEnabled();
    public void set_MultiRegionEnabled(Nullable`1<bool> value);
    internal bool IsSetMultiRegionEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_OrganizationEnabled();
    public void set_OrganizationEnabled(Nullable`1<bool> value);
    internal bool IsSetOrganizationEnabled();
    public Nullable`1<int> get_RetentionPeriod();
    public void set_RetentionPeriod(Nullable`1<int> value);
    internal bool IsSetRetentionPeriod();
    public Nullable`1<bool> get_TerminationProtectionEnabled();
    public void set_TerminationProtectionEnabled(Nullable`1<bool> value);
    internal bool IsSetTerminationProtectionEnabled();
}
public class Amazon.CloudTrail.Model.UpdateEventDataStoreResponse : AmazonWebServiceResponse {
    private List`1<AdvancedEventSelector> _advancedEventSelectors;
    private BillingMode _billingMode;
    private Nullable`1<DateTime> _createdTimestamp;
    private string _eventDataStoreArn;
    private string _federationRoleArn;
    private FederationStatus _federationStatus;
    private string _kmsKeyId;
    private Nullable`1<bool> _multiRegionEnabled;
    private string _name;
    private Nullable`1<bool> _organizationEnabled;
    private Nullable`1<int> _retentionPeriod;
    private EventDataStoreStatus _status;
    private Nullable`1<bool> _terminationProtectionEnabled;
    private Nullable`1<DateTime> _updatedTimestamp;
    public List`1<AdvancedEventSelector> AdvancedEventSelectors { get; public set; }
    public BillingMode BillingMode { get; public set; }
    public Nullable`1<DateTime> CreatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string EventDataStoreArn { get; public set; }
    [AWSPropertyAttribute]
public string FederationRoleArn { get; public set; }
    public FederationStatus FederationStatus { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public Nullable`1<bool> MultiRegionEnabled { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public Nullable`1<bool> OrganizationEnabled { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionPeriod { get; public set; }
    public EventDataStoreStatus Status { get; public set; }
    public Nullable`1<bool> TerminationProtectionEnabled { get; public set; }
    public Nullable`1<DateTime> UpdatedTimestamp { get; public set; }
    public List`1<AdvancedEventSelector> get_AdvancedEventSelectors();
    public void set_AdvancedEventSelectors(List`1<AdvancedEventSelector> value);
    internal bool IsSetAdvancedEventSelectors();
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public Nullable`1<DateTime> get_CreatedTimestamp();
    public void set_CreatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetCreatedTimestamp();
    public string get_EventDataStoreArn();
    public void set_EventDataStoreArn(string value);
    internal bool IsSetEventDataStoreArn();
    public string get_FederationRoleArn();
    public void set_FederationRoleArn(string value);
    internal bool IsSetFederationRoleArn();
    public FederationStatus get_FederationStatus();
    public void set_FederationStatus(FederationStatus value);
    internal bool IsSetFederationStatus();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_MultiRegionEnabled();
    public void set_MultiRegionEnabled(Nullable`1<bool> value);
    internal bool IsSetMultiRegionEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_OrganizationEnabled();
    public void set_OrganizationEnabled(Nullable`1<bool> value);
    internal bool IsSetOrganizationEnabled();
    public Nullable`1<int> get_RetentionPeriod();
    public void set_RetentionPeriod(Nullable`1<int> value);
    internal bool IsSetRetentionPeriod();
    public EventDataStoreStatus get_Status();
    public void set_Status(EventDataStoreStatus value);
    internal bool IsSetStatus();
    public Nullable`1<bool> get_TerminationProtectionEnabled();
    public void set_TerminationProtectionEnabled(Nullable`1<bool> value);
    internal bool IsSetTerminationProtectionEnabled();
    public Nullable`1<DateTime> get_UpdatedTimestamp();
    public void set_UpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetUpdatedTimestamp();
}
public class Amazon.CloudTrail.Model.UpdateTrailRequest : AmazonCloudTrailRequest {
    private string _cloudWatchLogsLogGroupArn;
    private string _cloudWatchLogsRoleArn;
    private Nullable`1<bool> _enableLogFileValidation;
    private Nullable`1<bool> _includeGlobalServiceEvents;
    private Nullable`1<bool> _isMultiRegionTrail;
    private Nullable`1<bool> _isOrganizationTrail;
    private string _kmsKeyId;
    private string _name;
    private string _s3BucketName;
    private string _s3KeyPrefix;
    private string _snsTopicName;
    public string CloudWatchLogsLogGroupArn { get; public set; }
    public string CloudWatchLogsRoleArn { get; public set; }
    public Nullable`1<bool> EnableLogFileValidation { get; public set; }
    public Nullable`1<bool> IncludeGlobalServiceEvents { get; public set; }
    public Nullable`1<bool> IsMultiRegionTrail { get; public set; }
    public Nullable`1<bool> IsOrganizationTrail { get; public set; }
    public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string S3BucketName { get; public set; }
    public string S3KeyPrefix { get; public set; }
    public string SnsTopicName { get; public set; }
    public string get_CloudWatchLogsLogGroupArn();
    public void set_CloudWatchLogsLogGroupArn(string value);
    internal bool IsSetCloudWatchLogsLogGroupArn();
    public string get_CloudWatchLogsRoleArn();
    public void set_CloudWatchLogsRoleArn(string value);
    internal bool IsSetCloudWatchLogsRoleArn();
    public Nullable`1<bool> get_EnableLogFileValidation();
    public void set_EnableLogFileValidation(Nullable`1<bool> value);
    internal bool IsSetEnableLogFileValidation();
    public Nullable`1<bool> get_IncludeGlobalServiceEvents();
    public void set_IncludeGlobalServiceEvents(Nullable`1<bool> value);
    internal bool IsSetIncludeGlobalServiceEvents();
    public Nullable`1<bool> get_IsMultiRegionTrail();
    public void set_IsMultiRegionTrail(Nullable`1<bool> value);
    internal bool IsSetIsMultiRegionTrail();
    public Nullable`1<bool> get_IsOrganizationTrail();
    public void set_IsOrganizationTrail(Nullable`1<bool> value);
    internal bool IsSetIsOrganizationTrail();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_S3KeyPrefix();
    public void set_S3KeyPrefix(string value);
    internal bool IsSetS3KeyPrefix();
    public string get_SnsTopicName();
    public void set_SnsTopicName(string value);
    internal bool IsSetSnsTopicName();
}
public class Amazon.CloudTrail.Model.UpdateTrailResponse : AmazonWebServiceResponse {
    private string _cloudWatchLogsLogGroupArn;
    private string _cloudWatchLogsRoleArn;
    private Nullable`1<bool> _includeGlobalServiceEvents;
    private Nullable`1<bool> _isMultiRegionTrail;
    private Nullable`1<bool> _isOrganizationTrail;
    private string _kmsKeyId;
    private Nullable`1<bool> _logFileValidationEnabled;
    private string _name;
    private string _s3BucketName;
    private string _s3KeyPrefix;
    private string _snsTopicARN;
    private string _snsTopicName;
    private string _trailARN;
    public string CloudWatchLogsLogGroupArn { get; public set; }
    public string CloudWatchLogsRoleArn { get; public set; }
    public Nullable`1<bool> IncludeGlobalServiceEvents { get; public set; }
    public Nullable`1<bool> IsMultiRegionTrail { get; public set; }
    public Nullable`1<bool> IsOrganizationTrail { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<bool> LogFileValidationEnabled { get; public set; }
    public string Name { get; public set; }
    public string S3BucketName { get; public set; }
    public string S3KeyPrefix { get; public set; }
    public string SnsTopicARN { get; public set; }
    [ObsoleteAttribute("This field is deprecated. Use SnsTopicARN.")]
public string SnsTopicName { get; public set; }
    public string TrailARN { get; public set; }
    public string get_CloudWatchLogsLogGroupArn();
    public void set_CloudWatchLogsLogGroupArn(string value);
    internal bool IsSetCloudWatchLogsLogGroupArn();
    public string get_CloudWatchLogsRoleArn();
    public void set_CloudWatchLogsRoleArn(string value);
    internal bool IsSetCloudWatchLogsRoleArn();
    public Nullable`1<bool> get_IncludeGlobalServiceEvents();
    public void set_IncludeGlobalServiceEvents(Nullable`1<bool> value);
    internal bool IsSetIncludeGlobalServiceEvents();
    public Nullable`1<bool> get_IsMultiRegionTrail();
    public void set_IsMultiRegionTrail(Nullable`1<bool> value);
    internal bool IsSetIsMultiRegionTrail();
    public Nullable`1<bool> get_IsOrganizationTrail();
    public void set_IsOrganizationTrail(Nullable`1<bool> value);
    internal bool IsSetIsOrganizationTrail();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_LogFileValidationEnabled();
    public void set_LogFileValidationEnabled(Nullable`1<bool> value);
    internal bool IsSetLogFileValidationEnabled();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_S3KeyPrefix();
    public void set_S3KeyPrefix(string value);
    internal bool IsSetS3KeyPrefix();
    public string get_SnsTopicARN();
    public void set_SnsTopicARN(string value);
    internal bool IsSetSnsTopicARN();
    public string get_SnsTopicName();
    public void set_SnsTopicName(string value);
    internal bool IsSetSnsTopicName();
    public string get_TrailARN();
    public void set_TrailARN(string value);
    internal bool IsSetTrailARN();
}
public class Amazon.CloudTrail.QueryStatus : ConstantClass {
    public static QueryStatus CANCELLED;
    public static QueryStatus FAILED;
    public static QueryStatus FINISHED;
    public static QueryStatus QUEUED;
    public static QueryStatus RUNNING;
    public static QueryStatus TIMED_OUT;
    public QueryStatus(string value);
    private static QueryStatus();
    public static QueryStatus FindValue(string value);
    public static QueryStatus op_Implicit(string value);
}
public class Amazon.CloudTrail.ReadWriteType : ConstantClass {
    public static ReadWriteType All;
    public static ReadWriteType ReadOnly;
    public static ReadWriteType WriteOnly;
    public ReadWriteType(string value);
    private static ReadWriteType();
    public static ReadWriteType FindValue(string value);
    public static ReadWriteType op_Implicit(string value);
}
