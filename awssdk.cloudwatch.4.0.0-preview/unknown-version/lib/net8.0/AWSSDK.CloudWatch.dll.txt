public class Amazon.CloudWatch.ActionsSuppressedBy : ConstantClass {
    public static ActionsSuppressedBy Alarm;
    public static ActionsSuppressedBy ExtensionPeriod;
    public static ActionsSuppressedBy WaitPeriod;
    public ActionsSuppressedBy(string value);
    private static ActionsSuppressedBy();
    public static ActionsSuppressedBy FindValue(string value);
    public static ActionsSuppressedBy op_Implicit(string value);
}
public class Amazon.CloudWatch.AlarmType : ConstantClass {
    public static AlarmType CompositeAlarm;
    public static AlarmType MetricAlarm;
    public AlarmType(string value);
    private static AlarmType();
    public static AlarmType FindValue(string value);
    public static AlarmType op_Implicit(string value);
}
public class Amazon.CloudWatch.AmazonCloudWatchClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ICloudWatchPaginatorFactory _paginators;
    public ICloudWatchPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonCloudWatchClient(RegionEndpoint region);
    public AmazonCloudWatchClient(AmazonCloudWatchConfig config);
    public AmazonCloudWatchClient(AWSCredentials credentials);
    public AmazonCloudWatchClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonCloudWatchClient(AWSCredentials credentials, AmazonCloudWatchConfig clientConfig);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonCloudWatchConfig clientConfig);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonCloudWatchClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonCloudWatchConfig clientConfig);
    private static AmazonCloudWatchClient();
    public sealed virtual ICloudWatchPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual DeleteAlarmsResponse DeleteAlarms(DeleteAlarmsRequest request);
    public virtual Task`1<DeleteAlarmsResponse> DeleteAlarmsAsync(DeleteAlarmsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteAnomalyDetectorResponse DeleteAnomalyDetector(DeleteAnomalyDetectorRequest request);
    public virtual Task`1<DeleteAnomalyDetectorResponse> DeleteAnomalyDetectorAsync(DeleteAnomalyDetectorRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDashboardsResponse DeleteDashboards(DeleteDashboardsRequest request);
    public virtual Task`1<DeleteDashboardsResponse> DeleteDashboardsAsync(DeleteDashboardsRequest request, CancellationToken cancellationToken);
    internal virtual DeleteInsightRulesResponse DeleteInsightRules(DeleteInsightRulesRequest request);
    public virtual Task`1<DeleteInsightRulesResponse> DeleteInsightRulesAsync(DeleteInsightRulesRequest request, CancellationToken cancellationToken);
    internal virtual DeleteMetricStreamResponse DeleteMetricStream(DeleteMetricStreamRequest request);
    public virtual Task`1<DeleteMetricStreamResponse> DeleteMetricStreamAsync(DeleteMetricStreamRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAlarmHistoryResponse DescribeAlarmHistory();
    internal virtual DescribeAlarmHistoryResponse DescribeAlarmHistory(DescribeAlarmHistoryRequest request);
    public virtual Task`1<DescribeAlarmHistoryResponse> DescribeAlarmHistoryAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeAlarmHistoryResponse> DescribeAlarmHistoryAsync(DescribeAlarmHistoryRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAlarmsResponse DescribeAlarms();
    internal virtual DescribeAlarmsResponse DescribeAlarms(DescribeAlarmsRequest request);
    public virtual Task`1<DescribeAlarmsResponse> DescribeAlarmsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeAlarmsResponse> DescribeAlarmsAsync(DescribeAlarmsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAlarmsForMetricResponse DescribeAlarmsForMetric(DescribeAlarmsForMetricRequest request);
    public virtual Task`1<DescribeAlarmsForMetricResponse> DescribeAlarmsForMetricAsync(DescribeAlarmsForMetricRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAnomalyDetectorsResponse DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request);
    public virtual Task`1<DescribeAnomalyDetectorsResponse> DescribeAnomalyDetectorsAsync(DescribeAnomalyDetectorsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInsightRulesResponse DescribeInsightRules(DescribeInsightRulesRequest request);
    public virtual Task`1<DescribeInsightRulesResponse> DescribeInsightRulesAsync(DescribeInsightRulesRequest request, CancellationToken cancellationToken);
    internal virtual DisableAlarmActionsResponse DisableAlarmActions(DisableAlarmActionsRequest request);
    public virtual Task`1<DisableAlarmActionsResponse> DisableAlarmActionsAsync(DisableAlarmActionsRequest request, CancellationToken cancellationToken);
    internal virtual DisableInsightRulesResponse DisableInsightRules(DisableInsightRulesRequest request);
    public virtual Task`1<DisableInsightRulesResponse> DisableInsightRulesAsync(DisableInsightRulesRequest request, CancellationToken cancellationToken);
    internal virtual EnableAlarmActionsResponse EnableAlarmActions(EnableAlarmActionsRequest request);
    public virtual Task`1<EnableAlarmActionsResponse> EnableAlarmActionsAsync(EnableAlarmActionsRequest request, CancellationToken cancellationToken);
    internal virtual EnableInsightRulesResponse EnableInsightRules(EnableInsightRulesRequest request);
    public virtual Task`1<EnableInsightRulesResponse> EnableInsightRulesAsync(EnableInsightRulesRequest request, CancellationToken cancellationToken);
    internal virtual GetDashboardResponse GetDashboard(GetDashboardRequest request);
    public virtual Task`1<GetDashboardResponse> GetDashboardAsync(GetDashboardRequest request, CancellationToken cancellationToken);
    internal virtual GetInsightRuleReportResponse GetInsightRuleReport(GetInsightRuleReportRequest request);
    public virtual Task`1<GetInsightRuleReportResponse> GetInsightRuleReportAsync(GetInsightRuleReportRequest request, CancellationToken cancellationToken);
    internal virtual GetMetricDataResponse GetMetricData(GetMetricDataRequest request);
    public virtual Task`1<GetMetricDataResponse> GetMetricDataAsync(GetMetricDataRequest request, CancellationToken cancellationToken);
    internal virtual GetMetricStatisticsResponse GetMetricStatistics(GetMetricStatisticsRequest request);
    public virtual Task`1<GetMetricStatisticsResponse> GetMetricStatisticsAsync(GetMetricStatisticsRequest request, CancellationToken cancellationToken);
    internal virtual GetMetricStreamResponse GetMetricStream(GetMetricStreamRequest request);
    public virtual Task`1<GetMetricStreamResponse> GetMetricStreamAsync(GetMetricStreamRequest request, CancellationToken cancellationToken);
    internal virtual GetMetricWidgetImageResponse GetMetricWidgetImage(GetMetricWidgetImageRequest request);
    public virtual Task`1<GetMetricWidgetImageResponse> GetMetricWidgetImageAsync(GetMetricWidgetImageRequest request, CancellationToken cancellationToken);
    internal virtual ListDashboardsResponse ListDashboards(ListDashboardsRequest request);
    public virtual Task`1<ListDashboardsResponse> ListDashboardsAsync(ListDashboardsRequest request, CancellationToken cancellationToken);
    internal virtual ListManagedInsightRulesResponse ListManagedInsightRules(ListManagedInsightRulesRequest request);
    public virtual Task`1<ListManagedInsightRulesResponse> ListManagedInsightRulesAsync(ListManagedInsightRulesRequest request, CancellationToken cancellationToken);
    internal virtual ListMetricsResponse ListMetrics();
    internal virtual ListMetricsResponse ListMetrics(ListMetricsRequest request);
    public virtual Task`1<ListMetricsResponse> ListMetricsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListMetricsResponse> ListMetricsAsync(ListMetricsRequest request, CancellationToken cancellationToken);
    internal virtual ListMetricStreamsResponse ListMetricStreams(ListMetricStreamsRequest request);
    public virtual Task`1<ListMetricStreamsResponse> ListMetricStreamsAsync(ListMetricStreamsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual PutAnomalyDetectorResponse PutAnomalyDetector(PutAnomalyDetectorRequest request);
    public virtual Task`1<PutAnomalyDetectorResponse> PutAnomalyDetectorAsync(PutAnomalyDetectorRequest request, CancellationToken cancellationToken);
    internal virtual PutCompositeAlarmResponse PutCompositeAlarm(PutCompositeAlarmRequest request);
    public virtual Task`1<PutCompositeAlarmResponse> PutCompositeAlarmAsync(PutCompositeAlarmRequest request, CancellationToken cancellationToken);
    internal virtual PutDashboardResponse PutDashboard(PutDashboardRequest request);
    public virtual Task`1<PutDashboardResponse> PutDashboardAsync(PutDashboardRequest request, CancellationToken cancellationToken);
    internal virtual PutInsightRuleResponse PutInsightRule(PutInsightRuleRequest request);
    public virtual Task`1<PutInsightRuleResponse> PutInsightRuleAsync(PutInsightRuleRequest request, CancellationToken cancellationToken);
    internal virtual PutManagedInsightRulesResponse PutManagedInsightRules(PutManagedInsightRulesRequest request);
    public virtual Task`1<PutManagedInsightRulesResponse> PutManagedInsightRulesAsync(PutManagedInsightRulesRequest request, CancellationToken cancellationToken);
    internal virtual PutMetricAlarmResponse PutMetricAlarm(PutMetricAlarmRequest request);
    public virtual Task`1<PutMetricAlarmResponse> PutMetricAlarmAsync(PutMetricAlarmRequest request, CancellationToken cancellationToken);
    internal virtual PutMetricDataResponse PutMetricData(PutMetricDataRequest request);
    public virtual Task`1<PutMetricDataResponse> PutMetricDataAsync(PutMetricDataRequest request, CancellationToken cancellationToken);
    internal virtual PutMetricStreamResponse PutMetricStream(PutMetricStreamRequest request);
    public virtual Task`1<PutMetricStreamResponse> PutMetricStreamAsync(PutMetricStreamRequest request, CancellationToken cancellationToken);
    internal virtual SetAlarmStateResponse SetAlarmState(SetAlarmStateRequest request);
    public virtual Task`1<SetAlarmStateResponse> SetAlarmStateAsync(SetAlarmStateRequest request, CancellationToken cancellationToken);
    internal virtual StartMetricStreamsResponse StartMetricStreams(StartMetricStreamsRequest request);
    public virtual Task`1<StartMetricStreamsResponse> StartMetricStreamsAsync(StartMetricStreamsRequest request, CancellationToken cancellationToken);
    internal virtual StopMetricStreamsResponse StopMetricStreams(StopMetricStreamsRequest request);
    public virtual Task`1<StopMetricStreamsResponse> StopMetricStreamsAsync(StopMetricStreamsRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.CloudWatch.AmazonCloudWatchConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonCloudWatchEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonCloudWatchConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.CloudWatch.AmazonCloudWatchDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonCloudWatchDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.CloudWatch.AmazonCloudWatchException : AmazonServiceException {
    public AmazonCloudWatchException(string message);
    public AmazonCloudWatchException(string message, Exception innerException);
    public AmazonCloudWatchException(Exception innerException);
    public AmazonCloudWatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonCloudWatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.AmazonCloudWatchRequest : AmazonWebServiceRequest {
}
public class Amazon.CloudWatch.AnomalyDetectorStateValue : ConstantClass {
    public static AnomalyDetectorStateValue PENDING_TRAINING;
    public static AnomalyDetectorStateValue TRAINED;
    public static AnomalyDetectorStateValue TRAINED_INSUFFICIENT_DATA;
    public AnomalyDetectorStateValue(string value);
    private static AnomalyDetectorStateValue();
    public static AnomalyDetectorStateValue FindValue(string value);
    public static AnomalyDetectorStateValue op_Implicit(string value);
}
public class Amazon.CloudWatch.AnomalyDetectorType : ConstantClass {
    public static AnomalyDetectorType METRIC_MATH;
    public static AnomalyDetectorType SINGLE_METRIC;
    public AnomalyDetectorType(string value);
    private static AnomalyDetectorType();
    public static AnomalyDetectorType FindValue(string value);
    public static AnomalyDetectorType op_Implicit(string value);
}
public class Amazon.CloudWatch.ComparisonOperator : ConstantClass {
    public static ComparisonOperator GreaterThanOrEqualToThreshold;
    public static ComparisonOperator GreaterThanThreshold;
    public static ComparisonOperator GreaterThanUpperThreshold;
    public static ComparisonOperator LessThanLowerOrGreaterThanUpperThreshold;
    public static ComparisonOperator LessThanLowerThreshold;
    public static ComparisonOperator LessThanOrEqualToThreshold;
    public static ComparisonOperator LessThanThreshold;
    public ComparisonOperator(string value);
    private static ComparisonOperator();
    public static ComparisonOperator FindValue(string value);
    public static ComparisonOperator op_Implicit(string value);
}
public class Amazon.CloudWatch.Endpoints.CloudWatchEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.CloudWatch.EvaluationState : ConstantClass {
    public static EvaluationState PARTIAL_DATA;
    public EvaluationState(string value);
    private static EvaluationState();
    public static EvaluationState FindValue(string value);
    public static EvaluationState op_Implicit(string value);
}
public class Amazon.CloudWatch.HistoryItemType : ConstantClass {
    public static HistoryItemType Action;
    public static HistoryItemType ConfigurationUpdate;
    public static HistoryItemType StateUpdate;
    public HistoryItemType(string value);
    private static HistoryItemType();
    public static HistoryItemType FindValue(string value);
    public static HistoryItemType op_Implicit(string value);
}
public interface Amazon.CloudWatch.IAmazonCloudWatch {
    public ICloudWatchPaginatorFactory Paginators { get; }
    public abstract virtual ICloudWatchPaginatorFactory get_Paginators();
    public abstract virtual Task`1<DeleteAlarmsResponse> DeleteAlarmsAsync(DeleteAlarmsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteAnomalyDetectorResponse> DeleteAnomalyDetectorAsync(DeleteAnomalyDetectorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDashboardsResponse> DeleteDashboardsAsync(DeleteDashboardsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteInsightRulesResponse> DeleteInsightRulesAsync(DeleteInsightRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMetricStreamResponse> DeleteMetricStreamAsync(DeleteMetricStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAlarmHistoryResponse> DescribeAlarmHistoryAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAlarmHistoryResponse> DescribeAlarmHistoryAsync(DescribeAlarmHistoryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAlarmsResponse> DescribeAlarmsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAlarmsResponse> DescribeAlarmsAsync(DescribeAlarmsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAlarmsForMetricResponse> DescribeAlarmsForMetricAsync(DescribeAlarmsForMetricRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAnomalyDetectorsResponse> DescribeAnomalyDetectorsAsync(DescribeAnomalyDetectorsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInsightRulesResponse> DescribeInsightRulesAsync(DescribeInsightRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableAlarmActionsResponse> DisableAlarmActionsAsync(DisableAlarmActionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableInsightRulesResponse> DisableInsightRulesAsync(DisableInsightRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableAlarmActionsResponse> EnableAlarmActionsAsync(EnableAlarmActionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableInsightRulesResponse> EnableInsightRulesAsync(EnableInsightRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDashboardResponse> GetDashboardAsync(GetDashboardRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetInsightRuleReportResponse> GetInsightRuleReportAsync(GetInsightRuleReportRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMetricDataResponse> GetMetricDataAsync(GetMetricDataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMetricStatisticsResponse> GetMetricStatisticsAsync(GetMetricStatisticsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMetricStreamResponse> GetMetricStreamAsync(GetMetricStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetMetricWidgetImageResponse> GetMetricWidgetImageAsync(GetMetricWidgetImageRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDashboardsResponse> ListDashboardsAsync(ListDashboardsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListManagedInsightRulesResponse> ListManagedInsightRulesAsync(ListManagedInsightRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListMetricsResponse> ListMetricsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListMetricsResponse> ListMetricsAsync(ListMetricsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListMetricStreamsResponse> ListMetricStreamsAsync(ListMetricStreamsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutAnomalyDetectorResponse> PutAnomalyDetectorAsync(PutAnomalyDetectorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutCompositeAlarmResponse> PutCompositeAlarmAsync(PutCompositeAlarmRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutDashboardResponse> PutDashboardAsync(PutDashboardRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutInsightRuleResponse> PutInsightRuleAsync(PutInsightRuleRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutManagedInsightRulesResponse> PutManagedInsightRulesAsync(PutManagedInsightRulesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutMetricAlarmResponse> PutMetricAlarmAsync(PutMetricAlarmRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutMetricDataResponse> PutMetricDataAsync(PutMetricDataRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutMetricStreamResponse> PutMetricStreamAsync(PutMetricStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetAlarmStateResponse> SetAlarmStateAsync(SetAlarmStateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartMetricStreamsResponse> StartMetricStreamsAsync(StartMetricStreamsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopMetricStreamsResponse> StopMetricStreamsAsync(StopMetricStreamsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.CloudWatch.AmazonCloudWatchConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.CloudWatch.Internal.AmazonCloudWatchEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.CloudWatch.Internal.AmazonCloudWatchEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.CloudWatch.Internal.AmazonCloudWatchMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.CloudWatch.MetricStreamOutputFormat : ConstantClass {
    public static MetricStreamOutputFormat Json;
    public static MetricStreamOutputFormat Opentelemetry07;
    public static MetricStreamOutputFormat Opentelemetry10;
    public MetricStreamOutputFormat(string value);
    private static MetricStreamOutputFormat();
    public static MetricStreamOutputFormat FindValue(string value);
    public static MetricStreamOutputFormat op_Implicit(string value);
}
public class Amazon.CloudWatch.Model.AlarmHistoryItem : object {
    private string _alarmName;
    private AlarmType _alarmType;
    private string _historyData;
    private HistoryItemType _historyItemType;
    private string _historySummary;
    private Nullable`1<DateTime> _timestamp;
    [AWSPropertyAttribute]
public string AlarmName { get; public set; }
    public AlarmType AlarmType { get; public set; }
    [AWSPropertyAttribute]
public string HistoryData { get; public set; }
    public HistoryItemType HistoryItemType { get; public set; }
    [AWSPropertyAttribute]
public string HistorySummary { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public AlarmType get_AlarmType();
    public void set_AlarmType(AlarmType value);
    internal bool IsSetAlarmType();
    public string get_HistoryData();
    public void set_HistoryData(string value);
    internal bool IsSetHistoryData();
    public HistoryItemType get_HistoryItemType();
    public void set_HistoryItemType(HistoryItemType value);
    internal bool IsSetHistoryItemType();
    public string get_HistorySummary();
    public void set_HistorySummary(string value);
    internal bool IsSetHistorySummary();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.CloudWatch.Model.AnomalyDetector : object {
    private AnomalyDetectorConfiguration _configuration;
    private List`1<Dimension> _dimensions;
    private MetricCharacteristics _metricCharacteristics;
    private MetricMathAnomalyDetector _metricMathAnomalyDetector;
    private string _metricName;
    private string _awsNamespace;
    private SingleMetricAnomalyDetector _singleMetricAnomalyDetector;
    private string _stat;
    private AnomalyDetectorStateValue _stateValue;
    public AnomalyDetectorConfiguration Configuration { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.Dimensions property.")]
[AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    public MetricCharacteristics MetricCharacteristics { get; public set; }
    public MetricMathAnomalyDetector MetricMathAnomalyDetector { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.MetricName property.")]
[AWSPropertyAttribute]
public string MetricName { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.Namespace property.")]
[AWSPropertyAttribute]
public string Namespace { get; public set; }
    public SingleMetricAnomalyDetector SingleMetricAnomalyDetector { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.Stat property.")]
[AWSPropertyAttribute]
public string Stat { get; public set; }
    public AnomalyDetectorStateValue StateValue { get; public set; }
    public AnomalyDetectorConfiguration get_Configuration();
    public void set_Configuration(AnomalyDetectorConfiguration value);
    internal bool IsSetConfiguration();
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public MetricCharacteristics get_MetricCharacteristics();
    public void set_MetricCharacteristics(MetricCharacteristics value);
    internal bool IsSetMetricCharacteristics();
    public MetricMathAnomalyDetector get_MetricMathAnomalyDetector();
    public void set_MetricMathAnomalyDetector(MetricMathAnomalyDetector value);
    internal bool IsSetMetricMathAnomalyDetector();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public SingleMetricAnomalyDetector get_SingleMetricAnomalyDetector();
    public void set_SingleMetricAnomalyDetector(SingleMetricAnomalyDetector value);
    internal bool IsSetSingleMetricAnomalyDetector();
    public string get_Stat();
    public void set_Stat(string value);
    internal bool IsSetStat();
    public AnomalyDetectorStateValue get_StateValue();
    public void set_StateValue(AnomalyDetectorStateValue value);
    internal bool IsSetStateValue();
}
public class Amazon.CloudWatch.Model.AnomalyDetectorConfiguration : object {
    private List`1<Range> _excludedTimeRanges;
    private string _metricTimezone;
    public List`1<Range> ExcludedTimeRanges { get; public set; }
    [AWSPropertyAttribute]
public string MetricTimezone { get; public set; }
    public List`1<Range> get_ExcludedTimeRanges();
    public void set_ExcludedTimeRanges(List`1<Range> value);
    internal bool IsSetExcludedTimeRanges();
    public string get_MetricTimezone();
    public void set_MetricTimezone(string value);
    internal bool IsSetMetricTimezone();
}
public class Amazon.CloudWatch.Model.CloudWatchPaginatorFactory : object {
    private IAmazonCloudWatch client;
    internal CloudWatchPaginatorFactory(IAmazonCloudWatch client);
    public sealed virtual IDescribeAlarmHistoryPaginator DescribeAlarmHistory(DescribeAlarmHistoryRequest request);
    public sealed virtual IDescribeAlarmsPaginator DescribeAlarms(DescribeAlarmsRequest request);
    public sealed virtual IDescribeAnomalyDetectorsPaginator DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request);
    public sealed virtual IDescribeInsightRulesPaginator DescribeInsightRules(DescribeInsightRulesRequest request);
    public sealed virtual IGetMetricDataPaginator GetMetricData(GetMetricDataRequest request);
    public sealed virtual IListDashboardsPaginator ListDashboards(ListDashboardsRequest request);
    public sealed virtual IListManagedInsightRulesPaginator ListManagedInsightRules(ListManagedInsightRulesRequest request);
    public sealed virtual IListMetricsPaginator ListMetrics(ListMetricsRequest request);
    public sealed virtual IListMetricStreamsPaginator ListMetricStreams(ListMetricStreamsRequest request);
}
public class Amazon.CloudWatch.Model.CompositeAlarm : object {
    private Nullable`1<bool> _actionsEnabled;
    private ActionsSuppressedBy _actionsSuppressedBy;
    private string _actionsSuppressedReason;
    private string _actionsSuppressor;
    private Nullable`1<int> _actionsSuppressorExtensionPeriod;
    private Nullable`1<int> _actionsSuppressorWaitPeriod;
    private List`1<string> _alarmActions;
    private string _alarmArn;
    private Nullable`1<DateTime> _alarmConfigurationUpdatedTimestamp;
    private string _alarmDescription;
    private string _alarmName;
    private string _alarmRule;
    private List`1<string> _insufficientDataActions;
    private List`1<string> _okActions;
    private string _stateReason;
    private string _stateReasonData;
    private Nullable`1<DateTime> _stateTransitionedTimestamp;
    private Nullable`1<DateTime> _stateUpdatedTimestamp;
    private StateValue _stateValue;
    public Nullable`1<bool> ActionsEnabled { get; public set; }
    public ActionsSuppressedBy ActionsSuppressedBy { get; public set; }
    [AWSPropertyAttribute]
public string ActionsSuppressedReason { get; public set; }
    [AWSPropertyAttribute]
public string ActionsSuppressor { get; public set; }
    public Nullable`1<int> ActionsSuppressorExtensionPeriod { get; public set; }
    public Nullable`1<int> ActionsSuppressorWaitPeriod { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AlarmActions { get; public set; }
    [AWSPropertyAttribute]
public string AlarmArn { get; public set; }
    public Nullable`1<DateTime> AlarmConfigurationUpdatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string AlarmDescription { get; public set; }
    [AWSPropertyAttribute]
public string AlarmName { get; public set; }
    [AWSPropertyAttribute]
public string AlarmRule { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InsufficientDataActions { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> OKActions { get; public set; }
    [AWSPropertyAttribute]
public string StateReason { get; public set; }
    [AWSPropertyAttribute]
public string StateReasonData { get; public set; }
    public Nullable`1<DateTime> StateTransitionedTimestamp { get; public set; }
    public Nullable`1<DateTime> StateUpdatedTimestamp { get; public set; }
    public StateValue StateValue { get; public set; }
    public Nullable`1<bool> get_ActionsEnabled();
    public void set_ActionsEnabled(Nullable`1<bool> value);
    internal bool IsSetActionsEnabled();
    public ActionsSuppressedBy get_ActionsSuppressedBy();
    public void set_ActionsSuppressedBy(ActionsSuppressedBy value);
    internal bool IsSetActionsSuppressedBy();
    public string get_ActionsSuppressedReason();
    public void set_ActionsSuppressedReason(string value);
    internal bool IsSetActionsSuppressedReason();
    public string get_ActionsSuppressor();
    public void set_ActionsSuppressor(string value);
    internal bool IsSetActionsSuppressor();
    public Nullable`1<int> get_ActionsSuppressorExtensionPeriod();
    public void set_ActionsSuppressorExtensionPeriod(Nullable`1<int> value);
    internal bool IsSetActionsSuppressorExtensionPeriod();
    public Nullable`1<int> get_ActionsSuppressorWaitPeriod();
    public void set_ActionsSuppressorWaitPeriod(Nullable`1<int> value);
    internal bool IsSetActionsSuppressorWaitPeriod();
    public List`1<string> get_AlarmActions();
    public void set_AlarmActions(List`1<string> value);
    internal bool IsSetAlarmActions();
    public string get_AlarmArn();
    public void set_AlarmArn(string value);
    internal bool IsSetAlarmArn();
    public Nullable`1<DateTime> get_AlarmConfigurationUpdatedTimestamp();
    public void set_AlarmConfigurationUpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetAlarmConfigurationUpdatedTimestamp();
    public string get_AlarmDescription();
    public void set_AlarmDescription(string value);
    internal bool IsSetAlarmDescription();
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public string get_AlarmRule();
    public void set_AlarmRule(string value);
    internal bool IsSetAlarmRule();
    public List`1<string> get_InsufficientDataActions();
    public void set_InsufficientDataActions(List`1<string> value);
    internal bool IsSetInsufficientDataActions();
    public List`1<string> get_OKActions();
    public void set_OKActions(List`1<string> value);
    internal bool IsSetOKActions();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public string get_StateReasonData();
    public void set_StateReasonData(string value);
    internal bool IsSetStateReasonData();
    public Nullable`1<DateTime> get_StateTransitionedTimestamp();
    public void set_StateTransitionedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStateTransitionedTimestamp();
    public Nullable`1<DateTime> get_StateUpdatedTimestamp();
    public void set_StateUpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStateUpdatedTimestamp();
    public StateValue get_StateValue();
    public void set_StateValue(StateValue value);
    internal bool IsSetStateValue();
}
public class Amazon.CloudWatch.Model.ConcurrentModificationException : AmazonCloudWatchException {
    public ConcurrentModificationException(string message);
    public ConcurrentModificationException(string message, Exception innerException);
    public ConcurrentModificationException(Exception innerException);
    public ConcurrentModificationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConcurrentModificationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.DashboardEntry : object {
    private string _dashboardArn;
    private string _dashboardName;
    private Nullable`1<DateTime> _lastModified;
    private Nullable`1<long> _size;
    public string DashboardArn { get; public set; }
    public string DashboardName { get; public set; }
    public Nullable`1<DateTime> LastModified { get; public set; }
    public Nullable`1<long> Size { get; public set; }
    public string get_DashboardArn();
    public void set_DashboardArn(string value);
    internal bool IsSetDashboardArn();
    public string get_DashboardName();
    public void set_DashboardName(string value);
    internal bool IsSetDashboardName();
    public Nullable`1<DateTime> get_LastModified();
    public void set_LastModified(Nullable`1<DateTime> value);
    internal bool IsSetLastModified();
    public Nullable`1<long> get_Size();
    public void set_Size(Nullable`1<long> value);
    internal bool IsSetSize();
}
public class Amazon.CloudWatch.Model.DashboardInvalidInputErrorException : AmazonCloudWatchException {
    private List`1<DashboardValidationMessage> _dashboardValidationMessages;
    public List`1<DashboardValidationMessage> DashboardValidationMessages { get; public set; }
    public DashboardInvalidInputErrorException(string message);
    public DashboardInvalidInputErrorException(string message, Exception innerException);
    public DashboardInvalidInputErrorException(Exception innerException);
    public DashboardInvalidInputErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DashboardInvalidInputErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public List`1<DashboardValidationMessage> get_DashboardValidationMessages();
    public void set_DashboardValidationMessages(List`1<DashboardValidationMessage> value);
    internal bool IsSetDashboardValidationMessages();
}
public class Amazon.CloudWatch.Model.DashboardNotFoundErrorException : AmazonCloudWatchException {
    public DashboardNotFoundErrorException(string message);
    public DashboardNotFoundErrorException(string message, Exception innerException);
    public DashboardNotFoundErrorException(Exception innerException);
    public DashboardNotFoundErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DashboardNotFoundErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.DashboardValidationMessage : object {
    private string _dataPath;
    private string _message;
    public string DataPath { get; public set; }
    public string Message { get; public set; }
    public string get_DataPath();
    public void set_DataPath(string value);
    internal bool IsSetDataPath();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.CloudWatch.Model.Datapoint : object {
    private Nullable`1<double> _average;
    private Dictionary`2<string, double> _extendedStatistics;
    private Nullable`1<double> _maximum;
    private Nullable`1<double> _minimum;
    private Nullable`1<double> _sampleCount;
    private Nullable`1<double> _sum;
    private Nullable`1<DateTime> _timestamp;
    private StandardUnit _unit;
    public Nullable`1<double> Average { get; public set; }
    public Dictionary`2<string, double> ExtendedStatistics { get; public set; }
    public Nullable`1<double> Maximum { get; public set; }
    public Nullable`1<double> Minimum { get; public set; }
    public Nullable`1<double> SampleCount { get; public set; }
    public Nullable`1<double> Sum { get; public set; }
    public Nullable`1<DateTime> Timestamp { get; public set; }
    public StandardUnit Unit { get; public set; }
    public Nullable`1<double> get_Average();
    public void set_Average(Nullable`1<double> value);
    internal bool IsSetAverage();
    public Dictionary`2<string, double> get_ExtendedStatistics();
    public void set_ExtendedStatistics(Dictionary`2<string, double> value);
    internal bool IsSetExtendedStatistics();
    public Nullable`1<double> get_Maximum();
    public void set_Maximum(Nullable`1<double> value);
    internal bool IsSetMaximum();
    public Nullable`1<double> get_Minimum();
    public void set_Minimum(Nullable`1<double> value);
    internal bool IsSetMinimum();
    public Nullable`1<double> get_SampleCount();
    public void set_SampleCount(Nullable`1<double> value);
    internal bool IsSetSampleCount();
    public Nullable`1<double> get_Sum();
    public void set_Sum(Nullable`1<double> value);
    internal bool IsSetSum();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatch.Model.DeleteAlarmsRequest : AmazonCloudWatchRequest {
    private List`1<string> _alarmNames;
    [AWSPropertyAttribute]
public List`1<string> AlarmNames { get; public set; }
    public List`1<string> get_AlarmNames();
    public void set_AlarmNames(List`1<string> value);
    internal bool IsSetAlarmNames();
}
public class Amazon.CloudWatch.Model.DeleteAlarmsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.DeleteAnomalyDetectorRequest : AmazonCloudWatchRequest {
    private List`1<Dimension> _dimensions;
    private MetricMathAnomalyDetector _metricMathAnomalyDetector;
    private string _metricName;
    private string _awsNamespace;
    private SingleMetricAnomalyDetector _singleMetricAnomalyDetector;
    private string _stat;
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.")]
[AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    public MetricMathAnomalyDetector MetricMathAnomalyDetector { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.")]
[AWSPropertyAttribute]
public string MetricName { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.")]
[AWSPropertyAttribute]
public string Namespace { get; public set; }
    public SingleMetricAnomalyDetector SingleMetricAnomalyDetector { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.")]
[AWSPropertyAttribute]
public string Stat { get; public set; }
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public MetricMathAnomalyDetector get_MetricMathAnomalyDetector();
    public void set_MetricMathAnomalyDetector(MetricMathAnomalyDetector value);
    internal bool IsSetMetricMathAnomalyDetector();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public SingleMetricAnomalyDetector get_SingleMetricAnomalyDetector();
    public void set_SingleMetricAnomalyDetector(SingleMetricAnomalyDetector value);
    internal bool IsSetSingleMetricAnomalyDetector();
    public string get_Stat();
    public void set_Stat(string value);
    internal bool IsSetStat();
}
public class Amazon.CloudWatch.Model.DeleteAnomalyDetectorResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.DeleteDashboardsRequest : AmazonCloudWatchRequest {
    private List`1<string> _dashboardNames;
    [AWSPropertyAttribute]
public List`1<string> DashboardNames { get; public set; }
    public List`1<string> get_DashboardNames();
    public void set_DashboardNames(List`1<string> value);
    internal bool IsSetDashboardNames();
}
public class Amazon.CloudWatch.Model.DeleteDashboardsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.DeleteInsightRulesRequest : AmazonCloudWatchRequest {
    private List`1<string> _ruleNames;
    [AWSPropertyAttribute]
public List`1<string> RuleNames { get; public set; }
    public List`1<string> get_RuleNames();
    public void set_RuleNames(List`1<string> value);
    internal bool IsSetRuleNames();
}
public class Amazon.CloudWatch.Model.DeleteInsightRulesResponse : AmazonWebServiceResponse {
    private List`1<PartialFailure> _failures;
    public List`1<PartialFailure> Failures { get; public set; }
    public List`1<PartialFailure> get_Failures();
    public void set_Failures(List`1<PartialFailure> value);
    internal bool IsSetFailures();
}
public class Amazon.CloudWatch.Model.DeleteMetricStreamRequest : AmazonCloudWatchRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudWatch.Model.DeleteMetricStreamResponse : AmazonWebServiceResponse {
}
internal class Amazon.CloudWatch.Model.DescribeAlarmHistoryPaginator : object {
    private IAmazonCloudWatch _client;
    private DescribeAlarmHistoryRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAlarmHistoryResponse> Responses { get; }
    public IPaginatedEnumerable`1<AlarmHistoryItem> AlarmHistoryItems { get; }
    internal DescribeAlarmHistoryPaginator(IAmazonCloudWatch client, DescribeAlarmHistoryRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAlarmHistoryResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AlarmHistoryItem> get_AlarmHistoryItems();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudWatch.Model.DescribeAlarmHistoryPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatch-Model-DescribeAlarmHistoryResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeAlarmHistoryResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest : AmazonCloudWatchRequest {
    private string _alarmName;
    private List`1<string> _alarmTypes;
    private Nullable`1<DateTime> _endDateUtc;
    private HistoryItemType _historyItemType;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    private ScanBy _scanBy;
    private Nullable`1<DateTime> _startDateUtc;
    private Nullable`1<DateTime> _endDate;
    private Nullable`1<DateTime> _startDate;
    [AWSPropertyAttribute]
public string AlarmName { get; public set; }
    public List`1<string> AlarmTypes { get; public set; }
    public Nullable`1<DateTime> EndDateUtc { get; public set; }
    public HistoryItemType HistoryItemType { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public ScanBy ScanBy { get; public set; }
    public Nullable`1<DateTime> StartDateUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use EndDateUtc instead. Setting either EndDate or EndDateUtc results in both EndDate and EndDateUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. EndDate is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> EndDate { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use StartDateUtc instead. Setting either StartDate or StartDateUtc results in both StartDate and StartDateUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. StartDate is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> StartDate { get; public set; }
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public List`1<string> get_AlarmTypes();
    public void set_AlarmTypes(List`1<string> value);
    internal bool IsSetAlarmTypes();
    public Nullable`1<DateTime> get_EndDateUtc();
    public void set_EndDateUtc(Nullable`1<DateTime> value);
    internal bool IsSetEndDateUtc();
    public HistoryItemType get_HistoryItemType();
    public void set_HistoryItemType(HistoryItemType value);
    internal bool IsSetHistoryItemType();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ScanBy get_ScanBy();
    public void set_ScanBy(ScanBy value);
    internal bool IsSetScanBy();
    public Nullable`1<DateTime> get_StartDateUtc();
    public void set_StartDateUtc(Nullable`1<DateTime> value);
    internal bool IsSetStartDateUtc();
    public Nullable`1<DateTime> get_EndDate();
    public void set_EndDate(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_StartDate();
    public void set_StartDate(Nullable`1<DateTime> value);
}
public class Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse : AmazonWebServiceResponse {
    private List`1<AlarmHistoryItem> _alarmHistoryItems;
    private string _nextToken;
    public List`1<AlarmHistoryItem> AlarmHistoryItems { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AlarmHistoryItem> get_AlarmHistoryItems();
    public void set_AlarmHistoryItems(List`1<AlarmHistoryItem> value);
    internal bool IsSetAlarmHistoryItems();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest : AmazonCloudWatchRequest {
    private List`1<Dimension> _dimensions;
    private string _extendedStatistic;
    private string _metricName;
    private string _awsNamespace;
    private Nullable`1<int> _period;
    private Statistic _statistic;
    private StandardUnit _unit;
    [AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    public string ExtendedStatistic { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Period { get; public set; }
    public Statistic Statistic { get; public set; }
    public StandardUnit Unit { get; public set; }
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public string get_ExtendedStatistic();
    public void set_ExtendedStatistic(string value);
    internal bool IsSetExtendedStatistic();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public Nullable`1<int> get_Period();
    public void set_Period(Nullable`1<int> value);
    internal bool IsSetPeriod();
    public Statistic get_Statistic();
    public void set_Statistic(Statistic value);
    internal bool IsSetStatistic();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatch.Model.DescribeAlarmsForMetricResponse : AmazonWebServiceResponse {
    private List`1<MetricAlarm> _metricAlarms;
    public List`1<MetricAlarm> MetricAlarms { get; public set; }
    public List`1<MetricAlarm> get_MetricAlarms();
    public void set_MetricAlarms(List`1<MetricAlarm> value);
    internal bool IsSetMetricAlarms();
}
internal class Amazon.CloudWatch.Model.DescribeAlarmsPaginator : object {
    private IAmazonCloudWatch _client;
    private DescribeAlarmsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAlarmsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MetricAlarm> MetricAlarms { get; }
    public IPaginatedEnumerable`1<CompositeAlarm> CompositeAlarms { get; }
    internal DescribeAlarmsPaginator(IAmazonCloudWatch client, DescribeAlarmsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAlarmsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MetricAlarm> get_MetricAlarms();
    public sealed virtual IPaginatedEnumerable`1<CompositeAlarm> get_CompositeAlarms();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudWatch.Model.DescribeAlarmsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatch-Model-DescribeAlarmsResponse>-PaginateAsync>d__10")]
private sealed virtual override IAsyncEnumerable`1<DescribeAlarmsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatch.Model.DescribeAlarmsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.Model.DescribeAlarmsRequest : AmazonCloudWatchRequest {
    private string _actionPrefix;
    private string _alarmNamePrefix;
    private List`1<string> _alarmNames;
    private List`1<string> _alarmTypes;
    private string _childrenOfAlarmName;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    private string _parentsOfAlarmName;
    private StateValue _stateValue;
    [AWSPropertyAttribute]
public string ActionPrefix { get; public set; }
    [AWSPropertyAttribute]
public string AlarmNamePrefix { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AlarmNames { get; public set; }
    public List`1<string> AlarmTypes { get; public set; }
    [AWSPropertyAttribute]
public string ChildrenOfAlarmName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ParentsOfAlarmName { get; public set; }
    public StateValue StateValue { get; public set; }
    public string get_ActionPrefix();
    public void set_ActionPrefix(string value);
    internal bool IsSetActionPrefix();
    public string get_AlarmNamePrefix();
    public void set_AlarmNamePrefix(string value);
    internal bool IsSetAlarmNamePrefix();
    public List`1<string> get_AlarmNames();
    public void set_AlarmNames(List`1<string> value);
    internal bool IsSetAlarmNames();
    public List`1<string> get_AlarmTypes();
    public void set_AlarmTypes(List`1<string> value);
    internal bool IsSetAlarmTypes();
    public string get_ChildrenOfAlarmName();
    public void set_ChildrenOfAlarmName(string value);
    internal bool IsSetChildrenOfAlarmName();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ParentsOfAlarmName();
    public void set_ParentsOfAlarmName(string value);
    internal bool IsSetParentsOfAlarmName();
    public StateValue get_StateValue();
    public void set_StateValue(StateValue value);
    internal bool IsSetStateValue();
}
public class Amazon.CloudWatch.Model.DescribeAlarmsResponse : AmazonWebServiceResponse {
    private List`1<CompositeAlarm> _compositeAlarms;
    private List`1<MetricAlarm> _metricAlarms;
    private string _nextToken;
    public List`1<CompositeAlarm> CompositeAlarms { get; public set; }
    public List`1<MetricAlarm> MetricAlarms { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CompositeAlarm> get_CompositeAlarms();
    public void set_CompositeAlarms(List`1<CompositeAlarm> value);
    internal bool IsSetCompositeAlarms();
    public List`1<MetricAlarm> get_MetricAlarms();
    public void set_MetricAlarms(List`1<MetricAlarm> value);
    internal bool IsSetMetricAlarms();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatch.Model.DescribeAnomalyDetectorsPaginator : object {
    private IAmazonCloudWatch _client;
    private DescribeAnomalyDetectorsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeAnomalyDetectorsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AnomalyDetector> AnomalyDetectors { get; }
    internal DescribeAnomalyDetectorsPaginator(IAmazonCloudWatch client, DescribeAnomalyDetectorsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeAnomalyDetectorsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AnomalyDetector> get_AnomalyDetectors();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudWatch.Model.DescribeAnomalyDetectorsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatch-Model-DescribeAnomalyDetectorsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<DescribeAnomalyDetectorsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatch.Model.DescribeAnomalyDetectorsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.Model.DescribeAnomalyDetectorsRequest : AmazonCloudWatchRequest {
    private List`1<string> _anomalyDetectorTypes;
    private List`1<Dimension> _dimensions;
    private Nullable`1<int> _maxResults;
    private string _metricName;
    private string _awsNamespace;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<string> AnomalyDetectorTypes { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> get_AnomalyDetectorTypes();
    public void set_AnomalyDetectorTypes(List`1<string> value);
    internal bool IsSetAnomalyDetectorTypes();
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.DescribeAnomalyDetectorsResponse : AmazonWebServiceResponse {
    private List`1<AnomalyDetector> _anomalyDetectors;
    private string _nextToken;
    public List`1<AnomalyDetector> AnomalyDetectors { get; public set; }
    public string NextToken { get; public set; }
    public List`1<AnomalyDetector> get_AnomalyDetectors();
    public void set_AnomalyDetectors(List`1<AnomalyDetector> value);
    internal bool IsSetAnomalyDetectors();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatch.Model.DescribeInsightRulesPaginator : object {
    private IAmazonCloudWatch _client;
    private DescribeInsightRulesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInsightRulesResponse> Responses { get; }
    internal DescribeInsightRulesPaginator(IAmazonCloudWatch client, DescribeInsightRulesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInsightRulesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudWatch.Model.DescribeInsightRulesPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatch-Model-DescribeInsightRulesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeInsightRulesResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatch.Model.DescribeInsightRulesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.Model.DescribeInsightRulesRequest : AmazonCloudWatchRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.DescribeInsightRulesResponse : AmazonWebServiceResponse {
    private List`1<InsightRule> _insightRules;
    private string _nextToken;
    public List`1<InsightRule> InsightRules { get; public set; }
    public string NextToken { get; public set; }
    public List`1<InsightRule> get_InsightRules();
    public void set_InsightRules(List`1<InsightRule> value);
    internal bool IsSetInsightRules();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.Dimension : object {
    private string _name;
    private string _value;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudWatch.Model.DimensionFilter : object {
    private string _name;
    private string _value;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudWatch.Model.DisableAlarmActionsRequest : AmazonCloudWatchRequest {
    private List`1<string> _alarmNames;
    [AWSPropertyAttribute]
public List`1<string> AlarmNames { get; public set; }
    public List`1<string> get_AlarmNames();
    public void set_AlarmNames(List`1<string> value);
    internal bool IsSetAlarmNames();
}
public class Amazon.CloudWatch.Model.DisableAlarmActionsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.DisableInsightRulesRequest : AmazonCloudWatchRequest {
    private List`1<string> _ruleNames;
    [AWSPropertyAttribute]
public List`1<string> RuleNames { get; public set; }
    public List`1<string> get_RuleNames();
    public void set_RuleNames(List`1<string> value);
    internal bool IsSetRuleNames();
}
public class Amazon.CloudWatch.Model.DisableInsightRulesResponse : AmazonWebServiceResponse {
    private List`1<PartialFailure> _failures;
    public List`1<PartialFailure> Failures { get; public set; }
    public List`1<PartialFailure> get_Failures();
    public void set_Failures(List`1<PartialFailure> value);
    internal bool IsSetFailures();
}
public class Amazon.CloudWatch.Model.EnableAlarmActionsRequest : AmazonCloudWatchRequest {
    private List`1<string> _alarmNames;
    [AWSPropertyAttribute]
public List`1<string> AlarmNames { get; public set; }
    public List`1<string> get_AlarmNames();
    public void set_AlarmNames(List`1<string> value);
    internal bool IsSetAlarmNames();
}
public class Amazon.CloudWatch.Model.EnableAlarmActionsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.EnableInsightRulesRequest : AmazonCloudWatchRequest {
    private List`1<string> _ruleNames;
    [AWSPropertyAttribute]
public List`1<string> RuleNames { get; public set; }
    public List`1<string> get_RuleNames();
    public void set_RuleNames(List`1<string> value);
    internal bool IsSetRuleNames();
}
public class Amazon.CloudWatch.Model.EnableInsightRulesResponse : AmazonWebServiceResponse {
    private List`1<PartialFailure> _failures;
    public List`1<PartialFailure> Failures { get; public set; }
    public List`1<PartialFailure> get_Failures();
    public void set_Failures(List`1<PartialFailure> value);
    internal bool IsSetFailures();
}
public class Amazon.CloudWatch.Model.GetDashboardRequest : AmazonCloudWatchRequest {
    private string _dashboardName;
    [AWSPropertyAttribute]
public string DashboardName { get; public set; }
    public string get_DashboardName();
    public void set_DashboardName(string value);
    internal bool IsSetDashboardName();
}
public class Amazon.CloudWatch.Model.GetDashboardResponse : AmazonWebServiceResponse {
    private string _dashboardArn;
    private string _dashboardBody;
    private string _dashboardName;
    public string DashboardArn { get; public set; }
    public string DashboardBody { get; public set; }
    public string DashboardName { get; public set; }
    public string get_DashboardArn();
    public void set_DashboardArn(string value);
    internal bool IsSetDashboardArn();
    public string get_DashboardBody();
    public void set_DashboardBody(string value);
    internal bool IsSetDashboardBody();
    public string get_DashboardName();
    public void set_DashboardName(string value);
    internal bool IsSetDashboardName();
}
public class Amazon.CloudWatch.Model.GetInsightRuleReportRequest : AmazonCloudWatchRequest {
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<int> _maxContributorCount;
    private List`1<string> _metrics;
    private string _orderBy;
    private Nullable`1<int> _period;
    private string _ruleName;
    private Nullable`1<DateTime> _startTime;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    public Nullable`1<int> MaxContributorCount { get; public set; }
    public List`1<string> Metrics { get; public set; }
    [AWSPropertyAttribute]
public string OrderBy { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Period { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public Nullable`1<int> get_MaxContributorCount();
    public void set_MaxContributorCount(Nullable`1<int> value);
    internal bool IsSetMaxContributorCount();
    public List`1<string> get_Metrics();
    public void set_Metrics(List`1<string> value);
    internal bool IsSetMetrics();
    public string get_OrderBy();
    public void set_OrderBy(string value);
    internal bool IsSetOrderBy();
    public Nullable`1<int> get_Period();
    public void set_Period(Nullable`1<int> value);
    internal bool IsSetPeriod();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.CloudWatch.Model.GetInsightRuleReportResponse : AmazonWebServiceResponse {
    private Nullable`1<double> _aggregateValue;
    private string _aggregationStatistic;
    private Nullable`1<long> _approximateUniqueCount;
    private List`1<InsightRuleContributor> _contributors;
    private List`1<string> _keyLabels;
    private List`1<InsightRuleMetricDatapoint> _metricDatapoints;
    public Nullable`1<double> AggregateValue { get; public set; }
    public string AggregationStatistic { get; public set; }
    public Nullable`1<long> ApproximateUniqueCount { get; public set; }
    public List`1<InsightRuleContributor> Contributors { get; public set; }
    public List`1<string> KeyLabels { get; public set; }
    public List`1<InsightRuleMetricDatapoint> MetricDatapoints { get; public set; }
    public Nullable`1<double> get_AggregateValue();
    public void set_AggregateValue(Nullable`1<double> value);
    internal bool IsSetAggregateValue();
    public string get_AggregationStatistic();
    public void set_AggregationStatistic(string value);
    internal bool IsSetAggregationStatistic();
    public Nullable`1<long> get_ApproximateUniqueCount();
    public void set_ApproximateUniqueCount(Nullable`1<long> value);
    internal bool IsSetApproximateUniqueCount();
    public List`1<InsightRuleContributor> get_Contributors();
    public void set_Contributors(List`1<InsightRuleContributor> value);
    internal bool IsSetContributors();
    public List`1<string> get_KeyLabels();
    public void set_KeyLabels(List`1<string> value);
    internal bool IsSetKeyLabels();
    public List`1<InsightRuleMetricDatapoint> get_MetricDatapoints();
    public void set_MetricDatapoints(List`1<InsightRuleMetricDatapoint> value);
    internal bool IsSetMetricDatapoints();
}
internal class Amazon.CloudWatch.Model.GetMetricDataPaginator : object {
    private IAmazonCloudWatch _client;
    private GetMetricDataRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetMetricDataResponse> Responses { get; }
    public IPaginatedEnumerable`1<MetricDataResult> MetricDataResults { get; }
    public IPaginatedEnumerable`1<MessageData> Messages { get; }
    internal GetMetricDataPaginator(IAmazonCloudWatch client, GetMetricDataRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetMetricDataResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MetricDataResult> get_MetricDataResults();
    public sealed virtual IPaginatedEnumerable`1<MessageData> get_Messages();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudWatch.Model.GetMetricDataPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatch-Model-GetMetricDataResponse>-PaginateAsync>d__10")]
private sealed virtual override IAsyncEnumerable`1<GetMetricDataResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatch.Model.GetMetricDataResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.Model.GetMetricDataRequest : AmazonCloudWatchRequest {
    private Nullable`1<DateTime> _endTimeUtc;
    private LabelOptions _labelOptions;
    private Nullable`1<int> _maxDatapoints;
    private List`1<MetricDataQuery> _metricDataQueries;
    private string _nextToken;
    private ScanBy _scanBy;
    private Nullable`1<DateTime> _startTimeUtc;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTimeUtc { get; public set; }
    public LabelOptions LabelOptions { get; public set; }
    public Nullable`1<int> MaxDatapoints { get; public set; }
    [AWSPropertyAttribute]
public List`1<MetricDataQuery> MetricDataQueries { get; public set; }
    public string NextToken { get; public set; }
    public ScanBy ScanBy { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTimeUtc { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc results in both EndTime and EndTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. EndTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> EndTime { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. StartTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_EndTimeUtc();
    public void set_EndTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetEndTimeUtc();
    public LabelOptions get_LabelOptions();
    public void set_LabelOptions(LabelOptions value);
    internal bool IsSetLabelOptions();
    public Nullable`1<int> get_MaxDatapoints();
    public void set_MaxDatapoints(Nullable`1<int> value);
    internal bool IsSetMaxDatapoints();
    public List`1<MetricDataQuery> get_MetricDataQueries();
    public void set_MetricDataQueries(List`1<MetricDataQuery> value);
    internal bool IsSetMetricDataQueries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ScanBy get_ScanBy();
    public void set_ScanBy(ScanBy value);
    internal bool IsSetScanBy();
    public Nullable`1<DateTime> get_StartTimeUtc();
    public void set_StartTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetStartTimeUtc();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
}
public class Amazon.CloudWatch.Model.GetMetricDataResponse : AmazonWebServiceResponse {
    private List`1<MessageData> _messages;
    private List`1<MetricDataResult> _metricDataResults;
    private string _nextToken;
    public List`1<MessageData> Messages { get; public set; }
    public List`1<MetricDataResult> MetricDataResults { get; public set; }
    public string NextToken { get; public set; }
    public List`1<MessageData> get_Messages();
    public void set_Messages(List`1<MessageData> value);
    internal bool IsSetMessages();
    public List`1<MetricDataResult> get_MetricDataResults();
    public void set_MetricDataResults(List`1<MetricDataResult> value);
    internal bool IsSetMetricDataResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.GetMetricStatisticsRequest : AmazonCloudWatchRequest {
    private List`1<Dimension> _dimensions;
    private Nullable`1<DateTime> _endTimeUtc;
    private List`1<string> _extendedStatistics;
    private string _metricName;
    private string _awsNamespace;
    private Nullable`1<int> _period;
    private Nullable`1<DateTime> _startTimeUtc;
    private List`1<string> _statistics;
    private StandardUnit _unit;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    [AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTimeUtc { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> ExtendedStatistics { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Period { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTimeUtc { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Statistics { get; public set; }
    public StandardUnit Unit { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc results in both EndTime and EndTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. EndTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> EndTime { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. StartTime is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> StartTime { get; public set; }
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public Nullable`1<DateTime> get_EndTimeUtc();
    public void set_EndTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetEndTimeUtc();
    public List`1<string> get_ExtendedStatistics();
    public void set_ExtendedStatistics(List`1<string> value);
    internal bool IsSetExtendedStatistics();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public Nullable`1<int> get_Period();
    public void set_Period(Nullable`1<int> value);
    internal bool IsSetPeriod();
    public Nullable`1<DateTime> get_StartTimeUtc();
    public void set_StartTimeUtc(Nullable`1<DateTime> value);
    internal bool IsSetStartTimeUtc();
    public List`1<string> get_Statistics();
    public void set_Statistics(List`1<string> value);
    internal bool IsSetStatistics();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
}
public class Amazon.CloudWatch.Model.GetMetricStatisticsResponse : AmazonWebServiceResponse {
    private List`1<Datapoint> _datapoints;
    private string _label;
    public List`1<Datapoint> Datapoints { get; public set; }
    public string Label { get; public set; }
    public List`1<Datapoint> get_Datapoints();
    public void set_Datapoints(List`1<Datapoint> value);
    internal bool IsSetDatapoints();
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
}
public class Amazon.CloudWatch.Model.GetMetricStreamRequest : AmazonCloudWatchRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudWatch.Model.GetMetricStreamResponse : AmazonWebServiceResponse {
    private string _arn;
    private Nullable`1<DateTime> _creationDate;
    private List`1<MetricStreamFilter> _excludeFilters;
    private string _firehoseArn;
    private List`1<MetricStreamFilter> _includeFilters;
    private Nullable`1<bool> _includeLinkedAccountsMetrics;
    private Nullable`1<DateTime> _lastUpdateDate;
    private string _name;
    private MetricStreamOutputFormat _outputFormat;
    private string _roleArn;
    private string _state;
    private List`1<MetricStreamStatisticsConfiguration> _statisticsConfigurations;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    public List`1<MetricStreamFilter> ExcludeFilters { get; public set; }
    [AWSPropertyAttribute]
public string FirehoseArn { get; public set; }
    public List`1<MetricStreamFilter> IncludeFilters { get; public set; }
    public Nullable`1<bool> IncludeLinkedAccountsMetrics { get; public set; }
    public Nullable`1<DateTime> LastUpdateDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public MetricStreamOutputFormat OutputFormat { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public string State { get; public set; }
    public List`1<MetricStreamStatisticsConfiguration> StatisticsConfigurations { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public List`1<MetricStreamFilter> get_ExcludeFilters();
    public void set_ExcludeFilters(List`1<MetricStreamFilter> value);
    internal bool IsSetExcludeFilters();
    public string get_FirehoseArn();
    public void set_FirehoseArn(string value);
    internal bool IsSetFirehoseArn();
    public List`1<MetricStreamFilter> get_IncludeFilters();
    public void set_IncludeFilters(List`1<MetricStreamFilter> value);
    internal bool IsSetIncludeFilters();
    public Nullable`1<bool> get_IncludeLinkedAccountsMetrics();
    public void set_IncludeLinkedAccountsMetrics(Nullable`1<bool> value);
    internal bool IsSetIncludeLinkedAccountsMetrics();
    public Nullable`1<DateTime> get_LastUpdateDate();
    public void set_LastUpdateDate(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdateDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public MetricStreamOutputFormat get_OutputFormat();
    public void set_OutputFormat(MetricStreamOutputFormat value);
    internal bool IsSetOutputFormat();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
    public List`1<MetricStreamStatisticsConfiguration> get_StatisticsConfigurations();
    public void set_StatisticsConfigurations(List`1<MetricStreamStatisticsConfiguration> value);
    internal bool IsSetStatisticsConfigurations();
}
public class Amazon.CloudWatch.Model.GetMetricWidgetImageRequest : AmazonCloudWatchRequest {
    private string _metricWidget;
    private string _outputFormat;
    [AWSPropertyAttribute]
public string MetricWidget { get; public set; }
    public string OutputFormat { get; public set; }
    public string get_MetricWidget();
    public void set_MetricWidget(string value);
    internal bool IsSetMetricWidget();
    public string get_OutputFormat();
    public void set_OutputFormat(string value);
    internal bool IsSetOutputFormat();
}
public class Amazon.CloudWatch.Model.GetMetricWidgetImageResponse : AmazonWebServiceResponse {
    private MemoryStream _metricWidgetImage;
    public MemoryStream MetricWidgetImage { get; public set; }
    public MemoryStream get_MetricWidgetImage();
    public void set_MetricWidgetImage(MemoryStream value);
    internal bool IsSetMetricWidgetImage();
}
public interface Amazon.CloudWatch.Model.ICloudWatchPaginatorFactory {
    public abstract virtual IDescribeAlarmHistoryPaginator DescribeAlarmHistory(DescribeAlarmHistoryRequest request);
    public abstract virtual IDescribeAlarmsPaginator DescribeAlarms(DescribeAlarmsRequest request);
    public abstract virtual IDescribeAnomalyDetectorsPaginator DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request);
    public abstract virtual IDescribeInsightRulesPaginator DescribeInsightRules(DescribeInsightRulesRequest request);
    public abstract virtual IGetMetricDataPaginator GetMetricData(GetMetricDataRequest request);
    public abstract virtual IListDashboardsPaginator ListDashboards(ListDashboardsRequest request);
    public abstract virtual IListManagedInsightRulesPaginator ListManagedInsightRules(ListManagedInsightRulesRequest request);
    public abstract virtual IListMetricsPaginator ListMetrics(ListMetricsRequest request);
    public abstract virtual IListMetricStreamsPaginator ListMetricStreams(ListMetricStreamsRequest request);
}
public interface Amazon.CloudWatch.Model.IDescribeAlarmHistoryPaginator {
    public IPaginatedEnumerable`1<DescribeAlarmHistoryResponse> Responses { get; }
    public IPaginatedEnumerable`1<AlarmHistoryItem> AlarmHistoryItems { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAlarmHistoryResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AlarmHistoryItem> get_AlarmHistoryItems();
}
public interface Amazon.CloudWatch.Model.IDescribeAlarmsPaginator {
    public IPaginatedEnumerable`1<DescribeAlarmsResponse> Responses { get; }
    public IPaginatedEnumerable`1<MetricAlarm> MetricAlarms { get; }
    public IPaginatedEnumerable`1<CompositeAlarm> CompositeAlarms { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAlarmsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MetricAlarm> get_MetricAlarms();
    public abstract virtual IPaginatedEnumerable`1<CompositeAlarm> get_CompositeAlarms();
}
public interface Amazon.CloudWatch.Model.IDescribeAnomalyDetectorsPaginator {
    public IPaginatedEnumerable`1<DescribeAnomalyDetectorsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AnomalyDetector> AnomalyDetectors { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeAnomalyDetectorsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AnomalyDetector> get_AnomalyDetectors();
}
public interface Amazon.CloudWatch.Model.IDescribeInsightRulesPaginator {
    public IPaginatedEnumerable`1<DescribeInsightRulesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInsightRulesResponse> get_Responses();
}
public interface Amazon.CloudWatch.Model.IGetMetricDataPaginator {
    public IPaginatedEnumerable`1<GetMetricDataResponse> Responses { get; }
    public IPaginatedEnumerable`1<MetricDataResult> MetricDataResults { get; }
    public IPaginatedEnumerable`1<MessageData> Messages { get; }
    public abstract virtual IPaginatedEnumerable`1<GetMetricDataResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MetricDataResult> get_MetricDataResults();
    public abstract virtual IPaginatedEnumerable`1<MessageData> get_Messages();
}
public interface Amazon.CloudWatch.Model.IListDashboardsPaginator {
    public IPaginatedEnumerable`1<ListDashboardsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DashboardEntry> DashboardEntries { get; }
    public abstract virtual IPaginatedEnumerable`1<ListDashboardsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DashboardEntry> get_DashboardEntries();
}
public interface Amazon.CloudWatch.Model.IListManagedInsightRulesPaginator {
    public IPaginatedEnumerable`1<ListManagedInsightRulesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListManagedInsightRulesResponse> get_Responses();
}
public interface Amazon.CloudWatch.Model.IListMetricsPaginator {
    public IPaginatedEnumerable`1<ListMetricsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Metric> Metrics { get; }
    public IPaginatedEnumerable`1<string> OwningAccounts { get; }
    public abstract virtual IPaginatedEnumerable`1<ListMetricsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Metric> get_Metrics();
    public abstract virtual IPaginatedEnumerable`1<string> get_OwningAccounts();
}
public interface Amazon.CloudWatch.Model.IListMetricStreamsPaginator {
    public IPaginatedEnumerable`1<ListMetricStreamsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ListMetricStreamsResponse> get_Responses();
}
public class Amazon.CloudWatch.Model.InsightRule : object {
    private string _definition;
    private Nullable`1<bool> _managedRule;
    private string _name;
    private string _schema;
    private string _state;
    [AWSPropertyAttribute]
public string Definition { get; public set; }
    public Nullable`1<bool> ManagedRule { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Schema { get; public set; }
    [AWSPropertyAttribute]
public string State { get; public set; }
    public string get_Definition();
    public void set_Definition(string value);
    internal bool IsSetDefinition();
    public Nullable`1<bool> get_ManagedRule();
    public void set_ManagedRule(Nullable`1<bool> value);
    internal bool IsSetManagedRule();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Schema();
    public void set_Schema(string value);
    internal bool IsSetSchema();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
}
public class Amazon.CloudWatch.Model.InsightRuleContributor : object {
    private Nullable`1<double> _approximateAggregateValue;
    private List`1<InsightRuleContributorDatapoint> _datapoints;
    private List`1<string> _keys;
    [AWSPropertyAttribute]
public Nullable`1<double> ApproximateAggregateValue { get; public set; }
    [AWSPropertyAttribute]
public List`1<InsightRuleContributorDatapoint> Datapoints { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Keys { get; public set; }
    public Nullable`1<double> get_ApproximateAggregateValue();
    public void set_ApproximateAggregateValue(Nullable`1<double> value);
    internal bool IsSetApproximateAggregateValue();
    public List`1<InsightRuleContributorDatapoint> get_Datapoints();
    public void set_Datapoints(List`1<InsightRuleContributorDatapoint> value);
    internal bool IsSetDatapoints();
    public List`1<string> get_Keys();
    public void set_Keys(List`1<string> value);
    internal bool IsSetKeys();
}
public class Amazon.CloudWatch.Model.InsightRuleContributorDatapoint : object {
    private Nullable`1<double> _approximateValue;
    private Nullable`1<DateTime> _timestamp;
    [AWSPropertyAttribute]
public Nullable`1<double> ApproximateValue { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> Timestamp { get; public set; }
    public Nullable`1<double> get_ApproximateValue();
    public void set_ApproximateValue(Nullable`1<double> value);
    internal bool IsSetApproximateValue();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.CloudWatch.Model.InsightRuleMetricDatapoint : object {
    private Nullable`1<double> _average;
    private Nullable`1<double> _maxContributorValue;
    private Nullable`1<double> _maximum;
    private Nullable`1<double> _minimum;
    private Nullable`1<double> _sampleCount;
    private Nullable`1<double> _sum;
    private Nullable`1<DateTime> _timestamp;
    private Nullable`1<double> _uniqueContributors;
    public Nullable`1<double> Average { get; public set; }
    public Nullable`1<double> MaxContributorValue { get; public set; }
    public Nullable`1<double> Maximum { get; public set; }
    public Nullable`1<double> Minimum { get; public set; }
    public Nullable`1<double> SampleCount { get; public set; }
    public Nullable`1<double> Sum { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> Timestamp { get; public set; }
    public Nullable`1<double> UniqueContributors { get; public set; }
    public Nullable`1<double> get_Average();
    public void set_Average(Nullable`1<double> value);
    internal bool IsSetAverage();
    public Nullable`1<double> get_MaxContributorValue();
    public void set_MaxContributorValue(Nullable`1<double> value);
    internal bool IsSetMaxContributorValue();
    public Nullable`1<double> get_Maximum();
    public void set_Maximum(Nullable`1<double> value);
    internal bool IsSetMaximum();
    public Nullable`1<double> get_Minimum();
    public void set_Minimum(Nullable`1<double> value);
    internal bool IsSetMinimum();
    public Nullable`1<double> get_SampleCount();
    public void set_SampleCount(Nullable`1<double> value);
    internal bool IsSetSampleCount();
    public Nullable`1<double> get_Sum();
    public void set_Sum(Nullable`1<double> value);
    internal bool IsSetSum();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
    public Nullable`1<double> get_UniqueContributors();
    public void set_UniqueContributors(Nullable`1<double> value);
    internal bool IsSetUniqueContributors();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller : object {
    private static AlarmHistoryItemUnmarshaller _instance;
    public static AlarmHistoryItemUnmarshaller Instance { get; }
    private static AlarmHistoryItemUnmarshaller();
    public sealed virtual AlarmHistoryItem Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AlarmHistoryItem Unmarshall(JsonUnmarshallerContext context);
    public static AlarmHistoryItemUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.AnomalyDetectorConfigurationUnmarshaller : object {
    private static AnomalyDetectorConfigurationUnmarshaller _instance;
    public static AnomalyDetectorConfigurationUnmarshaller Instance { get; }
    private static AnomalyDetectorConfigurationUnmarshaller();
    public sealed virtual AnomalyDetectorConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnomalyDetectorConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static AnomalyDetectorConfigurationUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.AnomalyDetectorUnmarshaller : object {
    private static AnomalyDetectorUnmarshaller _instance;
    public static AnomalyDetectorUnmarshaller Instance { get; }
    private static AnomalyDetectorUnmarshaller();
    public sealed virtual AnomalyDetector Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnomalyDetector Unmarshall(JsonUnmarshallerContext context);
    public static AnomalyDetectorUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.CompositeAlarmUnmarshaller : object {
    private static CompositeAlarmUnmarshaller _instance;
    public static CompositeAlarmUnmarshaller Instance { get; }
    private static CompositeAlarmUnmarshaller();
    public sealed virtual CompositeAlarm Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CompositeAlarm Unmarshall(JsonUnmarshallerContext context);
    public static CompositeAlarmUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller : object {
    private static ConcurrentModificationExceptionUnmarshaller _instance;
    public static ConcurrentModificationExceptionUnmarshaller Instance { get; }
    private static ConcurrentModificationExceptionUnmarshaller();
    public sealed virtual ConcurrentModificationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConcurrentModificationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConcurrentModificationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardEntryUnmarshaller : object {
    private static DashboardEntryUnmarshaller _instance;
    public static DashboardEntryUnmarshaller Instance { get; }
    private static DashboardEntryUnmarshaller();
    public sealed virtual DashboardEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DashboardEntry Unmarshall(JsonUnmarshallerContext context);
    public static DashboardEntryUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardInvalidInputErrorExceptionUnmarshaller : object {
    private static DashboardInvalidInputErrorExceptionUnmarshaller _instance;
    public static DashboardInvalidInputErrorExceptionUnmarshaller Instance { get; }
    private static DashboardInvalidInputErrorExceptionUnmarshaller();
    public sealed virtual DashboardInvalidInputErrorException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DashboardInvalidInputErrorException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DashboardInvalidInputErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardNotFoundErrorExceptionUnmarshaller : object {
    private static DashboardNotFoundErrorExceptionUnmarshaller _instance;
    public static DashboardNotFoundErrorExceptionUnmarshaller Instance { get; }
    private static DashboardNotFoundErrorExceptionUnmarshaller();
    public sealed virtual DashboardNotFoundErrorException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DashboardNotFoundErrorException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static DashboardNotFoundErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DashboardValidationMessageUnmarshaller : object {
    private static DashboardValidationMessageUnmarshaller _instance;
    public static DashboardValidationMessageUnmarshaller Instance { get; }
    private static DashboardValidationMessageUnmarshaller();
    public sealed virtual DashboardValidationMessage Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DashboardValidationMessage Unmarshall(JsonUnmarshallerContext context);
    public static DashboardValidationMessageUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller : object {
    private static DatapointUnmarshaller _instance;
    public static DatapointUnmarshaller Instance { get; }
    private static DatapointUnmarshaller();
    public sealed virtual Datapoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Datapoint Unmarshall(JsonUnmarshallerContext context);
    public static DatapointUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller : object {
    private static DeleteAlarmsRequestMarshaller _instance;
    public static DeleteAlarmsRequestMarshaller Instance { get; }
    private static DeleteAlarmsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAlarmsRequest publicRequest);
    internal static DeleteAlarmsRequestMarshaller GetInstance();
    public static DeleteAlarmsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAlarmsResponseUnmarshaller _instance;
    public static DeleteAlarmsResponseUnmarshaller Instance { get; }
    private static DeleteAlarmsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteAlarmsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAlarmsResponseUnmarshaller GetInstance();
    public static DeleteAlarmsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAnomalyDetectorRequestMarshaller : object {
    private static DeleteAnomalyDetectorRequestMarshaller _instance;
    public static DeleteAnomalyDetectorRequestMarshaller Instance { get; }
    private static DeleteAnomalyDetectorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAnomalyDetectorRequest publicRequest);
    internal static DeleteAnomalyDetectorRequestMarshaller GetInstance();
    public static DeleteAnomalyDetectorRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAnomalyDetectorResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteAnomalyDetectorResponseUnmarshaller _instance;
    public static DeleteAnomalyDetectorResponseUnmarshaller Instance { get; }
    private static DeleteAnomalyDetectorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteAnomalyDetectorResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAnomalyDetectorResponseUnmarshaller GetInstance();
    public static DeleteAnomalyDetectorResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteDashboardsRequestMarshaller : object {
    private static DeleteDashboardsRequestMarshaller _instance;
    public static DeleteDashboardsRequestMarshaller Instance { get; }
    private static DeleteDashboardsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDashboardsRequest publicRequest);
    internal static DeleteDashboardsRequestMarshaller GetInstance();
    public static DeleteDashboardsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteDashboardsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteDashboardsResponseUnmarshaller _instance;
    public static DeleteDashboardsResponseUnmarshaller Instance { get; }
    private static DeleteDashboardsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteDashboardsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDashboardsResponseUnmarshaller GetInstance();
    public static DeleteDashboardsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteInsightRulesRequestMarshaller : object {
    private static DeleteInsightRulesRequestMarshaller _instance;
    public static DeleteInsightRulesRequestMarshaller Instance { get; }
    private static DeleteInsightRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteInsightRulesRequest publicRequest);
    internal static DeleteInsightRulesRequestMarshaller GetInstance();
    public static DeleteInsightRulesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteInsightRulesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteInsightRulesResponseUnmarshaller _instance;
    public static DeleteInsightRulesResponseUnmarshaller Instance { get; }
    private static DeleteInsightRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteInsightRulesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteInsightRulesResponseUnmarshaller GetInstance();
    public static DeleteInsightRulesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteMetricStreamRequestMarshaller : object {
    private static DeleteMetricStreamRequestMarshaller _instance;
    public static DeleteMetricStreamRequestMarshaller Instance { get; }
    private static DeleteMetricStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMetricStreamRequest publicRequest);
    internal static DeleteMetricStreamRequestMarshaller GetInstance();
    public static DeleteMetricStreamRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteMetricStreamResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DeleteMetricStreamResponseUnmarshaller _instance;
    public static DeleteMetricStreamResponseUnmarshaller Instance { get; }
    private static DeleteMetricStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DeleteMetricStreamResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMetricStreamResponseUnmarshaller GetInstance();
    public static DeleteMetricStreamResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller : object {
    private static DescribeAlarmHistoryRequestMarshaller _instance;
    public static DescribeAlarmHistoryRequestMarshaller Instance { get; }
    private static DescribeAlarmHistoryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAlarmHistoryRequest publicRequest);
    internal static DescribeAlarmHistoryRequestMarshaller GetInstance();
    public static DescribeAlarmHistoryRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAlarmHistoryResponseUnmarshaller _instance;
    public static DescribeAlarmHistoryResponseUnmarshaller Instance { get; }
    private static DescribeAlarmHistoryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAlarmHistoryResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAlarmHistoryResponseUnmarshaller GetInstance();
    public static DescribeAlarmHistoryResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller : object {
    private static DescribeAlarmsForMetricRequestMarshaller _instance;
    public static DescribeAlarmsForMetricRequestMarshaller Instance { get; }
    private static DescribeAlarmsForMetricRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAlarmsForMetricRequest publicRequest);
    internal static DescribeAlarmsForMetricRequestMarshaller GetInstance();
    public static DescribeAlarmsForMetricRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAlarmsForMetricResponseUnmarshaller _instance;
    public static DescribeAlarmsForMetricResponseUnmarshaller Instance { get; }
    private static DescribeAlarmsForMetricResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAlarmsForMetricResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAlarmsForMetricResponseUnmarshaller GetInstance();
    public static DescribeAlarmsForMetricResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller : object {
    private static DescribeAlarmsRequestMarshaller _instance;
    public static DescribeAlarmsRequestMarshaller Instance { get; }
    private static DescribeAlarmsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAlarmsRequest publicRequest);
    internal static DescribeAlarmsRequestMarshaller GetInstance();
    public static DescribeAlarmsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAlarmsResponseUnmarshaller _instance;
    public static DescribeAlarmsResponseUnmarshaller Instance { get; }
    private static DescribeAlarmsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAlarmsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAlarmsResponseUnmarshaller GetInstance();
    public static DescribeAlarmsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAnomalyDetectorsRequestMarshaller : object {
    private static DescribeAnomalyDetectorsRequestMarshaller _instance;
    public static DescribeAnomalyDetectorsRequestMarshaller Instance { get; }
    private static DescribeAnomalyDetectorsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAnomalyDetectorsRequest publicRequest);
    internal static DescribeAnomalyDetectorsRequestMarshaller GetInstance();
    public static DescribeAnomalyDetectorsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAnomalyDetectorsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeAnomalyDetectorsResponseUnmarshaller _instance;
    public static DescribeAnomalyDetectorsResponseUnmarshaller Instance { get; }
    private static DescribeAnomalyDetectorsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeAnomalyDetectorsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAnomalyDetectorsResponseUnmarshaller GetInstance();
    public static DescribeAnomalyDetectorsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeInsightRulesRequestMarshaller : object {
    private static DescribeInsightRulesRequestMarshaller _instance;
    public static DescribeInsightRulesRequestMarshaller Instance { get; }
    private static DescribeInsightRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInsightRulesRequest publicRequest);
    internal static DescribeInsightRulesRequestMarshaller GetInstance();
    public static DescribeInsightRulesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeInsightRulesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DescribeInsightRulesResponseUnmarshaller _instance;
    public static DescribeInsightRulesResponseUnmarshaller Instance { get; }
    private static DescribeInsightRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DescribeInsightRulesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInsightRulesResponseUnmarshaller GetInstance();
    public static DescribeInsightRulesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller : object {
    private static DimensionUnmarshaller _instance;
    public static DimensionUnmarshaller Instance { get; }
    private static DimensionUnmarshaller();
    public sealed virtual Dimension Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Dimension Unmarshall(JsonUnmarshallerContext context);
    public static DimensionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller : object {
    private static DisableAlarmActionsRequestMarshaller _instance;
    public static DisableAlarmActionsRequestMarshaller Instance { get; }
    private static DisableAlarmActionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableAlarmActionsRequest publicRequest);
    internal static DisableAlarmActionsRequestMarshaller GetInstance();
    public static DisableAlarmActionsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DisableAlarmActionsResponseUnmarshaller _instance;
    public static DisableAlarmActionsResponseUnmarshaller Instance { get; }
    private static DisableAlarmActionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DisableAlarmActionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableAlarmActionsResponseUnmarshaller GetInstance();
    public static DisableAlarmActionsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableInsightRulesRequestMarshaller : object {
    private static DisableInsightRulesRequestMarshaller _instance;
    public static DisableInsightRulesRequestMarshaller Instance { get; }
    private static DisableInsightRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableInsightRulesRequest publicRequest);
    internal static DisableInsightRulesRequestMarshaller GetInstance();
    public static DisableInsightRulesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableInsightRulesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static DisableInsightRulesResponseUnmarshaller _instance;
    public static DisableInsightRulesResponseUnmarshaller Instance { get; }
    private static DisableInsightRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, DisableInsightRulesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableInsightRulesResponseUnmarshaller GetInstance();
    public static DisableInsightRulesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller : object {
    private static EnableAlarmActionsRequestMarshaller _instance;
    public static EnableAlarmActionsRequestMarshaller Instance { get; }
    private static EnableAlarmActionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableAlarmActionsRequest publicRequest);
    internal static EnableAlarmActionsRequestMarshaller GetInstance();
    public static EnableAlarmActionsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static EnableAlarmActionsResponseUnmarshaller _instance;
    public static EnableAlarmActionsResponseUnmarshaller Instance { get; }
    private static EnableAlarmActionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, EnableAlarmActionsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableAlarmActionsResponseUnmarshaller GetInstance();
    public static EnableAlarmActionsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableInsightRulesRequestMarshaller : object {
    private static EnableInsightRulesRequestMarshaller _instance;
    public static EnableInsightRulesRequestMarshaller Instance { get; }
    private static EnableInsightRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableInsightRulesRequest publicRequest);
    internal static EnableInsightRulesRequestMarshaller GetInstance();
    public static EnableInsightRulesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableInsightRulesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static EnableInsightRulesResponseUnmarshaller _instance;
    public static EnableInsightRulesResponseUnmarshaller Instance { get; }
    private static EnableInsightRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, EnableInsightRulesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableInsightRulesResponseUnmarshaller GetInstance();
    public static EnableInsightRulesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetDashboardRequestMarshaller : object {
    private static GetDashboardRequestMarshaller _instance;
    public static GetDashboardRequestMarshaller Instance { get; }
    private static GetDashboardRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDashboardRequest publicRequest);
    internal static GetDashboardRequestMarshaller GetInstance();
    public static GetDashboardRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetDashboardResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetDashboardResponseUnmarshaller _instance;
    public static GetDashboardResponseUnmarshaller Instance { get; }
    private static GetDashboardResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetDashboardResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDashboardResponseUnmarshaller GetInstance();
    public static GetDashboardResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetInsightRuleReportRequestMarshaller : object {
    private static GetInsightRuleReportRequestMarshaller _instance;
    public static GetInsightRuleReportRequestMarshaller Instance { get; }
    private static GetInsightRuleReportRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetInsightRuleReportRequest publicRequest);
    internal static GetInsightRuleReportRequestMarshaller GetInstance();
    public static GetInsightRuleReportRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetInsightRuleReportResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetInsightRuleReportResponseUnmarshaller _instance;
    public static GetInsightRuleReportResponseUnmarshaller Instance { get; }
    private static GetInsightRuleReportResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetInsightRuleReportResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetInsightRuleReportResponseUnmarshaller GetInstance();
    public static GetInsightRuleReportResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricDataRequestMarshaller : object {
    private static GetMetricDataRequestMarshaller _instance;
    public static GetMetricDataRequestMarshaller Instance { get; }
    private static GetMetricDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMetricDataRequest publicRequest);
    internal static GetMetricDataRequestMarshaller GetInstance();
    public static GetMetricDataRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricDataResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetMetricDataResponseUnmarshaller _instance;
    public static GetMetricDataResponseUnmarshaller Instance { get; }
    private static GetMetricDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetMetricDataResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMetricDataResponseUnmarshaller GetInstance();
    public static GetMetricDataResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller : object {
    private static GetMetricStatisticsRequestMarshaller _instance;
    public static GetMetricStatisticsRequestMarshaller Instance { get; }
    private static GetMetricStatisticsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMetricStatisticsRequest publicRequest);
    internal static GetMetricStatisticsRequestMarshaller GetInstance();
    public static GetMetricStatisticsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetMetricStatisticsResponseUnmarshaller _instance;
    public static GetMetricStatisticsResponseUnmarshaller Instance { get; }
    private static GetMetricStatisticsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetMetricStatisticsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMetricStatisticsResponseUnmarshaller GetInstance();
    public static GetMetricStatisticsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStreamRequestMarshaller : object {
    private static GetMetricStreamRequestMarshaller _instance;
    public static GetMetricStreamRequestMarshaller Instance { get; }
    private static GetMetricStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMetricStreamRequest publicRequest);
    internal static GetMetricStreamRequestMarshaller GetInstance();
    public static GetMetricStreamRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStreamResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetMetricStreamResponseUnmarshaller _instance;
    public static GetMetricStreamResponseUnmarshaller Instance { get; }
    private static GetMetricStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetMetricStreamResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMetricStreamResponseUnmarshaller GetInstance();
    public static GetMetricStreamResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricWidgetImageRequestMarshaller : object {
    private static GetMetricWidgetImageRequestMarshaller _instance;
    public static GetMetricWidgetImageRequestMarshaller Instance { get; }
    private static GetMetricWidgetImageRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetMetricWidgetImageRequest publicRequest);
    internal static GetMetricWidgetImageRequestMarshaller GetInstance();
    public static GetMetricWidgetImageRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricWidgetImageResponseUnmarshaller : XmlResponseUnmarshaller {
    private static GetMetricWidgetImageResponseUnmarshaller _instance;
    public static GetMetricWidgetImageResponseUnmarshaller Instance { get; }
    private static GetMetricWidgetImageResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, GetMetricWidgetImageResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetMetricWidgetImageResponseUnmarshaller GetInstance();
    public static GetMetricWidgetImageResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleContributorDatapointUnmarshaller : object {
    private static InsightRuleContributorDatapointUnmarshaller _instance;
    public static InsightRuleContributorDatapointUnmarshaller Instance { get; }
    private static InsightRuleContributorDatapointUnmarshaller();
    public sealed virtual InsightRuleContributorDatapoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsightRuleContributorDatapoint Unmarshall(JsonUnmarshallerContext context);
    public static InsightRuleContributorDatapointUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleContributorUnmarshaller : object {
    private static InsightRuleContributorUnmarshaller _instance;
    public static InsightRuleContributorUnmarshaller Instance { get; }
    private static InsightRuleContributorUnmarshaller();
    public sealed virtual InsightRuleContributor Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsightRuleContributor Unmarshall(JsonUnmarshallerContext context);
    public static InsightRuleContributorUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleMetricDatapointUnmarshaller : object {
    private static InsightRuleMetricDatapointUnmarshaller _instance;
    public static InsightRuleMetricDatapointUnmarshaller Instance { get; }
    private static InsightRuleMetricDatapointUnmarshaller();
    public sealed virtual InsightRuleMetricDatapoint Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsightRuleMetricDatapoint Unmarshall(JsonUnmarshallerContext context);
    public static InsightRuleMetricDatapointUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.InsightRuleUnmarshaller : object {
    private static InsightRuleUnmarshaller _instance;
    public static InsightRuleUnmarshaller Instance { get; }
    private static InsightRuleUnmarshaller();
    public sealed virtual InsightRule Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InsightRule Unmarshall(JsonUnmarshallerContext context);
    public static InsightRuleUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller : object {
    private static InternalServiceExceptionUnmarshaller _instance;
    public static InternalServiceExceptionUnmarshaller Instance { get; }
    private static InternalServiceExceptionUnmarshaller();
    public sealed virtual InternalServiceException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InternalServiceException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServiceExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidFormatExceptionUnmarshaller : object {
    private static InvalidFormatExceptionUnmarshaller _instance;
    public static InvalidFormatExceptionUnmarshaller Instance { get; }
    private static InvalidFormatExceptionUnmarshaller();
    public sealed virtual InvalidFormatException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidFormatException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidFormatExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidNextTokenExceptionUnmarshaller : object {
    private static InvalidNextTokenExceptionUnmarshaller _instance;
    public static InvalidNextTokenExceptionUnmarshaller Instance { get; }
    private static InvalidNextTokenExceptionUnmarshaller();
    public sealed virtual InvalidNextTokenException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidNextTokenException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidNextTokenExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidParameterCombinationExceptionUnmarshaller : object {
    private static InvalidParameterCombinationExceptionUnmarshaller _instance;
    public static InvalidParameterCombinationExceptionUnmarshaller Instance { get; }
    private static InvalidParameterCombinationExceptionUnmarshaller();
    public sealed virtual InvalidParameterCombinationException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidParameterCombinationException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterCombinationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller : object {
    private static InvalidParameterValueExceptionUnmarshaller _instance;
    public static InvalidParameterValueExceptionUnmarshaller Instance { get; }
    private static InvalidParameterValueExceptionUnmarshaller();
    public sealed virtual InvalidParameterValueException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InvalidParameterValueException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterValueExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListDashboardsRequestMarshaller : object {
    private static ListDashboardsRequestMarshaller _instance;
    public static ListDashboardsRequestMarshaller Instance { get; }
    private static ListDashboardsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDashboardsRequest publicRequest);
    internal static ListDashboardsRequestMarshaller GetInstance();
    public static ListDashboardsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListDashboardsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListDashboardsResponseUnmarshaller _instance;
    public static ListDashboardsResponseUnmarshaller Instance { get; }
    private static ListDashboardsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListDashboardsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDashboardsResponseUnmarshaller GetInstance();
    public static ListDashboardsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListManagedInsightRulesRequestMarshaller : object {
    private static ListManagedInsightRulesRequestMarshaller _instance;
    public static ListManagedInsightRulesRequestMarshaller Instance { get; }
    private static ListManagedInsightRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListManagedInsightRulesRequest publicRequest);
    internal static ListManagedInsightRulesRequestMarshaller GetInstance();
    public static ListManagedInsightRulesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListManagedInsightRulesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListManagedInsightRulesResponseUnmarshaller _instance;
    public static ListManagedInsightRulesResponseUnmarshaller Instance { get; }
    private static ListManagedInsightRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListManagedInsightRulesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListManagedInsightRulesResponseUnmarshaller GetInstance();
    public static ListManagedInsightRulesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller : object {
    private static ListMetricsRequestMarshaller _instance;
    public static ListMetricsRequestMarshaller Instance { get; }
    private static ListMetricsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMetricsRequest publicRequest);
    internal static ListMetricsRequestMarshaller GetInstance();
    public static ListMetricsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListMetricsResponseUnmarshaller _instance;
    public static ListMetricsResponseUnmarshaller Instance { get; }
    private static ListMetricsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListMetricsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListMetricsResponseUnmarshaller GetInstance();
    public static ListMetricsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricStreamsRequestMarshaller : object {
    private static ListMetricStreamsRequestMarshaller _instance;
    public static ListMetricStreamsRequestMarshaller Instance { get; }
    private static ListMetricStreamsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMetricStreamsRequest publicRequest);
    internal static ListMetricStreamsRequestMarshaller GetInstance();
    public static ListMetricStreamsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricStreamsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListMetricStreamsResponseUnmarshaller _instance;
    public static ListMetricStreamsResponseUnmarshaller Instance { get; }
    private static ListMetricStreamsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListMetricStreamsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListMetricStreamsResponseUnmarshaller GetInstance();
    public static ListMetricStreamsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, ListTagsForResourceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ManagedRuleDescriptionUnmarshaller : object {
    private static ManagedRuleDescriptionUnmarshaller _instance;
    public static ManagedRuleDescriptionUnmarshaller Instance { get; }
    private static ManagedRuleDescriptionUnmarshaller();
    public sealed virtual ManagedRuleDescription Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ManagedRuleDescription Unmarshall(JsonUnmarshallerContext context);
    public static ManagedRuleDescriptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ManagedRuleStateUnmarshaller : object {
    private static ManagedRuleStateUnmarshaller _instance;
    public static ManagedRuleStateUnmarshaller Instance { get; }
    private static ManagedRuleStateUnmarshaller();
    public sealed virtual ManagedRuleState Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ManagedRuleState Unmarshall(JsonUnmarshallerContext context);
    public static ManagedRuleStateUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MessageDataUnmarshaller : object {
    private static MessageDataUnmarshaller _instance;
    public static MessageDataUnmarshaller Instance { get; }
    private static MessageDataUnmarshaller();
    public sealed virtual MessageData Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MessageData Unmarshall(JsonUnmarshallerContext context);
    public static MessageDataUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller : object {
    private static MetricAlarmUnmarshaller _instance;
    public static MetricAlarmUnmarshaller Instance { get; }
    private static MetricAlarmUnmarshaller();
    public sealed virtual MetricAlarm Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricAlarm Unmarshall(JsonUnmarshallerContext context);
    public static MetricAlarmUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricCharacteristicsUnmarshaller : object {
    private static MetricCharacteristicsUnmarshaller _instance;
    public static MetricCharacteristicsUnmarshaller Instance { get; }
    private static MetricCharacteristicsUnmarshaller();
    public sealed virtual MetricCharacteristics Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricCharacteristics Unmarshall(JsonUnmarshallerContext context);
    public static MetricCharacteristicsUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricDataQueryUnmarshaller : object {
    private static MetricDataQueryUnmarshaller _instance;
    public static MetricDataQueryUnmarshaller Instance { get; }
    private static MetricDataQueryUnmarshaller();
    public sealed virtual MetricDataQuery Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricDataQuery Unmarshall(JsonUnmarshallerContext context);
    public static MetricDataQueryUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricDataResultUnmarshaller : object {
    private static MetricDataResultUnmarshaller _instance;
    public static MetricDataResultUnmarshaller Instance { get; }
    private static MetricDataResultUnmarshaller();
    public sealed virtual MetricDataResult Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricDataResult Unmarshall(JsonUnmarshallerContext context);
    public static MetricDataResultUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricMathAnomalyDetectorUnmarshaller : object {
    private static MetricMathAnomalyDetectorUnmarshaller _instance;
    public static MetricMathAnomalyDetectorUnmarshaller Instance { get; }
    private static MetricMathAnomalyDetectorUnmarshaller();
    public sealed virtual MetricMathAnomalyDetector Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricMathAnomalyDetector Unmarshall(JsonUnmarshallerContext context);
    public static MetricMathAnomalyDetectorUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStatUnmarshaller : object {
    private static MetricStatUnmarshaller _instance;
    public static MetricStatUnmarshaller Instance { get; }
    private static MetricStatUnmarshaller();
    public sealed virtual MetricStat Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricStat Unmarshall(JsonUnmarshallerContext context);
    public static MetricStatUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamEntryUnmarshaller : object {
    private static MetricStreamEntryUnmarshaller _instance;
    public static MetricStreamEntryUnmarshaller Instance { get; }
    private static MetricStreamEntryUnmarshaller();
    public sealed virtual MetricStreamEntry Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricStreamEntry Unmarshall(JsonUnmarshallerContext context);
    public static MetricStreamEntryUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamFilterUnmarshaller : object {
    private static MetricStreamFilterUnmarshaller _instance;
    public static MetricStreamFilterUnmarshaller Instance { get; }
    private static MetricStreamFilterUnmarshaller();
    public sealed virtual MetricStreamFilter Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricStreamFilter Unmarshall(JsonUnmarshallerContext context);
    public static MetricStreamFilterUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamStatisticsConfigurationUnmarshaller : object {
    private static MetricStreamStatisticsConfigurationUnmarshaller _instance;
    public static MetricStreamStatisticsConfigurationUnmarshaller Instance { get; }
    private static MetricStreamStatisticsConfigurationUnmarshaller();
    public sealed virtual MetricStreamStatisticsConfiguration Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricStreamStatisticsConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static MetricStreamStatisticsConfigurationUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricStreamStatisticsMetricUnmarshaller : object {
    private static MetricStreamStatisticsMetricUnmarshaller _instance;
    public static MetricStreamStatisticsMetricUnmarshaller Instance { get; }
    private static MetricStreamStatisticsMetricUnmarshaller();
    public sealed virtual MetricStreamStatisticsMetric Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricStreamStatisticsMetric Unmarshall(JsonUnmarshallerContext context);
    public static MetricStreamStatisticsMetricUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller : object {
    private static MetricUnmarshaller _instance;
    public static MetricUnmarshaller Instance { get; }
    private static MetricUnmarshaller();
    public sealed virtual Metric Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Metric Unmarshall(JsonUnmarshallerContext context);
    public static MetricUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.MissingRequiredParameterExceptionUnmarshaller : object {
    private static MissingRequiredParameterExceptionUnmarshaller _instance;
    public static MissingRequiredParameterExceptionUnmarshaller Instance { get; }
    private static MissingRequiredParameterExceptionUnmarshaller();
    public sealed virtual MissingRequiredParameterException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MissingRequiredParameterException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static MissingRequiredParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PartialFailureUnmarshaller : object {
    private static PartialFailureUnmarshaller _instance;
    public static PartialFailureUnmarshaller Instance { get; }
    private static PartialFailureUnmarshaller();
    public sealed virtual PartialFailure Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PartialFailure Unmarshall(JsonUnmarshallerContext context);
    public static PartialFailureUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutAnomalyDetectorRequestMarshaller : object {
    private static PutAnomalyDetectorRequestMarshaller _instance;
    public static PutAnomalyDetectorRequestMarshaller Instance { get; }
    private static PutAnomalyDetectorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutAnomalyDetectorRequest publicRequest);
    internal static PutAnomalyDetectorRequestMarshaller GetInstance();
    public static PutAnomalyDetectorRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutAnomalyDetectorResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutAnomalyDetectorResponseUnmarshaller _instance;
    public static PutAnomalyDetectorResponseUnmarshaller Instance { get; }
    private static PutAnomalyDetectorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutAnomalyDetectorResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutAnomalyDetectorResponseUnmarshaller GetInstance();
    public static PutAnomalyDetectorResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutCompositeAlarmRequestMarshaller : object {
    private static PutCompositeAlarmRequestMarshaller _instance;
    public static PutCompositeAlarmRequestMarshaller Instance { get; }
    private static PutCompositeAlarmRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutCompositeAlarmRequest publicRequest);
    internal static PutCompositeAlarmRequestMarshaller GetInstance();
    public static PutCompositeAlarmRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutCompositeAlarmResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutCompositeAlarmResponseUnmarshaller _instance;
    public static PutCompositeAlarmResponseUnmarshaller Instance { get; }
    private static PutCompositeAlarmResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutCompositeAlarmResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutCompositeAlarmResponseUnmarshaller GetInstance();
    public static PutCompositeAlarmResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutDashboardRequestMarshaller : object {
    private static PutDashboardRequestMarshaller _instance;
    public static PutDashboardRequestMarshaller Instance { get; }
    private static PutDashboardRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutDashboardRequest publicRequest);
    internal static PutDashboardRequestMarshaller GetInstance();
    public static PutDashboardRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutDashboardResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutDashboardResponseUnmarshaller _instance;
    public static PutDashboardResponseUnmarshaller Instance { get; }
    private static PutDashboardResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutDashboardResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutDashboardResponseUnmarshaller GetInstance();
    public static PutDashboardResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutInsightRuleRequestMarshaller : object {
    private static PutInsightRuleRequestMarshaller _instance;
    public static PutInsightRuleRequestMarshaller Instance { get; }
    private static PutInsightRuleRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutInsightRuleRequest publicRequest);
    internal static PutInsightRuleRequestMarshaller GetInstance();
    public static PutInsightRuleRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutInsightRuleResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutInsightRuleResponseUnmarshaller _instance;
    public static PutInsightRuleResponseUnmarshaller Instance { get; }
    private static PutInsightRuleResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutInsightRuleResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutInsightRuleResponseUnmarshaller GetInstance();
    public static PutInsightRuleResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutManagedInsightRulesRequestMarshaller : object {
    private static PutManagedInsightRulesRequestMarshaller _instance;
    public static PutManagedInsightRulesRequestMarshaller Instance { get; }
    private static PutManagedInsightRulesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutManagedInsightRulesRequest publicRequest);
    internal static PutManagedInsightRulesRequestMarshaller GetInstance();
    public static PutManagedInsightRulesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutManagedInsightRulesResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutManagedInsightRulesResponseUnmarshaller _instance;
    public static PutManagedInsightRulesResponseUnmarshaller Instance { get; }
    private static PutManagedInsightRulesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutManagedInsightRulesResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutManagedInsightRulesResponseUnmarshaller GetInstance();
    public static PutManagedInsightRulesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller : object {
    private static PutMetricAlarmRequestMarshaller _instance;
    public static PutMetricAlarmRequestMarshaller Instance { get; }
    private static PutMetricAlarmRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutMetricAlarmRequest publicRequest);
    internal static PutMetricAlarmRequestMarshaller GetInstance();
    public static PutMetricAlarmRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutMetricAlarmResponseUnmarshaller _instance;
    public static PutMetricAlarmResponseUnmarshaller Instance { get; }
    private static PutMetricAlarmResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutMetricAlarmResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutMetricAlarmResponseUnmarshaller GetInstance();
    public static PutMetricAlarmResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller : object {
    private static PutMetricDataRequestMarshaller _instance;
    public static PutMetricDataRequestMarshaller Instance { get; }
    private static PutMetricDataRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutMetricDataRequest publicRequest);
    internal static PutMetricDataRequestMarshaller GetInstance();
    public static PutMetricDataRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutMetricDataResponseUnmarshaller _instance;
    public static PutMetricDataResponseUnmarshaller Instance { get; }
    private static PutMetricDataResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutMetricDataResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutMetricDataResponseUnmarshaller GetInstance();
    public static PutMetricDataResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricStreamRequestMarshaller : object {
    private static PutMetricStreamRequestMarshaller _instance;
    public static PutMetricStreamRequestMarshaller Instance { get; }
    private static PutMetricStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutMetricStreamRequest publicRequest);
    internal static PutMetricStreamRequestMarshaller GetInstance();
    public static PutMetricStreamRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricStreamResponseUnmarshaller : XmlResponseUnmarshaller {
    private static PutMetricStreamResponseUnmarshaller _instance;
    public static PutMetricStreamResponseUnmarshaller Instance { get; }
    private static PutMetricStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, PutMetricStreamResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutMetricStreamResponseUnmarshaller GetInstance();
    public static PutMetricStreamResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.RangeUnmarshaller : object {
    private static RangeUnmarshaller _instance;
    public static RangeUnmarshaller Instance { get; }
    private static RangeUnmarshaller();
    public sealed virtual Range Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Range Unmarshall(JsonUnmarshallerContext context);
    public static RangeUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(XmlUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller : object {
    private static SetAlarmStateRequestMarshaller _instance;
    public static SetAlarmStateRequestMarshaller Instance { get; }
    private static SetAlarmStateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetAlarmStateRequest publicRequest);
    internal static SetAlarmStateRequestMarshaller GetInstance();
    public static SetAlarmStateRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller : XmlResponseUnmarshaller {
    private static SetAlarmStateResponseUnmarshaller _instance;
    public static SetAlarmStateResponseUnmarshaller Instance { get; }
    private static SetAlarmStateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, SetAlarmStateResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetAlarmStateResponseUnmarshaller GetInstance();
    public static SetAlarmStateResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.SingleMetricAnomalyDetectorUnmarshaller : object {
    private static SingleMetricAnomalyDetectorUnmarshaller _instance;
    public static SingleMetricAnomalyDetectorUnmarshaller Instance { get; }
    private static SingleMetricAnomalyDetectorUnmarshaller();
    public sealed virtual SingleMetricAnomalyDetector Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SingleMetricAnomalyDetector Unmarshall(JsonUnmarshallerContext context);
    public static SingleMetricAnomalyDetectorUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.StartMetricStreamsRequestMarshaller : object {
    private static StartMetricStreamsRequestMarshaller _instance;
    public static StartMetricStreamsRequestMarshaller Instance { get; }
    private static StartMetricStreamsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMetricStreamsRequest publicRequest);
    internal static StartMetricStreamsRequestMarshaller GetInstance();
    public static StartMetricStreamsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.StartMetricStreamsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StartMetricStreamsResponseUnmarshaller _instance;
    public static StartMetricStreamsResponseUnmarshaller Instance { get; }
    private static StartMetricStreamsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StartMetricStreamsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMetricStreamsResponseUnmarshaller GetInstance();
    public static StartMetricStreamsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.StopMetricStreamsRequestMarshaller : object {
    private static StopMetricStreamsRequestMarshaller _instance;
    public static StopMetricStreamsRequestMarshaller Instance { get; }
    private static StopMetricStreamsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopMetricStreamsRequest publicRequest);
    internal static StopMetricStreamsRequestMarshaller GetInstance();
    public static StopMetricStreamsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.StopMetricStreamsResponseUnmarshaller : XmlResponseUnmarshaller {
    private static StopMetricStreamsResponseUnmarshaller _instance;
    public static StopMetricStreamsResponseUnmarshaller Instance { get; }
    private static StopMetricStreamsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, StopMetricStreamsResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopMetricStreamsResponseUnmarshaller GetInstance();
    public static StopMetricStreamsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, TagResourceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    public sealed virtual Tag Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : XmlResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(XmlUnmarshallerContext context);
    private static void UnmarshallResult(XmlUnmarshallerContext context, UntagResourceResponse response);
    public virtual AmazonServiceException UnmarshallException(XmlUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatch.Model.InternalServiceException : AmazonCloudWatchException {
    public InternalServiceException(string message);
    public InternalServiceException(string message, Exception innerException);
    public InternalServiceException(Exception innerException);
    public InternalServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.InvalidFormatException : AmazonCloudWatchException {
    public InvalidFormatException(string message);
    public InvalidFormatException(string message, Exception innerException);
    public InvalidFormatException(Exception innerException);
    public InvalidFormatException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidFormatException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.InvalidNextTokenException : AmazonCloudWatchException {
    public InvalidNextTokenException(string message);
    public InvalidNextTokenException(string message, Exception innerException);
    public InvalidNextTokenException(Exception innerException);
    public InvalidNextTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidNextTokenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.InvalidParameterCombinationException : AmazonCloudWatchException {
    public InvalidParameterCombinationException(string message);
    public InvalidParameterCombinationException(string message, Exception innerException);
    public InvalidParameterCombinationException(Exception innerException);
    public InvalidParameterCombinationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterCombinationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.InvalidParameterValueException : AmazonCloudWatchException {
    public InvalidParameterValueException(string message);
    public InvalidParameterValueException(string message, Exception innerException);
    public InvalidParameterValueException(Exception innerException);
    public InvalidParameterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterValueException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.LabelOptions : object {
    private string _timezone;
    public string Timezone { get; public set; }
    public string get_Timezone();
    public void set_Timezone(string value);
    internal bool IsSetTimezone();
}
public class Amazon.CloudWatch.Model.LimitExceededException : AmazonCloudWatchException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
internal class Amazon.CloudWatch.Model.ListDashboardsPaginator : object {
    private IAmazonCloudWatch _client;
    private ListDashboardsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListDashboardsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DashboardEntry> DashboardEntries { get; }
    internal ListDashboardsPaginator(IAmazonCloudWatch client, ListDashboardsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListDashboardsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DashboardEntry> get_DashboardEntries();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudWatch.Model.ListDashboardsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatch-Model-ListDashboardsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListDashboardsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatch.Model.ListDashboardsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.Model.ListDashboardsRequest : AmazonCloudWatchRequest {
    private string _dashboardNamePrefix;
    private string _nextToken;
    public string DashboardNamePrefix { get; public set; }
    public string NextToken { get; public set; }
    public string get_DashboardNamePrefix();
    public void set_DashboardNamePrefix(string value);
    internal bool IsSetDashboardNamePrefix();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.ListDashboardsResponse : AmazonWebServiceResponse {
    private List`1<DashboardEntry> _dashboardEntries;
    private string _nextToken;
    public List`1<DashboardEntry> DashboardEntries { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DashboardEntry> get_DashboardEntries();
    public void set_DashboardEntries(List`1<DashboardEntry> value);
    internal bool IsSetDashboardEntries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatch.Model.ListManagedInsightRulesPaginator : object {
    private IAmazonCloudWatch _client;
    private ListManagedInsightRulesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListManagedInsightRulesResponse> Responses { get; }
    internal ListManagedInsightRulesPaginator(IAmazonCloudWatch client, ListManagedInsightRulesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListManagedInsightRulesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudWatch.Model.ListManagedInsightRulesPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatch-Model-ListManagedInsightRulesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListManagedInsightRulesResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatch.Model.ListManagedInsightRulesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.Model.ListManagedInsightRulesRequest : AmazonCloudWatchRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _resourceARN;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
}
public class Amazon.CloudWatch.Model.ListManagedInsightRulesResponse : AmazonWebServiceResponse {
    private List`1<ManagedRuleDescription> _managedRules;
    private string _nextToken;
    public List`1<ManagedRuleDescription> ManagedRules { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ManagedRuleDescription> get_ManagedRules();
    public void set_ManagedRules(List`1<ManagedRuleDescription> value);
    internal bool IsSetManagedRules();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatch.Model.ListMetricsPaginator : object {
    private IAmazonCloudWatch _client;
    private ListMetricsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListMetricsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Metric> Metrics { get; }
    public IPaginatedEnumerable`1<string> OwningAccounts { get; }
    internal ListMetricsPaginator(IAmazonCloudWatch client, ListMetricsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListMetricsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Metric> get_Metrics();
    public sealed virtual IPaginatedEnumerable`1<string> get_OwningAccounts();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudWatch.Model.ListMetricsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatch-Model-ListMetricsResponse>-PaginateAsync>d__10")]
private sealed virtual override IAsyncEnumerable`1<ListMetricsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatch.Model.ListMetricsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.Model.ListMetricsRequest : AmazonCloudWatchRequest {
    private List`1<DimensionFilter> _dimensions;
    private Nullable`1<bool> _includeLinkedAccounts;
    private string _metricName;
    private string _awsNamespace;
    private string _nextToken;
    private string _owningAccount;
    private RecentlyActive _recentlyActive;
    [AWSPropertyAttribute]
public List`1<DimensionFilter> Dimensions { get; public set; }
    public Nullable`1<bool> IncludeLinkedAccounts { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string OwningAccount { get; public set; }
    public RecentlyActive RecentlyActive { get; public set; }
    public List`1<DimensionFilter> get_Dimensions();
    public void set_Dimensions(List`1<DimensionFilter> value);
    internal bool IsSetDimensions();
    public Nullable`1<bool> get_IncludeLinkedAccounts();
    public void set_IncludeLinkedAccounts(Nullable`1<bool> value);
    internal bool IsSetIncludeLinkedAccounts();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_OwningAccount();
    public void set_OwningAccount(string value);
    internal bool IsSetOwningAccount();
    public RecentlyActive get_RecentlyActive();
    public void set_RecentlyActive(RecentlyActive value);
    internal bool IsSetRecentlyActive();
}
public class Amazon.CloudWatch.Model.ListMetricsResponse : AmazonWebServiceResponse {
    private List`1<Metric> _metrics;
    private string _nextToken;
    private List`1<string> _owningAccounts;
    public List`1<Metric> Metrics { get; public set; }
    public string NextToken { get; public set; }
    public List`1<string> OwningAccounts { get; public set; }
    public List`1<Metric> get_Metrics();
    public void set_Metrics(List`1<Metric> value);
    internal bool IsSetMetrics();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<string> get_OwningAccounts();
    public void set_OwningAccounts(List`1<string> value);
    internal bool IsSetOwningAccounts();
}
internal class Amazon.CloudWatch.Model.ListMetricStreamsPaginator : object {
    private IAmazonCloudWatch _client;
    private ListMetricStreamsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListMetricStreamsResponse> Responses { get; }
    internal ListMetricStreamsPaginator(IAmazonCloudWatch client, ListMetricStreamsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListMetricStreamsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.CloudWatch.Model.ListMetricStreamsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatch-Model-ListMetricStreamsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ListMetricStreamsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatch.Model.ListMetricStreamsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CloudWatch.Model.ListMetricStreamsRequest : AmazonCloudWatchRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.ListMetricStreamsResponse : AmazonWebServiceResponse {
    private List`1<MetricStreamEntry> _entries;
    private string _nextToken;
    public List`1<MetricStreamEntry> Entries { get; public set; }
    public string NextToken { get; public set; }
    public List`1<MetricStreamEntry> get_Entries();
    public void set_Entries(List`1<MetricStreamEntry> value);
    internal bool IsSetEntries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatch.Model.ListTagsForResourceRequest : AmazonCloudWatchRequest {
    private string _resourceARN;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
}
public class Amazon.CloudWatch.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private List`1<Tag> _tags;
    public List`1<Tag> Tags { get; public set; }
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatch.Model.ManagedRule : object {
    private string _resourceARN;
    private List`1<Tag> _tags;
    private string _templateName;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.CloudWatch.Model.ManagedRuleDescription : object {
    private string _resourceARN;
    private ManagedRuleState _ruleState;
    private string _templateName;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    public ManagedRuleState RuleState { get; public set; }
    [AWSPropertyAttribute]
public string TemplateName { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public ManagedRuleState get_RuleState();
    public void set_RuleState(ManagedRuleState value);
    internal bool IsSetRuleState();
    public string get_TemplateName();
    public void set_TemplateName(string value);
    internal bool IsSetTemplateName();
}
public class Amazon.CloudWatch.Model.ManagedRuleState : object {
    private string _ruleName;
    private string _state;
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    [AWSPropertyAttribute]
public string State { get; public set; }
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
}
public class Amazon.CloudWatch.Model.MessageData : object {
    private string _code;
    private string _value;
    public string Code { get; public set; }
    public string Value { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudWatch.Model.Metric : object {
    private List`1<Dimension> _dimensions;
    private string _metricName;
    private string _awsNamespace;
    [AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
}
public class Amazon.CloudWatch.Model.MetricAlarm : object {
    private Nullable`1<bool> _actionsEnabled;
    private List`1<string> _alarmActions;
    private string _alarmArn;
    private Nullable`1<DateTime> _alarmConfigurationUpdatedTimestamp;
    private string _alarmDescription;
    private string _alarmName;
    private ComparisonOperator _comparisonOperator;
    private Nullable`1<int> _datapointsToAlarm;
    private List`1<Dimension> _dimensions;
    private string _evaluateLowSampleCountPercentile;
    private Nullable`1<int> _evaluationPeriods;
    private EvaluationState _evaluationState;
    private string _extendedStatistic;
    private List`1<string> _insufficientDataActions;
    private string _metricName;
    private List`1<MetricDataQuery> _metrics;
    private string _awsNamespace;
    private List`1<string> _okActions;
    private Nullable`1<int> _period;
    private string _stateReason;
    private string _stateReasonData;
    private Nullable`1<DateTime> _stateTransitionedTimestamp;
    private Nullable`1<DateTime> _stateUpdatedTimestamp;
    private StateValue _stateValue;
    private Statistic _statistic;
    private Nullable`1<double> _threshold;
    private string _thresholdMetricId;
    private string _treatMissingData;
    private StandardUnit _unit;
    public Nullable`1<bool> ActionsEnabled { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AlarmActions { get; public set; }
    [AWSPropertyAttribute]
public string AlarmArn { get; public set; }
    public Nullable`1<DateTime> AlarmConfigurationUpdatedTimestamp { get; public set; }
    [AWSPropertyAttribute]
public string AlarmDescription { get; public set; }
    [AWSPropertyAttribute]
public string AlarmName { get; public set; }
    public ComparisonOperator ComparisonOperator { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> DatapointsToAlarm { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    [AWSPropertyAttribute]
public string EvaluateLowSampleCountPercentile { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> EvaluationPeriods { get; public set; }
    public EvaluationState EvaluationState { get; public set; }
    public string ExtendedStatistic { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InsufficientDataActions { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    public List`1<MetricDataQuery> Metrics { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> OKActions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Period { get; public set; }
    [AWSPropertyAttribute]
public string StateReason { get; public set; }
    [AWSPropertyAttribute]
public string StateReasonData { get; public set; }
    public Nullable`1<DateTime> StateTransitionedTimestamp { get; public set; }
    public Nullable`1<DateTime> StateUpdatedTimestamp { get; public set; }
    public StateValue StateValue { get; public set; }
    public Statistic Statistic { get; public set; }
    public Nullable`1<double> Threshold { get; public set; }
    [AWSPropertyAttribute]
public string ThresholdMetricId { get; public set; }
    [AWSPropertyAttribute]
public string TreatMissingData { get; public set; }
    public StandardUnit Unit { get; public set; }
    public Nullable`1<bool> get_ActionsEnabled();
    public void set_ActionsEnabled(Nullable`1<bool> value);
    internal bool IsSetActionsEnabled();
    public List`1<string> get_AlarmActions();
    public void set_AlarmActions(List`1<string> value);
    internal bool IsSetAlarmActions();
    public string get_AlarmArn();
    public void set_AlarmArn(string value);
    internal bool IsSetAlarmArn();
    public Nullable`1<DateTime> get_AlarmConfigurationUpdatedTimestamp();
    public void set_AlarmConfigurationUpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetAlarmConfigurationUpdatedTimestamp();
    public string get_AlarmDescription();
    public void set_AlarmDescription(string value);
    internal bool IsSetAlarmDescription();
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public ComparisonOperator get_ComparisonOperator();
    public void set_ComparisonOperator(ComparisonOperator value);
    internal bool IsSetComparisonOperator();
    public Nullable`1<int> get_DatapointsToAlarm();
    public void set_DatapointsToAlarm(Nullable`1<int> value);
    internal bool IsSetDatapointsToAlarm();
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public string get_EvaluateLowSampleCountPercentile();
    public void set_EvaluateLowSampleCountPercentile(string value);
    internal bool IsSetEvaluateLowSampleCountPercentile();
    public Nullable`1<int> get_EvaluationPeriods();
    public void set_EvaluationPeriods(Nullable`1<int> value);
    internal bool IsSetEvaluationPeriods();
    public EvaluationState get_EvaluationState();
    public void set_EvaluationState(EvaluationState value);
    internal bool IsSetEvaluationState();
    public string get_ExtendedStatistic();
    public void set_ExtendedStatistic(string value);
    internal bool IsSetExtendedStatistic();
    public List`1<string> get_InsufficientDataActions();
    public void set_InsufficientDataActions(List`1<string> value);
    internal bool IsSetInsufficientDataActions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public List`1<MetricDataQuery> get_Metrics();
    public void set_Metrics(List`1<MetricDataQuery> value);
    internal bool IsSetMetrics();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public List`1<string> get_OKActions();
    public void set_OKActions(List`1<string> value);
    internal bool IsSetOKActions();
    public Nullable`1<int> get_Period();
    public void set_Period(Nullable`1<int> value);
    internal bool IsSetPeriod();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public string get_StateReasonData();
    public void set_StateReasonData(string value);
    internal bool IsSetStateReasonData();
    public Nullable`1<DateTime> get_StateTransitionedTimestamp();
    public void set_StateTransitionedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStateTransitionedTimestamp();
    public Nullable`1<DateTime> get_StateUpdatedTimestamp();
    public void set_StateUpdatedTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetStateUpdatedTimestamp();
    public StateValue get_StateValue();
    public void set_StateValue(StateValue value);
    internal bool IsSetStateValue();
    public Statistic get_Statistic();
    public void set_Statistic(Statistic value);
    internal bool IsSetStatistic();
    public Nullable`1<double> get_Threshold();
    public void set_Threshold(Nullable`1<double> value);
    internal bool IsSetThreshold();
    public string get_ThresholdMetricId();
    public void set_ThresholdMetricId(string value);
    internal bool IsSetThresholdMetricId();
    public string get_TreatMissingData();
    public void set_TreatMissingData(string value);
    internal bool IsSetTreatMissingData();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatch.Model.MetricCharacteristics : object {
    private Nullable`1<bool> _periodicSpikes;
    public Nullable`1<bool> PeriodicSpikes { get; public set; }
    public Nullable`1<bool> get_PeriodicSpikes();
    public void set_PeriodicSpikes(Nullable`1<bool> value);
    internal bool IsSetPeriodicSpikes();
}
public class Amazon.CloudWatch.Model.MetricDataQuery : object {
    private string _accountId;
    private string _expression;
    private string _id;
    private string _label;
    private MetricStat _metricStat;
    private Nullable`1<int> _period;
    private Nullable`1<bool> _returnData;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string Expression { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string Label { get; public set; }
    public MetricStat MetricStat { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Period { get; public set; }
    public Nullable`1<bool> ReturnData { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_Expression();
    public void set_Expression(string value);
    internal bool IsSetExpression();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
    public MetricStat get_MetricStat();
    public void set_MetricStat(MetricStat value);
    internal bool IsSetMetricStat();
    public Nullable`1<int> get_Period();
    public void set_Period(Nullable`1<int> value);
    internal bool IsSetPeriod();
    public Nullable`1<bool> get_ReturnData();
    public void set_ReturnData(Nullable`1<bool> value);
    internal bool IsSetReturnData();
}
public class Amazon.CloudWatch.Model.MetricDataResult : object {
    private string _id;
    private string _label;
    private List`1<MessageData> _messages;
    private StatusCode _statusCode;
    private List`1<DateTime> _timestamps;
    private List`1<double> _values;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string Label { get; public set; }
    public List`1<MessageData> Messages { get; public set; }
    public StatusCode StatusCode { get; public set; }
    public List`1<DateTime> Timestamps { get; public set; }
    public List`1<double> Values { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public string get_Label();
    public void set_Label(string value);
    internal bool IsSetLabel();
    public List`1<MessageData> get_Messages();
    public void set_Messages(List`1<MessageData> value);
    internal bool IsSetMessages();
    public StatusCode get_StatusCode();
    public void set_StatusCode(StatusCode value);
    internal bool IsSetStatusCode();
    public List`1<DateTime> get_Timestamps();
    public void set_Timestamps(List`1<DateTime> value);
    internal bool IsSetTimestamps();
    public List`1<double> get_Values();
    public void set_Values(List`1<double> value);
    internal bool IsSetValues();
}
public class Amazon.CloudWatch.Model.MetricDatum : object {
    private List`1<double> _counts;
    private List`1<Dimension> _dimensions;
    private string _metricName;
    private StatisticSet _statisticValues;
    private Nullable`1<int> _storageResolution;
    private Nullable`1<DateTime> _timestampUtc;
    private StandardUnit _unit;
    private Nullable`1<double> _value;
    private List`1<double> _values;
    private Nullable`1<DateTime> _timestamp;
    public List`1<double> Counts { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    public StatisticSet StatisticValues { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> StorageResolution { get; public set; }
    public Nullable`1<DateTime> TimestampUtc { get; public set; }
    public StandardUnit Unit { get; public set; }
    public Nullable`1<double> Value { get; public set; }
    public List`1<double> Values { get; public set; }
    [ObsoleteAttribute("Setting this property results in non-UTC DateTimes not being marshalled correctly. Use TimestampUtc instead. Setting either Timestamp or TimestampUtc results in both Timestamp and TimestampUtc being assigned, the latest assignment to either one of the two property is reflected in the value of both. Timestamp is provided for backwards compatibility only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed to the service.", "False")]
public Nullable`1<DateTime> Timestamp { get; public set; }
    public List`1<double> get_Counts();
    public void set_Counts(List`1<double> value);
    internal bool IsSetCounts();
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public StatisticSet get_StatisticValues();
    public void set_StatisticValues(StatisticSet value);
    internal bool IsSetStatisticValues();
    public Nullable`1<int> get_StorageResolution();
    public void set_StorageResolution(Nullable`1<int> value);
    internal bool IsSetStorageResolution();
    public Nullable`1<DateTime> get_TimestampUtc();
    public void set_TimestampUtc(Nullable`1<DateTime> value);
    internal bool IsSetTimestampUtc();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
    public Nullable`1<double> get_Value();
    public void set_Value(Nullable`1<double> value);
    internal bool IsSetValue();
    public List`1<double> get_Values();
    public void set_Values(List`1<double> value);
    internal bool IsSetValues();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
}
public class Amazon.CloudWatch.Model.MetricMathAnomalyDetector : object {
    private List`1<MetricDataQuery> _metricDataQueries;
    public List`1<MetricDataQuery> MetricDataQueries { get; public set; }
    public List`1<MetricDataQuery> get_MetricDataQueries();
    public void set_MetricDataQueries(List`1<MetricDataQuery> value);
    internal bool IsSetMetricDataQueries();
}
public class Amazon.CloudWatch.Model.MetricStat : object {
    private Metric _metric;
    private Nullable`1<int> _period;
    private string _stat;
    private StandardUnit _unit;
    [AWSPropertyAttribute]
public Metric Metric { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Period { get; public set; }
    [AWSPropertyAttribute]
public string Stat { get; public set; }
    public StandardUnit Unit { get; public set; }
    public Metric get_Metric();
    public void set_Metric(Metric value);
    internal bool IsSetMetric();
    public Nullable`1<int> get_Period();
    public void set_Period(Nullable`1<int> value);
    internal bool IsSetPeriod();
    public string get_Stat();
    public void set_Stat(string value);
    internal bool IsSetStat();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatch.Model.MetricStreamEntry : object {
    private string _arn;
    private Nullable`1<DateTime> _creationDate;
    private string _firehoseArn;
    private Nullable`1<DateTime> _lastUpdateDate;
    private string _name;
    private MetricStreamOutputFormat _outputFormat;
    private string _state;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public string FirehoseArn { get; public set; }
    public Nullable`1<DateTime> LastUpdateDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public MetricStreamOutputFormat OutputFormat { get; public set; }
    public string State { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public string get_FirehoseArn();
    public void set_FirehoseArn(string value);
    internal bool IsSetFirehoseArn();
    public Nullable`1<DateTime> get_LastUpdateDate();
    public void set_LastUpdateDate(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdateDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public MetricStreamOutputFormat get_OutputFormat();
    public void set_OutputFormat(MetricStreamOutputFormat value);
    internal bool IsSetOutputFormat();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
}
public class Amazon.CloudWatch.Model.MetricStreamFilter : object {
    private List`1<string> _metricNames;
    private string _awsNamespace;
    public List`1<string> MetricNames { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    public List`1<string> get_MetricNames();
    public void set_MetricNames(List`1<string> value);
    internal bool IsSetMetricNames();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
}
public class Amazon.CloudWatch.Model.MetricStreamStatisticsConfiguration : object {
    private List`1<string> _additionalStatistics;
    private List`1<MetricStreamStatisticsMetric> _includeMetrics;
    [AWSPropertyAttribute]
public List`1<string> AdditionalStatistics { get; public set; }
    [AWSPropertyAttribute]
public List`1<MetricStreamStatisticsMetric> IncludeMetrics { get; public set; }
    public List`1<string> get_AdditionalStatistics();
    public void set_AdditionalStatistics(List`1<string> value);
    internal bool IsSetAdditionalStatistics();
    public List`1<MetricStreamStatisticsMetric> get_IncludeMetrics();
    public void set_IncludeMetrics(List`1<MetricStreamStatisticsMetric> value);
    internal bool IsSetIncludeMetrics();
}
public class Amazon.CloudWatch.Model.MetricStreamStatisticsMetric : object {
    private string _metricName;
    private string _awsNamespace;
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
}
public class Amazon.CloudWatch.Model.MissingRequiredParameterException : AmazonCloudWatchException {
    public MissingRequiredParameterException(string message);
    public MissingRequiredParameterException(string message, Exception innerException);
    public MissingRequiredParameterException(Exception innerException);
    public MissingRequiredParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MissingRequiredParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.PartialFailure : object {
    private string _exceptionType;
    private string _failureCode;
    private string _failureDescription;
    private string _failureResource;
    public string ExceptionType { get; public set; }
    public string FailureCode { get; public set; }
    public string FailureDescription { get; public set; }
    public string FailureResource { get; public set; }
    public string get_ExceptionType();
    public void set_ExceptionType(string value);
    internal bool IsSetExceptionType();
    public string get_FailureCode();
    public void set_FailureCode(string value);
    internal bool IsSetFailureCode();
    public string get_FailureDescription();
    public void set_FailureDescription(string value);
    internal bool IsSetFailureDescription();
    public string get_FailureResource();
    public void set_FailureResource(string value);
    internal bool IsSetFailureResource();
}
public class Amazon.CloudWatch.Model.PutAnomalyDetectorRequest : AmazonCloudWatchRequest {
    private AnomalyDetectorConfiguration _configuration;
    private List`1<Dimension> _dimensions;
    private MetricCharacteristics _metricCharacteristics;
    private MetricMathAnomalyDetector _metricMathAnomalyDetector;
    private string _metricName;
    private string _awsNamespace;
    private SingleMetricAnomalyDetector _singleMetricAnomalyDetector;
    private string _stat;
    public AnomalyDetectorConfiguration Configuration { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.")]
[AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    public MetricCharacteristics MetricCharacteristics { get; public set; }
    public MetricMathAnomalyDetector MetricMathAnomalyDetector { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.")]
[AWSPropertyAttribute]
public string MetricName { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.")]
[AWSPropertyAttribute]
public string Namespace { get; public set; }
    public SingleMetricAnomalyDetector SingleMetricAnomalyDetector { get; public set; }
    [ObsoleteAttribute("Use SingleMetricAnomalyDetector.")]
[AWSPropertyAttribute]
public string Stat { get; public set; }
    public AnomalyDetectorConfiguration get_Configuration();
    public void set_Configuration(AnomalyDetectorConfiguration value);
    internal bool IsSetConfiguration();
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public MetricCharacteristics get_MetricCharacteristics();
    public void set_MetricCharacteristics(MetricCharacteristics value);
    internal bool IsSetMetricCharacteristics();
    public MetricMathAnomalyDetector get_MetricMathAnomalyDetector();
    public void set_MetricMathAnomalyDetector(MetricMathAnomalyDetector value);
    internal bool IsSetMetricMathAnomalyDetector();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public SingleMetricAnomalyDetector get_SingleMetricAnomalyDetector();
    public void set_SingleMetricAnomalyDetector(SingleMetricAnomalyDetector value);
    internal bool IsSetSingleMetricAnomalyDetector();
    public string get_Stat();
    public void set_Stat(string value);
    internal bool IsSetStat();
}
public class Amazon.CloudWatch.Model.PutAnomalyDetectorResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.PutCompositeAlarmRequest : AmazonCloudWatchRequest {
    private Nullable`1<bool> _actionsEnabled;
    private string _actionsSuppressor;
    private Nullable`1<int> _actionsSuppressorExtensionPeriod;
    private Nullable`1<int> _actionsSuppressorWaitPeriod;
    private List`1<string> _alarmActions;
    private string _alarmDescription;
    private string _alarmName;
    private string _alarmRule;
    private List`1<string> _insufficientDataActions;
    private List`1<string> _okActions;
    private List`1<Tag> _tags;
    public Nullable`1<bool> ActionsEnabled { get; public set; }
    [AWSPropertyAttribute]
public string ActionsSuppressor { get; public set; }
    public Nullable`1<int> ActionsSuppressorExtensionPeriod { get; public set; }
    public Nullable`1<int> ActionsSuppressorWaitPeriod { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AlarmActions { get; public set; }
    [AWSPropertyAttribute]
public string AlarmDescription { get; public set; }
    [AWSPropertyAttribute]
public string AlarmName { get; public set; }
    [AWSPropertyAttribute]
public string AlarmRule { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InsufficientDataActions { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> OKActions { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> get_ActionsEnabled();
    public void set_ActionsEnabled(Nullable`1<bool> value);
    internal bool IsSetActionsEnabled();
    public string get_ActionsSuppressor();
    public void set_ActionsSuppressor(string value);
    internal bool IsSetActionsSuppressor();
    public Nullable`1<int> get_ActionsSuppressorExtensionPeriod();
    public void set_ActionsSuppressorExtensionPeriod(Nullable`1<int> value);
    internal bool IsSetActionsSuppressorExtensionPeriod();
    public Nullable`1<int> get_ActionsSuppressorWaitPeriod();
    public void set_ActionsSuppressorWaitPeriod(Nullable`1<int> value);
    internal bool IsSetActionsSuppressorWaitPeriod();
    public List`1<string> get_AlarmActions();
    public void set_AlarmActions(List`1<string> value);
    internal bool IsSetAlarmActions();
    public string get_AlarmDescription();
    public void set_AlarmDescription(string value);
    internal bool IsSetAlarmDescription();
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public string get_AlarmRule();
    public void set_AlarmRule(string value);
    internal bool IsSetAlarmRule();
    public List`1<string> get_InsufficientDataActions();
    public void set_InsufficientDataActions(List`1<string> value);
    internal bool IsSetInsufficientDataActions();
    public List`1<string> get_OKActions();
    public void set_OKActions(List`1<string> value);
    internal bool IsSetOKActions();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatch.Model.PutCompositeAlarmResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.PutDashboardRequest : AmazonCloudWatchRequest {
    private string _dashboardBody;
    private string _dashboardName;
    [AWSPropertyAttribute]
public string DashboardBody { get; public set; }
    [AWSPropertyAttribute]
public string DashboardName { get; public set; }
    public string get_DashboardBody();
    public void set_DashboardBody(string value);
    internal bool IsSetDashboardBody();
    public string get_DashboardName();
    public void set_DashboardName(string value);
    internal bool IsSetDashboardName();
}
public class Amazon.CloudWatch.Model.PutDashboardResponse : AmazonWebServiceResponse {
    private List`1<DashboardValidationMessage> _dashboardValidationMessages;
    public List`1<DashboardValidationMessage> DashboardValidationMessages { get; public set; }
    public List`1<DashboardValidationMessage> get_DashboardValidationMessages();
    public void set_DashboardValidationMessages(List`1<DashboardValidationMessage> value);
    internal bool IsSetDashboardValidationMessages();
}
public class Amazon.CloudWatch.Model.PutInsightRuleRequest : AmazonCloudWatchRequest {
    private string _ruleDefinition;
    private string _ruleName;
    private string _ruleState;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string RuleDefinition { get; public set; }
    [AWSPropertyAttribute]
public string RuleName { get; public set; }
    [AWSPropertyAttribute]
public string RuleState { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_RuleDefinition();
    public void set_RuleDefinition(string value);
    internal bool IsSetRuleDefinition();
    public string get_RuleName();
    public void set_RuleName(string value);
    internal bool IsSetRuleName();
    public string get_RuleState();
    public void set_RuleState(string value);
    internal bool IsSetRuleState();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatch.Model.PutInsightRuleResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.PutManagedInsightRulesRequest : AmazonCloudWatchRequest {
    private List`1<ManagedRule> _managedRules;
    [AWSPropertyAttribute]
public List`1<ManagedRule> ManagedRules { get; public set; }
    public List`1<ManagedRule> get_ManagedRules();
    public void set_ManagedRules(List`1<ManagedRule> value);
    internal bool IsSetManagedRules();
}
public class Amazon.CloudWatch.Model.PutManagedInsightRulesResponse : AmazonWebServiceResponse {
    private List`1<PartialFailure> _failures;
    public List`1<PartialFailure> Failures { get; public set; }
    public List`1<PartialFailure> get_Failures();
    public void set_Failures(List`1<PartialFailure> value);
    internal bool IsSetFailures();
}
public class Amazon.CloudWatch.Model.PutMetricAlarmRequest : AmazonCloudWatchRequest {
    private Nullable`1<bool> _actionsEnabled;
    private List`1<string> _alarmActions;
    private string _alarmDescription;
    private string _alarmName;
    private ComparisonOperator _comparisonOperator;
    private Nullable`1<int> _datapointsToAlarm;
    private List`1<Dimension> _dimensions;
    private string _evaluateLowSampleCountPercentile;
    private Nullable`1<int> _evaluationPeriods;
    private string _extendedStatistic;
    private List`1<string> _insufficientDataActions;
    private string _metricName;
    private List`1<MetricDataQuery> _metrics;
    private string _awsNamespace;
    private List`1<string> _okActions;
    private Nullable`1<int> _period;
    private Statistic _statistic;
    private List`1<Tag> _tags;
    private Nullable`1<double> _threshold;
    private string _thresholdMetricId;
    private string _treatMissingData;
    private StandardUnit _unit;
    public Nullable`1<bool> ActionsEnabled { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AlarmActions { get; public set; }
    [AWSPropertyAttribute]
public string AlarmDescription { get; public set; }
    [AWSPropertyAttribute]
public string AlarmName { get; public set; }
    [AWSPropertyAttribute]
public ComparisonOperator ComparisonOperator { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> DatapointsToAlarm { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    [AWSPropertyAttribute]
public string EvaluateLowSampleCountPercentile { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> EvaluationPeriods { get; public set; }
    public string ExtendedStatistic { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> InsufficientDataActions { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    public List`1<MetricDataQuery> Metrics { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> OKActions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Period { get; public set; }
    public Statistic Statistic { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<double> Threshold { get; public set; }
    [AWSPropertyAttribute]
public string ThresholdMetricId { get; public set; }
    [AWSPropertyAttribute]
public string TreatMissingData { get; public set; }
    public StandardUnit Unit { get; public set; }
    public Nullable`1<bool> get_ActionsEnabled();
    public void set_ActionsEnabled(Nullable`1<bool> value);
    internal bool IsSetActionsEnabled();
    public List`1<string> get_AlarmActions();
    public void set_AlarmActions(List`1<string> value);
    internal bool IsSetAlarmActions();
    public string get_AlarmDescription();
    public void set_AlarmDescription(string value);
    internal bool IsSetAlarmDescription();
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public ComparisonOperator get_ComparisonOperator();
    public void set_ComparisonOperator(ComparisonOperator value);
    internal bool IsSetComparisonOperator();
    public Nullable`1<int> get_DatapointsToAlarm();
    public void set_DatapointsToAlarm(Nullable`1<int> value);
    internal bool IsSetDatapointsToAlarm();
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public string get_EvaluateLowSampleCountPercentile();
    public void set_EvaluateLowSampleCountPercentile(string value);
    internal bool IsSetEvaluateLowSampleCountPercentile();
    public Nullable`1<int> get_EvaluationPeriods();
    public void set_EvaluationPeriods(Nullable`1<int> value);
    internal bool IsSetEvaluationPeriods();
    public string get_ExtendedStatistic();
    public void set_ExtendedStatistic(string value);
    internal bool IsSetExtendedStatistic();
    public List`1<string> get_InsufficientDataActions();
    public void set_InsufficientDataActions(List`1<string> value);
    internal bool IsSetInsufficientDataActions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public List`1<MetricDataQuery> get_Metrics();
    public void set_Metrics(List`1<MetricDataQuery> value);
    internal bool IsSetMetrics();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public List`1<string> get_OKActions();
    public void set_OKActions(List`1<string> value);
    internal bool IsSetOKActions();
    public Nullable`1<int> get_Period();
    public void set_Period(Nullable`1<int> value);
    internal bool IsSetPeriod();
    public Statistic get_Statistic();
    public void set_Statistic(Statistic value);
    internal bool IsSetStatistic();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public Nullable`1<double> get_Threshold();
    public void set_Threshold(Nullable`1<double> value);
    internal bool IsSetThreshold();
    public string get_ThresholdMetricId();
    public void set_ThresholdMetricId(string value);
    internal bool IsSetThresholdMetricId();
    public string get_TreatMissingData();
    public void set_TreatMissingData(string value);
    internal bool IsSetTreatMissingData();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatch.Model.PutMetricAlarmResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.PutMetricDataRequest : AmazonCloudWatchRequest {
    private List`1<MetricDatum> _metricData;
    private string _awsNamespace;
    [AWSPropertyAttribute]
public List`1<MetricDatum> MetricData { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    public List`1<MetricDatum> get_MetricData();
    public void set_MetricData(List`1<MetricDatum> value);
    internal bool IsSetMetricData();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
}
public class Amazon.CloudWatch.Model.PutMetricDataResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.PutMetricStreamRequest : AmazonCloudWatchRequest {
    private List`1<MetricStreamFilter> _excludeFilters;
    private string _firehoseArn;
    private List`1<MetricStreamFilter> _includeFilters;
    private Nullable`1<bool> _includeLinkedAccountsMetrics;
    private string _name;
    private MetricStreamOutputFormat _outputFormat;
    private string _roleArn;
    private List`1<MetricStreamStatisticsConfiguration> _statisticsConfigurations;
    private List`1<Tag> _tags;
    public List`1<MetricStreamFilter> ExcludeFilters { get; public set; }
    [AWSPropertyAttribute]
public string FirehoseArn { get; public set; }
    public List`1<MetricStreamFilter> IncludeFilters { get; public set; }
    public Nullable`1<bool> IncludeLinkedAccountsMetrics { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public MetricStreamOutputFormat OutputFormat { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public List`1<MetricStreamStatisticsConfiguration> StatisticsConfigurations { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<MetricStreamFilter> get_ExcludeFilters();
    public void set_ExcludeFilters(List`1<MetricStreamFilter> value);
    internal bool IsSetExcludeFilters();
    public string get_FirehoseArn();
    public void set_FirehoseArn(string value);
    internal bool IsSetFirehoseArn();
    public List`1<MetricStreamFilter> get_IncludeFilters();
    public void set_IncludeFilters(List`1<MetricStreamFilter> value);
    internal bool IsSetIncludeFilters();
    public Nullable`1<bool> get_IncludeLinkedAccountsMetrics();
    public void set_IncludeLinkedAccountsMetrics(Nullable`1<bool> value);
    internal bool IsSetIncludeLinkedAccountsMetrics();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public MetricStreamOutputFormat get_OutputFormat();
    public void set_OutputFormat(MetricStreamOutputFormat value);
    internal bool IsSetOutputFormat();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public List`1<MetricStreamStatisticsConfiguration> get_StatisticsConfigurations();
    public void set_StatisticsConfigurations(List`1<MetricStreamStatisticsConfiguration> value);
    internal bool IsSetStatisticsConfigurations();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatch.Model.PutMetricStreamResponse : AmazonWebServiceResponse {
    private string _arn;
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
}
public class Amazon.CloudWatch.Model.Range : object {
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<DateTime> _startTime;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.CloudWatch.Model.ResourceNotFoundException : AmazonCloudWatchException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CloudWatch.Model.SetAlarmStateRequest : AmazonCloudWatchRequest {
    private string _alarmName;
    private string _stateReason;
    private string _stateReasonData;
    private StateValue _stateValue;
    [AWSPropertyAttribute]
public string AlarmName { get; public set; }
    [AWSPropertyAttribute]
public string StateReason { get; public set; }
    [AWSPropertyAttribute]
public string StateReasonData { get; public set; }
    [AWSPropertyAttribute]
public StateValue StateValue { get; public set; }
    public string get_AlarmName();
    public void set_AlarmName(string value);
    internal bool IsSetAlarmName();
    public string get_StateReason();
    public void set_StateReason(string value);
    internal bool IsSetStateReason();
    public string get_StateReasonData();
    public void set_StateReasonData(string value);
    internal bool IsSetStateReasonData();
    public StateValue get_StateValue();
    public void set_StateValue(StateValue value);
    internal bool IsSetStateValue();
}
public class Amazon.CloudWatch.Model.SetAlarmStateResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.SingleMetricAnomalyDetector : object {
    private string _accountId;
    private List`1<Dimension> _dimensions;
    private string _metricName;
    private string _awsNamespace;
    private string _stat;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dimension> Dimensions { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    [AWSPropertyAttribute]
public string Namespace { get; public set; }
    [AWSPropertyAttribute]
public string Stat { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public List`1<Dimension> get_Dimensions();
    public void set_Dimensions(List`1<Dimension> value);
    internal bool IsSetDimensions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_Namespace();
    public void set_Namespace(string value);
    internal bool IsSetNamespace();
    public string get_Stat();
    public void set_Stat(string value);
    internal bool IsSetStat();
}
public class Amazon.CloudWatch.Model.StartMetricStreamsRequest : AmazonCloudWatchRequest {
    private List`1<string> _names;
    [AWSPropertyAttribute]
public List`1<string> Names { get; public set; }
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
}
public class Amazon.CloudWatch.Model.StartMetricStreamsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.StatisticSet : object {
    private Nullable`1<double> _maximum;
    private Nullable`1<double> _minimum;
    private Nullable`1<double> _sampleCount;
    private Nullable`1<double> _sum;
    [AWSPropertyAttribute]
public Nullable`1<double> Maximum { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> Minimum { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> SampleCount { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> Sum { get; public set; }
    public Nullable`1<double> get_Maximum();
    public void set_Maximum(Nullable`1<double> value);
    internal bool IsSetMaximum();
    public Nullable`1<double> get_Minimum();
    public void set_Minimum(Nullable`1<double> value);
    internal bool IsSetMinimum();
    public Nullable`1<double> get_SampleCount();
    public void set_SampleCount(Nullable`1<double> value);
    internal bool IsSetSampleCount();
    public Nullable`1<double> get_Sum();
    public void set_Sum(Nullable`1<double> value);
    internal bool IsSetSum();
}
public class Amazon.CloudWatch.Model.StopMetricStreamsRequest : AmazonCloudWatchRequest {
    private List`1<string> _names;
    [AWSPropertyAttribute]
public List`1<string> Names { get; public set; }
    public List`1<string> get_Names();
    public void set_Names(List`1<string> value);
    internal bool IsSetNames();
}
public class Amazon.CloudWatch.Model.StopMetricStreamsResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudWatch.Model.TagResourceRequest : AmazonCloudWatchRequest {
    private string _resourceARN;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatch.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.Model.UntagResourceRequest : AmazonCloudWatchRequest {
    private string _resourceARN;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceARN { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceARN();
    public void set_ResourceARN(string value);
    internal bool IsSetResourceARN();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.CloudWatch.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatch.RecentlyActive : ConstantClass {
    public static RecentlyActive PT3H;
    public RecentlyActive(string value);
    private static RecentlyActive();
    public static RecentlyActive FindValue(string value);
    public static RecentlyActive op_Implicit(string value);
}
public class Amazon.CloudWatch.ScanBy : ConstantClass {
    public static ScanBy TimestampAscending;
    public static ScanBy TimestampDescending;
    public ScanBy(string value);
    private static ScanBy();
    public static ScanBy FindValue(string value);
    public static ScanBy op_Implicit(string value);
}
public class Amazon.CloudWatch.StandardUnit : ConstantClass {
    public static StandardUnit Bits;
    public static StandardUnit BitsSecond;
    public static StandardUnit Bytes;
    public static StandardUnit BytesSecond;
    public static StandardUnit Count;
    public static StandardUnit CountSecond;
    public static StandardUnit Gigabits;
    public static StandardUnit GigabitsSecond;
    public static StandardUnit Gigabytes;
    public static StandardUnit GigabytesSecond;
    public static StandardUnit Kilobits;
    public static StandardUnit KilobitsSecond;
    public static StandardUnit Kilobytes;
    public static StandardUnit KilobytesSecond;
    public static StandardUnit Megabits;
    public static StandardUnit MegabitsSecond;
    public static StandardUnit Megabytes;
    public static StandardUnit MegabytesSecond;
    public static StandardUnit Microseconds;
    public static StandardUnit Milliseconds;
    public static StandardUnit None;
    public static StandardUnit Percent;
    public static StandardUnit Seconds;
    public static StandardUnit Terabits;
    public static StandardUnit TerabitsSecond;
    public static StandardUnit Terabytes;
    public static StandardUnit TerabytesSecond;
    public StandardUnit(string value);
    private static StandardUnit();
    public static StandardUnit FindValue(string value);
    public static StandardUnit op_Implicit(string value);
}
public class Amazon.CloudWatch.StateValue : ConstantClass {
    public static StateValue ALARM;
    public static StateValue INSUFFICIENT_DATA;
    public static StateValue OK;
    public StateValue(string value);
    private static StateValue();
    public static StateValue FindValue(string value);
    public static StateValue op_Implicit(string value);
}
public class Amazon.CloudWatch.Statistic : ConstantClass {
    public static Statistic Average;
    public static Statistic Maximum;
    public static Statistic Minimum;
    public static Statistic SampleCount;
    public static Statistic Sum;
    public Statistic(string value);
    private static Statistic();
    public static Statistic FindValue(string value);
    public static Statistic op_Implicit(string value);
}
public class Amazon.CloudWatch.StatusCode : ConstantClass {
    public static StatusCode Complete;
    public static StatusCode Forbidden;
    public static StatusCode InternalError;
    public static StatusCode PartialData;
    public StatusCode(string value);
    private static StatusCode();
    public static StatusCode FindValue(string value);
    public static StatusCode op_Implicit(string value);
}
