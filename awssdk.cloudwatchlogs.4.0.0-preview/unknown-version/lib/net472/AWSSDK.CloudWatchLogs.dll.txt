public class Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ICloudWatchLogsPaginatorFactory _paginators;
    public ICloudWatchLogsPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonCloudWatchLogsClient(RegionEndpoint region);
    public AmazonCloudWatchLogsClient(AmazonCloudWatchLogsConfig config);
    public AmazonCloudWatchLogsClient(AWSCredentials credentials);
    public AmazonCloudWatchLogsClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonCloudWatchLogsClient(AWSCredentials credentials, AmazonCloudWatchLogsConfig clientConfig);
    public AmazonCloudWatchLogsClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonCloudWatchLogsClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonCloudWatchLogsClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonCloudWatchLogsConfig clientConfig);
    public AmazonCloudWatchLogsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonCloudWatchLogsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonCloudWatchLogsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonCloudWatchLogsConfig clientConfig);
    private static AmazonCloudWatchLogsClient();
    public sealed virtual ICloudWatchLogsPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    public virtual AssociateKmsKeyResponse AssociateKmsKey(AssociateKmsKeyRequest request);
    public virtual Task`1<AssociateKmsKeyResponse> AssociateKmsKeyAsync(AssociateKmsKeyRequest request, CancellationToken cancellationToken);
    public virtual CancelExportTaskResponse CancelExportTask(CancelExportTaskRequest request);
    public virtual Task`1<CancelExportTaskResponse> CancelExportTaskAsync(CancelExportTaskRequest request, CancellationToken cancellationToken);
    public virtual CreateDeliveryResponse CreateDelivery(CreateDeliveryRequest request);
    public virtual Task`1<CreateDeliveryResponse> CreateDeliveryAsync(CreateDeliveryRequest request, CancellationToken cancellationToken);
    public virtual CreateExportTaskResponse CreateExportTask(CreateExportTaskRequest request);
    public virtual Task`1<CreateExportTaskResponse> CreateExportTaskAsync(CreateExportTaskRequest request, CancellationToken cancellationToken);
    public virtual CreateLogAnomalyDetectorResponse CreateLogAnomalyDetector(CreateLogAnomalyDetectorRequest request);
    public virtual Task`1<CreateLogAnomalyDetectorResponse> CreateLogAnomalyDetectorAsync(CreateLogAnomalyDetectorRequest request, CancellationToken cancellationToken);
    public virtual CreateLogGroupResponse CreateLogGroup(CreateLogGroupRequest request);
    public virtual Task`1<CreateLogGroupResponse> CreateLogGroupAsync(CreateLogGroupRequest request, CancellationToken cancellationToken);
    public virtual CreateLogStreamResponse CreateLogStream(CreateLogStreamRequest request);
    public virtual Task`1<CreateLogStreamResponse> CreateLogStreamAsync(CreateLogStreamRequest request, CancellationToken cancellationToken);
    public virtual DeleteAccountPolicyResponse DeleteAccountPolicy(DeleteAccountPolicyRequest request);
    public virtual Task`1<DeleteAccountPolicyResponse> DeleteAccountPolicyAsync(DeleteAccountPolicyRequest request, CancellationToken cancellationToken);
    public virtual DeleteDataProtectionPolicyResponse DeleteDataProtectionPolicy(DeleteDataProtectionPolicyRequest request);
    public virtual Task`1<DeleteDataProtectionPolicyResponse> DeleteDataProtectionPolicyAsync(DeleteDataProtectionPolicyRequest request, CancellationToken cancellationToken);
    public virtual DeleteDeliveryResponse DeleteDelivery(DeleteDeliveryRequest request);
    public virtual Task`1<DeleteDeliveryResponse> DeleteDeliveryAsync(DeleteDeliveryRequest request, CancellationToken cancellationToken);
    public virtual DeleteDeliveryDestinationResponse DeleteDeliveryDestination(DeleteDeliveryDestinationRequest request);
    public virtual Task`1<DeleteDeliveryDestinationResponse> DeleteDeliveryDestinationAsync(DeleteDeliveryDestinationRequest request, CancellationToken cancellationToken);
    public virtual DeleteDeliveryDestinationPolicyResponse DeleteDeliveryDestinationPolicy(DeleteDeliveryDestinationPolicyRequest request);
    public virtual Task`1<DeleteDeliveryDestinationPolicyResponse> DeleteDeliveryDestinationPolicyAsync(DeleteDeliveryDestinationPolicyRequest request, CancellationToken cancellationToken);
    public virtual DeleteDeliverySourceResponse DeleteDeliverySource(DeleteDeliverySourceRequest request);
    public virtual Task`1<DeleteDeliverySourceResponse> DeleteDeliverySourceAsync(DeleteDeliverySourceRequest request, CancellationToken cancellationToken);
    public virtual DeleteDestinationResponse DeleteDestination(DeleteDestinationRequest request);
    public virtual Task`1<DeleteDestinationResponse> DeleteDestinationAsync(DeleteDestinationRequest request, CancellationToken cancellationToken);
    public virtual DeleteLogAnomalyDetectorResponse DeleteLogAnomalyDetector(DeleteLogAnomalyDetectorRequest request);
    public virtual Task`1<DeleteLogAnomalyDetectorResponse> DeleteLogAnomalyDetectorAsync(DeleteLogAnomalyDetectorRequest request, CancellationToken cancellationToken);
    public virtual DeleteLogGroupResponse DeleteLogGroup(DeleteLogGroupRequest request);
    public virtual Task`1<DeleteLogGroupResponse> DeleteLogGroupAsync(DeleteLogGroupRequest request, CancellationToken cancellationToken);
    public virtual DeleteLogStreamResponse DeleteLogStream(DeleteLogStreamRequest request);
    public virtual Task`1<DeleteLogStreamResponse> DeleteLogStreamAsync(DeleteLogStreamRequest request, CancellationToken cancellationToken);
    public virtual DeleteMetricFilterResponse DeleteMetricFilter(DeleteMetricFilterRequest request);
    public virtual Task`1<DeleteMetricFilterResponse> DeleteMetricFilterAsync(DeleteMetricFilterRequest request, CancellationToken cancellationToken);
    public virtual DeleteQueryDefinitionResponse DeleteQueryDefinition(DeleteQueryDefinitionRequest request);
    public virtual Task`1<DeleteQueryDefinitionResponse> DeleteQueryDefinitionAsync(DeleteQueryDefinitionRequest request, CancellationToken cancellationToken);
    public virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public virtual DeleteRetentionPolicyResponse DeleteRetentionPolicy(DeleteRetentionPolicyRequest request);
    public virtual Task`1<DeleteRetentionPolicyResponse> DeleteRetentionPolicyAsync(DeleteRetentionPolicyRequest request, CancellationToken cancellationToken);
    public virtual DeleteSubscriptionFilterResponse DeleteSubscriptionFilter(DeleteSubscriptionFilterRequest request);
    public virtual Task`1<DeleteSubscriptionFilterResponse> DeleteSubscriptionFilterAsync(DeleteSubscriptionFilterRequest request, CancellationToken cancellationToken);
    public virtual DescribeAccountPoliciesResponse DescribeAccountPolicies(DescribeAccountPoliciesRequest request);
    public virtual Task`1<DescribeAccountPoliciesResponse> DescribeAccountPoliciesAsync(DescribeAccountPoliciesRequest request, CancellationToken cancellationToken);
    public virtual DescribeDeliveriesResponse DescribeDeliveries(DescribeDeliveriesRequest request);
    public virtual Task`1<DescribeDeliveriesResponse> DescribeDeliveriesAsync(DescribeDeliveriesRequest request, CancellationToken cancellationToken);
    public virtual DescribeDeliveryDestinationsResponse DescribeDeliveryDestinations(DescribeDeliveryDestinationsRequest request);
    public virtual Task`1<DescribeDeliveryDestinationsResponse> DescribeDeliveryDestinationsAsync(DescribeDeliveryDestinationsRequest request, CancellationToken cancellationToken);
    public virtual DescribeDeliverySourcesResponse DescribeDeliverySources(DescribeDeliverySourcesRequest request);
    public virtual Task`1<DescribeDeliverySourcesResponse> DescribeDeliverySourcesAsync(DescribeDeliverySourcesRequest request, CancellationToken cancellationToken);
    public virtual DescribeDestinationsResponse DescribeDestinations(DescribeDestinationsRequest request);
    public virtual Task`1<DescribeDestinationsResponse> DescribeDestinationsAsync(DescribeDestinationsRequest request, CancellationToken cancellationToken);
    public virtual DescribeExportTasksResponse DescribeExportTasks(DescribeExportTasksRequest request);
    public virtual Task`1<DescribeExportTasksResponse> DescribeExportTasksAsync(DescribeExportTasksRequest request, CancellationToken cancellationToken);
    public virtual DescribeLogGroupsResponse DescribeLogGroups();
    public virtual DescribeLogGroupsResponse DescribeLogGroups(DescribeLogGroupsRequest request);
    public virtual Task`1<DescribeLogGroupsResponse> DescribeLogGroupsAsync(CancellationToken cancellationToken);
    public virtual Task`1<DescribeLogGroupsResponse> DescribeLogGroupsAsync(DescribeLogGroupsRequest request, CancellationToken cancellationToken);
    public virtual DescribeLogStreamsResponse DescribeLogStreams(DescribeLogStreamsRequest request);
    public virtual Task`1<DescribeLogStreamsResponse> DescribeLogStreamsAsync(DescribeLogStreamsRequest request, CancellationToken cancellationToken);
    public virtual DescribeMetricFiltersResponse DescribeMetricFilters(DescribeMetricFiltersRequest request);
    public virtual Task`1<DescribeMetricFiltersResponse> DescribeMetricFiltersAsync(DescribeMetricFiltersRequest request, CancellationToken cancellationToken);
    public virtual DescribeQueriesResponse DescribeQueries(DescribeQueriesRequest request);
    public virtual Task`1<DescribeQueriesResponse> DescribeQueriesAsync(DescribeQueriesRequest request, CancellationToken cancellationToken);
    public virtual DescribeQueryDefinitionsResponse DescribeQueryDefinitions(DescribeQueryDefinitionsRequest request);
    public virtual Task`1<DescribeQueryDefinitionsResponse> DescribeQueryDefinitionsAsync(DescribeQueryDefinitionsRequest request, CancellationToken cancellationToken);
    public virtual DescribeResourcePoliciesResponse DescribeResourcePolicies(DescribeResourcePoliciesRequest request);
    public virtual Task`1<DescribeResourcePoliciesResponse> DescribeResourcePoliciesAsync(DescribeResourcePoliciesRequest request, CancellationToken cancellationToken);
    public virtual DescribeSubscriptionFiltersResponse DescribeSubscriptionFilters(DescribeSubscriptionFiltersRequest request);
    public virtual Task`1<DescribeSubscriptionFiltersResponse> DescribeSubscriptionFiltersAsync(DescribeSubscriptionFiltersRequest request, CancellationToken cancellationToken);
    public virtual DisassociateKmsKeyResponse DisassociateKmsKey(DisassociateKmsKeyRequest request);
    public virtual Task`1<DisassociateKmsKeyResponse> DisassociateKmsKeyAsync(DisassociateKmsKeyRequest request, CancellationToken cancellationToken);
    public virtual FilterLogEventsResponse FilterLogEvents(FilterLogEventsRequest request);
    public virtual Task`1<FilterLogEventsResponse> FilterLogEventsAsync(FilterLogEventsRequest request, CancellationToken cancellationToken);
    public virtual GetDataProtectionPolicyResponse GetDataProtectionPolicy(GetDataProtectionPolicyRequest request);
    public virtual Task`1<GetDataProtectionPolicyResponse> GetDataProtectionPolicyAsync(GetDataProtectionPolicyRequest request, CancellationToken cancellationToken);
    public virtual GetDeliveryResponse GetDelivery(GetDeliveryRequest request);
    public virtual Task`1<GetDeliveryResponse> GetDeliveryAsync(GetDeliveryRequest request, CancellationToken cancellationToken);
    public virtual GetDeliveryDestinationResponse GetDeliveryDestination(GetDeliveryDestinationRequest request);
    public virtual Task`1<GetDeliveryDestinationResponse> GetDeliveryDestinationAsync(GetDeliveryDestinationRequest request, CancellationToken cancellationToken);
    public virtual GetDeliveryDestinationPolicyResponse GetDeliveryDestinationPolicy(GetDeliveryDestinationPolicyRequest request);
    public virtual Task`1<GetDeliveryDestinationPolicyResponse> GetDeliveryDestinationPolicyAsync(GetDeliveryDestinationPolicyRequest request, CancellationToken cancellationToken);
    public virtual GetDeliverySourceResponse GetDeliverySource(GetDeliverySourceRequest request);
    public virtual Task`1<GetDeliverySourceResponse> GetDeliverySourceAsync(GetDeliverySourceRequest request, CancellationToken cancellationToken);
    public virtual GetLogAnomalyDetectorResponse GetLogAnomalyDetector(GetLogAnomalyDetectorRequest request);
    public virtual Task`1<GetLogAnomalyDetectorResponse> GetLogAnomalyDetectorAsync(GetLogAnomalyDetectorRequest request, CancellationToken cancellationToken);
    public virtual GetLogEventsResponse GetLogEvents(GetLogEventsRequest request);
    public virtual Task`1<GetLogEventsResponse> GetLogEventsAsync(GetLogEventsRequest request, CancellationToken cancellationToken);
    public virtual GetLogGroupFieldsResponse GetLogGroupFields(GetLogGroupFieldsRequest request);
    public virtual Task`1<GetLogGroupFieldsResponse> GetLogGroupFieldsAsync(GetLogGroupFieldsRequest request, CancellationToken cancellationToken);
    public virtual GetLogRecordResponse GetLogRecord(GetLogRecordRequest request);
    public virtual Task`1<GetLogRecordResponse> GetLogRecordAsync(GetLogRecordRequest request, CancellationToken cancellationToken);
    public virtual GetQueryResultsResponse GetQueryResults(GetQueryResultsRequest request);
    public virtual Task`1<GetQueryResultsResponse> GetQueryResultsAsync(GetQueryResultsRequest request, CancellationToken cancellationToken);
    public virtual ListAnomaliesResponse ListAnomalies(ListAnomaliesRequest request);
    public virtual Task`1<ListAnomaliesResponse> ListAnomaliesAsync(ListAnomaliesRequest request, CancellationToken cancellationToken);
    public virtual ListLogAnomalyDetectorsResponse ListLogAnomalyDetectors(ListLogAnomalyDetectorsRequest request);
    public virtual Task`1<ListLogAnomalyDetectorsResponse> ListLogAnomalyDetectorsAsync(ListLogAnomalyDetectorsRequest request, CancellationToken cancellationToken);
    public virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the generic tagging API ListTagsForResource")]
public virtual ListTagsLogGroupResponse ListTagsLogGroup(ListTagsLogGroupRequest request);
    [ObsoleteAttribute("Please use the generic tagging API ListTagsForResource")]
public virtual Task`1<ListTagsLogGroupResponse> ListTagsLogGroupAsync(ListTagsLogGroupRequest request, CancellationToken cancellationToken);
    public virtual PutAccountPolicyResponse PutAccountPolicy(PutAccountPolicyRequest request);
    public virtual Task`1<PutAccountPolicyResponse> PutAccountPolicyAsync(PutAccountPolicyRequest request, CancellationToken cancellationToken);
    public virtual PutDataProtectionPolicyResponse PutDataProtectionPolicy(PutDataProtectionPolicyRequest request);
    public virtual Task`1<PutDataProtectionPolicyResponse> PutDataProtectionPolicyAsync(PutDataProtectionPolicyRequest request, CancellationToken cancellationToken);
    public virtual PutDeliveryDestinationResponse PutDeliveryDestination(PutDeliveryDestinationRequest request);
    public virtual Task`1<PutDeliveryDestinationResponse> PutDeliveryDestinationAsync(PutDeliveryDestinationRequest request, CancellationToken cancellationToken);
    public virtual PutDeliveryDestinationPolicyResponse PutDeliveryDestinationPolicy(PutDeliveryDestinationPolicyRequest request);
    public virtual Task`1<PutDeliveryDestinationPolicyResponse> PutDeliveryDestinationPolicyAsync(PutDeliveryDestinationPolicyRequest request, CancellationToken cancellationToken);
    public virtual PutDeliverySourceResponse PutDeliverySource(PutDeliverySourceRequest request);
    public virtual Task`1<PutDeliverySourceResponse> PutDeliverySourceAsync(PutDeliverySourceRequest request, CancellationToken cancellationToken);
    public virtual PutDestinationResponse PutDestination(PutDestinationRequest request);
    public virtual Task`1<PutDestinationResponse> PutDestinationAsync(PutDestinationRequest request, CancellationToken cancellationToken);
    public virtual PutDestinationPolicyResponse PutDestinationPolicy(PutDestinationPolicyRequest request);
    public virtual Task`1<PutDestinationPolicyResponse> PutDestinationPolicyAsync(PutDestinationPolicyRequest request, CancellationToken cancellationToken);
    public virtual PutLogEventsResponse PutLogEvents(PutLogEventsRequest request);
    public virtual Task`1<PutLogEventsResponse> PutLogEventsAsync(PutLogEventsRequest request, CancellationToken cancellationToken);
    public virtual PutMetricFilterResponse PutMetricFilter(PutMetricFilterRequest request);
    public virtual Task`1<PutMetricFilterResponse> PutMetricFilterAsync(PutMetricFilterRequest request, CancellationToken cancellationToken);
    public virtual PutQueryDefinitionResponse PutQueryDefinition(PutQueryDefinitionRequest request);
    public virtual Task`1<PutQueryDefinitionResponse> PutQueryDefinitionAsync(PutQueryDefinitionRequest request, CancellationToken cancellationToken);
    public virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public virtual PutRetentionPolicyResponse PutRetentionPolicy(PutRetentionPolicyRequest request);
    public virtual Task`1<PutRetentionPolicyResponse> PutRetentionPolicyAsync(PutRetentionPolicyRequest request, CancellationToken cancellationToken);
    public virtual PutSubscriptionFilterResponse PutSubscriptionFilter(PutSubscriptionFilterRequest request);
    public virtual Task`1<PutSubscriptionFilterResponse> PutSubscriptionFilterAsync(PutSubscriptionFilterRequest request, CancellationToken cancellationToken);
    public virtual StartLiveTailResponse StartLiveTail(StartLiveTailRequest request);
    public virtual Task`1<StartLiveTailResponse> StartLiveTailAsync(StartLiveTailRequest request, CancellationToken cancellationToken);
    public virtual StartQueryResponse StartQuery(StartQueryRequest request);
    public virtual Task`1<StartQueryResponse> StartQueryAsync(StartQueryRequest request, CancellationToken cancellationToken);
    public virtual StopQueryResponse StopQuery(StopQueryRequest request);
    public virtual Task`1<StopQueryResponse> StopQueryAsync(StopQueryRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the generic tagging API TagResource")]
public virtual TagLogGroupResponse TagLogGroup(TagLogGroupRequest request);
    [ObsoleteAttribute("Please use the generic tagging API TagResource")]
public virtual Task`1<TagLogGroupResponse> TagLogGroupAsync(TagLogGroupRequest request, CancellationToken cancellationToken);
    public virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public virtual TestMetricFilterResponse TestMetricFilter(TestMetricFilterRequest request);
    public virtual Task`1<TestMetricFilterResponse> TestMetricFilterAsync(TestMetricFilterRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the generic tagging API UntagResource")]
public virtual UntagLogGroupResponse UntagLogGroup(UntagLogGroupRequest request);
    [ObsoleteAttribute("Please use the generic tagging API UntagResource")]
public virtual Task`1<UntagLogGroupResponse> UntagLogGroupAsync(UntagLogGroupRequest request, CancellationToken cancellationToken);
    public virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public virtual UpdateAnomalyResponse UpdateAnomaly(UpdateAnomalyRequest request);
    public virtual Task`1<UpdateAnomalyResponse> UpdateAnomalyAsync(UpdateAnomalyRequest request, CancellationToken cancellationToken);
    public virtual UpdateLogAnomalyDetectorResponse UpdateLogAnomalyDetector(UpdateLogAnomalyDetectorRequest request);
    public virtual Task`1<UpdateLogAnomalyDetectorResponse> UpdateLogAnomalyDetectorAsync(UpdateLogAnomalyDetectorRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonCloudWatchLogsEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonCloudWatchLogsConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.CloudWatchLogs.AmazonCloudWatchLogsDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonCloudWatchLogsDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.CloudWatchLogs.AmazonCloudWatchLogsException : AmazonServiceException {
    public AmazonCloudWatchLogsException(string message);
    public AmazonCloudWatchLogsException(string message, Exception innerException);
    public AmazonCloudWatchLogsException(Exception innerException);
    public AmazonCloudWatchLogsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonCloudWatchLogsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AmazonCloudWatchLogsException(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.AmazonCloudWatchLogsRequest : AmazonWebServiceRequest {
}
public class Amazon.CloudWatchLogs.AnomalyDetectorStatus : ConstantClass {
    public static AnomalyDetectorStatus ANALYZING;
    public static AnomalyDetectorStatus DELETED;
    public static AnomalyDetectorStatus FAILED;
    public static AnomalyDetectorStatus INITIALIZING;
    public static AnomalyDetectorStatus PAUSED;
    public static AnomalyDetectorStatus TRAINING;
    public AnomalyDetectorStatus(string value);
    private static AnomalyDetectorStatus();
    public static AnomalyDetectorStatus FindValue(string value);
    public static AnomalyDetectorStatus op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.CloudWatchLogsEventStreamException : EventStreamException {
    public CloudWatchLogsEventStreamException(string message);
    public CloudWatchLogsEventStreamException(string message, Exception innerException);
    protected CloudWatchLogsEventStreamException(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.DataProtectionStatus : ConstantClass {
    public static DataProtectionStatus ACTIVATED;
    public static DataProtectionStatus ARCHIVED;
    public static DataProtectionStatus DELETED;
    public static DataProtectionStatus DISABLED;
    public DataProtectionStatus(string value);
    private static DataProtectionStatus();
    public static DataProtectionStatus FindValue(string value);
    public static DataProtectionStatus op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.DeliveryDestinationType : ConstantClass {
    public static DeliveryDestinationType CWL;
    public static DeliveryDestinationType FH;
    public static DeliveryDestinationType S3;
    public DeliveryDestinationType(string value);
    private static DeliveryDestinationType();
    public static DeliveryDestinationType FindValue(string value);
    public static DeliveryDestinationType op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.Distribution : ConstantClass {
    public static Distribution ByLogStream;
    public static Distribution Random;
    public Distribution(string value);
    private static Distribution();
    public static Distribution FindValue(string value);
    public static Distribution op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.Endpoints.CloudWatchLogsEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.CloudWatchLogs.EvaluationFrequency : ConstantClass {
    public static EvaluationFrequency FIFTEEN_MIN;
    public static EvaluationFrequency FIVE_MIN;
    public static EvaluationFrequency ONE_HOUR;
    public static EvaluationFrequency ONE_MIN;
    public static EvaluationFrequency TEN_MIN;
    public static EvaluationFrequency THIRTY_MIN;
    public EvaluationFrequency(string value);
    private static EvaluationFrequency();
    public static EvaluationFrequency FindValue(string value);
    public static EvaluationFrequency op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.ExportTaskStatusCode : ConstantClass {
    public static ExportTaskStatusCode CANCELLED;
    public static ExportTaskStatusCode COMPLETED;
    public static ExportTaskStatusCode FAILED;
    public static ExportTaskStatusCode PENDING;
    public static ExportTaskStatusCode PENDING_CANCEL;
    public static ExportTaskStatusCode RUNNING;
    public ExportTaskStatusCode(string value);
    private static ExportTaskStatusCode();
    public static ExportTaskStatusCode FindValue(string value);
    public static ExportTaskStatusCode op_Implicit(string value);
}
public interface Amazon.CloudWatchLogs.IAmazonCloudWatchLogs {
    public ICloudWatchLogsPaginatorFactory Paginators { get; }
    public abstract virtual ICloudWatchLogsPaginatorFactory get_Paginators();
    public abstract virtual AssociateKmsKeyResponse AssociateKmsKey(AssociateKmsKeyRequest request);
    public abstract virtual Task`1<AssociateKmsKeyResponse> AssociateKmsKeyAsync(AssociateKmsKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual CancelExportTaskResponse CancelExportTask(CancelExportTaskRequest request);
    public abstract virtual Task`1<CancelExportTaskResponse> CancelExportTaskAsync(CancelExportTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateDeliveryResponse CreateDelivery(CreateDeliveryRequest request);
    public abstract virtual Task`1<CreateDeliveryResponse> CreateDeliveryAsync(CreateDeliveryRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateExportTaskResponse CreateExportTask(CreateExportTaskRequest request);
    public abstract virtual Task`1<CreateExportTaskResponse> CreateExportTaskAsync(CreateExportTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateLogAnomalyDetectorResponse CreateLogAnomalyDetector(CreateLogAnomalyDetectorRequest request);
    public abstract virtual Task`1<CreateLogAnomalyDetectorResponse> CreateLogAnomalyDetectorAsync(CreateLogAnomalyDetectorRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateLogGroupResponse CreateLogGroup(CreateLogGroupRequest request);
    public abstract virtual Task`1<CreateLogGroupResponse> CreateLogGroupAsync(CreateLogGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateLogStreamResponse CreateLogStream(CreateLogStreamRequest request);
    public abstract virtual Task`1<CreateLogStreamResponse> CreateLogStreamAsync(CreateLogStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteAccountPolicyResponse DeleteAccountPolicy(DeleteAccountPolicyRequest request);
    public abstract virtual Task`1<DeleteAccountPolicyResponse> DeleteAccountPolicyAsync(DeleteAccountPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteDataProtectionPolicyResponse DeleteDataProtectionPolicy(DeleteDataProtectionPolicyRequest request);
    public abstract virtual Task`1<DeleteDataProtectionPolicyResponse> DeleteDataProtectionPolicyAsync(DeleteDataProtectionPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteDeliveryResponse DeleteDelivery(DeleteDeliveryRequest request);
    public abstract virtual Task`1<DeleteDeliveryResponse> DeleteDeliveryAsync(DeleteDeliveryRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteDeliveryDestinationResponse DeleteDeliveryDestination(DeleteDeliveryDestinationRequest request);
    public abstract virtual Task`1<DeleteDeliveryDestinationResponse> DeleteDeliveryDestinationAsync(DeleteDeliveryDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteDeliveryDestinationPolicyResponse DeleteDeliveryDestinationPolicy(DeleteDeliveryDestinationPolicyRequest request);
    public abstract virtual Task`1<DeleteDeliveryDestinationPolicyResponse> DeleteDeliveryDestinationPolicyAsync(DeleteDeliveryDestinationPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteDeliverySourceResponse DeleteDeliverySource(DeleteDeliverySourceRequest request);
    public abstract virtual Task`1<DeleteDeliverySourceResponse> DeleteDeliverySourceAsync(DeleteDeliverySourceRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteDestinationResponse DeleteDestination(DeleteDestinationRequest request);
    public abstract virtual Task`1<DeleteDestinationResponse> DeleteDestinationAsync(DeleteDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteLogAnomalyDetectorResponse DeleteLogAnomalyDetector(DeleteLogAnomalyDetectorRequest request);
    public abstract virtual Task`1<DeleteLogAnomalyDetectorResponse> DeleteLogAnomalyDetectorAsync(DeleteLogAnomalyDetectorRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteLogGroupResponse DeleteLogGroup(DeleteLogGroupRequest request);
    public abstract virtual Task`1<DeleteLogGroupResponse> DeleteLogGroupAsync(DeleteLogGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteLogStreamResponse DeleteLogStream(DeleteLogStreamRequest request);
    public abstract virtual Task`1<DeleteLogStreamResponse> DeleteLogStreamAsync(DeleteLogStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteMetricFilterResponse DeleteMetricFilter(DeleteMetricFilterRequest request);
    public abstract virtual Task`1<DeleteMetricFilterResponse> DeleteMetricFilterAsync(DeleteMetricFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteQueryDefinitionResponse DeleteQueryDefinition(DeleteQueryDefinitionRequest request);
    public abstract virtual Task`1<DeleteQueryDefinitionResponse> DeleteQueryDefinitionAsync(DeleteQueryDefinitionRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public abstract virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteRetentionPolicyResponse DeleteRetentionPolicy(DeleteRetentionPolicyRequest request);
    public abstract virtual Task`1<DeleteRetentionPolicyResponse> DeleteRetentionPolicyAsync(DeleteRetentionPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual DeleteSubscriptionFilterResponse DeleteSubscriptionFilter(DeleteSubscriptionFilterRequest request);
    public abstract virtual Task`1<DeleteSubscriptionFilterResponse> DeleteSubscriptionFilterAsync(DeleteSubscriptionFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeAccountPoliciesResponse DescribeAccountPolicies(DescribeAccountPoliciesRequest request);
    public abstract virtual Task`1<DescribeAccountPoliciesResponse> DescribeAccountPoliciesAsync(DescribeAccountPoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeDeliveriesResponse DescribeDeliveries(DescribeDeliveriesRequest request);
    public abstract virtual Task`1<DescribeDeliveriesResponse> DescribeDeliveriesAsync(DescribeDeliveriesRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeDeliveryDestinationsResponse DescribeDeliveryDestinations(DescribeDeliveryDestinationsRequest request);
    public abstract virtual Task`1<DescribeDeliveryDestinationsResponse> DescribeDeliveryDestinationsAsync(DescribeDeliveryDestinationsRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeDeliverySourcesResponse DescribeDeliverySources(DescribeDeliverySourcesRequest request);
    public abstract virtual Task`1<DescribeDeliverySourcesResponse> DescribeDeliverySourcesAsync(DescribeDeliverySourcesRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeDestinationsResponse DescribeDestinations(DescribeDestinationsRequest request);
    public abstract virtual Task`1<DescribeDestinationsResponse> DescribeDestinationsAsync(DescribeDestinationsRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeExportTasksResponse DescribeExportTasks(DescribeExportTasksRequest request);
    public abstract virtual Task`1<DescribeExportTasksResponse> DescribeExportTasksAsync(DescribeExportTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeLogGroupsResponse DescribeLogGroups();
    public abstract virtual DescribeLogGroupsResponse DescribeLogGroups(DescribeLogGroupsRequest request);
    public abstract virtual Task`1<DescribeLogGroupsResponse> DescribeLogGroupsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLogGroupsResponse> DescribeLogGroupsAsync(DescribeLogGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeLogStreamsResponse DescribeLogStreams(DescribeLogStreamsRequest request);
    public abstract virtual Task`1<DescribeLogStreamsResponse> DescribeLogStreamsAsync(DescribeLogStreamsRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeMetricFiltersResponse DescribeMetricFilters(DescribeMetricFiltersRequest request);
    public abstract virtual Task`1<DescribeMetricFiltersResponse> DescribeMetricFiltersAsync(DescribeMetricFiltersRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeQueriesResponse DescribeQueries(DescribeQueriesRequest request);
    public abstract virtual Task`1<DescribeQueriesResponse> DescribeQueriesAsync(DescribeQueriesRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeQueryDefinitionsResponse DescribeQueryDefinitions(DescribeQueryDefinitionsRequest request);
    public abstract virtual Task`1<DescribeQueryDefinitionsResponse> DescribeQueryDefinitionsAsync(DescribeQueryDefinitionsRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeResourcePoliciesResponse DescribeResourcePolicies(DescribeResourcePoliciesRequest request);
    public abstract virtual Task`1<DescribeResourcePoliciesResponse> DescribeResourcePoliciesAsync(DescribeResourcePoliciesRequest request, CancellationToken cancellationToken);
    public abstract virtual DescribeSubscriptionFiltersResponse DescribeSubscriptionFilters(DescribeSubscriptionFiltersRequest request);
    public abstract virtual Task`1<DescribeSubscriptionFiltersResponse> DescribeSubscriptionFiltersAsync(DescribeSubscriptionFiltersRequest request, CancellationToken cancellationToken);
    public abstract virtual DisassociateKmsKeyResponse DisassociateKmsKey(DisassociateKmsKeyRequest request);
    public abstract virtual Task`1<DisassociateKmsKeyResponse> DisassociateKmsKeyAsync(DisassociateKmsKeyRequest request, CancellationToken cancellationToken);
    public abstract virtual FilterLogEventsResponse FilterLogEvents(FilterLogEventsRequest request);
    public abstract virtual Task`1<FilterLogEventsResponse> FilterLogEventsAsync(FilterLogEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetDataProtectionPolicyResponse GetDataProtectionPolicy(GetDataProtectionPolicyRequest request);
    public abstract virtual Task`1<GetDataProtectionPolicyResponse> GetDataProtectionPolicyAsync(GetDataProtectionPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual GetDeliveryResponse GetDelivery(GetDeliveryRequest request);
    public abstract virtual Task`1<GetDeliveryResponse> GetDeliveryAsync(GetDeliveryRequest request, CancellationToken cancellationToken);
    public abstract virtual GetDeliveryDestinationResponse GetDeliveryDestination(GetDeliveryDestinationRequest request);
    public abstract virtual Task`1<GetDeliveryDestinationResponse> GetDeliveryDestinationAsync(GetDeliveryDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual GetDeliveryDestinationPolicyResponse GetDeliveryDestinationPolicy(GetDeliveryDestinationPolicyRequest request);
    public abstract virtual Task`1<GetDeliveryDestinationPolicyResponse> GetDeliveryDestinationPolicyAsync(GetDeliveryDestinationPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual GetDeliverySourceResponse GetDeliverySource(GetDeliverySourceRequest request);
    public abstract virtual Task`1<GetDeliverySourceResponse> GetDeliverySourceAsync(GetDeliverySourceRequest request, CancellationToken cancellationToken);
    public abstract virtual GetLogAnomalyDetectorResponse GetLogAnomalyDetector(GetLogAnomalyDetectorRequest request);
    public abstract virtual Task`1<GetLogAnomalyDetectorResponse> GetLogAnomalyDetectorAsync(GetLogAnomalyDetectorRequest request, CancellationToken cancellationToken);
    public abstract virtual GetLogEventsResponse GetLogEvents(GetLogEventsRequest request);
    public abstract virtual Task`1<GetLogEventsResponse> GetLogEventsAsync(GetLogEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetLogGroupFieldsResponse GetLogGroupFields(GetLogGroupFieldsRequest request);
    public abstract virtual Task`1<GetLogGroupFieldsResponse> GetLogGroupFieldsAsync(GetLogGroupFieldsRequest request, CancellationToken cancellationToken);
    public abstract virtual GetLogRecordResponse GetLogRecord(GetLogRecordRequest request);
    public abstract virtual Task`1<GetLogRecordResponse> GetLogRecordAsync(GetLogRecordRequest request, CancellationToken cancellationToken);
    public abstract virtual GetQueryResultsResponse GetQueryResults(GetQueryResultsRequest request);
    public abstract virtual Task`1<GetQueryResultsResponse> GetQueryResultsAsync(GetQueryResultsRequest request, CancellationToken cancellationToken);
    public abstract virtual ListAnomaliesResponse ListAnomalies(ListAnomaliesRequest request);
    public abstract virtual Task`1<ListAnomaliesResponse> ListAnomaliesAsync(ListAnomaliesRequest request, CancellationToken cancellationToken);
    public abstract virtual ListLogAnomalyDetectorsResponse ListLogAnomalyDetectors(ListLogAnomalyDetectorsRequest request);
    public abstract virtual Task`1<ListLogAnomalyDetectorsResponse> ListLogAnomalyDetectorsAsync(ListLogAnomalyDetectorsRequest request, CancellationToken cancellationToken);
    public abstract virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the generic tagging API ListTagsForResource")]
public abstract virtual ListTagsLogGroupResponse ListTagsLogGroup(ListTagsLogGroupRequest request);
    [ObsoleteAttribute("Please use the generic tagging API ListTagsForResource")]
public abstract virtual Task`1<ListTagsLogGroupResponse> ListTagsLogGroupAsync(ListTagsLogGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual PutAccountPolicyResponse PutAccountPolicy(PutAccountPolicyRequest request);
    public abstract virtual Task`1<PutAccountPolicyResponse> PutAccountPolicyAsync(PutAccountPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual PutDataProtectionPolicyResponse PutDataProtectionPolicy(PutDataProtectionPolicyRequest request);
    public abstract virtual Task`1<PutDataProtectionPolicyResponse> PutDataProtectionPolicyAsync(PutDataProtectionPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual PutDeliveryDestinationResponse PutDeliveryDestination(PutDeliveryDestinationRequest request);
    public abstract virtual Task`1<PutDeliveryDestinationResponse> PutDeliveryDestinationAsync(PutDeliveryDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual PutDeliveryDestinationPolicyResponse PutDeliveryDestinationPolicy(PutDeliveryDestinationPolicyRequest request);
    public abstract virtual Task`1<PutDeliveryDestinationPolicyResponse> PutDeliveryDestinationPolicyAsync(PutDeliveryDestinationPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual PutDeliverySourceResponse PutDeliverySource(PutDeliverySourceRequest request);
    public abstract virtual Task`1<PutDeliverySourceResponse> PutDeliverySourceAsync(PutDeliverySourceRequest request, CancellationToken cancellationToken);
    public abstract virtual PutDestinationResponse PutDestination(PutDestinationRequest request);
    public abstract virtual Task`1<PutDestinationResponse> PutDestinationAsync(PutDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual PutDestinationPolicyResponse PutDestinationPolicy(PutDestinationPolicyRequest request);
    public abstract virtual Task`1<PutDestinationPolicyResponse> PutDestinationPolicyAsync(PutDestinationPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual PutLogEventsResponse PutLogEvents(PutLogEventsRequest request);
    public abstract virtual Task`1<PutLogEventsResponse> PutLogEventsAsync(PutLogEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual PutMetricFilterResponse PutMetricFilter(PutMetricFilterRequest request);
    public abstract virtual Task`1<PutMetricFilterResponse> PutMetricFilterAsync(PutMetricFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual PutQueryDefinitionResponse PutQueryDefinition(PutQueryDefinitionRequest request);
    public abstract virtual Task`1<PutQueryDefinitionResponse> PutQueryDefinitionAsync(PutQueryDefinitionRequest request, CancellationToken cancellationToken);
    public abstract virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public abstract virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual PutRetentionPolicyResponse PutRetentionPolicy(PutRetentionPolicyRequest request);
    public abstract virtual Task`1<PutRetentionPolicyResponse> PutRetentionPolicyAsync(PutRetentionPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual PutSubscriptionFilterResponse PutSubscriptionFilter(PutSubscriptionFilterRequest request);
    public abstract virtual Task`1<PutSubscriptionFilterResponse> PutSubscriptionFilterAsync(PutSubscriptionFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual StartLiveTailResponse StartLiveTail(StartLiveTailRequest request);
    public abstract virtual Task`1<StartLiveTailResponse> StartLiveTailAsync(StartLiveTailRequest request, CancellationToken cancellationToken);
    public abstract virtual StartQueryResponse StartQuery(StartQueryRequest request);
    public abstract virtual Task`1<StartQueryResponse> StartQueryAsync(StartQueryRequest request, CancellationToken cancellationToken);
    public abstract virtual StopQueryResponse StopQuery(StopQueryRequest request);
    public abstract virtual Task`1<StopQueryResponse> StopQueryAsync(StopQueryRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the generic tagging API TagResource")]
public abstract virtual TagLogGroupResponse TagLogGroup(TagLogGroupRequest request);
    [ObsoleteAttribute("Please use the generic tagging API TagResource")]
public abstract virtual Task`1<TagLogGroupResponse> TagLogGroupAsync(TagLogGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual TagResourceResponse TagResource(TagResourceRequest request);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual TestMetricFilterResponse TestMetricFilter(TestMetricFilterRequest request);
    public abstract virtual Task`1<TestMetricFilterResponse> TestMetricFilterAsync(TestMetricFilterRequest request, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the generic tagging API UntagResource")]
public abstract virtual UntagLogGroupResponse UntagLogGroup(UntagLogGroupRequest request);
    [ObsoleteAttribute("Please use the generic tagging API UntagResource")]
public abstract virtual Task`1<UntagLogGroupResponse> UntagLogGroupAsync(UntagLogGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateAnomalyResponse UpdateAnomaly(UpdateAnomalyRequest request);
    public abstract virtual Task`1<UpdateAnomalyResponse> UpdateAnomalyAsync(UpdateAnomalyRequest request, CancellationToken cancellationToken);
    public abstract virtual UpdateLogAnomalyDetectorResponse UpdateLogAnomalyDetector(UpdateLogAnomalyDetectorRequest request);
    public abstract virtual Task`1<UpdateLogAnomalyDetectorResponse> UpdateLogAnomalyDetectorAsync(UpdateLogAnomalyDetectorRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.CloudWatchLogs.InheritedProperty : ConstantClass {
    public static InheritedProperty ACCOUNT_DATA_PROTECTION;
    public InheritedProperty(string value);
    private static InheritedProperty();
    public static InheritedProperty FindValue(string value);
    public static InheritedProperty op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.Internal.AmazonCloudWatchLogsEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.CloudWatchLogs.Internal.AmazonCloudWatchLogsEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.CloudWatchLogs.Internal.AmazonCloudWatchLogsMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.CloudWatchLogs.LogGroupClass : ConstantClass {
    public static LogGroupClass INFREQUENT_ACCESS;
    public static LogGroupClass STANDARD;
    public LogGroupClass(string value);
    private static LogGroupClass();
    public static LogGroupClass FindValue(string value);
    public static LogGroupClass op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.Model.AccessDeniedException : AmazonCloudWatchLogsException {
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception innerException);
    public AccessDeniedException(Exception innerException);
    public AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected AccessDeniedException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.AccountPolicy : object {
    private string _accountId;
    private Nullable`1<long> _lastUpdatedTime;
    private string _policyDocument;
    private string _policyName;
    private PolicyType _policyType;
    private Scope _scope;
    private string _selectionCriteria;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> LastUpdatedTime { get; public set; }
    public string PolicyDocument { get; public set; }
    public string PolicyName { get; public set; }
    public PolicyType PolicyType { get; public set; }
    public Scope Scope { get; public set; }
    public string SelectionCriteria { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Nullable`1<long> get_LastUpdatedTime();
    public void set_LastUpdatedTime(Nullable`1<long> value);
    internal bool IsSetLastUpdatedTime();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public PolicyType get_PolicyType();
    public void set_PolicyType(PolicyType value);
    internal bool IsSetPolicyType();
    public Scope get_Scope();
    public void set_Scope(Scope value);
    internal bool IsSetScope();
    public string get_SelectionCriteria();
    public void set_SelectionCriteria(string value);
    internal bool IsSetSelectionCriteria();
}
public class Amazon.CloudWatchLogs.Model.Anomaly : object {
    private Nullable`1<bool> _active;
    private string _anomalyDetectorArn;
    private string _anomalyId;
    private string _description;
    private Nullable`1<long> _firstSeen;
    private Dictionary`2<string, long> _histogram;
    private Nullable`1<bool> _isPatternLevelSuppression;
    private Nullable`1<long> _lastSeen;
    private List`1<string> _logGroupArnList;
    private List`1<LogEvent> _logSamples;
    private string _patternId;
    private string _patternRegex;
    private string _patternString;
    private List`1<PatternToken> _patternTokens;
    private string _priority;
    private State _state;
    private Nullable`1<bool> _suppressed;
    private Nullable`1<long> _suppressedDate;
    private Nullable`1<long> _suppressedUntil;
    [AWSPropertyAttribute]
public Nullable`1<bool> Active { get; public set; }
    [AWSPropertyAttribute]
public string AnomalyDetectorArn { get; public set; }
    [AWSPropertyAttribute]
public string AnomalyId { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> FirstSeen { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, long> Histogram { get; public set; }
    public Nullable`1<bool> IsPatternLevelSuppression { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> LastSeen { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogGroupArnList { get; public set; }
    [AWSPropertyAttribute]
public List`1<LogEvent> LogSamples { get; public set; }
    [AWSPropertyAttribute]
public string PatternId { get; public set; }
    [AWSPropertyAttribute]
public string PatternRegex { get; public set; }
    [AWSPropertyAttribute]
public string PatternString { get; public set; }
    [AWSPropertyAttribute]
public List`1<PatternToken> PatternTokens { get; public set; }
    [AWSPropertyAttribute]
public string Priority { get; public set; }
    [AWSPropertyAttribute]
public State State { get; public set; }
    public Nullable`1<bool> Suppressed { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> SuppressedDate { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> SuppressedUntil { get; public set; }
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    internal bool IsSetActive();
    public string get_AnomalyDetectorArn();
    public void set_AnomalyDetectorArn(string value);
    internal bool IsSetAnomalyDetectorArn();
    public string get_AnomalyId();
    public void set_AnomalyId(string value);
    internal bool IsSetAnomalyId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<long> get_FirstSeen();
    public void set_FirstSeen(Nullable`1<long> value);
    internal bool IsSetFirstSeen();
    public Dictionary`2<string, long> get_Histogram();
    public void set_Histogram(Dictionary`2<string, long> value);
    internal bool IsSetHistogram();
    public Nullable`1<bool> get_IsPatternLevelSuppression();
    public void set_IsPatternLevelSuppression(Nullable`1<bool> value);
    internal bool IsSetIsPatternLevelSuppression();
    public Nullable`1<long> get_LastSeen();
    public void set_LastSeen(Nullable`1<long> value);
    internal bool IsSetLastSeen();
    public List`1<string> get_LogGroupArnList();
    public void set_LogGroupArnList(List`1<string> value);
    internal bool IsSetLogGroupArnList();
    public List`1<LogEvent> get_LogSamples();
    public void set_LogSamples(List`1<LogEvent> value);
    internal bool IsSetLogSamples();
    public string get_PatternId();
    public void set_PatternId(string value);
    internal bool IsSetPatternId();
    public string get_PatternRegex();
    public void set_PatternRegex(string value);
    internal bool IsSetPatternRegex();
    public string get_PatternString();
    public void set_PatternString(string value);
    internal bool IsSetPatternString();
    public List`1<PatternToken> get_PatternTokens();
    public void set_PatternTokens(List`1<PatternToken> value);
    internal bool IsSetPatternTokens();
    public string get_Priority();
    public void set_Priority(string value);
    internal bool IsSetPriority();
    public State get_State();
    public void set_State(State value);
    internal bool IsSetState();
    public Nullable`1<bool> get_Suppressed();
    public void set_Suppressed(Nullable`1<bool> value);
    internal bool IsSetSuppressed();
    public Nullable`1<long> get_SuppressedDate();
    public void set_SuppressedDate(Nullable`1<long> value);
    internal bool IsSetSuppressedDate();
    public Nullable`1<long> get_SuppressedUntil();
    public void set_SuppressedUntil(Nullable`1<long> value);
    internal bool IsSetSuppressedUntil();
}
public class Amazon.CloudWatchLogs.Model.AnomalyDetector : object {
    private string _anomalyDetectorArn;
    private AnomalyDetectorStatus _anomalyDetectorStatus;
    private Nullable`1<long> _anomalyVisibilityTime;
    private Nullable`1<long> _creationTimeStamp;
    private string _detectorName;
    private EvaluationFrequency _evaluationFrequency;
    private string _filterPattern;
    private string _kmsKeyId;
    private Nullable`1<long> _lastModifiedTimeStamp;
    private List`1<string> _logGroupArnList;
    [AWSPropertyAttribute]
public string AnomalyDetectorArn { get; public set; }
    public AnomalyDetectorStatus AnomalyDetectorStatus { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> AnomalyVisibilityTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> CreationTimeStamp { get; public set; }
    [AWSPropertyAttribute]
public string DetectorName { get; public set; }
    public EvaluationFrequency EvaluationFrequency { get; public set; }
    [AWSPropertyAttribute]
public string FilterPattern { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> LastModifiedTimeStamp { get; public set; }
    public List`1<string> LogGroupArnList { get; public set; }
    public string get_AnomalyDetectorArn();
    public void set_AnomalyDetectorArn(string value);
    internal bool IsSetAnomalyDetectorArn();
    public AnomalyDetectorStatus get_AnomalyDetectorStatus();
    public void set_AnomalyDetectorStatus(AnomalyDetectorStatus value);
    internal bool IsSetAnomalyDetectorStatus();
    public Nullable`1<long> get_AnomalyVisibilityTime();
    public void set_AnomalyVisibilityTime(Nullable`1<long> value);
    internal bool IsSetAnomalyVisibilityTime();
    public Nullable`1<long> get_CreationTimeStamp();
    public void set_CreationTimeStamp(Nullable`1<long> value);
    internal bool IsSetCreationTimeStamp();
    public string get_DetectorName();
    public void set_DetectorName(string value);
    internal bool IsSetDetectorName();
    public EvaluationFrequency get_EvaluationFrequency();
    public void set_EvaluationFrequency(EvaluationFrequency value);
    internal bool IsSetEvaluationFrequency();
    public string get_FilterPattern();
    public void set_FilterPattern(string value);
    internal bool IsSetFilterPattern();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<long> get_LastModifiedTimeStamp();
    public void set_LastModifiedTimeStamp(Nullable`1<long> value);
    internal bool IsSetLastModifiedTimeStamp();
    public List`1<string> get_LogGroupArnList();
    public void set_LogGroupArnList(List`1<string> value);
    internal bool IsSetLogGroupArnList();
}
public class Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest : AmazonCloudWatchLogsRequest {
    private string _kmsKeyId;
    private string _logGroupName;
    private string _resourceIdentifier;
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string ResourceIdentifier { get; public set; }
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_ResourceIdentifier();
    public void set_ResourceIdentifier(string value);
    internal bool IsSetResourceIdentifier();
}
public class Amazon.CloudWatchLogs.Model.AssociateKmsKeyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.CancelExportTaskRequest : AmazonCloudWatchLogsRequest {
    private string _taskId;
    [AWSPropertyAttribute]
public string TaskId { get; public set; }
    public string get_TaskId();
    public void set_TaskId(string value);
    internal bool IsSetTaskId();
}
public class Amazon.CloudWatchLogs.Model.CancelExportTaskResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.CloudWatchLogsPaginatorFactory : object {
    private IAmazonCloudWatchLogs client;
    internal CloudWatchLogsPaginatorFactory(IAmazonCloudWatchLogs client);
    public sealed virtual IDescribeDeliveriesPaginator DescribeDeliveries(DescribeDeliveriesRequest request);
    public sealed virtual IDescribeDeliveryDestinationsPaginator DescribeDeliveryDestinations(DescribeDeliveryDestinationsRequest request);
    public sealed virtual IDescribeDeliverySourcesPaginator DescribeDeliverySources(DescribeDeliverySourcesRequest request);
    public sealed virtual IDescribeDestinationsPaginator DescribeDestinations(DescribeDestinationsRequest request);
    public sealed virtual IDescribeLogGroupsPaginator DescribeLogGroups(DescribeLogGroupsRequest request);
    public sealed virtual IDescribeLogStreamsPaginator DescribeLogStreams(DescribeLogStreamsRequest request);
    public sealed virtual IDescribeMetricFiltersPaginator DescribeMetricFilters(DescribeMetricFiltersRequest request);
    public sealed virtual IDescribeSubscriptionFiltersPaginator DescribeSubscriptionFilters(DescribeSubscriptionFiltersRequest request);
    public sealed virtual IFilterLogEventsPaginator FilterLogEvents(FilterLogEventsRequest request);
    public sealed virtual IGetLogEventsPaginator GetLogEvents(GetLogEventsRequest request);
    public sealed virtual IListAnomaliesPaginator ListAnomalies(ListAnomaliesRequest request);
    public sealed virtual IListLogAnomalyDetectorsPaginator ListLogAnomalyDetectors(ListLogAnomalyDetectorsRequest request);
}
public class Amazon.CloudWatchLogs.Model.ConflictException : AmazonCloudWatchLogsException {
    public ConflictException(string message);
    public ConflictException(string message, Exception innerException);
    public ConflictException(Exception innerException);
    public ConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ConflictException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.CreateDeliveryRequest : AmazonCloudWatchLogsRequest {
    private string _deliveryDestinationArn;
    private string _deliverySourceName;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string DeliveryDestinationArn { get; public set; }
    [AWSPropertyAttribute]
public string DeliverySourceName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_DeliveryDestinationArn();
    public void set_DeliveryDestinationArn(string value);
    internal bool IsSetDeliveryDestinationArn();
    public string get_DeliverySourceName();
    public void set_DeliverySourceName(string value);
    internal bool IsSetDeliverySourceName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.CreateDeliveryResponse : AmazonWebServiceResponse {
    private Delivery _delivery;
    public Delivery Delivery { get; public set; }
    public Delivery get_Delivery();
    public void set_Delivery(Delivery value);
    internal bool IsSetDelivery();
}
public class Amazon.CloudWatchLogs.Model.CreateExportTaskRequest : AmazonCloudWatchLogsRequest {
    private string _destination;
    private string _destinationPrefix;
    private Nullable`1<long> _from;
    private string _logGroupName;
    private string _logStreamNamePrefix;
    private string _taskName;
    private Nullable`1<long> _to;
    [AWSPropertyAttribute]
public string Destination { get; public set; }
    public string DestinationPrefix { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> From { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamNamePrefix { get; public set; }
    [AWSPropertyAttribute]
public string TaskName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> To { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public string get_DestinationPrefix();
    public void set_DestinationPrefix(string value);
    internal bool IsSetDestinationPrefix();
    public Nullable`1<long> get_From();
    public void set_From(Nullable`1<long> value);
    internal bool IsSetFrom();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_LogStreamNamePrefix();
    public void set_LogStreamNamePrefix(string value);
    internal bool IsSetLogStreamNamePrefix();
    public string get_TaskName();
    public void set_TaskName(string value);
    internal bool IsSetTaskName();
    public Nullable`1<long> get_To();
    public void set_To(Nullable`1<long> value);
    internal bool IsSetTo();
}
public class Amazon.CloudWatchLogs.Model.CreateExportTaskResponse : AmazonWebServiceResponse {
    private string _taskId;
    [AWSPropertyAttribute]
public string TaskId { get; public set; }
    public string get_TaskId();
    public void set_TaskId(string value);
    internal bool IsSetTaskId();
}
public class Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<long> _anomalyVisibilityTime;
    private string _detectorName;
    private EvaluationFrequency _evaluationFrequency;
    private string _filterPattern;
    private string _kmsKeyId;
    private List`1<string> _logGroupArnList;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public Nullable`1<long> AnomalyVisibilityTime { get; public set; }
    [AWSPropertyAttribute]
public string DetectorName { get; public set; }
    public EvaluationFrequency EvaluationFrequency { get; public set; }
    [AWSPropertyAttribute]
public string FilterPattern { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogGroupArnList { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Nullable`1<long> get_AnomalyVisibilityTime();
    public void set_AnomalyVisibilityTime(Nullable`1<long> value);
    internal bool IsSetAnomalyVisibilityTime();
    public string get_DetectorName();
    public void set_DetectorName(string value);
    internal bool IsSetDetectorName();
    public EvaluationFrequency get_EvaluationFrequency();
    public void set_EvaluationFrequency(EvaluationFrequency value);
    internal bool IsSetEvaluationFrequency();
    public string get_FilterPattern();
    public void set_FilterPattern(string value);
    internal bool IsSetFilterPattern();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public List`1<string> get_LogGroupArnList();
    public void set_LogGroupArnList(List`1<string> value);
    internal bool IsSetLogGroupArnList();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.CreateLogAnomalyDetectorResponse : AmazonWebServiceResponse {
    private string _anomalyDetectorArn;
    [AWSPropertyAttribute]
public string AnomalyDetectorArn { get; public set; }
    public string get_AnomalyDetectorArn();
    public void set_AnomalyDetectorArn(string value);
    internal bool IsSetAnomalyDetectorArn();
}
public class Amazon.CloudWatchLogs.Model.CreateLogGroupRequest : AmazonCloudWatchLogsRequest {
    private string _kmsKeyId;
    private LogGroupClass _logGroupClass;
    private string _logGroupName;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public LogGroupClass LogGroupClass { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public CreateLogGroupRequest(string logGroupName);
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public LogGroupClass get_LogGroupClass();
    public void set_LogGroupClass(LogGroupClass value);
    internal bool IsSetLogGroupClass();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.CreateLogGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.CreateLogStreamRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupName;
    private string _logStreamName;
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamName { get; public set; }
    public CreateLogStreamRequest(string logGroupName, string logStreamName);
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_LogStreamName();
    public void set_LogStreamName(string value);
    internal bool IsSetLogStreamName();
}
public class Amazon.CloudWatchLogs.Model.CreateLogStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException : AmazonCloudWatchLogsException {
    private string _expectedSequenceToken;
    [AWSPropertyAttribute]
public string ExpectedSequenceToken { get; public set; }
    public DataAlreadyAcceptedException(string message);
    public DataAlreadyAcceptedException(string message, Exception innerException);
    public DataAlreadyAcceptedException(Exception innerException);
    public DataAlreadyAcceptedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DataAlreadyAcceptedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected DataAlreadyAcceptedException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_ExpectedSequenceToken();
    public void set_ExpectedSequenceToken(string value);
    internal bool IsSetExpectedSequenceToken();
}
public class Amazon.CloudWatchLogs.Model.DeleteAccountPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _policyName;
    private PolicyType _policyType;
    [AWSPropertyAttribute]
public string PolicyName { get; public set; }
    [AWSPropertyAttribute]
public PolicyType PolicyType { get; public set; }
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public PolicyType get_PolicyType();
    public void set_PolicyType(PolicyType value);
    internal bool IsSetPolicyType();
}
public class Amazon.CloudWatchLogs.Model.DeleteAccountPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteDataProtectionPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupIdentifier;
    [AWSPropertyAttribute]
public string LogGroupIdentifier { get; public set; }
    public string get_LogGroupIdentifier();
    public void set_LogGroupIdentifier(string value);
    internal bool IsSetLogGroupIdentifier();
}
public class Amazon.CloudWatchLogs.Model.DeleteDataProtectionPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _deliveryDestinationName;
    [AWSPropertyAttribute]
public string DeliveryDestinationName { get; public set; }
    public string get_DeliveryDestinationName();
    public void set_DeliveryDestinationName(string value);
    internal bool IsSetDeliveryDestinationName();
}
public class Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationRequest : AmazonCloudWatchLogsRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudWatchLogs.Model.DeleteDeliveryDestinationResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteDeliveryRequest : AmazonCloudWatchLogsRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudWatchLogs.Model.DeleteDeliveryResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteDeliverySourceRequest : AmazonCloudWatchLogsRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudWatchLogs.Model.DeleteDeliverySourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteDestinationRequest : AmazonCloudWatchLogsRequest {
    private string _destinationName;
    [AWSPropertyAttribute]
public string DestinationName { get; public set; }
    public string get_DestinationName();
    public void set_DestinationName(string value);
    internal bool IsSetDestinationName();
}
public class Amazon.CloudWatchLogs.Model.DeleteDestinationResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteLogAnomalyDetectorRequest : AmazonCloudWatchLogsRequest {
    private string _anomalyDetectorArn;
    [AWSPropertyAttribute]
public string AnomalyDetectorArn { get; public set; }
    public string get_AnomalyDetectorArn();
    public void set_AnomalyDetectorArn(string value);
    internal bool IsSetAnomalyDetectorArn();
}
public class Amazon.CloudWatchLogs.Model.DeleteLogAnomalyDetectorResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupName;
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    public DeleteLogGroupRequest(string logGroupName);
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
}
public class Amazon.CloudWatchLogs.Model.DeleteLogGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupName;
    private string _logStreamName;
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamName { get; public set; }
    public DeleteLogStreamRequest(string logGroupName, string logStreamName);
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_LogStreamName();
    public void set_LogStreamName(string value);
    internal bool IsSetLogStreamName();
}
public class Amazon.CloudWatchLogs.Model.DeleteLogStreamResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest : AmazonCloudWatchLogsRequest {
    private string _filterName;
    private string _logGroupName;
    [AWSPropertyAttribute]
public string FilterName { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    public DeleteMetricFilterRequest(string logGroupName, string filterName);
    public string get_FilterName();
    public void set_FilterName(string value);
    internal bool IsSetFilterName();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
}
public class Amazon.CloudWatchLogs.Model.DeleteMetricFilterResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionRequest : AmazonCloudWatchLogsRequest {
    private string _queryDefinitionId;
    [AWSPropertyAttribute]
public string QueryDefinitionId { get; public set; }
    public string get_QueryDefinitionId();
    public void set_QueryDefinitionId(string value);
    internal bool IsSetQueryDefinitionId();
}
public class Amazon.CloudWatchLogs.Model.DeleteQueryDefinitionResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _success;
    public Nullable`1<bool> Success { get; public set; }
    public Nullable`1<bool> get_Success();
    public void set_Success(Nullable`1<bool> value);
    internal bool IsSetSuccess();
}
public class Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest : AmazonCloudWatchLogsRequest {
    private string _policyName;
    public string PolicyName { get; public set; }
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.CloudWatchLogs.Model.DeleteResourcePolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupName;
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    public DeleteRetentionPolicyRequest(string logGroupName);
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
}
public class Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest : AmazonCloudWatchLogsRequest {
    private string _filterName;
    private string _logGroupName;
    [AWSPropertyAttribute]
public string FilterName { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    public string get_FilterName();
    public void set_FilterName(string value);
    internal bool IsSetFilterName();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
}
public class Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.Delivery : object {
    private string _arn;
    private string _deliveryDestinationArn;
    private DeliveryDestinationType _deliveryDestinationType;
    private string _deliverySourceName;
    private string _id;
    private Dictionary`2<string, string> _tags;
    public string Arn { get; public set; }
    public string DeliveryDestinationArn { get; public set; }
    public DeliveryDestinationType DeliveryDestinationType { get; public set; }
    [AWSPropertyAttribute]
public string DeliverySourceName { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_DeliveryDestinationArn();
    public void set_DeliveryDestinationArn(string value);
    internal bool IsSetDeliveryDestinationArn();
    public DeliveryDestinationType get_DeliveryDestinationType();
    public void set_DeliveryDestinationType(DeliveryDestinationType value);
    internal bool IsSetDeliveryDestinationType();
    public string get_DeliverySourceName();
    public void set_DeliverySourceName(string value);
    internal bool IsSetDeliverySourceName();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.DeliveryDestination : object {
    private string _arn;
    private DeliveryDestinationConfiguration _deliveryDestinationConfiguration;
    private DeliveryDestinationType _deliveryDestinationType;
    private string _name;
    private OutputFormat _outputFormat;
    private Dictionary`2<string, string> _tags;
    public string Arn { get; public set; }
    public DeliveryDestinationConfiguration DeliveryDestinationConfiguration { get; public set; }
    public DeliveryDestinationType DeliveryDestinationType { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public OutputFormat OutputFormat { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public DeliveryDestinationConfiguration get_DeliveryDestinationConfiguration();
    public void set_DeliveryDestinationConfiguration(DeliveryDestinationConfiguration value);
    internal bool IsSetDeliveryDestinationConfiguration();
    public DeliveryDestinationType get_DeliveryDestinationType();
    public void set_DeliveryDestinationType(DeliveryDestinationType value);
    internal bool IsSetDeliveryDestinationType();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public OutputFormat get_OutputFormat();
    public void set_OutputFormat(OutputFormat value);
    internal bool IsSetOutputFormat();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.DeliveryDestinationConfiguration : object {
    private string _destinationResourceArn;
    [AWSPropertyAttribute]
public string DestinationResourceArn { get; public set; }
    public string get_DestinationResourceArn();
    public void set_DestinationResourceArn(string value);
    internal bool IsSetDestinationResourceArn();
}
public class Amazon.CloudWatchLogs.Model.DeliverySource : object {
    private string _arn;
    private string _logType;
    private string _name;
    private List`1<string> _resourceArns;
    private string _service;
    private Dictionary`2<string, string> _tags;
    public string Arn { get; public set; }
    [AWSPropertyAttribute]
public string LogType { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public List`1<string> ResourceArns { get; public set; }
    [AWSPropertyAttribute]
public string Service { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public string get_LogType();
    public void set_LogType(string value);
    internal bool IsSetLogType();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_ResourceArns();
    public void set_ResourceArns(List`1<string> value);
    internal bool IsSetResourceArns();
    public string get_Service();
    public void set_Service(string value);
    internal bool IsSetService();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesRequest : AmazonCloudWatchLogsRequest {
    private List`1<string> _accountIdentifiers;
    private string _policyName;
    private PolicyType _policyType;
    [AWSPropertyAttribute]
public List`1<string> AccountIdentifiers { get; public set; }
    public string PolicyName { get; public set; }
    [AWSPropertyAttribute]
public PolicyType PolicyType { get; public set; }
    public List`1<string> get_AccountIdentifiers();
    public void set_AccountIdentifiers(List`1<string> value);
    internal bool IsSetAccountIdentifiers();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public PolicyType get_PolicyType();
    public void set_PolicyType(PolicyType value);
    internal bool IsSetPolicyType();
}
public class Amazon.CloudWatchLogs.Model.DescribeAccountPoliciesResponse : AmazonWebServiceResponse {
    private List`1<AccountPolicy> _accountPolicies;
    public List`1<AccountPolicy> AccountPolicies { get; public set; }
    public List`1<AccountPolicy> get_AccountPolicies();
    public void set_AccountPolicies(List`1<AccountPolicy> value);
    internal bool IsSetAccountPolicies();
}
internal class Amazon.CloudWatchLogs.Model.DescribeDeliveriesPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private DescribeDeliveriesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDeliveriesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Delivery> Deliveries { get; }
    internal DescribeDeliveriesPaginator(IAmazonCloudWatchLogs client, DescribeDeliveriesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDeliveriesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Delivery> get_Deliveries();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.DescribeDeliveriesPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-DescribeDeliveriesResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeDeliveriesResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.DescribeDeliveriesResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.DescribeDeliveriesRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<int> _limit;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.DescribeDeliveriesResponse : AmazonWebServiceResponse {
    private List`1<Delivery> _deliveries;
    private string _nextToken;
    public List`1<Delivery> Deliveries { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Delivery> get_Deliveries();
    public void set_Deliveries(List`1<Delivery> value);
    internal bool IsSetDeliveries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private DescribeDeliveryDestinationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDeliveryDestinationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DeliveryDestination> DeliveryDestinations { get; }
    internal DescribeDeliveryDestinationsPaginator(IAmazonCloudWatchLogs client, DescribeDeliveryDestinationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDeliveryDestinationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DeliveryDestination> get_DeliveryDestinations();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-DescribeDeliveryDestinationsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeDeliveryDestinationsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<int> _limit;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.DescribeDeliveryDestinationsResponse : AmazonWebServiceResponse {
    private List`1<DeliveryDestination> _deliveryDestinations;
    private string _nextToken;
    public List`1<DeliveryDestination> DeliveryDestinations { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<DeliveryDestination> get_DeliveryDestinations();
    public void set_DeliveryDestinations(List`1<DeliveryDestination> value);
    internal bool IsSetDeliveryDestinations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private DescribeDeliverySourcesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDeliverySourcesResponse> Responses { get; }
    public IPaginatedEnumerable`1<DeliverySource> DeliverySources { get; }
    internal DescribeDeliverySourcesPaginator(IAmazonCloudWatchLogs client, DescribeDeliverySourcesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDeliverySourcesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DeliverySource> get_DeliverySources();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-DescribeDeliverySourcesResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeDeliverySourcesResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<int> _limit;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.DescribeDeliverySourcesResponse : AmazonWebServiceResponse {
    private List`1<DeliverySource> _deliverySources;
    private string _nextToken;
    public List`1<DeliverySource> DeliverySources { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<DeliverySource> get_DeliverySources();
    public void set_DeliverySources(List`1<DeliverySource> value);
    internal bool IsSetDeliverySources();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatchLogs.Model.DescribeDestinationsPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private DescribeDestinationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDestinationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Destination> Destinations { get; }
    internal DescribeDestinationsPaginator(IAmazonCloudWatchLogs client, DescribeDestinationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDestinationsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Destination> get_Destinations();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.DescribeDestinationsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-DescribeDestinationsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeDestinationsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.DescribeDestinationsResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest : AmazonCloudWatchLogsRequest {
    private string _destinationNamePrefix;
    private Nullable`1<int> _limit;
    private string _nextToken;
    [AWSPropertyAttribute]
public string DestinationNamePrefix { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_DestinationNamePrefix();
    public void set_DestinationNamePrefix(string value);
    internal bool IsSetDestinationNamePrefix();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.DescribeDestinationsResponse : AmazonWebServiceResponse {
    private List`1<Destination> _destinations;
    private string _nextToken;
    public List`1<Destination> Destinations { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Destination> get_Destinations();
    public void set_Destinations(List`1<Destination> value);
    internal bool IsSetDestinations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<int> _limit;
    private string _nextToken;
    private ExportTaskStatusCode _statusCode;
    private string _taskId;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public ExportTaskStatusCode StatusCode { get; public set; }
    [AWSPropertyAttribute]
public string TaskId { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public ExportTaskStatusCode get_StatusCode();
    public void set_StatusCode(ExportTaskStatusCode value);
    internal bool IsSetStatusCode();
    public string get_TaskId();
    public void set_TaskId(string value);
    internal bool IsSetTaskId();
}
public class Amazon.CloudWatchLogs.Model.DescribeExportTasksResponse : AmazonWebServiceResponse {
    private List`1<ExportTask> _exportTasks;
    private string _nextToken;
    public List`1<ExportTask> ExportTasks { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<ExportTask> get_ExportTasks();
    public void set_ExportTasks(List`1<ExportTask> value);
    internal bool IsSetExportTasks();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatchLogs.Model.DescribeLogGroupsPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private DescribeLogGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLogGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LogGroup> LogGroups { get; }
    internal DescribeLogGroupsPaginator(IAmazonCloudWatchLogs client, DescribeLogGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLogGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LogGroup> get_LogGroups();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.DescribeLogGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-DescribeLogGroupsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeLogGroupsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.DescribeLogGroupsResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest : AmazonCloudWatchLogsRequest {
    private List`1<string> _accountIdentifiers;
    private Nullable`1<bool> _includeLinkedAccounts;
    private Nullable`1<int> _limit;
    private LogGroupClass _logGroupClass;
    private string _logGroupNamePattern;
    private string _logGroupNamePrefix;
    private string _nextToken;
    [AWSPropertyAttribute]
public List`1<string> AccountIdentifiers { get; public set; }
    public Nullable`1<bool> IncludeLinkedAccounts { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    public LogGroupClass LogGroupClass { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupNamePattern { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupNamePrefix { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<string> get_AccountIdentifiers();
    public void set_AccountIdentifiers(List`1<string> value);
    internal bool IsSetAccountIdentifiers();
    public Nullable`1<bool> get_IncludeLinkedAccounts();
    public void set_IncludeLinkedAccounts(Nullable`1<bool> value);
    internal bool IsSetIncludeLinkedAccounts();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public LogGroupClass get_LogGroupClass();
    public void set_LogGroupClass(LogGroupClass value);
    internal bool IsSetLogGroupClass();
    public string get_LogGroupNamePattern();
    public void set_LogGroupNamePattern(string value);
    internal bool IsSetLogGroupNamePattern();
    public string get_LogGroupNamePrefix();
    public void set_LogGroupNamePrefix(string value);
    internal bool IsSetLogGroupNamePrefix();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.DescribeLogGroupsResponse : AmazonWebServiceResponse {
    private List`1<LogGroup> _logGroups;
    private string _nextToken;
    public List`1<LogGroup> LogGroups { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<LogGroup> get_LogGroups();
    public void set_LogGroups(List`1<LogGroup> value);
    internal bool IsSetLogGroups();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatchLogs.Model.DescribeLogStreamsPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private DescribeLogStreamsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeLogStreamsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LogStream> LogStreams { get; }
    internal DescribeLogStreamsPaginator(IAmazonCloudWatchLogs client, DescribeLogStreamsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeLogStreamsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<LogStream> get_LogStreams();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.DescribeLogStreamsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-DescribeLogStreamsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeLogStreamsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.DescribeLogStreamsResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<bool> _descending;
    private Nullable`1<int> _limit;
    private string _logGroupIdentifier;
    private string _logGroupName;
    private string _logStreamNamePrefix;
    private string _nextToken;
    private OrderBy _orderBy;
    public Nullable`1<bool> Descending { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamNamePrefix { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public OrderBy OrderBy { get; public set; }
    public DescribeLogStreamsRequest(string logGroupName);
    public Nullable`1<bool> get_Descending();
    public void set_Descending(Nullable`1<bool> value);
    internal bool IsSetDescending();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_LogGroupIdentifier();
    public void set_LogGroupIdentifier(string value);
    internal bool IsSetLogGroupIdentifier();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_LogStreamNamePrefix();
    public void set_LogStreamNamePrefix(string value);
    internal bool IsSetLogStreamNamePrefix();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public OrderBy get_OrderBy();
    public void set_OrderBy(OrderBy value);
    internal bool IsSetOrderBy();
}
public class Amazon.CloudWatchLogs.Model.DescribeLogStreamsResponse : AmazonWebServiceResponse {
    private List`1<LogStream> _logStreams;
    private string _nextToken;
    public List`1<LogStream> LogStreams { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<LogStream> get_LogStreams();
    public void set_LogStreams(List`1<LogStream> value);
    internal bool IsSetLogStreams();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatchLogs.Model.DescribeMetricFiltersPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private DescribeMetricFiltersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMetricFiltersResponse> Responses { get; }
    public IPaginatedEnumerable`1<MetricFilter> MetricFilters { get; }
    internal DescribeMetricFiltersPaginator(IAmazonCloudWatchLogs client, DescribeMetricFiltersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMetricFiltersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<MetricFilter> get_MetricFilters();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.DescribeMetricFiltersPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-DescribeMetricFiltersResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeMetricFiltersResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.DescribeMetricFiltersResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest : AmazonCloudWatchLogsRequest {
    private string _filterNamePrefix;
    private Nullable`1<int> _limit;
    private string _logGroupName;
    private string _metricName;
    private string _metricNamespace;
    private string _nextToken;
    [AWSPropertyAttribute]
public string FilterNamePrefix { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    [AWSPropertyAttribute]
public string MetricNamespace { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public DescribeMetricFiltersRequest(string logGroupName);
    public string get_FilterNamePrefix();
    public void set_FilterNamePrefix(string value);
    internal bool IsSetFilterNamePrefix();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_MetricNamespace();
    public void set_MetricNamespace(string value);
    internal bool IsSetMetricNamespace();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.DescribeMetricFiltersResponse : AmazonWebServiceResponse {
    private List`1<MetricFilter> _metricFilters;
    private string _nextToken;
    public List`1<MetricFilter> MetricFilters { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<MetricFilter> get_MetricFilters();
    public void set_MetricFilters(List`1<MetricFilter> value);
    internal bool IsSetMetricFilters();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.DescribeQueriesRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupName;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private QueryStatus _status;
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public QueryStatus Status { get; public set; }
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public QueryStatus get_Status();
    public void set_Status(QueryStatus value);
    internal bool IsSetStatus();
}
public class Amazon.CloudWatchLogs.Model.DescribeQueriesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<QueryInfo> _queries;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<QueryInfo> Queries { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<QueryInfo> get_Queries();
    public void set_Queries(List`1<QueryInfo> value);
    internal bool IsSetQueries();
}
public class Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _queryDefinitionNamePrefix;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string QueryDefinitionNamePrefix { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_QueryDefinitionNamePrefix();
    public void set_QueryDefinitionNamePrefix(string value);
    internal bool IsSetQueryDefinitionNamePrefix();
}
public class Amazon.CloudWatchLogs.Model.DescribeQueryDefinitionsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<QueryDefinition> _queryDefinitions;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<QueryDefinition> QueryDefinitions { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<QueryDefinition> get_QueryDefinitions();
    public void set_QueryDefinitions(List`1<QueryDefinition> value);
    internal bool IsSetQueryDefinitions();
}
public class Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<int> _limit;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ResourcePolicy> _resourcePolicies;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<ResourcePolicy> ResourcePolicies { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ResourcePolicy> get_ResourcePolicies();
    public void set_ResourcePolicies(List`1<ResourcePolicy> value);
    internal bool IsSetResourcePolicies();
}
internal class Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private DescribeSubscriptionFiltersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSubscriptionFiltersResponse> Responses { get; }
    public IPaginatedEnumerable`1<SubscriptionFilter> SubscriptionFilters { get; }
    internal DescribeSubscriptionFiltersPaginator(IAmazonCloudWatchLogs client, DescribeSubscriptionFiltersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSubscriptionFiltersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<SubscriptionFilter> get_SubscriptionFilters();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-DescribeSubscriptionFiltersResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<DescribeSubscriptionFiltersResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest : AmazonCloudWatchLogsRequest {
    private string _filterNamePrefix;
    private Nullable`1<int> _limit;
    private string _logGroupName;
    private string _nextToken;
    [AWSPropertyAttribute]
public string FilterNamePrefix { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_FilterNamePrefix();
    public void set_FilterNamePrefix(string value);
    internal bool IsSetFilterNamePrefix();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<SubscriptionFilter> _subscriptionFilters;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<SubscriptionFilter> SubscriptionFilters { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SubscriptionFilter> get_SubscriptionFilters();
    public void set_SubscriptionFilters(List`1<SubscriptionFilter> value);
    internal bool IsSetSubscriptionFilters();
}
public class Amazon.CloudWatchLogs.Model.Destination : object {
    private string _accessPolicy;
    private string _arn;
    private Nullable`1<long> _creationTime;
    private string _destinationName;
    private string _roleArn;
    private string _targetArn;
    [AWSPropertyAttribute]
public string AccessPolicy { get; public set; }
    public string Arn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string DestinationName { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    [AWSPropertyAttribute]
public string TargetArn { get; public set; }
    public string get_AccessPolicy();
    public void set_AccessPolicy(string value);
    internal bool IsSetAccessPolicy();
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<long> get_CreationTime();
    public void set_CreationTime(Nullable`1<long> value);
    internal bool IsSetCreationTime();
    public string get_DestinationName();
    public void set_DestinationName(string value);
    internal bool IsSetDestinationName();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_TargetArn();
    public void set_TargetArn(string value);
    internal bool IsSetTargetArn();
}
public class Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupName;
    private string _resourceIdentifier;
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string ResourceIdentifier { get; public set; }
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_ResourceIdentifier();
    public void set_ResourceIdentifier(string value);
    internal bool IsSetResourceIdentifier();
}
public class Amazon.CloudWatchLogs.Model.DisassociateKmsKeyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.ExportTask : object {
    private string _destination;
    private string _destinationPrefix;
    private ExportTaskExecutionInfo _executionInfo;
    private Nullable`1<long> _from;
    private string _logGroupName;
    private ExportTaskStatus _status;
    private string _taskId;
    private string _taskName;
    private Nullable`1<long> _to;
    [AWSPropertyAttribute]
public string Destination { get; public set; }
    public string DestinationPrefix { get; public set; }
    public ExportTaskExecutionInfo ExecutionInfo { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> From { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    public ExportTaskStatus Status { get; public set; }
    [AWSPropertyAttribute]
public string TaskId { get; public set; }
    [AWSPropertyAttribute]
public string TaskName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> To { get; public set; }
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
    public string get_DestinationPrefix();
    public void set_DestinationPrefix(string value);
    internal bool IsSetDestinationPrefix();
    public ExportTaskExecutionInfo get_ExecutionInfo();
    public void set_ExecutionInfo(ExportTaskExecutionInfo value);
    internal bool IsSetExecutionInfo();
    public Nullable`1<long> get_From();
    public void set_From(Nullable`1<long> value);
    internal bool IsSetFrom();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public ExportTaskStatus get_Status();
    public void set_Status(ExportTaskStatus value);
    internal bool IsSetStatus();
    public string get_TaskId();
    public void set_TaskId(string value);
    internal bool IsSetTaskId();
    public string get_TaskName();
    public void set_TaskName(string value);
    internal bool IsSetTaskName();
    public Nullable`1<long> get_To();
    public void set_To(Nullable`1<long> value);
    internal bool IsSetTo();
}
public class Amazon.CloudWatchLogs.Model.ExportTaskExecutionInfo : object {
    private Nullable`1<long> _completionTime;
    private Nullable`1<long> _creationTime;
    [AWSPropertyAttribute]
public Nullable`1<long> CompletionTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> CreationTime { get; public set; }
    public Nullable`1<long> get_CompletionTime();
    public void set_CompletionTime(Nullable`1<long> value);
    internal bool IsSetCompletionTime();
    public Nullable`1<long> get_CreationTime();
    public void set_CreationTime(Nullable`1<long> value);
    internal bool IsSetCreationTime();
}
public class Amazon.CloudWatchLogs.Model.ExportTaskStatus : object {
    private ExportTaskStatusCode _code;
    private string _message;
    public ExportTaskStatusCode Code { get; public set; }
    public string Message { get; public set; }
    public ExportTaskStatusCode get_Code();
    public void set_Code(ExportTaskStatusCode value);
    internal bool IsSetCode();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.CloudWatchLogs.Model.FilteredLogEvent : object {
    private string _eventId;
    private Nullable`1<long> _ingestionTime;
    private string _logStreamName;
    private string _message;
    private Nullable`1<long> _timestamp;
    public string EventId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> IngestionTime { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamName { get; public set; }
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Timestamp { get; public set; }
    public string get_EventId();
    public void set_EventId(string value);
    internal bool IsSetEventId();
    public Nullable`1<long> get_IngestionTime();
    public void set_IngestionTime(Nullable`1<long> value);
    internal bool IsSetIngestionTime();
    public string get_LogStreamName();
    public void set_LogStreamName(string value);
    internal bool IsSetLogStreamName();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public Nullable`1<long> get_Timestamp();
    public void set_Timestamp(Nullable`1<long> value);
    internal bool IsSetTimestamp();
}
internal class Amazon.CloudWatchLogs.Model.FilterLogEventsPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private FilterLogEventsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<FilterLogEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FilteredLogEvent> Events { get; }
    public IPaginatedEnumerable`1<SearchedLogStream> SearchedLogStreams { get; }
    internal FilterLogEventsPaginator(IAmazonCloudWatchLogs client, FilterLogEventsRequest request);
    public sealed virtual IPaginatedEnumerable`1<FilterLogEventsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<FilteredLogEvent> get_Events();
    public sealed virtual IPaginatedEnumerable`1<SearchedLogStream> get_SearchedLogStreams();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.FilterLogEventsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-FilterLogEventsResponse>-Paginate>d__10")]
private sealed virtual override IEnumerable`1<FilterLogEventsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.FilterLogEventsResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.FilterLogEventsRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<long> _endTime;
    private string _filterPattern;
    private Nullable`1<bool> _interleaved;
    private Nullable`1<int> _limit;
    private string _logGroupIdentifier;
    private string _logGroupName;
    private string _logStreamNamePrefix;
    private List`1<string> _logStreamNames;
    private string _nextToken;
    private Nullable`1<long> _startTime;
    private Nullable`1<bool> _unmask;
    [AWSPropertyAttribute]
public Nullable`1<long> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string FilterPattern { get; public set; }
    [ObsoleteAttribute("Starting on June 17, 2019, this parameter will be ignored and the value will be assumed to be true. The response from this operation will always interleave events from multiple log streams within a log group.")]
public Nullable`1<bool> Interleaved { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamNamePrefix { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogStreamNames { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> StartTime { get; public set; }
    public Nullable`1<bool> Unmask { get; public set; }
    public Nullable`1<long> get_EndTime();
    public void set_EndTime(Nullable`1<long> value);
    internal bool IsSetEndTime();
    public string get_FilterPattern();
    public void set_FilterPattern(string value);
    internal bool IsSetFilterPattern();
    public Nullable`1<bool> get_Interleaved();
    public void set_Interleaved(Nullable`1<bool> value);
    internal bool IsSetInterleaved();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_LogGroupIdentifier();
    public void set_LogGroupIdentifier(string value);
    internal bool IsSetLogGroupIdentifier();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_LogStreamNamePrefix();
    public void set_LogStreamNamePrefix(string value);
    internal bool IsSetLogStreamNamePrefix();
    public List`1<string> get_LogStreamNames();
    public void set_LogStreamNames(List`1<string> value);
    internal bool IsSetLogStreamNames();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<long> get_StartTime();
    public void set_StartTime(Nullable`1<long> value);
    internal bool IsSetStartTime();
    public Nullable`1<bool> get_Unmask();
    public void set_Unmask(Nullable`1<bool> value);
    internal bool IsSetUnmask();
}
public class Amazon.CloudWatchLogs.Model.FilterLogEventsResponse : AmazonWebServiceResponse {
    private List`1<FilteredLogEvent> _events;
    private string _nextToken;
    private List`1<SearchedLogStream> _searchedLogStreams;
    public List`1<FilteredLogEvent> Events { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<SearchedLogStream> SearchedLogStreams { get; public set; }
    public List`1<FilteredLogEvent> get_Events();
    public void set_Events(List`1<FilteredLogEvent> value);
    internal bool IsSetEvents();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<SearchedLogStream> get_SearchedLogStreams();
    public void set_SearchedLogStreams(List`1<SearchedLogStream> value);
    internal bool IsSetSearchedLogStreams();
}
public class Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupIdentifier;
    [AWSPropertyAttribute]
public string LogGroupIdentifier { get; public set; }
    public string get_LogGroupIdentifier();
    public void set_LogGroupIdentifier(string value);
    internal bool IsSetLogGroupIdentifier();
}
public class Amazon.CloudWatchLogs.Model.GetDataProtectionPolicyResponse : AmazonWebServiceResponse {
    private Nullable`1<long> _lastUpdatedTime;
    private string _logGroupIdentifier;
    private string _policyDocument;
    [AWSPropertyAttribute]
public Nullable`1<long> LastUpdatedTime { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupIdentifier { get; public set; }
    public string PolicyDocument { get; public set; }
    public Nullable`1<long> get_LastUpdatedTime();
    public void set_LastUpdatedTime(Nullable`1<long> value);
    internal bool IsSetLastUpdatedTime();
    public string get_LogGroupIdentifier();
    public void set_LogGroupIdentifier(string value);
    internal bool IsSetLogGroupIdentifier();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
}
public class Amazon.CloudWatchLogs.Model.GetDeliveryDestinationPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _deliveryDestinationName;
    [AWSPropertyAttribute]
public string DeliveryDestinationName { get; public set; }
    public string get_DeliveryDestinationName();
    public void set_DeliveryDestinationName(string value);
    internal bool IsSetDeliveryDestinationName();
}
public class Amazon.CloudWatchLogs.Model.GetDeliveryDestinationPolicyResponse : AmazonWebServiceResponse {
    private Policy _policy;
    public Policy Policy { get; public set; }
    public Policy get_Policy();
    public void set_Policy(Policy value);
    internal bool IsSetPolicy();
}
public class Amazon.CloudWatchLogs.Model.GetDeliveryDestinationRequest : AmazonCloudWatchLogsRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudWatchLogs.Model.GetDeliveryDestinationResponse : AmazonWebServiceResponse {
    private DeliveryDestination _deliveryDestination;
    public DeliveryDestination DeliveryDestination { get; public set; }
    public DeliveryDestination get_DeliveryDestination();
    public void set_DeliveryDestination(DeliveryDestination value);
    internal bool IsSetDeliveryDestination();
}
public class Amazon.CloudWatchLogs.Model.GetDeliveryRequest : AmazonCloudWatchLogsRequest {
    private string _id;
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
}
public class Amazon.CloudWatchLogs.Model.GetDeliveryResponse : AmazonWebServiceResponse {
    private Delivery _delivery;
    public Delivery Delivery { get; public set; }
    public Delivery get_Delivery();
    public void set_Delivery(Delivery value);
    internal bool IsSetDelivery();
}
public class Amazon.CloudWatchLogs.Model.GetDeliverySourceRequest : AmazonCloudWatchLogsRequest {
    private string _name;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.CloudWatchLogs.Model.GetDeliverySourceResponse : AmazonWebServiceResponse {
    private DeliverySource _deliverySource;
    public DeliverySource DeliverySource { get; public set; }
    public DeliverySource get_DeliverySource();
    public void set_DeliverySource(DeliverySource value);
    internal bool IsSetDeliverySource();
}
public class Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorRequest : AmazonCloudWatchLogsRequest {
    private string _anomalyDetectorArn;
    [AWSPropertyAttribute]
public string AnomalyDetectorArn { get; public set; }
    public string get_AnomalyDetectorArn();
    public void set_AnomalyDetectorArn(string value);
    internal bool IsSetAnomalyDetectorArn();
}
public class Amazon.CloudWatchLogs.Model.GetLogAnomalyDetectorResponse : AmazonWebServiceResponse {
    private AnomalyDetectorStatus _anomalyDetectorStatus;
    private Nullable`1<long> _anomalyVisibilityTime;
    private Nullable`1<long> _creationTimeStamp;
    private string _detectorName;
    private EvaluationFrequency _evaluationFrequency;
    private string _filterPattern;
    private string _kmsKeyId;
    private Nullable`1<long> _lastModifiedTimeStamp;
    private List`1<string> _logGroupArnList;
    public AnomalyDetectorStatus AnomalyDetectorStatus { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> AnomalyVisibilityTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> CreationTimeStamp { get; public set; }
    [AWSPropertyAttribute]
public string DetectorName { get; public set; }
    public EvaluationFrequency EvaluationFrequency { get; public set; }
    [AWSPropertyAttribute]
public string FilterPattern { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> LastModifiedTimeStamp { get; public set; }
    public List`1<string> LogGroupArnList { get; public set; }
    public AnomalyDetectorStatus get_AnomalyDetectorStatus();
    public void set_AnomalyDetectorStatus(AnomalyDetectorStatus value);
    internal bool IsSetAnomalyDetectorStatus();
    public Nullable`1<long> get_AnomalyVisibilityTime();
    public void set_AnomalyVisibilityTime(Nullable`1<long> value);
    internal bool IsSetAnomalyVisibilityTime();
    public Nullable`1<long> get_CreationTimeStamp();
    public void set_CreationTimeStamp(Nullable`1<long> value);
    internal bool IsSetCreationTimeStamp();
    public string get_DetectorName();
    public void set_DetectorName(string value);
    internal bool IsSetDetectorName();
    public EvaluationFrequency get_EvaluationFrequency();
    public void set_EvaluationFrequency(EvaluationFrequency value);
    internal bool IsSetEvaluationFrequency();
    public string get_FilterPattern();
    public void set_FilterPattern(string value);
    internal bool IsSetFilterPattern();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<long> get_LastModifiedTimeStamp();
    public void set_LastModifiedTimeStamp(Nullable`1<long> value);
    internal bool IsSetLastModifiedTimeStamp();
    public List`1<string> get_LogGroupArnList();
    public void set_LogGroupArnList(List`1<string> value);
    internal bool IsSetLogGroupArnList();
}
internal class Amazon.CloudWatchLogs.Model.GetLogEventsPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private GetLogEventsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<GetLogEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OutputLogEvent> Events { get; }
    internal GetLogEventsPaginator(IAmazonCloudWatchLogs client, GetLogEventsRequest request);
    public sealed virtual IPaginatedEnumerable`1<GetLogEventsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<OutputLogEvent> get_Events();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.GetLogEventsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-GetLogEventsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<GetLogEventsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.GetLogEventsResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.GetLogEventsRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<int> _limit;
    private string _logGroupIdentifier;
    private string _logGroupName;
    private string _logStreamName;
    private string _nextToken;
    private Nullable`1<bool> _startFromHead;
    private Nullable`1<DateTime> _startTime;
    private Nullable`1<bool> _unmask;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamName { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<bool> StartFromHead { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<bool> Unmask { get; public set; }
    public GetLogEventsRequest(string logGroupName, string logStreamName);
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_LogGroupIdentifier();
    public void set_LogGroupIdentifier(string value);
    internal bool IsSetLogGroupIdentifier();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_LogStreamName();
    public void set_LogStreamName(string value);
    internal bool IsSetLogStreamName();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<bool> get_StartFromHead();
    public void set_StartFromHead(Nullable`1<bool> value);
    internal bool IsSetStartFromHead();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public Nullable`1<bool> get_Unmask();
    public void set_Unmask(Nullable`1<bool> value);
    internal bool IsSetUnmask();
}
public class Amazon.CloudWatchLogs.Model.GetLogEventsResponse : AmazonWebServiceResponse {
    private List`1<OutputLogEvent> _events;
    private string _nextBackwardToken;
    private string _nextForwardToken;
    public List`1<OutputLogEvent> Events { get; public set; }
    [AWSPropertyAttribute]
public string NextBackwardToken { get; public set; }
    [AWSPropertyAttribute]
public string NextForwardToken { get; public set; }
    public List`1<OutputLogEvent> get_Events();
    public void set_Events(List`1<OutputLogEvent> value);
    internal bool IsSetEvents();
    public string get_NextBackwardToken();
    public void set_NextBackwardToken(string value);
    internal bool IsSetNextBackwardToken();
    public string get_NextForwardToken();
    public void set_NextForwardToken(string value);
    internal bool IsSetNextForwardToken();
}
public class Amazon.CloudWatchLogs.Model.GetLogGroupFieldsRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupIdentifier;
    private string _logGroupName;
    private Nullable`1<long> _time;
    [AWSPropertyAttribute]
public string LogGroupIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Time { get; public set; }
    public string get_LogGroupIdentifier();
    public void set_LogGroupIdentifier(string value);
    internal bool IsSetLogGroupIdentifier();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public Nullable`1<long> get_Time();
    public void set_Time(Nullable`1<long> value);
    internal bool IsSetTime();
}
public class Amazon.CloudWatchLogs.Model.GetLogGroupFieldsResponse : AmazonWebServiceResponse {
    private List`1<LogGroupField> _logGroupFields;
    public List`1<LogGroupField> LogGroupFields { get; public set; }
    public List`1<LogGroupField> get_LogGroupFields();
    public void set_LogGroupFields(List`1<LogGroupField> value);
    internal bool IsSetLogGroupFields();
}
public class Amazon.CloudWatchLogs.Model.GetLogRecordRequest : AmazonCloudWatchLogsRequest {
    private string _logRecordPointer;
    private Nullable`1<bool> _unmask;
    [AWSPropertyAttribute]
public string LogRecordPointer { get; public set; }
    public Nullable`1<bool> Unmask { get; public set; }
    public string get_LogRecordPointer();
    public void set_LogRecordPointer(string value);
    internal bool IsSetLogRecordPointer();
    public Nullable`1<bool> get_Unmask();
    public void set_Unmask(Nullable`1<bool> value);
    internal bool IsSetUnmask();
}
public class Amazon.CloudWatchLogs.Model.GetLogRecordResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _logRecord;
    public Dictionary`2<string, string> LogRecord { get; public set; }
    public Dictionary`2<string, string> get_LogRecord();
    public void set_LogRecord(Dictionary`2<string, string> value);
    internal bool IsSetLogRecord();
}
public class Amazon.CloudWatchLogs.Model.GetQueryResultsRequest : AmazonCloudWatchLogsRequest {
    private string _queryId;
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
}
public class Amazon.CloudWatchLogs.Model.GetQueryResultsResponse : AmazonWebServiceResponse {
    private string _encryptionKey;
    private List`1<List`1<ResultField>> _results;
    private QueryStatistics _statistics;
    private QueryStatus _status;
    [AWSPropertyAttribute]
public string EncryptionKey { get; public set; }
    public List`1<List`1<ResultField>> Results { get; public set; }
    public QueryStatistics Statistics { get; public set; }
    public QueryStatus Status { get; public set; }
    public string get_EncryptionKey();
    public void set_EncryptionKey(string value);
    internal bool IsSetEncryptionKey();
    public List`1<List`1<ResultField>> get_Results();
    public void set_Results(List`1<List`1<ResultField>> value);
    internal bool IsSetResults();
    public QueryStatistics get_Statistics();
    public void set_Statistics(QueryStatistics value);
    internal bool IsSetStatistics();
    public QueryStatus get_Status();
    public void set_Status(QueryStatus value);
    internal bool IsSetStatus();
}
public interface Amazon.CloudWatchLogs.Model.ICloudWatchLogsPaginatorFactory {
    public abstract virtual IDescribeDeliveriesPaginator DescribeDeliveries(DescribeDeliveriesRequest request);
    public abstract virtual IDescribeDeliveryDestinationsPaginator DescribeDeliveryDestinations(DescribeDeliveryDestinationsRequest request);
    public abstract virtual IDescribeDeliverySourcesPaginator DescribeDeliverySources(DescribeDeliverySourcesRequest request);
    public abstract virtual IDescribeDestinationsPaginator DescribeDestinations(DescribeDestinationsRequest request);
    public abstract virtual IDescribeLogGroupsPaginator DescribeLogGroups(DescribeLogGroupsRequest request);
    public abstract virtual IDescribeLogStreamsPaginator DescribeLogStreams(DescribeLogStreamsRequest request);
    public abstract virtual IDescribeMetricFiltersPaginator DescribeMetricFilters(DescribeMetricFiltersRequest request);
    public abstract virtual IDescribeSubscriptionFiltersPaginator DescribeSubscriptionFilters(DescribeSubscriptionFiltersRequest request);
    public abstract virtual IFilterLogEventsPaginator FilterLogEvents(FilterLogEventsRequest request);
    public abstract virtual IGetLogEventsPaginator GetLogEvents(GetLogEventsRequest request);
    public abstract virtual IListAnomaliesPaginator ListAnomalies(ListAnomaliesRequest request);
    public abstract virtual IListLogAnomalyDetectorsPaginator ListLogAnomalyDetectors(ListLogAnomalyDetectorsRequest request);
}
public interface Amazon.CloudWatchLogs.Model.IDescribeDeliveriesPaginator {
    public IPaginatedEnumerable`1<DescribeDeliveriesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Delivery> Deliveries { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDeliveriesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Delivery> get_Deliveries();
}
public interface Amazon.CloudWatchLogs.Model.IDescribeDeliveryDestinationsPaginator {
    public IPaginatedEnumerable`1<DescribeDeliveryDestinationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DeliveryDestination> DeliveryDestinations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDeliveryDestinationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DeliveryDestination> get_DeliveryDestinations();
}
public interface Amazon.CloudWatchLogs.Model.IDescribeDeliverySourcesPaginator {
    public IPaginatedEnumerable`1<DescribeDeliverySourcesResponse> Responses { get; }
    public IPaginatedEnumerable`1<DeliverySource> DeliverySources { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDeliverySourcesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DeliverySource> get_DeliverySources();
}
public interface Amazon.CloudWatchLogs.Model.IDescribeDestinationsPaginator {
    public IPaginatedEnumerable`1<DescribeDestinationsResponse> Responses { get; }
    public IPaginatedEnumerable`1<Destination> Destinations { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDestinationsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Destination> get_Destinations();
}
public interface Amazon.CloudWatchLogs.Model.IDescribeLogGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeLogGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LogGroup> LogGroups { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLogGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LogGroup> get_LogGroups();
}
public interface Amazon.CloudWatchLogs.Model.IDescribeLogStreamsPaginator {
    public IPaginatedEnumerable`1<DescribeLogStreamsResponse> Responses { get; }
    public IPaginatedEnumerable`1<LogStream> LogStreams { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeLogStreamsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<LogStream> get_LogStreams();
}
public interface Amazon.CloudWatchLogs.Model.IDescribeMetricFiltersPaginator {
    public IPaginatedEnumerable`1<DescribeMetricFiltersResponse> Responses { get; }
    public IPaginatedEnumerable`1<MetricFilter> MetricFilters { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMetricFiltersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<MetricFilter> get_MetricFilters();
}
public interface Amazon.CloudWatchLogs.Model.IDescribeSubscriptionFiltersPaginator {
    public IPaginatedEnumerable`1<DescribeSubscriptionFiltersResponse> Responses { get; }
    public IPaginatedEnumerable`1<SubscriptionFilter> SubscriptionFilters { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSubscriptionFiltersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<SubscriptionFilter> get_SubscriptionFilters();
}
public interface Amazon.CloudWatchLogs.Model.IFilterLogEventsPaginator {
    public IPaginatedEnumerable`1<FilterLogEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<FilteredLogEvent> Events { get; }
    public IPaginatedEnumerable`1<SearchedLogStream> SearchedLogStreams { get; }
    public abstract virtual IPaginatedEnumerable`1<FilterLogEventsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<FilteredLogEvent> get_Events();
    public abstract virtual IPaginatedEnumerable`1<SearchedLogStream> get_SearchedLogStreams();
}
public interface Amazon.CloudWatchLogs.Model.IGetLogEventsPaginator {
    public IPaginatedEnumerable`1<GetLogEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<OutputLogEvent> Events { get; }
    public abstract virtual IPaginatedEnumerable`1<GetLogEventsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<OutputLogEvent> get_Events();
}
public interface Amazon.CloudWatchLogs.Model.IListAnomaliesPaginator {
    public IPaginatedEnumerable`1<ListAnomaliesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Anomaly> Anomalies { get; }
    public abstract virtual IPaginatedEnumerable`1<ListAnomaliesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<Anomaly> get_Anomalies();
}
public interface Amazon.CloudWatchLogs.Model.IListLogAnomalyDetectorsPaginator {
    public IPaginatedEnumerable`1<ListLogAnomalyDetectorsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AnomalyDetector> AnomalyDetectors { get; }
    public abstract virtual IPaginatedEnumerable`1<ListLogAnomalyDetectorsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AnomalyDetector> get_AnomalyDetectors();
}
public class Amazon.CloudWatchLogs.Model.InputLogEvent : object {
    private string _message;
    private Nullable`1<DateTime> _timestamp;
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> Timestamp { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller : object {
    private static AccessDeniedExceptionUnmarshaller _instance;
    public static AccessDeniedExceptionUnmarshaller Instance { get; }
    private static AccessDeniedExceptionUnmarshaller();
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AccountPolicyUnmarshaller : object {
    private static AccountPolicyUnmarshaller _instance;
    public static AccountPolicyUnmarshaller Instance { get; }
    private static AccountPolicyUnmarshaller();
    private sealed virtual override AccountPolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.AccountPolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountPolicy Unmarshall(JsonUnmarshallerContext context);
    public static AccountPolicyUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AnomalyDetectorUnmarshaller : object {
    private static AnomalyDetectorUnmarshaller _instance;
    public static AnomalyDetectorUnmarshaller Instance { get; }
    private static AnomalyDetectorUnmarshaller();
    private sealed virtual override AnomalyDetector Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.AnomalyDetector,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnomalyDetector Unmarshall(JsonUnmarshallerContext context);
    public static AnomalyDetectorUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AnomalyUnmarshaller : object {
    private static AnomalyUnmarshaller _instance;
    public static AnomalyUnmarshaller Instance { get; }
    private static AnomalyUnmarshaller();
    private sealed virtual override Anomaly Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.Anomaly,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Anomaly Unmarshall(JsonUnmarshallerContext context);
    public static AnomalyUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyRequestMarshaller : object {
    private static AssociateKmsKeyRequestMarshaller _instance;
    public static AssociateKmsKeyRequestMarshaller Instance { get; }
    private static AssociateKmsKeyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateKmsKeyRequest publicRequest);
    internal static AssociateKmsKeyRequestMarshaller GetInstance();
    public static AssociateKmsKeyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AssociateKmsKeyResponseUnmarshaller _instance;
    public static AssociateKmsKeyResponseUnmarshaller Instance { get; }
    private static AssociateKmsKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateKmsKeyResponseUnmarshaller GetInstance();
    public static AssociateKmsKeyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller : object {
    private static CancelExportTaskRequestMarshaller _instance;
    public static CancelExportTaskRequestMarshaller Instance { get; }
    private static CancelExportTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelExportTaskRequest publicRequest);
    internal static CancelExportTaskRequestMarshaller GetInstance();
    public static CancelExportTaskRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelExportTaskResponseUnmarshaller _instance;
    public static CancelExportTaskResponseUnmarshaller Instance { get; }
    private static CancelExportTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelExportTaskResponseUnmarshaller GetInstance();
    public static CancelExportTaskResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller : object {
    private static ConflictExceptionUnmarshaller _instance;
    public static ConflictExceptionUnmarshaller Instance { get; }
    private static ConflictExceptionUnmarshaller();
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateDeliveryRequestMarshaller : object {
    private static CreateDeliveryRequestMarshaller _instance;
    public static CreateDeliveryRequestMarshaller Instance { get; }
    private static CreateDeliveryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDeliveryRequest publicRequest);
    internal static CreateDeliveryRequestMarshaller GetInstance();
    public static CreateDeliveryRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateDeliveryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateDeliveryResponseUnmarshaller _instance;
    public static CreateDeliveryResponseUnmarshaller Instance { get; }
    private static CreateDeliveryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDeliveryResponseUnmarshaller GetInstance();
    public static CreateDeliveryResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskRequestMarshaller : object {
    private static CreateExportTaskRequestMarshaller _instance;
    public static CreateExportTaskRequestMarshaller Instance { get; }
    private static CreateExportTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateExportTaskRequest publicRequest);
    internal static CreateExportTaskRequestMarshaller GetInstance();
    public static CreateExportTaskRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateExportTaskResponseUnmarshaller _instance;
    public static CreateExportTaskResponseUnmarshaller Instance { get; }
    private static CreateExportTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateExportTaskResponseUnmarshaller GetInstance();
    public static CreateExportTaskResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogAnomalyDetectorRequestMarshaller : object {
    private static CreateLogAnomalyDetectorRequestMarshaller _instance;
    public static CreateLogAnomalyDetectorRequestMarshaller Instance { get; }
    private static CreateLogAnomalyDetectorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLogAnomalyDetectorRequest publicRequest);
    internal static CreateLogAnomalyDetectorRequestMarshaller GetInstance();
    public static CreateLogAnomalyDetectorRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogAnomalyDetectorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateLogAnomalyDetectorResponseUnmarshaller _instance;
    public static CreateLogAnomalyDetectorResponseUnmarshaller Instance { get; }
    private static CreateLogAnomalyDetectorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLogAnomalyDetectorResponseUnmarshaller GetInstance();
    public static CreateLogAnomalyDetectorResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupRequestMarshaller : object {
    private static CreateLogGroupRequestMarshaller _instance;
    public static CreateLogGroupRequestMarshaller Instance { get; }
    private static CreateLogGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLogGroupRequest publicRequest);
    internal static CreateLogGroupRequestMarshaller GetInstance();
    public static CreateLogGroupRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateLogGroupResponseUnmarshaller _instance;
    public static CreateLogGroupResponseUnmarshaller Instance { get; }
    private static CreateLogGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLogGroupResponseUnmarshaller GetInstance();
    public static CreateLogGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamRequestMarshaller : object {
    private static CreateLogStreamRequestMarshaller _instance;
    public static CreateLogStreamRequestMarshaller Instance { get; }
    private static CreateLogStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateLogStreamRequest publicRequest);
    internal static CreateLogStreamRequestMarshaller GetInstance();
    public static CreateLogStreamRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateLogStreamResponseUnmarshaller _instance;
    public static CreateLogStreamResponseUnmarshaller Instance { get; }
    private static CreateLogStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateLogStreamResponseUnmarshaller GetInstance();
    public static CreateLogStreamResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DataAlreadyAcceptedExceptionUnmarshaller : object {
    private static DataAlreadyAcceptedExceptionUnmarshaller _instance;
    public static DataAlreadyAcceptedExceptionUnmarshaller Instance { get; }
    private static DataAlreadyAcceptedExceptionUnmarshaller();
    public sealed virtual DataAlreadyAcceptedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DataAlreadyAcceptedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DataAlreadyAcceptedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteAccountPolicyRequestMarshaller : object {
    private static DeleteAccountPolicyRequestMarshaller _instance;
    public static DeleteAccountPolicyRequestMarshaller Instance { get; }
    private static DeleteAccountPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteAccountPolicyRequest publicRequest);
    internal static DeleteAccountPolicyRequestMarshaller GetInstance();
    public static DeleteAccountPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteAccountPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteAccountPolicyResponseUnmarshaller _instance;
    public static DeleteAccountPolicyResponseUnmarshaller Instance { get; }
    private static DeleteAccountPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteAccountPolicyResponseUnmarshaller GetInstance();
    public static DeleteAccountPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDataProtectionPolicyRequestMarshaller : object {
    private static DeleteDataProtectionPolicyRequestMarshaller _instance;
    public static DeleteDataProtectionPolicyRequestMarshaller Instance { get; }
    private static DeleteDataProtectionPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDataProtectionPolicyRequest publicRequest);
    internal static DeleteDataProtectionPolicyRequestMarshaller GetInstance();
    public static DeleteDataProtectionPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDataProtectionPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDataProtectionPolicyResponseUnmarshaller _instance;
    public static DeleteDataProtectionPolicyResponseUnmarshaller Instance { get; }
    private static DeleteDataProtectionPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDataProtectionPolicyResponseUnmarshaller GetInstance();
    public static DeleteDataProtectionPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationPolicyRequestMarshaller : object {
    private static DeleteDeliveryDestinationPolicyRequestMarshaller _instance;
    public static DeleteDeliveryDestinationPolicyRequestMarshaller Instance { get; }
    private static DeleteDeliveryDestinationPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDeliveryDestinationPolicyRequest publicRequest);
    internal static DeleteDeliveryDestinationPolicyRequestMarshaller GetInstance();
    public static DeleteDeliveryDestinationPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDeliveryDestinationPolicyResponseUnmarshaller _instance;
    public static DeleteDeliveryDestinationPolicyResponseUnmarshaller Instance { get; }
    private static DeleteDeliveryDestinationPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDeliveryDestinationPolicyResponseUnmarshaller GetInstance();
    public static DeleteDeliveryDestinationPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationRequestMarshaller : object {
    private static DeleteDeliveryDestinationRequestMarshaller _instance;
    public static DeleteDeliveryDestinationRequestMarshaller Instance { get; }
    private static DeleteDeliveryDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDeliveryDestinationRequest publicRequest);
    internal static DeleteDeliveryDestinationRequestMarshaller GetInstance();
    public static DeleteDeliveryDestinationRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryDestinationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDeliveryDestinationResponseUnmarshaller _instance;
    public static DeleteDeliveryDestinationResponseUnmarshaller Instance { get; }
    private static DeleteDeliveryDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDeliveryDestinationResponseUnmarshaller GetInstance();
    public static DeleteDeliveryDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryRequestMarshaller : object {
    private static DeleteDeliveryRequestMarshaller _instance;
    public static DeleteDeliveryRequestMarshaller Instance { get; }
    private static DeleteDeliveryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDeliveryRequest publicRequest);
    internal static DeleteDeliveryRequestMarshaller GetInstance();
    public static DeleteDeliveryRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliveryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDeliveryResponseUnmarshaller _instance;
    public static DeleteDeliveryResponseUnmarshaller Instance { get; }
    private static DeleteDeliveryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDeliveryResponseUnmarshaller GetInstance();
    public static DeleteDeliveryResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliverySourceRequestMarshaller : object {
    private static DeleteDeliverySourceRequestMarshaller _instance;
    public static DeleteDeliverySourceRequestMarshaller Instance { get; }
    private static DeleteDeliverySourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDeliverySourceRequest publicRequest);
    internal static DeleteDeliverySourceRequestMarshaller GetInstance();
    public static DeleteDeliverySourceRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDeliverySourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDeliverySourceResponseUnmarshaller _instance;
    public static DeleteDeliverySourceResponseUnmarshaller Instance { get; }
    private static DeleteDeliverySourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDeliverySourceResponseUnmarshaller GetInstance();
    public static DeleteDeliverySourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationRequestMarshaller : object {
    private static DeleteDestinationRequestMarshaller _instance;
    public static DeleteDestinationRequestMarshaller Instance { get; }
    private static DeleteDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDestinationRequest publicRequest);
    internal static DeleteDestinationRequestMarshaller GetInstance();
    public static DeleteDestinationRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDestinationResponseUnmarshaller _instance;
    public static DeleteDestinationResponseUnmarshaller Instance { get; }
    private static DeleteDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDestinationResponseUnmarshaller GetInstance();
    public static DeleteDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogAnomalyDetectorRequestMarshaller : object {
    private static DeleteLogAnomalyDetectorRequestMarshaller _instance;
    public static DeleteLogAnomalyDetectorRequestMarshaller Instance { get; }
    private static DeleteLogAnomalyDetectorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLogAnomalyDetectorRequest publicRequest);
    internal static DeleteLogAnomalyDetectorRequestMarshaller GetInstance();
    public static DeleteLogAnomalyDetectorRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogAnomalyDetectorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteLogAnomalyDetectorResponseUnmarshaller _instance;
    public static DeleteLogAnomalyDetectorResponseUnmarshaller Instance { get; }
    private static DeleteLogAnomalyDetectorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLogAnomalyDetectorResponseUnmarshaller GetInstance();
    public static DeleteLogAnomalyDetectorResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupRequestMarshaller : object {
    private static DeleteLogGroupRequestMarshaller _instance;
    public static DeleteLogGroupRequestMarshaller Instance { get; }
    private static DeleteLogGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLogGroupRequest publicRequest);
    internal static DeleteLogGroupRequestMarshaller GetInstance();
    public static DeleteLogGroupRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteLogGroupResponseUnmarshaller _instance;
    public static DeleteLogGroupResponseUnmarshaller Instance { get; }
    private static DeleteLogGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLogGroupResponseUnmarshaller GetInstance();
    public static DeleteLogGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamRequestMarshaller : object {
    private static DeleteLogStreamRequestMarshaller _instance;
    public static DeleteLogStreamRequestMarshaller Instance { get; }
    private static DeleteLogStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteLogStreamRequest publicRequest);
    internal static DeleteLogStreamRequestMarshaller GetInstance();
    public static DeleteLogStreamRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteLogStreamResponseUnmarshaller _instance;
    public static DeleteLogStreamResponseUnmarshaller Instance { get; }
    private static DeleteLogStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteLogStreamResponseUnmarshaller GetInstance();
    public static DeleteLogStreamResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterRequestMarshaller : object {
    private static DeleteMetricFilterRequestMarshaller _instance;
    public static DeleteMetricFilterRequestMarshaller Instance { get; }
    private static DeleteMetricFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMetricFilterRequest publicRequest);
    internal static DeleteMetricFilterRequestMarshaller GetInstance();
    public static DeleteMetricFilterRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteMetricFilterResponseUnmarshaller _instance;
    public static DeleteMetricFilterResponseUnmarshaller Instance { get; }
    private static DeleteMetricFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMetricFilterResponseUnmarshaller GetInstance();
    public static DeleteMetricFilterResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteQueryDefinitionRequestMarshaller : object {
    private static DeleteQueryDefinitionRequestMarshaller _instance;
    public static DeleteQueryDefinitionRequestMarshaller Instance { get; }
    private static DeleteQueryDefinitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteQueryDefinitionRequest publicRequest);
    internal static DeleteQueryDefinitionRequestMarshaller GetInstance();
    public static DeleteQueryDefinitionRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteQueryDefinitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteQueryDefinitionResponseUnmarshaller _instance;
    public static DeleteQueryDefinitionResponseUnmarshaller Instance { get; }
    private static DeleteQueryDefinitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteQueryDefinitionResponseUnmarshaller GetInstance();
    public static DeleteQueryDefinitionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller : object {
    private static DeleteResourcePolicyRequestMarshaller _instance;
    public static DeleteResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourcePolicyRequest publicRequest);
    internal static DeleteResourcePolicyRequestMarshaller GetInstance();
    public static DeleteResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourcePolicyResponseUnmarshaller _instance;
    public static DeleteResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyRequestMarshaller : object {
    private static DeleteRetentionPolicyRequestMarshaller _instance;
    public static DeleteRetentionPolicyRequestMarshaller Instance { get; }
    private static DeleteRetentionPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteRetentionPolicyRequest publicRequest);
    internal static DeleteRetentionPolicyRequestMarshaller GetInstance();
    public static DeleteRetentionPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteRetentionPolicyResponseUnmarshaller _instance;
    public static DeleteRetentionPolicyResponseUnmarshaller Instance { get; }
    private static DeleteRetentionPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteRetentionPolicyResponseUnmarshaller GetInstance();
    public static DeleteRetentionPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterRequestMarshaller : object {
    private static DeleteSubscriptionFilterRequestMarshaller _instance;
    public static DeleteSubscriptionFilterRequestMarshaller Instance { get; }
    private static DeleteSubscriptionFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteSubscriptionFilterRequest publicRequest);
    internal static DeleteSubscriptionFilterRequestMarshaller GetInstance();
    public static DeleteSubscriptionFilterRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteSubscriptionFilterResponseUnmarshaller _instance;
    public static DeleteSubscriptionFilterResponseUnmarshaller Instance { get; }
    private static DeleteSubscriptionFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteSubscriptionFilterResponseUnmarshaller GetInstance();
    public static DeleteSubscriptionFilterResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationConfigurationMarshaller : object {
    public static DeliveryDestinationConfigurationMarshaller Instance;
    private static DeliveryDestinationConfigurationMarshaller();
    public sealed virtual void Marshall(DeliveryDestinationConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationConfigurationUnmarshaller : object {
    private static DeliveryDestinationConfigurationUnmarshaller _instance;
    public static DeliveryDestinationConfigurationUnmarshaller Instance { get; }
    private static DeliveryDestinationConfigurationUnmarshaller();
    private sealed virtual override DeliveryDestinationConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.DeliveryDestinationConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeliveryDestinationConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static DeliveryDestinationConfigurationUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryDestinationUnmarshaller : object {
    private static DeliveryDestinationUnmarshaller _instance;
    public static DeliveryDestinationUnmarshaller Instance { get; }
    private static DeliveryDestinationUnmarshaller();
    private sealed virtual override DeliveryDestination Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.DeliveryDestination,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeliveryDestination Unmarshall(JsonUnmarshallerContext context);
    public static DeliveryDestinationUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliverySourceUnmarshaller : object {
    private static DeliverySourceUnmarshaller _instance;
    public static DeliverySourceUnmarshaller Instance { get; }
    private static DeliverySourceUnmarshaller();
    private sealed virtual override DeliverySource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.DeliverySource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeliverySource Unmarshall(JsonUnmarshallerContext context);
    public static DeliverySourceUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeliveryUnmarshaller : object {
    private static DeliveryUnmarshaller _instance;
    public static DeliveryUnmarshaller Instance { get; }
    private static DeliveryUnmarshaller();
    private sealed virtual override Delivery Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.Delivery,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Delivery Unmarshall(JsonUnmarshallerContext context);
    public static DeliveryUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeAccountPoliciesRequestMarshaller : object {
    private static DescribeAccountPoliciesRequestMarshaller _instance;
    public static DescribeAccountPoliciesRequestMarshaller Instance { get; }
    private static DescribeAccountPoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAccountPoliciesRequest publicRequest);
    internal static DescribeAccountPoliciesRequestMarshaller GetInstance();
    public static DescribeAccountPoliciesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeAccountPoliciesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAccountPoliciesResponseUnmarshaller _instance;
    public static DescribeAccountPoliciesResponseUnmarshaller Instance { get; }
    private static DescribeAccountPoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAccountPoliciesResponseUnmarshaller GetInstance();
    public static DescribeAccountPoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveriesRequestMarshaller : object {
    private static DescribeDeliveriesRequestMarshaller _instance;
    public static DescribeDeliveriesRequestMarshaller Instance { get; }
    private static DescribeDeliveriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDeliveriesRequest publicRequest);
    internal static DescribeDeliveriesRequestMarshaller GetInstance();
    public static DescribeDeliveriesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveriesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeDeliveriesResponseUnmarshaller _instance;
    public static DescribeDeliveriesResponseUnmarshaller Instance { get; }
    private static DescribeDeliveriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDeliveriesResponseUnmarshaller GetInstance();
    public static DescribeDeliveriesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveryDestinationsRequestMarshaller : object {
    private static DescribeDeliveryDestinationsRequestMarshaller _instance;
    public static DescribeDeliveryDestinationsRequestMarshaller Instance { get; }
    private static DescribeDeliveryDestinationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDeliveryDestinationsRequest publicRequest);
    internal static DescribeDeliveryDestinationsRequestMarshaller GetInstance();
    public static DescribeDeliveryDestinationsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliveryDestinationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeDeliveryDestinationsResponseUnmarshaller _instance;
    public static DescribeDeliveryDestinationsResponseUnmarshaller Instance { get; }
    private static DescribeDeliveryDestinationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDeliveryDestinationsResponseUnmarshaller GetInstance();
    public static DescribeDeliveryDestinationsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliverySourcesRequestMarshaller : object {
    private static DescribeDeliverySourcesRequestMarshaller _instance;
    public static DescribeDeliverySourcesRequestMarshaller Instance { get; }
    private static DescribeDeliverySourcesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDeliverySourcesRequest publicRequest);
    internal static DescribeDeliverySourcesRequestMarshaller GetInstance();
    public static DescribeDeliverySourcesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDeliverySourcesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeDeliverySourcesResponseUnmarshaller _instance;
    public static DescribeDeliverySourcesResponseUnmarshaller Instance { get; }
    private static DescribeDeliverySourcesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDeliverySourcesResponseUnmarshaller GetInstance();
    public static DescribeDeliverySourcesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsRequestMarshaller : object {
    private static DescribeDestinationsRequestMarshaller _instance;
    public static DescribeDestinationsRequestMarshaller Instance { get; }
    private static DescribeDestinationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDestinationsRequest publicRequest);
    internal static DescribeDestinationsRequestMarshaller GetInstance();
    public static DescribeDestinationsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeDestinationsResponseUnmarshaller _instance;
    public static DescribeDestinationsResponseUnmarshaller Instance { get; }
    private static DescribeDestinationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDestinationsResponseUnmarshaller GetInstance();
    public static DescribeDestinationsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller : object {
    private static DescribeExportTasksRequestMarshaller _instance;
    public static DescribeExportTasksRequestMarshaller Instance { get; }
    private static DescribeExportTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeExportTasksRequest publicRequest);
    internal static DescribeExportTasksRequestMarshaller GetInstance();
    public static DescribeExportTasksRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeExportTasksResponseUnmarshaller _instance;
    public static DescribeExportTasksResponseUnmarshaller Instance { get; }
    private static DescribeExportTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeExportTasksResponseUnmarshaller GetInstance();
    public static DescribeExportTasksResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsRequestMarshaller : object {
    private static DescribeLogGroupsRequestMarshaller _instance;
    public static DescribeLogGroupsRequestMarshaller Instance { get; }
    private static DescribeLogGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLogGroupsRequest publicRequest);
    internal static DescribeLogGroupsRequestMarshaller GetInstance();
    public static DescribeLogGroupsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeLogGroupsResponseUnmarshaller _instance;
    public static DescribeLogGroupsResponseUnmarshaller Instance { get; }
    private static DescribeLogGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLogGroupsResponseUnmarshaller GetInstance();
    public static DescribeLogGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsRequestMarshaller : object {
    private static DescribeLogStreamsRequestMarshaller _instance;
    public static DescribeLogStreamsRequestMarshaller Instance { get; }
    private static DescribeLogStreamsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLogStreamsRequest publicRequest);
    internal static DescribeLogStreamsRequestMarshaller GetInstance();
    public static DescribeLogStreamsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeLogStreamsResponseUnmarshaller _instance;
    public static DescribeLogStreamsResponseUnmarshaller Instance { get; }
    private static DescribeLogStreamsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLogStreamsResponseUnmarshaller GetInstance();
    public static DescribeLogStreamsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersRequestMarshaller : object {
    private static DescribeMetricFiltersRequestMarshaller _instance;
    public static DescribeMetricFiltersRequestMarshaller Instance { get; }
    private static DescribeMetricFiltersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMetricFiltersRequest publicRequest);
    internal static DescribeMetricFiltersRequestMarshaller GetInstance();
    public static DescribeMetricFiltersRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMetricFiltersResponseUnmarshaller _instance;
    public static DescribeMetricFiltersResponseUnmarshaller Instance { get; }
    private static DescribeMetricFiltersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMetricFiltersResponseUnmarshaller GetInstance();
    public static DescribeMetricFiltersResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueriesRequestMarshaller : object {
    private static DescribeQueriesRequestMarshaller _instance;
    public static DescribeQueriesRequestMarshaller Instance { get; }
    private static DescribeQueriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeQueriesRequest publicRequest);
    internal static DescribeQueriesRequestMarshaller GetInstance();
    public static DescribeQueriesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueriesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeQueriesResponseUnmarshaller _instance;
    public static DescribeQueriesResponseUnmarshaller Instance { get; }
    private static DescribeQueriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeQueriesResponseUnmarshaller GetInstance();
    public static DescribeQueriesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueryDefinitionsRequestMarshaller : object {
    private static DescribeQueryDefinitionsRequestMarshaller _instance;
    public static DescribeQueryDefinitionsRequestMarshaller Instance { get; }
    private static DescribeQueryDefinitionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeQueryDefinitionsRequest publicRequest);
    internal static DescribeQueryDefinitionsRequestMarshaller GetInstance();
    public static DescribeQueryDefinitionsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeQueryDefinitionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeQueryDefinitionsResponseUnmarshaller _instance;
    public static DescribeQueryDefinitionsResponseUnmarshaller Instance { get; }
    private static DescribeQueryDefinitionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeQueryDefinitionsResponseUnmarshaller GetInstance();
    public static DescribeQueryDefinitionsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesRequestMarshaller : object {
    private static DescribeResourcePoliciesRequestMarshaller _instance;
    public static DescribeResourcePoliciesRequestMarshaller Instance { get; }
    private static DescribeResourcePoliciesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeResourcePoliciesRequest publicRequest);
    internal static DescribeResourcePoliciesRequestMarshaller GetInstance();
    public static DescribeResourcePoliciesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeResourcePoliciesResponseUnmarshaller _instance;
    public static DescribeResourcePoliciesResponseUnmarshaller Instance { get; }
    private static DescribeResourcePoliciesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeResourcePoliciesResponseUnmarshaller GetInstance();
    public static DescribeResourcePoliciesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersRequestMarshaller : object {
    private static DescribeSubscriptionFiltersRequestMarshaller _instance;
    public static DescribeSubscriptionFiltersRequestMarshaller Instance { get; }
    private static DescribeSubscriptionFiltersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSubscriptionFiltersRequest publicRequest);
    internal static DescribeSubscriptionFiltersRequestMarshaller GetInstance();
    public static DescribeSubscriptionFiltersRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeSubscriptionFiltersResponseUnmarshaller _instance;
    public static DescribeSubscriptionFiltersResponseUnmarshaller Instance { get; }
    private static DescribeSubscriptionFiltersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSubscriptionFiltersResponseUnmarshaller GetInstance();
    public static DescribeSubscriptionFiltersResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DestinationUnmarshaller : object {
    private static DestinationUnmarshaller _instance;
    public static DestinationUnmarshaller Instance { get; }
    private static DestinationUnmarshaller();
    private sealed virtual override Destination Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.Destination,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Destination Unmarshall(JsonUnmarshallerContext context);
    public static DestinationUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyRequestMarshaller : object {
    private static DisassociateKmsKeyRequestMarshaller _instance;
    public static DisassociateKmsKeyRequestMarshaller Instance { get; }
    private static DisassociateKmsKeyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisassociateKmsKeyRequest publicRequest);
    internal static DisassociateKmsKeyRequestMarshaller GetInstance();
    public static DisassociateKmsKeyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisassociateKmsKeyResponseUnmarshaller _instance;
    public static DisassociateKmsKeyResponseUnmarshaller Instance { get; }
    private static DisassociateKmsKeyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisassociateKmsKeyResponseUnmarshaller GetInstance();
    public static DisassociateKmsKeyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskExecutionInfoUnmarshaller : object {
    private static ExportTaskExecutionInfoUnmarshaller _instance;
    public static ExportTaskExecutionInfoUnmarshaller Instance { get; }
    private static ExportTaskExecutionInfoUnmarshaller();
    private sealed virtual override ExportTaskExecutionInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.ExportTaskExecutionInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportTaskExecutionInfo Unmarshall(JsonUnmarshallerContext context);
    public static ExportTaskExecutionInfoUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskStatusUnmarshaller : object {
    private static ExportTaskStatusUnmarshaller _instance;
    public static ExportTaskStatusUnmarshaller Instance { get; }
    private static ExportTaskStatusUnmarshaller();
    private sealed virtual override ExportTaskStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.ExportTaskStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportTaskStatus Unmarshall(JsonUnmarshallerContext context);
    public static ExportTaskStatusUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller : object {
    private static ExportTaskUnmarshaller _instance;
    public static ExportTaskUnmarshaller Instance { get; }
    private static ExportTaskUnmarshaller();
    private sealed virtual override ExportTask Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.ExportTask,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportTask Unmarshall(JsonUnmarshallerContext context);
    public static ExportTaskUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilteredLogEventUnmarshaller : object {
    private static FilteredLogEventUnmarshaller _instance;
    public static FilteredLogEventUnmarshaller Instance { get; }
    private static FilteredLogEventUnmarshaller();
    private sealed virtual override FilteredLogEvent Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.FilteredLogEvent,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FilteredLogEvent Unmarshall(JsonUnmarshallerContext context);
    public static FilteredLogEventUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsRequestMarshaller : object {
    private static FilterLogEventsRequestMarshaller _instance;
    public static FilterLogEventsRequestMarshaller Instance { get; }
    private static FilterLogEventsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(FilterLogEventsRequest publicRequest);
    internal static FilterLogEventsRequestMarshaller GetInstance();
    public static FilterLogEventsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static FilterLogEventsResponseUnmarshaller _instance;
    public static FilterLogEventsResponseUnmarshaller Instance { get; }
    private static FilterLogEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static FilterLogEventsResponseUnmarshaller GetInstance();
    public static FilterLogEventsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDataProtectionPolicyRequestMarshaller : object {
    private static GetDataProtectionPolicyRequestMarshaller _instance;
    public static GetDataProtectionPolicyRequestMarshaller Instance { get; }
    private static GetDataProtectionPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDataProtectionPolicyRequest publicRequest);
    internal static GetDataProtectionPolicyRequestMarshaller GetInstance();
    public static GetDataProtectionPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDataProtectionPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDataProtectionPolicyResponseUnmarshaller _instance;
    public static GetDataProtectionPolicyResponseUnmarshaller Instance { get; }
    private static GetDataProtectionPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDataProtectionPolicyResponseUnmarshaller GetInstance();
    public static GetDataProtectionPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationPolicyRequestMarshaller : object {
    private static GetDeliveryDestinationPolicyRequestMarshaller _instance;
    public static GetDeliveryDestinationPolicyRequestMarshaller Instance { get; }
    private static GetDeliveryDestinationPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDeliveryDestinationPolicyRequest publicRequest);
    internal static GetDeliveryDestinationPolicyRequestMarshaller GetInstance();
    public static GetDeliveryDestinationPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDeliveryDestinationPolicyResponseUnmarshaller _instance;
    public static GetDeliveryDestinationPolicyResponseUnmarshaller Instance { get; }
    private static GetDeliveryDestinationPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDeliveryDestinationPolicyResponseUnmarshaller GetInstance();
    public static GetDeliveryDestinationPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationRequestMarshaller : object {
    private static GetDeliveryDestinationRequestMarshaller _instance;
    public static GetDeliveryDestinationRequestMarshaller Instance { get; }
    private static GetDeliveryDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDeliveryDestinationRequest publicRequest);
    internal static GetDeliveryDestinationRequestMarshaller GetInstance();
    public static GetDeliveryDestinationRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryDestinationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDeliveryDestinationResponseUnmarshaller _instance;
    public static GetDeliveryDestinationResponseUnmarshaller Instance { get; }
    private static GetDeliveryDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDeliveryDestinationResponseUnmarshaller GetInstance();
    public static GetDeliveryDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryRequestMarshaller : object {
    private static GetDeliveryRequestMarshaller _instance;
    public static GetDeliveryRequestMarshaller Instance { get; }
    private static GetDeliveryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDeliveryRequest publicRequest);
    internal static GetDeliveryRequestMarshaller GetInstance();
    public static GetDeliveryRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliveryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDeliveryResponseUnmarshaller _instance;
    public static GetDeliveryResponseUnmarshaller Instance { get; }
    private static GetDeliveryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDeliveryResponseUnmarshaller GetInstance();
    public static GetDeliveryResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliverySourceRequestMarshaller : object {
    private static GetDeliverySourceRequestMarshaller _instance;
    public static GetDeliverySourceRequestMarshaller Instance { get; }
    private static GetDeliverySourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDeliverySourceRequest publicRequest);
    internal static GetDeliverySourceRequestMarshaller GetInstance();
    public static GetDeliverySourceRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetDeliverySourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDeliverySourceResponseUnmarshaller _instance;
    public static GetDeliverySourceResponseUnmarshaller Instance { get; }
    private static GetDeliverySourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDeliverySourceResponseUnmarshaller GetInstance();
    public static GetDeliverySourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogAnomalyDetectorRequestMarshaller : object {
    private static GetLogAnomalyDetectorRequestMarshaller _instance;
    public static GetLogAnomalyDetectorRequestMarshaller Instance { get; }
    private static GetLogAnomalyDetectorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetLogAnomalyDetectorRequest publicRequest);
    internal static GetLogAnomalyDetectorRequestMarshaller GetInstance();
    public static GetLogAnomalyDetectorRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogAnomalyDetectorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetLogAnomalyDetectorResponseUnmarshaller _instance;
    public static GetLogAnomalyDetectorResponseUnmarshaller Instance { get; }
    private static GetLogAnomalyDetectorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetLogAnomalyDetectorResponseUnmarshaller GetInstance();
    public static GetLogAnomalyDetectorResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsRequestMarshaller : object {
    private static GetLogEventsRequestMarshaller _instance;
    public static GetLogEventsRequestMarshaller Instance { get; }
    private static GetLogEventsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetLogEventsRequest publicRequest);
    internal static GetLogEventsRequestMarshaller GetInstance();
    public static GetLogEventsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetLogEventsResponseUnmarshaller _instance;
    public static GetLogEventsResponseUnmarshaller Instance { get; }
    private static GetLogEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetLogEventsResponseUnmarshaller GetInstance();
    public static GetLogEventsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogGroupFieldsRequestMarshaller : object {
    private static GetLogGroupFieldsRequestMarshaller _instance;
    public static GetLogGroupFieldsRequestMarshaller Instance { get; }
    private static GetLogGroupFieldsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetLogGroupFieldsRequest publicRequest);
    internal static GetLogGroupFieldsRequestMarshaller GetInstance();
    public static GetLogGroupFieldsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogGroupFieldsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetLogGroupFieldsResponseUnmarshaller _instance;
    public static GetLogGroupFieldsResponseUnmarshaller Instance { get; }
    private static GetLogGroupFieldsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetLogGroupFieldsResponseUnmarshaller GetInstance();
    public static GetLogGroupFieldsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogRecordRequestMarshaller : object {
    private static GetLogRecordRequestMarshaller _instance;
    public static GetLogRecordRequestMarshaller Instance { get; }
    private static GetLogRecordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetLogRecordRequest publicRequest);
    internal static GetLogRecordRequestMarshaller GetInstance();
    public static GetLogRecordRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogRecordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetLogRecordResponseUnmarshaller _instance;
    public static GetLogRecordResponseUnmarshaller Instance { get; }
    private static GetLogRecordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetLogRecordResponseUnmarshaller GetInstance();
    public static GetLogRecordResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetQueryResultsRequestMarshaller : object {
    private static GetQueryResultsRequestMarshaller _instance;
    public static GetQueryResultsRequestMarshaller Instance { get; }
    private static GetQueryResultsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetQueryResultsRequest publicRequest);
    internal static GetQueryResultsRequestMarshaller GetInstance();
    public static GetQueryResultsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetQueryResultsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetQueryResultsResponseUnmarshaller _instance;
    public static GetQueryResultsResponseUnmarshaller Instance { get; }
    private static GetQueryResultsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetQueryResultsResponseUnmarshaller GetInstance();
    public static GetQueryResultsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InputLogEventMarshaller : object {
    public static InputLogEventMarshaller Instance;
    private static InputLogEventMarshaller();
    public sealed virtual void Marshall(InputLogEvent requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidOperationExceptionUnmarshaller : object {
    private static InvalidOperationExceptionUnmarshaller _instance;
    public static InvalidOperationExceptionUnmarshaller Instance { get; }
    private static InvalidOperationExceptionUnmarshaller();
    public sealed virtual InvalidOperationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidOperationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOperationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller : object {
    private static InvalidParameterExceptionUnmarshaller _instance;
    public static InvalidParameterExceptionUnmarshaller Instance { get; }
    private static InvalidParameterExceptionUnmarshaller();
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InvalidSequenceTokenExceptionUnmarshaller : object {
    private static InvalidSequenceTokenExceptionUnmarshaller _instance;
    public static InvalidSequenceTokenExceptionUnmarshaller Instance { get; }
    private static InvalidSequenceTokenExceptionUnmarshaller();
    public sealed virtual InvalidSequenceTokenException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidSequenceTokenException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSequenceTokenExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListAnomaliesRequestMarshaller : object {
    private static ListAnomaliesRequestMarshaller _instance;
    public static ListAnomaliesRequestMarshaller Instance { get; }
    private static ListAnomaliesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListAnomaliesRequest publicRequest);
    internal static ListAnomaliesRequestMarshaller GetInstance();
    public static ListAnomaliesRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListAnomaliesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListAnomaliesResponseUnmarshaller _instance;
    public static ListAnomaliesResponseUnmarshaller Instance { get; }
    private static ListAnomaliesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListAnomaliesResponseUnmarshaller GetInstance();
    public static ListAnomaliesResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListLogAnomalyDetectorsRequestMarshaller : object {
    private static ListLogAnomalyDetectorsRequestMarshaller _instance;
    public static ListLogAnomalyDetectorsRequestMarshaller Instance { get; }
    private static ListLogAnomalyDetectorsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListLogAnomalyDetectorsRequest publicRequest);
    internal static ListLogAnomalyDetectorsRequestMarshaller GetInstance();
    public static ListLogAnomalyDetectorsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListLogAnomalyDetectorsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListLogAnomalyDetectorsResponseUnmarshaller _instance;
    public static ListLogAnomalyDetectorsResponseUnmarshaller Instance { get; }
    private static ListLogAnomalyDetectorsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListLogAnomalyDetectorsResponseUnmarshaller GetInstance();
    public static ListLogAnomalyDetectorsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupRequestMarshaller : object {
    private static ListTagsLogGroupRequestMarshaller _instance;
    public static ListTagsLogGroupRequestMarshaller Instance { get; }
    private static ListTagsLogGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsLogGroupRequest publicRequest);
    internal static ListTagsLogGroupRequestMarshaller GetInstance();
    public static ListTagsLogGroupRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsLogGroupResponseUnmarshaller _instance;
    public static ListTagsLogGroupResponseUnmarshaller Instance { get; }
    private static ListTagsLogGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsLogGroupResponseUnmarshaller GetInstance();
    public static ListTagsLogGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LiveTailSessionLogEventUnmarshaller : object {
    private static LiveTailSessionLogEventUnmarshaller _instance;
    public static LiveTailSessionLogEventUnmarshaller Instance { get; }
    private static LiveTailSessionLogEventUnmarshaller();
    private sealed virtual override LiveTailSessionLogEvent Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.LiveTailSessionLogEvent,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LiveTailSessionLogEvent Unmarshall(JsonUnmarshallerContext context);
    public static LiveTailSessionLogEventUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LiveTailSessionMetadataUnmarshaller : object {
    private static LiveTailSessionMetadataUnmarshaller _instance;
    public static LiveTailSessionMetadataUnmarshaller Instance { get; }
    private static LiveTailSessionMetadataUnmarshaller();
    private sealed virtual override LiveTailSessionMetadata Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.LiveTailSessionMetadata,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LiveTailSessionMetadata Unmarshall(JsonUnmarshallerContext context);
    public static LiveTailSessionMetadataUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LiveTailSessionStartUnmarshaller : object {
    private static LiveTailSessionStartUnmarshaller _instance;
    public static LiveTailSessionStartUnmarshaller Instance { get; }
    private static LiveTailSessionStartUnmarshaller();
    private sealed virtual override LiveTailSessionStart Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.LiveTailSessionStart,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LiveTailSessionStart Unmarshall(JsonUnmarshallerContext context);
    public static LiveTailSessionStartUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LiveTailSessionUpdateUnmarshaller : object {
    private static LiveTailSessionUpdateUnmarshaller _instance;
    public static LiveTailSessionUpdateUnmarshaller Instance { get; }
    private static LiveTailSessionUpdateUnmarshaller();
    private sealed virtual override LiveTailSessionUpdate Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.LiveTailSessionUpdate,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LiveTailSessionUpdate Unmarshall(JsonUnmarshallerContext context);
    public static LiveTailSessionUpdateUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogEventUnmarshaller : object {
    private static LogEventUnmarshaller _instance;
    public static LogEventUnmarshaller Instance { get; }
    private static LogEventUnmarshaller();
    private sealed virtual override LogEvent Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.LogEvent,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LogEvent Unmarshall(JsonUnmarshallerContext context);
    public static LogEventUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupFieldUnmarshaller : object {
    private static LogGroupFieldUnmarshaller _instance;
    public static LogGroupFieldUnmarshaller Instance { get; }
    private static LogGroupFieldUnmarshaller();
    private sealed virtual override LogGroupField Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.LogGroupField,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LogGroupField Unmarshall(JsonUnmarshallerContext context);
    public static LogGroupFieldUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupUnmarshaller : object {
    private static LogGroupUnmarshaller _instance;
    public static LogGroupUnmarshaller Instance { get; }
    private static LogGroupUnmarshaller();
    private sealed virtual override LogGroup Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.LogGroup,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LogGroup Unmarshall(JsonUnmarshallerContext context);
    public static LogGroupUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogStreamUnmarshaller : object {
    private static LogStreamUnmarshaller _instance;
    public static LogStreamUnmarshaller Instance { get; }
    private static LogStreamUnmarshaller();
    private sealed virtual override LogStream Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.LogStream,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LogStream Unmarshall(JsonUnmarshallerContext context);
    public static LogStreamUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MalformedQueryExceptionUnmarshaller : object {
    private static MalformedQueryExceptionUnmarshaller _instance;
    public static MalformedQueryExceptionUnmarshaller Instance { get; }
    private static MalformedQueryExceptionUnmarshaller();
    public sealed virtual MalformedQueryException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MalformedQueryException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MalformedQueryExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterMatchRecordUnmarshaller : object {
    private static MetricFilterMatchRecordUnmarshaller _instance;
    public static MetricFilterMatchRecordUnmarshaller Instance { get; }
    private static MetricFilterMatchRecordUnmarshaller();
    private sealed virtual override MetricFilterMatchRecord Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.MetricFilterMatchRecord,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricFilterMatchRecord Unmarshall(JsonUnmarshallerContext context);
    public static MetricFilterMatchRecordUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterUnmarshaller : object {
    private static MetricFilterUnmarshaller _instance;
    public static MetricFilterUnmarshaller Instance { get; }
    private static MetricFilterUnmarshaller();
    private sealed virtual override MetricFilter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.MetricFilter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricFilter Unmarshall(JsonUnmarshallerContext context);
    public static MetricFilterUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationMarshaller : object {
    public static MetricTransformationMarshaller Instance;
    private static MetricTransformationMarshaller();
    public sealed virtual void Marshall(MetricTransformation requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationUnmarshaller : object {
    private static MetricTransformationUnmarshaller _instance;
    public static MetricTransformationUnmarshaller Instance { get; }
    private static MetricTransformationUnmarshaller();
    private sealed virtual override MetricTransformation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.MetricTransformation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MetricTransformation Unmarshall(JsonUnmarshallerContext context);
    public static MetricTransformationUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OperationAbortedExceptionUnmarshaller : object {
    private static OperationAbortedExceptionUnmarshaller _instance;
    public static OperationAbortedExceptionUnmarshaller Instance { get; }
    private static OperationAbortedExceptionUnmarshaller();
    public sealed virtual OperationAbortedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual OperationAbortedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static OperationAbortedExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OutputLogEventUnmarshaller : object {
    private static OutputLogEventUnmarshaller _instance;
    public static OutputLogEventUnmarshaller Instance { get; }
    private static OutputLogEventUnmarshaller();
    private sealed virtual override OutputLogEvent Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.OutputLogEvent,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OutputLogEvent Unmarshall(JsonUnmarshallerContext context);
    public static OutputLogEventUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PatternTokenUnmarshaller : object {
    private static PatternTokenUnmarshaller _instance;
    public static PatternTokenUnmarshaller Instance { get; }
    private static PatternTokenUnmarshaller();
    private sealed virtual override PatternToken Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.PatternToken,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PatternToken Unmarshall(JsonUnmarshallerContext context);
    public static PatternTokenUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PolicyUnmarshaller : object {
    private static PolicyUnmarshaller _instance;
    public static PolicyUnmarshaller Instance { get; }
    private static PolicyUnmarshaller();
    private sealed virtual override Policy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.Policy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Policy Unmarshall(JsonUnmarshallerContext context);
    public static PolicyUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutAccountPolicyRequestMarshaller : object {
    private static PutAccountPolicyRequestMarshaller _instance;
    public static PutAccountPolicyRequestMarshaller Instance { get; }
    private static PutAccountPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutAccountPolicyRequest publicRequest);
    internal static PutAccountPolicyRequestMarshaller GetInstance();
    public static PutAccountPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutAccountPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutAccountPolicyResponseUnmarshaller _instance;
    public static PutAccountPolicyResponseUnmarshaller Instance { get; }
    private static PutAccountPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutAccountPolicyResponseUnmarshaller GetInstance();
    public static PutAccountPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDataProtectionPolicyRequestMarshaller : object {
    private static PutDataProtectionPolicyRequestMarshaller _instance;
    public static PutDataProtectionPolicyRequestMarshaller Instance { get; }
    private static PutDataProtectionPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutDataProtectionPolicyRequest publicRequest);
    internal static PutDataProtectionPolicyRequestMarshaller GetInstance();
    public static PutDataProtectionPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDataProtectionPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutDataProtectionPolicyResponseUnmarshaller _instance;
    public static PutDataProtectionPolicyResponseUnmarshaller Instance { get; }
    private static PutDataProtectionPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutDataProtectionPolicyResponseUnmarshaller GetInstance();
    public static PutDataProtectionPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationPolicyRequestMarshaller : object {
    private static PutDeliveryDestinationPolicyRequestMarshaller _instance;
    public static PutDeliveryDestinationPolicyRequestMarshaller Instance { get; }
    private static PutDeliveryDestinationPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutDeliveryDestinationPolicyRequest publicRequest);
    internal static PutDeliveryDestinationPolicyRequestMarshaller GetInstance();
    public static PutDeliveryDestinationPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutDeliveryDestinationPolicyResponseUnmarshaller _instance;
    public static PutDeliveryDestinationPolicyResponseUnmarshaller Instance { get; }
    private static PutDeliveryDestinationPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutDeliveryDestinationPolicyResponseUnmarshaller GetInstance();
    public static PutDeliveryDestinationPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationRequestMarshaller : object {
    private static PutDeliveryDestinationRequestMarshaller _instance;
    public static PutDeliveryDestinationRequestMarshaller Instance { get; }
    private static PutDeliveryDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutDeliveryDestinationRequest publicRequest);
    internal static PutDeliveryDestinationRequestMarshaller GetInstance();
    public static PutDeliveryDestinationRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliveryDestinationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutDeliveryDestinationResponseUnmarshaller _instance;
    public static PutDeliveryDestinationResponseUnmarshaller Instance { get; }
    private static PutDeliveryDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutDeliveryDestinationResponseUnmarshaller GetInstance();
    public static PutDeliveryDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliverySourceRequestMarshaller : object {
    private static PutDeliverySourceRequestMarshaller _instance;
    public static PutDeliverySourceRequestMarshaller Instance { get; }
    private static PutDeliverySourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutDeliverySourceRequest publicRequest);
    internal static PutDeliverySourceRequestMarshaller GetInstance();
    public static PutDeliverySourceRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDeliverySourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutDeliverySourceResponseUnmarshaller _instance;
    public static PutDeliverySourceResponseUnmarshaller Instance { get; }
    private static PutDeliverySourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutDeliverySourceResponseUnmarshaller GetInstance();
    public static PutDeliverySourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyRequestMarshaller : object {
    private static PutDestinationPolicyRequestMarshaller _instance;
    public static PutDestinationPolicyRequestMarshaller Instance { get; }
    private static PutDestinationPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutDestinationPolicyRequest publicRequest);
    internal static PutDestinationPolicyRequestMarshaller GetInstance();
    public static PutDestinationPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutDestinationPolicyResponseUnmarshaller _instance;
    public static PutDestinationPolicyResponseUnmarshaller Instance { get; }
    private static PutDestinationPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutDestinationPolicyResponseUnmarshaller GetInstance();
    public static PutDestinationPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationRequestMarshaller : object {
    private static PutDestinationRequestMarshaller _instance;
    public static PutDestinationRequestMarshaller Instance { get; }
    private static PutDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutDestinationRequest publicRequest);
    internal static PutDestinationRequestMarshaller GetInstance();
    public static PutDestinationRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutDestinationResponseUnmarshaller _instance;
    public static PutDestinationResponseUnmarshaller Instance { get; }
    private static PutDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutDestinationResponseUnmarshaller GetInstance();
    public static PutDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsRequestMarshaller : object {
    private static PutLogEventsRequestMarshaller _instance;
    public static PutLogEventsRequestMarshaller Instance { get; }
    private static PutLogEventsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutLogEventsRequest publicRequest);
    internal static PutLogEventsRequestMarshaller GetInstance();
    public static PutLogEventsRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutLogEventsResponseUnmarshaller _instance;
    public static PutLogEventsResponseUnmarshaller Instance { get; }
    private static PutLogEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutLogEventsResponseUnmarshaller GetInstance();
    public static PutLogEventsResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterRequestMarshaller : object {
    private static PutMetricFilterRequestMarshaller _instance;
    public static PutMetricFilterRequestMarshaller Instance { get; }
    private static PutMetricFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutMetricFilterRequest publicRequest);
    internal static PutMetricFilterRequestMarshaller GetInstance();
    public static PutMetricFilterRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutMetricFilterResponseUnmarshaller _instance;
    public static PutMetricFilterResponseUnmarshaller Instance { get; }
    private static PutMetricFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutMetricFilterResponseUnmarshaller GetInstance();
    public static PutMetricFilterResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutQueryDefinitionRequestMarshaller : object {
    private static PutQueryDefinitionRequestMarshaller _instance;
    public static PutQueryDefinitionRequestMarshaller Instance { get; }
    private static PutQueryDefinitionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutQueryDefinitionRequest publicRequest);
    internal static PutQueryDefinitionRequestMarshaller GetInstance();
    public static PutQueryDefinitionRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutQueryDefinitionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutQueryDefinitionResponseUnmarshaller _instance;
    public static PutQueryDefinitionResponseUnmarshaller Instance { get; }
    private static PutQueryDefinitionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutQueryDefinitionResponseUnmarshaller GetInstance();
    public static PutQueryDefinitionResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller : object {
    private static PutResourcePolicyRequestMarshaller _instance;
    public static PutResourcePolicyRequestMarshaller Instance { get; }
    private static PutResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutResourcePolicyRequest publicRequest);
    internal static PutResourcePolicyRequestMarshaller GetInstance();
    public static PutResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutResourcePolicyResponseUnmarshaller _instance;
    public static PutResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutResourcePolicyResponseUnmarshaller GetInstance();
    public static PutResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyRequestMarshaller : object {
    private static PutRetentionPolicyRequestMarshaller _instance;
    public static PutRetentionPolicyRequestMarshaller Instance { get; }
    private static PutRetentionPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutRetentionPolicyRequest publicRequest);
    internal static PutRetentionPolicyRequestMarshaller GetInstance();
    public static PutRetentionPolicyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutRetentionPolicyResponseUnmarshaller _instance;
    public static PutRetentionPolicyResponseUnmarshaller Instance { get; }
    private static PutRetentionPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutRetentionPolicyResponseUnmarshaller GetInstance();
    public static PutRetentionPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterRequestMarshaller : object {
    private static PutSubscriptionFilterRequestMarshaller _instance;
    public static PutSubscriptionFilterRequestMarshaller Instance { get; }
    private static PutSubscriptionFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutSubscriptionFilterRequest publicRequest);
    internal static PutSubscriptionFilterRequestMarshaller GetInstance();
    public static PutSubscriptionFilterRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutSubscriptionFilterResponseUnmarshaller _instance;
    public static PutSubscriptionFilterResponseUnmarshaller Instance { get; }
    private static PutSubscriptionFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutSubscriptionFilterResponseUnmarshaller GetInstance();
    public static PutSubscriptionFilterResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryCompileErrorLocationUnmarshaller : object {
    private static QueryCompileErrorLocationUnmarshaller _instance;
    public static QueryCompileErrorLocationUnmarshaller Instance { get; }
    private static QueryCompileErrorLocationUnmarshaller();
    private sealed virtual override QueryCompileErrorLocation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.QueryCompileErrorLocation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryCompileErrorLocation Unmarshall(JsonUnmarshallerContext context);
    public static QueryCompileErrorLocationUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryCompileErrorUnmarshaller : object {
    private static QueryCompileErrorUnmarshaller _instance;
    public static QueryCompileErrorUnmarshaller Instance { get; }
    private static QueryCompileErrorUnmarshaller();
    private sealed virtual override QueryCompileError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.QueryCompileError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryCompileError Unmarshall(JsonUnmarshallerContext context);
    public static QueryCompileErrorUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryDefinitionUnmarshaller : object {
    private static QueryDefinitionUnmarshaller _instance;
    public static QueryDefinitionUnmarshaller Instance { get; }
    private static QueryDefinitionUnmarshaller();
    private sealed virtual override QueryDefinition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.QueryDefinition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryDefinition Unmarshall(JsonUnmarshallerContext context);
    public static QueryDefinitionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryInfoUnmarshaller : object {
    private static QueryInfoUnmarshaller _instance;
    public static QueryInfoUnmarshaller Instance { get; }
    private static QueryInfoUnmarshaller();
    private sealed virtual override QueryInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.QueryInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryInfo Unmarshall(JsonUnmarshallerContext context);
    public static QueryInfoUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.QueryStatisticsUnmarshaller : object {
    private static QueryStatisticsUnmarshaller _instance;
    public static QueryStatisticsUnmarshaller Instance { get; }
    private static QueryStatisticsUnmarshaller();
    private sealed virtual override QueryStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.QueryStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual QueryStatistics Unmarshall(JsonUnmarshallerContext context);
    public static QueryStatisticsUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.RejectedLogEventsInfoUnmarshaller : object {
    private static RejectedLogEventsInfoUnmarshaller _instance;
    public static RejectedLogEventsInfoUnmarshaller Instance { get; }
    private static RejectedLogEventsInfoUnmarshaller();
    private sealed virtual override RejectedLogEventsInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.RejectedLogEventsInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RejectedLogEventsInfo Unmarshall(JsonUnmarshallerContext context);
    public static RejectedLogEventsInfoUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller : object {
    private static ResourceAlreadyExistsExceptionUnmarshaller _instance;
    public static ResourceAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ResourceAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ResourceAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller : object {
    private static ResourcePolicyUnmarshaller _instance;
    public static ResourcePolicyUnmarshaller Instance { get; }
    private static ResourcePolicyUnmarshaller();
    private sealed virtual override ResourcePolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.ResourcePolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourcePolicy Unmarshall(JsonUnmarshallerContext context);
    public static ResourcePolicyUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResultFieldUnmarshaller : object {
    private static ResultFieldUnmarshaller _instance;
    public static ResultFieldUnmarshaller Instance { get; }
    private static ResultFieldUnmarshaller();
    private sealed virtual override ResultField Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.ResultField,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResultField Unmarshall(JsonUnmarshallerContext context);
    public static ResultFieldUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SearchedLogStreamUnmarshaller : object {
    private static SearchedLogStreamUnmarshaller _instance;
    public static SearchedLogStreamUnmarshaller Instance { get; }
    private static SearchedLogStreamUnmarshaller();
    private sealed virtual override SearchedLogStream Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.SearchedLogStream,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SearchedLogStream Unmarshall(JsonUnmarshallerContext context);
    public static SearchedLogStreamUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller : object {
    private static ServiceQuotaExceededExceptionUnmarshaller _instance;
    public static ServiceQuotaExceededExceptionUnmarshaller Instance { get; }
    private static ServiceQuotaExceededExceptionUnmarshaller();
    public sealed virtual ServiceQuotaExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceQuotaExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller : object {
    private static ServiceUnavailableExceptionUnmarshaller _instance;
    public static ServiceUnavailableExceptionUnmarshaller Instance { get; }
    private static ServiceUnavailableExceptionUnmarshaller();
    public sealed virtual ServiceUnavailableException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceUnavailableException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceUnavailableExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SessionStreamingExceptionUnmarshaller : object {
    private static SessionStreamingExceptionUnmarshaller _instance;
    public static SessionStreamingExceptionUnmarshaller Instance { get; }
    private static SessionStreamingExceptionUnmarshaller();
    public sealed virtual SessionStreamingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SessionStreamingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SessionStreamingExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SessionTimeoutExceptionUnmarshaller : object {
    private static SessionTimeoutExceptionUnmarshaller _instance;
    public static SessionTimeoutExceptionUnmarshaller Instance { get; }
    private static SessionTimeoutExceptionUnmarshaller();
    public sealed virtual SessionTimeoutException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SessionTimeoutException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SessionTimeoutExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartLiveTailRequestMarshaller : object {
    private static StartLiveTailRequestMarshaller _instance;
    public static StartLiveTailRequestMarshaller Instance { get; }
    private static StartLiveTailRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartLiveTailRequest publicRequest);
    internal static StartLiveTailRequestMarshaller GetInstance();
    public static StartLiveTailRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartLiveTailResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartLiveTailResponseUnmarshaller _instance;
    public static StartLiveTailResponseUnmarshaller Instance { get; }
    public bool HasStreamingProperty { get; }
    private static StartLiveTailResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartLiveTailResponseUnmarshaller GetInstance();
    public static StartLiveTailResponseUnmarshaller get_Instance();
    protected virtual bool ShouldReadEntireResponse(IWebResponseData response, bool readEntireResponse);
    public virtual bool get_HasStreamingProperty();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartQueryRequestMarshaller : object {
    private static StartQueryRequestMarshaller _instance;
    public static StartQueryRequestMarshaller Instance { get; }
    private static StartQueryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartQueryRequest publicRequest);
    internal static StartQueryRequestMarshaller GetInstance();
    public static StartQueryRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StartQueryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartQueryResponseUnmarshaller _instance;
    public static StartQueryResponseUnmarshaller Instance { get; }
    private static StartQueryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartQueryResponseUnmarshaller GetInstance();
    public static StartQueryResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StopQueryRequestMarshaller : object {
    private static StopQueryRequestMarshaller _instance;
    public static StopQueryRequestMarshaller Instance { get; }
    private static StopQueryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopQueryRequest publicRequest);
    internal static StopQueryRequestMarshaller GetInstance();
    public static StopQueryRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.StopQueryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopQueryResponseUnmarshaller _instance;
    public static StopQueryResponseUnmarshaller Instance { get; }
    private static StopQueryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopQueryResponseUnmarshaller GetInstance();
    public static StopQueryResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SubscriptionFilterUnmarshaller : object {
    private static SubscriptionFilterUnmarshaller _instance;
    public static SubscriptionFilterUnmarshaller Instance { get; }
    private static SubscriptionFilterUnmarshaller();
    private sealed virtual override SubscriptionFilter Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CloudWatchLogs.Model.SubscriptionFilter,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SubscriptionFilter Unmarshall(JsonUnmarshallerContext context);
    public static SubscriptionFilterUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SuppressionPeriodMarshaller : object {
    public static SuppressionPeriodMarshaller Instance;
    private static SuppressionPeriodMarshaller();
    public sealed virtual void Marshall(SuppressionPeriod requestObject, JsonMarshallerContext context);
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupRequestMarshaller : object {
    private static TagLogGroupRequestMarshaller _instance;
    public static TagLogGroupRequestMarshaller Instance { get; }
    private static TagLogGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagLogGroupRequest publicRequest);
    internal static TagLogGroupRequestMarshaller GetInstance();
    public static TagLogGroupRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagLogGroupResponseUnmarshaller _instance;
    public static TagLogGroupResponseUnmarshaller Instance { get; }
    private static TagLogGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagLogGroupResponseUnmarshaller GetInstance();
    public static TagLogGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterRequestMarshaller : object {
    private static TestMetricFilterRequestMarshaller _instance;
    public static TestMetricFilterRequestMarshaller Instance { get; }
    private static TestMetricFilterRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TestMetricFilterRequest publicRequest);
    internal static TestMetricFilterRequestMarshaller GetInstance();
    public static TestMetricFilterRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TestMetricFilterResponseUnmarshaller _instance;
    public static TestMetricFilterResponseUnmarshaller Instance { get; }
    private static TestMetricFilterResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TestMetricFilterResponseUnmarshaller GetInstance();
    public static TestMetricFilterResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller : object {
    private static ThrottlingExceptionUnmarshaller _instance;
    public static ThrottlingExceptionUnmarshaller Instance { get; }
    private static ThrottlingExceptionUnmarshaller();
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ThrottlingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ThrottlingExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller : object {
    private static TooManyTagsExceptionUnmarshaller _instance;
    public static TooManyTagsExceptionUnmarshaller Instance { get; }
    private static TooManyTagsExceptionUnmarshaller();
    public sealed virtual TooManyTagsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyTagsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyTagsExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UnrecognizedClientExceptionUnmarshaller : object {
    private static UnrecognizedClientExceptionUnmarshaller _instance;
    public static UnrecognizedClientExceptionUnmarshaller Instance { get; }
    private static UnrecognizedClientExceptionUnmarshaller();
    public sealed virtual UnrecognizedClientException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnrecognizedClientException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnrecognizedClientExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupRequestMarshaller : object {
    private static UntagLogGroupRequestMarshaller _instance;
    public static UntagLogGroupRequestMarshaller Instance { get; }
    private static UntagLogGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagLogGroupRequest publicRequest);
    internal static UntagLogGroupRequestMarshaller GetInstance();
    public static UntagLogGroupRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagLogGroupResponseUnmarshaller _instance;
    public static UntagLogGroupResponseUnmarshaller Instance { get; }
    private static UntagLogGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagLogGroupResponseUnmarshaller GetInstance();
    public static UntagLogGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateAnomalyRequestMarshaller : object {
    private static UpdateAnomalyRequestMarshaller _instance;
    public static UpdateAnomalyRequestMarshaller Instance { get; }
    private static UpdateAnomalyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAnomalyRequest publicRequest);
    internal static UpdateAnomalyRequestMarshaller GetInstance();
    public static UpdateAnomalyRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateAnomalyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateAnomalyResponseUnmarshaller _instance;
    public static UpdateAnomalyResponseUnmarshaller Instance { get; }
    private static UpdateAnomalyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAnomalyResponseUnmarshaller GetInstance();
    public static UpdateAnomalyResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateLogAnomalyDetectorRequestMarshaller : object {
    private static UpdateLogAnomalyDetectorRequestMarshaller _instance;
    public static UpdateLogAnomalyDetectorRequestMarshaller Instance { get; }
    private static UpdateLogAnomalyDetectorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateLogAnomalyDetectorRequest publicRequest);
    internal static UpdateLogAnomalyDetectorRequestMarshaller GetInstance();
    public static UpdateLogAnomalyDetectorRequestMarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UpdateLogAnomalyDetectorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateLogAnomalyDetectorResponseUnmarshaller _instance;
    public static UpdateLogAnomalyDetectorResponseUnmarshaller Instance { get; }
    private static UpdateLogAnomalyDetectorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateLogAnomalyDetectorResponseUnmarshaller GetInstance();
    public static UpdateLogAnomalyDetectorResponseUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller : object {
    private static ValidationExceptionUnmarshaller _instance;
    public static ValidationExceptionUnmarshaller Instance { get; }
    private static ValidationExceptionUnmarshaller();
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ValidationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ValidationExceptionUnmarshaller get_Instance();
}
public class Amazon.CloudWatchLogs.Model.InvalidOperationException : AmazonCloudWatchLogsException {
    public InvalidOperationException(string message);
    public InvalidOperationException(string message, Exception innerException);
    public InvalidOperationException(Exception innerException);
    public InvalidOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOperationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidOperationException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.InvalidParameterException : AmazonCloudWatchLogsException {
    public InvalidParameterException(string message);
    public InvalidParameterException(string message, Exception innerException);
    public InvalidParameterException(Exception innerException);
    public InvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidParameterException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException : AmazonCloudWatchLogsException {
    private string _expectedSequenceToken;
    [AWSPropertyAttribute]
public string ExpectedSequenceToken { get; public set; }
    public InvalidSequenceTokenException(string message);
    public InvalidSequenceTokenException(string message, Exception innerException);
    public InvalidSequenceTokenException(Exception innerException);
    public InvalidSequenceTokenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSequenceTokenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected InvalidSequenceTokenException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_ExpectedSequenceToken();
    public void set_ExpectedSequenceToken(string value);
    internal bool IsSetExpectedSequenceToken();
}
public class Amazon.CloudWatchLogs.Model.LimitExceededException : AmazonCloudWatchLogsException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected LimitExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
internal class Amazon.CloudWatchLogs.Model.ListAnomaliesPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private ListAnomaliesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListAnomaliesResponse> Responses { get; }
    public IPaginatedEnumerable`1<Anomaly> Anomalies { get; }
    internal ListAnomaliesPaginator(IAmazonCloudWatchLogs client, ListAnomaliesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListAnomaliesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<Anomaly> get_Anomalies();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.ListAnomaliesPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-ListAnomaliesResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<ListAnomaliesResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.ListAnomaliesResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.ListAnomaliesRequest : AmazonCloudWatchLogsRequest {
    private string _anomalyDetectorArn;
    private Nullable`1<int> _limit;
    private string _nextToken;
    private SuppressionState _suppressionState;
    [AWSPropertyAttribute]
public string AnomalyDetectorArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public SuppressionState SuppressionState { get; public set; }
    public string get_AnomalyDetectorArn();
    public void set_AnomalyDetectorArn(string value);
    internal bool IsSetAnomalyDetectorArn();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public SuppressionState get_SuppressionState();
    public void set_SuppressionState(SuppressionState value);
    internal bool IsSetSuppressionState();
}
public class Amazon.CloudWatchLogs.Model.ListAnomaliesResponse : AmazonWebServiceResponse {
    private List`1<Anomaly> _anomalies;
    private string _nextToken;
    public List`1<Anomaly> Anomalies { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<Anomaly> get_Anomalies();
    public void set_Anomalies(List`1<Anomaly> value);
    internal bool IsSetAnomalies();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsPaginator : object {
    private IAmazonCloudWatchLogs _client;
    private ListLogAnomalyDetectorsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListLogAnomalyDetectorsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AnomalyDetector> AnomalyDetectors { get; }
    internal ListLogAnomalyDetectorsPaginator(IAmazonCloudWatchLogs client, ListLogAnomalyDetectorsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListLogAnomalyDetectorsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AnomalyDetector> get_AnomalyDetectors();
    [IteratorStateMachineAttribute("Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsPaginator/<Amazon-Runtime-IPaginator<Amazon-CloudWatchLogs-Model-ListLogAnomalyDetectorsResponse>-Paginate>d__8")]
private sealed virtual override IEnumerable`1<ListLogAnomalyDetectorsResponse> Amazon.Runtime.IPaginator<Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsResponse>.Paginate();
}
public class Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsRequest : AmazonCloudWatchLogsRequest {
    private string _filterLogGroupArn;
    private Nullable`1<int> _limit;
    private string _nextToken;
    [AWSPropertyAttribute]
public string FilterLogGroupArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_FilterLogGroupArn();
    public void set_FilterLogGroupArn(string value);
    internal bool IsSetFilterLogGroupArn();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.ListLogAnomalyDetectorsResponse : AmazonWebServiceResponse {
    private List`1<AnomalyDetector> _anomalyDetectors;
    private string _nextToken;
    public List`1<AnomalyDetector> AnomalyDetectors { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<AnomalyDetector> get_AnomalyDetectors();
    public void set_AnomalyDetectors(List`1<AnomalyDetector> value);
    internal bool IsSetAnomalyDetectors();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CloudWatchLogs.Model.ListTagsForResourceRequest : AmazonCloudWatchLogsRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.CloudWatchLogs.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
[ObsoleteAttribute("Please use the generic tagging API model ListTagsForResourceRequest and ListTagsForResourceResponse")]
public class Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupName;
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
}
[ObsoleteAttribute("Please use the generic tagging API model ListTagsForResourceRequest and ListTagsForResourceResponse")]
public class Amazon.CloudWatchLogs.Model.ListTagsLogGroupResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.LiveTailSessionLogEvent : object {
    private Nullable`1<long> _ingestionTime;
    private string _logGroupIdentifier;
    private string _logStreamName;
    private string _message;
    private Nullable`1<long> _timestamp;
    [AWSPropertyAttribute]
public Nullable`1<long> IngestionTime { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamName { get; public set; }
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Timestamp { get; public set; }
    public Nullable`1<long> get_IngestionTime();
    public void set_IngestionTime(Nullable`1<long> value);
    internal bool IsSetIngestionTime();
    public string get_LogGroupIdentifier();
    public void set_LogGroupIdentifier(string value);
    internal bool IsSetLogGroupIdentifier();
    public string get_LogStreamName();
    public void set_LogStreamName(string value);
    internal bool IsSetLogStreamName();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public Nullable`1<long> get_Timestamp();
    public void set_Timestamp(Nullable`1<long> value);
    internal bool IsSetTimestamp();
}
public class Amazon.CloudWatchLogs.Model.LiveTailSessionMetadata : object {
    private Nullable`1<bool> _sampled;
    public Nullable`1<bool> Sampled { get; public set; }
    public Nullable`1<bool> get_Sampled();
    public void set_Sampled(Nullable`1<bool> value);
    internal bool IsSetSampled();
}
public class Amazon.CloudWatchLogs.Model.LiveTailSessionStart : object {
    private string _logEventFilterPattern;
    private List`1<string> _logGroupIdentifiers;
    private List`1<string> _logStreamNamePrefixes;
    private List`1<string> _logStreamNames;
    private string _requestId;
    private string _sessionId;
    [AWSPropertyAttribute]
public string LogEventFilterPattern { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogGroupIdentifiers { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogStreamNamePrefixes { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogStreamNames { get; public set; }
    [AWSPropertyAttribute]
public string RequestId { get; public set; }
    [AWSPropertyAttribute]
public string SessionId { get; public set; }
    public string get_LogEventFilterPattern();
    public void set_LogEventFilterPattern(string value);
    internal bool IsSetLogEventFilterPattern();
    public List`1<string> get_LogGroupIdentifiers();
    public void set_LogGroupIdentifiers(List`1<string> value);
    internal bool IsSetLogGroupIdentifiers();
    public List`1<string> get_LogStreamNamePrefixes();
    public void set_LogStreamNamePrefixes(List`1<string> value);
    internal bool IsSetLogStreamNamePrefixes();
    public List`1<string> get_LogStreamNames();
    public void set_LogStreamNames(List`1<string> value);
    internal bool IsSetLogStreamNames();
    public string get_RequestId();
    public void set_RequestId(string value);
    internal bool IsSetRequestId();
    public string get_SessionId();
    public void set_SessionId(string value);
    internal bool IsSetSessionId();
}
public class Amazon.CloudWatchLogs.Model.LiveTailSessionUpdate : object {
    private LiveTailSessionMetadata _sessionMetadata;
    private List`1<LiveTailSessionLogEvent> _sessionResults;
    public LiveTailSessionMetadata SessionMetadata { get; public set; }
    public List`1<LiveTailSessionLogEvent> SessionResults { get; public set; }
    public LiveTailSessionMetadata get_SessionMetadata();
    public void set_SessionMetadata(LiveTailSessionMetadata value);
    internal bool IsSetSessionMetadata();
    public List`1<LiveTailSessionLogEvent> get_SessionResults();
    public void set_SessionResults(List`1<LiveTailSessionLogEvent> value);
    internal bool IsSetSessionResults();
}
public class Amazon.CloudWatchLogs.Model.LogEvent : object {
    private string _message;
    private Nullable`1<long> _timestamp;
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> Timestamp { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public Nullable`1<long> get_Timestamp();
    public void set_Timestamp(Nullable`1<long> value);
    internal bool IsSetTimestamp();
}
public class Amazon.CloudWatchLogs.Model.LogGroup : object {
    private string _arn;
    private Nullable`1<DateTime> _creationTime;
    private DataProtectionStatus _dataProtectionStatus;
    private List`1<string> _inheritedProperties;
    private string _kmsKeyId;
    private string _logGroupArn;
    private LogGroupClass _logGroupClass;
    private string _logGroupName;
    private Nullable`1<int> _metricFilterCount;
    private Nullable`1<int> _retentionInDays;
    private Nullable`1<long> _storedBytes;
    public string Arn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; public set; }
    public DataProtectionStatus DataProtectionStatus { get; public set; }
    public List`1<string> InheritedProperties { get; public set; }
    [AWSPropertyAttribute]
public string KmsKeyId { get; public set; }
    public string LogGroupArn { get; public set; }
    public LogGroupClass LogGroupClass { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    public Nullable`1<int> MetricFilterCount { get; public set; }
    public Nullable`1<int> RetentionInDays { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> StoredBytes { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public DataProtectionStatus get_DataProtectionStatus();
    public void set_DataProtectionStatus(DataProtectionStatus value);
    internal bool IsSetDataProtectionStatus();
    public List`1<string> get_InheritedProperties();
    public void set_InheritedProperties(List`1<string> value);
    internal bool IsSetInheritedProperties();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public string get_LogGroupArn();
    public void set_LogGroupArn(string value);
    internal bool IsSetLogGroupArn();
    public LogGroupClass get_LogGroupClass();
    public void set_LogGroupClass(LogGroupClass value);
    internal bool IsSetLogGroupClass();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public Nullable`1<int> get_MetricFilterCount();
    public void set_MetricFilterCount(Nullable`1<int> value);
    internal bool IsSetMetricFilterCount();
    public Nullable`1<int> get_RetentionInDays();
    public void set_RetentionInDays(Nullable`1<int> value);
    internal bool IsSetRetentionInDays();
    public Nullable`1<long> get_StoredBytes();
    public void set_StoredBytes(Nullable`1<long> value);
    internal bool IsSetStoredBytes();
}
public class Amazon.CloudWatchLogs.Model.LogGroupField : object {
    private string _name;
    private Nullable`1<int> _percent;
    public string Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Percent { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<int> get_Percent();
    public void set_Percent(Nullable`1<int> value);
    internal bool IsSetPercent();
}
public class Amazon.CloudWatchLogs.Model.LogStream : object {
    private string _arn;
    private Nullable`1<DateTime> _creationTime;
    private Nullable`1<DateTime> _firstEventTimestamp;
    private Nullable`1<DateTime> _lastEventTimestamp;
    private Nullable`1<DateTime> _lastIngestionTime;
    private string _logStreamName;
    private Nullable`1<long> _storedBytes;
    private string _uploadSequenceToken;
    public string Arn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> FirstEventTimestamp { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastEventTimestamp { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> LastIngestionTime { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamName { get; public set; }
    [ObsoleteAttribute("Starting on June 17, 2019, this parameter will be deprecated for log streams, and will be reported as zero. This change applies only to log streams. The storedBytes parameter for log groups is not affected.")]
[AWSPropertyAttribute]
public Nullable`1<long> StoredBytes { get; public set; }
    [AWSPropertyAttribute]
public string UploadSequenceToken { get; public set; }
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public Nullable`1<DateTime> get_FirstEventTimestamp();
    public void set_FirstEventTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetFirstEventTimestamp();
    public Nullable`1<DateTime> get_LastEventTimestamp();
    public void set_LastEventTimestamp(Nullable`1<DateTime> value);
    internal bool IsSetLastEventTimestamp();
    public Nullable`1<DateTime> get_LastIngestionTime();
    public void set_LastIngestionTime(Nullable`1<DateTime> value);
    internal bool IsSetLastIngestionTime();
    public string get_LogStreamName();
    public void set_LogStreamName(string value);
    internal bool IsSetLogStreamName();
    public Nullable`1<long> get_StoredBytes();
    public void set_StoredBytes(Nullable`1<long> value);
    internal bool IsSetStoredBytes();
    public string get_UploadSequenceToken();
    public void set_UploadSequenceToken(string value);
    internal bool IsSetUploadSequenceToken();
}
public class Amazon.CloudWatchLogs.Model.MalformedQueryException : AmazonCloudWatchLogsException {
    private QueryCompileError _queryCompileError;
    public QueryCompileError QueryCompileError { get; public set; }
    public MalformedQueryException(string message);
    public MalformedQueryException(string message, Exception innerException);
    public MalformedQueryException(Exception innerException);
    public MalformedQueryException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MalformedQueryException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected MalformedQueryException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public QueryCompileError get_QueryCompileError();
    public void set_QueryCompileError(QueryCompileError value);
    internal bool IsSetQueryCompileError();
}
public class Amazon.CloudWatchLogs.Model.MetricFilter : object {
    private Nullable`1<DateTime> _creationTime;
    private string _filterName;
    private string _filterPattern;
    private string _logGroupName;
    private List`1<MetricTransformation> _metricTransformations;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string FilterName { get; public set; }
    [AWSPropertyAttribute]
public string FilterPattern { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public List`1<MetricTransformation> MetricTransformations { get; public set; }
    public Nullable`1<DateTime> get_CreationTime();
    public void set_CreationTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationTime();
    public string get_FilterName();
    public void set_FilterName(string value);
    internal bool IsSetFilterName();
    public string get_FilterPattern();
    public void set_FilterPattern(string value);
    internal bool IsSetFilterPattern();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public List`1<MetricTransformation> get_MetricTransformations();
    public void set_MetricTransformations(List`1<MetricTransformation> value);
    internal bool IsSetMetricTransformations();
}
public class Amazon.CloudWatchLogs.Model.MetricFilterMatchRecord : object {
    private string _eventMessage;
    private Nullable`1<long> _eventNumber;
    private Dictionary`2<string, string> _extractedValues;
    [AWSPropertyAttribute]
public string EventMessage { get; public set; }
    public Nullable`1<long> EventNumber { get; public set; }
    public Dictionary`2<string, string> ExtractedValues { get; public set; }
    public string get_EventMessage();
    public void set_EventMessage(string value);
    internal bool IsSetEventMessage();
    public Nullable`1<long> get_EventNumber();
    public void set_EventNumber(Nullable`1<long> value);
    internal bool IsSetEventNumber();
    public Dictionary`2<string, string> get_ExtractedValues();
    public void set_ExtractedValues(Dictionary`2<string, string> value);
    internal bool IsSetExtractedValues();
}
public class Amazon.CloudWatchLogs.Model.MetricTransformation : object {
    private Nullable`1<double> _defaultValue;
    private Dictionary`2<string, string> _dimensions;
    private string _metricName;
    private string _metricNamespace;
    private string _metricValue;
    private StandardUnit _unit;
    public Nullable`1<double> DefaultValue { get; public set; }
    public Dictionary`2<string, string> Dimensions { get; public set; }
    [AWSPropertyAttribute]
public string MetricName { get; public set; }
    [AWSPropertyAttribute]
public string MetricNamespace { get; public set; }
    [AWSPropertyAttribute]
public string MetricValue { get; public set; }
    public StandardUnit Unit { get; public set; }
    public Nullable`1<double> get_DefaultValue();
    public void set_DefaultValue(Nullable`1<double> value);
    internal bool IsSetDefaultValue();
    public Dictionary`2<string, string> get_Dimensions();
    public void set_Dimensions(Dictionary`2<string, string> value);
    internal bool IsSetDimensions();
    public string get_MetricName();
    public void set_MetricName(string value);
    internal bool IsSetMetricName();
    public string get_MetricNamespace();
    public void set_MetricNamespace(string value);
    internal bool IsSetMetricNamespace();
    public string get_MetricValue();
    public void set_MetricValue(string value);
    internal bool IsSetMetricValue();
    public StandardUnit get_Unit();
    public void set_Unit(StandardUnit value);
    internal bool IsSetUnit();
}
public class Amazon.CloudWatchLogs.Model.OperationAbortedException : AmazonCloudWatchLogsException {
    public OperationAbortedException(string message);
    public OperationAbortedException(string message, Exception innerException);
    public OperationAbortedException(Exception innerException);
    public OperationAbortedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public OperationAbortedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected OperationAbortedException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.OutputLogEvent : object {
    private Nullable`1<DateTime> _ingestionTime;
    private string _message;
    private Nullable`1<DateTime> _timestamp;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> IngestionTime { get; public set; }
    [AWSPropertyAttribute]
public string Message { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> Timestamp { get; public set; }
    public Nullable`1<DateTime> get_IngestionTime();
    public void set_IngestionTime(Nullable`1<DateTime> value);
    internal bool IsSetIngestionTime();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public Nullable`1<DateTime> get_Timestamp();
    public void set_Timestamp(Nullable`1<DateTime> value);
    internal bool IsSetTimestamp();
}
public class Amazon.CloudWatchLogs.Model.PatternToken : object {
    private Nullable`1<int> _dynamicTokenPosition;
    private Dictionary`2<string, long> _enumerations;
    private Nullable`1<bool> _isDynamic;
    private string _tokenString;
    public Nullable`1<int> DynamicTokenPosition { get; public set; }
    public Dictionary`2<string, long> Enumerations { get; public set; }
    public Nullable`1<bool> IsDynamic { get; public set; }
    [AWSPropertyAttribute]
public string TokenString { get; public set; }
    public Nullable`1<int> get_DynamicTokenPosition();
    public void set_DynamicTokenPosition(Nullable`1<int> value);
    internal bool IsSetDynamicTokenPosition();
    public Dictionary`2<string, long> get_Enumerations();
    public void set_Enumerations(Dictionary`2<string, long> value);
    internal bool IsSetEnumerations();
    public Nullable`1<bool> get_IsDynamic();
    public void set_IsDynamic(Nullable`1<bool> value);
    internal bool IsSetIsDynamic();
    public string get_TokenString();
    public void set_TokenString(string value);
    internal bool IsSetTokenString();
}
public class Amazon.CloudWatchLogs.Model.Policy : object {
    private string _deliveryDestinationPolicy;
    [AWSPropertyAttribute]
public string DeliveryDestinationPolicy { get; public set; }
    public string get_DeliveryDestinationPolicy();
    public void set_DeliveryDestinationPolicy(string value);
    internal bool IsSetDeliveryDestinationPolicy();
}
public class Amazon.CloudWatchLogs.Model.PutAccountPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _policyDocument;
    private string _policyName;
    private PolicyType _policyType;
    private Scope _scope;
    private string _selectionCriteria;
    [AWSPropertyAttribute]
public string PolicyDocument { get; public set; }
    [AWSPropertyAttribute]
public string PolicyName { get; public set; }
    [AWSPropertyAttribute]
public PolicyType PolicyType { get; public set; }
    public Scope Scope { get; public set; }
    public string SelectionCriteria { get; public set; }
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public PolicyType get_PolicyType();
    public void set_PolicyType(PolicyType value);
    internal bool IsSetPolicyType();
    public Scope get_Scope();
    public void set_Scope(Scope value);
    internal bool IsSetScope();
    public string get_SelectionCriteria();
    public void set_SelectionCriteria(string value);
    internal bool IsSetSelectionCriteria();
}
public class Amazon.CloudWatchLogs.Model.PutAccountPolicyResponse : AmazonWebServiceResponse {
    private AccountPolicy _accountPolicy;
    public AccountPolicy AccountPolicy { get; public set; }
    public AccountPolicy get_AccountPolicy();
    public void set_AccountPolicy(AccountPolicy value);
    internal bool IsSetAccountPolicy();
}
public class Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupIdentifier;
    private string _policyDocument;
    [AWSPropertyAttribute]
public string LogGroupIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string PolicyDocument { get; public set; }
    public string get_LogGroupIdentifier();
    public void set_LogGroupIdentifier(string value);
    internal bool IsSetLogGroupIdentifier();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
}
public class Amazon.CloudWatchLogs.Model.PutDataProtectionPolicyResponse : AmazonWebServiceResponse {
    private Nullable`1<long> _lastUpdatedTime;
    private string _logGroupIdentifier;
    private string _policyDocument;
    [AWSPropertyAttribute]
public Nullable`1<long> LastUpdatedTime { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupIdentifier { get; public set; }
    public string PolicyDocument { get; public set; }
    public Nullable`1<long> get_LastUpdatedTime();
    public void set_LastUpdatedTime(Nullable`1<long> value);
    internal bool IsSetLastUpdatedTime();
    public string get_LogGroupIdentifier();
    public void set_LogGroupIdentifier(string value);
    internal bool IsSetLogGroupIdentifier();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
}
public class Amazon.CloudWatchLogs.Model.PutDeliveryDestinationPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _deliveryDestinationName;
    private string _deliveryDestinationPolicy;
    [AWSPropertyAttribute]
public string DeliveryDestinationName { get; public set; }
    [AWSPropertyAttribute]
public string DeliveryDestinationPolicy { get; public set; }
    public string get_DeliveryDestinationName();
    public void set_DeliveryDestinationName(string value);
    internal bool IsSetDeliveryDestinationName();
    public string get_DeliveryDestinationPolicy();
    public void set_DeliveryDestinationPolicy(string value);
    internal bool IsSetDeliveryDestinationPolicy();
}
public class Amazon.CloudWatchLogs.Model.PutDeliveryDestinationPolicyResponse : AmazonWebServiceResponse {
    private Policy _policy;
    public Policy Policy { get; public set; }
    public Policy get_Policy();
    public void set_Policy(Policy value);
    internal bool IsSetPolicy();
}
public class Amazon.CloudWatchLogs.Model.PutDeliveryDestinationRequest : AmazonCloudWatchLogsRequest {
    private DeliveryDestinationConfiguration _deliveryDestinationConfiguration;
    private string _name;
    private OutputFormat _outputFormat;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public DeliveryDestinationConfiguration DeliveryDestinationConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public OutputFormat OutputFormat { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public DeliveryDestinationConfiguration get_DeliveryDestinationConfiguration();
    public void set_DeliveryDestinationConfiguration(DeliveryDestinationConfiguration value);
    internal bool IsSetDeliveryDestinationConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public OutputFormat get_OutputFormat();
    public void set_OutputFormat(OutputFormat value);
    internal bool IsSetOutputFormat();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.PutDeliveryDestinationResponse : AmazonWebServiceResponse {
    private DeliveryDestination _deliveryDestination;
    public DeliveryDestination DeliveryDestination { get; public set; }
    public DeliveryDestination get_DeliveryDestination();
    public void set_DeliveryDestination(DeliveryDestination value);
    internal bool IsSetDeliveryDestination();
}
public class Amazon.CloudWatchLogs.Model.PutDeliverySourceRequest : AmazonCloudWatchLogsRequest {
    private string _logType;
    private string _name;
    private string _resourceArn;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string LogType { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_LogType();
    public void set_LogType(string value);
    internal bool IsSetLogType();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.PutDeliverySourceResponse : AmazonWebServiceResponse {
    private DeliverySource _deliverySource;
    public DeliverySource DeliverySource { get; public set; }
    public DeliverySource get_DeliverySource();
    public void set_DeliverySource(DeliverySource value);
    internal bool IsSetDeliverySource();
}
public class Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _accessPolicy;
    private string _destinationName;
    private Nullable`1<bool> _forceUpdate;
    [AWSPropertyAttribute]
public string AccessPolicy { get; public set; }
    [AWSPropertyAttribute]
public string DestinationName { get; public set; }
    public Nullable`1<bool> ForceUpdate { get; public set; }
    public string get_AccessPolicy();
    public void set_AccessPolicy(string value);
    internal bool IsSetAccessPolicy();
    public string get_DestinationName();
    public void set_DestinationName(string value);
    internal bool IsSetDestinationName();
    public Nullable`1<bool> get_ForceUpdate();
    public void set_ForceUpdate(Nullable`1<bool> value);
    internal bool IsSetForceUpdate();
}
public class Amazon.CloudWatchLogs.Model.PutDestinationPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.PutDestinationRequest : AmazonCloudWatchLogsRequest {
    private string _destinationName;
    private string _roleArn;
    private Dictionary`2<string, string> _tags;
    private string _targetArn;
    [AWSPropertyAttribute]
public string DestinationName { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetArn { get; public set; }
    public string get_DestinationName();
    public void set_DestinationName(string value);
    internal bool IsSetDestinationName();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_TargetArn();
    public void set_TargetArn(string value);
    internal bool IsSetTargetArn();
}
public class Amazon.CloudWatchLogs.Model.PutDestinationResponse : AmazonWebServiceResponse {
    private Destination _destination;
    public Destination Destination { get; public set; }
    public Destination get_Destination();
    public void set_Destination(Destination value);
    internal bool IsSetDestination();
}
public class Amazon.CloudWatchLogs.Model.PutLogEventsRequest : AmazonCloudWatchLogsRequest {
    private List`1<InputLogEvent> _logEvents;
    private string _logGroupName;
    private string _logStreamName;
    private string _sequenceToken;
    [AWSPropertyAttribute]
public List`1<InputLogEvent> LogEvents { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string LogStreamName { get; public set; }
    [AWSPropertyAttribute]
public string SequenceToken { get; public set; }
    public PutLogEventsRequest(string logGroupName, string logStreamName, List`1<InputLogEvent> logEvents);
    public List`1<InputLogEvent> get_LogEvents();
    public void set_LogEvents(List`1<InputLogEvent> value);
    internal bool IsSetLogEvents();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_LogStreamName();
    public void set_LogStreamName(string value);
    internal bool IsSetLogStreamName();
    public string get_SequenceToken();
    public void set_SequenceToken(string value);
    internal bool IsSetSequenceToken();
}
public class Amazon.CloudWatchLogs.Model.PutLogEventsResponse : AmazonWebServiceResponse {
    private string _nextSequenceToken;
    private RejectedLogEventsInfo _rejectedLogEventsInfo;
    [AWSPropertyAttribute]
public string NextSequenceToken { get; public set; }
    public RejectedLogEventsInfo RejectedLogEventsInfo { get; public set; }
    public string get_NextSequenceToken();
    public void set_NextSequenceToken(string value);
    internal bool IsSetNextSequenceToken();
    public RejectedLogEventsInfo get_RejectedLogEventsInfo();
    public void set_RejectedLogEventsInfo(RejectedLogEventsInfo value);
    internal bool IsSetRejectedLogEventsInfo();
}
public class Amazon.CloudWatchLogs.Model.PutMetricFilterRequest : AmazonCloudWatchLogsRequest {
    private string _filterName;
    private string _filterPattern;
    private string _logGroupName;
    private List`1<MetricTransformation> _metricTransformations;
    [AWSPropertyAttribute]
public string FilterName { get; public set; }
    [AWSPropertyAttribute]
public string FilterPattern { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public List`1<MetricTransformation> MetricTransformations { get; public set; }
    public PutMetricFilterRequest(string logGroupName, string filterName, string filterPattern, List`1<MetricTransformation> metricTransformations);
    public string get_FilterName();
    public void set_FilterName(string value);
    internal bool IsSetFilterName();
    public string get_FilterPattern();
    public void set_FilterPattern(string value);
    internal bool IsSetFilterPattern();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public List`1<MetricTransformation> get_MetricTransformations();
    public void set_MetricTransformations(List`1<MetricTransformation> value);
    internal bool IsSetMetricTransformations();
}
public class Amazon.CloudWatchLogs.Model.PutMetricFilterResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.PutQueryDefinitionRequest : AmazonCloudWatchLogsRequest {
    private string _clientToken;
    private List`1<string> _logGroupNames;
    private string _name;
    private string _queryDefinitionId;
    private string _queryString;
    [AWSPropertyAttribute]
public string ClientToken { get; public set; }
    public List`1<string> LogGroupNames { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string QueryDefinitionId { get; public set; }
    [AWSPropertyAttribute]
public string QueryString { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public List`1<string> get_LogGroupNames();
    public void set_LogGroupNames(List`1<string> value);
    internal bool IsSetLogGroupNames();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_QueryDefinitionId();
    public void set_QueryDefinitionId(string value);
    internal bool IsSetQueryDefinitionId();
    public string get_QueryString();
    public void set_QueryString(string value);
    internal bool IsSetQueryString();
}
public class Amazon.CloudWatchLogs.Model.PutQueryDefinitionResponse : AmazonWebServiceResponse {
    private string _queryDefinitionId;
    [AWSPropertyAttribute]
public string QueryDefinitionId { get; public set; }
    public string get_QueryDefinitionId();
    public void set_QueryDefinitionId(string value);
    internal bool IsSetQueryDefinitionId();
}
public class Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest : AmazonCloudWatchLogsRequest {
    private string _policyDocument;
    private string _policyName;
    [AWSPropertyAttribute]
public string PolicyDocument { get; public set; }
    public string PolicyName { get; public set; }
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.CloudWatchLogs.Model.PutResourcePolicyResponse : AmazonWebServiceResponse {
    private ResourcePolicy _resourcePolicy;
    public ResourcePolicy ResourcePolicy { get; public set; }
    public ResourcePolicy get_ResourcePolicy();
    public void set_ResourcePolicy(ResourcePolicy value);
    internal bool IsSetResourcePolicy();
}
public class Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupName;
    private Nullable`1<int> _retentionInDays;
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RetentionInDays { get; public set; }
    public PutRetentionPolicyRequest(string logGroupName, Nullable`1<int> retentionInDays);
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public Nullable`1<int> get_RetentionInDays();
    public void set_RetentionInDays(Nullable`1<int> value);
    internal bool IsSetRetentionInDays();
}
public class Amazon.CloudWatchLogs.Model.PutRetentionPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest : AmazonCloudWatchLogsRequest {
    private string _destinationArn;
    private Distribution _distribution;
    private string _filterName;
    private string _filterPattern;
    private string _logGroupName;
    private string _roleArn;
    [AWSPropertyAttribute]
public string DestinationArn { get; public set; }
    public Distribution Distribution { get; public set; }
    [AWSPropertyAttribute]
public string FilterName { get; public set; }
    [AWSPropertyAttribute]
public string FilterPattern { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public string get_DestinationArn();
    public void set_DestinationArn(string value);
    internal bool IsSetDestinationArn();
    public Distribution get_Distribution();
    public void set_Distribution(Distribution value);
    internal bool IsSetDistribution();
    public string get_FilterName();
    public void set_FilterName(string value);
    internal bool IsSetFilterName();
    public string get_FilterPattern();
    public void set_FilterPattern(string value);
    internal bool IsSetFilterPattern();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.CloudWatchLogs.Model.PutSubscriptionFilterResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.QueryCompileError : object {
    private QueryCompileErrorLocation _location;
    private string _message;
    public QueryCompileErrorLocation Location { get; public set; }
    public string Message { get; public set; }
    public QueryCompileErrorLocation get_Location();
    public void set_Location(QueryCompileErrorLocation value);
    internal bool IsSetLocation();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.CloudWatchLogs.Model.QueryCompileErrorLocation : object {
    private Nullable`1<int> _endCharOffset;
    private Nullable`1<int> _startCharOffset;
    public Nullable`1<int> EndCharOffset { get; public set; }
    public Nullable`1<int> StartCharOffset { get; public set; }
    public Nullable`1<int> get_EndCharOffset();
    public void set_EndCharOffset(Nullable`1<int> value);
    internal bool IsSetEndCharOffset();
    public Nullable`1<int> get_StartCharOffset();
    public void set_StartCharOffset(Nullable`1<int> value);
    internal bool IsSetStartCharOffset();
}
public class Amazon.CloudWatchLogs.Model.QueryDefinition : object {
    private Nullable`1<long> _lastModified;
    private List`1<string> _logGroupNames;
    private string _name;
    private string _queryDefinitionId;
    private string _queryString;
    [AWSPropertyAttribute]
public Nullable`1<long> LastModified { get; public set; }
    public List`1<string> LogGroupNames { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string QueryDefinitionId { get; public set; }
    [AWSPropertyAttribute]
public string QueryString { get; public set; }
    public Nullable`1<long> get_LastModified();
    public void set_LastModified(Nullable`1<long> value);
    internal bool IsSetLastModified();
    public List`1<string> get_LogGroupNames();
    public void set_LogGroupNames(List`1<string> value);
    internal bool IsSetLogGroupNames();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_QueryDefinitionId();
    public void set_QueryDefinitionId(string value);
    internal bool IsSetQueryDefinitionId();
    public string get_QueryString();
    public void set_QueryString(string value);
    internal bool IsSetQueryString();
}
public class Amazon.CloudWatchLogs.Model.QueryInfo : object {
    private Nullable`1<long> _createTime;
    private string _logGroupName;
    private string _queryId;
    private string _queryString;
    private QueryStatus _status;
    [AWSPropertyAttribute]
public Nullable`1<long> CreateTime { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    [AWSPropertyAttribute]
public string QueryString { get; public set; }
    public QueryStatus Status { get; public set; }
    public Nullable`1<long> get_CreateTime();
    public void set_CreateTime(Nullable`1<long> value);
    internal bool IsSetCreateTime();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
    public string get_QueryString();
    public void set_QueryString(string value);
    internal bool IsSetQueryString();
    public QueryStatus get_Status();
    public void set_Status(QueryStatus value);
    internal bool IsSetStatus();
}
public class Amazon.CloudWatchLogs.Model.QueryStatistics : object {
    private Nullable`1<double> _bytesScanned;
    private Nullable`1<double> _recordsMatched;
    private Nullable`1<double> _recordsScanned;
    public Nullable`1<double> BytesScanned { get; public set; }
    public Nullable`1<double> RecordsMatched { get; public set; }
    public Nullable`1<double> RecordsScanned { get; public set; }
    public Nullable`1<double> get_BytesScanned();
    public void set_BytesScanned(Nullable`1<double> value);
    internal bool IsSetBytesScanned();
    public Nullable`1<double> get_RecordsMatched();
    public void set_RecordsMatched(Nullable`1<double> value);
    internal bool IsSetRecordsMatched();
    public Nullable`1<double> get_RecordsScanned();
    public void set_RecordsScanned(Nullable`1<double> value);
    internal bool IsSetRecordsScanned();
}
public class Amazon.CloudWatchLogs.Model.RejectedLogEventsInfo : object {
    private Nullable`1<int> _expiredLogEventEndIndex;
    private Nullable`1<int> _tooNewLogEventStartIndex;
    private Nullable`1<int> _tooOldLogEventEndIndex;
    public Nullable`1<int> ExpiredLogEventEndIndex { get; public set; }
    public Nullable`1<int> TooNewLogEventStartIndex { get; public set; }
    public Nullable`1<int> TooOldLogEventEndIndex { get; public set; }
    public Nullable`1<int> get_ExpiredLogEventEndIndex();
    public void set_ExpiredLogEventEndIndex(Nullable`1<int> value);
    internal bool IsSetExpiredLogEventEndIndex();
    public Nullable`1<int> get_TooNewLogEventStartIndex();
    public void set_TooNewLogEventStartIndex(Nullable`1<int> value);
    internal bool IsSetTooNewLogEventStartIndex();
    public Nullable`1<int> get_TooOldLogEventEndIndex();
    public void set_TooOldLogEventEndIndex(Nullable`1<int> value);
    internal bool IsSetTooOldLogEventEndIndex();
}
public class Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException : AmazonCloudWatchLogsException {
    public ResourceAlreadyExistsException(string message);
    public ResourceAlreadyExistsException(string message, Exception innerException);
    public ResourceAlreadyExistsException(Exception innerException);
    public ResourceAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ResourceAlreadyExistsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.ResourceNotFoundException : AmazonCloudWatchLogsException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ResourceNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.ResourcePolicy : object {
    private Nullable`1<long> _lastUpdatedTime;
    private string _policyDocument;
    private string _policyName;
    [AWSPropertyAttribute]
public Nullable`1<long> LastUpdatedTime { get; public set; }
    [AWSPropertyAttribute]
public string PolicyDocument { get; public set; }
    public string PolicyName { get; public set; }
    public Nullable`1<long> get_LastUpdatedTime();
    public void set_LastUpdatedTime(Nullable`1<long> value);
    internal bool IsSetLastUpdatedTime();
    public string get_PolicyDocument();
    public void set_PolicyDocument(string value);
    internal bool IsSetPolicyDocument();
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
}
public class Amazon.CloudWatchLogs.Model.ResultField : object {
    private string _field;
    private string _value;
    public string Field { get; public set; }
    public string Value { get; public set; }
    public string get_Field();
    public void set_Field(string value);
    internal bool IsSetField();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CloudWatchLogs.Model.SearchedLogStream : object {
    private string _logStreamName;
    private Nullable`1<bool> _searchedCompletely;
    [AWSPropertyAttribute]
public string LogStreamName { get; public set; }
    public Nullable`1<bool> SearchedCompletely { get; public set; }
    public string get_LogStreamName();
    public void set_LogStreamName(string value);
    internal bool IsSetLogStreamName();
    public Nullable`1<bool> get_SearchedCompletely();
    public void set_SearchedCompletely(Nullable`1<bool> value);
    internal bool IsSetSearchedCompletely();
}
public class Amazon.CloudWatchLogs.Model.ServiceQuotaExceededException : AmazonCloudWatchLogsException {
    public ServiceQuotaExceededException(string message);
    public ServiceQuotaExceededException(string message, Exception innerException);
    public ServiceQuotaExceededException(Exception innerException);
    public ServiceQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ServiceQuotaExceededException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.ServiceUnavailableException : AmazonCloudWatchLogsException {
    public ServiceUnavailableException(string message);
    public ServiceUnavailableException(string message, Exception innerException);
    public ServiceUnavailableException(Exception innerException);
    public ServiceUnavailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceUnavailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ServiceUnavailableException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.SessionStreamingException : AmazonCloudWatchLogsException {
    public SessionStreamingException(string message);
    public SessionStreamingException(string message, Exception innerException);
    public SessionStreamingException(Exception innerException);
    public SessionStreamingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SessionStreamingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected SessionStreamingException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.SessionTimeoutException : AmazonCloudWatchLogsException {
    public SessionTimeoutException(string message);
    public SessionTimeoutException(string message, Exception innerException);
    public SessionTimeoutException(Exception innerException);
    public SessionTimeoutException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SessionTimeoutException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected SessionTimeoutException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.StartLiveTailRequest : AmazonCloudWatchLogsRequest {
    private string _logEventFilterPattern;
    private List`1<string> _logGroupIdentifiers;
    private List`1<string> _logStreamNamePrefixes;
    private List`1<string> _logStreamNames;
    [AWSPropertyAttribute]
public string LogEventFilterPattern { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogGroupIdentifiers { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogStreamNamePrefixes { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogStreamNames { get; public set; }
    public string get_LogEventFilterPattern();
    public void set_LogEventFilterPattern(string value);
    internal bool IsSetLogEventFilterPattern();
    public List`1<string> get_LogGroupIdentifiers();
    public void set_LogGroupIdentifiers(List`1<string> value);
    internal bool IsSetLogGroupIdentifiers();
    public List`1<string> get_LogStreamNamePrefixes();
    public void set_LogStreamNamePrefixes(List`1<string> value);
    internal bool IsSetLogStreamNamePrefixes();
    public List`1<string> get_LogStreamNames();
    public void set_LogStreamNames(List`1<string> value);
    internal bool IsSetLogStreamNames();
}
public class Amazon.CloudWatchLogs.Model.StartLiveTailResponse : AmazonWebServiceResponse {
    private StartLiveTailResponseStream _responseStream;
    public StartLiveTailResponseStream ResponseStream { get; public set; }
    public StartLiveTailResponseStream get_ResponseStream();
    public void set_ResponseStream(StartLiveTailResponseStream value);
    internal bool IsSetResponseStream();
}
[SuppressMessageAttribute("Naming", "CA1710:Identifiers should have correct suffix")]
[SuppressMessageAttribute("Microsoft.Design", "CA1063")]
public class Amazon.CloudWatchLogs.Model.StartLiveTailResponseStream : EnumerableEventStream`2<IEventStreamEvent, CloudWatchLogsEventStreamException> {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, Func`2<IEventStreamMessage, IEventStreamEvent>> <EventMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, Func`2<IEventStreamMessage, CloudWatchLogsEventStreamException>> <ExceptionMapping>k__BackingField;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isProcessing;
    [CompilerGeneratedAttribute]
private EventHandler`1<EventStreamEventReceivedArgs`1<IEventStreamEvent>> EventReceived;
    [CompilerGeneratedAttribute]
private EventHandler`1<EventStreamExceptionReceivedArgs`1<CloudWatchLogsEventStreamException>> ExceptionReceived;
    [CompilerGeneratedAttribute]
private EventHandler`1<EventStreamEventReceivedArgs`1<InitialResponseEvent>> InitialResponseReceived;
    [CompilerGeneratedAttribute]
private EventHandler`1<EventStreamEventReceivedArgs`1<LiveTailSessionStart>> SessionStartReceived;
    [CompilerGeneratedAttribute]
private EventHandler`1<EventStreamEventReceivedArgs`1<LiveTailSessionUpdate>> SessionUpdateReceived;
    protected IDictionary`2<string, Func`2<IEventStreamMessage, IEventStreamEvent>> EventMapping { get; }
    protected IDictionary`2<string, Func`2<IEventStreamMessage, CloudWatchLogsEventStreamException>> ExceptionMapping { get; }
    protected bool IsProcessing { get; protected set; }
    public StartLiveTailResponseStream(Stream stream);
    public StartLiveTailResponseStream(Stream stream, IEventStreamDecoder eventStreamDecoder);
    [CompilerGeneratedAttribute]
protected virtual IDictionary`2<string, Func`2<IEventStreamMessage, IEventStreamEvent>> get_EventMapping();
    [CompilerGeneratedAttribute]
protected virtual IDictionary`2<string, Func`2<IEventStreamMessage, CloudWatchLogsEventStreamException>> get_ExceptionMapping();
    protected virtual bool get_IsProcessing();
    protected virtual void set_IsProcessing(bool value);
    [CompilerGeneratedAttribute]
public virtual void add_EventReceived(EventHandler`1<EventStreamEventReceivedArgs`1<IEventStreamEvent>> value);
    [CompilerGeneratedAttribute]
public virtual void remove_EventReceived(EventHandler`1<EventStreamEventReceivedArgs`1<IEventStreamEvent>> value);
    [CompilerGeneratedAttribute]
public virtual void add_ExceptionReceived(EventHandler`1<EventStreamExceptionReceivedArgs`1<CloudWatchLogsEventStreamException>> value);
    [CompilerGeneratedAttribute]
public virtual void remove_ExceptionReceived(EventHandler`1<EventStreamExceptionReceivedArgs`1<CloudWatchLogsEventStreamException>> value);
    [CompilerGeneratedAttribute]
public void add_InitialResponseReceived(EventHandler`1<EventStreamEventReceivedArgs`1<InitialResponseEvent>> value);
    [CompilerGeneratedAttribute]
public void remove_InitialResponseReceived(EventHandler`1<EventStreamEventReceivedArgs`1<InitialResponseEvent>> value);
    [CompilerGeneratedAttribute]
public void add_SessionStartReceived(EventHandler`1<EventStreamEventReceivedArgs`1<LiveTailSessionStart>> value);
    [CompilerGeneratedAttribute]
public void remove_SessionStartReceived(EventHandler`1<EventStreamEventReceivedArgs`1<LiveTailSessionStart>> value);
    [CompilerGeneratedAttribute]
public void add_SessionUpdateReceived(EventHandler`1<EventStreamEventReceivedArgs`1<LiveTailSessionUpdate>> value);
    [CompilerGeneratedAttribute]
public void remove_SessionUpdateReceived(EventHandler`1<EventStreamEventReceivedArgs`1<LiveTailSessionUpdate>> value);
    private bool RaiseEvent(EventHandler`1<EventStreamEventReceivedArgs`1<T>> eventHandler, IEventStreamEvent ev);
    [CompilerGeneratedAttribute]
private void <.ctor>b__26_0(object sender, EventStreamEventReceivedArgs`1<IEventStreamEvent> args);
    [CompilerGeneratedAttribute]
private void <.ctor>b__26_1(object sender, EventStreamExceptionReceivedArgs`1<CloudWatchLogsEventStreamException> args);
    [CompilerGeneratedAttribute]
private void <.ctor>b__26_2(object sender, EventStreamMessageReceivedEventArgs args);
}
public class Amazon.CloudWatchLogs.Model.StartQueryRequest : AmazonCloudWatchLogsRequest {
    private Nullable`1<long> _endTime;
    private Nullable`1<int> _limit;
    private List`1<string> _logGroupIdentifiers;
    private string _logGroupName;
    private List`1<string> _logGroupNames;
    private string _queryString;
    private Nullable`1<long> _startTime;
    [AWSPropertyAttribute]
public Nullable`1<long> EndTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    public List`1<string> LogGroupIdentifiers { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    public List`1<string> LogGroupNames { get; public set; }
    [AWSPropertyAttribute]
public string QueryString { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> StartTime { get; public set; }
    public Nullable`1<long> get_EndTime();
    public void set_EndTime(Nullable`1<long> value);
    internal bool IsSetEndTime();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public List`1<string> get_LogGroupIdentifiers();
    public void set_LogGroupIdentifiers(List`1<string> value);
    internal bool IsSetLogGroupIdentifiers();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public List`1<string> get_LogGroupNames();
    public void set_LogGroupNames(List`1<string> value);
    internal bool IsSetLogGroupNames();
    public string get_QueryString();
    public void set_QueryString(string value);
    internal bool IsSetQueryString();
    public Nullable`1<long> get_StartTime();
    public void set_StartTime(Nullable`1<long> value);
    internal bool IsSetStartTime();
}
public class Amazon.CloudWatchLogs.Model.StartQueryResponse : AmazonWebServiceResponse {
    private string _queryId;
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
}
public class Amazon.CloudWatchLogs.Model.StopQueryRequest : AmazonCloudWatchLogsRequest {
    private string _queryId;
    [AWSPropertyAttribute]
public string QueryId { get; public set; }
    public string get_QueryId();
    public void set_QueryId(string value);
    internal bool IsSetQueryId();
}
public class Amazon.CloudWatchLogs.Model.StopQueryResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _success;
    public Nullable`1<bool> Success { get; public set; }
    public Nullable`1<bool> get_Success();
    public void set_Success(Nullable`1<bool> value);
    internal bool IsSetSuccess();
}
public class Amazon.CloudWatchLogs.Model.SubscriptionFilter : object {
    private Nullable`1<long> _creationTime;
    private string _destinationArn;
    private Distribution _distribution;
    private string _filterName;
    private string _filterPattern;
    private string _logGroupName;
    private string _roleArn;
    [AWSPropertyAttribute]
public Nullable`1<long> CreationTime { get; public set; }
    [AWSPropertyAttribute]
public string DestinationArn { get; public set; }
    public Distribution Distribution { get; public set; }
    [AWSPropertyAttribute]
public string FilterName { get; public set; }
    [AWSPropertyAttribute]
public string FilterPattern { get; public set; }
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public Nullable`1<long> get_CreationTime();
    public void set_CreationTime(Nullable`1<long> value);
    internal bool IsSetCreationTime();
    public string get_DestinationArn();
    public void set_DestinationArn(string value);
    internal bool IsSetDestinationArn();
    public Distribution get_Distribution();
    public void set_Distribution(Distribution value);
    internal bool IsSetDistribution();
    public string get_FilterName();
    public void set_FilterName(string value);
    internal bool IsSetFilterName();
    public string get_FilterPattern();
    public void set_FilterPattern(string value);
    internal bool IsSetFilterPattern();
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
}
public class Amazon.CloudWatchLogs.Model.SuppressionPeriod : object {
    private SuppressionUnit _suppressionUnit;
    private Nullable`1<int> _value;
    public SuppressionUnit SuppressionUnit { get; public set; }
    public Nullable`1<int> Value { get; public set; }
    public SuppressionUnit get_SuppressionUnit();
    public void set_SuppressionUnit(SuppressionUnit value);
    internal bool IsSetSuppressionUnit();
    public Nullable`1<int> get_Value();
    public void set_Value(Nullable`1<int> value);
    internal bool IsSetValue();
}
[ObsoleteAttribute("Please use the generic tagging API model TagResourceRequest")]
public class Amazon.CloudWatchLogs.Model.TagLogGroupRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupName;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.TagLogGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.TagResourceRequest : AmazonCloudWatchLogsRequest {
    private string _resourceArn;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.TestMetricFilterRequest : AmazonCloudWatchLogsRequest {
    private string _filterPattern;
    private List`1<string> _logEventMessages;
    [AWSPropertyAttribute]
public string FilterPattern { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogEventMessages { get; public set; }
    public string get_FilterPattern();
    public void set_FilterPattern(string value);
    internal bool IsSetFilterPattern();
    public List`1<string> get_LogEventMessages();
    public void set_LogEventMessages(List`1<string> value);
    internal bool IsSetLogEventMessages();
}
public class Amazon.CloudWatchLogs.Model.TestMetricFilterResponse : AmazonWebServiceResponse {
    private List`1<MetricFilterMatchRecord> _matches;
    public List`1<MetricFilterMatchRecord> Matches { get; public set; }
    public List`1<MetricFilterMatchRecord> get_Matches();
    public void set_Matches(List`1<MetricFilterMatchRecord> value);
    internal bool IsSetMatches();
}
public class Amazon.CloudWatchLogs.Model.ThrottlingException : AmazonCloudWatchLogsException {
    public ThrottlingException(string message);
    public ThrottlingException(string message, Exception innerException);
    public ThrottlingException(Exception innerException);
    public ThrottlingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ThrottlingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ThrottlingException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.Model.TooManyTagsException : AmazonCloudWatchLogsException {
    private string _resourceName;
    [AWSPropertyAttribute]
public string ResourceName { get; public set; }
    public TooManyTagsException(string message);
    public TooManyTagsException(string message, Exception innerException);
    public TooManyTagsException(Exception innerException);
    public TooManyTagsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyTagsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected TooManyTagsException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_ResourceName();
    public void set_ResourceName(string value);
    internal bool IsSetResourceName();
}
public class Amazon.CloudWatchLogs.Model.UnrecognizedClientException : AmazonCloudWatchLogsException {
    public UnrecognizedClientException(string message);
    public UnrecognizedClientException(string message, Exception innerException);
    public UnrecognizedClientException(Exception innerException);
    public UnrecognizedClientException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnrecognizedClientException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected UnrecognizedClientException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
[ObsoleteAttribute("Please use the generic tagging API model UntagResourceRequest")]
public class Amazon.CloudWatchLogs.Model.UntagLogGroupRequest : AmazonCloudWatchLogsRequest {
    private string _logGroupName;
    private List`1<string> _tags;
    [AWSPropertyAttribute]
public string LogGroupName { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Tags { get; public set; }
    public string get_LogGroupName();
    public void set_LogGroupName(string value);
    internal bool IsSetLogGroupName();
    public List`1<string> get_Tags();
    public void set_Tags(List`1<string> value);
    internal bool IsSetTags();
}
public class Amazon.CloudWatchLogs.Model.UntagLogGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.UntagResourceRequest : AmazonCloudWatchLogsRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.CloudWatchLogs.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.UpdateAnomalyRequest : AmazonCloudWatchLogsRequest {
    private string _anomalyDetectorArn;
    private string _anomalyId;
    private string _patternId;
    private SuppressionPeriod _suppressionPeriod;
    private SuppressionType _suppressionType;
    [AWSPropertyAttribute]
public string AnomalyDetectorArn { get; public set; }
    [AWSPropertyAttribute]
public string AnomalyId { get; public set; }
    [AWSPropertyAttribute]
public string PatternId { get; public set; }
    public SuppressionPeriod SuppressionPeriod { get; public set; }
    public SuppressionType SuppressionType { get; public set; }
    public string get_AnomalyDetectorArn();
    public void set_AnomalyDetectorArn(string value);
    internal bool IsSetAnomalyDetectorArn();
    public string get_AnomalyId();
    public void set_AnomalyId(string value);
    internal bool IsSetAnomalyId();
    public string get_PatternId();
    public void set_PatternId(string value);
    internal bool IsSetPatternId();
    public SuppressionPeriod get_SuppressionPeriod();
    public void set_SuppressionPeriod(SuppressionPeriod value);
    internal bool IsSetSuppressionPeriod();
    public SuppressionType get_SuppressionType();
    public void set_SuppressionType(SuppressionType value);
    internal bool IsSetSuppressionType();
}
public class Amazon.CloudWatchLogs.Model.UpdateAnomalyResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorRequest : AmazonCloudWatchLogsRequest {
    private string _anomalyDetectorArn;
    private Nullable`1<long> _anomalyVisibilityTime;
    private Nullable`1<bool> _enabled;
    private EvaluationFrequency _evaluationFrequency;
    private string _filterPattern;
    [AWSPropertyAttribute]
public string AnomalyDetectorArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> AnomalyVisibilityTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public EvaluationFrequency EvaluationFrequency { get; public set; }
    [AWSPropertyAttribute]
public string FilterPattern { get; public set; }
    public string get_AnomalyDetectorArn();
    public void set_AnomalyDetectorArn(string value);
    internal bool IsSetAnomalyDetectorArn();
    public Nullable`1<long> get_AnomalyVisibilityTime();
    public void set_AnomalyVisibilityTime(Nullable`1<long> value);
    internal bool IsSetAnomalyVisibilityTime();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public EvaluationFrequency get_EvaluationFrequency();
    public void set_EvaluationFrequency(EvaluationFrequency value);
    internal bool IsSetEvaluationFrequency();
    public string get_FilterPattern();
    public void set_FilterPattern(string value);
    internal bool IsSetFilterPattern();
}
public class Amazon.CloudWatchLogs.Model.UpdateLogAnomalyDetectorResponse : AmazonWebServiceResponse {
}
public class Amazon.CloudWatchLogs.Model.ValidationException : AmazonCloudWatchLogsException {
    public ValidationException(string message);
    public ValidationException(string message, Exception innerException);
    public ValidationException(Exception innerException);
    public ValidationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ValidationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    protected ValidationException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
[SuppressMessageAttribute("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
[SuppressMessageAttribute("Microsoft.Security", "CA2134:MethodsMustOverrideWithConsistentTransparencyFxCopRule")]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Amazon.CloudWatchLogs.OrderBy : ConstantClass {
    public static OrderBy LastEventTime;
    public static OrderBy LogStreamName;
    public OrderBy(string value);
    private static OrderBy();
    public static OrderBy FindValue(string value);
    public static OrderBy op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.OutputFormat : ConstantClass {
    public static OutputFormat Json;
    public static OutputFormat Parquet;
    public static OutputFormat Plain;
    public static OutputFormat Raw;
    public static OutputFormat W3c;
    public OutputFormat(string value);
    private static OutputFormat();
    public static OutputFormat FindValue(string value);
    public static OutputFormat op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.PolicyType : ConstantClass {
    public static PolicyType DATA_PROTECTION_POLICY;
    public static PolicyType SUBSCRIPTION_FILTER_POLICY;
    public PolicyType(string value);
    private static PolicyType();
    public static PolicyType FindValue(string value);
    public static PolicyType op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.QueryStatus : ConstantClass {
    public static QueryStatus Cancelled;
    public static QueryStatus Complete;
    public static QueryStatus Failed;
    public static QueryStatus Running;
    public static QueryStatus Scheduled;
    public static QueryStatus Timeout;
    public static QueryStatus Unknown;
    public QueryStatus(string value);
    private static QueryStatus();
    public static QueryStatus FindValue(string value);
    public static QueryStatus op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.Scope : ConstantClass {
    public static Scope ALL;
    public Scope(string value);
    private static Scope();
    public static Scope FindValue(string value);
    public static Scope op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.StandardUnit : ConstantClass {
    public static StandardUnit Bits;
    public static StandardUnit BitsSecond;
    public static StandardUnit Bytes;
    public static StandardUnit BytesSecond;
    public static StandardUnit Count;
    public static StandardUnit CountSecond;
    public static StandardUnit Gigabits;
    public static StandardUnit GigabitsSecond;
    public static StandardUnit Gigabytes;
    public static StandardUnit GigabytesSecond;
    public static StandardUnit Kilobits;
    public static StandardUnit KilobitsSecond;
    public static StandardUnit Kilobytes;
    public static StandardUnit KilobytesSecond;
    public static StandardUnit Megabits;
    public static StandardUnit MegabitsSecond;
    public static StandardUnit Megabytes;
    public static StandardUnit MegabytesSecond;
    public static StandardUnit Microseconds;
    public static StandardUnit Milliseconds;
    public static StandardUnit None;
    public static StandardUnit Percent;
    public static StandardUnit Seconds;
    public static StandardUnit Terabits;
    public static StandardUnit TerabitsSecond;
    public static StandardUnit Terabytes;
    public static StandardUnit TerabytesSecond;
    public StandardUnit(string value);
    private static StandardUnit();
    public static StandardUnit FindValue(string value);
    public static StandardUnit op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.State : ConstantClass {
    public static State Active;
    public static State Baseline;
    public static State Suppressed;
    public State(string value);
    private static State();
    public static State FindValue(string value);
    public static State op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.SuppressionState : ConstantClass {
    public static SuppressionState SUPPRESSED;
    public static SuppressionState UNSUPPRESSED;
    public SuppressionState(string value);
    private static SuppressionState();
    public static SuppressionState FindValue(string value);
    public static SuppressionState op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.SuppressionType : ConstantClass {
    public static SuppressionType INFINITE;
    public static SuppressionType LIMITED;
    public SuppressionType(string value);
    private static SuppressionType();
    public static SuppressionType FindValue(string value);
    public static SuppressionType op_Implicit(string value);
}
public class Amazon.CloudWatchLogs.SuppressionUnit : ConstantClass {
    public static SuppressionUnit HOURS;
    public static SuppressionUnit MINUTES;
    public static SuppressionUnit SECONDS;
    public SuppressionUnit(string value);
    private static SuppressionUnit();
    public static SuppressionUnit FindValue(string value);
    public static SuppressionUnit op_Implicit(string value);
}
