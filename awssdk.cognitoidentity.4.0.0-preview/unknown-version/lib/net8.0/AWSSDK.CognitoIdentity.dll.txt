public class Amazon.CognitoIdentity.AmazonCognitoIdentityClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ICognitoIdentityPaginatorFactory _paginators;
    public ICognitoIdentityPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonCognitoIdentityClient(RegionEndpoint region);
    public AmazonCognitoIdentityClient(AmazonCognitoIdentityConfig config);
    public AmazonCognitoIdentityClient(AWSCredentials credentials);
    public AmazonCognitoIdentityClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonCognitoIdentityClient(AWSCredentials credentials, AmazonCognitoIdentityConfig clientConfig);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonCognitoIdentityConfig clientConfig);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonCognitoIdentityClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonCognitoIdentityConfig clientConfig);
    private static AmazonCognitoIdentityClient();
    public sealed virtual ICognitoIdentityPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual CreateIdentityPoolResponse CreateIdentityPool(CreateIdentityPoolRequest request);
    public virtual Task`1<CreateIdentityPoolResponse> CreateIdentityPoolAsync(CreateIdentityPoolRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIdentitiesResponse DeleteIdentities(DeleteIdentitiesRequest request);
    public virtual Task`1<DeleteIdentitiesResponse> DeleteIdentitiesAsync(DeleteIdentitiesRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIdentityPoolResponse DeleteIdentityPool(DeleteIdentityPoolRequest request);
    public virtual Task`1<DeleteIdentityPoolResponse> DeleteIdentityPoolAsync(string identityPoolId, CancellationToken cancellationToken);
    public virtual Task`1<DeleteIdentityPoolResponse> DeleteIdentityPoolAsync(DeleteIdentityPoolRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIdentityResponse DescribeIdentity(DescribeIdentityRequest request);
    public virtual Task`1<DescribeIdentityResponse> DescribeIdentityAsync(string identityId, CancellationToken cancellationToken);
    public virtual Task`1<DescribeIdentityResponse> DescribeIdentityAsync(DescribeIdentityRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIdentityPoolResponse DescribeIdentityPool(DescribeIdentityPoolRequest request);
    public virtual Task`1<DescribeIdentityPoolResponse> DescribeIdentityPoolAsync(string identityPoolId, CancellationToken cancellationToken);
    public virtual Task`1<DescribeIdentityPoolResponse> DescribeIdentityPoolAsync(DescribeIdentityPoolRequest request, CancellationToken cancellationToken);
    internal virtual GetCredentialsForIdentityResponse GetCredentialsForIdentity(GetCredentialsForIdentityRequest request);
    public virtual Task`1<GetCredentialsForIdentityResponse> GetCredentialsForIdentityAsync(string identityId, CancellationToken cancellationToken);
    public virtual Task`1<GetCredentialsForIdentityResponse> GetCredentialsForIdentityAsync(string identityId, Dictionary`2<string, string> logins, CancellationToken cancellationToken);
    public virtual Task`1<GetCredentialsForIdentityResponse> GetCredentialsForIdentityAsync(GetCredentialsForIdentityRequest request, CancellationToken cancellationToken);
    internal virtual GetIdResponse GetId(GetIdRequest request);
    public virtual Task`1<GetIdResponse> GetIdAsync(GetIdRequest request, CancellationToken cancellationToken);
    internal virtual GetIdentityPoolRolesResponse GetIdentityPoolRoles(GetIdentityPoolRolesRequest request);
    public virtual Task`1<GetIdentityPoolRolesResponse> GetIdentityPoolRolesAsync(string identityPoolId, CancellationToken cancellationToken);
    public virtual Task`1<GetIdentityPoolRolesResponse> GetIdentityPoolRolesAsync(GetIdentityPoolRolesRequest request, CancellationToken cancellationToken);
    internal virtual GetOpenIdTokenResponse GetOpenIdToken(GetOpenIdTokenRequest request);
    public virtual Task`1<GetOpenIdTokenResponse> GetOpenIdTokenAsync(string identityId, CancellationToken cancellationToken);
    public virtual Task`1<GetOpenIdTokenResponse> GetOpenIdTokenAsync(GetOpenIdTokenRequest request, CancellationToken cancellationToken);
    internal virtual GetOpenIdTokenForDeveloperIdentityResponse GetOpenIdTokenForDeveloperIdentity(GetOpenIdTokenForDeveloperIdentityRequest request);
    public virtual Task`1<GetOpenIdTokenForDeveloperIdentityResponse> GetOpenIdTokenForDeveloperIdentityAsync(GetOpenIdTokenForDeveloperIdentityRequest request, CancellationToken cancellationToken);
    internal virtual GetPrincipalTagAttributeMapResponse GetPrincipalTagAttributeMap(GetPrincipalTagAttributeMapRequest request);
    public virtual Task`1<GetPrincipalTagAttributeMapResponse> GetPrincipalTagAttributeMapAsync(GetPrincipalTagAttributeMapRequest request, CancellationToken cancellationToken);
    internal virtual ListIdentitiesResponse ListIdentities(ListIdentitiesRequest request);
    public virtual Task`1<ListIdentitiesResponse> ListIdentitiesAsync(ListIdentitiesRequest request, CancellationToken cancellationToken);
    internal virtual ListIdentityPoolsResponse ListIdentityPools(ListIdentityPoolsRequest request);
    public virtual Task`1<ListIdentityPoolsResponse> ListIdentityPoolsAsync(ListIdentityPoolsRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual LookupDeveloperIdentityResponse LookupDeveloperIdentity(LookupDeveloperIdentityRequest request);
    public virtual Task`1<LookupDeveloperIdentityResponse> LookupDeveloperIdentityAsync(LookupDeveloperIdentityRequest request, CancellationToken cancellationToken);
    internal virtual MergeDeveloperIdentitiesResponse MergeDeveloperIdentities(MergeDeveloperIdentitiesRequest request);
    public virtual Task`1<MergeDeveloperIdentitiesResponse> MergeDeveloperIdentitiesAsync(MergeDeveloperIdentitiesRequest request, CancellationToken cancellationToken);
    internal virtual SetIdentityPoolRolesResponse SetIdentityPoolRoles(SetIdentityPoolRolesRequest request);
    public virtual Task`1<SetIdentityPoolRolesResponse> SetIdentityPoolRolesAsync(string identityPoolId, Dictionary`2<string, string> roles, CancellationToken cancellationToken);
    public virtual Task`1<SetIdentityPoolRolesResponse> SetIdentityPoolRolesAsync(SetIdentityPoolRolesRequest request, CancellationToken cancellationToken);
    internal virtual SetPrincipalTagAttributeMapResponse SetPrincipalTagAttributeMap(SetPrincipalTagAttributeMapRequest request);
    public virtual Task`1<SetPrincipalTagAttributeMapResponse> SetPrincipalTagAttributeMapAsync(SetPrincipalTagAttributeMapRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UnlinkDeveloperIdentityResponse UnlinkDeveloperIdentity(UnlinkDeveloperIdentityRequest request);
    public virtual Task`1<UnlinkDeveloperIdentityResponse> UnlinkDeveloperIdentityAsync(UnlinkDeveloperIdentityRequest request, CancellationToken cancellationToken);
    internal virtual UnlinkIdentityResponse UnlinkIdentity(UnlinkIdentityRequest request);
    public virtual Task`1<UnlinkIdentityResponse> UnlinkIdentityAsync(UnlinkIdentityRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateIdentityPoolResponse UpdateIdentityPool(UpdateIdentityPoolRequest request);
    public virtual Task`1<UpdateIdentityPoolResponse> UpdateIdentityPoolAsync(UpdateIdentityPoolRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.CognitoIdentity.AmazonCognitoIdentityConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonCognitoIdentityEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonCognitoIdentityConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.CognitoIdentity.AmazonCognitoIdentityDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonCognitoIdentityDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.CognitoIdentity.AmazonCognitoIdentityException : AmazonServiceException {
    public AmazonCognitoIdentityException(string message);
    public AmazonCognitoIdentityException(string message, Exception innerException);
    public AmazonCognitoIdentityException(Exception innerException);
    public AmazonCognitoIdentityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonCognitoIdentityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.AmazonCognitoIdentityRequest : AmazonWebServiceRequest {
}
public class Amazon.CognitoIdentity.AmbiguousRoleResolutionType : ConstantClass {
    public static AmbiguousRoleResolutionType AuthenticatedRole;
    public static AmbiguousRoleResolutionType Deny;
    public AmbiguousRoleResolutionType(string value);
    private static AmbiguousRoleResolutionType();
    public static AmbiguousRoleResolutionType FindValue(string value);
    public static AmbiguousRoleResolutionType op_Implicit(string value);
}
public class Amazon.CognitoIdentity.CognitoAWSCredentials : RefreshingAWSCredentials {
    private static object refreshIdLock;
    private object identityChangeEventLock;
    private string identityId;
    private static int DefaultDurationSeconds;
    private IAmazonCognitoIdentity cib;
    private IAmazonSecurityTokenService sts;
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityPoolId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnAuthRoleArn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthRoleArn>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Logins>k__BackingField;
    private IdentityState _identityState;
    private EventHandler`1<IdentityChangedArgs> mIdentityChangedEvent;
    private bool IsIdentitySet { get; }
    protected Dictionary`2<string, string> CloneLogins { get; }
    public string AccountId { get; private set; }
    public string IdentityPoolId { get; private set; }
    public string UnAuthRoleArn { get; private set; }
    public string AuthRoleArn { get; private set; }
    private Dictionary`2<string, string> Logins { get; private set; }
    public String[] CurrentLoginProviders { get; }
    public int LoginsCount { get; }
    public CognitoAWSCredentials(string identityPoolId, RegionEndpoint region);
    public CognitoAWSCredentials(string accountId, string identityPoolId, string unAuthRoleArn, string authRoleArn, RegionEndpoint region);
    public CognitoAWSCredentials(string accountId, string identityPoolId, string unAuthRoleArn, string authRoleArn, IAmazonCognitoIdentity cibClient, IAmazonSecurityTokenService stsClient);
    private static CognitoAWSCredentials();
    private bool get_IsIdentitySet();
    private void UpdateIdentity(string newIdentityId);
    protected Dictionary`2<string, string> get_CloneLogins();
    protected string GetNamespacedKey(string key);
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
private void set_AccountId(string value);
    [CompilerGeneratedAttribute]
public string get_IdentityPoolId();
    [CompilerGeneratedAttribute]
private void set_IdentityPoolId(string value);
    [CompilerGeneratedAttribute]
public string get_UnAuthRoleArn();
    [CompilerGeneratedAttribute]
private void set_UnAuthRoleArn(string value);
    [CompilerGeneratedAttribute]
public string get_AuthRoleArn();
    [CompilerGeneratedAttribute]
private void set_AuthRoleArn(string value);
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> get_Logins();
    [CompilerGeneratedAttribute]
private void set_Logins(Dictionary`2<string, string> value);
    public void Clear();
    public String[] get_CurrentLoginProviders();
    public bool ContainsProvider(string providerName);
    public void RemoveLogin(string providerName);
    public void AddLogin(string providerName, string token);
    public int get_LoginsCount();
    public string GetIdentityId();
    private string GetIdentityId(RefreshIdentityOptions options);
    protected virtual IdentityState RefreshIdentity();
    [AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<GetIdentityIdAsync>d__47")]
public Task`1<string> GetIdentityIdAsync();
    [AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<GetIdentityIdAsync>d__48")]
private Task`1<string> GetIdentityIdAsync(RefreshIdentityOptions options);
    [AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<RefreshIdentityAsync>d__49")]
public virtual Task`1<IdentityState> RefreshIdentityAsync();
    private bool ShouldRetry(AmazonCognitoIdentityException e);
    public void add_IdentityChangedEvent(EventHandler`1<IdentityChangedArgs> value);
    public void remove_IdentityChangedEvent(EventHandler`1<IdentityChangedArgs> value);
    [AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<GenerateNewCredentialsAsync>d__58")]
protected virtual Task`1<CredentialsRefreshState> GenerateNewCredentialsAsync();
    [AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<GetCredentialsForRoleAsync>d__59")]
private Task`1<CredentialsRefreshState> GetCredentialsForRoleAsync(string roleArn);
    [AsyncStateMachineAttribute("Amazon.CognitoIdentity.CognitoAWSCredentials/<GetPoolCredentialsAsync>d__60")]
private Task`1<CredentialsRefreshState> GetPoolCredentialsAsync();
    protected virtual CredentialsRefreshState GenerateNewCredentials();
    private CredentialsRefreshState GetPoolCredentials();
    private CredentialsRefreshState GetCredentialsForRole(string roleArn);
    private Credentials GetStsCredentials(AssumeRoleWithWebIdentityRequest assumeRequest);
    private GetOpenIdTokenResponse GetOpenId(GetOpenIdTokenRequest getTokenRequest);
    private GetCredentialsForIdentityResponse GetCredentialsForIdentity(GetCredentialsForIdentityRequest getCredentialsRequest);
    public virtual string GetCachedIdentityId();
    public virtual void CacheIdentityId(string identityId);
    public virtual void ClearIdentityCache();
    public virtual void CacheCredentials(CredentialsRefreshState credentialsState);
    public virtual CredentialsRefreshState GetCachedCredentials();
}
public class Amazon.CognitoIdentity.Endpoints.CognitoIdentityEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.CognitoIdentity.ErrorCode : ConstantClass {
    public static ErrorCode AccessDenied;
    public static ErrorCode InternalServerError;
    public ErrorCode(string value);
    private static ErrorCode();
    public static ErrorCode FindValue(string value);
    public static ErrorCode op_Implicit(string value);
}
public interface Amazon.CognitoIdentity.IAmazonCognitoIdentity {
    public ICognitoIdentityPaginatorFactory Paginators { get; }
    public abstract virtual ICognitoIdentityPaginatorFactory get_Paginators();
    public abstract virtual Task`1<CreateIdentityPoolResponse> CreateIdentityPoolAsync(CreateIdentityPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIdentitiesResponse> DeleteIdentitiesAsync(DeleteIdentitiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIdentityPoolResponse> DeleteIdentityPoolAsync(string identityPoolId, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIdentityPoolResponse> DeleteIdentityPoolAsync(DeleteIdentityPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdentityResponse> DescribeIdentityAsync(string identityId, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdentityResponse> DescribeIdentityAsync(DescribeIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdentityPoolResponse> DescribeIdentityPoolAsync(string identityPoolId, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdentityPoolResponse> DescribeIdentityPoolAsync(DescribeIdentityPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCredentialsForIdentityResponse> GetCredentialsForIdentityAsync(string identityId, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCredentialsForIdentityResponse> GetCredentialsForIdentityAsync(string identityId, Dictionary`2<string, string> logins, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCredentialsForIdentityResponse> GetCredentialsForIdentityAsync(GetCredentialsForIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdResponse> GetIdAsync(GetIdRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityPoolRolesResponse> GetIdentityPoolRolesAsync(string identityPoolId, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityPoolRolesResponse> GetIdentityPoolRolesAsync(GetIdentityPoolRolesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOpenIdTokenResponse> GetOpenIdTokenAsync(string identityId, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOpenIdTokenResponse> GetOpenIdTokenAsync(GetOpenIdTokenRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetOpenIdTokenForDeveloperIdentityResponse> GetOpenIdTokenForDeveloperIdentityAsync(GetOpenIdTokenForDeveloperIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetPrincipalTagAttributeMapResponse> GetPrincipalTagAttributeMapAsync(GetPrincipalTagAttributeMapRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentitiesResponse> ListIdentitiesAsync(ListIdentitiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentityPoolsResponse> ListIdentityPoolsAsync(ListIdentityPoolsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LookupDeveloperIdentityResponse> LookupDeveloperIdentityAsync(LookupDeveloperIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MergeDeveloperIdentitiesResponse> MergeDeveloperIdentitiesAsync(MergeDeveloperIdentitiesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityPoolRolesResponse> SetIdentityPoolRolesAsync(string identityPoolId, Dictionary`2<string, string> roles, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetIdentityPoolRolesResponse> SetIdentityPoolRolesAsync(SetIdentityPoolRolesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetPrincipalTagAttributeMapResponse> SetPrincipalTagAttributeMapAsync(SetPrincipalTagAttributeMapRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnlinkDeveloperIdentityResponse> UnlinkDeveloperIdentityAsync(UnlinkDeveloperIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UnlinkIdentityResponse> UnlinkIdentityAsync(UnlinkIdentityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateIdentityPoolResponse> UpdateIdentityPoolAsync(UpdateIdentityPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.CognitoIdentity.AmazonCognitoIdentityConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.CognitoIdentity.Internal.AmazonCognitoIdentityEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.CognitoIdentity.Internal.AmazonCognitoIdentityEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.CognitoIdentity.Internal.AmazonCognitoIdentityMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.CognitoIdentity.MappingRuleMatchType : ConstantClass {
    public static MappingRuleMatchType Contains;
    public static MappingRuleMatchType Equals;
    public static MappingRuleMatchType NotEqual;
    public static MappingRuleMatchType StartsWith;
    public MappingRuleMatchType(string value);
    private static MappingRuleMatchType();
    public static MappingRuleMatchType FindValue(string value);
    public static MappingRuleMatchType op_Implicit(string value);
}
public class Amazon.CognitoIdentity.Model.CognitoIdentityPaginatorFactory : object {
    private IAmazonCognitoIdentity client;
    internal CognitoIdentityPaginatorFactory(IAmazonCognitoIdentity client);
    public sealed virtual IListIdentityPoolsPaginator ListIdentityPools(ListIdentityPoolsRequest request);
}
public class Amazon.CognitoIdentity.Model.CognitoIdentityProviderInfo : object {
    private string _clientId;
    private string _providerName;
    private Nullable`1<bool> _serverSideTokenCheck;
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string ProviderName { get; public set; }
    public Nullable`1<bool> ServerSideTokenCheck { get; public set; }
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_ProviderName();
    public void set_ProviderName(string value);
    internal bool IsSetProviderName();
    public Nullable`1<bool> get_ServerSideTokenCheck();
    public void set_ServerSideTokenCheck(Nullable`1<bool> value);
    internal bool IsSetServerSideTokenCheck();
}
public class Amazon.CognitoIdentity.Model.ConcurrentModificationException : AmazonCognitoIdentityException {
    public ConcurrentModificationException(string message);
    public ConcurrentModificationException(string message, Exception innerException);
    public ConcurrentModificationException(Exception innerException);
    public ConcurrentModificationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConcurrentModificationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.CreateIdentityPoolRequest : AmazonCognitoIdentityRequest {
    private Nullable`1<bool> _allowClassicFlow;
    private Nullable`1<bool> _allowUnauthenticatedIdentities;
    private List`1<CognitoIdentityProviderInfo> _cognitoIdentityProviders;
    private string _developerProviderName;
    private string _identityPoolName;
    private Dictionary`2<string, string> _identityPoolTags;
    private List`1<string> _openIdConnectProviderARNs;
    private List`1<string> _samlProviderARNs;
    private Dictionary`2<string, string> _supportedLoginProviders;
    public Nullable`1<bool> AllowClassicFlow { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> AllowUnauthenticatedIdentities { get; public set; }
    public List`1<CognitoIdentityProviderInfo> CognitoIdentityProviders { get; public set; }
    [AWSPropertyAttribute]
public string DeveloperProviderName { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolName { get; public set; }
    public Dictionary`2<string, string> IdentityPoolTags { get; public set; }
    public List`1<string> OpenIdConnectProviderARNs { get; public set; }
    public List`1<string> SamlProviderARNs { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> SupportedLoginProviders { get; public set; }
    public Nullable`1<bool> get_AllowClassicFlow();
    public void set_AllowClassicFlow(Nullable`1<bool> value);
    internal bool IsSetAllowClassicFlow();
    public Nullable`1<bool> get_AllowUnauthenticatedIdentities();
    public void set_AllowUnauthenticatedIdentities(Nullable`1<bool> value);
    internal bool IsSetAllowUnauthenticatedIdentities();
    public List`1<CognitoIdentityProviderInfo> get_CognitoIdentityProviders();
    public void set_CognitoIdentityProviders(List`1<CognitoIdentityProviderInfo> value);
    internal bool IsSetCognitoIdentityProviders();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
    public Dictionary`2<string, string> get_IdentityPoolTags();
    public void set_IdentityPoolTags(Dictionary`2<string, string> value);
    internal bool IsSetIdentityPoolTags();
    public List`1<string> get_OpenIdConnectProviderARNs();
    public void set_OpenIdConnectProviderARNs(List`1<string> value);
    internal bool IsSetOpenIdConnectProviderARNs();
    public List`1<string> get_SamlProviderARNs();
    public void set_SamlProviderARNs(List`1<string> value);
    internal bool IsSetSamlProviderARNs();
    public Dictionary`2<string, string> get_SupportedLoginProviders();
    public void set_SupportedLoginProviders(Dictionary`2<string, string> value);
    internal bool IsSetSupportedLoginProviders();
}
public class Amazon.CognitoIdentity.Model.CreateIdentityPoolResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _allowClassicFlow;
    private Nullable`1<bool> _allowUnauthenticatedIdentities;
    private List`1<CognitoIdentityProviderInfo> _cognitoIdentityProviders;
    private string _developerProviderName;
    private string _identityPoolId;
    private string _identityPoolName;
    private Dictionary`2<string, string> _identityPoolTags;
    private List`1<string> _openIdConnectProviderARNs;
    private List`1<string> _samlProviderARNs;
    private Dictionary`2<string, string> _supportedLoginProviders;
    public Nullable`1<bool> AllowClassicFlow { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> AllowUnauthenticatedIdentities { get; public set; }
    public List`1<CognitoIdentityProviderInfo> CognitoIdentityProviders { get; public set; }
    [AWSPropertyAttribute]
public string DeveloperProviderName { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolName { get; public set; }
    public Dictionary`2<string, string> IdentityPoolTags { get; public set; }
    public List`1<string> OpenIdConnectProviderARNs { get; public set; }
    public List`1<string> SamlProviderARNs { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> SupportedLoginProviders { get; public set; }
    public Nullable`1<bool> get_AllowClassicFlow();
    public void set_AllowClassicFlow(Nullable`1<bool> value);
    internal bool IsSetAllowClassicFlow();
    public Nullable`1<bool> get_AllowUnauthenticatedIdentities();
    public void set_AllowUnauthenticatedIdentities(Nullable`1<bool> value);
    internal bool IsSetAllowUnauthenticatedIdentities();
    public List`1<CognitoIdentityProviderInfo> get_CognitoIdentityProviders();
    public void set_CognitoIdentityProviders(List`1<CognitoIdentityProviderInfo> value);
    internal bool IsSetCognitoIdentityProviders();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
    public Dictionary`2<string, string> get_IdentityPoolTags();
    public void set_IdentityPoolTags(Dictionary`2<string, string> value);
    internal bool IsSetIdentityPoolTags();
    public List`1<string> get_OpenIdConnectProviderARNs();
    public void set_OpenIdConnectProviderARNs(List`1<string> value);
    internal bool IsSetOpenIdConnectProviderARNs();
    public List`1<string> get_SamlProviderARNs();
    public void set_SamlProviderARNs(List`1<string> value);
    internal bool IsSetSamlProviderARNs();
    public Dictionary`2<string, string> get_SupportedLoginProviders();
    public void set_SupportedLoginProviders(Dictionary`2<string, string> value);
    internal bool IsSetSupportedLoginProviders();
}
public class Amazon.CognitoIdentity.Model.Credentials : AWSCredentials {
    private ImmutableCredentials _credentials;
    private string _accessKeyId;
    private Nullable`1<DateTime> _expiration;
    private string _secretKey;
    private string _sessionToken;
    public string AccessKeyId { get; public set; }
    public Nullable`1<DateTime> Expiration { get; public set; }
    public string SecretKey { get; public set; }
    public string SessionToken { get; public set; }
    public virtual ImmutableCredentials GetCredentials();
    public string get_AccessKeyId();
    public void set_AccessKeyId(string value);
    internal bool IsSetAccessKeyId();
    public Nullable`1<DateTime> get_Expiration();
    public void set_Expiration(Nullable`1<DateTime> value);
    internal bool IsSetExpiration();
    public string get_SecretKey();
    public void set_SecretKey(string value);
    internal bool IsSetSecretKey();
    public string get_SessionToken();
    public void set_SessionToken(string value);
    internal bool IsSetSessionToken();
}
public class Amazon.CognitoIdentity.Model.DeleteIdentitiesRequest : AmazonCognitoIdentityRequest {
    private List`1<string> _identityIdsToDelete;
    [AWSPropertyAttribute]
public List`1<string> IdentityIdsToDelete { get; public set; }
    public List`1<string> get_IdentityIdsToDelete();
    public void set_IdentityIdsToDelete(List`1<string> value);
    internal bool IsSetIdentityIdsToDelete();
}
public class Amazon.CognitoIdentity.Model.DeleteIdentitiesResponse : AmazonWebServiceResponse {
    private List`1<UnprocessedIdentityId> _unprocessedIdentityIds;
    [AWSPropertyAttribute]
public List`1<UnprocessedIdentityId> UnprocessedIdentityIds { get; public set; }
    public List`1<UnprocessedIdentityId> get_UnprocessedIdentityIds();
    public void set_UnprocessedIdentityIds(List`1<UnprocessedIdentityId> value);
    internal bool IsSetUnprocessedIdentityIds();
}
public class Amazon.CognitoIdentity.Model.DeleteIdentityPoolRequest : AmazonCognitoIdentityRequest {
    private string _identityPoolId;
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoIdentity.Model.DeleteIdentityPoolResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentity.Model.DescribeIdentityPoolRequest : AmazonCognitoIdentityRequest {
    private string _identityPoolId;
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoIdentity.Model.DescribeIdentityPoolResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _allowClassicFlow;
    private Nullable`1<bool> _allowUnauthenticatedIdentities;
    private List`1<CognitoIdentityProviderInfo> _cognitoIdentityProviders;
    private string _developerProviderName;
    private string _identityPoolId;
    private string _identityPoolName;
    private Dictionary`2<string, string> _identityPoolTags;
    private List`1<string> _openIdConnectProviderARNs;
    private List`1<string> _samlProviderARNs;
    private Dictionary`2<string, string> _supportedLoginProviders;
    public Nullable`1<bool> AllowClassicFlow { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> AllowUnauthenticatedIdentities { get; public set; }
    public List`1<CognitoIdentityProviderInfo> CognitoIdentityProviders { get; public set; }
    [AWSPropertyAttribute]
public string DeveloperProviderName { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolName { get; public set; }
    public Dictionary`2<string, string> IdentityPoolTags { get; public set; }
    public List`1<string> OpenIdConnectProviderARNs { get; public set; }
    public List`1<string> SamlProviderARNs { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> SupportedLoginProviders { get; public set; }
    public Nullable`1<bool> get_AllowClassicFlow();
    public void set_AllowClassicFlow(Nullable`1<bool> value);
    internal bool IsSetAllowClassicFlow();
    public Nullable`1<bool> get_AllowUnauthenticatedIdentities();
    public void set_AllowUnauthenticatedIdentities(Nullable`1<bool> value);
    internal bool IsSetAllowUnauthenticatedIdentities();
    public List`1<CognitoIdentityProviderInfo> get_CognitoIdentityProviders();
    public void set_CognitoIdentityProviders(List`1<CognitoIdentityProviderInfo> value);
    internal bool IsSetCognitoIdentityProviders();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
    public Dictionary`2<string, string> get_IdentityPoolTags();
    public void set_IdentityPoolTags(Dictionary`2<string, string> value);
    internal bool IsSetIdentityPoolTags();
    public List`1<string> get_OpenIdConnectProviderARNs();
    public void set_OpenIdConnectProviderARNs(List`1<string> value);
    internal bool IsSetOpenIdConnectProviderARNs();
    public List`1<string> get_SamlProviderARNs();
    public void set_SamlProviderARNs(List`1<string> value);
    internal bool IsSetSamlProviderARNs();
    public Dictionary`2<string, string> get_SupportedLoginProviders();
    public void set_SupportedLoginProviders(Dictionary`2<string, string> value);
    internal bool IsSetSupportedLoginProviders();
}
public class Amazon.CognitoIdentity.Model.DescribeIdentityRequest : AmazonCognitoIdentityRequest {
    private string _identityId;
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
}
public class Amazon.CognitoIdentity.Model.DescribeIdentityResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _creationDate;
    private string _identityId;
    private Nullable`1<DateTime> _lastModifiedDate;
    private List`1<string> _logins;
    public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    public List`1<string> Logins { get; public set; }
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public List`1<string> get_Logins();
    public void set_Logins(List`1<string> value);
    internal bool IsSetLogins();
}
public class Amazon.CognitoIdentity.Model.DeveloperUserAlreadyRegisteredException : AmazonCognitoIdentityException {
    public DeveloperUserAlreadyRegisteredException(string message);
    public DeveloperUserAlreadyRegisteredException(string message, Exception innerException);
    public DeveloperUserAlreadyRegisteredException(Exception innerException);
    public DeveloperUserAlreadyRegisteredException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DeveloperUserAlreadyRegisteredException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.ExternalServiceException : AmazonCognitoIdentityException {
    public ExternalServiceException(string message);
    public ExternalServiceException(string message, Exception innerException);
    public ExternalServiceException(Exception innerException);
    public ExternalServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ExternalServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.GetCredentialsForIdentityRequest : AmazonCognitoIdentityRequest {
    private string _customRoleArn;
    private string _identityId;
    private Dictionary`2<string, string> _logins;
    [AWSPropertyAttribute]
public string CustomRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Logins { get; public set; }
    public string get_CustomRoleArn();
    public void set_CustomRoleArn(string value);
    internal bool IsSetCustomRoleArn();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public Dictionary`2<string, string> get_Logins();
    public void set_Logins(Dictionary`2<string, string> value);
    internal bool IsSetLogins();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentity.Model.GetCredentialsForIdentityResponse : AmazonWebServiceResponse {
    private Credentials _credentials;
    private string _identityId;
    public Credentials Credentials { get; public set; }
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    public Credentials get_Credentials();
    public void set_Credentials(Credentials value);
    internal bool IsSetCredentials();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
}
public class Amazon.CognitoIdentity.Model.GetIdentityPoolRolesRequest : AmazonCognitoIdentityRequest {
    private string _identityPoolId;
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoIdentity.Model.GetIdentityPoolRolesResponse : AmazonWebServiceResponse {
    private string _identityPoolId;
    private Dictionary`2<string, RoleMapping> _roleMappings;
    private Dictionary`2<string, string> _roles;
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, RoleMapping> RoleMappings { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Roles { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Dictionary`2<string, RoleMapping> get_RoleMappings();
    public void set_RoleMappings(Dictionary`2<string, RoleMapping> value);
    internal bool IsSetRoleMappings();
    public Dictionary`2<string, string> get_Roles();
    public void set_Roles(Dictionary`2<string, string> value);
    internal bool IsSetRoles();
}
public class Amazon.CognitoIdentity.Model.GetIdRequest : AmazonCognitoIdentityRequest {
    private string _accountId;
    private string _identityPoolId;
    private Dictionary`2<string, string> _logins;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Logins { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Dictionary`2<string, string> get_Logins();
    public void set_Logins(Dictionary`2<string, string> value);
    internal bool IsSetLogins();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentity.Model.GetIdResponse : AmazonWebServiceResponse {
    private string _identityId;
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
}
public class Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityRequest : AmazonCognitoIdentityRequest {
    private string _identityId;
    private string _identityPoolId;
    private Dictionary`2<string, string> _logins;
    private Dictionary`2<string, string> _principalTags;
    private Nullable`1<long> _tokenDuration;
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Logins { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> PrincipalTags { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> TokenDuration { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Dictionary`2<string, string> get_Logins();
    public void set_Logins(Dictionary`2<string, string> value);
    internal bool IsSetLogins();
    public Dictionary`2<string, string> get_PrincipalTags();
    public void set_PrincipalTags(Dictionary`2<string, string> value);
    internal bool IsSetPrincipalTags();
    public Nullable`1<long> get_TokenDuration();
    public void set_TokenDuration(Nullable`1<long> value);
    internal bool IsSetTokenDuration();
}
public class Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityResponse : AmazonWebServiceResponse {
    private string _identityId;
    private string _token;
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    public string Token { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_Token();
    public void set_Token(string value);
    internal bool IsSetToken();
}
public class Amazon.CognitoIdentity.Model.GetOpenIdTokenRequest : AmazonCognitoIdentityRequest {
    private string _identityId;
    private Dictionary`2<string, string> _logins;
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Logins { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public Dictionary`2<string, string> get_Logins();
    public void set_Logins(Dictionary`2<string, string> value);
    internal bool IsSetLogins();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentity.Model.GetOpenIdTokenResponse : AmazonWebServiceResponse {
    private string _identityId;
    private string _token;
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    public string Token { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_Token();
    public void set_Token(string value);
    internal bool IsSetToken();
}
public class Amazon.CognitoIdentity.Model.GetPrincipalTagAttributeMapRequest : AmazonCognitoIdentityRequest {
    private string _identityPoolId;
    private string _identityProviderName;
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityProviderName { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityProviderName();
    public void set_IdentityProviderName(string value);
    internal bool IsSetIdentityProviderName();
}
public class Amazon.CognitoIdentity.Model.GetPrincipalTagAttributeMapResponse : AmazonWebServiceResponse {
    private string _identityPoolId;
    private string _identityProviderName;
    private Dictionary`2<string, string> _principalTags;
    private Nullable`1<bool> _useDefaults;
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityProviderName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> PrincipalTags { get; public set; }
    public Nullable`1<bool> UseDefaults { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityProviderName();
    public void set_IdentityProviderName(string value);
    internal bool IsSetIdentityProviderName();
    public Dictionary`2<string, string> get_PrincipalTags();
    public void set_PrincipalTags(Dictionary`2<string, string> value);
    internal bool IsSetPrincipalTags();
    public Nullable`1<bool> get_UseDefaults();
    public void set_UseDefaults(Nullable`1<bool> value);
    internal bool IsSetUseDefaults();
}
public interface Amazon.CognitoIdentity.Model.ICognitoIdentityPaginatorFactory {
    public abstract virtual IListIdentityPoolsPaginator ListIdentityPools(ListIdentityPoolsRequest request);
}
public class Amazon.CognitoIdentity.Model.IdentityDescription : object {
    private Nullable`1<DateTime> _creationDate;
    private string _identityId;
    private Nullable`1<DateTime> _lastModifiedDate;
    private List`1<string> _logins;
    public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    public List`1<string> Logins { get; public set; }
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public List`1<string> get_Logins();
    public void set_Logins(List`1<string> value);
    internal bool IsSetLogins();
}
public class Amazon.CognitoIdentity.Model.IdentityPoolShortDescription : object {
    private string _identityPoolId;
    private string _identityPoolName;
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolName { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
}
public interface Amazon.CognitoIdentity.Model.IListIdentityPoolsPaginator {
    public IPaginatedEnumerable`1<ListIdentityPoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IdentityPoolShortDescription> IdentityPools { get; }
    public abstract virtual IPaginatedEnumerable`1<ListIdentityPoolsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<IdentityPoolShortDescription> get_IdentityPools();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.CognitoIdentityProviderInfoMarshaller : object {
    public static CognitoIdentityProviderInfoMarshaller Instance;
    private static CognitoIdentityProviderInfoMarshaller();
    public sealed virtual void Marshall(CognitoIdentityProviderInfo requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.CognitoIdentityProviderInfoUnmarshaller : object {
    private static CognitoIdentityProviderInfoUnmarshaller _instance;
    public static CognitoIdentityProviderInfoUnmarshaller Instance { get; }
    private static CognitoIdentityProviderInfoUnmarshaller();
    private sealed virtual override CognitoIdentityProviderInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.CognitoIdentityProviderInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CognitoIdentityProviderInfo Unmarshall(JsonUnmarshallerContext context);
    public static CognitoIdentityProviderInfoUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller : object {
    private static ConcurrentModificationExceptionUnmarshaller _instance;
    public static ConcurrentModificationExceptionUnmarshaller Instance { get; }
    private static ConcurrentModificationExceptionUnmarshaller();
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConcurrentModificationExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.CreateIdentityPoolRequestMarshaller : object {
    private static CreateIdentityPoolRequestMarshaller _instance;
    public static CreateIdentityPoolRequestMarshaller Instance { get; }
    private static CreateIdentityPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIdentityPoolRequest publicRequest);
    internal static CreateIdentityPoolRequestMarshaller GetInstance();
    public static CreateIdentityPoolRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.CreateIdentityPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateIdentityPoolResponseUnmarshaller _instance;
    public static CreateIdentityPoolResponseUnmarshaller Instance { get; }
    private static CreateIdentityPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIdentityPoolResponseUnmarshaller GetInstance();
    public static CreateIdentityPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.CredentialsUnmarshaller : object {
    private static CredentialsUnmarshaller _instance;
    public static CredentialsUnmarshaller Instance { get; }
    private static CredentialsUnmarshaller();
    private sealed virtual override Credentials Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.Credentials,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Credentials Unmarshall(JsonUnmarshallerContext context);
    public static CredentialsUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeleteIdentitiesRequestMarshaller : object {
    private static DeleteIdentitiesRequestMarshaller _instance;
    public static DeleteIdentitiesRequestMarshaller Instance { get; }
    private static DeleteIdentitiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIdentitiesRequest publicRequest);
    internal static DeleteIdentitiesRequestMarshaller GetInstance();
    public static DeleteIdentitiesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeleteIdentitiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteIdentitiesResponseUnmarshaller _instance;
    public static DeleteIdentitiesResponseUnmarshaller Instance { get; }
    private static DeleteIdentitiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIdentitiesResponseUnmarshaller GetInstance();
    public static DeleteIdentitiesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeleteIdentityPoolRequestMarshaller : object {
    private static DeleteIdentityPoolRequestMarshaller _instance;
    public static DeleteIdentityPoolRequestMarshaller Instance { get; }
    private static DeleteIdentityPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIdentityPoolRequest publicRequest);
    internal static DeleteIdentityPoolRequestMarshaller GetInstance();
    public static DeleteIdentityPoolRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeleteIdentityPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteIdentityPoolResponseUnmarshaller _instance;
    public static DeleteIdentityPoolResponseUnmarshaller Instance { get; }
    private static DeleteIdentityPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIdentityPoolResponseUnmarshaller GetInstance();
    public static DeleteIdentityPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DescribeIdentityPoolRequestMarshaller : object {
    private static DescribeIdentityPoolRequestMarshaller _instance;
    public static DescribeIdentityPoolRequestMarshaller Instance { get; }
    private static DescribeIdentityPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIdentityPoolRequest publicRequest);
    internal static DescribeIdentityPoolRequestMarshaller GetInstance();
    public static DescribeIdentityPoolRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DescribeIdentityPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeIdentityPoolResponseUnmarshaller _instance;
    public static DescribeIdentityPoolResponseUnmarshaller Instance { get; }
    private static DescribeIdentityPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIdentityPoolResponseUnmarshaller GetInstance();
    public static DescribeIdentityPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DescribeIdentityRequestMarshaller : object {
    private static DescribeIdentityRequestMarshaller _instance;
    public static DescribeIdentityRequestMarshaller Instance { get; }
    private static DescribeIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIdentityRequest publicRequest);
    internal static DescribeIdentityRequestMarshaller GetInstance();
    public static DescribeIdentityRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DescribeIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeIdentityResponseUnmarshaller _instance;
    public static DescribeIdentityResponseUnmarshaller Instance { get; }
    private static DescribeIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIdentityResponseUnmarshaller GetInstance();
    public static DescribeIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeveloperUserAlreadyRegisteredExceptionUnmarshaller : object {
    private static DeveloperUserAlreadyRegisteredExceptionUnmarshaller _instance;
    public static DeveloperUserAlreadyRegisteredExceptionUnmarshaller Instance { get; }
    private static DeveloperUserAlreadyRegisteredExceptionUnmarshaller();
    public sealed virtual DeveloperUserAlreadyRegisteredException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DeveloperUserAlreadyRegisteredException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DeveloperUserAlreadyRegisteredExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ExternalServiceExceptionUnmarshaller : object {
    private static ExternalServiceExceptionUnmarshaller _instance;
    public static ExternalServiceExceptionUnmarshaller Instance { get; }
    private static ExternalServiceExceptionUnmarshaller();
    public sealed virtual ExternalServiceException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ExternalServiceException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ExternalServiceExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetCredentialsForIdentityRequestMarshaller : object {
    private static GetCredentialsForIdentityRequestMarshaller _instance;
    public static GetCredentialsForIdentityRequestMarshaller Instance { get; }
    private static GetCredentialsForIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCredentialsForIdentityRequest publicRequest);
    internal static GetCredentialsForIdentityRequestMarshaller GetInstance();
    public static GetCredentialsForIdentityRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetCredentialsForIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCredentialsForIdentityResponseUnmarshaller _instance;
    public static GetCredentialsForIdentityResponseUnmarshaller Instance { get; }
    private static GetCredentialsForIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCredentialsForIdentityResponseUnmarshaller GetInstance();
    public static GetCredentialsForIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetIdentityPoolRolesRequestMarshaller : object {
    private static GetIdentityPoolRolesRequestMarshaller _instance;
    public static GetIdentityPoolRolesRequestMarshaller Instance { get; }
    private static GetIdentityPoolRolesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityPoolRolesRequest publicRequest);
    internal static GetIdentityPoolRolesRequestMarshaller GetInstance();
    public static GetIdentityPoolRolesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetIdentityPoolRolesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetIdentityPoolRolesResponseUnmarshaller _instance;
    public static GetIdentityPoolRolesResponseUnmarshaller Instance { get; }
    private static GetIdentityPoolRolesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityPoolRolesResponseUnmarshaller GetInstance();
    public static GetIdentityPoolRolesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetIdRequestMarshaller : object {
    private static GetIdRequestMarshaller _instance;
    public static GetIdRequestMarshaller Instance { get; }
    private static GetIdRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdRequest publicRequest);
    internal static GetIdRequestMarshaller GetInstance();
    public static GetIdRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetIdResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetIdResponseUnmarshaller _instance;
    public static GetIdResponseUnmarshaller Instance { get; }
    private static GetIdResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdResponseUnmarshaller GetInstance();
    public static GetIdResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenForDeveloperIdentityRequestMarshaller : object {
    private static GetOpenIdTokenForDeveloperIdentityRequestMarshaller _instance;
    public static GetOpenIdTokenForDeveloperIdentityRequestMarshaller Instance { get; }
    private static GetOpenIdTokenForDeveloperIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOpenIdTokenForDeveloperIdentityRequest publicRequest);
    internal static GetOpenIdTokenForDeveloperIdentityRequestMarshaller GetInstance();
    public static GetOpenIdTokenForDeveloperIdentityRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller _instance;
    public static GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller Instance { get; }
    private static GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller GetInstance();
    public static GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenRequestMarshaller : object {
    private static GetOpenIdTokenRequestMarshaller _instance;
    public static GetOpenIdTokenRequestMarshaller Instance { get; }
    private static GetOpenIdTokenRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetOpenIdTokenRequest publicRequest);
    internal static GetOpenIdTokenRequestMarshaller GetInstance();
    public static GetOpenIdTokenRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetOpenIdTokenResponseUnmarshaller _instance;
    public static GetOpenIdTokenResponseUnmarshaller Instance { get; }
    private static GetOpenIdTokenResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetOpenIdTokenResponseUnmarshaller GetInstance();
    public static GetOpenIdTokenResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetPrincipalTagAttributeMapRequestMarshaller : object {
    private static GetPrincipalTagAttributeMapRequestMarshaller _instance;
    public static GetPrincipalTagAttributeMapRequestMarshaller Instance { get; }
    private static GetPrincipalTagAttributeMapRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetPrincipalTagAttributeMapRequest publicRequest);
    internal static GetPrincipalTagAttributeMapRequestMarshaller GetInstance();
    public static GetPrincipalTagAttributeMapRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetPrincipalTagAttributeMapResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetPrincipalTagAttributeMapResponseUnmarshaller _instance;
    public static GetPrincipalTagAttributeMapResponseUnmarshaller Instance { get; }
    private static GetPrincipalTagAttributeMapResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetPrincipalTagAttributeMapResponseUnmarshaller GetInstance();
    public static GetPrincipalTagAttributeMapResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.IdentityDescriptionUnmarshaller : object {
    private static IdentityDescriptionUnmarshaller _instance;
    public static IdentityDescriptionUnmarshaller Instance { get; }
    private static IdentityDescriptionUnmarshaller();
    private sealed virtual override IdentityDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.IdentityDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityDescription Unmarshall(JsonUnmarshallerContext context);
    public static IdentityDescriptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.IdentityPoolShortDescriptionUnmarshaller : object {
    private static IdentityPoolShortDescriptionUnmarshaller _instance;
    public static IdentityPoolShortDescriptionUnmarshaller Instance { get; }
    private static IdentityPoolShortDescriptionUnmarshaller();
    private sealed virtual override IdentityPoolShortDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.IdentityPoolShortDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityPoolShortDescription Unmarshall(JsonUnmarshallerContext context);
    public static IdentityPoolShortDescriptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.InternalErrorExceptionUnmarshaller : object {
    private static InternalErrorExceptionUnmarshaller _instance;
    public static InternalErrorExceptionUnmarshaller Instance { get; }
    private static InternalErrorExceptionUnmarshaller();
    public sealed virtual InternalErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.InvalidIdentityPoolConfigurationExceptionUnmarshaller : object {
    private static InvalidIdentityPoolConfigurationExceptionUnmarshaller _instance;
    public static InvalidIdentityPoolConfigurationExceptionUnmarshaller Instance { get; }
    private static InvalidIdentityPoolConfigurationExceptionUnmarshaller();
    public sealed virtual InvalidIdentityPoolConfigurationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidIdentityPoolConfigurationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidIdentityPoolConfigurationExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller : object {
    private static InvalidParameterExceptionUnmarshaller _instance;
    public static InvalidParameterExceptionUnmarshaller Instance { get; }
    private static InvalidParameterExceptionUnmarshaller();
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentitiesRequestMarshaller : object {
    private static ListIdentitiesRequestMarshaller _instance;
    public static ListIdentitiesRequestMarshaller Instance { get; }
    private static ListIdentitiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListIdentitiesRequest publicRequest);
    internal static ListIdentitiesRequestMarshaller GetInstance();
    public static ListIdentitiesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentitiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListIdentitiesResponseUnmarshaller _instance;
    public static ListIdentitiesResponseUnmarshaller Instance { get; }
    private static ListIdentitiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListIdentitiesResponseUnmarshaller GetInstance();
    public static ListIdentitiesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentityPoolsRequestMarshaller : object {
    private static ListIdentityPoolsRequestMarshaller _instance;
    public static ListIdentityPoolsRequestMarshaller Instance { get; }
    private static ListIdentityPoolsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListIdentityPoolsRequest publicRequest);
    internal static ListIdentityPoolsRequestMarshaller GetInstance();
    public static ListIdentityPoolsRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentityPoolsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListIdentityPoolsResponseUnmarshaller _instance;
    public static ListIdentityPoolsResponseUnmarshaller Instance { get; }
    private static ListIdentityPoolsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListIdentityPoolsResponseUnmarshaller GetInstance();
    public static ListIdentityPoolsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.LookupDeveloperIdentityRequestMarshaller : object {
    private static LookupDeveloperIdentityRequestMarshaller _instance;
    public static LookupDeveloperIdentityRequestMarshaller Instance { get; }
    private static LookupDeveloperIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(LookupDeveloperIdentityRequest publicRequest);
    internal static LookupDeveloperIdentityRequestMarshaller GetInstance();
    public static LookupDeveloperIdentityRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.LookupDeveloperIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static LookupDeveloperIdentityResponseUnmarshaller _instance;
    public static LookupDeveloperIdentityResponseUnmarshaller Instance { get; }
    private static LookupDeveloperIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static LookupDeveloperIdentityResponseUnmarshaller GetInstance();
    public static LookupDeveloperIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.MappingRuleMarshaller : object {
    public static MappingRuleMarshaller Instance;
    private static MappingRuleMarshaller();
    public sealed virtual void Marshall(MappingRule requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.MappingRuleUnmarshaller : object {
    private static MappingRuleUnmarshaller _instance;
    public static MappingRuleUnmarshaller Instance { get; }
    private static MappingRuleUnmarshaller();
    private sealed virtual override MappingRule Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.MappingRule,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MappingRule Unmarshall(JsonUnmarshallerContext context);
    public static MappingRuleUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.MergeDeveloperIdentitiesRequestMarshaller : object {
    private static MergeDeveloperIdentitiesRequestMarshaller _instance;
    public static MergeDeveloperIdentitiesRequestMarshaller Instance { get; }
    private static MergeDeveloperIdentitiesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MergeDeveloperIdentitiesRequest publicRequest);
    internal static MergeDeveloperIdentitiesRequestMarshaller GetInstance();
    public static MergeDeveloperIdentitiesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.MergeDeveloperIdentitiesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static MergeDeveloperIdentitiesResponseUnmarshaller _instance;
    public static MergeDeveloperIdentitiesResponseUnmarshaller Instance { get; }
    private static MergeDeveloperIdentitiesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MergeDeveloperIdentitiesResponseUnmarshaller GetInstance();
    public static MergeDeveloperIdentitiesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller : object {
    private static NotAuthorizedExceptionUnmarshaller _instance;
    public static NotAuthorizedExceptionUnmarshaller Instance { get; }
    private static NotAuthorizedExceptionUnmarshaller();
    public sealed virtual NotAuthorizedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NotAuthorizedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NotAuthorizedExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ResourceConflictExceptionUnmarshaller : object {
    private static ResourceConflictExceptionUnmarshaller _instance;
    public static ResourceConflictExceptionUnmarshaller Instance { get; }
    private static ResourceConflictExceptionUnmarshaller();
    public sealed virtual ResourceConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.RoleMappingMarshaller : object {
    public static RoleMappingMarshaller Instance;
    private static RoleMappingMarshaller();
    public sealed virtual void Marshall(RoleMapping requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.RoleMappingUnmarshaller : object {
    private static RoleMappingUnmarshaller _instance;
    public static RoleMappingUnmarshaller Instance { get; }
    private static RoleMappingUnmarshaller();
    private sealed virtual override RoleMapping Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.RoleMapping,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RoleMapping Unmarshall(JsonUnmarshallerContext context);
    public static RoleMappingUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.RulesConfigurationTypeMarshaller : object {
    public static RulesConfigurationTypeMarshaller Instance;
    private static RulesConfigurationTypeMarshaller();
    public sealed virtual void Marshall(RulesConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.RulesConfigurationTypeUnmarshaller : object {
    private static RulesConfigurationTypeUnmarshaller _instance;
    public static RulesConfigurationTypeUnmarshaller Instance { get; }
    private static RulesConfigurationTypeUnmarshaller();
    private sealed virtual override RulesConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.RulesConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RulesConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static RulesConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.SetIdentityPoolRolesRequestMarshaller : object {
    private static SetIdentityPoolRolesRequestMarshaller _instance;
    public static SetIdentityPoolRolesRequestMarshaller Instance { get; }
    private static SetIdentityPoolRolesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetIdentityPoolRolesRequest publicRequest);
    internal static SetIdentityPoolRolesRequestMarshaller GetInstance();
    public static SetIdentityPoolRolesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.SetIdentityPoolRolesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetIdentityPoolRolesResponseUnmarshaller _instance;
    public static SetIdentityPoolRolesResponseUnmarshaller Instance { get; }
    private static SetIdentityPoolRolesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetIdentityPoolRolesResponseUnmarshaller GetInstance();
    public static SetIdentityPoolRolesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.SetPrincipalTagAttributeMapRequestMarshaller : object {
    private static SetPrincipalTagAttributeMapRequestMarshaller _instance;
    public static SetPrincipalTagAttributeMapRequestMarshaller Instance { get; }
    private static SetPrincipalTagAttributeMapRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetPrincipalTagAttributeMapRequest publicRequest);
    internal static SetPrincipalTagAttributeMapRequestMarshaller GetInstance();
    public static SetPrincipalTagAttributeMapRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.SetPrincipalTagAttributeMapResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetPrincipalTagAttributeMapResponseUnmarshaller _instance;
    public static SetPrincipalTagAttributeMapResponseUnmarshaller Instance { get; }
    private static SetPrincipalTagAttributeMapResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetPrincipalTagAttributeMapResponseUnmarshaller GetInstance();
    public static SetPrincipalTagAttributeMapResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkDeveloperIdentityRequestMarshaller : object {
    private static UnlinkDeveloperIdentityRequestMarshaller _instance;
    public static UnlinkDeveloperIdentityRequestMarshaller Instance { get; }
    private static UnlinkDeveloperIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnlinkDeveloperIdentityRequest publicRequest);
    internal static UnlinkDeveloperIdentityRequestMarshaller GetInstance();
    public static UnlinkDeveloperIdentityRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkDeveloperIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UnlinkDeveloperIdentityResponseUnmarshaller _instance;
    public static UnlinkDeveloperIdentityResponseUnmarshaller Instance { get; }
    private static UnlinkDeveloperIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnlinkDeveloperIdentityResponseUnmarshaller GetInstance();
    public static UnlinkDeveloperIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkIdentityRequestMarshaller : object {
    private static UnlinkIdentityRequestMarshaller _instance;
    public static UnlinkIdentityRequestMarshaller Instance { get; }
    private static UnlinkIdentityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UnlinkIdentityRequest publicRequest);
    internal static UnlinkIdentityRequestMarshaller GetInstance();
    public static UnlinkIdentityRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkIdentityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UnlinkIdentityResponseUnmarshaller _instance;
    public static UnlinkIdentityResponseUnmarshaller Instance { get; }
    private static UnlinkIdentityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UnlinkIdentityResponseUnmarshaller GetInstance();
    public static UnlinkIdentityResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnprocessedIdentityIdUnmarshaller : object {
    private static UnprocessedIdentityIdUnmarshaller _instance;
    public static UnprocessedIdentityIdUnmarshaller Instance { get; }
    private static UnprocessedIdentityIdUnmarshaller();
    private sealed virtual override UnprocessedIdentityId Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentity.Model.UnprocessedIdentityId,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UnprocessedIdentityId Unmarshall(JsonUnmarshallerContext context);
    public static UnprocessedIdentityIdUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UpdateIdentityPoolRequestMarshaller : object {
    private static UpdateIdentityPoolRequestMarshaller _instance;
    public static UpdateIdentityPoolRequestMarshaller Instance { get; }
    private static UpdateIdentityPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateIdentityPoolRequest publicRequest);
    internal static UpdateIdentityPoolRequestMarshaller GetInstance();
    public static UpdateIdentityPoolRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UpdateIdentityPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateIdentityPoolResponseUnmarshaller _instance;
    public static UpdateIdentityPoolResponseUnmarshaller Instance { get; }
    private static UpdateIdentityPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateIdentityPoolResponseUnmarshaller GetInstance();
    public static UpdateIdentityPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentity.Model.InternalErrorException : AmazonCognitoIdentityException {
    public InternalErrorException(string message);
    public InternalErrorException(string message, Exception innerException);
    public InternalErrorException(Exception innerException);
    public InternalErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.InvalidIdentityPoolConfigurationException : AmazonCognitoIdentityException {
    public InvalidIdentityPoolConfigurationException(string message);
    public InvalidIdentityPoolConfigurationException(string message, Exception innerException);
    public InvalidIdentityPoolConfigurationException(Exception innerException);
    public InvalidIdentityPoolConfigurationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidIdentityPoolConfigurationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.InvalidParameterException : AmazonCognitoIdentityException {
    public InvalidParameterException(string message);
    public InvalidParameterException(string message, Exception innerException);
    public InvalidParameterException(Exception innerException);
    public InvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.LimitExceededException : AmazonCognitoIdentityException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.ListIdentitiesRequest : AmazonCognitoIdentityRequest {
    private Nullable`1<bool> _hideDisabled;
    private string _identityPoolId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    public Nullable`1<bool> HideDisabled { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<bool> get_HideDisabled();
    public void set_HideDisabled(Nullable`1<bool> value);
    internal bool IsSetHideDisabled();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.ListIdentitiesResponse : AmazonWebServiceResponse {
    private List`1<IdentityDescription> _identities;
    private string _identityPoolId;
    private string _nextToken;
    public List`1<IdentityDescription> Identities { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<IdentityDescription> get_Identities();
    public void set_Identities(List`1<IdentityDescription> value);
    internal bool IsSetIdentities();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CognitoIdentity.Model.ListIdentityPoolsPaginator : object {
    private IAmazonCognitoIdentity _client;
    private ListIdentityPoolsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListIdentityPoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<IdentityPoolShortDescription> IdentityPools { get; }
    internal ListIdentityPoolsPaginator(IAmazonCognitoIdentity client, ListIdentityPoolsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListIdentityPoolsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<IdentityPoolShortDescription> get_IdentityPools();
    [AsyncIteratorStateMachineAttribute("Amazon.CognitoIdentity.Model.ListIdentityPoolsPaginator/<Amazon-Runtime-IPaginator<Amazon-CognitoIdentity-Model-ListIdentityPoolsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListIdentityPoolsResponse> Amazon.Runtime.IPaginator<Amazon.CognitoIdentity.Model.ListIdentityPoolsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentity.Model.ListIdentityPoolsRequest : AmazonCognitoIdentityRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.ListIdentityPoolsResponse : AmazonWebServiceResponse {
    private List`1<IdentityPoolShortDescription> _identityPools;
    private string _nextToken;
    public List`1<IdentityPoolShortDescription> IdentityPools { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<IdentityPoolShortDescription> get_IdentityPools();
    public void set_IdentityPools(List`1<IdentityPoolShortDescription> value);
    internal bool IsSetIdentityPools();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.ListTagsForResourceRequest : AmazonCognitoIdentityRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.CognitoIdentity.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CognitoIdentity.Model.LookupDeveloperIdentityRequest : AmazonCognitoIdentityRequest {
    private string _developerUserIdentifier;
    private string _identityId;
    private string _identityPoolId;
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public string DeveloperUserIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public string get_DeveloperUserIdentifier();
    public void set_DeveloperUserIdentifier(string value);
    internal bool IsSetDeveloperUserIdentifier();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.LookupDeveloperIdentityResponse : AmazonWebServiceResponse {
    private List`1<string> _developerUserIdentifierList;
    private string _identityId;
    private string _nextToken;
    public List`1<string> DeveloperUserIdentifierList { get; public set; }
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<string> get_DeveloperUserIdentifierList();
    public void set_DeveloperUserIdentifierList(List`1<string> value);
    internal bool IsSetDeveloperUserIdentifierList();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentity.Model.MappingRule : object {
    private string _claim;
    private MappingRuleMatchType _matchType;
    private string _roleARN;
    private string _value;
    [AWSPropertyAttribute]
public string Claim { get; public set; }
    [AWSPropertyAttribute]
public MappingRuleMatchType MatchType { get; public set; }
    [AWSPropertyAttribute]
public string RoleARN { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Claim();
    public void set_Claim(string value);
    internal bool IsSetClaim();
    public MappingRuleMatchType get_MatchType();
    public void set_MatchType(MappingRuleMatchType value);
    internal bool IsSetMatchType();
    public string get_RoleARN();
    public void set_RoleARN(string value);
    internal bool IsSetRoleARN();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesRequest : AmazonCognitoIdentityRequest {
    private string _destinationUserIdentifier;
    private string _developerProviderName;
    private string _identityPoolId;
    private string _sourceUserIdentifier;
    [AWSPropertyAttribute]
public string DestinationUserIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string DeveloperProviderName { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string SourceUserIdentifier { get; public set; }
    public string get_DestinationUserIdentifier();
    public void set_DestinationUserIdentifier(string value);
    internal bool IsSetDestinationUserIdentifier();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_SourceUserIdentifier();
    public void set_SourceUserIdentifier(string value);
    internal bool IsSetSourceUserIdentifier();
}
public class Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesResponse : AmazonWebServiceResponse {
    private string _identityId;
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
}
public class Amazon.CognitoIdentity.Model.NotAuthorizedException : AmazonCognitoIdentityException {
    public NotAuthorizedException(string message);
    public NotAuthorizedException(string message, Exception innerException);
    public NotAuthorizedException(Exception innerException);
    public NotAuthorizedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NotAuthorizedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.ResourceConflictException : AmazonCognitoIdentityException {
    public ResourceConflictException(string message);
    public ResourceConflictException(string message, Exception innerException);
    public ResourceConflictException(Exception innerException);
    public ResourceConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.ResourceNotFoundException : AmazonCognitoIdentityException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.RoleMapping : object {
    private AmbiguousRoleResolutionType _ambiguousRoleResolution;
    private RulesConfigurationType _rulesConfiguration;
    private RoleMappingType _type;
    public AmbiguousRoleResolutionType AmbiguousRoleResolution { get; public set; }
    public RulesConfigurationType RulesConfiguration { get; public set; }
    [AWSPropertyAttribute]
public RoleMappingType Type { get; public set; }
    public AmbiguousRoleResolutionType get_AmbiguousRoleResolution();
    public void set_AmbiguousRoleResolution(AmbiguousRoleResolutionType value);
    internal bool IsSetAmbiguousRoleResolution();
    public RulesConfigurationType get_RulesConfiguration();
    public void set_RulesConfiguration(RulesConfigurationType value);
    internal bool IsSetRulesConfiguration();
    public RoleMappingType get_Type();
    public void set_Type(RoleMappingType value);
    internal bool IsSetType();
}
public class Amazon.CognitoIdentity.Model.RulesConfigurationType : object {
    private List`1<MappingRule> _rules;
    [AWSPropertyAttribute]
public List`1<MappingRule> Rules { get; public set; }
    public List`1<MappingRule> get_Rules();
    public void set_Rules(List`1<MappingRule> value);
    internal bool IsSetRules();
}
public class Amazon.CognitoIdentity.Model.SetIdentityPoolRolesRequest : AmazonCognitoIdentityRequest {
    private string _identityPoolId;
    private Dictionary`2<string, RoleMapping> _roleMappings;
    private Dictionary`2<string, string> _roles;
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, RoleMapping> RoleMappings { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Roles { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public Dictionary`2<string, RoleMapping> get_RoleMappings();
    public void set_RoleMappings(Dictionary`2<string, RoleMapping> value);
    internal bool IsSetRoleMappings();
    public Dictionary`2<string, string> get_Roles();
    public void set_Roles(Dictionary`2<string, string> value);
    internal bool IsSetRoles();
}
public class Amazon.CognitoIdentity.Model.SetIdentityPoolRolesResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentity.Model.SetPrincipalTagAttributeMapRequest : AmazonCognitoIdentityRequest {
    private string _identityPoolId;
    private string _identityProviderName;
    private Dictionary`2<string, string> _principalTags;
    private Nullable`1<bool> _useDefaults;
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityProviderName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> PrincipalTags { get; public set; }
    public Nullable`1<bool> UseDefaults { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityProviderName();
    public void set_IdentityProviderName(string value);
    internal bool IsSetIdentityProviderName();
    public Dictionary`2<string, string> get_PrincipalTags();
    public void set_PrincipalTags(Dictionary`2<string, string> value);
    internal bool IsSetPrincipalTags();
    public Nullable`1<bool> get_UseDefaults();
    public void set_UseDefaults(Nullable`1<bool> value);
    internal bool IsSetUseDefaults();
}
public class Amazon.CognitoIdentity.Model.SetPrincipalTagAttributeMapResponse : AmazonWebServiceResponse {
    private string _identityPoolId;
    private string _identityProviderName;
    private Dictionary`2<string, string> _principalTags;
    private Nullable`1<bool> _useDefaults;
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityProviderName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> PrincipalTags { get; public set; }
    public Nullable`1<bool> UseDefaults { get; public set; }
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityProviderName();
    public void set_IdentityProviderName(string value);
    internal bool IsSetIdentityProviderName();
    public Dictionary`2<string, string> get_PrincipalTags();
    public void set_PrincipalTags(Dictionary`2<string, string> value);
    internal bool IsSetPrincipalTags();
    public Nullable`1<bool> get_UseDefaults();
    public void set_UseDefaults(Nullable`1<bool> value);
    internal bool IsSetUseDefaults();
}
public class Amazon.CognitoIdentity.Model.TagResourceRequest : AmazonCognitoIdentityRequest {
    private string _resourceArn;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CognitoIdentity.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentity.Model.TooManyRequestsException : AmazonCognitoIdentityException {
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityRequest : AmazonCognitoIdentityRequest {
    private string _developerProviderName;
    private string _developerUserIdentifier;
    private string _identityId;
    private string _identityPoolId;
    [AWSPropertyAttribute]
public string DeveloperProviderName { get; public set; }
    [AWSPropertyAttribute]
public string DeveloperUserIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_DeveloperUserIdentifier();
    public void set_DeveloperUserIdentifier(string value);
    internal bool IsSetDeveloperUserIdentifier();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
}
public class Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentity.Model.UnlinkIdentityRequest : AmazonCognitoIdentityRequest {
    private string _identityId;
    private Dictionary`2<string, string> _logins;
    private List`1<string> _loginsToRemove;
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Logins { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LoginsToRemove { get; public set; }
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
    public Dictionary`2<string, string> get_Logins();
    public void set_Logins(Dictionary`2<string, string> value);
    internal bool IsSetLogins();
    public List`1<string> get_LoginsToRemove();
    public void set_LoginsToRemove(List`1<string> value);
    internal bool IsSetLoginsToRemove();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentity.Model.UnlinkIdentityResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentity.Model.UnprocessedIdentityId : object {
    private ErrorCode _errorCode;
    private string _identityId;
    public ErrorCode ErrorCode { get; public set; }
    [AWSPropertyAttribute]
public string IdentityId { get; public set; }
    public ErrorCode get_ErrorCode();
    public void set_ErrorCode(ErrorCode value);
    internal bool IsSetErrorCode();
    public string get_IdentityId();
    public void set_IdentityId(string value);
    internal bool IsSetIdentityId();
}
public class Amazon.CognitoIdentity.Model.UntagResourceRequest : AmazonCognitoIdentityRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.CognitoIdentity.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentity.Model.UpdateIdentityPoolRequest : AmazonCognitoIdentityRequest {
    private Nullable`1<bool> _allowClassicFlow;
    private Nullable`1<bool> _allowUnauthenticatedIdentities;
    private List`1<CognitoIdentityProviderInfo> _cognitoIdentityProviders;
    private string _developerProviderName;
    private string _identityPoolId;
    private string _identityPoolName;
    private Dictionary`2<string, string> _identityPoolTags;
    private List`1<string> _openIdConnectProviderARNs;
    private List`1<string> _samlProviderARNs;
    private Dictionary`2<string, string> _supportedLoginProviders;
    public Nullable`1<bool> AllowClassicFlow { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> AllowUnauthenticatedIdentities { get; public set; }
    public List`1<CognitoIdentityProviderInfo> CognitoIdentityProviders { get; public set; }
    [AWSPropertyAttribute]
public string DeveloperProviderName { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolName { get; public set; }
    public Dictionary`2<string, string> IdentityPoolTags { get; public set; }
    public List`1<string> OpenIdConnectProviderARNs { get; public set; }
    public List`1<string> SamlProviderARNs { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> SupportedLoginProviders { get; public set; }
    public Nullable`1<bool> get_AllowClassicFlow();
    public void set_AllowClassicFlow(Nullable`1<bool> value);
    internal bool IsSetAllowClassicFlow();
    public Nullable`1<bool> get_AllowUnauthenticatedIdentities();
    public void set_AllowUnauthenticatedIdentities(Nullable`1<bool> value);
    internal bool IsSetAllowUnauthenticatedIdentities();
    public List`1<CognitoIdentityProviderInfo> get_CognitoIdentityProviders();
    public void set_CognitoIdentityProviders(List`1<CognitoIdentityProviderInfo> value);
    internal bool IsSetCognitoIdentityProviders();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
    public Dictionary`2<string, string> get_IdentityPoolTags();
    public void set_IdentityPoolTags(Dictionary`2<string, string> value);
    internal bool IsSetIdentityPoolTags();
    public List`1<string> get_OpenIdConnectProviderARNs();
    public void set_OpenIdConnectProviderARNs(List`1<string> value);
    internal bool IsSetOpenIdConnectProviderARNs();
    public List`1<string> get_SamlProviderARNs();
    public void set_SamlProviderARNs(List`1<string> value);
    internal bool IsSetSamlProviderARNs();
    public Dictionary`2<string, string> get_SupportedLoginProviders();
    public void set_SupportedLoginProviders(Dictionary`2<string, string> value);
    internal bool IsSetSupportedLoginProviders();
}
public class Amazon.CognitoIdentity.Model.UpdateIdentityPoolResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _allowClassicFlow;
    private Nullable`1<bool> _allowUnauthenticatedIdentities;
    private List`1<CognitoIdentityProviderInfo> _cognitoIdentityProviders;
    private string _developerProviderName;
    private string _identityPoolId;
    private string _identityPoolName;
    private Dictionary`2<string, string> _identityPoolTags;
    private List`1<string> _openIdConnectProviderARNs;
    private List`1<string> _samlProviderARNs;
    private Dictionary`2<string, string> _supportedLoginProviders;
    public Nullable`1<bool> AllowClassicFlow { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> AllowUnauthenticatedIdentities { get; public set; }
    public List`1<CognitoIdentityProviderInfo> CognitoIdentityProviders { get; public set; }
    [AWSPropertyAttribute]
public string DeveloperProviderName { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolId { get; public set; }
    [AWSPropertyAttribute]
public string IdentityPoolName { get; public set; }
    public Dictionary`2<string, string> IdentityPoolTags { get; public set; }
    public List`1<string> OpenIdConnectProviderARNs { get; public set; }
    public List`1<string> SamlProviderARNs { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> SupportedLoginProviders { get; public set; }
    public Nullable`1<bool> get_AllowClassicFlow();
    public void set_AllowClassicFlow(Nullable`1<bool> value);
    internal bool IsSetAllowClassicFlow();
    public Nullable`1<bool> get_AllowUnauthenticatedIdentities();
    public void set_AllowUnauthenticatedIdentities(Nullable`1<bool> value);
    internal bool IsSetAllowUnauthenticatedIdentities();
    public List`1<CognitoIdentityProviderInfo> get_CognitoIdentityProviders();
    public void set_CognitoIdentityProviders(List`1<CognitoIdentityProviderInfo> value);
    internal bool IsSetCognitoIdentityProviders();
    public string get_DeveloperProviderName();
    public void set_DeveloperProviderName(string value);
    internal bool IsSetDeveloperProviderName();
    public string get_IdentityPoolId();
    public void set_IdentityPoolId(string value);
    internal bool IsSetIdentityPoolId();
    public string get_IdentityPoolName();
    public void set_IdentityPoolName(string value);
    internal bool IsSetIdentityPoolName();
    public Dictionary`2<string, string> get_IdentityPoolTags();
    public void set_IdentityPoolTags(Dictionary`2<string, string> value);
    internal bool IsSetIdentityPoolTags();
    public List`1<string> get_OpenIdConnectProviderARNs();
    public void set_OpenIdConnectProviderARNs(List`1<string> value);
    internal bool IsSetOpenIdConnectProviderARNs();
    public List`1<string> get_SamlProviderARNs();
    public void set_SamlProviderARNs(List`1<string> value);
    internal bool IsSetSamlProviderARNs();
    public Dictionary`2<string, string> get_SupportedLoginProviders();
    public void set_SupportedLoginProviders(Dictionary`2<string, string> value);
    internal bool IsSetSupportedLoginProviders();
}
public class Amazon.CognitoIdentity.RoleMappingType : ConstantClass {
    public static RoleMappingType Rules;
    public static RoleMappingType Token;
    public RoleMappingType(string value);
    private static RoleMappingType();
    public static RoleMappingType FindValue(string value);
    public static RoleMappingType op_Implicit(string value);
}
