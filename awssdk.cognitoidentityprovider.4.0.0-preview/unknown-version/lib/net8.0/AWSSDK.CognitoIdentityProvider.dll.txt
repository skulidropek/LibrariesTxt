public class Amazon.CognitoIdentityProvider.AccountTakeoverEventActionType : ConstantClass {
    public static AccountTakeoverEventActionType BLOCK;
    public static AccountTakeoverEventActionType MFA_IF_CONFIGURED;
    public static AccountTakeoverEventActionType MFA_REQUIRED;
    public static AccountTakeoverEventActionType NO_ACTION;
    public AccountTakeoverEventActionType(string value);
    private static AccountTakeoverEventActionType();
    public static AccountTakeoverEventActionType FindValue(string value);
    public static AccountTakeoverEventActionType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.AdvancedSecurityModeType : ConstantClass {
    public static AdvancedSecurityModeType AUDIT;
    public static AdvancedSecurityModeType ENFORCED;
    public static AdvancedSecurityModeType OFF;
    public AdvancedSecurityModeType(string value);
    private static AdvancedSecurityModeType();
    public static AdvancedSecurityModeType FindValue(string value);
    public static AdvancedSecurityModeType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.AliasAttributeType : ConstantClass {
    public static AliasAttributeType Email;
    public static AliasAttributeType Phone_number;
    public static AliasAttributeType Preferred_username;
    public AliasAttributeType(string value);
    private static AliasAttributeType();
    public static AliasAttributeType FindValue(string value);
    public static AliasAttributeType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private ICognitoIdentityProviderPaginatorFactory _paginators;
    public ICognitoIdentityProviderPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonCognitoIdentityProviderClient(RegionEndpoint region);
    public AmazonCognitoIdentityProviderClient(AmazonCognitoIdentityProviderConfig config);
    public AmazonCognitoIdentityProviderClient(AWSCredentials credentials);
    public AmazonCognitoIdentityProviderClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonCognitoIdentityProviderClient(AWSCredentials credentials, AmazonCognitoIdentityProviderConfig clientConfig);
    public AmazonCognitoIdentityProviderClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonCognitoIdentityProviderClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonCognitoIdentityProviderClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonCognitoIdentityProviderConfig clientConfig);
    public AmazonCognitoIdentityProviderClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonCognitoIdentityProviderClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonCognitoIdentityProviderClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonCognitoIdentityProviderConfig clientConfig);
    private static AmazonCognitoIdentityProviderClient();
    public sealed virtual ICognitoIdentityProviderPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AddCustomAttributesResponse AddCustomAttributes(AddCustomAttributesRequest request);
    public virtual Task`1<AddCustomAttributesResponse> AddCustomAttributesAsync(AddCustomAttributesRequest request, CancellationToken cancellationToken);
    internal virtual AdminAddUserToGroupResponse AdminAddUserToGroup(AdminAddUserToGroupRequest request);
    public virtual Task`1<AdminAddUserToGroupResponse> AdminAddUserToGroupAsync(AdminAddUserToGroupRequest request, CancellationToken cancellationToken);
    internal virtual AdminConfirmSignUpResponse AdminConfirmSignUp(AdminConfirmSignUpRequest request);
    public virtual Task`1<AdminConfirmSignUpResponse> AdminConfirmSignUpAsync(AdminConfirmSignUpRequest request, CancellationToken cancellationToken);
    internal virtual AdminCreateUserResponse AdminCreateUser(AdminCreateUserRequest request);
    public virtual Task`1<AdminCreateUserResponse> AdminCreateUserAsync(AdminCreateUserRequest request, CancellationToken cancellationToken);
    internal virtual AdminDeleteUserResponse AdminDeleteUser(AdminDeleteUserRequest request);
    public virtual Task`1<AdminDeleteUserResponse> AdminDeleteUserAsync(AdminDeleteUserRequest request, CancellationToken cancellationToken);
    internal virtual AdminDeleteUserAttributesResponse AdminDeleteUserAttributes(AdminDeleteUserAttributesRequest request);
    public virtual Task`1<AdminDeleteUserAttributesResponse> AdminDeleteUserAttributesAsync(AdminDeleteUserAttributesRequest request, CancellationToken cancellationToken);
    internal virtual AdminDisableProviderForUserResponse AdminDisableProviderForUser(AdminDisableProviderForUserRequest request);
    public virtual Task`1<AdminDisableProviderForUserResponse> AdminDisableProviderForUserAsync(AdminDisableProviderForUserRequest request, CancellationToken cancellationToken);
    internal virtual AdminDisableUserResponse AdminDisableUser(AdminDisableUserRequest request);
    public virtual Task`1<AdminDisableUserResponse> AdminDisableUserAsync(AdminDisableUserRequest request, CancellationToken cancellationToken);
    internal virtual AdminEnableUserResponse AdminEnableUser(AdminEnableUserRequest request);
    public virtual Task`1<AdminEnableUserResponse> AdminEnableUserAsync(AdminEnableUserRequest request, CancellationToken cancellationToken);
    internal virtual AdminForgetDeviceResponse AdminForgetDevice(AdminForgetDeviceRequest request);
    public virtual Task`1<AdminForgetDeviceResponse> AdminForgetDeviceAsync(AdminForgetDeviceRequest request, CancellationToken cancellationToken);
    internal virtual AdminGetDeviceResponse AdminGetDevice(AdminGetDeviceRequest request);
    public virtual Task`1<AdminGetDeviceResponse> AdminGetDeviceAsync(AdminGetDeviceRequest request, CancellationToken cancellationToken);
    internal virtual AdminGetUserResponse AdminGetUser(AdminGetUserRequest request);
    public virtual Task`1<AdminGetUserResponse> AdminGetUserAsync(AdminGetUserRequest request, CancellationToken cancellationToken);
    internal virtual AdminInitiateAuthResponse AdminInitiateAuth(AdminInitiateAuthRequest request);
    public virtual Task`1<AdminInitiateAuthResponse> AdminInitiateAuthAsync(AdminInitiateAuthRequest request, CancellationToken cancellationToken);
    internal virtual AdminLinkProviderForUserResponse AdminLinkProviderForUser(AdminLinkProviderForUserRequest request);
    public virtual Task`1<AdminLinkProviderForUserResponse> AdminLinkProviderForUserAsync(AdminLinkProviderForUserRequest request, CancellationToken cancellationToken);
    internal virtual AdminListDevicesResponse AdminListDevices(AdminListDevicesRequest request);
    public virtual Task`1<AdminListDevicesResponse> AdminListDevicesAsync(AdminListDevicesRequest request, CancellationToken cancellationToken);
    internal virtual AdminListGroupsForUserResponse AdminListGroupsForUser(AdminListGroupsForUserRequest request);
    public virtual Task`1<AdminListGroupsForUserResponse> AdminListGroupsForUserAsync(AdminListGroupsForUserRequest request, CancellationToken cancellationToken);
    internal virtual AdminListUserAuthEventsResponse AdminListUserAuthEvents(AdminListUserAuthEventsRequest request);
    public virtual Task`1<AdminListUserAuthEventsResponse> AdminListUserAuthEventsAsync(AdminListUserAuthEventsRequest request, CancellationToken cancellationToken);
    internal virtual AdminRemoveUserFromGroupResponse AdminRemoveUserFromGroup(AdminRemoveUserFromGroupRequest request);
    public virtual Task`1<AdminRemoveUserFromGroupResponse> AdminRemoveUserFromGroupAsync(AdminRemoveUserFromGroupRequest request, CancellationToken cancellationToken);
    internal virtual AdminResetUserPasswordResponse AdminResetUserPassword(AdminResetUserPasswordRequest request);
    public virtual Task`1<AdminResetUserPasswordResponse> AdminResetUserPasswordAsync(AdminResetUserPasswordRequest request, CancellationToken cancellationToken);
    internal virtual AdminRespondToAuthChallengeResponse AdminRespondToAuthChallenge(AdminRespondToAuthChallengeRequest request);
    public virtual Task`1<AdminRespondToAuthChallengeResponse> AdminRespondToAuthChallengeAsync(AdminRespondToAuthChallengeRequest request, CancellationToken cancellationToken);
    internal virtual AdminSetUserMFAPreferenceResponse AdminSetUserMFAPreference(AdminSetUserMFAPreferenceRequest request);
    public virtual Task`1<AdminSetUserMFAPreferenceResponse> AdminSetUserMFAPreferenceAsync(AdminSetUserMFAPreferenceRequest request, CancellationToken cancellationToken);
    internal virtual AdminSetUserPasswordResponse AdminSetUserPassword(AdminSetUserPasswordRequest request);
    public virtual Task`1<AdminSetUserPasswordResponse> AdminSetUserPasswordAsync(AdminSetUserPasswordRequest request, CancellationToken cancellationToken);
    internal virtual AdminSetUserSettingsResponse AdminSetUserSettings(AdminSetUserSettingsRequest request);
    public virtual Task`1<AdminSetUserSettingsResponse> AdminSetUserSettingsAsync(AdminSetUserSettingsRequest request, CancellationToken cancellationToken);
    internal virtual AdminUpdateAuthEventFeedbackResponse AdminUpdateAuthEventFeedback(AdminUpdateAuthEventFeedbackRequest request);
    public virtual Task`1<AdminUpdateAuthEventFeedbackResponse> AdminUpdateAuthEventFeedbackAsync(AdminUpdateAuthEventFeedbackRequest request, CancellationToken cancellationToken);
    internal virtual AdminUpdateDeviceStatusResponse AdminUpdateDeviceStatus(AdminUpdateDeviceStatusRequest request);
    public virtual Task`1<AdminUpdateDeviceStatusResponse> AdminUpdateDeviceStatusAsync(AdminUpdateDeviceStatusRequest request, CancellationToken cancellationToken);
    internal virtual AdminUpdateUserAttributesResponse AdminUpdateUserAttributes(AdminUpdateUserAttributesRequest request);
    public virtual Task`1<AdminUpdateUserAttributesResponse> AdminUpdateUserAttributesAsync(AdminUpdateUserAttributesRequest request, CancellationToken cancellationToken);
    internal virtual AdminUserGlobalSignOutResponse AdminUserGlobalSignOut(AdminUserGlobalSignOutRequest request);
    public virtual Task`1<AdminUserGlobalSignOutResponse> AdminUserGlobalSignOutAsync(AdminUserGlobalSignOutRequest request, CancellationToken cancellationToken);
    internal virtual AssociateSoftwareTokenResponse AssociateSoftwareToken(AssociateSoftwareTokenRequest request);
    public virtual Task`1<AssociateSoftwareTokenResponse> AssociateSoftwareTokenAsync(AssociateSoftwareTokenRequest request, CancellationToken cancellationToken);
    internal virtual ChangePasswordResponse ChangePassword(ChangePasswordRequest request);
    public virtual Task`1<ChangePasswordResponse> ChangePasswordAsync(ChangePasswordRequest request, CancellationToken cancellationToken);
    internal virtual ConfirmDeviceResponse ConfirmDevice(ConfirmDeviceRequest request);
    public virtual Task`1<ConfirmDeviceResponse> ConfirmDeviceAsync(ConfirmDeviceRequest request, CancellationToken cancellationToken);
    internal virtual ConfirmForgotPasswordResponse ConfirmForgotPassword(ConfirmForgotPasswordRequest request);
    public virtual Task`1<ConfirmForgotPasswordResponse> ConfirmForgotPasswordAsync(ConfirmForgotPasswordRequest request, CancellationToken cancellationToken);
    internal virtual ConfirmSignUpResponse ConfirmSignUp(ConfirmSignUpRequest request);
    public virtual Task`1<ConfirmSignUpResponse> ConfirmSignUpAsync(ConfirmSignUpRequest request, CancellationToken cancellationToken);
    internal virtual CreateGroupResponse CreateGroup(CreateGroupRequest request);
    public virtual Task`1<CreateGroupResponse> CreateGroupAsync(CreateGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateIdentityProviderResponse CreateIdentityProvider(CreateIdentityProviderRequest request);
    public virtual Task`1<CreateIdentityProviderResponse> CreateIdentityProviderAsync(CreateIdentityProviderRequest request, CancellationToken cancellationToken);
    internal virtual CreateResourceServerResponse CreateResourceServer(CreateResourceServerRequest request);
    public virtual Task`1<CreateResourceServerResponse> CreateResourceServerAsync(CreateResourceServerRequest request, CancellationToken cancellationToken);
    internal virtual CreateUserImportJobResponse CreateUserImportJob(CreateUserImportJobRequest request);
    public virtual Task`1<CreateUserImportJobResponse> CreateUserImportJobAsync(CreateUserImportJobRequest request, CancellationToken cancellationToken);
    internal virtual CreateUserPoolResponse CreateUserPool(CreateUserPoolRequest request);
    public virtual Task`1<CreateUserPoolResponse> CreateUserPoolAsync(CreateUserPoolRequest request, CancellationToken cancellationToken);
    internal virtual CreateUserPoolClientResponse CreateUserPoolClient(CreateUserPoolClientRequest request);
    public virtual Task`1<CreateUserPoolClientResponse> CreateUserPoolClientAsync(CreateUserPoolClientRequest request, CancellationToken cancellationToken);
    internal virtual CreateUserPoolDomainResponse CreateUserPoolDomain(CreateUserPoolDomainRequest request);
    public virtual Task`1<CreateUserPoolDomainResponse> CreateUserPoolDomainAsync(CreateUserPoolDomainRequest request, CancellationToken cancellationToken);
    internal virtual DeleteGroupResponse DeleteGroup(DeleteGroupRequest request);
    public virtual Task`1<DeleteGroupResponse> DeleteGroupAsync(DeleteGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteIdentityProviderResponse DeleteIdentityProvider(DeleteIdentityProviderRequest request);
    public virtual Task`1<DeleteIdentityProviderResponse> DeleteIdentityProviderAsync(DeleteIdentityProviderRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResourceServerResponse DeleteResourceServer(DeleteResourceServerRequest request);
    public virtual Task`1<DeleteResourceServerResponse> DeleteResourceServerAsync(DeleteResourceServerRequest request, CancellationToken cancellationToken);
    internal virtual DeleteUserResponse DeleteUser(DeleteUserRequest request);
    public virtual Task`1<DeleteUserResponse> DeleteUserAsync(DeleteUserRequest request, CancellationToken cancellationToken);
    internal virtual DeleteUserAttributesResponse DeleteUserAttributes(DeleteUserAttributesRequest request);
    public virtual Task`1<DeleteUserAttributesResponse> DeleteUserAttributesAsync(DeleteUserAttributesRequest request, CancellationToken cancellationToken);
    internal virtual DeleteUserPoolResponse DeleteUserPool(DeleteUserPoolRequest request);
    public virtual Task`1<DeleteUserPoolResponse> DeleteUserPoolAsync(DeleteUserPoolRequest request, CancellationToken cancellationToken);
    internal virtual DeleteUserPoolClientResponse DeleteUserPoolClient(DeleteUserPoolClientRequest request);
    public virtual Task`1<DeleteUserPoolClientResponse> DeleteUserPoolClientAsync(DeleteUserPoolClientRequest request, CancellationToken cancellationToken);
    internal virtual DeleteUserPoolDomainResponse DeleteUserPoolDomain(DeleteUserPoolDomainRequest request);
    public virtual Task`1<DeleteUserPoolDomainResponse> DeleteUserPoolDomainAsync(DeleteUserPoolDomainRequest request, CancellationToken cancellationToken);
    internal virtual DescribeIdentityProviderResponse DescribeIdentityProvider(DescribeIdentityProviderRequest request);
    public virtual Task`1<DescribeIdentityProviderResponse> DescribeIdentityProviderAsync(DescribeIdentityProviderRequest request, CancellationToken cancellationToken);
    internal virtual DescribeResourceServerResponse DescribeResourceServer(DescribeResourceServerRequest request);
    public virtual Task`1<DescribeResourceServerResponse> DescribeResourceServerAsync(DescribeResourceServerRequest request, CancellationToken cancellationToken);
    internal virtual DescribeRiskConfigurationResponse DescribeRiskConfiguration(DescribeRiskConfigurationRequest request);
    public virtual Task`1<DescribeRiskConfigurationResponse> DescribeRiskConfigurationAsync(DescribeRiskConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeUserImportJobResponse DescribeUserImportJob(DescribeUserImportJobRequest request);
    public virtual Task`1<DescribeUserImportJobResponse> DescribeUserImportJobAsync(DescribeUserImportJobRequest request, CancellationToken cancellationToken);
    internal virtual DescribeUserPoolResponse DescribeUserPool(DescribeUserPoolRequest request);
    public virtual Task`1<DescribeUserPoolResponse> DescribeUserPoolAsync(DescribeUserPoolRequest request, CancellationToken cancellationToken);
    internal virtual DescribeUserPoolClientResponse DescribeUserPoolClient(DescribeUserPoolClientRequest request);
    public virtual Task`1<DescribeUserPoolClientResponse> DescribeUserPoolClientAsync(DescribeUserPoolClientRequest request, CancellationToken cancellationToken);
    internal virtual DescribeUserPoolDomainResponse DescribeUserPoolDomain(DescribeUserPoolDomainRequest request);
    public virtual Task`1<DescribeUserPoolDomainResponse> DescribeUserPoolDomainAsync(DescribeUserPoolDomainRequest request, CancellationToken cancellationToken);
    internal virtual ForgetDeviceResponse ForgetDevice(ForgetDeviceRequest request);
    public virtual Task`1<ForgetDeviceResponse> ForgetDeviceAsync(ForgetDeviceRequest request, CancellationToken cancellationToken);
    internal virtual ForgotPasswordResponse ForgotPassword(ForgotPasswordRequest request);
    public virtual Task`1<ForgotPasswordResponse> ForgotPasswordAsync(ForgotPasswordRequest request, CancellationToken cancellationToken);
    internal virtual GetCSVHeaderResponse GetCSVHeader(GetCSVHeaderRequest request);
    public virtual Task`1<GetCSVHeaderResponse> GetCSVHeaderAsync(GetCSVHeaderRequest request, CancellationToken cancellationToken);
    internal virtual GetDeviceResponse GetDevice(GetDeviceRequest request);
    public virtual Task`1<GetDeviceResponse> GetDeviceAsync(GetDeviceRequest request, CancellationToken cancellationToken);
    internal virtual GetGroupResponse GetGroup(GetGroupRequest request);
    public virtual Task`1<GetGroupResponse> GetGroupAsync(GetGroupRequest request, CancellationToken cancellationToken);
    internal virtual GetIdentityProviderByIdentifierResponse GetIdentityProviderByIdentifier(GetIdentityProviderByIdentifierRequest request);
    public virtual Task`1<GetIdentityProviderByIdentifierResponse> GetIdentityProviderByIdentifierAsync(GetIdentityProviderByIdentifierRequest request, CancellationToken cancellationToken);
    internal virtual GetLogDeliveryConfigurationResponse GetLogDeliveryConfiguration(GetLogDeliveryConfigurationRequest request);
    public virtual Task`1<GetLogDeliveryConfigurationResponse> GetLogDeliveryConfigurationAsync(GetLogDeliveryConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual GetSigningCertificateResponse GetSigningCertificate(GetSigningCertificateRequest request);
    public virtual Task`1<GetSigningCertificateResponse> GetSigningCertificateAsync(GetSigningCertificateRequest request, CancellationToken cancellationToken);
    internal virtual GetUICustomizationResponse GetUICustomization(GetUICustomizationRequest request);
    public virtual Task`1<GetUICustomizationResponse> GetUICustomizationAsync(GetUICustomizationRequest request, CancellationToken cancellationToken);
    internal virtual GetUserResponse GetUser(GetUserRequest request);
    public virtual Task`1<GetUserResponse> GetUserAsync(GetUserRequest request, CancellationToken cancellationToken);
    internal virtual GetUserAttributeVerificationCodeResponse GetUserAttributeVerificationCode(GetUserAttributeVerificationCodeRequest request);
    public virtual Task`1<GetUserAttributeVerificationCodeResponse> GetUserAttributeVerificationCodeAsync(GetUserAttributeVerificationCodeRequest request, CancellationToken cancellationToken);
    internal virtual GetUserPoolMfaConfigResponse GetUserPoolMfaConfig(GetUserPoolMfaConfigRequest request);
    public virtual Task`1<GetUserPoolMfaConfigResponse> GetUserPoolMfaConfigAsync(GetUserPoolMfaConfigRequest request, CancellationToken cancellationToken);
    internal virtual GlobalSignOutResponse GlobalSignOut(GlobalSignOutRequest request);
    public virtual Task`1<GlobalSignOutResponse> GlobalSignOutAsync(GlobalSignOutRequest request, CancellationToken cancellationToken);
    internal virtual InitiateAuthResponse InitiateAuth(InitiateAuthRequest request);
    public virtual Task`1<InitiateAuthResponse> InitiateAuthAsync(InitiateAuthRequest request, CancellationToken cancellationToken);
    internal virtual ListDevicesResponse ListDevices(ListDevicesRequest request);
    public virtual Task`1<ListDevicesResponse> ListDevicesAsync(ListDevicesRequest request, CancellationToken cancellationToken);
    internal virtual ListGroupsResponse ListGroups(ListGroupsRequest request);
    public virtual Task`1<ListGroupsResponse> ListGroupsAsync(ListGroupsRequest request, CancellationToken cancellationToken);
    internal virtual ListIdentityProvidersResponse ListIdentityProviders(ListIdentityProvidersRequest request);
    public virtual Task`1<ListIdentityProvidersResponse> ListIdentityProvidersAsync(ListIdentityProvidersRequest request, CancellationToken cancellationToken);
    internal virtual ListResourceServersResponse ListResourceServers(ListResourceServersRequest request);
    public virtual Task`1<ListResourceServersResponse> ListResourceServersAsync(ListResourceServersRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual ListUserImportJobsResponse ListUserImportJobs(ListUserImportJobsRequest request);
    public virtual Task`1<ListUserImportJobsResponse> ListUserImportJobsAsync(ListUserImportJobsRequest request, CancellationToken cancellationToken);
    internal virtual ListUserPoolClientsResponse ListUserPoolClients(ListUserPoolClientsRequest request);
    public virtual Task`1<ListUserPoolClientsResponse> ListUserPoolClientsAsync(ListUserPoolClientsRequest request, CancellationToken cancellationToken);
    internal virtual ListUserPoolsResponse ListUserPools(ListUserPoolsRequest request);
    public virtual Task`1<ListUserPoolsResponse> ListUserPoolsAsync(ListUserPoolsRequest request, CancellationToken cancellationToken);
    internal virtual ListUsersResponse ListUsers(ListUsersRequest request);
    public virtual Task`1<ListUsersResponse> ListUsersAsync(ListUsersRequest request, CancellationToken cancellationToken);
    internal virtual ListUsersInGroupResponse ListUsersInGroup(ListUsersInGroupRequest request);
    public virtual Task`1<ListUsersInGroupResponse> ListUsersInGroupAsync(ListUsersInGroupRequest request, CancellationToken cancellationToken);
    internal virtual ResendConfirmationCodeResponse ResendConfirmationCode(ResendConfirmationCodeRequest request);
    public virtual Task`1<ResendConfirmationCodeResponse> ResendConfirmationCodeAsync(ResendConfirmationCodeRequest request, CancellationToken cancellationToken);
    internal virtual RespondToAuthChallengeResponse RespondToAuthChallenge(RespondToAuthChallengeRequest request);
    public virtual Task`1<RespondToAuthChallengeResponse> RespondToAuthChallengeAsync(RespondToAuthChallengeRequest request, CancellationToken cancellationToken);
    internal virtual RevokeTokenResponse RevokeToken(RevokeTokenRequest request);
    public virtual Task`1<RevokeTokenResponse> RevokeTokenAsync(RevokeTokenRequest request, CancellationToken cancellationToken);
    internal virtual SetLogDeliveryConfigurationResponse SetLogDeliveryConfiguration(SetLogDeliveryConfigurationRequest request);
    public virtual Task`1<SetLogDeliveryConfigurationResponse> SetLogDeliveryConfigurationAsync(SetLogDeliveryConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual SetRiskConfigurationResponse SetRiskConfiguration(SetRiskConfigurationRequest request);
    public virtual Task`1<SetRiskConfigurationResponse> SetRiskConfigurationAsync(SetRiskConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual SetUICustomizationResponse SetUICustomization(SetUICustomizationRequest request);
    public virtual Task`1<SetUICustomizationResponse> SetUICustomizationAsync(SetUICustomizationRequest request, CancellationToken cancellationToken);
    internal virtual SetUserMFAPreferenceResponse SetUserMFAPreference(SetUserMFAPreferenceRequest request);
    public virtual Task`1<SetUserMFAPreferenceResponse> SetUserMFAPreferenceAsync(SetUserMFAPreferenceRequest request, CancellationToken cancellationToken);
    internal virtual SetUserPoolMfaConfigResponse SetUserPoolMfaConfig(SetUserPoolMfaConfigRequest request);
    public virtual Task`1<SetUserPoolMfaConfigResponse> SetUserPoolMfaConfigAsync(SetUserPoolMfaConfigRequest request, CancellationToken cancellationToken);
    internal virtual SetUserSettingsResponse SetUserSettings(SetUserSettingsRequest request);
    public virtual Task`1<SetUserSettingsResponse> SetUserSettingsAsync(SetUserSettingsRequest request, CancellationToken cancellationToken);
    internal virtual SignUpResponse SignUp(SignUpRequest request);
    public virtual Task`1<SignUpResponse> SignUpAsync(SignUpRequest request, CancellationToken cancellationToken);
    internal virtual StartUserImportJobResponse StartUserImportJob(StartUserImportJobRequest request);
    public virtual Task`1<StartUserImportJobResponse> StartUserImportJobAsync(StartUserImportJobRequest request, CancellationToken cancellationToken);
    internal virtual StopUserImportJobResponse StopUserImportJob(StopUserImportJobRequest request);
    public virtual Task`1<StopUserImportJobResponse> StopUserImportJobAsync(StopUserImportJobRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateAuthEventFeedbackResponse UpdateAuthEventFeedback(UpdateAuthEventFeedbackRequest request);
    public virtual Task`1<UpdateAuthEventFeedbackResponse> UpdateAuthEventFeedbackAsync(UpdateAuthEventFeedbackRequest request, CancellationToken cancellationToken);
    internal virtual UpdateDeviceStatusResponse UpdateDeviceStatus(UpdateDeviceStatusRequest request);
    public virtual Task`1<UpdateDeviceStatusResponse> UpdateDeviceStatusAsync(UpdateDeviceStatusRequest request, CancellationToken cancellationToken);
    internal virtual UpdateGroupResponse UpdateGroup(UpdateGroupRequest request);
    public virtual Task`1<UpdateGroupResponse> UpdateGroupAsync(UpdateGroupRequest request, CancellationToken cancellationToken);
    internal virtual UpdateIdentityProviderResponse UpdateIdentityProvider(UpdateIdentityProviderRequest request);
    public virtual Task`1<UpdateIdentityProviderResponse> UpdateIdentityProviderAsync(UpdateIdentityProviderRequest request, CancellationToken cancellationToken);
    internal virtual UpdateResourceServerResponse UpdateResourceServer(UpdateResourceServerRequest request);
    public virtual Task`1<UpdateResourceServerResponse> UpdateResourceServerAsync(UpdateResourceServerRequest request, CancellationToken cancellationToken);
    internal virtual UpdateUserAttributesResponse UpdateUserAttributes(UpdateUserAttributesRequest request);
    public virtual Task`1<UpdateUserAttributesResponse> UpdateUserAttributesAsync(UpdateUserAttributesRequest request, CancellationToken cancellationToken);
    internal virtual UpdateUserPoolResponse UpdateUserPool(UpdateUserPoolRequest request);
    public virtual Task`1<UpdateUserPoolResponse> UpdateUserPoolAsync(UpdateUserPoolRequest request, CancellationToken cancellationToken);
    internal virtual UpdateUserPoolClientResponse UpdateUserPoolClient(UpdateUserPoolClientRequest request);
    public virtual Task`1<UpdateUserPoolClientResponse> UpdateUserPoolClientAsync(UpdateUserPoolClientRequest request, CancellationToken cancellationToken);
    internal virtual UpdateUserPoolDomainResponse UpdateUserPoolDomain(UpdateUserPoolDomainRequest request);
    public virtual Task`1<UpdateUserPoolDomainResponse> UpdateUserPoolDomainAsync(UpdateUserPoolDomainRequest request, CancellationToken cancellationToken);
    internal virtual VerifySoftwareTokenResponse VerifySoftwareToken(VerifySoftwareTokenRequest request);
    public virtual Task`1<VerifySoftwareTokenResponse> VerifySoftwareTokenAsync(VerifySoftwareTokenRequest request, CancellationToken cancellationToken);
    internal virtual VerifyUserAttributeResponse VerifyUserAttribute(VerifyUserAttributeRequest request);
    public virtual Task`1<VerifyUserAttributeResponse> VerifyUserAttributeAsync(VerifyUserAttributeRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonCognitoIdentityProviderEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonCognitoIdentityProviderConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonCognitoIdentityProviderDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException : AmazonServiceException {
    public AmazonCognitoIdentityProviderException(string message);
    public AmazonCognitoIdentityProviderException(string message, Exception innerException);
    public AmazonCognitoIdentityProviderException(Exception innerException);
    public AmazonCognitoIdentityProviderException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonCognitoIdentityProviderException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderRequest : AmazonWebServiceRequest {
}
public class Amazon.CognitoIdentityProvider.AttributeDataType : ConstantClass {
    public static AttributeDataType Boolean;
    public static AttributeDataType DateTime;
    public static AttributeDataType Number;
    public static AttributeDataType String;
    public AttributeDataType(string value);
    private static AttributeDataType();
    public static AttributeDataType FindValue(string value);
    public static AttributeDataType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.AuthFlowType : ConstantClass {
    public static AuthFlowType ADMIN_NO_SRP_AUTH;
    public static AuthFlowType ADMIN_USER_PASSWORD_AUTH;
    public static AuthFlowType CUSTOM_AUTH;
    public static AuthFlowType REFRESH_TOKEN;
    public static AuthFlowType REFRESH_TOKEN_AUTH;
    public static AuthFlowType USER_PASSWORD_AUTH;
    public static AuthFlowType USER_SRP_AUTH;
    public AuthFlowType(string value);
    private static AuthFlowType();
    public static AuthFlowType FindValue(string value);
    public static AuthFlowType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.ChallengeName : ConstantClass {
    public static ChallengeName Mfa;
    public static ChallengeName Password;
    public ChallengeName(string value);
    private static ChallengeName();
    public static ChallengeName FindValue(string value);
    public static ChallengeName op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.ChallengeNameType : ConstantClass {
    public static ChallengeNameType ADMIN_NO_SRP_AUTH;
    public static ChallengeNameType CUSTOM_CHALLENGE;
    public static ChallengeNameType DEVICE_PASSWORD_VERIFIER;
    public static ChallengeNameType DEVICE_SRP_AUTH;
    public static ChallengeNameType MFA_SETUP;
    public static ChallengeNameType NEW_PASSWORD_REQUIRED;
    public static ChallengeNameType PASSWORD_VERIFIER;
    public static ChallengeNameType SELECT_MFA_TYPE;
    public static ChallengeNameType SMS_MFA;
    public static ChallengeNameType SOFTWARE_TOKEN_MFA;
    public ChallengeNameType(string value);
    private static ChallengeNameType();
    public static ChallengeNameType FindValue(string value);
    public static ChallengeNameType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.ChallengeResponse : ConstantClass {
    public static ChallengeResponse Failure;
    public static ChallengeResponse Success;
    public ChallengeResponse(string value);
    private static ChallengeResponse();
    public static ChallengeResponse FindValue(string value);
    public static ChallengeResponse op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.CompromisedCredentialsEventActionType : ConstantClass {
    public static CompromisedCredentialsEventActionType BLOCK;
    public static CompromisedCredentialsEventActionType NO_ACTION;
    public CompromisedCredentialsEventActionType(string value);
    private static CompromisedCredentialsEventActionType();
    public static CompromisedCredentialsEventActionType FindValue(string value);
    public static CompromisedCredentialsEventActionType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.CustomEmailSenderLambdaVersionType : ConstantClass {
    public static CustomEmailSenderLambdaVersionType V1_0;
    public CustomEmailSenderLambdaVersionType(string value);
    private static CustomEmailSenderLambdaVersionType();
    public static CustomEmailSenderLambdaVersionType FindValue(string value);
    public static CustomEmailSenderLambdaVersionType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.CustomSMSSenderLambdaVersionType : ConstantClass {
    public static CustomSMSSenderLambdaVersionType V1_0;
    public CustomSMSSenderLambdaVersionType(string value);
    private static CustomSMSSenderLambdaVersionType();
    public static CustomSMSSenderLambdaVersionType FindValue(string value);
    public static CustomSMSSenderLambdaVersionType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.DefaultEmailOptionType : ConstantClass {
    public static DefaultEmailOptionType CONFIRM_WITH_CODE;
    public static DefaultEmailOptionType CONFIRM_WITH_LINK;
    public DefaultEmailOptionType(string value);
    private static DefaultEmailOptionType();
    public static DefaultEmailOptionType FindValue(string value);
    public static DefaultEmailOptionType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.DeletionProtectionType : ConstantClass {
    public static DeletionProtectionType ACTIVE;
    public static DeletionProtectionType INACTIVE;
    public DeletionProtectionType(string value);
    private static DeletionProtectionType();
    public static DeletionProtectionType FindValue(string value);
    public static DeletionProtectionType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.DeliveryMediumType : ConstantClass {
    public static DeliveryMediumType EMAIL;
    public static DeliveryMediumType SMS;
    public DeliveryMediumType(string value);
    private static DeliveryMediumType();
    public static DeliveryMediumType FindValue(string value);
    public static DeliveryMediumType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.DeviceRememberedStatusType : ConstantClass {
    public static DeviceRememberedStatusType Not_remembered;
    public static DeviceRememberedStatusType Remembered;
    public DeviceRememberedStatusType(string value);
    private static DeviceRememberedStatusType();
    public static DeviceRememberedStatusType FindValue(string value);
    public static DeviceRememberedStatusType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.DomainStatusType : ConstantClass {
    public static DomainStatusType ACTIVE;
    public static DomainStatusType CREATING;
    public static DomainStatusType DELETING;
    public static DomainStatusType FAILED;
    public static DomainStatusType UPDATING;
    public DomainStatusType(string value);
    private static DomainStatusType();
    public static DomainStatusType FindValue(string value);
    public static DomainStatusType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.EmailSendingAccountType : ConstantClass {
    public static EmailSendingAccountType COGNITO_DEFAULT;
    public static EmailSendingAccountType DEVELOPER;
    public EmailSendingAccountType(string value);
    private static EmailSendingAccountType();
    public static EmailSendingAccountType FindValue(string value);
    public static EmailSendingAccountType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.Endpoints.CognitoIdentityProviderEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.CognitoIdentityProvider.EventFilterType : ConstantClass {
    public static EventFilterType PASSWORD_CHANGE;
    public static EventFilterType SIGN_IN;
    public static EventFilterType SIGN_UP;
    public EventFilterType(string value);
    private static EventFilterType();
    public static EventFilterType FindValue(string value);
    public static EventFilterType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.EventResponseType : ConstantClass {
    public static EventResponseType Fail;
    public static EventResponseType InProgress;
    public static EventResponseType Pass;
    public EventResponseType(string value);
    private static EventResponseType();
    public static EventResponseType FindValue(string value);
    public static EventResponseType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.EventSourceName : ConstantClass {
    public static EventSourceName UserNotification;
    public EventSourceName(string value);
    private static EventSourceName();
    public static EventSourceName FindValue(string value);
    public static EventSourceName op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.EventType : ConstantClass {
    public static EventType ForgotPassword;
    public static EventType PasswordChange;
    public static EventType ResendCode;
    public static EventType SignIn;
    public static EventType SignUp;
    public EventType(string value);
    private static EventType();
    public static EventType FindValue(string value);
    public static EventType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType : ConstantClass {
    public static ExplicitAuthFlowsType ADMIN_NO_SRP_AUTH;
    public static ExplicitAuthFlowsType ALLOW_ADMIN_USER_PASSWORD_AUTH;
    public static ExplicitAuthFlowsType ALLOW_CUSTOM_AUTH;
    public static ExplicitAuthFlowsType ALLOW_REFRESH_TOKEN_AUTH;
    public static ExplicitAuthFlowsType ALLOW_USER_PASSWORD_AUTH;
    public static ExplicitAuthFlowsType ALLOW_USER_SRP_AUTH;
    public static ExplicitAuthFlowsType CUSTOM_AUTH_FLOW_ONLY;
    public static ExplicitAuthFlowsType USER_PASSWORD_AUTH;
    public ExplicitAuthFlowsType(string value);
    private static ExplicitAuthFlowsType();
    public static ExplicitAuthFlowsType FindValue(string value);
    public static ExplicitAuthFlowsType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.FeedbackValueType : ConstantClass {
    public static FeedbackValueType Invalid;
    public static FeedbackValueType Valid;
    public FeedbackValueType(string value);
    private static FeedbackValueType();
    public static FeedbackValueType FindValue(string value);
    public static FeedbackValueType op_Implicit(string value);
}
public interface Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider {
    public ICognitoIdentityProviderPaginatorFactory Paginators { get; }
    public abstract virtual ICognitoIdentityProviderPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AddCustomAttributesResponse> AddCustomAttributesAsync(AddCustomAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminAddUserToGroupResponse> AdminAddUserToGroupAsync(AdminAddUserToGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminConfirmSignUpResponse> AdminConfirmSignUpAsync(AdminConfirmSignUpRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminCreateUserResponse> AdminCreateUserAsync(AdminCreateUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminDeleteUserResponse> AdminDeleteUserAsync(AdminDeleteUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminDeleteUserAttributesResponse> AdminDeleteUserAttributesAsync(AdminDeleteUserAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminDisableProviderForUserResponse> AdminDisableProviderForUserAsync(AdminDisableProviderForUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminDisableUserResponse> AdminDisableUserAsync(AdminDisableUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminEnableUserResponse> AdminEnableUserAsync(AdminEnableUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminForgetDeviceResponse> AdminForgetDeviceAsync(AdminForgetDeviceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminGetDeviceResponse> AdminGetDeviceAsync(AdminGetDeviceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminGetUserResponse> AdminGetUserAsync(AdminGetUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminInitiateAuthResponse> AdminInitiateAuthAsync(AdminInitiateAuthRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminLinkProviderForUserResponse> AdminLinkProviderForUserAsync(AdminLinkProviderForUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminListDevicesResponse> AdminListDevicesAsync(AdminListDevicesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminListGroupsForUserResponse> AdminListGroupsForUserAsync(AdminListGroupsForUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminListUserAuthEventsResponse> AdminListUserAuthEventsAsync(AdminListUserAuthEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminRemoveUserFromGroupResponse> AdminRemoveUserFromGroupAsync(AdminRemoveUserFromGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminResetUserPasswordResponse> AdminResetUserPasswordAsync(AdminResetUserPasswordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminRespondToAuthChallengeResponse> AdminRespondToAuthChallengeAsync(AdminRespondToAuthChallengeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminSetUserMFAPreferenceResponse> AdminSetUserMFAPreferenceAsync(AdminSetUserMFAPreferenceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminSetUserPasswordResponse> AdminSetUserPasswordAsync(AdminSetUserPasswordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminSetUserSettingsResponse> AdminSetUserSettingsAsync(AdminSetUserSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminUpdateAuthEventFeedbackResponse> AdminUpdateAuthEventFeedbackAsync(AdminUpdateAuthEventFeedbackRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminUpdateDeviceStatusResponse> AdminUpdateDeviceStatusAsync(AdminUpdateDeviceStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminUpdateUserAttributesResponse> AdminUpdateUserAttributesAsync(AdminUpdateUserAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AdminUserGlobalSignOutResponse> AdminUserGlobalSignOutAsync(AdminUserGlobalSignOutRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AssociateSoftwareTokenResponse> AssociateSoftwareTokenAsync(AssociateSoftwareTokenRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ChangePasswordResponse> ChangePasswordAsync(ChangePasswordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ConfirmDeviceResponse> ConfirmDeviceAsync(ConfirmDeviceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ConfirmForgotPasswordResponse> ConfirmForgotPasswordAsync(ConfirmForgotPasswordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ConfirmSignUpResponse> ConfirmSignUpAsync(ConfirmSignUpRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateGroupResponse> CreateGroupAsync(CreateGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateIdentityProviderResponse> CreateIdentityProviderAsync(CreateIdentityProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateResourceServerResponse> CreateResourceServerAsync(CreateResourceServerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateUserImportJobResponse> CreateUserImportJobAsync(CreateUserImportJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateUserPoolResponse> CreateUserPoolAsync(CreateUserPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateUserPoolClientResponse> CreateUserPoolClientAsync(CreateUserPoolClientRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateUserPoolDomainResponse> CreateUserPoolDomainAsync(CreateUserPoolDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteGroupResponse> DeleteGroupAsync(DeleteGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteIdentityProviderResponse> DeleteIdentityProviderAsync(DeleteIdentityProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResourceServerResponse> DeleteResourceServerAsync(DeleteResourceServerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteUserResponse> DeleteUserAsync(DeleteUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteUserAttributesResponse> DeleteUserAttributesAsync(DeleteUserAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteUserPoolResponse> DeleteUserPoolAsync(DeleteUserPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteUserPoolClientResponse> DeleteUserPoolClientAsync(DeleteUserPoolClientRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteUserPoolDomainResponse> DeleteUserPoolDomainAsync(DeleteUserPoolDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeIdentityProviderResponse> DescribeIdentityProviderAsync(DescribeIdentityProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeResourceServerResponse> DescribeResourceServerAsync(DescribeResourceServerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRiskConfigurationResponse> DescribeRiskConfigurationAsync(DescribeRiskConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeUserImportJobResponse> DescribeUserImportJobAsync(DescribeUserImportJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeUserPoolResponse> DescribeUserPoolAsync(DescribeUserPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeUserPoolClientResponse> DescribeUserPoolClientAsync(DescribeUserPoolClientRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeUserPoolDomainResponse> DescribeUserPoolDomainAsync(DescribeUserPoolDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ForgetDeviceResponse> ForgetDeviceAsync(ForgetDeviceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ForgotPasswordResponse> ForgotPasswordAsync(ForgotPasswordRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetCSVHeaderResponse> GetCSVHeaderAsync(GetCSVHeaderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDeviceResponse> GetDeviceAsync(GetDeviceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetGroupResponse> GetGroupAsync(GetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetIdentityProviderByIdentifierResponse> GetIdentityProviderByIdentifierAsync(GetIdentityProviderByIdentifierRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetLogDeliveryConfigurationResponse> GetLogDeliveryConfigurationAsync(GetLogDeliveryConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetSigningCertificateResponse> GetSigningCertificateAsync(GetSigningCertificateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetUICustomizationResponse> GetUICustomizationAsync(GetUICustomizationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetUserResponse> GetUserAsync(GetUserRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetUserAttributeVerificationCodeResponse> GetUserAttributeVerificationCodeAsync(GetUserAttributeVerificationCodeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetUserPoolMfaConfigResponse> GetUserPoolMfaConfigAsync(GetUserPoolMfaConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GlobalSignOutResponse> GlobalSignOutAsync(GlobalSignOutRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<InitiateAuthResponse> InitiateAuthAsync(InitiateAuthRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListDevicesResponse> ListDevicesAsync(ListDevicesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListGroupsResponse> ListGroupsAsync(ListGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListIdentityProvidersResponse> ListIdentityProvidersAsync(ListIdentityProvidersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListResourceServersResponse> ListResourceServersAsync(ListResourceServersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListUserImportJobsResponse> ListUserImportJobsAsync(ListUserImportJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListUserPoolClientsResponse> ListUserPoolClientsAsync(ListUserPoolClientsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListUserPoolsResponse> ListUserPoolsAsync(ListUserPoolsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListUsersResponse> ListUsersAsync(ListUsersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListUsersInGroupResponse> ListUsersInGroupAsync(ListUsersInGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResendConfirmationCodeResponse> ResendConfirmationCodeAsync(ResendConfirmationCodeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RespondToAuthChallengeResponse> RespondToAuthChallengeAsync(RespondToAuthChallengeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RevokeTokenResponse> RevokeTokenAsync(RevokeTokenRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetLogDeliveryConfigurationResponse> SetLogDeliveryConfigurationAsync(SetLogDeliveryConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetRiskConfigurationResponse> SetRiskConfigurationAsync(SetRiskConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetUICustomizationResponse> SetUICustomizationAsync(SetUICustomizationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetUserMFAPreferenceResponse> SetUserMFAPreferenceAsync(SetUserMFAPreferenceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetUserPoolMfaConfigResponse> SetUserPoolMfaConfigAsync(SetUserPoolMfaConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetUserSettingsResponse> SetUserSettingsAsync(SetUserSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SignUpResponse> SignUpAsync(SignUpRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartUserImportJobResponse> StartUserImportJobAsync(StartUserImportJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopUserImportJobResponse> StopUserImportJobAsync(StopUserImportJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateAuthEventFeedbackResponse> UpdateAuthEventFeedbackAsync(UpdateAuthEventFeedbackRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateDeviceStatusResponse> UpdateDeviceStatusAsync(UpdateDeviceStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateGroupResponse> UpdateGroupAsync(UpdateGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateIdentityProviderResponse> UpdateIdentityProviderAsync(UpdateIdentityProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateResourceServerResponse> UpdateResourceServerAsync(UpdateResourceServerRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateUserAttributesResponse> UpdateUserAttributesAsync(UpdateUserAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateUserPoolResponse> UpdateUserPoolAsync(UpdateUserPoolRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateUserPoolClientResponse> UpdateUserPoolClientAsync(UpdateUserPoolClientRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateUserPoolDomainResponse> UpdateUserPoolDomainAsync(UpdateUserPoolDomainRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<VerifySoftwareTokenResponse> VerifySoftwareTokenAsync(VerifySoftwareTokenRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<VerifyUserAttributeResponse> VerifyUserAttributeAsync(VerifyUserAttributeRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.CognitoIdentityProvider.IdentityProviderTypeType : ConstantClass {
    public static IdentityProviderTypeType Facebook;
    public static IdentityProviderTypeType Google;
    public static IdentityProviderTypeType LoginWithAmazon;
    public static IdentityProviderTypeType OIDC;
    public static IdentityProviderTypeType SAML;
    public static IdentityProviderTypeType SignInWithApple;
    public IdentityProviderTypeType(string value);
    private static IdentityProviderTypeType();
    public static IdentityProviderTypeType FindValue(string value);
    public static IdentityProviderTypeType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.Internal.AmazonCognitoIdentityProviderEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.CognitoIdentityProvider.Internal.AmazonCognitoIdentityProviderEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.CognitoIdentityProvider.Internal.AmazonCognitoIdentityProviderMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.CognitoIdentityProvider.LogLevel : ConstantClass {
    public static LogLevel ERROR;
    public LogLevel(string value);
    private static LogLevel();
    public static LogLevel FindValue(string value);
    public static LogLevel op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.MessageActionType : ConstantClass {
    public static MessageActionType RESEND;
    public static MessageActionType SUPPRESS;
    public MessageActionType(string value);
    private static MessageActionType();
    public static MessageActionType FindValue(string value);
    public static MessageActionType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.Model.AccountRecoverySettingType : object {
    private List`1<RecoveryOptionType> _recoveryMechanisms;
    [AWSPropertyAttribute]
public List`1<RecoveryOptionType> RecoveryMechanisms { get; public set; }
    public List`1<RecoveryOptionType> get_RecoveryMechanisms();
    public void set_RecoveryMechanisms(List`1<RecoveryOptionType> value);
    internal bool IsSetRecoveryMechanisms();
}
public class Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionsType : object {
    private AccountTakeoverActionType _highAction;
    private AccountTakeoverActionType _lowAction;
    private AccountTakeoverActionType _mediumAction;
    public AccountTakeoverActionType HighAction { get; public set; }
    public AccountTakeoverActionType LowAction { get; public set; }
    public AccountTakeoverActionType MediumAction { get; public set; }
    public AccountTakeoverActionType get_HighAction();
    public void set_HighAction(AccountTakeoverActionType value);
    internal bool IsSetHighAction();
    public AccountTakeoverActionType get_LowAction();
    public void set_LowAction(AccountTakeoverActionType value);
    internal bool IsSetLowAction();
    public AccountTakeoverActionType get_MediumAction();
    public void set_MediumAction(AccountTakeoverActionType value);
    internal bool IsSetMediumAction();
}
public class Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionType : object {
    private AccountTakeoverEventActionType _eventAction;
    private Nullable`1<bool> _notify;
    [AWSPropertyAttribute]
public AccountTakeoverEventActionType EventAction { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Notify { get; public set; }
    public AccountTakeoverEventActionType get_EventAction();
    public void set_EventAction(AccountTakeoverEventActionType value);
    internal bool IsSetEventAction();
    public Nullable`1<bool> get_Notify();
    public void set_Notify(Nullable`1<bool> value);
    internal bool IsSetNotify();
}
public class Amazon.CognitoIdentityProvider.Model.AccountTakeoverRiskConfigurationType : object {
    private AccountTakeoverActionsType _actions;
    private NotifyConfigurationType _notifyConfiguration;
    [AWSPropertyAttribute]
public AccountTakeoverActionsType Actions { get; public set; }
    public NotifyConfigurationType NotifyConfiguration { get; public set; }
    public AccountTakeoverActionsType get_Actions();
    public void set_Actions(AccountTakeoverActionsType value);
    internal bool IsSetActions();
    public NotifyConfigurationType get_NotifyConfiguration();
    public void set_NotifyConfiguration(NotifyConfigurationType value);
    internal bool IsSetNotifyConfiguration();
}
public class Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest : AmazonCognitoIdentityProviderRequest {
    private List`1<SchemaAttributeType> _customAttributes;
    private string _userPoolId;
    [AWSPropertyAttribute]
public List`1<SchemaAttributeType> CustomAttributes { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<SchemaAttributeType> get_CustomAttributes();
    public void set_CustomAttributes(List`1<SchemaAttributeType> value);
    internal bool IsSetCustomAttributes();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AddCustomAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest : AmazonCognitoIdentityProviderRequest {
    private string _groupName;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest : AmazonCognitoIdentityProviderRequest {
    private Dictionary`2<string, string> _clientMetadata;
    private string _username;
    private string _userPoolId;
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType : object {
    private Nullable`1<bool> _allowAdminCreateUserOnly;
    private MessageTemplateType _inviteMessageTemplate;
    private Nullable`1<int> _unusedAccountValidityDays;
    public Nullable`1<bool> AllowAdminCreateUserOnly { get; public set; }
    public MessageTemplateType InviteMessageTemplate { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> UnusedAccountValidityDays { get; public set; }
    public Nullable`1<bool> get_AllowAdminCreateUserOnly();
    public void set_AllowAdminCreateUserOnly(Nullable`1<bool> value);
    internal bool IsSetAllowAdminCreateUserOnly();
    public MessageTemplateType get_InviteMessageTemplate();
    public void set_InviteMessageTemplate(MessageTemplateType value);
    internal bool IsSetInviteMessageTemplate();
    public Nullable`1<int> get_UnusedAccountValidityDays();
    public void set_UnusedAccountValidityDays(Nullable`1<int> value);
    internal bool IsSetUnusedAccountValidityDays();
}
public class Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest : AmazonCognitoIdentityProviderRequest {
    private Dictionary`2<string, string> _clientMetadata;
    private List`1<string> _desiredDeliveryMediums;
    private Nullable`1<bool> _forceAliasCreation;
    private MessageActionType _messageAction;
    private string _temporaryPassword;
    private List`1<AttributeType> _userAttributes;
    private string _username;
    private string _userPoolId;
    private List`1<AttributeType> _validationData;
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    public List`1<string> DesiredDeliveryMediums { get; public set; }
    public Nullable`1<bool> ForceAliasCreation { get; public set; }
    public MessageActionType MessageAction { get; public set; }
    [AWSPropertyAttribute]
public string TemporaryPassword { get; public set; }
    public List`1<AttributeType> UserAttributes { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<AttributeType> ValidationData { get; public set; }
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public List`1<string> get_DesiredDeliveryMediums();
    public void set_DesiredDeliveryMediums(List`1<string> value);
    internal bool IsSetDesiredDeliveryMediums();
    public Nullable`1<bool> get_ForceAliasCreation();
    public void set_ForceAliasCreation(Nullable`1<bool> value);
    internal bool IsSetForceAliasCreation();
    public MessageActionType get_MessageAction();
    public void set_MessageAction(MessageActionType value);
    internal bool IsSetMessageAction();
    public string get_TemporaryPassword();
    public void set_TemporaryPassword(string value);
    internal bool IsSetTemporaryPassword();
    public List`1<AttributeType> get_UserAttributes();
    public void set_UserAttributes(List`1<AttributeType> value);
    internal bool IsSetUserAttributes();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
    public List`1<AttributeType> get_ValidationData();
    public void set_ValidationData(List`1<AttributeType> value);
    internal bool IsSetValidationData();
}
public class Amazon.CognitoIdentityProvider.Model.AdminCreateUserResponse : AmazonWebServiceResponse {
    private UserType _user;
    public UserType User { get; public set; }
    public UserType get_User();
    public void set_User(UserType value);
    internal bool IsSetUser();
}
public class Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest : AmazonCognitoIdentityProviderRequest {
    private List`1<string> _userAttributeNames;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public List`1<string> UserAttributeNames { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<string> get_UserAttributeNames();
    public void set_UserAttributeNames(List`1<string> value);
    internal bool IsSetUserAttributeNames();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest : AmazonCognitoIdentityProviderRequest {
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminDeleteUserResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserRequest : AmazonCognitoIdentityProviderRequest {
    private ProviderUserIdentifierType _user;
    private string _userPoolId;
    [AWSPropertyAttribute]
public ProviderUserIdentifierType User { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public ProviderUserIdentifierType get_User();
    public void set_User(ProviderUserIdentifierType value);
    internal bool IsSetUser();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest : AmazonCognitoIdentityProviderRequest {
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminDisableUserResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest : AmazonCognitoIdentityProviderRequest {
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminEnableUserResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest : AmazonCognitoIdentityProviderRequest {
    private string _deviceKey;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string DeviceKey { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_DeviceKey();
    public void set_DeviceKey(string value);
    internal bool IsSetDeviceKey();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest : AmazonCognitoIdentityProviderRequest {
    private string _deviceKey;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string DeviceKey { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_DeviceKey();
    public void set_DeviceKey(string value);
    internal bool IsSetDeviceKey();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminGetDeviceResponse : AmazonWebServiceResponse {
    private DeviceType _device;
    [AWSPropertyAttribute]
public DeviceType Device { get; public set; }
    public DeviceType get_Device();
    public void set_Device(DeviceType value);
    internal bool IsSetDevice();
}
public class Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest : AmazonCognitoIdentityProviderRequest {
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _enabled;
    private List`1<MFAOptionType> _mfaOptions;
    private string _preferredMfaSetting;
    private List`1<AttributeType> _userAttributes;
    private Nullable`1<DateTime> _userCreateDate;
    private Nullable`1<DateTime> _userLastModifiedDate;
    private List`1<string> _userMFASettingList;
    private string _username;
    private UserStatusType _userStatus;
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<MFAOptionType> MFAOptions { get; public set; }
    [AWSPropertyAttribute]
public string PreferredMfaSetting { get; public set; }
    public List`1<AttributeType> UserAttributes { get; public set; }
    public Nullable`1<DateTime> UserCreateDate { get; public set; }
    public Nullable`1<DateTime> UserLastModifiedDate { get; public set; }
    public List`1<string> UserMFASettingList { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public UserStatusType UserStatus { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<MFAOptionType> get_MFAOptions();
    public void set_MFAOptions(List`1<MFAOptionType> value);
    internal bool IsSetMFAOptions();
    public string get_PreferredMfaSetting();
    public void set_PreferredMfaSetting(string value);
    internal bool IsSetPreferredMfaSetting();
    public List`1<AttributeType> get_UserAttributes();
    public void set_UserAttributes(List`1<AttributeType> value);
    internal bool IsSetUserAttributes();
    public Nullable`1<DateTime> get_UserCreateDate();
    public void set_UserCreateDate(Nullable`1<DateTime> value);
    internal bool IsSetUserCreateDate();
    public Nullable`1<DateTime> get_UserLastModifiedDate();
    public void set_UserLastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetUserLastModifiedDate();
    public List`1<string> get_UserMFASettingList();
    public void set_UserMFASettingList(List`1<string> value);
    internal bool IsSetUserMFASettingList();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public UserStatusType get_UserStatus();
    public void set_UserStatus(UserStatusType value);
    internal bool IsSetUserStatus();
}
public class Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest : AmazonCognitoIdentityProviderRequest {
    private AnalyticsMetadataType _analyticsMetadata;
    private AuthFlowType _authFlow;
    private Dictionary`2<string, string> _authParameters;
    private string _clientId;
    private Dictionary`2<string, string> _clientMetadata;
    private ContextDataType _contextData;
    private string _userPoolId;
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [AWSPropertyAttribute]
public AuthFlowType AuthFlow { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> AuthParameters { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    public ContextDataType ContextData { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public AnalyticsMetadataType get_AnalyticsMetadata();
    public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    internal bool IsSetAnalyticsMetadata();
    public AuthFlowType get_AuthFlow();
    public void set_AuthFlow(AuthFlowType value);
    internal bool IsSetAuthFlow();
    public Dictionary`2<string, string> get_AuthParameters();
    public void set_AuthParameters(Dictionary`2<string, string> value);
    internal bool IsSetAuthParameters();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public ContextDataType get_ContextData();
    public void set_ContextData(ContextDataType value);
    internal bool IsSetContextData();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse : AmazonWebServiceResponse {
    private AuthenticationResultType _authenticationResult;
    private ChallengeNameType _challengeName;
    private Dictionary`2<string, string> _challengeParameters;
    private string _session;
    public AuthenticationResultType AuthenticationResult { get; public set; }
    public ChallengeNameType ChallengeName { get; public set; }
    public Dictionary`2<string, string> ChallengeParameters { get; public set; }
    [AWSPropertyAttribute]
public string Session { get; public set; }
    public AuthenticationResultType get_AuthenticationResult();
    public void set_AuthenticationResult(AuthenticationResultType value);
    internal bool IsSetAuthenticationResult();
    public ChallengeNameType get_ChallengeName();
    public void set_ChallengeName(ChallengeNameType value);
    internal bool IsSetChallengeName();
    public Dictionary`2<string, string> get_ChallengeParameters();
    public void set_ChallengeParameters(Dictionary`2<string, string> value);
    internal bool IsSetChallengeParameters();
    public string get_Session();
    public void set_Session(string value);
    internal bool IsSetSession();
}
public class Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserRequest : AmazonCognitoIdentityProviderRequest {
    private ProviderUserIdentifierType _destinationUser;
    private ProviderUserIdentifierType _sourceUser;
    private string _userPoolId;
    [AWSPropertyAttribute]
public ProviderUserIdentifierType DestinationUser { get; public set; }
    [AWSPropertyAttribute]
public ProviderUserIdentifierType SourceUser { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public ProviderUserIdentifierType get_DestinationUser();
    public void set_DestinationUser(ProviderUserIdentifierType value);
    internal bool IsSetDestinationUser();
    public ProviderUserIdentifierType get_SourceUser();
    public void set_SourceUser(ProviderUserIdentifierType value);
    internal bool IsSetSourceUser();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _limit;
    private string _paginationToken;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string PaginationToken { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_PaginationToken();
    public void set_PaginationToken(string value);
    internal bool IsSetPaginationToken();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminListDevicesResponse : AmazonWebServiceResponse {
    private List`1<DeviceType> _devices;
    private string _paginationToken;
    public List`1<DeviceType> Devices { get; public set; }
    [AWSPropertyAttribute]
public string PaginationToken { get; public set; }
    public List`1<DeviceType> get_Devices();
    public void set_Devices(List`1<DeviceType> value);
    internal bool IsSetDevices();
    public string get_PaginationToken();
    public void set_PaginationToken(string value);
    internal bool IsSetPaginationToken();
}
internal class Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserPaginator : object {
    private IAmazonCognitoIdentityProvider _client;
    private AdminListGroupsForUserRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<AdminListGroupsForUserResponse> Responses { get; }
    public IPaginatedEnumerable`1<GroupType> Groups { get; }
    internal AdminListGroupsForUserPaginator(IAmazonCognitoIdentityProvider client, AdminListGroupsForUserRequest request);
    public sealed virtual IPaginatedEnumerable`1<AdminListGroupsForUserResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<GroupType> get_Groups();
    [AsyncIteratorStateMachineAttribute("Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserPaginator/<Amazon-Runtime-IPaginator<Amazon-CognitoIdentityProvider-Model-AdminListGroupsForUserResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<AdminListGroupsForUserResponse> Amazon.Runtime.IPaginator<Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _limit;
    private string _nextToken;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserResponse : AmazonWebServiceResponse {
    private List`1<GroupType> _groups;
    private string _nextToken;
    public List`1<GroupType> Groups { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<GroupType> get_Groups();
    public void set_Groups(List`1<GroupType> value);
    internal bool IsSetGroups();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsPaginator : object {
    private IAmazonCognitoIdentityProvider _client;
    private AdminListUserAuthEventsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<AdminListUserAuthEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AuthEventType> AuthEvents { get; }
    internal AdminListUserAuthEventsPaginator(IAmazonCognitoIdentityProvider client, AdminListUserAuthEventsRequest request);
    public sealed virtual IPaginatedEnumerable`1<AdminListUserAuthEventsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<AuthEventType> get_AuthEvents();
    [AsyncIteratorStateMachineAttribute("Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsPaginator/<Amazon-Runtime-IPaginator<Amazon-CognitoIdentityProvider-Model-AdminListUserAuthEventsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<AdminListUserAuthEventsResponse> Amazon.Runtime.IPaginator<Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsResponse : AmazonWebServiceResponse {
    private List`1<AuthEventType> _authEvents;
    private string _nextToken;
    public List`1<AuthEventType> AuthEvents { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<AuthEventType> get_AuthEvents();
    public void set_AuthEvents(List`1<AuthEventType> value);
    internal bool IsSetAuthEvents();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest : AmazonCognitoIdentityProviderRequest {
    private string _groupName;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest : AmazonCognitoIdentityProviderRequest {
    private Dictionary`2<string, string> _clientMetadata;
    private string _username;
    private string _userPoolId;
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest : AmazonCognitoIdentityProviderRequest {
    private AnalyticsMetadataType _analyticsMetadata;
    private ChallengeNameType _challengeName;
    private Dictionary`2<string, string> _challengeResponses;
    private string _clientId;
    private Dictionary`2<string, string> _clientMetadata;
    private ContextDataType _contextData;
    private string _session;
    private string _userPoolId;
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [AWSPropertyAttribute]
public ChallengeNameType ChallengeName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> ChallengeResponses { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    public ContextDataType ContextData { get; public set; }
    [AWSPropertyAttribute]
public string Session { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public AnalyticsMetadataType get_AnalyticsMetadata();
    public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    internal bool IsSetAnalyticsMetadata();
    public ChallengeNameType get_ChallengeName();
    public void set_ChallengeName(ChallengeNameType value);
    internal bool IsSetChallengeName();
    public Dictionary`2<string, string> get_ChallengeResponses();
    public void set_ChallengeResponses(Dictionary`2<string, string> value);
    internal bool IsSetChallengeResponses();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public ContextDataType get_ContextData();
    public void set_ContextData(ContextDataType value);
    internal bool IsSetContextData();
    public string get_Session();
    public void set_Session(string value);
    internal bool IsSetSession();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse : AmazonWebServiceResponse {
    private AuthenticationResultType _authenticationResult;
    private ChallengeNameType _challengeName;
    private Dictionary`2<string, string> _challengeParameters;
    private string _session;
    public AuthenticationResultType AuthenticationResult { get; public set; }
    public ChallengeNameType ChallengeName { get; public set; }
    public Dictionary`2<string, string> ChallengeParameters { get; public set; }
    [AWSPropertyAttribute]
public string Session { get; public set; }
    public AuthenticationResultType get_AuthenticationResult();
    public void set_AuthenticationResult(AuthenticationResultType value);
    internal bool IsSetAuthenticationResult();
    public ChallengeNameType get_ChallengeName();
    public void set_ChallengeName(ChallengeNameType value);
    internal bool IsSetChallengeName();
    public Dictionary`2<string, string> get_ChallengeParameters();
    public void set_ChallengeParameters(Dictionary`2<string, string> value);
    internal bool IsSetChallengeParameters();
    public string get_Session();
    public void set_Session(string value);
    internal bool IsSetSession();
}
public class Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest : AmazonCognitoIdentityProviderRequest {
    private SMSMfaSettingsType _smsMfaSettings;
    private SoftwareTokenMfaSettingsType _softwareTokenMfaSettings;
    private string _username;
    private string _userPoolId;
    public SMSMfaSettingsType SMSMfaSettings { get; public set; }
    public SoftwareTokenMfaSettingsType SoftwareTokenMfaSettings { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public SMSMfaSettingsType get_SMSMfaSettings();
    public void set_SMSMfaSettings(SMSMfaSettingsType value);
    internal bool IsSetSMSMfaSettings();
    public SoftwareTokenMfaSettingsType get_SoftwareTokenMfaSettings();
    public void set_SoftwareTokenMfaSettings(SoftwareTokenMfaSettingsType value);
    internal bool IsSetSoftwareTokenMfaSettings();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest : AmazonCognitoIdentityProviderRequest {
    private string _password;
    private Nullable`1<bool> _permanent;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<bool> Permanent { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<bool> get_Permanent();
    public void set_Permanent(Nullable`1<bool> value);
    internal bool IsSetPermanent();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest : AmazonCognitoIdentityProviderRequest {
    private List`1<MFAOptionType> _mfaOptions;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public List`1<MFAOptionType> MFAOptions { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<MFAOptionType> get_MFAOptions();
    public void set_MFAOptions(List`1<MFAOptionType> value);
    internal bool IsSetMFAOptions();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest : AmazonCognitoIdentityProviderRequest {
    private string _eventId;
    private FeedbackValueType _feedbackValue;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string EventId { get; public set; }
    [AWSPropertyAttribute]
public FeedbackValueType FeedbackValue { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_EventId();
    public void set_EventId(string value);
    internal bool IsSetEventId();
    public FeedbackValueType get_FeedbackValue();
    public void set_FeedbackValue(FeedbackValueType value);
    internal bool IsSetFeedbackValue();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest : AmazonCognitoIdentityProviderRequest {
    private string _deviceKey;
    private DeviceRememberedStatusType _deviceRememberedStatus;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string DeviceKey { get; public set; }
    public DeviceRememberedStatusType DeviceRememberedStatus { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_DeviceKey();
    public void set_DeviceKey(string value);
    internal bool IsSetDeviceKey();
    public DeviceRememberedStatusType get_DeviceRememberedStatus();
    public void set_DeviceRememberedStatus(DeviceRememberedStatusType value);
    internal bool IsSetDeviceRememberedStatus();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest : AmazonCognitoIdentityProviderRequest {
    private Dictionary`2<string, string> _clientMetadata;
    private List`1<AttributeType> _userAttributes;
    private string _username;
    private string _userPoolId;
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public List`1<AttributeType> UserAttributes { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public List`1<AttributeType> get_UserAttributes();
    public void set_UserAttributes(List`1<AttributeType> value);
    internal bool IsSetUserAttributes();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest : AmazonCognitoIdentityProviderRequest {
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.AliasExistsException : AmazonCognitoIdentityProviderException {
    public AliasExistsException(string message);
    public AliasExistsException(string message, Exception innerException);
    public AliasExistsException(Exception innerException);
    public AliasExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AliasExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.AnalyticsConfigurationType : object {
    private string _applicationArn;
    private string _applicationId;
    private string _externalId;
    private string _roleArn;
    private Nullable`1<bool> _userDataShared;
    [AWSPropertyAttribute]
public string ApplicationArn { get; public set; }
    public string ApplicationId { get; public set; }
    [AWSPropertyAttribute]
public string ExternalId { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    public Nullable`1<bool> UserDataShared { get; public set; }
    public string get_ApplicationArn();
    public void set_ApplicationArn(string value);
    internal bool IsSetApplicationArn();
    public string get_ApplicationId();
    public void set_ApplicationId(string value);
    internal bool IsSetApplicationId();
    public string get_ExternalId();
    public void set_ExternalId(string value);
    internal bool IsSetExternalId();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public Nullable`1<bool> get_UserDataShared();
    public void set_UserDataShared(Nullable`1<bool> value);
    internal bool IsSetUserDataShared();
}
public class Amazon.CognitoIdentityProvider.Model.AnalyticsMetadataType : object {
    private string _analyticsEndpointId;
    [AWSPropertyAttribute]
public string AnalyticsEndpointId { get; public set; }
    public string get_AnalyticsEndpointId();
    public void set_AnalyticsEndpointId(string value);
    internal bool IsSetAnalyticsEndpointId();
}
public class Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private string _session;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string Session { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_Session();
    public void set_Session(string value);
    internal bool IsSetSession();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenResponse : AmazonWebServiceResponse {
    private string _secretCode;
    private string _session;
    [AWSPropertyAttribute]
public string SecretCode { get; public set; }
    [AWSPropertyAttribute]
public string Session { get; public set; }
    public string get_SecretCode();
    public void set_SecretCode(string value);
    internal bool IsSetSecretCode();
    public string get_Session();
    public void set_Session(string value);
    internal bool IsSetSession();
}
public class Amazon.CognitoIdentityProvider.Model.AttributeType : object {
    private string _name;
    private string _value;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.CognitoIdentityProvider.Model.AuthenticationResultType : object {
    private string _accessToken;
    private Nullable`1<int> _expiresIn;
    private string _idToken;
    private NewDeviceMetadataType _newDeviceMetadata;
    private string _refreshToken;
    private string _tokenType;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    public Nullable`1<int> ExpiresIn { get; public set; }
    [AWSPropertyAttribute]
public string IdToken { get; public set; }
    public NewDeviceMetadataType NewDeviceMetadata { get; public set; }
    [AWSPropertyAttribute]
public string RefreshToken { get; public set; }
    [AWSPropertyAttribute]
public string TokenType { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public Nullable`1<int> get_ExpiresIn();
    public void set_ExpiresIn(Nullable`1<int> value);
    internal bool IsSetExpiresIn();
    public string get_IdToken();
    public void set_IdToken(string value);
    internal bool IsSetIdToken();
    public NewDeviceMetadataType get_NewDeviceMetadata();
    public void set_NewDeviceMetadata(NewDeviceMetadataType value);
    internal bool IsSetNewDeviceMetadata();
    public string get_RefreshToken();
    public void set_RefreshToken(string value);
    internal bool IsSetRefreshToken();
    public string get_TokenType();
    public void set_TokenType(string value);
    internal bool IsSetTokenType();
}
public class Amazon.CognitoIdentityProvider.Model.AuthEventType : object {
    private List`1<ChallengeResponseType> _challengeResponses;
    private Nullable`1<DateTime> _creationDate;
    private EventContextDataType _eventContextData;
    private EventFeedbackType _eventFeedback;
    private string _eventId;
    private EventResponseType _eventResponse;
    private EventRiskType _eventRisk;
    private EventType _eventType;
    public List`1<ChallengeResponseType> ChallengeResponses { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    public EventContextDataType EventContextData { get; public set; }
    public EventFeedbackType EventFeedback { get; public set; }
    [AWSPropertyAttribute]
public string EventId { get; public set; }
    public EventResponseType EventResponse { get; public set; }
    public EventRiskType EventRisk { get; public set; }
    public EventType EventType { get; public set; }
    public List`1<ChallengeResponseType> get_ChallengeResponses();
    public void set_ChallengeResponses(List`1<ChallengeResponseType> value);
    internal bool IsSetChallengeResponses();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public EventContextDataType get_EventContextData();
    public void set_EventContextData(EventContextDataType value);
    internal bool IsSetEventContextData();
    public EventFeedbackType get_EventFeedback();
    public void set_EventFeedback(EventFeedbackType value);
    internal bool IsSetEventFeedback();
    public string get_EventId();
    public void set_EventId(string value);
    internal bool IsSetEventId();
    public EventResponseType get_EventResponse();
    public void set_EventResponse(EventResponseType value);
    internal bool IsSetEventResponse();
    public EventRiskType get_EventRisk();
    public void set_EventRisk(EventRiskType value);
    internal bool IsSetEventRisk();
    public EventType get_EventType();
    public void set_EventType(EventType value);
    internal bool IsSetEventType();
}
public class Amazon.CognitoIdentityProvider.Model.ChallengeResponseType : object {
    private ChallengeName _challengeName;
    private ChallengeResponse _challengeResponse;
    public ChallengeName ChallengeName { get; public set; }
    public ChallengeResponse ChallengeResponse { get; public set; }
    public ChallengeName get_ChallengeName();
    public void set_ChallengeName(ChallengeName value);
    internal bool IsSetChallengeName();
    public ChallengeResponse get_ChallengeResponse();
    public void set_ChallengeResponse(ChallengeResponse value);
    internal bool IsSetChallengeResponse();
}
public class Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private string _previousPassword;
    private string _proposedPassword;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string PreviousPassword { get; public set; }
    [AWSPropertyAttribute]
public string ProposedPassword { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_PreviousPassword();
    public void set_PreviousPassword(string value);
    internal bool IsSetPreviousPassword();
    public string get_ProposedPassword();
    public void set_ProposedPassword(string value);
    internal bool IsSetProposedPassword();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.ChangePasswordResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.CloudWatchLogsConfigurationType : object {
    private string _logGroupArn;
    [AWSPropertyAttribute]
public string LogGroupArn { get; public set; }
    public string get_LogGroupArn();
    public void set_LogGroupArn(string value);
    internal bool IsSetLogGroupArn();
}
public class Amazon.CognitoIdentityProvider.Model.CodeDeliveryDetailsType : object {
    private string _attributeName;
    private DeliveryMediumType _deliveryMedium;
    private string _destination;
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    public DeliveryMediumType DeliveryMedium { get; public set; }
    [AWSPropertyAttribute]
public string Destination { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public DeliveryMediumType get_DeliveryMedium();
    public void set_DeliveryMedium(DeliveryMediumType value);
    internal bool IsSetDeliveryMedium();
    public string get_Destination();
    public void set_Destination(string value);
    internal bool IsSetDestination();
}
public class Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException : AmazonCognitoIdentityProviderException {
    public CodeDeliveryFailureException(string message);
    public CodeDeliveryFailureException(string message, Exception innerException);
    public CodeDeliveryFailureException(Exception innerException);
    public CodeDeliveryFailureException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CodeDeliveryFailureException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.CodeMismatchException : AmazonCognitoIdentityProviderException {
    public CodeMismatchException(string message);
    public CodeMismatchException(string message, Exception innerException);
    public CodeMismatchException(Exception innerException);
    public CodeMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CodeMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory : object {
    private IAmazonCognitoIdentityProvider client;
    internal CognitoIdentityProviderPaginatorFactory(IAmazonCognitoIdentityProvider client);
    public sealed virtual IAdminListGroupsForUserPaginator AdminListGroupsForUser(AdminListGroupsForUserRequest request);
    public sealed virtual IAdminListUserAuthEventsPaginator AdminListUserAuthEvents(AdminListUserAuthEventsRequest request);
    public sealed virtual IListGroupsPaginator ListGroups(ListGroupsRequest request);
    public sealed virtual IListIdentityProvidersPaginator ListIdentityProviders(ListIdentityProvidersRequest request);
    public sealed virtual IListResourceServersPaginator ListResourceServers(ListResourceServersRequest request);
    public sealed virtual IListUserPoolClientsPaginator ListUserPoolClients(ListUserPoolClientsRequest request);
    public sealed virtual IListUserPoolsPaginator ListUserPools(ListUserPoolsRequest request);
    public sealed virtual IListUsersPaginator ListUsers(ListUsersRequest request);
    public sealed virtual IListUsersInGroupPaginator ListUsersInGroup(ListUsersInGroupRequest request);
}
public class Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsActionsType : object {
    private CompromisedCredentialsEventActionType _eventAction;
    [AWSPropertyAttribute]
public CompromisedCredentialsEventActionType EventAction { get; public set; }
    public CompromisedCredentialsEventActionType get_EventAction();
    public void set_EventAction(CompromisedCredentialsEventActionType value);
    internal bool IsSetEventAction();
}
public class Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsRiskConfigurationType : object {
    private CompromisedCredentialsActionsType _actions;
    private List`1<string> _eventFilter;
    [AWSPropertyAttribute]
public CompromisedCredentialsActionsType Actions { get; public set; }
    public List`1<string> EventFilter { get; public set; }
    public CompromisedCredentialsActionsType get_Actions();
    public void set_Actions(CompromisedCredentialsActionsType value);
    internal bool IsSetActions();
    public List`1<string> get_EventFilter();
    public void set_EventFilter(List`1<string> value);
    internal bool IsSetEventFilter();
}
public class Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException : AmazonCognitoIdentityProviderException {
    public ConcurrentModificationException(string message);
    public ConcurrentModificationException(string message, Exception innerException);
    public ConcurrentModificationException(Exception innerException);
    public ConcurrentModificationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConcurrentModificationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private string _deviceKey;
    private string _deviceName;
    private DeviceSecretVerifierConfigType _deviceSecretVerifierConfig;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string DeviceKey { get; public set; }
    [AWSPropertyAttribute]
public string DeviceName { get; public set; }
    public DeviceSecretVerifierConfigType DeviceSecretVerifierConfig { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_DeviceKey();
    public void set_DeviceKey(string value);
    internal bool IsSetDeviceKey();
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public DeviceSecretVerifierConfigType get_DeviceSecretVerifierConfig();
    public void set_DeviceSecretVerifierConfig(DeviceSecretVerifierConfigType value);
    internal bool IsSetDeviceSecretVerifierConfig();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.ConfirmDeviceResponse : AmazonWebServiceResponse {
    private Nullable`1<bool> _userConfirmationNecessary;
    public Nullable`1<bool> UserConfirmationNecessary { get; public set; }
    public Nullable`1<bool> get_UserConfirmationNecessary();
    public void set_UserConfirmationNecessary(Nullable`1<bool> value);
    internal bool IsSetUserConfirmationNecessary();
}
public class Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest : AmazonCognitoIdentityProviderRequest {
    private AnalyticsMetadataType _analyticsMetadata;
    private string _clientId;
    private Dictionary`2<string, string> _clientMetadata;
    private string _confirmationCode;
    private string _password;
    private string _secretHash;
    private UserContextDataType _userContextData;
    private string _username;
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public string ConfirmationCode { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    [AWSPropertyAttribute]
public string SecretHash { get; public set; }
    [AWSPropertyAttribute]
public UserContextDataType UserContextData { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public AnalyticsMetadataType get_AnalyticsMetadata();
    public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    internal bool IsSetAnalyticsMetadata();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public string get_ConfirmationCode();
    public void set_ConfirmationCode(string value);
    internal bool IsSetConfirmationCode();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public string get_SecretHash();
    public void set_SecretHash(string value);
    internal bool IsSetSecretHash();
    public UserContextDataType get_UserContextData();
    public void set_UserContextData(UserContextDataType value);
    internal bool IsSetUserContextData();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest : AmazonCognitoIdentityProviderRequest {
    private AnalyticsMetadataType _analyticsMetadata;
    private string _clientId;
    private Dictionary`2<string, string> _clientMetadata;
    private string _confirmationCode;
    private Nullable`1<bool> _forceAliasCreation;
    private string _secretHash;
    private UserContextDataType _userContextData;
    private string _username;
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public string ConfirmationCode { get; public set; }
    public Nullable`1<bool> ForceAliasCreation { get; public set; }
    [AWSPropertyAttribute]
public string SecretHash { get; public set; }
    [AWSPropertyAttribute]
public UserContextDataType UserContextData { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public AnalyticsMetadataType get_AnalyticsMetadata();
    public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    internal bool IsSetAnalyticsMetadata();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public string get_ConfirmationCode();
    public void set_ConfirmationCode(string value);
    internal bool IsSetConfirmationCode();
    public Nullable`1<bool> get_ForceAliasCreation();
    public void set_ForceAliasCreation(Nullable`1<bool> value);
    internal bool IsSetForceAliasCreation();
    public string get_SecretHash();
    public void set_SecretHash(string value);
    internal bool IsSetSecretHash();
    public UserContextDataType get_UserContextData();
    public void set_UserContextData(UserContextDataType value);
    internal bool IsSetUserContextData();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.ConfirmSignUpResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.ContextDataType : object {
    private string _encodedData;
    private List`1<HttpHeader> _httpHeaders;
    private string _ipAddress;
    private string _serverName;
    private string _serverPath;
    [AWSPropertyAttribute]
public string EncodedData { get; public set; }
    [AWSPropertyAttribute]
public List`1<HttpHeader> HttpHeaders { get; public set; }
    [AWSPropertyAttribute]
public string IpAddress { get; public set; }
    [AWSPropertyAttribute]
public string ServerName { get; public set; }
    [AWSPropertyAttribute]
public string ServerPath { get; public set; }
    public string get_EncodedData();
    public void set_EncodedData(string value);
    internal bool IsSetEncodedData();
    public List`1<HttpHeader> get_HttpHeaders();
    public void set_HttpHeaders(List`1<HttpHeader> value);
    internal bool IsSetHttpHeaders();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_ServerPath();
    public void set_ServerPath(string value);
    internal bool IsSetServerPath();
}
public class Amazon.CognitoIdentityProvider.Model.CreateGroupRequest : AmazonCognitoIdentityProviderRequest {
    private string _description;
    private string _groupName;
    private Nullable`1<int> _precedence;
    private string _roleArn;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Precedence { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public Nullable`1<int> get_Precedence();
    public void set_Precedence(Nullable`1<int> value);
    internal bool IsSetPrecedence();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.CreateGroupResponse : AmazonWebServiceResponse {
    private GroupType _group;
    public GroupType Group { get; public set; }
    public GroupType get_Group();
    public void set_Group(GroupType value);
    internal bool IsSetGroup();
}
public class Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest : AmazonCognitoIdentityProviderRequest {
    private Dictionary`2<string, string> _attributeMapping;
    private List`1<string> _idpIdentifiers;
    private Dictionary`2<string, string> _providerDetails;
    private string _providerName;
    private IdentityProviderTypeType _providerType;
    private string _userPoolId;
    public Dictionary`2<string, string> AttributeMapping { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> IdpIdentifiers { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> ProviderDetails { get; public set; }
    [AWSPropertyAttribute]
public string ProviderName { get; public set; }
    [AWSPropertyAttribute]
public IdentityProviderTypeType ProviderType { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Dictionary`2<string, string> get_AttributeMapping();
    public void set_AttributeMapping(Dictionary`2<string, string> value);
    internal bool IsSetAttributeMapping();
    public List`1<string> get_IdpIdentifiers();
    public void set_IdpIdentifiers(List`1<string> value);
    internal bool IsSetIdpIdentifiers();
    public Dictionary`2<string, string> get_ProviderDetails();
    public void set_ProviderDetails(Dictionary`2<string, string> value);
    internal bool IsSetProviderDetails();
    public string get_ProviderName();
    public void set_ProviderName(string value);
    internal bool IsSetProviderName();
    public IdentityProviderTypeType get_ProviderType();
    public void set_ProviderType(IdentityProviderTypeType value);
    internal bool IsSetProviderType();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderResponse : AmazonWebServiceResponse {
    private IdentityProviderType _identityProvider;
    [AWSPropertyAttribute]
public IdentityProviderType IdentityProvider { get; public set; }
    public IdentityProviderType get_IdentityProvider();
    public void set_IdentityProvider(IdentityProviderType value);
    internal bool IsSetIdentityProvider();
}
public class Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest : AmazonCognitoIdentityProviderRequest {
    private string _identifier;
    private string _name;
    private List`1<ResourceServerScopeType> _scopes;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Identifier { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<ResourceServerScopeType> Scopes { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Identifier();
    public void set_Identifier(string value);
    internal bool IsSetIdentifier();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<ResourceServerScopeType> get_Scopes();
    public void set_Scopes(List`1<ResourceServerScopeType> value);
    internal bool IsSetScopes();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.CreateResourceServerResponse : AmazonWebServiceResponse {
    private ResourceServerType _resourceServer;
    [AWSPropertyAttribute]
public ResourceServerType ResourceServer { get; public set; }
    public ResourceServerType get_ResourceServer();
    public void set_ResourceServer(ResourceServerType value);
    internal bool IsSetResourceServer();
}
public class Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest : AmazonCognitoIdentityProviderRequest {
    private string _cloudWatchLogsRoleArn;
    private string _jobName;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string CloudWatchLogsRoleArn { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_CloudWatchLogsRoleArn();
    public void set_CloudWatchLogsRoleArn(string value);
    internal bool IsSetCloudWatchLogsRoleArn();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.CreateUserImportJobResponse : AmazonWebServiceResponse {
    private UserImportJobType _userImportJob;
    public UserImportJobType UserImportJob { get; public set; }
    public UserImportJobType get_UserImportJob();
    public void set_UserImportJob(UserImportJobType value);
    internal bool IsSetUserImportJob();
}
public class Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _accessTokenValidity;
    private List`1<string> _allowedOAuthFlows;
    private Nullable`1<bool> _allowedOAuthFlowsUserPoolClient;
    private List`1<string> _allowedOAuthScopes;
    private AnalyticsConfigurationType _analyticsConfiguration;
    private Nullable`1<int> _authSessionValidity;
    private List`1<string> _callbackURLs;
    private string _clientName;
    private string _defaultRedirectURI;
    private Nullable`1<bool> _enablePropagateAdditionalUserContextData;
    private Nullable`1<bool> _enableTokenRevocation;
    private List`1<string> _explicitAuthFlows;
    private Nullable`1<bool> _generateSecret;
    private Nullable`1<int> _idTokenValidity;
    private List`1<string> _logoutURLs;
    private PreventUserExistenceErrorTypes _preventUserExistenceErrors;
    private List`1<string> _readAttributes;
    private Nullable`1<int> _refreshTokenValidity;
    private List`1<string> _supportedIdentityProviders;
    private TokenValidityUnitsType _tokenValidityUnits;
    private string _userPoolId;
    private List`1<string> _writeAttributes;
    [AWSPropertyAttribute]
public Nullable`1<int> AccessTokenValidity { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowedOAuthFlows { get; public set; }
    public Nullable`1<bool> AllowedOAuthFlowsUserPoolClient { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowedOAuthScopes { get; public set; }
    public AnalyticsConfigurationType AnalyticsConfiguration { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AuthSessionValidity { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CallbackURLs { get; public set; }
    [AWSPropertyAttribute]
public string ClientName { get; public set; }
    [AWSPropertyAttribute]
public string DefaultRedirectURI { get; public set; }
    public Nullable`1<bool> EnablePropagateAdditionalUserContextData { get; public set; }
    public Nullable`1<bool> EnableTokenRevocation { get; public set; }
    public List`1<string> ExplicitAuthFlows { get; public set; }
    public Nullable`1<bool> GenerateSecret { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> IdTokenValidity { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogoutURLs { get; public set; }
    public PreventUserExistenceErrorTypes PreventUserExistenceErrors { get; public set; }
    public List`1<string> ReadAttributes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RefreshTokenValidity { get; public set; }
    public List`1<string> SupportedIdentityProviders { get; public set; }
    public TokenValidityUnitsType TokenValidityUnits { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<string> WriteAttributes { get; public set; }
    public Nullable`1<int> get_AccessTokenValidity();
    public void set_AccessTokenValidity(Nullable`1<int> value);
    internal bool IsSetAccessTokenValidity();
    public List`1<string> get_AllowedOAuthFlows();
    public void set_AllowedOAuthFlows(List`1<string> value);
    internal bool IsSetAllowedOAuthFlows();
    public Nullable`1<bool> get_AllowedOAuthFlowsUserPoolClient();
    public void set_AllowedOAuthFlowsUserPoolClient(Nullable`1<bool> value);
    internal bool IsSetAllowedOAuthFlowsUserPoolClient();
    public List`1<string> get_AllowedOAuthScopes();
    public void set_AllowedOAuthScopes(List`1<string> value);
    internal bool IsSetAllowedOAuthScopes();
    public AnalyticsConfigurationType get_AnalyticsConfiguration();
    public void set_AnalyticsConfiguration(AnalyticsConfigurationType value);
    internal bool IsSetAnalyticsConfiguration();
    public Nullable`1<int> get_AuthSessionValidity();
    public void set_AuthSessionValidity(Nullable`1<int> value);
    internal bool IsSetAuthSessionValidity();
    public List`1<string> get_CallbackURLs();
    public void set_CallbackURLs(List`1<string> value);
    internal bool IsSetCallbackURLs();
    public string get_ClientName();
    public void set_ClientName(string value);
    internal bool IsSetClientName();
    public string get_DefaultRedirectURI();
    public void set_DefaultRedirectURI(string value);
    internal bool IsSetDefaultRedirectURI();
    public Nullable`1<bool> get_EnablePropagateAdditionalUserContextData();
    public void set_EnablePropagateAdditionalUserContextData(Nullable`1<bool> value);
    internal bool IsSetEnablePropagateAdditionalUserContextData();
    public Nullable`1<bool> get_EnableTokenRevocation();
    public void set_EnableTokenRevocation(Nullable`1<bool> value);
    internal bool IsSetEnableTokenRevocation();
    public List`1<string> get_ExplicitAuthFlows();
    public void set_ExplicitAuthFlows(List`1<string> value);
    internal bool IsSetExplicitAuthFlows();
    public Nullable`1<bool> get_GenerateSecret();
    public void set_GenerateSecret(Nullable`1<bool> value);
    internal bool IsSetGenerateSecret();
    public Nullable`1<int> get_IdTokenValidity();
    public void set_IdTokenValidity(Nullable`1<int> value);
    internal bool IsSetIdTokenValidity();
    public List`1<string> get_LogoutURLs();
    public void set_LogoutURLs(List`1<string> value);
    internal bool IsSetLogoutURLs();
    public PreventUserExistenceErrorTypes get_PreventUserExistenceErrors();
    public void set_PreventUserExistenceErrors(PreventUserExistenceErrorTypes value);
    internal bool IsSetPreventUserExistenceErrors();
    public List`1<string> get_ReadAttributes();
    public void set_ReadAttributes(List`1<string> value);
    internal bool IsSetReadAttributes();
    public Nullable`1<int> get_RefreshTokenValidity();
    public void set_RefreshTokenValidity(Nullable`1<int> value);
    internal bool IsSetRefreshTokenValidity();
    public List`1<string> get_SupportedIdentityProviders();
    public void set_SupportedIdentityProviders(List`1<string> value);
    internal bool IsSetSupportedIdentityProviders();
    public TokenValidityUnitsType get_TokenValidityUnits();
    public void set_TokenValidityUnits(TokenValidityUnitsType value);
    internal bool IsSetTokenValidityUnits();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
    public List`1<string> get_WriteAttributes();
    public void set_WriteAttributes(List`1<string> value);
    internal bool IsSetWriteAttributes();
}
public class Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientResponse : AmazonWebServiceResponse {
    private UserPoolClientType _userPoolClient;
    public UserPoolClientType UserPoolClient { get; public set; }
    public UserPoolClientType get_UserPoolClient();
    public void set_UserPoolClient(UserPoolClientType value);
    internal bool IsSetUserPoolClient();
}
public class Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainRequest : AmazonCognitoIdentityProviderRequest {
    private CustomDomainConfigType _customDomainConfig;
    private string _domain;
    private string _userPoolId;
    public CustomDomainConfigType CustomDomainConfig { get; public set; }
    [AWSPropertyAttribute]
public string Domain { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public CustomDomainConfigType get_CustomDomainConfig();
    public void set_CustomDomainConfig(CustomDomainConfigType value);
    internal bool IsSetCustomDomainConfig();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainResponse : AmazonWebServiceResponse {
    private string _cloudFrontDomain;
    [AWSPropertyAttribute]
public string CloudFrontDomain { get; public set; }
    public string get_CloudFrontDomain();
    public void set_CloudFrontDomain(string value);
    internal bool IsSetCloudFrontDomain();
}
public class Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest : AmazonCognitoIdentityProviderRequest {
    private AccountRecoverySettingType _accountRecoverySetting;
    private AdminCreateUserConfigType _adminCreateUserConfig;
    private List`1<string> _aliasAttributes;
    private List`1<string> _autoVerifiedAttributes;
    private DeletionProtectionType _deletionProtection;
    private DeviceConfigurationType _deviceConfiguration;
    private EmailConfigurationType _emailConfiguration;
    private string _emailVerificationMessage;
    private string _emailVerificationSubject;
    private LambdaConfigType _lambdaConfig;
    private UserPoolMfaType _mfaConfiguration;
    private UserPoolPolicyType _policies;
    private string _poolName;
    private List`1<SchemaAttributeType> _schema;
    private string _smsAuthenticationMessage;
    private SmsConfigurationType _smsConfiguration;
    private string _smsVerificationMessage;
    private UserAttributeUpdateSettingsType _userAttributeUpdateSettings;
    private List`1<string> _usernameAttributes;
    private UsernameConfigurationType _usernameConfiguration;
    private UserPoolAddOnsType _userPoolAddOns;
    private Dictionary`2<string, string> _userPoolTags;
    private VerificationMessageTemplateType _verificationMessageTemplate;
    public AccountRecoverySettingType AccountRecoverySetting { get; public set; }
    public AdminCreateUserConfigType AdminCreateUserConfig { get; public set; }
    public List`1<string> AliasAttributes { get; public set; }
    public List`1<string> AutoVerifiedAttributes { get; public set; }
    public DeletionProtectionType DeletionProtection { get; public set; }
    public DeviceConfigurationType DeviceConfiguration { get; public set; }
    public EmailConfigurationType EmailConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string EmailVerificationMessage { get; public set; }
    [AWSPropertyAttribute]
public string EmailVerificationSubject { get; public set; }
    public LambdaConfigType LambdaConfig { get; public set; }
    public UserPoolMfaType MfaConfiguration { get; public set; }
    public UserPoolPolicyType Policies { get; public set; }
    [AWSPropertyAttribute]
public string PoolName { get; public set; }
    [AWSPropertyAttribute]
public List`1<SchemaAttributeType> Schema { get; public set; }
    [AWSPropertyAttribute]
public string SmsAuthenticationMessage { get; public set; }
    public SmsConfigurationType SmsConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string SmsVerificationMessage { get; public set; }
    public UserAttributeUpdateSettingsType UserAttributeUpdateSettings { get; public set; }
    public List`1<string> UsernameAttributes { get; public set; }
    public UsernameConfigurationType UsernameConfiguration { get; public set; }
    public UserPoolAddOnsType UserPoolAddOns { get; public set; }
    public Dictionary`2<string, string> UserPoolTags { get; public set; }
    public VerificationMessageTemplateType VerificationMessageTemplate { get; public set; }
    public AccountRecoverySettingType get_AccountRecoverySetting();
    public void set_AccountRecoverySetting(AccountRecoverySettingType value);
    internal bool IsSetAccountRecoverySetting();
    public AdminCreateUserConfigType get_AdminCreateUserConfig();
    public void set_AdminCreateUserConfig(AdminCreateUserConfigType value);
    internal bool IsSetAdminCreateUserConfig();
    public List`1<string> get_AliasAttributes();
    public void set_AliasAttributes(List`1<string> value);
    internal bool IsSetAliasAttributes();
    public List`1<string> get_AutoVerifiedAttributes();
    public void set_AutoVerifiedAttributes(List`1<string> value);
    internal bool IsSetAutoVerifiedAttributes();
    public DeletionProtectionType get_DeletionProtection();
    public void set_DeletionProtection(DeletionProtectionType value);
    internal bool IsSetDeletionProtection();
    public DeviceConfigurationType get_DeviceConfiguration();
    public void set_DeviceConfiguration(DeviceConfigurationType value);
    internal bool IsSetDeviceConfiguration();
    public EmailConfigurationType get_EmailConfiguration();
    public void set_EmailConfiguration(EmailConfigurationType value);
    internal bool IsSetEmailConfiguration();
    public string get_EmailVerificationMessage();
    public void set_EmailVerificationMessage(string value);
    internal bool IsSetEmailVerificationMessage();
    public string get_EmailVerificationSubject();
    public void set_EmailVerificationSubject(string value);
    internal bool IsSetEmailVerificationSubject();
    public LambdaConfigType get_LambdaConfig();
    public void set_LambdaConfig(LambdaConfigType value);
    internal bool IsSetLambdaConfig();
    public UserPoolMfaType get_MfaConfiguration();
    public void set_MfaConfiguration(UserPoolMfaType value);
    internal bool IsSetMfaConfiguration();
    public UserPoolPolicyType get_Policies();
    public void set_Policies(UserPoolPolicyType value);
    internal bool IsSetPolicies();
    public string get_PoolName();
    public void set_PoolName(string value);
    internal bool IsSetPoolName();
    public List`1<SchemaAttributeType> get_Schema();
    public void set_Schema(List`1<SchemaAttributeType> value);
    internal bool IsSetSchema();
    public string get_SmsAuthenticationMessage();
    public void set_SmsAuthenticationMessage(string value);
    internal bool IsSetSmsAuthenticationMessage();
    public SmsConfigurationType get_SmsConfiguration();
    public void set_SmsConfiguration(SmsConfigurationType value);
    internal bool IsSetSmsConfiguration();
    public string get_SmsVerificationMessage();
    public void set_SmsVerificationMessage(string value);
    internal bool IsSetSmsVerificationMessage();
    public UserAttributeUpdateSettingsType get_UserAttributeUpdateSettings();
    public void set_UserAttributeUpdateSettings(UserAttributeUpdateSettingsType value);
    internal bool IsSetUserAttributeUpdateSettings();
    public List`1<string> get_UsernameAttributes();
    public void set_UsernameAttributes(List`1<string> value);
    internal bool IsSetUsernameAttributes();
    public UsernameConfigurationType get_UsernameConfiguration();
    public void set_UsernameConfiguration(UsernameConfigurationType value);
    internal bool IsSetUsernameConfiguration();
    public UserPoolAddOnsType get_UserPoolAddOns();
    public void set_UserPoolAddOns(UserPoolAddOnsType value);
    internal bool IsSetUserPoolAddOns();
    public Dictionary`2<string, string> get_UserPoolTags();
    public void set_UserPoolTags(Dictionary`2<string, string> value);
    internal bool IsSetUserPoolTags();
    public VerificationMessageTemplateType get_VerificationMessageTemplate();
    public void set_VerificationMessageTemplate(VerificationMessageTemplateType value);
    internal bool IsSetVerificationMessageTemplate();
}
public class Amazon.CognitoIdentityProvider.Model.CreateUserPoolResponse : AmazonWebServiceResponse {
    private UserPoolType _userPool;
    public UserPoolType UserPool { get; public set; }
    public UserPoolType get_UserPool();
    public void set_UserPool(UserPoolType value);
    internal bool IsSetUserPool();
}
public class Amazon.CognitoIdentityProvider.Model.CustomDomainConfigType : object {
    private string _certificateArn;
    [AWSPropertyAttribute]
public string CertificateArn { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
}
public class Amazon.CognitoIdentityProvider.Model.CustomEmailLambdaVersionConfigType : object {
    private string _lambdaArn;
    private CustomEmailSenderLambdaVersionType _lambdaVersion;
    [AWSPropertyAttribute]
public string LambdaArn { get; public set; }
    [AWSPropertyAttribute]
public CustomEmailSenderLambdaVersionType LambdaVersion { get; public set; }
    public string get_LambdaArn();
    public void set_LambdaArn(string value);
    internal bool IsSetLambdaArn();
    public CustomEmailSenderLambdaVersionType get_LambdaVersion();
    public void set_LambdaVersion(CustomEmailSenderLambdaVersionType value);
    internal bool IsSetLambdaVersion();
}
public class Amazon.CognitoIdentityProvider.Model.CustomSMSLambdaVersionConfigType : object {
    private string _lambdaArn;
    private CustomSMSSenderLambdaVersionType _lambdaVersion;
    [AWSPropertyAttribute]
public string LambdaArn { get; public set; }
    [AWSPropertyAttribute]
public CustomSMSSenderLambdaVersionType LambdaVersion { get; public set; }
    public string get_LambdaArn();
    public void set_LambdaArn(string value);
    internal bool IsSetLambdaArn();
    public CustomSMSSenderLambdaVersionType get_LambdaVersion();
    public void set_LambdaVersion(CustomSMSSenderLambdaVersionType value);
    internal bool IsSetLambdaVersion();
}
public class Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest : AmazonCognitoIdentityProviderRequest {
    private string _groupName;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DeleteGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderRequest : AmazonCognitoIdentityProviderRequest {
    private string _providerName;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string ProviderName { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_ProviderName();
    public void set_ProviderName(string value);
    internal bool IsSetProviderName();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.DeleteResourceServerRequest : AmazonCognitoIdentityProviderRequest {
    private string _identifier;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Identifier { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Identifier();
    public void set_Identifier(string value);
    internal bool IsSetIdentifier();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DeleteResourceServerResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private List`1<string> _userAttributeNames;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> UserAttributeNames { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public List`1<string> get_UserAttributeNames();
    public void set_UserAttributeNames(List`1<string> value);
    internal bool IsSetUserAttributeNames();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest : AmazonCognitoIdentityProviderRequest {
    private string _clientId;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainRequest : AmazonCognitoIdentityProviderRequest {
    private string _domain;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Domain { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest : AmazonCognitoIdentityProviderRequest {
    private string _userPoolId;
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DeleteUserPoolResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.DeleteUserRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.DeleteUserResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderRequest : AmazonCognitoIdentityProviderRequest {
    private string _providerName;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string ProviderName { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_ProviderName();
    public void set_ProviderName(string value);
    internal bool IsSetProviderName();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderResponse : AmazonWebServiceResponse {
    private IdentityProviderType _identityProvider;
    [AWSPropertyAttribute]
public IdentityProviderType IdentityProvider { get; public set; }
    public IdentityProviderType get_IdentityProvider();
    public void set_IdentityProvider(IdentityProviderType value);
    internal bool IsSetIdentityProvider();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeResourceServerRequest : AmazonCognitoIdentityProviderRequest {
    private string _identifier;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Identifier { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Identifier();
    public void set_Identifier(string value);
    internal bool IsSetIdentifier();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeResourceServerResponse : AmazonWebServiceResponse {
    private ResourceServerType _resourceServer;
    [AWSPropertyAttribute]
public ResourceServerType ResourceServer { get; public set; }
    public ResourceServerType get_ResourceServer();
    public void set_ResourceServer(ResourceServerType value);
    internal bool IsSetResourceServer();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationRequest : AmazonCognitoIdentityProviderRequest {
    private string _clientId;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationResponse : AmazonWebServiceResponse {
    private RiskConfigurationType _riskConfiguration;
    [AWSPropertyAttribute]
public RiskConfigurationType RiskConfiguration { get; public set; }
    public RiskConfigurationType get_RiskConfiguration();
    public void set_RiskConfiguration(RiskConfigurationType value);
    internal bool IsSetRiskConfiguration();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest : AmazonCognitoIdentityProviderRequest {
    private string _jobId;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobResponse : AmazonWebServiceResponse {
    private UserImportJobType _userImportJob;
    public UserImportJobType UserImportJob { get; public set; }
    public UserImportJobType get_UserImportJob();
    public void set_UserImportJob(UserImportJobType value);
    internal bool IsSetUserImportJob();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest : AmazonCognitoIdentityProviderRequest {
    private string _clientId;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientResponse : AmazonWebServiceResponse {
    private UserPoolClientType _userPoolClient;
    public UserPoolClientType UserPoolClient { get; public set; }
    public UserPoolClientType get_UserPoolClient();
    public void set_UserPoolClient(UserPoolClientType value);
    internal bool IsSetUserPoolClient();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainRequest : AmazonCognitoIdentityProviderRequest {
    private string _domain;
    [AWSPropertyAttribute]
public string Domain { get; public set; }
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainResponse : AmazonWebServiceResponse {
    private DomainDescriptionType _domainDescription;
    public DomainDescriptionType DomainDescription { get; public set; }
    public DomainDescriptionType get_DomainDescription();
    public void set_DomainDescription(DomainDescriptionType value);
    internal bool IsSetDomainDescription();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest : AmazonCognitoIdentityProviderRequest {
    private string _userPoolId;
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.DescribeUserPoolResponse : AmazonWebServiceResponse {
    private UserPoolType _userPool;
    public UserPoolType UserPool { get; public set; }
    public UserPoolType get_UserPool();
    public void set_UserPool(UserPoolType value);
    internal bool IsSetUserPool();
}
public class Amazon.CognitoIdentityProvider.Model.DeviceConfigurationType : object {
    private Nullable`1<bool> _challengeRequiredOnNewDevice;
    private Nullable`1<bool> _deviceOnlyRememberedOnUserPrompt;
    public Nullable`1<bool> ChallengeRequiredOnNewDevice { get; public set; }
    public Nullable`1<bool> DeviceOnlyRememberedOnUserPrompt { get; public set; }
    public Nullable`1<bool> get_ChallengeRequiredOnNewDevice();
    public void set_ChallengeRequiredOnNewDevice(Nullable`1<bool> value);
    internal bool IsSetChallengeRequiredOnNewDevice();
    public Nullable`1<bool> get_DeviceOnlyRememberedOnUserPrompt();
    public void set_DeviceOnlyRememberedOnUserPrompt(Nullable`1<bool> value);
    internal bool IsSetDeviceOnlyRememberedOnUserPrompt();
}
public class Amazon.CognitoIdentityProvider.Model.DeviceSecretVerifierConfigType : object {
    private string _passwordVerifier;
    private string _salt;
    [AWSPropertyAttribute]
public string PasswordVerifier { get; public set; }
    [AWSPropertyAttribute]
public string Salt { get; public set; }
    public string get_PasswordVerifier();
    public void set_PasswordVerifier(string value);
    internal bool IsSetPasswordVerifier();
    public string get_Salt();
    public void set_Salt(string value);
    internal bool IsSetSalt();
}
public class Amazon.CognitoIdentityProvider.Model.DeviceType : object {
    private List`1<AttributeType> _deviceAttributes;
    private Nullable`1<DateTime> _deviceCreateDate;
    private string _deviceKey;
    private Nullable`1<DateTime> _deviceLastAuthenticatedDate;
    private Nullable`1<DateTime> _deviceLastModifiedDate;
    public List`1<AttributeType> DeviceAttributes { get; public set; }
    public Nullable`1<DateTime> DeviceCreateDate { get; public set; }
    [AWSPropertyAttribute]
public string DeviceKey { get; public set; }
    public Nullable`1<DateTime> DeviceLastAuthenticatedDate { get; public set; }
    public Nullable`1<DateTime> DeviceLastModifiedDate { get; public set; }
    public List`1<AttributeType> get_DeviceAttributes();
    public void set_DeviceAttributes(List`1<AttributeType> value);
    internal bool IsSetDeviceAttributes();
    public Nullable`1<DateTime> get_DeviceCreateDate();
    public void set_DeviceCreateDate(Nullable`1<DateTime> value);
    internal bool IsSetDeviceCreateDate();
    public string get_DeviceKey();
    public void set_DeviceKey(string value);
    internal bool IsSetDeviceKey();
    public Nullable`1<DateTime> get_DeviceLastAuthenticatedDate();
    public void set_DeviceLastAuthenticatedDate(Nullable`1<DateTime> value);
    internal bool IsSetDeviceLastAuthenticatedDate();
    public Nullable`1<DateTime> get_DeviceLastModifiedDate();
    public void set_DeviceLastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetDeviceLastModifiedDate();
}
public class Amazon.CognitoIdentityProvider.Model.DomainDescriptionType : object {
    private string _awsAccountId;
    private string _cloudFrontDistribution;
    private CustomDomainConfigType _customDomainConfig;
    private string _domain;
    private string _s3Bucket;
    private DomainStatusType _status;
    private string _userPoolId;
    private string _version;
    [AWSPropertyAttribute]
public string AWSAccountId { get; public set; }
    [AWSPropertyAttribute]
public string CloudFrontDistribution { get; public set; }
    public CustomDomainConfigType CustomDomainConfig { get; public set; }
    [AWSPropertyAttribute]
public string Domain { get; public set; }
    [AWSPropertyAttribute]
public string S3Bucket { get; public set; }
    public DomainStatusType Status { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    [AWSPropertyAttribute]
public string Version { get; public set; }
    public string get_AWSAccountId();
    public void set_AWSAccountId(string value);
    internal bool IsSetAWSAccountId();
    public string get_CloudFrontDistribution();
    public void set_CloudFrontDistribution(string value);
    internal bool IsSetCloudFrontDistribution();
    public CustomDomainConfigType get_CustomDomainConfig();
    public void set_CustomDomainConfig(CustomDomainConfigType value);
    internal bool IsSetCustomDomainConfig();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public DomainStatusType get_Status();
    public void set_Status(DomainStatusType value);
    internal bool IsSetStatus();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.CognitoIdentityProvider.Model.DuplicateProviderException : AmazonCognitoIdentityProviderException {
    public DuplicateProviderException(string message);
    public DuplicateProviderException(string message, Exception innerException);
    public DuplicateProviderException(Exception innerException);
    public DuplicateProviderException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateProviderException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.EmailConfigurationType : object {
    private string _configurationSet;
    private EmailSendingAccountType _emailSendingAccount;
    private string _from;
    private string _replyToEmailAddress;
    private string _sourceArn;
    [AWSPropertyAttribute]
public string ConfigurationSet { get; public set; }
    public EmailSendingAccountType EmailSendingAccount { get; public set; }
    [AWSPropertyAttribute]
public string From { get; public set; }
    public string ReplyToEmailAddress { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    public string get_ConfigurationSet();
    public void set_ConfigurationSet(string value);
    internal bool IsSetConfigurationSet();
    public EmailSendingAccountType get_EmailSendingAccount();
    public void set_EmailSendingAccount(EmailSendingAccountType value);
    internal bool IsSetEmailSendingAccount();
    public string get_From();
    public void set_From(string value);
    internal bool IsSetFrom();
    public string get_ReplyToEmailAddress();
    public void set_ReplyToEmailAddress(string value);
    internal bool IsSetReplyToEmailAddress();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
}
public class Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException : AmazonCognitoIdentityProviderException {
    public EnableSoftwareTokenMFAException(string message);
    public EnableSoftwareTokenMFAException(string message, Exception innerException);
    public EnableSoftwareTokenMFAException(Exception innerException);
    public EnableSoftwareTokenMFAException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public EnableSoftwareTokenMFAException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.EventContextDataType : object {
    private string _city;
    private string _country;
    private string _deviceName;
    private string _ipAddress;
    private string _timezone;
    [AWSPropertyAttribute]
public string City { get; public set; }
    [AWSPropertyAttribute]
public string Country { get; public set; }
    [AWSPropertyAttribute]
public string DeviceName { get; public set; }
    [AWSPropertyAttribute]
public string IpAddress { get; public set; }
    [AWSPropertyAttribute]
public string Timezone { get; public set; }
    public string get_City();
    public void set_City(string value);
    internal bool IsSetCity();
    public string get_Country();
    public void set_Country(string value);
    internal bool IsSetCountry();
    public string get_DeviceName();
    public void set_DeviceName(string value);
    internal bool IsSetDeviceName();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public string get_Timezone();
    public void set_Timezone(string value);
    internal bool IsSetTimezone();
}
public class Amazon.CognitoIdentityProvider.Model.EventFeedbackType : object {
    private Nullable`1<DateTime> _feedbackDate;
    private FeedbackValueType _feedbackValue;
    private string _provider;
    public Nullable`1<DateTime> FeedbackDate { get; public set; }
    [AWSPropertyAttribute]
public FeedbackValueType FeedbackValue { get; public set; }
    [AWSPropertyAttribute]
public string Provider { get; public set; }
    public Nullable`1<DateTime> get_FeedbackDate();
    public void set_FeedbackDate(Nullable`1<DateTime> value);
    internal bool IsSetFeedbackDate();
    public FeedbackValueType get_FeedbackValue();
    public void set_FeedbackValue(FeedbackValueType value);
    internal bool IsSetFeedbackValue();
    public string get_Provider();
    public void set_Provider(string value);
    internal bool IsSetProvider();
}
public class Amazon.CognitoIdentityProvider.Model.EventRiskType : object {
    private Nullable`1<bool> _compromisedCredentialsDetected;
    private RiskDecisionType _riskDecision;
    private RiskLevelType _riskLevel;
    public Nullable`1<bool> CompromisedCredentialsDetected { get; public set; }
    public RiskDecisionType RiskDecision { get; public set; }
    public RiskLevelType RiskLevel { get; public set; }
    public Nullable`1<bool> get_CompromisedCredentialsDetected();
    public void set_CompromisedCredentialsDetected(Nullable`1<bool> value);
    internal bool IsSetCompromisedCredentialsDetected();
    public RiskDecisionType get_RiskDecision();
    public void set_RiskDecision(RiskDecisionType value);
    internal bool IsSetRiskDecision();
    public RiskLevelType get_RiskLevel();
    public void set_RiskLevel(RiskLevelType value);
    internal bool IsSetRiskLevel();
}
public class Amazon.CognitoIdentityProvider.Model.ExpiredCodeException : AmazonCognitoIdentityProviderException {
    public ExpiredCodeException(string message);
    public ExpiredCodeException(string message, Exception innerException);
    public ExpiredCodeException(Exception innerException);
    public ExpiredCodeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ExpiredCodeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.ForbiddenException : AmazonCognitoIdentityProviderException {
    public ForbiddenException(string message);
    public ForbiddenException(string message, Exception innerException);
    public ForbiddenException(Exception innerException);
    public ForbiddenException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ForbiddenException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private string _deviceKey;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string DeviceKey { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_DeviceKey();
    public void set_DeviceKey(string value);
    internal bool IsSetDeviceKey();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.ForgetDeviceResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest : AmazonCognitoIdentityProviderRequest {
    private AnalyticsMetadataType _analyticsMetadata;
    private string _clientId;
    private Dictionary`2<string, string> _clientMetadata;
    private string _secretHash;
    private UserContextDataType _userContextData;
    private string _username;
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public string SecretHash { get; public set; }
    [AWSPropertyAttribute]
public UserContextDataType UserContextData { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public AnalyticsMetadataType get_AnalyticsMetadata();
    public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    internal bool IsSetAnalyticsMetadata();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public string get_SecretHash();
    public void set_SecretHash(string value);
    internal bool IsSetSecretHash();
    public UserContextDataType get_UserContextData();
    public void set_UserContextData(UserContextDataType value);
    internal bool IsSetUserContextData();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.ForgotPasswordResponse : AmazonWebServiceResponse {
    private CodeDeliveryDetailsType _codeDeliveryDetails;
    public CodeDeliveryDetailsType CodeDeliveryDetails { get; public set; }
    public CodeDeliveryDetailsType get_CodeDeliveryDetails();
    public void set_CodeDeliveryDetails(CodeDeliveryDetailsType value);
    internal bool IsSetCodeDeliveryDetails();
}
public class Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest : AmazonCognitoIdentityProviderRequest {
    private string _userPoolId;
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.GetCSVHeaderResponse : AmazonWebServiceResponse {
    private List`1<string> _csvHeader;
    private string _userPoolId;
    public List`1<string> CSVHeader { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<string> get_CSVHeader();
    public void set_CSVHeader(List`1<string> value);
    internal bool IsSetCSVHeader();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.GetDeviceRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private string _deviceKey;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string DeviceKey { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_DeviceKey();
    public void set_DeviceKey(string value);
    internal bool IsSetDeviceKey();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.GetDeviceResponse : AmazonWebServiceResponse {
    private DeviceType _device;
    [AWSPropertyAttribute]
public DeviceType Device { get; public set; }
    public DeviceType get_Device();
    public void set_Device(DeviceType value);
    internal bool IsSetDevice();
}
public class Amazon.CognitoIdentityProvider.Model.GetGroupRequest : AmazonCognitoIdentityProviderRequest {
    private string _groupName;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.GetGroupResponse : AmazonWebServiceResponse {
    private GroupType _group;
    public GroupType Group { get; public set; }
    public GroupType get_Group();
    public void set_Group(GroupType value);
    internal bool IsSetGroup();
}
public class Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierRequest : AmazonCognitoIdentityProviderRequest {
    private string _idpIdentifier;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string IdpIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_IdpIdentifier();
    public void set_IdpIdentifier(string value);
    internal bool IsSetIdpIdentifier();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierResponse : AmazonWebServiceResponse {
    private IdentityProviderType _identityProvider;
    [AWSPropertyAttribute]
public IdentityProviderType IdentityProvider { get; public set; }
    public IdentityProviderType get_IdentityProvider();
    public void set_IdentityProvider(IdentityProviderType value);
    internal bool IsSetIdentityProvider();
}
public class Amazon.CognitoIdentityProvider.Model.GetLogDeliveryConfigurationRequest : AmazonCognitoIdentityProviderRequest {
    private string _userPoolId;
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.GetLogDeliveryConfigurationResponse : AmazonWebServiceResponse {
    private LogDeliveryConfigurationType _logDeliveryConfiguration;
    public LogDeliveryConfigurationType LogDeliveryConfiguration { get; public set; }
    public LogDeliveryConfigurationType get_LogDeliveryConfiguration();
    public void set_LogDeliveryConfiguration(LogDeliveryConfigurationType value);
    internal bool IsSetLogDeliveryConfiguration();
}
public class Amazon.CognitoIdentityProvider.Model.GetSigningCertificateRequest : AmazonCognitoIdentityProviderRequest {
    private string _userPoolId;
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.GetSigningCertificateResponse : AmazonWebServiceResponse {
    private string _certificate;
    [AWSPropertyAttribute]
public string Certificate { get; public set; }
    public string get_Certificate();
    public void set_Certificate(string value);
    internal bool IsSetCertificate();
}
public class Amazon.CognitoIdentityProvider.Model.GetUICustomizationRequest : AmazonCognitoIdentityProviderRequest {
    private string _clientId;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.GetUICustomizationResponse : AmazonWebServiceResponse {
    private UICustomizationType _uiCustomization;
    [AWSPropertyAttribute]
public UICustomizationType UICustomization { get; public set; }
    public UICustomizationType get_UICustomization();
    public void set_UICustomization(UICustomizationType value);
    internal bool IsSetUICustomization();
}
public class Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private string _attributeName;
    private Dictionary`2<string, string> _clientMetadata;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeResponse : AmazonWebServiceResponse {
    private CodeDeliveryDetailsType _codeDeliveryDetails;
    public CodeDeliveryDetailsType CodeDeliveryDetails { get; public set; }
    public CodeDeliveryDetailsType get_CodeDeliveryDetails();
    public void set_CodeDeliveryDetails(CodeDeliveryDetailsType value);
    internal bool IsSetCodeDeliveryDetails();
}
public class Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigRequest : AmazonCognitoIdentityProviderRequest {
    private string _userPoolId;
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigResponse : AmazonWebServiceResponse {
    private UserPoolMfaType _mfaConfiguration;
    private SmsMfaConfigType _smsMfaConfiguration;
    private SoftwareTokenMfaConfigType _softwareTokenMfaConfiguration;
    public UserPoolMfaType MfaConfiguration { get; public set; }
    public SmsMfaConfigType SmsMfaConfiguration { get; public set; }
    public SoftwareTokenMfaConfigType SoftwareTokenMfaConfiguration { get; public set; }
    public UserPoolMfaType get_MfaConfiguration();
    public void set_MfaConfiguration(UserPoolMfaType value);
    internal bool IsSetMfaConfiguration();
    public SmsMfaConfigType get_SmsMfaConfiguration();
    public void set_SmsMfaConfiguration(SmsMfaConfigType value);
    internal bool IsSetSmsMfaConfiguration();
    public SoftwareTokenMfaConfigType get_SoftwareTokenMfaConfiguration();
    public void set_SoftwareTokenMfaConfiguration(SoftwareTokenMfaConfigType value);
    internal bool IsSetSoftwareTokenMfaConfiguration();
}
public class Amazon.CognitoIdentityProvider.Model.GetUserRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.GetUserResponse : AmazonWebServiceResponse {
    private List`1<MFAOptionType> _mfaOptions;
    private string _preferredMfaSetting;
    private List`1<AttributeType> _userAttributes;
    private List`1<string> _userMFASettingList;
    private string _username;
    public List`1<MFAOptionType> MFAOptions { get; public set; }
    [AWSPropertyAttribute]
public string PreferredMfaSetting { get; public set; }
    [AWSPropertyAttribute]
public List`1<AttributeType> UserAttributes { get; public set; }
    public List`1<string> UserMFASettingList { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public List`1<MFAOptionType> get_MFAOptions();
    public void set_MFAOptions(List`1<MFAOptionType> value);
    internal bool IsSetMFAOptions();
    public string get_PreferredMfaSetting();
    public void set_PreferredMfaSetting(string value);
    internal bool IsSetPreferredMfaSetting();
    public List`1<AttributeType> get_UserAttributes();
    public void set_UserAttributes(List`1<AttributeType> value);
    internal bool IsSetUserAttributes();
    public List`1<string> get_UserMFASettingList();
    public void set_UserMFASettingList(List`1<string> value);
    internal bool IsSetUserMFASettingList();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.GlobalSignOutResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.GroupExistsException : AmazonCognitoIdentityProviderException {
    public GroupExistsException(string message);
    public GroupExistsException(string message, Exception innerException);
    public GroupExistsException(Exception innerException);
    public GroupExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public GroupExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.GroupType : object {
    private Nullable`1<DateTime> _creationDate;
    private string _description;
    private string _groupName;
    private Nullable`1<DateTime> _lastModifiedDate;
    private Nullable`1<int> _precedence;
    private string _roleArn;
    private string _userPoolId;
    public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Precedence { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public Nullable`1<int> get_Precedence();
    public void set_Precedence(Nullable`1<int> value);
    internal bool IsSetPrecedence();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.HttpHeader : object {
    private string _headerName;
    private string _headerValue;
    [AWSPropertyAttribute]
public string HeaderName { get; public set; }
    [AWSPropertyAttribute]
public string HeaderValue { get; public set; }
    public string get_HeaderName();
    public void set_HeaderName(string value);
    internal bool IsSetHeaderName();
    public string get_HeaderValue();
    public void set_HeaderValue(string value);
    internal bool IsSetHeaderValue();
}
public interface Amazon.CognitoIdentityProvider.Model.IAdminListGroupsForUserPaginator {
    public IPaginatedEnumerable`1<AdminListGroupsForUserResponse> Responses { get; }
    public IPaginatedEnumerable`1<GroupType> Groups { get; }
    public abstract virtual IPaginatedEnumerable`1<AdminListGroupsForUserResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<GroupType> get_Groups();
}
public interface Amazon.CognitoIdentityProvider.Model.IAdminListUserAuthEventsPaginator {
    public IPaginatedEnumerable`1<AdminListUserAuthEventsResponse> Responses { get; }
    public IPaginatedEnumerable`1<AuthEventType> AuthEvents { get; }
    public abstract virtual IPaginatedEnumerable`1<AdminListUserAuthEventsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<AuthEventType> get_AuthEvents();
}
public interface Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory {
    public abstract virtual IAdminListGroupsForUserPaginator AdminListGroupsForUser(AdminListGroupsForUserRequest request);
    public abstract virtual IAdminListUserAuthEventsPaginator AdminListUserAuthEvents(AdminListUserAuthEventsRequest request);
    public abstract virtual IListGroupsPaginator ListGroups(ListGroupsRequest request);
    public abstract virtual IListIdentityProvidersPaginator ListIdentityProviders(ListIdentityProvidersRequest request);
    public abstract virtual IListResourceServersPaginator ListResourceServers(ListResourceServersRequest request);
    public abstract virtual IListUserPoolClientsPaginator ListUserPoolClients(ListUserPoolClientsRequest request);
    public abstract virtual IListUserPoolsPaginator ListUserPools(ListUserPoolsRequest request);
    public abstract virtual IListUsersPaginator ListUsers(ListUsersRequest request);
    public abstract virtual IListUsersInGroupPaginator ListUsersInGroup(ListUsersInGroupRequest request);
}
public class Amazon.CognitoIdentityProvider.Model.IdentityProviderType : object {
    private Dictionary`2<string, string> _attributeMapping;
    private Nullable`1<DateTime> _creationDate;
    private List`1<string> _idpIdentifiers;
    private Nullable`1<DateTime> _lastModifiedDate;
    private Dictionary`2<string, string> _providerDetails;
    private string _providerName;
    private IdentityProviderTypeType _providerType;
    private string _userPoolId;
    public Dictionary`2<string, string> AttributeMapping { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> IdpIdentifiers { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    public Dictionary`2<string, string> ProviderDetails { get; public set; }
    [AWSPropertyAttribute]
public string ProviderName { get; public set; }
    public IdentityProviderTypeType ProviderType { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Dictionary`2<string, string> get_AttributeMapping();
    public void set_AttributeMapping(Dictionary`2<string, string> value);
    internal bool IsSetAttributeMapping();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public List`1<string> get_IdpIdentifiers();
    public void set_IdpIdentifiers(List`1<string> value);
    internal bool IsSetIdpIdentifiers();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public Dictionary`2<string, string> get_ProviderDetails();
    public void set_ProviderDetails(Dictionary`2<string, string> value);
    internal bool IsSetProviderDetails();
    public string get_ProviderName();
    public void set_ProviderName(string value);
    internal bool IsSetProviderName();
    public IdentityProviderTypeType get_ProviderType();
    public void set_ProviderType(IdentityProviderTypeType value);
    internal bool IsSetProviderType();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public interface Amazon.CognitoIdentityProvider.Model.IListGroupsPaginator {
    public IPaginatedEnumerable`1<ListGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<GroupType> Groups { get; }
    public abstract virtual IPaginatedEnumerable`1<ListGroupsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<GroupType> get_Groups();
}
public interface Amazon.CognitoIdentityProvider.Model.IListIdentityProvidersPaginator {
    public IPaginatedEnumerable`1<ListIdentityProvidersResponse> Responses { get; }
    public IPaginatedEnumerable`1<ProviderDescription> Providers { get; }
    public abstract virtual IPaginatedEnumerable`1<ListIdentityProvidersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ProviderDescription> get_Providers();
}
public interface Amazon.CognitoIdentityProvider.Model.IListResourceServersPaginator {
    public IPaginatedEnumerable`1<ListResourceServersResponse> Responses { get; }
    public IPaginatedEnumerable`1<ResourceServerType> ResourceServers { get; }
    public abstract virtual IPaginatedEnumerable`1<ListResourceServersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<ResourceServerType> get_ResourceServers();
}
public interface Amazon.CognitoIdentityProvider.Model.IListUserPoolClientsPaginator {
    public IPaginatedEnumerable`1<ListUserPoolClientsResponse> Responses { get; }
    public IPaginatedEnumerable`1<UserPoolClientDescription> UserPoolClients { get; }
    public abstract virtual IPaginatedEnumerable`1<ListUserPoolClientsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<UserPoolClientDescription> get_UserPoolClients();
}
public interface Amazon.CognitoIdentityProvider.Model.IListUserPoolsPaginator {
    public IPaginatedEnumerable`1<ListUserPoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<UserPoolDescriptionType> UserPools { get; }
    public abstract virtual IPaginatedEnumerable`1<ListUserPoolsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<UserPoolDescriptionType> get_UserPools();
}
public interface Amazon.CognitoIdentityProvider.Model.IListUsersInGroupPaginator {
    public IPaginatedEnumerable`1<ListUsersInGroupResponse> Responses { get; }
    public IPaginatedEnumerable`1<UserType> Users { get; }
    public abstract virtual IPaginatedEnumerable`1<ListUsersInGroupResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<UserType> get_Users();
}
public interface Amazon.CognitoIdentityProvider.Model.IListUsersPaginator {
    public IPaginatedEnumerable`1<ListUsersResponse> Responses { get; }
    public IPaginatedEnumerable`1<UserType> Users { get; }
    public abstract virtual IPaginatedEnumerable`1<ListUsersResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<UserType> get_Users();
}
public class Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest : AmazonCognitoIdentityProviderRequest {
    private AnalyticsMetadataType _analyticsMetadata;
    private AuthFlowType _authFlow;
    private Dictionary`2<string, string> _authParameters;
    private string _clientId;
    private Dictionary`2<string, string> _clientMetadata;
    private UserContextDataType _userContextData;
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [AWSPropertyAttribute]
public AuthFlowType AuthFlow { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> AuthParameters { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public UserContextDataType UserContextData { get; public set; }
    public AnalyticsMetadataType get_AnalyticsMetadata();
    public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    internal bool IsSetAnalyticsMetadata();
    public AuthFlowType get_AuthFlow();
    public void set_AuthFlow(AuthFlowType value);
    internal bool IsSetAuthFlow();
    public Dictionary`2<string, string> get_AuthParameters();
    public void set_AuthParameters(Dictionary`2<string, string> value);
    internal bool IsSetAuthParameters();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public UserContextDataType get_UserContextData();
    public void set_UserContextData(UserContextDataType value);
    internal bool IsSetUserContextData();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse : AmazonWebServiceResponse {
    private AuthenticationResultType _authenticationResult;
    private ChallengeNameType _challengeName;
    private Dictionary`2<string, string> _challengeParameters;
    private string _session;
    public AuthenticationResultType AuthenticationResult { get; public set; }
    public ChallengeNameType ChallengeName { get; public set; }
    public Dictionary`2<string, string> ChallengeParameters { get; public set; }
    [AWSPropertyAttribute]
public string Session { get; public set; }
    public AuthenticationResultType get_AuthenticationResult();
    public void set_AuthenticationResult(AuthenticationResultType value);
    internal bool IsSetAuthenticationResult();
    public ChallengeNameType get_ChallengeName();
    public void set_ChallengeName(ChallengeNameType value);
    internal bool IsSetChallengeName();
    public Dictionary`2<string, string> get_ChallengeParameters();
    public void set_ChallengeParameters(Dictionary`2<string, string> value);
    internal bool IsSetChallengeParameters();
    public string get_Session();
    public void set_Session(string value);
    internal bool IsSetSession();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountRecoverySettingTypeMarshaller : object {
    public static AccountRecoverySettingTypeMarshaller Instance;
    private static AccountRecoverySettingTypeMarshaller();
    public sealed virtual void Marshall(AccountRecoverySettingType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountRecoverySettingTypeUnmarshaller : object {
    private static AccountRecoverySettingTypeUnmarshaller _instance;
    public static AccountRecoverySettingTypeUnmarshaller Instance { get; }
    private static AccountRecoverySettingTypeUnmarshaller();
    private sealed virtual override AccountRecoverySettingType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.AccountRecoverySettingType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountRecoverySettingType Unmarshall(JsonUnmarshallerContext context);
    public static AccountRecoverySettingTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionsTypeMarshaller : object {
    public static AccountTakeoverActionsTypeMarshaller Instance;
    private static AccountTakeoverActionsTypeMarshaller();
    public sealed virtual void Marshall(AccountTakeoverActionsType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionsTypeUnmarshaller : object {
    private static AccountTakeoverActionsTypeUnmarshaller _instance;
    public static AccountTakeoverActionsTypeUnmarshaller Instance { get; }
    private static AccountTakeoverActionsTypeUnmarshaller();
    private sealed virtual override AccountTakeoverActionsType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionsType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountTakeoverActionsType Unmarshall(JsonUnmarshallerContext context);
    public static AccountTakeoverActionsTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionTypeMarshaller : object {
    public static AccountTakeoverActionTypeMarshaller Instance;
    private static AccountTakeoverActionTypeMarshaller();
    public sealed virtual void Marshall(AccountTakeoverActionType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionTypeUnmarshaller : object {
    private static AccountTakeoverActionTypeUnmarshaller _instance;
    public static AccountTakeoverActionTypeUnmarshaller Instance { get; }
    private static AccountTakeoverActionTypeUnmarshaller();
    private sealed virtual override AccountTakeoverActionType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountTakeoverActionType Unmarshall(JsonUnmarshallerContext context);
    public static AccountTakeoverActionTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverRiskConfigurationTypeMarshaller : object {
    public static AccountTakeoverRiskConfigurationTypeMarshaller Instance;
    private static AccountTakeoverRiskConfigurationTypeMarshaller();
    public sealed virtual void Marshall(AccountTakeoverRiskConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverRiskConfigurationTypeUnmarshaller : object {
    private static AccountTakeoverRiskConfigurationTypeUnmarshaller _instance;
    public static AccountTakeoverRiskConfigurationTypeUnmarshaller Instance { get; }
    private static AccountTakeoverRiskConfigurationTypeUnmarshaller();
    private sealed virtual override AccountTakeoverRiskConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.AccountTakeoverRiskConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountTakeoverRiskConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static AccountTakeoverRiskConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesRequestMarshaller : object {
    private static AddCustomAttributesRequestMarshaller _instance;
    public static AddCustomAttributesRequestMarshaller Instance { get; }
    private static AddCustomAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddCustomAttributesRequest publicRequest);
    internal static AddCustomAttributesRequestMarshaller GetInstance();
    public static AddCustomAttributesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddCustomAttributesResponseUnmarshaller _instance;
    public static AddCustomAttributesResponseUnmarshaller Instance { get; }
    private static AddCustomAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddCustomAttributesResponseUnmarshaller GetInstance();
    public static AddCustomAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupRequestMarshaller : object {
    private static AdminAddUserToGroupRequestMarshaller _instance;
    public static AdminAddUserToGroupRequestMarshaller Instance { get; }
    private static AdminAddUserToGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminAddUserToGroupRequest publicRequest);
    internal static AdminAddUserToGroupRequestMarshaller GetInstance();
    public static AdminAddUserToGroupRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminAddUserToGroupResponseUnmarshaller _instance;
    public static AdminAddUserToGroupResponseUnmarshaller Instance { get; }
    private static AdminAddUserToGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminAddUserToGroupResponseUnmarshaller GetInstance();
    public static AdminAddUserToGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpRequestMarshaller : object {
    private static AdminConfirmSignUpRequestMarshaller _instance;
    public static AdminConfirmSignUpRequestMarshaller Instance { get; }
    private static AdminConfirmSignUpRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminConfirmSignUpRequest publicRequest);
    internal static AdminConfirmSignUpRequestMarshaller GetInstance();
    public static AdminConfirmSignUpRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminConfirmSignUpResponseUnmarshaller _instance;
    public static AdminConfirmSignUpResponseUnmarshaller Instance { get; }
    private static AdminConfirmSignUpResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminConfirmSignUpResponseUnmarshaller GetInstance();
    public static AdminConfirmSignUpResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeMarshaller : object {
    public static AdminCreateUserConfigTypeMarshaller Instance;
    private static AdminCreateUserConfigTypeMarshaller();
    public sealed virtual void Marshall(AdminCreateUserConfigType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeUnmarshaller : object {
    private static AdminCreateUserConfigTypeUnmarshaller _instance;
    public static AdminCreateUserConfigTypeUnmarshaller Instance { get; }
    private static AdminCreateUserConfigTypeUnmarshaller();
    private sealed virtual override AdminCreateUserConfigType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AdminCreateUserConfigType Unmarshall(JsonUnmarshallerContext context);
    public static AdminCreateUserConfigTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserRequestMarshaller : object {
    private static AdminCreateUserRequestMarshaller _instance;
    public static AdminCreateUserRequestMarshaller Instance { get; }
    private static AdminCreateUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminCreateUserRequest publicRequest);
    internal static AdminCreateUserRequestMarshaller GetInstance();
    public static AdminCreateUserRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminCreateUserResponseUnmarshaller _instance;
    public static AdminCreateUserResponseUnmarshaller Instance { get; }
    private static AdminCreateUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminCreateUserResponseUnmarshaller GetInstance();
    public static AdminCreateUserResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesRequestMarshaller : object {
    private static AdminDeleteUserAttributesRequestMarshaller _instance;
    public static AdminDeleteUserAttributesRequestMarshaller Instance { get; }
    private static AdminDeleteUserAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminDeleteUserAttributesRequest publicRequest);
    internal static AdminDeleteUserAttributesRequestMarshaller GetInstance();
    public static AdminDeleteUserAttributesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminDeleteUserAttributesResponseUnmarshaller _instance;
    public static AdminDeleteUserAttributesResponseUnmarshaller Instance { get; }
    private static AdminDeleteUserAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminDeleteUserAttributesResponseUnmarshaller GetInstance();
    public static AdminDeleteUserAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserRequestMarshaller : object {
    private static AdminDeleteUserRequestMarshaller _instance;
    public static AdminDeleteUserRequestMarshaller Instance { get; }
    private static AdminDeleteUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminDeleteUserRequest publicRequest);
    internal static AdminDeleteUserRequestMarshaller GetInstance();
    public static AdminDeleteUserRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminDeleteUserResponseUnmarshaller _instance;
    public static AdminDeleteUserResponseUnmarshaller Instance { get; }
    private static AdminDeleteUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminDeleteUserResponseUnmarshaller GetInstance();
    public static AdminDeleteUserResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableProviderForUserRequestMarshaller : object {
    private static AdminDisableProviderForUserRequestMarshaller _instance;
    public static AdminDisableProviderForUserRequestMarshaller Instance { get; }
    private static AdminDisableProviderForUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminDisableProviderForUserRequest publicRequest);
    internal static AdminDisableProviderForUserRequestMarshaller GetInstance();
    public static AdminDisableProviderForUserRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableProviderForUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminDisableProviderForUserResponseUnmarshaller _instance;
    public static AdminDisableProviderForUserResponseUnmarshaller Instance { get; }
    private static AdminDisableProviderForUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminDisableProviderForUserResponseUnmarshaller GetInstance();
    public static AdminDisableProviderForUserResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserRequestMarshaller : object {
    private static AdminDisableUserRequestMarshaller _instance;
    public static AdminDisableUserRequestMarshaller Instance { get; }
    private static AdminDisableUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminDisableUserRequest publicRequest);
    internal static AdminDisableUserRequestMarshaller GetInstance();
    public static AdminDisableUserRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminDisableUserResponseUnmarshaller _instance;
    public static AdminDisableUserResponseUnmarshaller Instance { get; }
    private static AdminDisableUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminDisableUserResponseUnmarshaller GetInstance();
    public static AdminDisableUserResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserRequestMarshaller : object {
    private static AdminEnableUserRequestMarshaller _instance;
    public static AdminEnableUserRequestMarshaller Instance { get; }
    private static AdminEnableUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminEnableUserRequest publicRequest);
    internal static AdminEnableUserRequestMarshaller GetInstance();
    public static AdminEnableUserRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminEnableUserResponseUnmarshaller _instance;
    public static AdminEnableUserResponseUnmarshaller Instance { get; }
    private static AdminEnableUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminEnableUserResponseUnmarshaller GetInstance();
    public static AdminEnableUserResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceRequestMarshaller : object {
    private static AdminForgetDeviceRequestMarshaller _instance;
    public static AdminForgetDeviceRequestMarshaller Instance { get; }
    private static AdminForgetDeviceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminForgetDeviceRequest publicRequest);
    internal static AdminForgetDeviceRequestMarshaller GetInstance();
    public static AdminForgetDeviceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminForgetDeviceResponseUnmarshaller _instance;
    public static AdminForgetDeviceResponseUnmarshaller Instance { get; }
    private static AdminForgetDeviceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminForgetDeviceResponseUnmarshaller GetInstance();
    public static AdminForgetDeviceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceRequestMarshaller : object {
    private static AdminGetDeviceRequestMarshaller _instance;
    public static AdminGetDeviceRequestMarshaller Instance { get; }
    private static AdminGetDeviceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminGetDeviceRequest publicRequest);
    internal static AdminGetDeviceRequestMarshaller GetInstance();
    public static AdminGetDeviceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminGetDeviceResponseUnmarshaller _instance;
    public static AdminGetDeviceResponseUnmarshaller Instance { get; }
    private static AdminGetDeviceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminGetDeviceResponseUnmarshaller GetInstance();
    public static AdminGetDeviceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserRequestMarshaller : object {
    private static AdminGetUserRequestMarshaller _instance;
    public static AdminGetUserRequestMarshaller Instance { get; }
    private static AdminGetUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminGetUserRequest publicRequest);
    internal static AdminGetUserRequestMarshaller GetInstance();
    public static AdminGetUserRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminGetUserResponseUnmarshaller _instance;
    public static AdminGetUserResponseUnmarshaller Instance { get; }
    private static AdminGetUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminGetUserResponseUnmarshaller GetInstance();
    public static AdminGetUserResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthRequestMarshaller : object {
    private static AdminInitiateAuthRequestMarshaller _instance;
    public static AdminInitiateAuthRequestMarshaller Instance { get; }
    private static AdminInitiateAuthRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminInitiateAuthRequest publicRequest);
    internal static AdminInitiateAuthRequestMarshaller GetInstance();
    public static AdminInitiateAuthRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminInitiateAuthResponseUnmarshaller _instance;
    public static AdminInitiateAuthResponseUnmarshaller Instance { get; }
    private static AdminInitiateAuthResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminInitiateAuthResponseUnmarshaller GetInstance();
    public static AdminInitiateAuthResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminLinkProviderForUserRequestMarshaller : object {
    private static AdminLinkProviderForUserRequestMarshaller _instance;
    public static AdminLinkProviderForUserRequestMarshaller Instance { get; }
    private static AdminLinkProviderForUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminLinkProviderForUserRequest publicRequest);
    internal static AdminLinkProviderForUserRequestMarshaller GetInstance();
    public static AdminLinkProviderForUserRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminLinkProviderForUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminLinkProviderForUserResponseUnmarshaller _instance;
    public static AdminLinkProviderForUserResponseUnmarshaller Instance { get; }
    private static AdminLinkProviderForUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminLinkProviderForUserResponseUnmarshaller GetInstance();
    public static AdminLinkProviderForUserResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesRequestMarshaller : object {
    private static AdminListDevicesRequestMarshaller _instance;
    public static AdminListDevicesRequestMarshaller Instance { get; }
    private static AdminListDevicesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminListDevicesRequest publicRequest);
    internal static AdminListDevicesRequestMarshaller GetInstance();
    public static AdminListDevicesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminListDevicesResponseUnmarshaller _instance;
    public static AdminListDevicesResponseUnmarshaller Instance { get; }
    private static AdminListDevicesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminListDevicesResponseUnmarshaller GetInstance();
    public static AdminListDevicesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserRequestMarshaller : object {
    private static AdminListGroupsForUserRequestMarshaller _instance;
    public static AdminListGroupsForUserRequestMarshaller Instance { get; }
    private static AdminListGroupsForUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminListGroupsForUserRequest publicRequest);
    internal static AdminListGroupsForUserRequestMarshaller GetInstance();
    public static AdminListGroupsForUserRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminListGroupsForUserResponseUnmarshaller _instance;
    public static AdminListGroupsForUserResponseUnmarshaller Instance { get; }
    private static AdminListGroupsForUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminListGroupsForUserResponseUnmarshaller GetInstance();
    public static AdminListGroupsForUserResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListUserAuthEventsRequestMarshaller : object {
    private static AdminListUserAuthEventsRequestMarshaller _instance;
    public static AdminListUserAuthEventsRequestMarshaller Instance { get; }
    private static AdminListUserAuthEventsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminListUserAuthEventsRequest publicRequest);
    internal static AdminListUserAuthEventsRequestMarshaller GetInstance();
    public static AdminListUserAuthEventsRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListUserAuthEventsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminListUserAuthEventsResponseUnmarshaller _instance;
    public static AdminListUserAuthEventsResponseUnmarshaller Instance { get; }
    private static AdminListUserAuthEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminListUserAuthEventsResponseUnmarshaller GetInstance();
    public static AdminListUserAuthEventsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupRequestMarshaller : object {
    private static AdminRemoveUserFromGroupRequestMarshaller _instance;
    public static AdminRemoveUserFromGroupRequestMarshaller Instance { get; }
    private static AdminRemoveUserFromGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminRemoveUserFromGroupRequest publicRequest);
    internal static AdminRemoveUserFromGroupRequestMarshaller GetInstance();
    public static AdminRemoveUserFromGroupRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminRemoveUserFromGroupResponseUnmarshaller _instance;
    public static AdminRemoveUserFromGroupResponseUnmarshaller Instance { get; }
    private static AdminRemoveUserFromGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminRemoveUserFromGroupResponseUnmarshaller GetInstance();
    public static AdminRemoveUserFromGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordRequestMarshaller : object {
    private static AdminResetUserPasswordRequestMarshaller _instance;
    public static AdminResetUserPasswordRequestMarshaller Instance { get; }
    private static AdminResetUserPasswordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminResetUserPasswordRequest publicRequest);
    internal static AdminResetUserPasswordRequestMarshaller GetInstance();
    public static AdminResetUserPasswordRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminResetUserPasswordResponseUnmarshaller _instance;
    public static AdminResetUserPasswordResponseUnmarshaller Instance { get; }
    private static AdminResetUserPasswordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminResetUserPasswordResponseUnmarshaller GetInstance();
    public static AdminResetUserPasswordResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeRequestMarshaller : object {
    private static AdminRespondToAuthChallengeRequestMarshaller _instance;
    public static AdminRespondToAuthChallengeRequestMarshaller Instance { get; }
    private static AdminRespondToAuthChallengeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminRespondToAuthChallengeRequest publicRequest);
    internal static AdminRespondToAuthChallengeRequestMarshaller GetInstance();
    public static AdminRespondToAuthChallengeRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminRespondToAuthChallengeResponseUnmarshaller _instance;
    public static AdminRespondToAuthChallengeResponseUnmarshaller Instance { get; }
    private static AdminRespondToAuthChallengeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminRespondToAuthChallengeResponseUnmarshaller GetInstance();
    public static AdminRespondToAuthChallengeResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserMFAPreferenceRequestMarshaller : object {
    private static AdminSetUserMFAPreferenceRequestMarshaller _instance;
    public static AdminSetUserMFAPreferenceRequestMarshaller Instance { get; }
    private static AdminSetUserMFAPreferenceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminSetUserMFAPreferenceRequest publicRequest);
    internal static AdminSetUserMFAPreferenceRequestMarshaller GetInstance();
    public static AdminSetUserMFAPreferenceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserMFAPreferenceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminSetUserMFAPreferenceResponseUnmarshaller _instance;
    public static AdminSetUserMFAPreferenceResponseUnmarshaller Instance { get; }
    private static AdminSetUserMFAPreferenceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminSetUserMFAPreferenceResponseUnmarshaller GetInstance();
    public static AdminSetUserMFAPreferenceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserPasswordRequestMarshaller : object {
    private static AdminSetUserPasswordRequestMarshaller _instance;
    public static AdminSetUserPasswordRequestMarshaller Instance { get; }
    private static AdminSetUserPasswordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminSetUserPasswordRequest publicRequest);
    internal static AdminSetUserPasswordRequestMarshaller GetInstance();
    public static AdminSetUserPasswordRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserPasswordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminSetUserPasswordResponseUnmarshaller _instance;
    public static AdminSetUserPasswordResponseUnmarshaller Instance { get; }
    private static AdminSetUserPasswordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminSetUserPasswordResponseUnmarshaller GetInstance();
    public static AdminSetUserPasswordResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsRequestMarshaller : object {
    private static AdminSetUserSettingsRequestMarshaller _instance;
    public static AdminSetUserSettingsRequestMarshaller Instance { get; }
    private static AdminSetUserSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminSetUserSettingsRequest publicRequest);
    internal static AdminSetUserSettingsRequestMarshaller GetInstance();
    public static AdminSetUserSettingsRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminSetUserSettingsResponseUnmarshaller _instance;
    public static AdminSetUserSettingsResponseUnmarshaller Instance { get; }
    private static AdminSetUserSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminSetUserSettingsResponseUnmarshaller GetInstance();
    public static AdminSetUserSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateAuthEventFeedbackRequestMarshaller : object {
    private static AdminUpdateAuthEventFeedbackRequestMarshaller _instance;
    public static AdminUpdateAuthEventFeedbackRequestMarshaller Instance { get; }
    private static AdminUpdateAuthEventFeedbackRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminUpdateAuthEventFeedbackRequest publicRequest);
    internal static AdminUpdateAuthEventFeedbackRequestMarshaller GetInstance();
    public static AdminUpdateAuthEventFeedbackRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateAuthEventFeedbackResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminUpdateAuthEventFeedbackResponseUnmarshaller _instance;
    public static AdminUpdateAuthEventFeedbackResponseUnmarshaller Instance { get; }
    private static AdminUpdateAuthEventFeedbackResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminUpdateAuthEventFeedbackResponseUnmarshaller GetInstance();
    public static AdminUpdateAuthEventFeedbackResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusRequestMarshaller : object {
    private static AdminUpdateDeviceStatusRequestMarshaller _instance;
    public static AdminUpdateDeviceStatusRequestMarshaller Instance { get; }
    private static AdminUpdateDeviceStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminUpdateDeviceStatusRequest publicRequest);
    internal static AdminUpdateDeviceStatusRequestMarshaller GetInstance();
    public static AdminUpdateDeviceStatusRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminUpdateDeviceStatusResponseUnmarshaller _instance;
    public static AdminUpdateDeviceStatusResponseUnmarshaller Instance { get; }
    private static AdminUpdateDeviceStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminUpdateDeviceStatusResponseUnmarshaller GetInstance();
    public static AdminUpdateDeviceStatusResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesRequestMarshaller : object {
    private static AdminUpdateUserAttributesRequestMarshaller _instance;
    public static AdminUpdateUserAttributesRequestMarshaller Instance { get; }
    private static AdminUpdateUserAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminUpdateUserAttributesRequest publicRequest);
    internal static AdminUpdateUserAttributesRequestMarshaller GetInstance();
    public static AdminUpdateUserAttributesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminUpdateUserAttributesResponseUnmarshaller _instance;
    public static AdminUpdateUserAttributesResponseUnmarshaller Instance { get; }
    private static AdminUpdateUserAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminUpdateUserAttributesResponseUnmarshaller GetInstance();
    public static AdminUpdateUserAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutRequestMarshaller : object {
    private static AdminUserGlobalSignOutRequestMarshaller _instance;
    public static AdminUserGlobalSignOutRequestMarshaller Instance { get; }
    private static AdminUserGlobalSignOutRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AdminUserGlobalSignOutRequest publicRequest);
    internal static AdminUserGlobalSignOutRequestMarshaller GetInstance();
    public static AdminUserGlobalSignOutRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AdminUserGlobalSignOutResponseUnmarshaller _instance;
    public static AdminUserGlobalSignOutResponseUnmarshaller Instance { get; }
    private static AdminUserGlobalSignOutResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AdminUserGlobalSignOutResponseUnmarshaller GetInstance();
    public static AdminUserGlobalSignOutResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AliasExistsExceptionUnmarshaller : object {
    private static AliasExistsExceptionUnmarshaller _instance;
    public static AliasExistsExceptionUnmarshaller Instance { get; }
    private static AliasExistsExceptionUnmarshaller();
    public sealed virtual AliasExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AliasExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AliasExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsConfigurationTypeMarshaller : object {
    public static AnalyticsConfigurationTypeMarshaller Instance;
    private static AnalyticsConfigurationTypeMarshaller();
    public sealed virtual void Marshall(AnalyticsConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsConfigurationTypeUnmarshaller : object {
    private static AnalyticsConfigurationTypeUnmarshaller _instance;
    public static AnalyticsConfigurationTypeUnmarshaller Instance { get; }
    private static AnalyticsConfigurationTypeUnmarshaller();
    private sealed virtual override AnalyticsConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.AnalyticsConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AnalyticsConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static AnalyticsConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsMetadataTypeMarshaller : object {
    public static AnalyticsMetadataTypeMarshaller Instance;
    private static AnalyticsMetadataTypeMarshaller();
    public sealed virtual void Marshall(AnalyticsMetadataType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AssociateSoftwareTokenRequestMarshaller : object {
    private static AssociateSoftwareTokenRequestMarshaller _instance;
    public static AssociateSoftwareTokenRequestMarshaller Instance { get; }
    private static AssociateSoftwareTokenRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AssociateSoftwareTokenRequest publicRequest);
    internal static AssociateSoftwareTokenRequestMarshaller GetInstance();
    public static AssociateSoftwareTokenRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AssociateSoftwareTokenResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AssociateSoftwareTokenResponseUnmarshaller _instance;
    public static AssociateSoftwareTokenResponseUnmarshaller Instance { get; }
    private static AssociateSoftwareTokenResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AssociateSoftwareTokenResponseUnmarshaller GetInstance();
    public static AssociateSoftwareTokenResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeMarshaller : object {
    public static AttributeTypeMarshaller Instance;
    private static AttributeTypeMarshaller();
    public sealed virtual void Marshall(AttributeType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeUnmarshaller : object {
    private static AttributeTypeUnmarshaller _instance;
    public static AttributeTypeUnmarshaller Instance { get; }
    private static AttributeTypeUnmarshaller();
    private sealed virtual override AttributeType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.AttributeType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AttributeType Unmarshall(JsonUnmarshallerContext context);
    public static AttributeTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthenticationResultTypeUnmarshaller : object {
    private static AuthenticationResultTypeUnmarshaller _instance;
    public static AuthenticationResultTypeUnmarshaller Instance { get; }
    private static AuthenticationResultTypeUnmarshaller();
    private sealed virtual override AuthenticationResultType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.AuthenticationResultType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AuthenticationResultType Unmarshall(JsonUnmarshallerContext context);
    public static AuthenticationResultTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthEventTypeUnmarshaller : object {
    private static AuthEventTypeUnmarshaller _instance;
    public static AuthEventTypeUnmarshaller Instance { get; }
    private static AuthEventTypeUnmarshaller();
    private sealed virtual override AuthEventType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.AuthEventType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AuthEventType Unmarshall(JsonUnmarshallerContext context);
    public static AuthEventTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChallengeResponseTypeUnmarshaller : object {
    private static ChallengeResponseTypeUnmarshaller _instance;
    public static ChallengeResponseTypeUnmarshaller Instance { get; }
    private static ChallengeResponseTypeUnmarshaller();
    private sealed virtual override ChallengeResponseType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.ChallengeResponseType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ChallengeResponseType Unmarshall(JsonUnmarshallerContext context);
    public static ChallengeResponseTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordRequestMarshaller : object {
    private static ChangePasswordRequestMarshaller _instance;
    public static ChangePasswordRequestMarshaller Instance { get; }
    private static ChangePasswordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ChangePasswordRequest publicRequest);
    internal static ChangePasswordRequestMarshaller GetInstance();
    public static ChangePasswordRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ChangePasswordResponseUnmarshaller _instance;
    public static ChangePasswordResponseUnmarshaller Instance { get; }
    private static ChangePasswordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ChangePasswordResponseUnmarshaller GetInstance();
    public static ChangePasswordResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CloudWatchLogsConfigurationTypeMarshaller : object {
    public static CloudWatchLogsConfigurationTypeMarshaller Instance;
    private static CloudWatchLogsConfigurationTypeMarshaller();
    public sealed virtual void Marshall(CloudWatchLogsConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CloudWatchLogsConfigurationTypeUnmarshaller : object {
    private static CloudWatchLogsConfigurationTypeUnmarshaller _instance;
    public static CloudWatchLogsConfigurationTypeUnmarshaller Instance { get; }
    private static CloudWatchLogsConfigurationTypeUnmarshaller();
    private sealed virtual override CloudWatchLogsConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.CloudWatchLogsConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CloudWatchLogsConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static CloudWatchLogsConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryDetailsTypeUnmarshaller : object {
    private static CodeDeliveryDetailsTypeUnmarshaller _instance;
    public static CodeDeliveryDetailsTypeUnmarshaller Instance { get; }
    private static CodeDeliveryDetailsTypeUnmarshaller();
    private sealed virtual override CodeDeliveryDetailsType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.CodeDeliveryDetailsType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CodeDeliveryDetailsType Unmarshall(JsonUnmarshallerContext context);
    public static CodeDeliveryDetailsTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryFailureExceptionUnmarshaller : object {
    private static CodeDeliveryFailureExceptionUnmarshaller _instance;
    public static CodeDeliveryFailureExceptionUnmarshaller Instance { get; }
    private static CodeDeliveryFailureExceptionUnmarshaller();
    public sealed virtual CodeDeliveryFailureException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CodeDeliveryFailureException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CodeDeliveryFailureExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeMismatchExceptionUnmarshaller : object {
    private static CodeMismatchExceptionUnmarshaller _instance;
    public static CodeMismatchExceptionUnmarshaller Instance { get; }
    private static CodeMismatchExceptionUnmarshaller();
    public sealed virtual CodeMismatchException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CodeMismatchException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CodeMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsActionsTypeMarshaller : object {
    public static CompromisedCredentialsActionsTypeMarshaller Instance;
    private static CompromisedCredentialsActionsTypeMarshaller();
    public sealed virtual void Marshall(CompromisedCredentialsActionsType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsActionsTypeUnmarshaller : object {
    private static CompromisedCredentialsActionsTypeUnmarshaller _instance;
    public static CompromisedCredentialsActionsTypeUnmarshaller Instance { get; }
    private static CompromisedCredentialsActionsTypeUnmarshaller();
    private sealed virtual override CompromisedCredentialsActionsType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsActionsType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CompromisedCredentialsActionsType Unmarshall(JsonUnmarshallerContext context);
    public static CompromisedCredentialsActionsTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsRiskConfigurationTypeMarshaller : object {
    public static CompromisedCredentialsRiskConfigurationTypeMarshaller Instance;
    private static CompromisedCredentialsRiskConfigurationTypeMarshaller();
    public sealed virtual void Marshall(CompromisedCredentialsRiskConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsRiskConfigurationTypeUnmarshaller : object {
    private static CompromisedCredentialsRiskConfigurationTypeUnmarshaller _instance;
    public static CompromisedCredentialsRiskConfigurationTypeUnmarshaller Instance { get; }
    private static CompromisedCredentialsRiskConfigurationTypeUnmarshaller();
    private sealed virtual override CompromisedCredentialsRiskConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsRiskConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CompromisedCredentialsRiskConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static CompromisedCredentialsRiskConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller : object {
    private static ConcurrentModificationExceptionUnmarshaller _instance;
    public static ConcurrentModificationExceptionUnmarshaller Instance { get; }
    private static ConcurrentModificationExceptionUnmarshaller();
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConcurrentModificationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConcurrentModificationExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceRequestMarshaller : object {
    private static ConfirmDeviceRequestMarshaller _instance;
    public static ConfirmDeviceRequestMarshaller Instance { get; }
    private static ConfirmDeviceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ConfirmDeviceRequest publicRequest);
    internal static ConfirmDeviceRequestMarshaller GetInstance();
    public static ConfirmDeviceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ConfirmDeviceResponseUnmarshaller _instance;
    public static ConfirmDeviceResponseUnmarshaller Instance { get; }
    private static ConfirmDeviceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ConfirmDeviceResponseUnmarshaller GetInstance();
    public static ConfirmDeviceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordRequestMarshaller : object {
    private static ConfirmForgotPasswordRequestMarshaller _instance;
    public static ConfirmForgotPasswordRequestMarshaller Instance { get; }
    private static ConfirmForgotPasswordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ConfirmForgotPasswordRequest publicRequest);
    internal static ConfirmForgotPasswordRequestMarshaller GetInstance();
    public static ConfirmForgotPasswordRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ConfirmForgotPasswordResponseUnmarshaller _instance;
    public static ConfirmForgotPasswordResponseUnmarshaller Instance { get; }
    private static ConfirmForgotPasswordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ConfirmForgotPasswordResponseUnmarshaller GetInstance();
    public static ConfirmForgotPasswordResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpRequestMarshaller : object {
    private static ConfirmSignUpRequestMarshaller _instance;
    public static ConfirmSignUpRequestMarshaller Instance { get; }
    private static ConfirmSignUpRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ConfirmSignUpRequest publicRequest);
    internal static ConfirmSignUpRequestMarshaller GetInstance();
    public static ConfirmSignUpRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ConfirmSignUpResponseUnmarshaller _instance;
    public static ConfirmSignUpResponseUnmarshaller Instance { get; }
    private static ConfirmSignUpResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ConfirmSignUpResponseUnmarshaller GetInstance();
    public static ConfirmSignUpResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ContextDataTypeMarshaller : object {
    public static ContextDataTypeMarshaller Instance;
    private static ContextDataTypeMarshaller();
    public sealed virtual void Marshall(ContextDataType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller : object {
    private static CreateGroupRequestMarshaller _instance;
    public static CreateGroupRequestMarshaller Instance { get; }
    private static CreateGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateGroupRequest publicRequest);
    internal static CreateGroupRequestMarshaller GetInstance();
    public static CreateGroupRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateGroupResponseUnmarshaller _instance;
    public static CreateGroupResponseUnmarshaller Instance { get; }
    private static CreateGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateGroupResponseUnmarshaller GetInstance();
    public static CreateGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateIdentityProviderRequestMarshaller : object {
    private static CreateIdentityProviderRequestMarshaller _instance;
    public static CreateIdentityProviderRequestMarshaller Instance { get; }
    private static CreateIdentityProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateIdentityProviderRequest publicRequest);
    internal static CreateIdentityProviderRequestMarshaller GetInstance();
    public static CreateIdentityProviderRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateIdentityProviderResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateIdentityProviderResponseUnmarshaller _instance;
    public static CreateIdentityProviderResponseUnmarshaller Instance { get; }
    private static CreateIdentityProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateIdentityProviderResponseUnmarshaller GetInstance();
    public static CreateIdentityProviderResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateResourceServerRequestMarshaller : object {
    private static CreateResourceServerRequestMarshaller _instance;
    public static CreateResourceServerRequestMarshaller Instance { get; }
    private static CreateResourceServerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateResourceServerRequest publicRequest);
    internal static CreateResourceServerRequestMarshaller GetInstance();
    public static CreateResourceServerRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateResourceServerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateResourceServerResponseUnmarshaller _instance;
    public static CreateResourceServerResponseUnmarshaller Instance { get; }
    private static CreateResourceServerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateResourceServerResponseUnmarshaller GetInstance();
    public static CreateResourceServerResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobRequestMarshaller : object {
    private static CreateUserImportJobRequestMarshaller _instance;
    public static CreateUserImportJobRequestMarshaller Instance { get; }
    private static CreateUserImportJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateUserImportJobRequest publicRequest);
    internal static CreateUserImportJobRequestMarshaller GetInstance();
    public static CreateUserImportJobRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateUserImportJobResponseUnmarshaller _instance;
    public static CreateUserImportJobResponseUnmarshaller Instance { get; }
    private static CreateUserImportJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateUserImportJobResponseUnmarshaller GetInstance();
    public static CreateUserImportJobResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientRequestMarshaller : object {
    private static CreateUserPoolClientRequestMarshaller _instance;
    public static CreateUserPoolClientRequestMarshaller Instance { get; }
    private static CreateUserPoolClientRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateUserPoolClientRequest publicRequest);
    internal static CreateUserPoolClientRequestMarshaller GetInstance();
    public static CreateUserPoolClientRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateUserPoolClientResponseUnmarshaller _instance;
    public static CreateUserPoolClientResponseUnmarshaller Instance { get; }
    private static CreateUserPoolClientResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateUserPoolClientResponseUnmarshaller GetInstance();
    public static CreateUserPoolClientResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolDomainRequestMarshaller : object {
    private static CreateUserPoolDomainRequestMarshaller _instance;
    public static CreateUserPoolDomainRequestMarshaller Instance { get; }
    private static CreateUserPoolDomainRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateUserPoolDomainRequest publicRequest);
    internal static CreateUserPoolDomainRequestMarshaller GetInstance();
    public static CreateUserPoolDomainRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolDomainResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateUserPoolDomainResponseUnmarshaller _instance;
    public static CreateUserPoolDomainResponseUnmarshaller Instance { get; }
    private static CreateUserPoolDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateUserPoolDomainResponseUnmarshaller GetInstance();
    public static CreateUserPoolDomainResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolRequestMarshaller : object {
    private static CreateUserPoolRequestMarshaller _instance;
    public static CreateUserPoolRequestMarshaller Instance { get; }
    private static CreateUserPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateUserPoolRequest publicRequest);
    internal static CreateUserPoolRequestMarshaller GetInstance();
    public static CreateUserPoolRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateUserPoolResponseUnmarshaller _instance;
    public static CreateUserPoolResponseUnmarshaller Instance { get; }
    private static CreateUserPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateUserPoolResponseUnmarshaller GetInstance();
    public static CreateUserPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomDomainConfigTypeMarshaller : object {
    public static CustomDomainConfigTypeMarshaller Instance;
    private static CustomDomainConfigTypeMarshaller();
    public sealed virtual void Marshall(CustomDomainConfigType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomDomainConfigTypeUnmarshaller : object {
    private static CustomDomainConfigTypeUnmarshaller _instance;
    public static CustomDomainConfigTypeUnmarshaller Instance { get; }
    private static CustomDomainConfigTypeUnmarshaller();
    private sealed virtual override CustomDomainConfigType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.CustomDomainConfigType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomDomainConfigType Unmarshall(JsonUnmarshallerContext context);
    public static CustomDomainConfigTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomEmailLambdaVersionConfigTypeMarshaller : object {
    public static CustomEmailLambdaVersionConfigTypeMarshaller Instance;
    private static CustomEmailLambdaVersionConfigTypeMarshaller();
    public sealed virtual void Marshall(CustomEmailLambdaVersionConfigType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomEmailLambdaVersionConfigTypeUnmarshaller : object {
    private static CustomEmailLambdaVersionConfigTypeUnmarshaller _instance;
    public static CustomEmailLambdaVersionConfigTypeUnmarshaller Instance { get; }
    private static CustomEmailLambdaVersionConfigTypeUnmarshaller();
    private sealed virtual override CustomEmailLambdaVersionConfigType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.CustomEmailLambdaVersionConfigType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomEmailLambdaVersionConfigType Unmarshall(JsonUnmarshallerContext context);
    public static CustomEmailLambdaVersionConfigTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomSMSLambdaVersionConfigTypeMarshaller : object {
    public static CustomSMSLambdaVersionConfigTypeMarshaller Instance;
    private static CustomSMSLambdaVersionConfigTypeMarshaller();
    public sealed virtual void Marshall(CustomSMSLambdaVersionConfigType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomSMSLambdaVersionConfigTypeUnmarshaller : object {
    private static CustomSMSLambdaVersionConfigTypeUnmarshaller _instance;
    public static CustomSMSLambdaVersionConfigTypeUnmarshaller Instance { get; }
    private static CustomSMSLambdaVersionConfigTypeUnmarshaller();
    private sealed virtual override CustomSMSLambdaVersionConfigType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.CustomSMSLambdaVersionConfigType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CustomSMSLambdaVersionConfigType Unmarshall(JsonUnmarshallerContext context);
    public static CustomSMSLambdaVersionConfigTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller : object {
    private static DeleteGroupRequestMarshaller _instance;
    public static DeleteGroupRequestMarshaller Instance { get; }
    private static DeleteGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteGroupRequest publicRequest);
    internal static DeleteGroupRequestMarshaller GetInstance();
    public static DeleteGroupRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteGroupResponseUnmarshaller _instance;
    public static DeleteGroupResponseUnmarshaller Instance { get; }
    private static DeleteGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteGroupResponseUnmarshaller GetInstance();
    public static DeleteGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteIdentityProviderRequestMarshaller : object {
    private static DeleteIdentityProviderRequestMarshaller _instance;
    public static DeleteIdentityProviderRequestMarshaller Instance { get; }
    private static DeleteIdentityProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteIdentityProviderRequest publicRequest);
    internal static DeleteIdentityProviderRequestMarshaller GetInstance();
    public static DeleteIdentityProviderRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteIdentityProviderResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteIdentityProviderResponseUnmarshaller _instance;
    public static DeleteIdentityProviderResponseUnmarshaller Instance { get; }
    private static DeleteIdentityProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteIdentityProviderResponseUnmarshaller GetInstance();
    public static DeleteIdentityProviderResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteResourceServerRequestMarshaller : object {
    private static DeleteResourceServerRequestMarshaller _instance;
    public static DeleteResourceServerRequestMarshaller Instance { get; }
    private static DeleteResourceServerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourceServerRequest publicRequest);
    internal static DeleteResourceServerRequestMarshaller GetInstance();
    public static DeleteResourceServerRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteResourceServerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourceServerResponseUnmarshaller _instance;
    public static DeleteResourceServerResponseUnmarshaller Instance { get; }
    private static DeleteResourceServerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourceServerResponseUnmarshaller GetInstance();
    public static DeleteResourceServerResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesRequestMarshaller : object {
    private static DeleteUserAttributesRequestMarshaller _instance;
    public static DeleteUserAttributesRequestMarshaller Instance { get; }
    private static DeleteUserAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteUserAttributesRequest publicRequest);
    internal static DeleteUserAttributesRequestMarshaller GetInstance();
    public static DeleteUserAttributesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteUserAttributesResponseUnmarshaller _instance;
    public static DeleteUserAttributesResponseUnmarshaller Instance { get; }
    private static DeleteUserAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteUserAttributesResponseUnmarshaller GetInstance();
    public static DeleteUserAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientRequestMarshaller : object {
    private static DeleteUserPoolClientRequestMarshaller _instance;
    public static DeleteUserPoolClientRequestMarshaller Instance { get; }
    private static DeleteUserPoolClientRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteUserPoolClientRequest publicRequest);
    internal static DeleteUserPoolClientRequestMarshaller GetInstance();
    public static DeleteUserPoolClientRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteUserPoolClientResponseUnmarshaller _instance;
    public static DeleteUserPoolClientResponseUnmarshaller Instance { get; }
    private static DeleteUserPoolClientResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteUserPoolClientResponseUnmarshaller GetInstance();
    public static DeleteUserPoolClientResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolDomainRequestMarshaller : object {
    private static DeleteUserPoolDomainRequestMarshaller _instance;
    public static DeleteUserPoolDomainRequestMarshaller Instance { get; }
    private static DeleteUserPoolDomainRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteUserPoolDomainRequest publicRequest);
    internal static DeleteUserPoolDomainRequestMarshaller GetInstance();
    public static DeleteUserPoolDomainRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolDomainResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteUserPoolDomainResponseUnmarshaller _instance;
    public static DeleteUserPoolDomainResponseUnmarshaller Instance { get; }
    private static DeleteUserPoolDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteUserPoolDomainResponseUnmarshaller GetInstance();
    public static DeleteUserPoolDomainResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolRequestMarshaller : object {
    private static DeleteUserPoolRequestMarshaller _instance;
    public static DeleteUserPoolRequestMarshaller Instance { get; }
    private static DeleteUserPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteUserPoolRequest publicRequest);
    internal static DeleteUserPoolRequestMarshaller GetInstance();
    public static DeleteUserPoolRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteUserPoolResponseUnmarshaller _instance;
    public static DeleteUserPoolResponseUnmarshaller Instance { get; }
    private static DeleteUserPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteUserPoolResponseUnmarshaller GetInstance();
    public static DeleteUserPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller : object {
    private static DeleteUserRequestMarshaller _instance;
    public static DeleteUserRequestMarshaller Instance { get; }
    private static DeleteUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteUserRequest publicRequest);
    internal static DeleteUserRequestMarshaller GetInstance();
    public static DeleteUserRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteUserResponseUnmarshaller _instance;
    public static DeleteUserResponseUnmarshaller Instance { get; }
    private static DeleteUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteUserResponseUnmarshaller GetInstance();
    public static DeleteUserResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeIdentityProviderRequestMarshaller : object {
    private static DescribeIdentityProviderRequestMarshaller _instance;
    public static DescribeIdentityProviderRequestMarshaller Instance { get; }
    private static DescribeIdentityProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeIdentityProviderRequest publicRequest);
    internal static DescribeIdentityProviderRequestMarshaller GetInstance();
    public static DescribeIdentityProviderRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeIdentityProviderResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeIdentityProviderResponseUnmarshaller _instance;
    public static DescribeIdentityProviderResponseUnmarshaller Instance { get; }
    private static DescribeIdentityProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeIdentityProviderResponseUnmarshaller GetInstance();
    public static DescribeIdentityProviderResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeResourceServerRequestMarshaller : object {
    private static DescribeResourceServerRequestMarshaller _instance;
    public static DescribeResourceServerRequestMarshaller Instance { get; }
    private static DescribeResourceServerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeResourceServerRequest publicRequest);
    internal static DescribeResourceServerRequestMarshaller GetInstance();
    public static DescribeResourceServerRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeResourceServerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeResourceServerResponseUnmarshaller _instance;
    public static DescribeResourceServerResponseUnmarshaller Instance { get; }
    private static DescribeResourceServerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeResourceServerResponseUnmarshaller GetInstance();
    public static DescribeResourceServerResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeRiskConfigurationRequestMarshaller : object {
    private static DescribeRiskConfigurationRequestMarshaller _instance;
    public static DescribeRiskConfigurationRequestMarshaller Instance { get; }
    private static DescribeRiskConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRiskConfigurationRequest publicRequest);
    internal static DescribeRiskConfigurationRequestMarshaller GetInstance();
    public static DescribeRiskConfigurationRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeRiskConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeRiskConfigurationResponseUnmarshaller _instance;
    public static DescribeRiskConfigurationResponseUnmarshaller Instance { get; }
    private static DescribeRiskConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRiskConfigurationResponseUnmarshaller GetInstance();
    public static DescribeRiskConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobRequestMarshaller : object {
    private static DescribeUserImportJobRequestMarshaller _instance;
    public static DescribeUserImportJobRequestMarshaller Instance { get; }
    private static DescribeUserImportJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeUserImportJobRequest publicRequest);
    internal static DescribeUserImportJobRequestMarshaller GetInstance();
    public static DescribeUserImportJobRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeUserImportJobResponseUnmarshaller _instance;
    public static DescribeUserImportJobResponseUnmarshaller Instance { get; }
    private static DescribeUserImportJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeUserImportJobResponseUnmarshaller GetInstance();
    public static DescribeUserImportJobResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientRequestMarshaller : object {
    private static DescribeUserPoolClientRequestMarshaller _instance;
    public static DescribeUserPoolClientRequestMarshaller Instance { get; }
    private static DescribeUserPoolClientRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeUserPoolClientRequest publicRequest);
    internal static DescribeUserPoolClientRequestMarshaller GetInstance();
    public static DescribeUserPoolClientRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeUserPoolClientResponseUnmarshaller _instance;
    public static DescribeUserPoolClientResponseUnmarshaller Instance { get; }
    private static DescribeUserPoolClientResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeUserPoolClientResponseUnmarshaller GetInstance();
    public static DescribeUserPoolClientResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolDomainRequestMarshaller : object {
    private static DescribeUserPoolDomainRequestMarshaller _instance;
    public static DescribeUserPoolDomainRequestMarshaller Instance { get; }
    private static DescribeUserPoolDomainRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeUserPoolDomainRequest publicRequest);
    internal static DescribeUserPoolDomainRequestMarshaller GetInstance();
    public static DescribeUserPoolDomainRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolDomainResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeUserPoolDomainResponseUnmarshaller _instance;
    public static DescribeUserPoolDomainResponseUnmarshaller Instance { get; }
    private static DescribeUserPoolDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeUserPoolDomainResponseUnmarshaller GetInstance();
    public static DescribeUserPoolDomainResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolRequestMarshaller : object {
    private static DescribeUserPoolRequestMarshaller _instance;
    public static DescribeUserPoolRequestMarshaller Instance { get; }
    private static DescribeUserPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeUserPoolRequest publicRequest);
    internal static DescribeUserPoolRequestMarshaller GetInstance();
    public static DescribeUserPoolRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeUserPoolResponseUnmarshaller _instance;
    public static DescribeUserPoolResponseUnmarshaller Instance { get; }
    private static DescribeUserPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeUserPoolResponseUnmarshaller GetInstance();
    public static DescribeUserPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeMarshaller : object {
    public static DeviceConfigurationTypeMarshaller Instance;
    private static DeviceConfigurationTypeMarshaller();
    public sealed virtual void Marshall(DeviceConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeUnmarshaller : object {
    private static DeviceConfigurationTypeUnmarshaller _instance;
    public static DeviceConfigurationTypeUnmarshaller Instance { get; }
    private static DeviceConfigurationTypeUnmarshaller();
    private sealed virtual override DeviceConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.DeviceConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeviceConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static DeviceConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceSecretVerifierConfigTypeMarshaller : object {
    public static DeviceSecretVerifierConfigTypeMarshaller Instance;
    private static DeviceSecretVerifierConfigTypeMarshaller();
    public sealed virtual void Marshall(DeviceSecretVerifierConfigType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceTypeUnmarshaller : object {
    private static DeviceTypeUnmarshaller _instance;
    public static DeviceTypeUnmarshaller Instance { get; }
    private static DeviceTypeUnmarshaller();
    private sealed virtual override DeviceType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.DeviceType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeviceType Unmarshall(JsonUnmarshallerContext context);
    public static DeviceTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DomainDescriptionTypeUnmarshaller : object {
    private static DomainDescriptionTypeUnmarshaller _instance;
    public static DomainDescriptionTypeUnmarshaller Instance { get; }
    private static DomainDescriptionTypeUnmarshaller();
    private sealed virtual override DomainDescriptionType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.DomainDescriptionType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DomainDescriptionType Unmarshall(JsonUnmarshallerContext context);
    public static DomainDescriptionTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DuplicateProviderExceptionUnmarshaller : object {
    private static DuplicateProviderExceptionUnmarshaller _instance;
    public static DuplicateProviderExceptionUnmarshaller Instance { get; }
    private static DuplicateProviderExceptionUnmarshaller();
    public sealed virtual DuplicateProviderException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DuplicateProviderException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateProviderExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeMarshaller : object {
    public static EmailConfigurationTypeMarshaller Instance;
    private static EmailConfigurationTypeMarshaller();
    public sealed virtual void Marshall(EmailConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeUnmarshaller : object {
    private static EmailConfigurationTypeUnmarshaller _instance;
    public static EmailConfigurationTypeUnmarshaller Instance { get; }
    private static EmailConfigurationTypeUnmarshaller();
    private sealed virtual override EmailConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.EmailConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EmailConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static EmailConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EnableSoftwareTokenMFAExceptionUnmarshaller : object {
    private static EnableSoftwareTokenMFAExceptionUnmarshaller _instance;
    public static EnableSoftwareTokenMFAExceptionUnmarshaller Instance { get; }
    private static EnableSoftwareTokenMFAExceptionUnmarshaller();
    public sealed virtual EnableSoftwareTokenMFAException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual EnableSoftwareTokenMFAException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static EnableSoftwareTokenMFAExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventContextDataTypeUnmarshaller : object {
    private static EventContextDataTypeUnmarshaller _instance;
    public static EventContextDataTypeUnmarshaller Instance { get; }
    private static EventContextDataTypeUnmarshaller();
    private sealed virtual override EventContextDataType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.EventContextDataType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventContextDataType Unmarshall(JsonUnmarshallerContext context);
    public static EventContextDataTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventFeedbackTypeUnmarshaller : object {
    private static EventFeedbackTypeUnmarshaller _instance;
    public static EventFeedbackTypeUnmarshaller Instance { get; }
    private static EventFeedbackTypeUnmarshaller();
    private sealed virtual override EventFeedbackType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.EventFeedbackType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventFeedbackType Unmarshall(JsonUnmarshallerContext context);
    public static EventFeedbackTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventRiskTypeUnmarshaller : object {
    private static EventRiskTypeUnmarshaller _instance;
    public static EventRiskTypeUnmarshaller Instance { get; }
    private static EventRiskTypeUnmarshaller();
    private sealed virtual override EventRiskType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.EventRiskType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventRiskType Unmarshall(JsonUnmarshallerContext context);
    public static EventRiskTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ExpiredCodeExceptionUnmarshaller : object {
    private static ExpiredCodeExceptionUnmarshaller _instance;
    public static ExpiredCodeExceptionUnmarshaller Instance { get; }
    private static ExpiredCodeExceptionUnmarshaller();
    public sealed virtual ExpiredCodeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ExpiredCodeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ExpiredCodeExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller : object {
    private static ForbiddenExceptionUnmarshaller _instance;
    public static ForbiddenExceptionUnmarshaller Instance { get; }
    private static ForbiddenExceptionUnmarshaller();
    public sealed virtual ForbiddenException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ForbiddenException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ForbiddenExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceRequestMarshaller : object {
    private static ForgetDeviceRequestMarshaller _instance;
    public static ForgetDeviceRequestMarshaller Instance { get; }
    private static ForgetDeviceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ForgetDeviceRequest publicRequest);
    internal static ForgetDeviceRequestMarshaller GetInstance();
    public static ForgetDeviceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ForgetDeviceResponseUnmarshaller _instance;
    public static ForgetDeviceResponseUnmarshaller Instance { get; }
    private static ForgetDeviceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ForgetDeviceResponseUnmarshaller GetInstance();
    public static ForgetDeviceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordRequestMarshaller : object {
    private static ForgotPasswordRequestMarshaller _instance;
    public static ForgotPasswordRequestMarshaller Instance { get; }
    private static ForgotPasswordRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ForgotPasswordRequest publicRequest);
    internal static ForgotPasswordRequestMarshaller GetInstance();
    public static ForgotPasswordRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ForgotPasswordResponseUnmarshaller _instance;
    public static ForgotPasswordResponseUnmarshaller Instance { get; }
    private static ForgotPasswordResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ForgotPasswordResponseUnmarshaller GetInstance();
    public static ForgotPasswordResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderRequestMarshaller : object {
    private static GetCSVHeaderRequestMarshaller _instance;
    public static GetCSVHeaderRequestMarshaller Instance { get; }
    private static GetCSVHeaderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetCSVHeaderRequest publicRequest);
    internal static GetCSVHeaderRequestMarshaller GetInstance();
    public static GetCSVHeaderRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetCSVHeaderResponseUnmarshaller _instance;
    public static GetCSVHeaderResponseUnmarshaller Instance { get; }
    private static GetCSVHeaderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetCSVHeaderResponseUnmarshaller GetInstance();
    public static GetCSVHeaderResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller : object {
    private static GetDeviceRequestMarshaller _instance;
    public static GetDeviceRequestMarshaller Instance { get; }
    private static GetDeviceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDeviceRequest publicRequest);
    internal static GetDeviceRequestMarshaller GetInstance();
    public static GetDeviceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDeviceResponseUnmarshaller _instance;
    public static GetDeviceResponseUnmarshaller Instance { get; }
    private static GetDeviceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDeviceResponseUnmarshaller GetInstance();
    public static GetDeviceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupRequestMarshaller : object {
    private static GetGroupRequestMarshaller _instance;
    public static GetGroupRequestMarshaller Instance { get; }
    private static GetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetGroupRequest publicRequest);
    internal static GetGroupRequestMarshaller GetInstance();
    public static GetGroupRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetGroupResponseUnmarshaller _instance;
    public static GetGroupResponseUnmarshaller Instance { get; }
    private static GetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetGroupResponseUnmarshaller GetInstance();
    public static GetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetIdentityProviderByIdentifierRequestMarshaller : object {
    private static GetIdentityProviderByIdentifierRequestMarshaller _instance;
    public static GetIdentityProviderByIdentifierRequestMarshaller Instance { get; }
    private static GetIdentityProviderByIdentifierRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetIdentityProviderByIdentifierRequest publicRequest);
    internal static GetIdentityProviderByIdentifierRequestMarshaller GetInstance();
    public static GetIdentityProviderByIdentifierRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetIdentityProviderByIdentifierResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetIdentityProviderByIdentifierResponseUnmarshaller _instance;
    public static GetIdentityProviderByIdentifierResponseUnmarshaller Instance { get; }
    private static GetIdentityProviderByIdentifierResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetIdentityProviderByIdentifierResponseUnmarshaller GetInstance();
    public static GetIdentityProviderByIdentifierResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetLogDeliveryConfigurationRequestMarshaller : object {
    private static GetLogDeliveryConfigurationRequestMarshaller _instance;
    public static GetLogDeliveryConfigurationRequestMarshaller Instance { get; }
    private static GetLogDeliveryConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetLogDeliveryConfigurationRequest publicRequest);
    internal static GetLogDeliveryConfigurationRequestMarshaller GetInstance();
    public static GetLogDeliveryConfigurationRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetLogDeliveryConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetLogDeliveryConfigurationResponseUnmarshaller _instance;
    public static GetLogDeliveryConfigurationResponseUnmarshaller Instance { get; }
    private static GetLogDeliveryConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetLogDeliveryConfigurationResponseUnmarshaller GetInstance();
    public static GetLogDeliveryConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetSigningCertificateRequestMarshaller : object {
    private static GetSigningCertificateRequestMarshaller _instance;
    public static GetSigningCertificateRequestMarshaller Instance { get; }
    private static GetSigningCertificateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetSigningCertificateRequest publicRequest);
    internal static GetSigningCertificateRequestMarshaller GetInstance();
    public static GetSigningCertificateRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetSigningCertificateResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetSigningCertificateResponseUnmarshaller _instance;
    public static GetSigningCertificateResponseUnmarshaller Instance { get; }
    private static GetSigningCertificateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetSigningCertificateResponseUnmarshaller GetInstance();
    public static GetSigningCertificateResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUICustomizationRequestMarshaller : object {
    private static GetUICustomizationRequestMarshaller _instance;
    public static GetUICustomizationRequestMarshaller Instance { get; }
    private static GetUICustomizationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetUICustomizationRequest publicRequest);
    internal static GetUICustomizationRequestMarshaller GetInstance();
    public static GetUICustomizationRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUICustomizationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetUICustomizationResponseUnmarshaller _instance;
    public static GetUICustomizationResponseUnmarshaller Instance { get; }
    private static GetUICustomizationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetUICustomizationResponseUnmarshaller GetInstance();
    public static GetUICustomizationResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeRequestMarshaller : object {
    private static GetUserAttributeVerificationCodeRequestMarshaller _instance;
    public static GetUserAttributeVerificationCodeRequestMarshaller Instance { get; }
    private static GetUserAttributeVerificationCodeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetUserAttributeVerificationCodeRequest publicRequest);
    internal static GetUserAttributeVerificationCodeRequestMarshaller GetInstance();
    public static GetUserAttributeVerificationCodeRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetUserAttributeVerificationCodeResponseUnmarshaller _instance;
    public static GetUserAttributeVerificationCodeResponseUnmarshaller Instance { get; }
    private static GetUserAttributeVerificationCodeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetUserAttributeVerificationCodeResponseUnmarshaller GetInstance();
    public static GetUserAttributeVerificationCodeResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserPoolMfaConfigRequestMarshaller : object {
    private static GetUserPoolMfaConfigRequestMarshaller _instance;
    public static GetUserPoolMfaConfigRequestMarshaller Instance { get; }
    private static GetUserPoolMfaConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetUserPoolMfaConfigRequest publicRequest);
    internal static GetUserPoolMfaConfigRequestMarshaller GetInstance();
    public static GetUserPoolMfaConfigRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserPoolMfaConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetUserPoolMfaConfigResponseUnmarshaller _instance;
    public static GetUserPoolMfaConfigResponseUnmarshaller Instance { get; }
    private static GetUserPoolMfaConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetUserPoolMfaConfigResponseUnmarshaller GetInstance();
    public static GetUserPoolMfaConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserRequestMarshaller : object {
    private static GetUserRequestMarshaller _instance;
    public static GetUserRequestMarshaller Instance { get; }
    private static GetUserRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetUserRequest publicRequest);
    internal static GetUserRequestMarshaller GetInstance();
    public static GetUserRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetUserResponseUnmarshaller _instance;
    public static GetUserResponseUnmarshaller Instance { get; }
    private static GetUserResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetUserResponseUnmarshaller GetInstance();
    public static GetUserResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutRequestMarshaller : object {
    private static GlobalSignOutRequestMarshaller _instance;
    public static GlobalSignOutRequestMarshaller Instance { get; }
    private static GlobalSignOutRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GlobalSignOutRequest publicRequest);
    internal static GlobalSignOutRequestMarshaller GetInstance();
    public static GlobalSignOutRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GlobalSignOutResponseUnmarshaller _instance;
    public static GlobalSignOutResponseUnmarshaller Instance { get; }
    private static GlobalSignOutResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GlobalSignOutResponseUnmarshaller GetInstance();
    public static GlobalSignOutResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupExistsExceptionUnmarshaller : object {
    private static GroupExistsExceptionUnmarshaller _instance;
    public static GroupExistsExceptionUnmarshaller Instance { get; }
    private static GroupExistsExceptionUnmarshaller();
    public sealed virtual GroupExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual GroupExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static GroupExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupTypeUnmarshaller : object {
    private static GroupTypeUnmarshaller _instance;
    public static GroupTypeUnmarshaller Instance { get; }
    private static GroupTypeUnmarshaller();
    private sealed virtual override GroupType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.GroupType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GroupType Unmarshall(JsonUnmarshallerContext context);
    public static GroupTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.HttpHeaderMarshaller : object {
    public static HttpHeaderMarshaller Instance;
    private static HttpHeaderMarshaller();
    public sealed virtual void Marshall(HttpHeader requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.IdentityProviderTypeUnmarshaller : object {
    private static IdentityProviderTypeUnmarshaller _instance;
    public static IdentityProviderTypeUnmarshaller Instance { get; }
    private static IdentityProviderTypeUnmarshaller();
    private sealed virtual override IdentityProviderType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.IdentityProviderType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IdentityProviderType Unmarshall(JsonUnmarshallerContext context);
    public static IdentityProviderTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthRequestMarshaller : object {
    private static InitiateAuthRequestMarshaller _instance;
    public static InitiateAuthRequestMarshaller Instance { get; }
    private static InitiateAuthRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InitiateAuthRequest publicRequest);
    internal static InitiateAuthRequestMarshaller GetInstance();
    public static InitiateAuthRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthResponseUnmarshaller : JsonResponseUnmarshaller {
    private static InitiateAuthResponseUnmarshaller _instance;
    public static InitiateAuthResponseUnmarshaller Instance { get; }
    private static InitiateAuthResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static InitiateAuthResponseUnmarshaller GetInstance();
    public static InitiateAuthResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InternalErrorExceptionUnmarshaller : object {
    private static InternalErrorExceptionUnmarshaller _instance;
    public static InternalErrorExceptionUnmarshaller Instance { get; }
    private static InternalErrorExceptionUnmarshaller();
    public sealed virtual InternalErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidEmailRoleAccessPolicyExceptionUnmarshaller : object {
    private static InvalidEmailRoleAccessPolicyExceptionUnmarshaller _instance;
    public static InvalidEmailRoleAccessPolicyExceptionUnmarshaller Instance { get; }
    private static InvalidEmailRoleAccessPolicyExceptionUnmarshaller();
    public sealed virtual InvalidEmailRoleAccessPolicyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidEmailRoleAccessPolicyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidEmailRoleAccessPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidLambdaResponseExceptionUnmarshaller : object {
    private static InvalidLambdaResponseExceptionUnmarshaller _instance;
    public static InvalidLambdaResponseExceptionUnmarshaller Instance { get; }
    private static InvalidLambdaResponseExceptionUnmarshaller();
    public sealed virtual InvalidLambdaResponseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidLambdaResponseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidLambdaResponseExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidOAuthFlowExceptionUnmarshaller : object {
    private static InvalidOAuthFlowExceptionUnmarshaller _instance;
    public static InvalidOAuthFlowExceptionUnmarshaller Instance { get; }
    private static InvalidOAuthFlowExceptionUnmarshaller();
    public sealed virtual InvalidOAuthFlowException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidOAuthFlowException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOAuthFlowExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller : object {
    private static InvalidParameterExceptionUnmarshaller _instance;
    public static InvalidParameterExceptionUnmarshaller Instance { get; }
    private static InvalidParameterExceptionUnmarshaller();
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidPasswordExceptionUnmarshaller : object {
    private static InvalidPasswordExceptionUnmarshaller _instance;
    public static InvalidPasswordExceptionUnmarshaller Instance { get; }
    private static InvalidPasswordExceptionUnmarshaller();
    public sealed virtual InvalidPasswordException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidPasswordException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidPasswordExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidSmsRoleAccessPolicyExceptionUnmarshaller : object {
    private static InvalidSmsRoleAccessPolicyExceptionUnmarshaller _instance;
    public static InvalidSmsRoleAccessPolicyExceptionUnmarshaller Instance { get; }
    private static InvalidSmsRoleAccessPolicyExceptionUnmarshaller();
    public sealed virtual InvalidSmsRoleAccessPolicyException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidSmsRoleAccessPolicyException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSmsRoleAccessPolicyExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidSmsRoleTrustRelationshipExceptionUnmarshaller : object {
    private static InvalidSmsRoleTrustRelationshipExceptionUnmarshaller _instance;
    public static InvalidSmsRoleTrustRelationshipExceptionUnmarshaller Instance { get; }
    private static InvalidSmsRoleTrustRelationshipExceptionUnmarshaller();
    public sealed virtual InvalidSmsRoleTrustRelationshipException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidSmsRoleTrustRelationshipException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSmsRoleTrustRelationshipExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidUserPoolConfigurationExceptionUnmarshaller : object {
    private static InvalidUserPoolConfigurationExceptionUnmarshaller _instance;
    public static InvalidUserPoolConfigurationExceptionUnmarshaller Instance { get; }
    private static InvalidUserPoolConfigurationExceptionUnmarshaller();
    public sealed virtual InvalidUserPoolConfigurationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidUserPoolConfigurationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidUserPoolConfigurationExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeMarshaller : object {
    public static LambdaConfigTypeMarshaller Instance;
    private static LambdaConfigTypeMarshaller();
    public sealed virtual void Marshall(LambdaConfigType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeUnmarshaller : object {
    private static LambdaConfigTypeUnmarshaller _instance;
    public static LambdaConfigTypeUnmarshaller Instance { get; }
    private static LambdaConfigTypeUnmarshaller();
    private sealed virtual override LambdaConfigType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.LambdaConfigType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LambdaConfigType Unmarshall(JsonUnmarshallerContext context);
    public static LambdaConfigTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller : object {
    private static ListDevicesRequestMarshaller _instance;
    public static ListDevicesRequestMarshaller Instance { get; }
    private static ListDevicesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListDevicesRequest publicRequest);
    internal static ListDevicesRequestMarshaller GetInstance();
    public static ListDevicesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListDevicesResponseUnmarshaller _instance;
    public static ListDevicesResponseUnmarshaller Instance { get; }
    private static ListDevicesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListDevicesResponseUnmarshaller GetInstance();
    public static ListDevicesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller : object {
    private static ListGroupsRequestMarshaller _instance;
    public static ListGroupsRequestMarshaller Instance { get; }
    private static ListGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListGroupsRequest publicRequest);
    internal static ListGroupsRequestMarshaller GetInstance();
    public static ListGroupsRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListGroupsResponseUnmarshaller _instance;
    public static ListGroupsResponseUnmarshaller Instance { get; }
    private static ListGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListGroupsResponseUnmarshaller GetInstance();
    public static ListGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller : object {
    private static ListIdentityProvidersRequestMarshaller _instance;
    public static ListIdentityProvidersRequestMarshaller Instance { get; }
    private static ListIdentityProvidersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListIdentityProvidersRequest publicRequest);
    internal static ListIdentityProvidersRequestMarshaller GetInstance();
    public static ListIdentityProvidersRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListIdentityProvidersResponseUnmarshaller _instance;
    public static ListIdentityProvidersResponseUnmarshaller Instance { get; }
    private static ListIdentityProvidersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListIdentityProvidersResponseUnmarshaller GetInstance();
    public static ListIdentityProvidersResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListResourceServersRequestMarshaller : object {
    private static ListResourceServersRequestMarshaller _instance;
    public static ListResourceServersRequestMarshaller Instance { get; }
    private static ListResourceServersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListResourceServersRequest publicRequest);
    internal static ListResourceServersRequestMarshaller GetInstance();
    public static ListResourceServersRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListResourceServersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListResourceServersResponseUnmarshaller _instance;
    public static ListResourceServersResponseUnmarshaller Instance { get; }
    private static ListResourceServersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListResourceServersResponseUnmarshaller GetInstance();
    public static ListResourceServersResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsRequestMarshaller : object {
    private static ListUserImportJobsRequestMarshaller _instance;
    public static ListUserImportJobsRequestMarshaller Instance { get; }
    private static ListUserImportJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListUserImportJobsRequest publicRequest);
    internal static ListUserImportJobsRequestMarshaller GetInstance();
    public static ListUserImportJobsRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListUserImportJobsResponseUnmarshaller _instance;
    public static ListUserImportJobsResponseUnmarshaller Instance { get; }
    private static ListUserImportJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListUserImportJobsResponseUnmarshaller GetInstance();
    public static ListUserImportJobsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsRequestMarshaller : object {
    private static ListUserPoolClientsRequestMarshaller _instance;
    public static ListUserPoolClientsRequestMarshaller Instance { get; }
    private static ListUserPoolClientsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListUserPoolClientsRequest publicRequest);
    internal static ListUserPoolClientsRequestMarshaller GetInstance();
    public static ListUserPoolClientsRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListUserPoolClientsResponseUnmarshaller _instance;
    public static ListUserPoolClientsResponseUnmarshaller Instance { get; }
    private static ListUserPoolClientsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListUserPoolClientsResponseUnmarshaller GetInstance();
    public static ListUserPoolClientsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsRequestMarshaller : object {
    private static ListUserPoolsRequestMarshaller _instance;
    public static ListUserPoolsRequestMarshaller Instance { get; }
    private static ListUserPoolsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListUserPoolsRequest publicRequest);
    internal static ListUserPoolsRequestMarshaller GetInstance();
    public static ListUserPoolsRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListUserPoolsResponseUnmarshaller _instance;
    public static ListUserPoolsResponseUnmarshaller Instance { get; }
    private static ListUserPoolsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListUserPoolsResponseUnmarshaller GetInstance();
    public static ListUserPoolsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupRequestMarshaller : object {
    private static ListUsersInGroupRequestMarshaller _instance;
    public static ListUsersInGroupRequestMarshaller Instance { get; }
    private static ListUsersInGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListUsersInGroupRequest publicRequest);
    internal static ListUsersInGroupRequestMarshaller GetInstance();
    public static ListUsersInGroupRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListUsersInGroupResponseUnmarshaller _instance;
    public static ListUsersInGroupResponseUnmarshaller Instance { get; }
    private static ListUsersInGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListUsersInGroupResponseUnmarshaller GetInstance();
    public static ListUsersInGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller : object {
    private static ListUsersRequestMarshaller _instance;
    public static ListUsersRequestMarshaller Instance { get; }
    private static ListUsersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListUsersRequest publicRequest);
    internal static ListUsersRequestMarshaller GetInstance();
    public static ListUsersRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListUsersResponseUnmarshaller _instance;
    public static ListUsersResponseUnmarshaller Instance { get; }
    private static ListUsersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListUsersResponseUnmarshaller GetInstance();
    public static ListUsersResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LogConfigurationTypeMarshaller : object {
    public static LogConfigurationTypeMarshaller Instance;
    private static LogConfigurationTypeMarshaller();
    public sealed virtual void Marshall(LogConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LogConfigurationTypeUnmarshaller : object {
    private static LogConfigurationTypeUnmarshaller _instance;
    public static LogConfigurationTypeUnmarshaller Instance { get; }
    private static LogConfigurationTypeUnmarshaller();
    private sealed virtual override LogConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.LogConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LogConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static LogConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LogDeliveryConfigurationTypeUnmarshaller : object {
    private static LogDeliveryConfigurationTypeUnmarshaller _instance;
    public static LogDeliveryConfigurationTypeUnmarshaller Instance { get; }
    private static LogDeliveryConfigurationTypeUnmarshaller();
    private sealed virtual override LogDeliveryConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.LogDeliveryConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LogDeliveryConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static LogDeliveryConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeMarshaller : object {
    public static MessageTemplateTypeMarshaller Instance;
    private static MessageTemplateTypeMarshaller();
    public sealed virtual void Marshall(MessageTemplateType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeUnmarshaller : object {
    private static MessageTemplateTypeUnmarshaller _instance;
    public static MessageTemplateTypeUnmarshaller Instance { get; }
    private static MessageTemplateTypeUnmarshaller();
    private sealed virtual override MessageTemplateType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.MessageTemplateType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MessageTemplateType Unmarshall(JsonUnmarshallerContext context);
    public static MessageTemplateTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAMethodNotFoundExceptionUnmarshaller : object {
    private static MFAMethodNotFoundExceptionUnmarshaller _instance;
    public static MFAMethodNotFoundExceptionUnmarshaller Instance { get; }
    private static MFAMethodNotFoundExceptionUnmarshaller();
    public sealed virtual MFAMethodNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MFAMethodNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MFAMethodNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeMarshaller : object {
    public static MFAOptionTypeMarshaller Instance;
    private static MFAOptionTypeMarshaller();
    public sealed virtual void Marshall(MFAOptionType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeUnmarshaller : object {
    private static MFAOptionTypeUnmarshaller _instance;
    public static MFAOptionTypeUnmarshaller Instance { get; }
    private static MFAOptionTypeUnmarshaller();
    private sealed virtual override MFAOptionType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.MFAOptionType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MFAOptionType Unmarshall(JsonUnmarshallerContext context);
    public static MFAOptionTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NewDeviceMetadataTypeUnmarshaller : object {
    private static NewDeviceMetadataTypeUnmarshaller _instance;
    public static NewDeviceMetadataTypeUnmarshaller Instance { get; }
    private static NewDeviceMetadataTypeUnmarshaller();
    private sealed virtual override NewDeviceMetadataType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.NewDeviceMetadataType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NewDeviceMetadataType Unmarshall(JsonUnmarshallerContext context);
    public static NewDeviceMetadataTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller : object {
    private static NotAuthorizedExceptionUnmarshaller _instance;
    public static NotAuthorizedExceptionUnmarshaller Instance { get; }
    private static NotAuthorizedExceptionUnmarshaller();
    public sealed virtual NotAuthorizedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual NotAuthorizedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static NotAuthorizedExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyConfigurationTypeMarshaller : object {
    public static NotifyConfigurationTypeMarshaller Instance;
    private static NotifyConfigurationTypeMarshaller();
    public sealed virtual void Marshall(NotifyConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyConfigurationTypeUnmarshaller : object {
    private static NotifyConfigurationTypeUnmarshaller _instance;
    public static NotifyConfigurationTypeUnmarshaller Instance { get; }
    private static NotifyConfigurationTypeUnmarshaller();
    private sealed virtual override NotifyConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.NotifyConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NotifyConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static NotifyConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyEmailTypeMarshaller : object {
    public static NotifyEmailTypeMarshaller Instance;
    private static NotifyEmailTypeMarshaller();
    public sealed virtual void Marshall(NotifyEmailType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyEmailTypeUnmarshaller : object {
    private static NotifyEmailTypeUnmarshaller _instance;
    public static NotifyEmailTypeUnmarshaller Instance { get; }
    private static NotifyEmailTypeUnmarshaller();
    private sealed virtual override NotifyEmailType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.NotifyEmailType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NotifyEmailType Unmarshall(JsonUnmarshallerContext context);
    public static NotifyEmailTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeMarshaller : object {
    public static NumberAttributeConstraintsTypeMarshaller Instance;
    private static NumberAttributeConstraintsTypeMarshaller();
    public sealed virtual void Marshall(NumberAttributeConstraintsType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeUnmarshaller : object {
    private static NumberAttributeConstraintsTypeUnmarshaller _instance;
    public static NumberAttributeConstraintsTypeUnmarshaller Instance { get; }
    private static NumberAttributeConstraintsTypeUnmarshaller();
    private sealed virtual override NumberAttributeConstraintsType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.NumberAttributeConstraintsType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NumberAttributeConstraintsType Unmarshall(JsonUnmarshallerContext context);
    public static NumberAttributeConstraintsTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeMarshaller : object {
    public static PasswordPolicyTypeMarshaller Instance;
    private static PasswordPolicyTypeMarshaller();
    public sealed virtual void Marshall(PasswordPolicyType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeUnmarshaller : object {
    private static PasswordPolicyTypeUnmarshaller _instance;
    public static PasswordPolicyTypeUnmarshaller Instance { get; }
    private static PasswordPolicyTypeUnmarshaller();
    private sealed virtual override PasswordPolicyType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.PasswordPolicyType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PasswordPolicyType Unmarshall(JsonUnmarshallerContext context);
    public static PasswordPolicyTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordResetRequiredExceptionUnmarshaller : object {
    private static PasswordResetRequiredExceptionUnmarshaller _instance;
    public static PasswordResetRequiredExceptionUnmarshaller Instance { get; }
    private static PasswordResetRequiredExceptionUnmarshaller();
    public sealed virtual PasswordResetRequiredException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PasswordResetRequiredException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PasswordResetRequiredExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller : object {
    private static PreconditionNotMetExceptionUnmarshaller _instance;
    public static PreconditionNotMetExceptionUnmarshaller Instance { get; }
    private static PreconditionNotMetExceptionUnmarshaller();
    public sealed virtual PreconditionNotMetException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PreconditionNotMetException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PreconditionNotMetExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PreTokenGenerationVersionConfigTypeMarshaller : object {
    public static PreTokenGenerationVersionConfigTypeMarshaller Instance;
    private static PreTokenGenerationVersionConfigTypeMarshaller();
    public sealed virtual void Marshall(PreTokenGenerationVersionConfigType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PreTokenGenerationVersionConfigTypeUnmarshaller : object {
    private static PreTokenGenerationVersionConfigTypeUnmarshaller _instance;
    public static PreTokenGenerationVersionConfigTypeUnmarshaller Instance { get; }
    private static PreTokenGenerationVersionConfigTypeUnmarshaller();
    private sealed virtual override PreTokenGenerationVersionConfigType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.PreTokenGenerationVersionConfigType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PreTokenGenerationVersionConfigType Unmarshall(JsonUnmarshallerContext context);
    public static PreTokenGenerationVersionConfigTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ProviderDescriptionUnmarshaller : object {
    private static ProviderDescriptionUnmarshaller _instance;
    public static ProviderDescriptionUnmarshaller Instance { get; }
    private static ProviderDescriptionUnmarshaller();
    private sealed virtual override ProviderDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.ProviderDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProviderDescription Unmarshall(JsonUnmarshallerContext context);
    public static ProviderDescriptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ProviderUserIdentifierTypeMarshaller : object {
    public static ProviderUserIdentifierTypeMarshaller Instance;
    private static ProviderUserIdentifierTypeMarshaller();
    public sealed virtual void Marshall(ProviderUserIdentifierType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RecoveryOptionTypeMarshaller : object {
    public static RecoveryOptionTypeMarshaller Instance;
    private static RecoveryOptionTypeMarshaller();
    public sealed virtual void Marshall(RecoveryOptionType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RecoveryOptionTypeUnmarshaller : object {
    private static RecoveryOptionTypeUnmarshaller _instance;
    public static RecoveryOptionTypeUnmarshaller Instance { get; }
    private static RecoveryOptionTypeUnmarshaller();
    private sealed virtual override RecoveryOptionType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.RecoveryOptionType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecoveryOptionType Unmarshall(JsonUnmarshallerContext context);
    public static RecoveryOptionTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeRequestMarshaller : object {
    private static ResendConfirmationCodeRequestMarshaller _instance;
    public static ResendConfirmationCodeRequestMarshaller Instance { get; }
    private static ResendConfirmationCodeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ResendConfirmationCodeRequest publicRequest);
    internal static ResendConfirmationCodeRequestMarshaller GetInstance();
    public static ResendConfirmationCodeRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ResendConfirmationCodeResponseUnmarshaller _instance;
    public static ResendConfirmationCodeResponseUnmarshaller Instance { get; }
    private static ResendConfirmationCodeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ResendConfirmationCodeResponseUnmarshaller GetInstance();
    public static ResendConfirmationCodeResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerScopeTypeMarshaller : object {
    public static ResourceServerScopeTypeMarshaller Instance;
    private static ResourceServerScopeTypeMarshaller();
    public sealed virtual void Marshall(ResourceServerScopeType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerScopeTypeUnmarshaller : object {
    private static ResourceServerScopeTypeUnmarshaller _instance;
    public static ResourceServerScopeTypeUnmarshaller Instance { get; }
    private static ResourceServerScopeTypeUnmarshaller();
    private sealed virtual override ResourceServerScopeType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.ResourceServerScopeType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceServerScopeType Unmarshall(JsonUnmarshallerContext context);
    public static ResourceServerScopeTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerTypeUnmarshaller : object {
    private static ResourceServerTypeUnmarshaller _instance;
    public static ResourceServerTypeUnmarshaller Instance { get; }
    private static ResourceServerTypeUnmarshaller();
    private sealed virtual override ResourceServerType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.ResourceServerType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourceServerType Unmarshall(JsonUnmarshallerContext context);
    public static ResourceServerTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeRequestMarshaller : object {
    private static RespondToAuthChallengeRequestMarshaller _instance;
    public static RespondToAuthChallengeRequestMarshaller Instance { get; }
    private static RespondToAuthChallengeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RespondToAuthChallengeRequest publicRequest);
    internal static RespondToAuthChallengeRequestMarshaller GetInstance();
    public static RespondToAuthChallengeRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RespondToAuthChallengeResponseUnmarshaller _instance;
    public static RespondToAuthChallengeResponseUnmarshaller Instance { get; }
    private static RespondToAuthChallengeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RespondToAuthChallengeResponseUnmarshaller GetInstance();
    public static RespondToAuthChallengeResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RevokeTokenRequestMarshaller : object {
    private static RevokeTokenRequestMarshaller _instance;
    public static RevokeTokenRequestMarshaller Instance { get; }
    private static RevokeTokenRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RevokeTokenRequest publicRequest);
    internal static RevokeTokenRequestMarshaller GetInstance();
    public static RevokeTokenRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RevokeTokenResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RevokeTokenResponseUnmarshaller _instance;
    public static RevokeTokenResponseUnmarshaller Instance { get; }
    private static RevokeTokenResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RevokeTokenResponseUnmarshaller GetInstance();
    public static RevokeTokenResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskConfigurationTypeUnmarshaller : object {
    private static RiskConfigurationTypeUnmarshaller _instance;
    public static RiskConfigurationTypeUnmarshaller Instance { get; }
    private static RiskConfigurationTypeUnmarshaller();
    private sealed virtual override RiskConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.RiskConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RiskConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static RiskConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskExceptionConfigurationTypeMarshaller : object {
    public static RiskExceptionConfigurationTypeMarshaller Instance;
    private static RiskExceptionConfigurationTypeMarshaller();
    public sealed virtual void Marshall(RiskExceptionConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskExceptionConfigurationTypeUnmarshaller : object {
    private static RiskExceptionConfigurationTypeUnmarshaller _instance;
    public static RiskExceptionConfigurationTypeUnmarshaller Instance { get; }
    private static RiskExceptionConfigurationTypeUnmarshaller();
    private sealed virtual override RiskExceptionConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.RiskExceptionConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RiskExceptionConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static RiskExceptionConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeMarshaller : object {
    public static SchemaAttributeTypeMarshaller Instance;
    private static SchemaAttributeTypeMarshaller();
    public sealed virtual void Marshall(SchemaAttributeType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeUnmarshaller : object {
    private static SchemaAttributeTypeUnmarshaller _instance;
    public static SchemaAttributeTypeUnmarshaller Instance { get; }
    private static SchemaAttributeTypeUnmarshaller();
    private sealed virtual override SchemaAttributeType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.SchemaAttributeType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaAttributeType Unmarshall(JsonUnmarshallerContext context);
    public static SchemaAttributeTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ScopeDoesNotExistExceptionUnmarshaller : object {
    private static ScopeDoesNotExistExceptionUnmarshaller _instance;
    public static ScopeDoesNotExistExceptionUnmarshaller Instance { get; }
    private static ScopeDoesNotExistExceptionUnmarshaller();
    public sealed virtual ScopeDoesNotExistException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ScopeDoesNotExistException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ScopeDoesNotExistExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetLogDeliveryConfigurationRequestMarshaller : object {
    private static SetLogDeliveryConfigurationRequestMarshaller _instance;
    public static SetLogDeliveryConfigurationRequestMarshaller Instance { get; }
    private static SetLogDeliveryConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetLogDeliveryConfigurationRequest publicRequest);
    internal static SetLogDeliveryConfigurationRequestMarshaller GetInstance();
    public static SetLogDeliveryConfigurationRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetLogDeliveryConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetLogDeliveryConfigurationResponseUnmarshaller _instance;
    public static SetLogDeliveryConfigurationResponseUnmarshaller Instance { get; }
    private static SetLogDeliveryConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetLogDeliveryConfigurationResponseUnmarshaller GetInstance();
    public static SetLogDeliveryConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetRiskConfigurationRequestMarshaller : object {
    private static SetRiskConfigurationRequestMarshaller _instance;
    public static SetRiskConfigurationRequestMarshaller Instance { get; }
    private static SetRiskConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetRiskConfigurationRequest publicRequest);
    internal static SetRiskConfigurationRequestMarshaller GetInstance();
    public static SetRiskConfigurationRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetRiskConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetRiskConfigurationResponseUnmarshaller _instance;
    public static SetRiskConfigurationResponseUnmarshaller Instance { get; }
    private static SetRiskConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetRiskConfigurationResponseUnmarshaller GetInstance();
    public static SetRiskConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUICustomizationRequestMarshaller : object {
    private static SetUICustomizationRequestMarshaller _instance;
    public static SetUICustomizationRequestMarshaller Instance { get; }
    private static SetUICustomizationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetUICustomizationRequest publicRequest);
    internal static SetUICustomizationRequestMarshaller GetInstance();
    public static SetUICustomizationRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUICustomizationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetUICustomizationResponseUnmarshaller _instance;
    public static SetUICustomizationResponseUnmarshaller Instance { get; }
    private static SetUICustomizationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetUICustomizationResponseUnmarshaller GetInstance();
    public static SetUICustomizationResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserMFAPreferenceRequestMarshaller : object {
    private static SetUserMFAPreferenceRequestMarshaller _instance;
    public static SetUserMFAPreferenceRequestMarshaller Instance { get; }
    private static SetUserMFAPreferenceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetUserMFAPreferenceRequest publicRequest);
    internal static SetUserMFAPreferenceRequestMarshaller GetInstance();
    public static SetUserMFAPreferenceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserMFAPreferenceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetUserMFAPreferenceResponseUnmarshaller _instance;
    public static SetUserMFAPreferenceResponseUnmarshaller Instance { get; }
    private static SetUserMFAPreferenceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetUserMFAPreferenceResponseUnmarshaller GetInstance();
    public static SetUserMFAPreferenceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserPoolMfaConfigRequestMarshaller : object {
    private static SetUserPoolMfaConfigRequestMarshaller _instance;
    public static SetUserPoolMfaConfigRequestMarshaller Instance { get; }
    private static SetUserPoolMfaConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetUserPoolMfaConfigRequest publicRequest);
    internal static SetUserPoolMfaConfigRequestMarshaller GetInstance();
    public static SetUserPoolMfaConfigRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserPoolMfaConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetUserPoolMfaConfigResponseUnmarshaller _instance;
    public static SetUserPoolMfaConfigResponseUnmarshaller Instance { get; }
    private static SetUserPoolMfaConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetUserPoolMfaConfigResponseUnmarshaller GetInstance();
    public static SetUserPoolMfaConfigResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsRequestMarshaller : object {
    private static SetUserSettingsRequestMarshaller _instance;
    public static SetUserSettingsRequestMarshaller Instance { get; }
    private static SetUserSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetUserSettingsRequest publicRequest);
    internal static SetUserSettingsRequestMarshaller GetInstance();
    public static SetUserSettingsRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetUserSettingsResponseUnmarshaller _instance;
    public static SetUserSettingsResponseUnmarshaller Instance { get; }
    private static SetUserSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetUserSettingsResponseUnmarshaller GetInstance();
    public static SetUserSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpRequestMarshaller : object {
    private static SignUpRequestMarshaller _instance;
    public static SignUpRequestMarshaller Instance { get; }
    private static SignUpRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SignUpRequest publicRequest);
    internal static SignUpRequestMarshaller GetInstance();
    public static SignUpRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SignUpResponseUnmarshaller _instance;
    public static SignUpResponseUnmarshaller Instance { get; }
    private static SignUpResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SignUpResponseUnmarshaller GetInstance();
    public static SignUpResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeMarshaller : object {
    public static SmsConfigurationTypeMarshaller Instance;
    private static SmsConfigurationTypeMarshaller();
    public sealed virtual void Marshall(SmsConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeUnmarshaller : object {
    private static SmsConfigurationTypeUnmarshaller _instance;
    public static SmsConfigurationTypeUnmarshaller Instance { get; }
    private static SmsConfigurationTypeUnmarshaller();
    private sealed virtual override SmsConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.SmsConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SmsConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static SmsConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsMfaConfigTypeMarshaller : object {
    public static SmsMfaConfigTypeMarshaller Instance;
    private static SmsMfaConfigTypeMarshaller();
    public sealed virtual void Marshall(SmsMfaConfigType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsMfaConfigTypeUnmarshaller : object {
    private static SmsMfaConfigTypeUnmarshaller _instance;
    public static SmsMfaConfigTypeUnmarshaller Instance { get; }
    private static SmsMfaConfigTypeUnmarshaller();
    private sealed virtual override SmsMfaConfigType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.SmsMfaConfigType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SmsMfaConfigType Unmarshall(JsonUnmarshallerContext context);
    public static SmsMfaConfigTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SMSMfaSettingsTypeMarshaller : object {
    public static SMSMfaSettingsTypeMarshaller Instance;
    private static SMSMfaSettingsTypeMarshaller();
    public sealed virtual void Marshall(SMSMfaSettingsType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaConfigTypeMarshaller : object {
    public static SoftwareTokenMfaConfigTypeMarshaller Instance;
    private static SoftwareTokenMfaConfigTypeMarshaller();
    public sealed virtual void Marshall(SoftwareTokenMfaConfigType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaConfigTypeUnmarshaller : object {
    private static SoftwareTokenMfaConfigTypeUnmarshaller _instance;
    public static SoftwareTokenMfaConfigTypeUnmarshaller Instance { get; }
    private static SoftwareTokenMfaConfigTypeUnmarshaller();
    private sealed virtual override SoftwareTokenMfaConfigType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.SoftwareTokenMfaConfigType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SoftwareTokenMfaConfigType Unmarshall(JsonUnmarshallerContext context);
    public static SoftwareTokenMfaConfigTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMFANotFoundExceptionUnmarshaller : object {
    private static SoftwareTokenMFANotFoundExceptionUnmarshaller _instance;
    public static SoftwareTokenMFANotFoundExceptionUnmarshaller Instance { get; }
    private static SoftwareTokenMFANotFoundExceptionUnmarshaller();
    public sealed virtual SoftwareTokenMFANotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SoftwareTokenMFANotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SoftwareTokenMFANotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaSettingsTypeMarshaller : object {
    public static SoftwareTokenMfaSettingsTypeMarshaller Instance;
    private static SoftwareTokenMfaSettingsTypeMarshaller();
    public sealed virtual void Marshall(SoftwareTokenMfaSettingsType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobRequestMarshaller : object {
    private static StartUserImportJobRequestMarshaller _instance;
    public static StartUserImportJobRequestMarshaller Instance { get; }
    private static StartUserImportJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartUserImportJobRequest publicRequest);
    internal static StartUserImportJobRequestMarshaller GetInstance();
    public static StartUserImportJobRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartUserImportJobResponseUnmarshaller _instance;
    public static StartUserImportJobResponseUnmarshaller Instance { get; }
    private static StartUserImportJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartUserImportJobResponseUnmarshaller GetInstance();
    public static StartUserImportJobResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobRequestMarshaller : object {
    private static StopUserImportJobRequestMarshaller _instance;
    public static StopUserImportJobRequestMarshaller Instance { get; }
    private static StopUserImportJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopUserImportJobRequest publicRequest);
    internal static StopUserImportJobRequestMarshaller GetInstance();
    public static StopUserImportJobRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopUserImportJobResponseUnmarshaller _instance;
    public static StopUserImportJobResponseUnmarshaller Instance { get; }
    private static StopUserImportJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopUserImportJobResponseUnmarshaller GetInstance();
    public static StopUserImportJobResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeMarshaller : object {
    public static StringAttributeConstraintsTypeMarshaller Instance;
    private static StringAttributeConstraintsTypeMarshaller();
    public sealed virtual void Marshall(StringAttributeConstraintsType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeUnmarshaller : object {
    private static StringAttributeConstraintsTypeUnmarshaller _instance;
    public static StringAttributeConstraintsTypeUnmarshaller Instance { get; }
    private static StringAttributeConstraintsTypeUnmarshaller();
    private sealed virtual override StringAttributeConstraintsType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.StringAttributeConstraintsType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StringAttributeConstraintsType Unmarshall(JsonUnmarshallerContext context);
    public static StringAttributeConstraintsTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TokenValidityUnitsTypeMarshaller : object {
    public static TokenValidityUnitsTypeMarshaller Instance;
    private static TokenValidityUnitsTypeMarshaller();
    public sealed virtual void Marshall(TokenValidityUnitsType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TokenValidityUnitsTypeUnmarshaller : object {
    private static TokenValidityUnitsTypeUnmarshaller _instance;
    public static TokenValidityUnitsTypeUnmarshaller Instance { get; }
    private static TokenValidityUnitsTypeUnmarshaller();
    private sealed virtual override TokenValidityUnitsType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.TokenValidityUnitsType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TokenValidityUnitsType Unmarshall(JsonUnmarshallerContext context);
    public static TokenValidityUnitsTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TooManyFailedAttemptsExceptionUnmarshaller : object {
    private static TooManyFailedAttemptsExceptionUnmarshaller _instance;
    public static TooManyFailedAttemptsExceptionUnmarshaller Instance { get; }
    private static TooManyFailedAttemptsExceptionUnmarshaller();
    public sealed virtual TooManyFailedAttemptsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyFailedAttemptsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyFailedAttemptsExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller : object {
    private static TooManyRequestsExceptionUnmarshaller _instance;
    public static TooManyRequestsExceptionUnmarshaller Instance { get; }
    private static TooManyRequestsExceptionUnmarshaller();
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TooManyRequestsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TooManyRequestsExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UICustomizationTypeUnmarshaller : object {
    private static UICustomizationTypeUnmarshaller _instance;
    public static UICustomizationTypeUnmarshaller Instance { get; }
    private static UICustomizationTypeUnmarshaller();
    private sealed virtual override UICustomizationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UICustomizationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UICustomizationType Unmarshall(JsonUnmarshallerContext context);
    public static UICustomizationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller : object {
    private static UnauthorizedExceptionUnmarshaller _instance;
    public static UnauthorizedExceptionUnmarshaller Instance { get; }
    private static UnauthorizedExceptionUnmarshaller();
    public sealed virtual UnauthorizedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnauthorizedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnauthorizedExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnexpectedLambdaExceptionUnmarshaller : object {
    private static UnexpectedLambdaExceptionUnmarshaller _instance;
    public static UnexpectedLambdaExceptionUnmarshaller Instance { get; }
    private static UnexpectedLambdaExceptionUnmarshaller();
    public sealed virtual UnexpectedLambdaException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnexpectedLambdaException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnexpectedLambdaExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedIdentityProviderExceptionUnmarshaller : object {
    private static UnsupportedIdentityProviderExceptionUnmarshaller _instance;
    public static UnsupportedIdentityProviderExceptionUnmarshaller Instance { get; }
    private static UnsupportedIdentityProviderExceptionUnmarshaller();
    public sealed virtual UnsupportedIdentityProviderException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedIdentityProviderException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedIdentityProviderExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedOperationExceptionUnmarshaller : object {
    private static UnsupportedOperationExceptionUnmarshaller _instance;
    public static UnsupportedOperationExceptionUnmarshaller Instance { get; }
    private static UnsupportedOperationExceptionUnmarshaller();
    public sealed virtual UnsupportedOperationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedOperationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedOperationExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedTokenTypeExceptionUnmarshaller : object {
    private static UnsupportedTokenTypeExceptionUnmarshaller _instance;
    public static UnsupportedTokenTypeExceptionUnmarshaller Instance { get; }
    private static UnsupportedTokenTypeExceptionUnmarshaller();
    public sealed virtual UnsupportedTokenTypeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedTokenTypeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedTokenTypeExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedUserStateExceptionUnmarshaller : object {
    private static UnsupportedUserStateExceptionUnmarshaller _instance;
    public static UnsupportedUserStateExceptionUnmarshaller Instance { get; }
    private static UnsupportedUserStateExceptionUnmarshaller();
    public sealed virtual UnsupportedUserStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UnsupportedUserStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UnsupportedUserStateExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateAuthEventFeedbackRequestMarshaller : object {
    private static UpdateAuthEventFeedbackRequestMarshaller _instance;
    public static UpdateAuthEventFeedbackRequestMarshaller Instance { get; }
    private static UpdateAuthEventFeedbackRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateAuthEventFeedbackRequest publicRequest);
    internal static UpdateAuthEventFeedbackRequestMarshaller GetInstance();
    public static UpdateAuthEventFeedbackRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateAuthEventFeedbackResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateAuthEventFeedbackResponseUnmarshaller _instance;
    public static UpdateAuthEventFeedbackResponseUnmarshaller Instance { get; }
    private static UpdateAuthEventFeedbackResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateAuthEventFeedbackResponseUnmarshaller GetInstance();
    public static UpdateAuthEventFeedbackResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusRequestMarshaller : object {
    private static UpdateDeviceStatusRequestMarshaller _instance;
    public static UpdateDeviceStatusRequestMarshaller Instance { get; }
    private static UpdateDeviceStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateDeviceStatusRequest publicRequest);
    internal static UpdateDeviceStatusRequestMarshaller GetInstance();
    public static UpdateDeviceStatusRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateDeviceStatusResponseUnmarshaller _instance;
    public static UpdateDeviceStatusResponseUnmarshaller Instance { get; }
    private static UpdateDeviceStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateDeviceStatusResponseUnmarshaller GetInstance();
    public static UpdateDeviceStatusResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller : object {
    private static UpdateGroupRequestMarshaller _instance;
    public static UpdateGroupRequestMarshaller Instance { get; }
    private static UpdateGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateGroupRequest publicRequest);
    internal static UpdateGroupRequestMarshaller GetInstance();
    public static UpdateGroupRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateGroupResponseUnmarshaller _instance;
    public static UpdateGroupResponseUnmarshaller Instance { get; }
    private static UpdateGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateGroupResponseUnmarshaller GetInstance();
    public static UpdateGroupResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateIdentityProviderRequestMarshaller : object {
    private static UpdateIdentityProviderRequestMarshaller _instance;
    public static UpdateIdentityProviderRequestMarshaller Instance { get; }
    private static UpdateIdentityProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateIdentityProviderRequest publicRequest);
    internal static UpdateIdentityProviderRequestMarshaller GetInstance();
    public static UpdateIdentityProviderRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateIdentityProviderResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateIdentityProviderResponseUnmarshaller _instance;
    public static UpdateIdentityProviderResponseUnmarshaller Instance { get; }
    private static UpdateIdentityProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateIdentityProviderResponseUnmarshaller GetInstance();
    public static UpdateIdentityProviderResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateResourceServerRequestMarshaller : object {
    private static UpdateResourceServerRequestMarshaller _instance;
    public static UpdateResourceServerRequestMarshaller Instance { get; }
    private static UpdateResourceServerRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateResourceServerRequest publicRequest);
    internal static UpdateResourceServerRequestMarshaller GetInstance();
    public static UpdateResourceServerRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateResourceServerResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateResourceServerResponseUnmarshaller _instance;
    public static UpdateResourceServerResponseUnmarshaller Instance { get; }
    private static UpdateResourceServerResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateResourceServerResponseUnmarshaller GetInstance();
    public static UpdateResourceServerResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesRequestMarshaller : object {
    private static UpdateUserAttributesRequestMarshaller _instance;
    public static UpdateUserAttributesRequestMarshaller Instance { get; }
    private static UpdateUserAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateUserAttributesRequest publicRequest);
    internal static UpdateUserAttributesRequestMarshaller GetInstance();
    public static UpdateUserAttributesRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateUserAttributesResponseUnmarshaller _instance;
    public static UpdateUserAttributesResponseUnmarshaller Instance { get; }
    private static UpdateUserAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateUserAttributesResponseUnmarshaller GetInstance();
    public static UpdateUserAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientRequestMarshaller : object {
    private static UpdateUserPoolClientRequestMarshaller _instance;
    public static UpdateUserPoolClientRequestMarshaller Instance { get; }
    private static UpdateUserPoolClientRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateUserPoolClientRequest publicRequest);
    internal static UpdateUserPoolClientRequestMarshaller GetInstance();
    public static UpdateUserPoolClientRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateUserPoolClientResponseUnmarshaller _instance;
    public static UpdateUserPoolClientResponseUnmarshaller Instance { get; }
    private static UpdateUserPoolClientResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateUserPoolClientResponseUnmarshaller GetInstance();
    public static UpdateUserPoolClientResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolDomainRequestMarshaller : object {
    private static UpdateUserPoolDomainRequestMarshaller _instance;
    public static UpdateUserPoolDomainRequestMarshaller Instance { get; }
    private static UpdateUserPoolDomainRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateUserPoolDomainRequest publicRequest);
    internal static UpdateUserPoolDomainRequestMarshaller GetInstance();
    public static UpdateUserPoolDomainRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolDomainResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateUserPoolDomainResponseUnmarshaller _instance;
    public static UpdateUserPoolDomainResponseUnmarshaller Instance { get; }
    private static UpdateUserPoolDomainResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateUserPoolDomainResponseUnmarshaller GetInstance();
    public static UpdateUserPoolDomainResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolRequestMarshaller : object {
    private static UpdateUserPoolRequestMarshaller _instance;
    public static UpdateUserPoolRequestMarshaller Instance { get; }
    private static UpdateUserPoolRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateUserPoolRequest publicRequest);
    internal static UpdateUserPoolRequestMarshaller GetInstance();
    public static UpdateUserPoolRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateUserPoolResponseUnmarshaller _instance;
    public static UpdateUserPoolResponseUnmarshaller Instance { get; }
    private static UpdateUserPoolResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateUserPoolResponseUnmarshaller GetInstance();
    public static UpdateUserPoolResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserAttributeUpdateSettingsTypeMarshaller : object {
    public static UserAttributeUpdateSettingsTypeMarshaller Instance;
    private static UserAttributeUpdateSettingsTypeMarshaller();
    public sealed virtual void Marshall(UserAttributeUpdateSettingsType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserAttributeUpdateSettingsTypeUnmarshaller : object {
    private static UserAttributeUpdateSettingsTypeUnmarshaller _instance;
    public static UserAttributeUpdateSettingsTypeUnmarshaller Instance { get; }
    private static UserAttributeUpdateSettingsTypeUnmarshaller();
    private sealed virtual override UserAttributeUpdateSettingsType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UserAttributeUpdateSettingsType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserAttributeUpdateSettingsType Unmarshall(JsonUnmarshallerContext context);
    public static UserAttributeUpdateSettingsTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserContextDataTypeMarshaller : object {
    public static UserContextDataTypeMarshaller Instance;
    private static UserContextDataTypeMarshaller();
    public sealed virtual void Marshall(UserContextDataType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportInProgressExceptionUnmarshaller : object {
    private static UserImportInProgressExceptionUnmarshaller _instance;
    public static UserImportInProgressExceptionUnmarshaller Instance { get; }
    private static UserImportInProgressExceptionUnmarshaller();
    public sealed virtual UserImportInProgressException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UserImportInProgressException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UserImportInProgressExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportJobTypeUnmarshaller : object {
    private static UserImportJobTypeUnmarshaller _instance;
    public static UserImportJobTypeUnmarshaller Instance { get; }
    private static UserImportJobTypeUnmarshaller();
    private sealed virtual override UserImportJobType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UserImportJobType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserImportJobType Unmarshall(JsonUnmarshallerContext context);
    public static UserImportJobTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserLambdaValidationExceptionUnmarshaller : object {
    private static UserLambdaValidationExceptionUnmarshaller _instance;
    public static UserLambdaValidationExceptionUnmarshaller Instance { get; }
    private static UserLambdaValidationExceptionUnmarshaller();
    public sealed virtual UserLambdaValidationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UserLambdaValidationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UserLambdaValidationExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameConfigurationTypeMarshaller : object {
    public static UsernameConfigurationTypeMarshaller Instance;
    private static UsernameConfigurationTypeMarshaller();
    public sealed virtual void Marshall(UsernameConfigurationType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameConfigurationTypeUnmarshaller : object {
    private static UsernameConfigurationTypeUnmarshaller _instance;
    public static UsernameConfigurationTypeUnmarshaller Instance { get; }
    private static UsernameConfigurationTypeUnmarshaller();
    private sealed virtual override UsernameConfigurationType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UsernameConfigurationType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UsernameConfigurationType Unmarshall(JsonUnmarshallerContext context);
    public static UsernameConfigurationTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameExistsExceptionUnmarshaller : object {
    private static UsernameExistsExceptionUnmarshaller _instance;
    public static UsernameExistsExceptionUnmarshaller Instance { get; }
    private static UsernameExistsExceptionUnmarshaller();
    public sealed virtual UsernameExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UsernameExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UsernameExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserNotConfirmedExceptionUnmarshaller : object {
    private static UserNotConfirmedExceptionUnmarshaller _instance;
    public static UserNotConfirmedExceptionUnmarshaller Instance { get; }
    private static UserNotConfirmedExceptionUnmarshaller();
    public sealed virtual UserNotConfirmedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UserNotConfirmedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UserNotConfirmedExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserNotFoundExceptionUnmarshaller : object {
    private static UserNotFoundExceptionUnmarshaller _instance;
    public static UserNotFoundExceptionUnmarshaller Instance { get; }
    private static UserNotFoundExceptionUnmarshaller();
    public sealed virtual UserNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UserNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UserNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnNotEnabledExceptionUnmarshaller : object {
    private static UserPoolAddOnNotEnabledExceptionUnmarshaller _instance;
    public static UserPoolAddOnNotEnabledExceptionUnmarshaller Instance { get; }
    private static UserPoolAddOnNotEnabledExceptionUnmarshaller();
    public sealed virtual UserPoolAddOnNotEnabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UserPoolAddOnNotEnabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UserPoolAddOnNotEnabledExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnsTypeMarshaller : object {
    public static UserPoolAddOnsTypeMarshaller Instance;
    private static UserPoolAddOnsTypeMarshaller();
    public sealed virtual void Marshall(UserPoolAddOnsType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnsTypeUnmarshaller : object {
    private static UserPoolAddOnsTypeUnmarshaller _instance;
    public static UserPoolAddOnsTypeUnmarshaller Instance { get; }
    private static UserPoolAddOnsTypeUnmarshaller();
    private sealed virtual override UserPoolAddOnsType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UserPoolAddOnsType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserPoolAddOnsType Unmarshall(JsonUnmarshallerContext context);
    public static UserPoolAddOnsTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientDescriptionUnmarshaller : object {
    private static UserPoolClientDescriptionUnmarshaller _instance;
    public static UserPoolClientDescriptionUnmarshaller Instance { get; }
    private static UserPoolClientDescriptionUnmarshaller();
    private sealed virtual override UserPoolClientDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UserPoolClientDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserPoolClientDescription Unmarshall(JsonUnmarshallerContext context);
    public static UserPoolClientDescriptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientTypeUnmarshaller : object {
    private static UserPoolClientTypeUnmarshaller _instance;
    public static UserPoolClientTypeUnmarshaller Instance { get; }
    private static UserPoolClientTypeUnmarshaller();
    private sealed virtual override UserPoolClientType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UserPoolClientType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserPoolClientType Unmarshall(JsonUnmarshallerContext context);
    public static UserPoolClientTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolDescriptionTypeUnmarshaller : object {
    private static UserPoolDescriptionTypeUnmarshaller _instance;
    public static UserPoolDescriptionTypeUnmarshaller Instance { get; }
    private static UserPoolDescriptionTypeUnmarshaller();
    private sealed virtual override UserPoolDescriptionType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserPoolDescriptionType Unmarshall(JsonUnmarshallerContext context);
    public static UserPoolDescriptionTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeMarshaller : object {
    public static UserPoolPolicyTypeMarshaller Instance;
    private static UserPoolPolicyTypeMarshaller();
    public sealed virtual void Marshall(UserPoolPolicyType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeUnmarshaller : object {
    private static UserPoolPolicyTypeUnmarshaller _instance;
    public static UserPoolPolicyTypeUnmarshaller Instance { get; }
    private static UserPoolPolicyTypeUnmarshaller();
    private sealed virtual override UserPoolPolicyType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UserPoolPolicyType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserPoolPolicyType Unmarshall(JsonUnmarshallerContext context);
    public static UserPoolPolicyTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTaggingExceptionUnmarshaller : object {
    private static UserPoolTaggingExceptionUnmarshaller _instance;
    public static UserPoolTaggingExceptionUnmarshaller Instance { get; }
    private static UserPoolTaggingExceptionUnmarshaller();
    public sealed virtual UserPoolTaggingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UserPoolTaggingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UserPoolTaggingExceptionUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTypeUnmarshaller : object {
    private static UserPoolTypeUnmarshaller _instance;
    public static UserPoolTypeUnmarshaller Instance { get; }
    private static UserPoolTypeUnmarshaller();
    private sealed virtual override UserPoolType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UserPoolType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserPoolType Unmarshall(JsonUnmarshallerContext context);
    public static UserPoolTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserTypeUnmarshaller : object {
    private static UserTypeUnmarshaller _instance;
    public static UserTypeUnmarshaller Instance { get; }
    private static UserTypeUnmarshaller();
    private sealed virtual override UserType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.UserType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UserType Unmarshall(JsonUnmarshallerContext context);
    public static UserTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerificationMessageTemplateTypeMarshaller : object {
    public static VerificationMessageTemplateTypeMarshaller Instance;
    private static VerificationMessageTemplateTypeMarshaller();
    public sealed virtual void Marshall(VerificationMessageTemplateType requestObject, JsonMarshallerContext context);
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerificationMessageTemplateTypeUnmarshaller : object {
    private static VerificationMessageTemplateTypeUnmarshaller _instance;
    public static VerificationMessageTemplateTypeUnmarshaller Instance { get; }
    private static VerificationMessageTemplateTypeUnmarshaller();
    private sealed virtual override VerificationMessageTemplateType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.CognitoIdentityProvider.Model.VerificationMessageTemplateType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VerificationMessageTemplateType Unmarshall(JsonUnmarshallerContext context);
    public static VerificationMessageTemplateTypeUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifySoftwareTokenRequestMarshaller : object {
    private static VerifySoftwareTokenRequestMarshaller _instance;
    public static VerifySoftwareTokenRequestMarshaller Instance { get; }
    private static VerifySoftwareTokenRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(VerifySoftwareTokenRequest publicRequest);
    internal static VerifySoftwareTokenRequestMarshaller GetInstance();
    public static VerifySoftwareTokenRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifySoftwareTokenResponseUnmarshaller : JsonResponseUnmarshaller {
    private static VerifySoftwareTokenResponseUnmarshaller _instance;
    public static VerifySoftwareTokenResponseUnmarshaller Instance { get; }
    private static VerifySoftwareTokenResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static VerifySoftwareTokenResponseUnmarshaller GetInstance();
    public static VerifySoftwareTokenResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeRequestMarshaller : object {
    private static VerifyUserAttributeRequestMarshaller _instance;
    public static VerifyUserAttributeRequestMarshaller Instance { get; }
    private static VerifyUserAttributeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(VerifyUserAttributeRequest publicRequest);
    internal static VerifyUserAttributeRequestMarshaller GetInstance();
    public static VerifyUserAttributeRequestMarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static VerifyUserAttributeResponseUnmarshaller _instance;
    public static VerifyUserAttributeResponseUnmarshaller Instance { get; }
    private static VerifyUserAttributeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static VerifyUserAttributeResponseUnmarshaller GetInstance();
    public static VerifyUserAttributeResponseUnmarshaller get_Instance();
}
public class Amazon.CognitoIdentityProvider.Model.InternalErrorException : AmazonCognitoIdentityProviderException {
    public InternalErrorException(string message);
    public InternalErrorException(string message, Exception innerException);
    public InternalErrorException(Exception innerException);
    public InternalErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException : AmazonCognitoIdentityProviderException {
    public InvalidEmailRoleAccessPolicyException(string message);
    public InvalidEmailRoleAccessPolicyException(string message, Exception innerException);
    public InvalidEmailRoleAccessPolicyException(Exception innerException);
    public InvalidEmailRoleAccessPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidEmailRoleAccessPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException : AmazonCognitoIdentityProviderException {
    public InvalidLambdaResponseException(string message);
    public InvalidLambdaResponseException(string message, Exception innerException);
    public InvalidLambdaResponseException(Exception innerException);
    public InvalidLambdaResponseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidLambdaResponseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException : AmazonCognitoIdentityProviderException {
    public InvalidOAuthFlowException(string message);
    public InvalidOAuthFlowException(string message, Exception innerException);
    public InvalidOAuthFlowException(Exception innerException);
    public InvalidOAuthFlowException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOAuthFlowException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.InvalidParameterException : AmazonCognitoIdentityProviderException {
    public InvalidParameterException(string message);
    public InvalidParameterException(string message, Exception innerException);
    public InvalidParameterException(Exception innerException);
    public InvalidParameterException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.InvalidPasswordException : AmazonCognitoIdentityProviderException {
    public InvalidPasswordException(string message);
    public InvalidPasswordException(string message, Exception innerException);
    public InvalidPasswordException(Exception innerException);
    public InvalidPasswordException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidPasswordException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException : AmazonCognitoIdentityProviderException {
    public InvalidSmsRoleAccessPolicyException(string message);
    public InvalidSmsRoleAccessPolicyException(string message, Exception innerException);
    public InvalidSmsRoleAccessPolicyException(Exception innerException);
    public InvalidSmsRoleAccessPolicyException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSmsRoleAccessPolicyException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException : AmazonCognitoIdentityProviderException {
    public InvalidSmsRoleTrustRelationshipException(string message);
    public InvalidSmsRoleTrustRelationshipException(string message, Exception innerException);
    public InvalidSmsRoleTrustRelationshipException(Exception innerException);
    public InvalidSmsRoleTrustRelationshipException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSmsRoleTrustRelationshipException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException : AmazonCognitoIdentityProviderException {
    public InvalidUserPoolConfigurationException(string message);
    public InvalidUserPoolConfigurationException(string message, Exception innerException);
    public InvalidUserPoolConfigurationException(Exception innerException);
    public InvalidUserPoolConfigurationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidUserPoolConfigurationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.LambdaConfigType : object {
    private string _createAuthChallenge;
    private CustomEmailLambdaVersionConfigType _customEmailSender;
    private string _customMessage;
    private CustomSMSLambdaVersionConfigType _customSMSSender;
    private string _defineAuthChallenge;
    private string _kmsKeyID;
    private string _postAuthentication;
    private string _postConfirmation;
    private string _preAuthentication;
    private string _preSignUp;
    private string _preTokenGeneration;
    private PreTokenGenerationVersionConfigType _preTokenGenerationConfig;
    private string _userMigration;
    private string _verifyAuthChallengeResponse;
    [AWSPropertyAttribute]
public string CreateAuthChallenge { get; public set; }
    public CustomEmailLambdaVersionConfigType CustomEmailSender { get; public set; }
    [AWSPropertyAttribute]
public string CustomMessage { get; public set; }
    public CustomSMSLambdaVersionConfigType CustomSMSSender { get; public set; }
    [AWSPropertyAttribute]
public string DefineAuthChallenge { get; public set; }
    [AWSPropertyAttribute]
public string KMSKeyID { get; public set; }
    [AWSPropertyAttribute]
public string PostAuthentication { get; public set; }
    [AWSPropertyAttribute]
public string PostConfirmation { get; public set; }
    [AWSPropertyAttribute]
public string PreAuthentication { get; public set; }
    [AWSPropertyAttribute]
public string PreSignUp { get; public set; }
    [AWSPropertyAttribute]
public string PreTokenGeneration { get; public set; }
    public PreTokenGenerationVersionConfigType PreTokenGenerationConfig { get; public set; }
    [AWSPropertyAttribute]
public string UserMigration { get; public set; }
    [AWSPropertyAttribute]
public string VerifyAuthChallengeResponse { get; public set; }
    public string get_CreateAuthChallenge();
    public void set_CreateAuthChallenge(string value);
    internal bool IsSetCreateAuthChallenge();
    public CustomEmailLambdaVersionConfigType get_CustomEmailSender();
    public void set_CustomEmailSender(CustomEmailLambdaVersionConfigType value);
    internal bool IsSetCustomEmailSender();
    public string get_CustomMessage();
    public void set_CustomMessage(string value);
    internal bool IsSetCustomMessage();
    public CustomSMSLambdaVersionConfigType get_CustomSMSSender();
    public void set_CustomSMSSender(CustomSMSLambdaVersionConfigType value);
    internal bool IsSetCustomSMSSender();
    public string get_DefineAuthChallenge();
    public void set_DefineAuthChallenge(string value);
    internal bool IsSetDefineAuthChallenge();
    public string get_KMSKeyID();
    public void set_KMSKeyID(string value);
    internal bool IsSetKMSKeyID();
    public string get_PostAuthentication();
    public void set_PostAuthentication(string value);
    internal bool IsSetPostAuthentication();
    public string get_PostConfirmation();
    public void set_PostConfirmation(string value);
    internal bool IsSetPostConfirmation();
    public string get_PreAuthentication();
    public void set_PreAuthentication(string value);
    internal bool IsSetPreAuthentication();
    public string get_PreSignUp();
    public void set_PreSignUp(string value);
    internal bool IsSetPreSignUp();
    public string get_PreTokenGeneration();
    public void set_PreTokenGeneration(string value);
    internal bool IsSetPreTokenGeneration();
    public PreTokenGenerationVersionConfigType get_PreTokenGenerationConfig();
    public void set_PreTokenGenerationConfig(PreTokenGenerationVersionConfigType value);
    internal bool IsSetPreTokenGenerationConfig();
    public string get_UserMigration();
    public void set_UserMigration(string value);
    internal bool IsSetUserMigration();
    public string get_VerifyAuthChallengeResponse();
    public void set_VerifyAuthChallengeResponse(string value);
    internal bool IsSetVerifyAuthChallengeResponse();
}
public class Amazon.CognitoIdentityProvider.Model.LimitExceededException : AmazonCognitoIdentityProviderException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.ListDevicesRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private Nullable`1<int> _limit;
    private string _paginationToken;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string PaginationToken { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_PaginationToken();
    public void set_PaginationToken(string value);
    internal bool IsSetPaginationToken();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.ListDevicesResponse : AmazonWebServiceResponse {
    private List`1<DeviceType> _devices;
    private string _paginationToken;
    public List`1<DeviceType> Devices { get; public set; }
    [AWSPropertyAttribute]
public string PaginationToken { get; public set; }
    public List`1<DeviceType> get_Devices();
    public void set_Devices(List`1<DeviceType> value);
    internal bool IsSetDevices();
    public string get_PaginationToken();
    public void set_PaginationToken(string value);
    internal bool IsSetPaginationToken();
}
internal class Amazon.CognitoIdentityProvider.Model.ListGroupsPaginator : object {
    private IAmazonCognitoIdentityProvider _client;
    private ListGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListGroupsResponse> Responses { get; }
    public IPaginatedEnumerable`1<GroupType> Groups { get; }
    internal ListGroupsPaginator(IAmazonCognitoIdentityProvider client, ListGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListGroupsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<GroupType> get_Groups();
    [AsyncIteratorStateMachineAttribute("Amazon.CognitoIdentityProvider.Model.ListGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-CognitoIdentityProvider-Model-ListGroupsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListGroupsResponse> Amazon.Runtime.IPaginator<Amazon.CognitoIdentityProvider.Model.ListGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentityProvider.Model.ListGroupsRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _limit;
    private string _nextToken;
    private string _userPoolId;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.ListGroupsResponse : AmazonWebServiceResponse {
    private List`1<GroupType> _groups;
    private string _nextToken;
    public List`1<GroupType> Groups { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<GroupType> get_Groups();
    public void set_Groups(List`1<GroupType> value);
    internal bool IsSetGroups();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersPaginator : object {
    private IAmazonCognitoIdentityProvider _client;
    private ListIdentityProvidersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListIdentityProvidersResponse> Responses { get; }
    public IPaginatedEnumerable`1<ProviderDescription> Providers { get; }
    internal ListIdentityProvidersPaginator(IAmazonCognitoIdentityProvider client, ListIdentityProvidersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListIdentityProvidersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ProviderDescription> get_Providers();
    [AsyncIteratorStateMachineAttribute("Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersPaginator/<Amazon-Runtime-IPaginator<Amazon-CognitoIdentityProvider-Model-ListIdentityProvidersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListIdentityProvidersResponse> Amazon.Runtime.IPaginator<Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _userPoolId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ProviderDescription> _providers;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<ProviderDescription> Providers { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ProviderDescription> get_Providers();
    public void set_Providers(List`1<ProviderDescription> value);
    internal bool IsSetProviders();
}
internal class Amazon.CognitoIdentityProvider.Model.ListResourceServersPaginator : object {
    private IAmazonCognitoIdentityProvider _client;
    private ListResourceServersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListResourceServersResponse> Responses { get; }
    public IPaginatedEnumerable`1<ResourceServerType> ResourceServers { get; }
    internal ListResourceServersPaginator(IAmazonCognitoIdentityProvider client, ListResourceServersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListResourceServersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<ResourceServerType> get_ResourceServers();
    [AsyncIteratorStateMachineAttribute("Amazon.CognitoIdentityProvider.Model.ListResourceServersPaginator/<Amazon-Runtime-IPaginator<Amazon-CognitoIdentityProvider-Model-ListResourceServersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListResourceServersResponse> Amazon.Runtime.IPaginator<Amazon.CognitoIdentityProvider.Model.ListResourceServersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _userPoolId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.ListResourceServersResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<ResourceServerType> _resourceServers;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<ResourceServerType> ResourceServers { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<ResourceServerType> get_ResourceServers();
    public void set_ResourceServers(List`1<ResourceServerType> value);
    internal bool IsSetResourceServers();
}
public class Amazon.CognitoIdentityProvider.Model.ListTagsForResourceRequest : AmazonCognitoIdentityProviderRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.CognitoIdentityProvider.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _maxResults;
    private string _paginationToken;
    private string _userPoolId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string PaginationToken { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_PaginationToken();
    public void set_PaginationToken(string value);
    internal bool IsSetPaginationToken();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.ListUserImportJobsResponse : AmazonWebServiceResponse {
    private string _paginationToken;
    private List`1<UserImportJobType> _userImportJobs;
    [AWSPropertyAttribute]
public string PaginationToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<UserImportJobType> UserImportJobs { get; public set; }
    public string get_PaginationToken();
    public void set_PaginationToken(string value);
    internal bool IsSetPaginationToken();
    public List`1<UserImportJobType> get_UserImportJobs();
    public void set_UserImportJobs(List`1<UserImportJobType> value);
    internal bool IsSetUserImportJobs();
}
internal class Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsPaginator : object {
    private IAmazonCognitoIdentityProvider _client;
    private ListUserPoolClientsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListUserPoolClientsResponse> Responses { get; }
    public IPaginatedEnumerable`1<UserPoolClientDescription> UserPoolClients { get; }
    internal ListUserPoolClientsPaginator(IAmazonCognitoIdentityProvider client, ListUserPoolClientsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListUserPoolClientsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<UserPoolClientDescription> get_UserPoolClients();
    [AsyncIteratorStateMachineAttribute("Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsPaginator/<Amazon-Runtime-IPaginator<Amazon-CognitoIdentityProvider-Model-ListUserPoolClientsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListUserPoolClientsResponse> Amazon.Runtime.IPaginator<Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _userPoolId;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<UserPoolClientDescription> _userPoolClients;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<UserPoolClientDescription> UserPoolClients { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<UserPoolClientDescription> get_UserPoolClients();
    public void set_UserPoolClients(List`1<UserPoolClientDescription> value);
    internal bool IsSetUserPoolClients();
}
internal class Amazon.CognitoIdentityProvider.Model.ListUserPoolsPaginator : object {
    private IAmazonCognitoIdentityProvider _client;
    private ListUserPoolsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListUserPoolsResponse> Responses { get; }
    public IPaginatedEnumerable`1<UserPoolDescriptionType> UserPools { get; }
    internal ListUserPoolsPaginator(IAmazonCognitoIdentityProvider client, ListUserPoolsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListUserPoolsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<UserPoolDescriptionType> get_UserPools();
    [AsyncIteratorStateMachineAttribute("Amazon.CognitoIdentityProvider.Model.ListUserPoolsPaginator/<Amazon-Runtime-IPaginator<Amazon-CognitoIdentityProvider-Model-ListUserPoolsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListUserPoolsResponse> Amazon.Runtime.IPaginator<Amazon.CognitoIdentityProvider.Model.ListUserPoolsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.CognitoIdentityProvider.Model.ListUserPoolsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<UserPoolDescriptionType> _userPools;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<UserPoolDescriptionType> UserPools { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<UserPoolDescriptionType> get_UserPools();
    public void set_UserPools(List`1<UserPoolDescriptionType> value);
    internal bool IsSetUserPools();
}
internal class Amazon.CognitoIdentityProvider.Model.ListUsersInGroupPaginator : object {
    private IAmazonCognitoIdentityProvider _client;
    private ListUsersInGroupRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListUsersInGroupResponse> Responses { get; }
    public IPaginatedEnumerable`1<UserType> Users { get; }
    internal ListUsersInGroupPaginator(IAmazonCognitoIdentityProvider client, ListUsersInGroupRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListUsersInGroupResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<UserType> get_Users();
    [AsyncIteratorStateMachineAttribute("Amazon.CognitoIdentityProvider.Model.ListUsersInGroupPaginator/<Amazon-Runtime-IPaginator<Amazon-CognitoIdentityProvider-Model-ListUsersInGroupResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListUsersInGroupResponse> Amazon.Runtime.IPaginator<Amazon.CognitoIdentityProvider.Model.ListUsersInGroupResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest : AmazonCognitoIdentityProviderRequest {
    private string _groupName;
    private Nullable`1<int> _limit;
    private string _nextToken;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.ListUsersInGroupResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<UserType> _users;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<UserType> Users { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<UserType> get_Users();
    public void set_Users(List`1<UserType> value);
    internal bool IsSetUsers();
}
internal class Amazon.CognitoIdentityProvider.Model.ListUsersPaginator : object {
    private IAmazonCognitoIdentityProvider _client;
    private ListUsersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListUsersResponse> Responses { get; }
    public IPaginatedEnumerable`1<UserType> Users { get; }
    internal ListUsersPaginator(IAmazonCognitoIdentityProvider client, ListUsersRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListUsersResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<UserType> get_Users();
    [AsyncIteratorStateMachineAttribute("Amazon.CognitoIdentityProvider.Model.ListUsersPaginator/<Amazon-Runtime-IPaginator<Amazon-CognitoIdentityProvider-Model-ListUsersResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListUsersResponse> Amazon.Runtime.IPaginator<Amazon.CognitoIdentityProvider.Model.ListUsersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.CognitoIdentityProvider.Model.ListUsersRequest : AmazonCognitoIdentityProviderRequest {
    private List`1<string> _attributesToGet;
    private string _filter;
    private Nullable`1<int> _limit;
    private string _paginationToken;
    private string _userPoolId;
    public List`1<string> AttributesToGet { get; public set; }
    [AWSPropertyAttribute]
public string Filter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string PaginationToken { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<string> get_AttributesToGet();
    public void set_AttributesToGet(List`1<string> value);
    internal bool IsSetAttributesToGet();
    public string get_Filter();
    public void set_Filter(string value);
    internal bool IsSetFilter();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_PaginationToken();
    public void set_PaginationToken(string value);
    internal bool IsSetPaginationToken();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.ListUsersResponse : AmazonWebServiceResponse {
    private string _paginationToken;
    private List`1<UserType> _users;
    [AWSPropertyAttribute]
public string PaginationToken { get; public set; }
    public List`1<UserType> Users { get; public set; }
    public string get_PaginationToken();
    public void set_PaginationToken(string value);
    internal bool IsSetPaginationToken();
    public List`1<UserType> get_Users();
    public void set_Users(List`1<UserType> value);
    internal bool IsSetUsers();
}
public class Amazon.CognitoIdentityProvider.Model.LogConfigurationType : object {
    private CloudWatchLogsConfigurationType _cloudWatchLogsConfiguration;
    private EventSourceName _eventSource;
    private LogLevel _logLevel;
    public CloudWatchLogsConfigurationType CloudWatchLogsConfiguration { get; public set; }
    [AWSPropertyAttribute]
public EventSourceName EventSource { get; public set; }
    [AWSPropertyAttribute]
public LogLevel LogLevel { get; public set; }
    public CloudWatchLogsConfigurationType get_CloudWatchLogsConfiguration();
    public void set_CloudWatchLogsConfiguration(CloudWatchLogsConfigurationType value);
    internal bool IsSetCloudWatchLogsConfiguration();
    public EventSourceName get_EventSource();
    public void set_EventSource(EventSourceName value);
    internal bool IsSetEventSource();
    public LogLevel get_LogLevel();
    public void set_LogLevel(LogLevel value);
    internal bool IsSetLogLevel();
}
public class Amazon.CognitoIdentityProvider.Model.LogDeliveryConfigurationType : object {
    private List`1<LogConfigurationType> _logConfigurations;
    private string _userPoolId;
    [AWSPropertyAttribute]
public List`1<LogConfigurationType> LogConfigurations { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<LogConfigurationType> get_LogConfigurations();
    public void set_LogConfigurations(List`1<LogConfigurationType> value);
    internal bool IsSetLogConfigurations();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.MessageTemplateType : object {
    private string _emailMessage;
    private string _emailSubject;
    private string _smsMessage;
    [AWSPropertyAttribute]
public string EmailMessage { get; public set; }
    [AWSPropertyAttribute]
public string EmailSubject { get; public set; }
    [AWSPropertyAttribute]
public string SMSMessage { get; public set; }
    public string get_EmailMessage();
    public void set_EmailMessage(string value);
    internal bool IsSetEmailMessage();
    public string get_EmailSubject();
    public void set_EmailSubject(string value);
    internal bool IsSetEmailSubject();
    public string get_SMSMessage();
    public void set_SMSMessage(string value);
    internal bool IsSetSMSMessage();
}
public class Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException : AmazonCognitoIdentityProviderException {
    public MFAMethodNotFoundException(string message);
    public MFAMethodNotFoundException(string message, Exception innerException);
    public MFAMethodNotFoundException(Exception innerException);
    public MFAMethodNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MFAMethodNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.MFAOptionType : object {
    private string _attributeName;
    private DeliveryMediumType _deliveryMedium;
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    public DeliveryMediumType DeliveryMedium { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public DeliveryMediumType get_DeliveryMedium();
    public void set_DeliveryMedium(DeliveryMediumType value);
    internal bool IsSetDeliveryMedium();
}
public class Amazon.CognitoIdentityProvider.Model.NewDeviceMetadataType : object {
    private string _deviceGroupKey;
    private string _deviceKey;
    [AWSPropertyAttribute]
public string DeviceGroupKey { get; public set; }
    [AWSPropertyAttribute]
public string DeviceKey { get; public set; }
    public string get_DeviceGroupKey();
    public void set_DeviceGroupKey(string value);
    internal bool IsSetDeviceGroupKey();
    public string get_DeviceKey();
    public void set_DeviceKey(string value);
    internal bool IsSetDeviceKey();
}
public class Amazon.CognitoIdentityProvider.Model.NotAuthorizedException : AmazonCognitoIdentityProviderException {
    public NotAuthorizedException(string message);
    public NotAuthorizedException(string message, Exception innerException);
    public NotAuthorizedException(Exception innerException);
    public NotAuthorizedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public NotAuthorizedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.NotifyConfigurationType : object {
    private NotifyEmailType _blockEmail;
    private string _from;
    private NotifyEmailType _mfaEmail;
    private NotifyEmailType _noActionEmail;
    private string _replyTo;
    private string _sourceArn;
    public NotifyEmailType BlockEmail { get; public set; }
    [AWSPropertyAttribute]
public string From { get; public set; }
    public NotifyEmailType MfaEmail { get; public set; }
    public NotifyEmailType NoActionEmail { get; public set; }
    [AWSPropertyAttribute]
public string ReplyTo { get; public set; }
    [AWSPropertyAttribute]
public string SourceArn { get; public set; }
    public NotifyEmailType get_BlockEmail();
    public void set_BlockEmail(NotifyEmailType value);
    internal bool IsSetBlockEmail();
    public string get_From();
    public void set_From(string value);
    internal bool IsSetFrom();
    public NotifyEmailType get_MfaEmail();
    public void set_MfaEmail(NotifyEmailType value);
    internal bool IsSetMfaEmail();
    public NotifyEmailType get_NoActionEmail();
    public void set_NoActionEmail(NotifyEmailType value);
    internal bool IsSetNoActionEmail();
    public string get_ReplyTo();
    public void set_ReplyTo(string value);
    internal bool IsSetReplyTo();
    public string get_SourceArn();
    public void set_SourceArn(string value);
    internal bool IsSetSourceArn();
}
public class Amazon.CognitoIdentityProvider.Model.NotifyEmailType : object {
    private string _htmlBody;
    private string _subject;
    private string _textBody;
    [AWSPropertyAttribute]
public string HtmlBody { get; public set; }
    [AWSPropertyAttribute]
public string Subject { get; public set; }
    [AWSPropertyAttribute]
public string TextBody { get; public set; }
    public string get_HtmlBody();
    public void set_HtmlBody(string value);
    internal bool IsSetHtmlBody();
    public string get_Subject();
    public void set_Subject(string value);
    internal bool IsSetSubject();
    public string get_TextBody();
    public void set_TextBody(string value);
    internal bool IsSetTextBody();
}
public class Amazon.CognitoIdentityProvider.Model.NumberAttributeConstraintsType : object {
    private string _maxValue;
    private string _minValue;
    [AWSPropertyAttribute]
public string MaxValue { get; public set; }
    [AWSPropertyAttribute]
public string MinValue { get; public set; }
    public string get_MaxValue();
    public void set_MaxValue(string value);
    internal bool IsSetMaxValue();
    public string get_MinValue();
    public void set_MinValue(string value);
    internal bool IsSetMinValue();
}
public class Amazon.CognitoIdentityProvider.Model.PasswordPolicyType : object {
    private Nullable`1<int> _minimumLength;
    private Nullable`1<bool> _requireLowercase;
    private Nullable`1<bool> _requireNumbers;
    private Nullable`1<bool> _requireSymbols;
    private Nullable`1<bool> _requireUppercase;
    private Nullable`1<int> _temporaryPasswordValidityDays;
    [AWSPropertyAttribute]
public Nullable`1<int> MinimumLength { get; public set; }
    public Nullable`1<bool> RequireLowercase { get; public set; }
    public Nullable`1<bool> RequireNumbers { get; public set; }
    public Nullable`1<bool> RequireSymbols { get; public set; }
    public Nullable`1<bool> RequireUppercase { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TemporaryPasswordValidityDays { get; public set; }
    public Nullable`1<int> get_MinimumLength();
    public void set_MinimumLength(Nullable`1<int> value);
    internal bool IsSetMinimumLength();
    public Nullable`1<bool> get_RequireLowercase();
    public void set_RequireLowercase(Nullable`1<bool> value);
    internal bool IsSetRequireLowercase();
    public Nullable`1<bool> get_RequireNumbers();
    public void set_RequireNumbers(Nullable`1<bool> value);
    internal bool IsSetRequireNumbers();
    public Nullable`1<bool> get_RequireSymbols();
    public void set_RequireSymbols(Nullable`1<bool> value);
    internal bool IsSetRequireSymbols();
    public Nullable`1<bool> get_RequireUppercase();
    public void set_RequireUppercase(Nullable`1<bool> value);
    internal bool IsSetRequireUppercase();
    public Nullable`1<int> get_TemporaryPasswordValidityDays();
    public void set_TemporaryPasswordValidityDays(Nullable`1<int> value);
    internal bool IsSetTemporaryPasswordValidityDays();
}
public class Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException : AmazonCognitoIdentityProviderException {
    public PasswordResetRequiredException(string message);
    public PasswordResetRequiredException(string message, Exception innerException);
    public PasswordResetRequiredException(Exception innerException);
    public PasswordResetRequiredException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PasswordResetRequiredException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException : AmazonCognitoIdentityProviderException {
    public PreconditionNotMetException(string message);
    public PreconditionNotMetException(string message, Exception innerException);
    public PreconditionNotMetException(Exception innerException);
    public PreconditionNotMetException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PreconditionNotMetException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.PreTokenGenerationVersionConfigType : object {
    private string _lambdaArn;
    private PreTokenGenerationLambdaVersionType _lambdaVersion;
    [AWSPropertyAttribute]
public string LambdaArn { get; public set; }
    [AWSPropertyAttribute]
public PreTokenGenerationLambdaVersionType LambdaVersion { get; public set; }
    public string get_LambdaArn();
    public void set_LambdaArn(string value);
    internal bool IsSetLambdaArn();
    public PreTokenGenerationLambdaVersionType get_LambdaVersion();
    public void set_LambdaVersion(PreTokenGenerationLambdaVersionType value);
    internal bool IsSetLambdaVersion();
}
public class Amazon.CognitoIdentityProvider.Model.ProviderDescription : object {
    private Nullable`1<DateTime> _creationDate;
    private Nullable`1<DateTime> _lastModifiedDate;
    private string _providerName;
    private IdentityProviderTypeType _providerType;
    public Nullable`1<DateTime> CreationDate { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    [AWSPropertyAttribute]
public string ProviderName { get; public set; }
    public IdentityProviderTypeType ProviderType { get; public set; }
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public string get_ProviderName();
    public void set_ProviderName(string value);
    internal bool IsSetProviderName();
    public IdentityProviderTypeType get_ProviderType();
    public void set_ProviderType(IdentityProviderTypeType value);
    internal bool IsSetProviderType();
}
public class Amazon.CognitoIdentityProvider.Model.ProviderUserIdentifierType : object {
    private string _providerAttributeName;
    private string _providerAttributeValue;
    private string _providerName;
    [AWSPropertyAttribute]
public string ProviderAttributeName { get; public set; }
    [AWSPropertyAttribute]
public string ProviderAttributeValue { get; public set; }
    [AWSPropertyAttribute]
public string ProviderName { get; public set; }
    public string get_ProviderAttributeName();
    public void set_ProviderAttributeName(string value);
    internal bool IsSetProviderAttributeName();
    public string get_ProviderAttributeValue();
    public void set_ProviderAttributeValue(string value);
    internal bool IsSetProviderAttributeValue();
    public string get_ProviderName();
    public void set_ProviderName(string value);
    internal bool IsSetProviderName();
}
public class Amazon.CognitoIdentityProvider.Model.RecoveryOptionType : object {
    private RecoveryOptionNameType _name;
    private Nullable`1<int> _priority;
    [AWSPropertyAttribute]
public RecoveryOptionNameType Name { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Priority { get; public set; }
    public RecoveryOptionNameType get_Name();
    public void set_Name(RecoveryOptionNameType value);
    internal bool IsSetName();
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    internal bool IsSetPriority();
}
public class Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest : AmazonCognitoIdentityProviderRequest {
    private AnalyticsMetadataType _analyticsMetadata;
    private string _clientId;
    private Dictionary`2<string, string> _clientMetadata;
    private string _secretHash;
    private UserContextDataType _userContextData;
    private string _username;
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public string SecretHash { get; public set; }
    [AWSPropertyAttribute]
public UserContextDataType UserContextData { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public AnalyticsMetadataType get_AnalyticsMetadata();
    public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    internal bool IsSetAnalyticsMetadata();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public string get_SecretHash();
    public void set_SecretHash(string value);
    internal bool IsSetSecretHash();
    public UserContextDataType get_UserContextData();
    public void set_UserContextData(UserContextDataType value);
    internal bool IsSetUserContextData();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeResponse : AmazonWebServiceResponse {
    private CodeDeliveryDetailsType _codeDeliveryDetails;
    public CodeDeliveryDetailsType CodeDeliveryDetails { get; public set; }
    public CodeDeliveryDetailsType get_CodeDeliveryDetails();
    public void set_CodeDeliveryDetails(CodeDeliveryDetailsType value);
    internal bool IsSetCodeDeliveryDetails();
}
public class Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException : AmazonCognitoIdentityProviderException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.ResourceServerScopeType : object {
    private string _scopeDescription;
    private string _scopeName;
    [AWSPropertyAttribute]
public string ScopeDescription { get; public set; }
    [AWSPropertyAttribute]
public string ScopeName { get; public set; }
    public string get_ScopeDescription();
    public void set_ScopeDescription(string value);
    internal bool IsSetScopeDescription();
    public string get_ScopeName();
    public void set_ScopeName(string value);
    internal bool IsSetScopeName();
}
public class Amazon.CognitoIdentityProvider.Model.ResourceServerType : object {
    private string _identifier;
    private string _name;
    private List`1<ResourceServerScopeType> _scopes;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Identifier { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<ResourceServerScopeType> Scopes { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Identifier();
    public void set_Identifier(string value);
    internal bool IsSetIdentifier();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<ResourceServerScopeType> get_Scopes();
    public void set_Scopes(List`1<ResourceServerScopeType> value);
    internal bool IsSetScopes();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest : AmazonCognitoIdentityProviderRequest {
    private AnalyticsMetadataType _analyticsMetadata;
    private ChallengeNameType _challengeName;
    private Dictionary`2<string, string> _challengeResponses;
    private string _clientId;
    private Dictionary`2<string, string> _clientMetadata;
    private string _session;
    private UserContextDataType _userContextData;
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [AWSPropertyAttribute]
public ChallengeNameType ChallengeName { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> ChallengeResponses { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public string Session { get; public set; }
    [AWSPropertyAttribute]
public UserContextDataType UserContextData { get; public set; }
    public AnalyticsMetadataType get_AnalyticsMetadata();
    public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    internal bool IsSetAnalyticsMetadata();
    public ChallengeNameType get_ChallengeName();
    public void set_ChallengeName(ChallengeNameType value);
    internal bool IsSetChallengeName();
    public Dictionary`2<string, string> get_ChallengeResponses();
    public void set_ChallengeResponses(Dictionary`2<string, string> value);
    internal bool IsSetChallengeResponses();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public string get_Session();
    public void set_Session(string value);
    internal bool IsSetSession();
    public UserContextDataType get_UserContextData();
    public void set_UserContextData(UserContextDataType value);
    internal bool IsSetUserContextData();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse : AmazonWebServiceResponse {
    private AuthenticationResultType _authenticationResult;
    private ChallengeNameType _challengeName;
    private Dictionary`2<string, string> _challengeParameters;
    private string _session;
    public AuthenticationResultType AuthenticationResult { get; public set; }
    public ChallengeNameType ChallengeName { get; public set; }
    public Dictionary`2<string, string> ChallengeParameters { get; public set; }
    [AWSPropertyAttribute]
public string Session { get; public set; }
    public AuthenticationResultType get_AuthenticationResult();
    public void set_AuthenticationResult(AuthenticationResultType value);
    internal bool IsSetAuthenticationResult();
    public ChallengeNameType get_ChallengeName();
    public void set_ChallengeName(ChallengeNameType value);
    internal bool IsSetChallengeName();
    public Dictionary`2<string, string> get_ChallengeParameters();
    public void set_ChallengeParameters(Dictionary`2<string, string> value);
    internal bool IsSetChallengeParameters();
    public string get_Session();
    public void set_Session(string value);
    internal bool IsSetSession();
}
public class Amazon.CognitoIdentityProvider.Model.RevokeTokenRequest : AmazonCognitoIdentityProviderRequest {
    private string _clientId;
    private string _clientSecret;
    private string _token;
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string ClientSecret { get; public set; }
    [AWSPropertyAttribute]
public string Token { get; public set; }
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_ClientSecret();
    public void set_ClientSecret(string value);
    internal bool IsSetClientSecret();
    public string get_Token();
    public void set_Token(string value);
    internal bool IsSetToken();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.RevokeTokenResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.RiskConfigurationType : object {
    private AccountTakeoverRiskConfigurationType _accountTakeoverRiskConfiguration;
    private string _clientId;
    private CompromisedCredentialsRiskConfigurationType _compromisedCredentialsRiskConfiguration;
    private Nullable`1<DateTime> _lastModifiedDate;
    private RiskExceptionConfigurationType _riskExceptionConfiguration;
    private string _userPoolId;
    public AccountTakeoverRiskConfigurationType AccountTakeoverRiskConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public CompromisedCredentialsRiskConfigurationType CompromisedCredentialsRiskConfiguration { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    public RiskExceptionConfigurationType RiskExceptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public AccountTakeoverRiskConfigurationType get_AccountTakeoverRiskConfiguration();
    public void set_AccountTakeoverRiskConfiguration(AccountTakeoverRiskConfigurationType value);
    internal bool IsSetAccountTakeoverRiskConfiguration();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public CompromisedCredentialsRiskConfigurationType get_CompromisedCredentialsRiskConfiguration();
    public void set_CompromisedCredentialsRiskConfiguration(CompromisedCredentialsRiskConfigurationType value);
    internal bool IsSetCompromisedCredentialsRiskConfiguration();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public RiskExceptionConfigurationType get_RiskExceptionConfiguration();
    public void set_RiskExceptionConfiguration(RiskExceptionConfigurationType value);
    internal bool IsSetRiskExceptionConfiguration();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.RiskExceptionConfigurationType : object {
    private List`1<string> _blockedIPRangeList;
    private List`1<string> _skippedIPRangeList;
    [AWSPropertyAttribute]
public List`1<string> BlockedIPRangeList { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SkippedIPRangeList { get; public set; }
    public List`1<string> get_BlockedIPRangeList();
    public void set_BlockedIPRangeList(List`1<string> value);
    internal bool IsSetBlockedIPRangeList();
    public List`1<string> get_SkippedIPRangeList();
    public void set_SkippedIPRangeList(List`1<string> value);
    internal bool IsSetSkippedIPRangeList();
}
public class Amazon.CognitoIdentityProvider.Model.SchemaAttributeType : object {
    private AttributeDataType _attributeDataType;
    private Nullable`1<bool> _developerOnlyAttribute;
    private Nullable`1<bool> _mutable;
    private string _name;
    private NumberAttributeConstraintsType _numberAttributeConstraints;
    private Nullable`1<bool> _required;
    private StringAttributeConstraintsType _stringAttributeConstraints;
    public AttributeDataType AttributeDataType { get; public set; }
    public Nullable`1<bool> DeveloperOnlyAttribute { get; public set; }
    public Nullable`1<bool> Mutable { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public NumberAttributeConstraintsType NumberAttributeConstraints { get; public set; }
    public Nullable`1<bool> Required { get; public set; }
    public StringAttributeConstraintsType StringAttributeConstraints { get; public set; }
    public AttributeDataType get_AttributeDataType();
    public void set_AttributeDataType(AttributeDataType value);
    internal bool IsSetAttributeDataType();
    public Nullable`1<bool> get_DeveloperOnlyAttribute();
    public void set_DeveloperOnlyAttribute(Nullable`1<bool> value);
    internal bool IsSetDeveloperOnlyAttribute();
    public Nullable`1<bool> get_Mutable();
    public void set_Mutable(Nullable`1<bool> value);
    internal bool IsSetMutable();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public NumberAttributeConstraintsType get_NumberAttributeConstraints();
    public void set_NumberAttributeConstraints(NumberAttributeConstraintsType value);
    internal bool IsSetNumberAttributeConstraints();
    public Nullable`1<bool> get_Required();
    public void set_Required(Nullable`1<bool> value);
    internal bool IsSetRequired();
    public StringAttributeConstraintsType get_StringAttributeConstraints();
    public void set_StringAttributeConstraints(StringAttributeConstraintsType value);
    internal bool IsSetStringAttributeConstraints();
}
public class Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException : AmazonCognitoIdentityProviderException {
    public ScopeDoesNotExistException(string message);
    public ScopeDoesNotExistException(string message, Exception innerException);
    public ScopeDoesNotExistException(Exception innerException);
    public ScopeDoesNotExistException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ScopeDoesNotExistException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.SetLogDeliveryConfigurationRequest : AmazonCognitoIdentityProviderRequest {
    private List`1<LogConfigurationType> _logConfigurations;
    private string _userPoolId;
    [AWSPropertyAttribute]
public List`1<LogConfigurationType> LogConfigurations { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<LogConfigurationType> get_LogConfigurations();
    public void set_LogConfigurations(List`1<LogConfigurationType> value);
    internal bool IsSetLogConfigurations();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.SetLogDeliveryConfigurationResponse : AmazonWebServiceResponse {
    private LogDeliveryConfigurationType _logDeliveryConfiguration;
    public LogDeliveryConfigurationType LogDeliveryConfiguration { get; public set; }
    public LogDeliveryConfigurationType get_LogDeliveryConfiguration();
    public void set_LogDeliveryConfiguration(LogDeliveryConfigurationType value);
    internal bool IsSetLogDeliveryConfiguration();
}
public class Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest : AmazonCognitoIdentityProviderRequest {
    private AccountTakeoverRiskConfigurationType _accountTakeoverRiskConfiguration;
    private string _clientId;
    private CompromisedCredentialsRiskConfigurationType _compromisedCredentialsRiskConfiguration;
    private RiskExceptionConfigurationType _riskExceptionConfiguration;
    private string _userPoolId;
    public AccountTakeoverRiskConfigurationType AccountTakeoverRiskConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public CompromisedCredentialsRiskConfigurationType CompromisedCredentialsRiskConfiguration { get; public set; }
    public RiskExceptionConfigurationType RiskExceptionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public AccountTakeoverRiskConfigurationType get_AccountTakeoverRiskConfiguration();
    public void set_AccountTakeoverRiskConfiguration(AccountTakeoverRiskConfigurationType value);
    internal bool IsSetAccountTakeoverRiskConfiguration();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public CompromisedCredentialsRiskConfigurationType get_CompromisedCredentialsRiskConfiguration();
    public void set_CompromisedCredentialsRiskConfiguration(CompromisedCredentialsRiskConfigurationType value);
    internal bool IsSetCompromisedCredentialsRiskConfiguration();
    public RiskExceptionConfigurationType get_RiskExceptionConfiguration();
    public void set_RiskExceptionConfiguration(RiskExceptionConfigurationType value);
    internal bool IsSetRiskExceptionConfiguration();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationResponse : AmazonWebServiceResponse {
    private RiskConfigurationType _riskConfiguration;
    [AWSPropertyAttribute]
public RiskConfigurationType RiskConfiguration { get; public set; }
    public RiskConfigurationType get_RiskConfiguration();
    public void set_RiskConfiguration(RiskConfigurationType value);
    internal bool IsSetRiskConfiguration();
}
public class Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest : AmazonCognitoIdentityProviderRequest {
    private string _clientId;
    private string _css;
    private MemoryStream _imageFile;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string CSS { get; public set; }
    [AWSPropertyAttribute]
public MemoryStream ImageFile { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_CSS();
    public void set_CSS(string value);
    internal bool IsSetCSS();
    public MemoryStream get_ImageFile();
    public void set_ImageFile(MemoryStream value);
    internal bool IsSetImageFile();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.SetUICustomizationResponse : AmazonWebServiceResponse {
    private UICustomizationType _uiCustomization;
    [AWSPropertyAttribute]
public UICustomizationType UICustomization { get; public set; }
    public UICustomizationType get_UICustomization();
    public void set_UICustomization(UICustomizationType value);
    internal bool IsSetUICustomization();
}
public class Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private SMSMfaSettingsType _smsMfaSettings;
    private SoftwareTokenMfaSettingsType _softwareTokenMfaSettings;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    public SMSMfaSettingsType SMSMfaSettings { get; public set; }
    public SoftwareTokenMfaSettingsType SoftwareTokenMfaSettings { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public SMSMfaSettingsType get_SMSMfaSettings();
    public void set_SMSMfaSettings(SMSMfaSettingsType value);
    internal bool IsSetSMSMfaSettings();
    public SoftwareTokenMfaSettingsType get_SoftwareTokenMfaSettings();
    public void set_SoftwareTokenMfaSettings(SoftwareTokenMfaSettingsType value);
    internal bool IsSetSoftwareTokenMfaSettings();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest : AmazonCognitoIdentityProviderRequest {
    private UserPoolMfaType _mfaConfiguration;
    private SmsMfaConfigType _smsMfaConfiguration;
    private SoftwareTokenMfaConfigType _softwareTokenMfaConfiguration;
    private string _userPoolId;
    public UserPoolMfaType MfaConfiguration { get; public set; }
    public SmsMfaConfigType SmsMfaConfiguration { get; public set; }
    public SoftwareTokenMfaConfigType SoftwareTokenMfaConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public UserPoolMfaType get_MfaConfiguration();
    public void set_MfaConfiguration(UserPoolMfaType value);
    internal bool IsSetMfaConfiguration();
    public SmsMfaConfigType get_SmsMfaConfiguration();
    public void set_SmsMfaConfiguration(SmsMfaConfigType value);
    internal bool IsSetSmsMfaConfiguration();
    public SoftwareTokenMfaConfigType get_SoftwareTokenMfaConfiguration();
    public void set_SoftwareTokenMfaConfiguration(SoftwareTokenMfaConfigType value);
    internal bool IsSetSoftwareTokenMfaConfiguration();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigResponse : AmazonWebServiceResponse {
    private UserPoolMfaType _mfaConfiguration;
    private SmsMfaConfigType _smsMfaConfiguration;
    private SoftwareTokenMfaConfigType _softwareTokenMfaConfiguration;
    public UserPoolMfaType MfaConfiguration { get; public set; }
    public SmsMfaConfigType SmsMfaConfiguration { get; public set; }
    public SoftwareTokenMfaConfigType SoftwareTokenMfaConfiguration { get; public set; }
    public UserPoolMfaType get_MfaConfiguration();
    public void set_MfaConfiguration(UserPoolMfaType value);
    internal bool IsSetMfaConfiguration();
    public SmsMfaConfigType get_SmsMfaConfiguration();
    public void set_SmsMfaConfiguration(SmsMfaConfigType value);
    internal bool IsSetSmsMfaConfiguration();
    public SoftwareTokenMfaConfigType get_SoftwareTokenMfaConfiguration();
    public void set_SoftwareTokenMfaConfiguration(SoftwareTokenMfaConfigType value);
    internal bool IsSetSoftwareTokenMfaConfiguration();
}
public class Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private List`1<MFAOptionType> _mfaOptions;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<MFAOptionType> MFAOptions { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public List`1<MFAOptionType> get_MFAOptions();
    public void set_MFAOptions(List`1<MFAOptionType> value);
    internal bool IsSetMFAOptions();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.SetUserSettingsResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.SignUpRequest : AmazonCognitoIdentityProviderRequest {
    private AnalyticsMetadataType _analyticsMetadata;
    private string _clientId;
    private Dictionary`2<string, string> _clientMetadata;
    private string _password;
    private string _secretHash;
    private List`1<AttributeType> _userAttributes;
    private UserContextDataType _userContextData;
    private string _username;
    private List`1<AttributeType> _validationData;
    public AnalyticsMetadataType AnalyticsMetadata { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    [AWSPropertyAttribute]
public string SecretHash { get; public set; }
    public List`1<AttributeType> UserAttributes { get; public set; }
    [AWSPropertyAttribute]
public UserContextDataType UserContextData { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public List`1<AttributeType> ValidationData { get; public set; }
    public AnalyticsMetadataType get_AnalyticsMetadata();
    public void set_AnalyticsMetadata(AnalyticsMetadataType value);
    internal bool IsSetAnalyticsMetadata();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public string get_SecretHash();
    public void set_SecretHash(string value);
    internal bool IsSetSecretHash();
    public List`1<AttributeType> get_UserAttributes();
    public void set_UserAttributes(List`1<AttributeType> value);
    internal bool IsSetUserAttributes();
    public UserContextDataType get_UserContextData();
    public void set_UserContextData(UserContextDataType value);
    internal bool IsSetUserContextData();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public List`1<AttributeType> get_ValidationData();
    public void set_ValidationData(List`1<AttributeType> value);
    internal bool IsSetValidationData();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.SignUpResponse : AmazonWebServiceResponse {
    private CodeDeliveryDetailsType _codeDeliveryDetails;
    private Nullable`1<bool> _userConfirmed;
    private string _userSub;
    public CodeDeliveryDetailsType CodeDeliveryDetails { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> UserConfirmed { get; public set; }
    [AWSPropertyAttribute]
public string UserSub { get; public set; }
    public CodeDeliveryDetailsType get_CodeDeliveryDetails();
    public void set_CodeDeliveryDetails(CodeDeliveryDetailsType value);
    internal bool IsSetCodeDeliveryDetails();
    public Nullable`1<bool> get_UserConfirmed();
    public void set_UserConfirmed(Nullable`1<bool> value);
    internal bool IsSetUserConfirmed();
    public string get_UserSub();
    public void set_UserSub(string value);
    internal bool IsSetUserSub();
}
public class Amazon.CognitoIdentityProvider.Model.SmsConfigurationType : object {
    private string _externalId;
    private string _snsCallerArn;
    private string _snsRegion;
    [AWSPropertyAttribute]
public string ExternalId { get; public set; }
    [AWSPropertyAttribute]
public string SnsCallerArn { get; public set; }
    [AWSPropertyAttribute]
public string SnsRegion { get; public set; }
    public string get_ExternalId();
    public void set_ExternalId(string value);
    internal bool IsSetExternalId();
    public string get_SnsCallerArn();
    public void set_SnsCallerArn(string value);
    internal bool IsSetSnsCallerArn();
    public string get_SnsRegion();
    public void set_SnsRegion(string value);
    internal bool IsSetSnsRegion();
}
public class Amazon.CognitoIdentityProvider.Model.SmsMfaConfigType : object {
    private string _smsAuthenticationMessage;
    private SmsConfigurationType _smsConfiguration;
    [AWSPropertyAttribute]
public string SmsAuthenticationMessage { get; public set; }
    public SmsConfigurationType SmsConfiguration { get; public set; }
    public string get_SmsAuthenticationMessage();
    public void set_SmsAuthenticationMessage(string value);
    internal bool IsSetSmsAuthenticationMessage();
    public SmsConfigurationType get_SmsConfiguration();
    public void set_SmsConfiguration(SmsConfigurationType value);
    internal bool IsSetSmsConfiguration();
}
public class Amazon.CognitoIdentityProvider.Model.SMSMfaSettingsType : object {
    private Nullable`1<bool> _enabled;
    private Nullable`1<bool> _preferredMfa;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> PreferredMfa { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public Nullable`1<bool> get_PreferredMfa();
    public void set_PreferredMfa(Nullable`1<bool> value);
    internal bool IsSetPreferredMfa();
}
public class Amazon.CognitoIdentityProvider.Model.SoftwareTokenMfaConfigType : object {
    private Nullable`1<bool> _enabled;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException : AmazonCognitoIdentityProviderException {
    public SoftwareTokenMFANotFoundException(string message);
    public SoftwareTokenMFANotFoundException(string message, Exception innerException);
    public SoftwareTokenMFANotFoundException(Exception innerException);
    public SoftwareTokenMFANotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SoftwareTokenMFANotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.SoftwareTokenMfaSettingsType : object {
    private Nullable`1<bool> _enabled;
    private Nullable`1<bool> _preferredMfa;
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<bool> PreferredMfa { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public Nullable`1<bool> get_PreferredMfa();
    public void set_PreferredMfa(Nullable`1<bool> value);
    internal bool IsSetPreferredMfa();
}
public class Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest : AmazonCognitoIdentityProviderRequest {
    private string _jobId;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.StartUserImportJobResponse : AmazonWebServiceResponse {
    private UserImportJobType _userImportJob;
    public UserImportJobType UserImportJob { get; public set; }
    public UserImportJobType get_UserImportJob();
    public void set_UserImportJob(UserImportJobType value);
    internal bool IsSetUserImportJob();
}
public class Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest : AmazonCognitoIdentityProviderRequest {
    private string _jobId;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.StopUserImportJobResponse : AmazonWebServiceResponse {
    private UserImportJobType _userImportJob;
    public UserImportJobType UserImportJob { get; public set; }
    public UserImportJobType get_UserImportJob();
    public void set_UserImportJob(UserImportJobType value);
    internal bool IsSetUserImportJob();
}
public class Amazon.CognitoIdentityProvider.Model.StringAttributeConstraintsType : object {
    private string _maxLength;
    private string _minLength;
    [AWSPropertyAttribute]
public string MaxLength { get; public set; }
    [AWSPropertyAttribute]
public string MinLength { get; public set; }
    public string get_MaxLength();
    public void set_MaxLength(string value);
    internal bool IsSetMaxLength();
    public string get_MinLength();
    public void set_MinLength(string value);
    internal bool IsSetMinLength();
}
public class Amazon.CognitoIdentityProvider.Model.TagResourceRequest : AmazonCognitoIdentityProviderRequest {
    private string _resourceArn;
    private Dictionary`2<string, string> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, string> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
public class Amazon.CognitoIdentityProvider.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.TokenValidityUnitsType : object {
    private TimeUnitsType _accessToken;
    private TimeUnitsType _idToken;
    private TimeUnitsType _refreshToken;
    public TimeUnitsType AccessToken { get; public set; }
    public TimeUnitsType IdToken { get; public set; }
    public TimeUnitsType RefreshToken { get; public set; }
    public TimeUnitsType get_AccessToken();
    public void set_AccessToken(TimeUnitsType value);
    internal bool IsSetAccessToken();
    public TimeUnitsType get_IdToken();
    public void set_IdToken(TimeUnitsType value);
    internal bool IsSetIdToken();
    public TimeUnitsType get_RefreshToken();
    public void set_RefreshToken(TimeUnitsType value);
    internal bool IsSetRefreshToken();
}
public class Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException : AmazonCognitoIdentityProviderException {
    public TooManyFailedAttemptsException(string message);
    public TooManyFailedAttemptsException(string message, Exception innerException);
    public TooManyFailedAttemptsException(Exception innerException);
    public TooManyFailedAttemptsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyFailedAttemptsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.TooManyRequestsException : AmazonCognitoIdentityProviderException {
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
    public TooManyRequestsException(Exception innerException);
    public TooManyRequestsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TooManyRequestsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UICustomizationType : object {
    private string _clientId;
    private Nullable`1<DateTime> _creationDate;
    private string _css;
    private string _cssVersion;
    private string _imageUrl;
    private Nullable`1<DateTime> _lastModifiedDate;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public string CSS { get; public set; }
    public string CSSVersion { get; public set; }
    public string ImageUrl { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public string get_CSS();
    public void set_CSS(string value);
    internal bool IsSetCSS();
    public string get_CSSVersion();
    public void set_CSSVersion(string value);
    internal bool IsSetCSSVersion();
    public string get_ImageUrl();
    public void set_ImageUrl(string value);
    internal bool IsSetImageUrl();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.UnauthorizedException : AmazonCognitoIdentityProviderException {
    public UnauthorizedException(string message);
    public UnauthorizedException(string message, Exception innerException);
    public UnauthorizedException(Exception innerException);
    public UnauthorizedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnauthorizedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException : AmazonCognitoIdentityProviderException {
    public UnexpectedLambdaException(string message);
    public UnexpectedLambdaException(string message, Exception innerException);
    public UnexpectedLambdaException(Exception innerException);
    public UnexpectedLambdaException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnexpectedLambdaException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException : AmazonCognitoIdentityProviderException {
    public UnsupportedIdentityProviderException(string message);
    public UnsupportedIdentityProviderException(string message, Exception innerException);
    public UnsupportedIdentityProviderException(Exception innerException);
    public UnsupportedIdentityProviderException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedIdentityProviderException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException : AmazonCognitoIdentityProviderException {
    public UnsupportedOperationException(string message);
    public UnsupportedOperationException(string message, Exception innerException);
    public UnsupportedOperationException(Exception innerException);
    public UnsupportedOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedOperationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException : AmazonCognitoIdentityProviderException {
    public UnsupportedTokenTypeException(string message);
    public UnsupportedTokenTypeException(string message, Exception innerException);
    public UnsupportedTokenTypeException(Exception innerException);
    public UnsupportedTokenTypeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedTokenTypeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException : AmazonCognitoIdentityProviderException {
    public UnsupportedUserStateException(string message);
    public UnsupportedUserStateException(string message, Exception innerException);
    public UnsupportedUserStateException(Exception innerException);
    public UnsupportedUserStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UnsupportedUserStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UntagResourceRequest : AmazonCognitoIdentityProviderRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.CognitoIdentityProvider.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest : AmazonCognitoIdentityProviderRequest {
    private string _eventId;
    private string _feedbackToken;
    private FeedbackValueType _feedbackValue;
    private string _username;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string EventId { get; public set; }
    [AWSPropertyAttribute]
public string FeedbackToken { get; public set; }
    [AWSPropertyAttribute]
public FeedbackValueType FeedbackValue { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_EventId();
    public void set_EventId(string value);
    internal bool IsSetEventId();
    public string get_FeedbackToken();
    public void set_FeedbackToken(string value);
    internal bool IsSetFeedbackToken();
    public FeedbackValueType get_FeedbackValue();
    public void set_FeedbackValue(FeedbackValueType value);
    internal bool IsSetFeedbackValue();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private string _deviceKey;
    private DeviceRememberedStatusType _deviceRememberedStatus;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string DeviceKey { get; public set; }
    public DeviceRememberedStatusType DeviceRememberedStatus { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_DeviceKey();
    public void set_DeviceKey(string value);
    internal bool IsSetDeviceKey();
    public DeviceRememberedStatusType get_DeviceRememberedStatus();
    public void set_DeviceRememberedStatus(DeviceRememberedStatusType value);
    internal bool IsSetDeviceRememberedStatus();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest : AmazonCognitoIdentityProviderRequest {
    private string _description;
    private string _groupName;
    private Nullable`1<int> _precedence;
    private string _roleArn;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Description { get; public set; }
    [AWSPropertyAttribute]
public string GroupName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Precedence { get; public set; }
    [AWSPropertyAttribute]
public string RoleArn { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_GroupName();
    public void set_GroupName(string value);
    internal bool IsSetGroupName();
    public Nullable`1<int> get_Precedence();
    public void set_Precedence(Nullable`1<int> value);
    internal bool IsSetPrecedence();
    public string get_RoleArn();
    public void set_RoleArn(string value);
    internal bool IsSetRoleArn();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateGroupResponse : AmazonWebServiceResponse {
    private GroupType _group;
    public GroupType Group { get; public set; }
    public GroupType get_Group();
    public void set_Group(GroupType value);
    internal bool IsSetGroup();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest : AmazonCognitoIdentityProviderRequest {
    private Dictionary`2<string, string> _attributeMapping;
    private List`1<string> _idpIdentifiers;
    private Dictionary`2<string, string> _providerDetails;
    private string _providerName;
    private string _userPoolId;
    public Dictionary`2<string, string> AttributeMapping { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> IdpIdentifiers { get; public set; }
    public Dictionary`2<string, string> ProviderDetails { get; public set; }
    [AWSPropertyAttribute]
public string ProviderName { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Dictionary`2<string, string> get_AttributeMapping();
    public void set_AttributeMapping(Dictionary`2<string, string> value);
    internal bool IsSetAttributeMapping();
    public List`1<string> get_IdpIdentifiers();
    public void set_IdpIdentifiers(List`1<string> value);
    internal bool IsSetIdpIdentifiers();
    public Dictionary`2<string, string> get_ProviderDetails();
    public void set_ProviderDetails(Dictionary`2<string, string> value);
    internal bool IsSetProviderDetails();
    public string get_ProviderName();
    public void set_ProviderName(string value);
    internal bool IsSetProviderName();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderResponse : AmazonWebServiceResponse {
    private IdentityProviderType _identityProvider;
    [AWSPropertyAttribute]
public IdentityProviderType IdentityProvider { get; public set; }
    public IdentityProviderType get_IdentityProvider();
    public void set_IdentityProvider(IdentityProviderType value);
    internal bool IsSetIdentityProvider();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest : AmazonCognitoIdentityProviderRequest {
    private string _identifier;
    private string _name;
    private List`1<ResourceServerScopeType> _scopes;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string Identifier { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<ResourceServerScopeType> Scopes { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_Identifier();
    public void set_Identifier(string value);
    internal bool IsSetIdentifier();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<ResourceServerScopeType> get_Scopes();
    public void set_Scopes(List`1<ResourceServerScopeType> value);
    internal bool IsSetScopes();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateResourceServerResponse : AmazonWebServiceResponse {
    private ResourceServerType _resourceServer;
    [AWSPropertyAttribute]
public ResourceServerType ResourceServer { get; public set; }
    public ResourceServerType get_ResourceServer();
    public void set_ResourceServer(ResourceServerType value);
    internal bool IsSetResourceServer();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private Dictionary`2<string, string> _clientMetadata;
    private List`1<AttributeType> _userAttributes;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    public Dictionary`2<string, string> ClientMetadata { get; public set; }
    [AWSPropertyAttribute]
public List`1<AttributeType> UserAttributes { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public Dictionary`2<string, string> get_ClientMetadata();
    public void set_ClientMetadata(Dictionary`2<string, string> value);
    internal bool IsSetClientMetadata();
    public List`1<AttributeType> get_UserAttributes();
    public void set_UserAttributes(List`1<AttributeType> value);
    internal bool IsSetUserAttributes();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesResponse : AmazonWebServiceResponse {
    private List`1<CodeDeliveryDetailsType> _codeDeliveryDetailsList;
    public List`1<CodeDeliveryDetailsType> CodeDeliveryDetailsList { get; public set; }
    public List`1<CodeDeliveryDetailsType> get_CodeDeliveryDetailsList();
    public void set_CodeDeliveryDetailsList(List`1<CodeDeliveryDetailsType> value);
    internal bool IsSetCodeDeliveryDetailsList();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest : AmazonCognitoIdentityProviderRequest {
    private Nullable`1<int> _accessTokenValidity;
    private List`1<string> _allowedOAuthFlows;
    private Nullable`1<bool> _allowedOAuthFlowsUserPoolClient;
    private List`1<string> _allowedOAuthScopes;
    private AnalyticsConfigurationType _analyticsConfiguration;
    private Nullable`1<int> _authSessionValidity;
    private List`1<string> _callbackURLs;
    private string _clientId;
    private string _clientName;
    private string _defaultRedirectURI;
    private Nullable`1<bool> _enablePropagateAdditionalUserContextData;
    private Nullable`1<bool> _enableTokenRevocation;
    private List`1<string> _explicitAuthFlows;
    private Nullable`1<int> _idTokenValidity;
    private List`1<string> _logoutURLs;
    private PreventUserExistenceErrorTypes _preventUserExistenceErrors;
    private List`1<string> _readAttributes;
    private Nullable`1<int> _refreshTokenValidity;
    private List`1<string> _supportedIdentityProviders;
    private TokenValidityUnitsType _tokenValidityUnits;
    private string _userPoolId;
    private List`1<string> _writeAttributes;
    [AWSPropertyAttribute]
public Nullable`1<int> AccessTokenValidity { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowedOAuthFlows { get; public set; }
    public Nullable`1<bool> AllowedOAuthFlowsUserPoolClient { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowedOAuthScopes { get; public set; }
    public AnalyticsConfigurationType AnalyticsConfiguration { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AuthSessionValidity { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CallbackURLs { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string ClientName { get; public set; }
    [AWSPropertyAttribute]
public string DefaultRedirectURI { get; public set; }
    public Nullable`1<bool> EnablePropagateAdditionalUserContextData { get; public set; }
    public Nullable`1<bool> EnableTokenRevocation { get; public set; }
    public List`1<string> ExplicitAuthFlows { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> IdTokenValidity { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogoutURLs { get; public set; }
    public PreventUserExistenceErrorTypes PreventUserExistenceErrors { get; public set; }
    public List`1<string> ReadAttributes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RefreshTokenValidity { get; public set; }
    public List`1<string> SupportedIdentityProviders { get; public set; }
    public TokenValidityUnitsType TokenValidityUnits { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<string> WriteAttributes { get; public set; }
    public Nullable`1<int> get_AccessTokenValidity();
    public void set_AccessTokenValidity(Nullable`1<int> value);
    internal bool IsSetAccessTokenValidity();
    public List`1<string> get_AllowedOAuthFlows();
    public void set_AllowedOAuthFlows(List`1<string> value);
    internal bool IsSetAllowedOAuthFlows();
    public Nullable`1<bool> get_AllowedOAuthFlowsUserPoolClient();
    public void set_AllowedOAuthFlowsUserPoolClient(Nullable`1<bool> value);
    internal bool IsSetAllowedOAuthFlowsUserPoolClient();
    public List`1<string> get_AllowedOAuthScopes();
    public void set_AllowedOAuthScopes(List`1<string> value);
    internal bool IsSetAllowedOAuthScopes();
    public AnalyticsConfigurationType get_AnalyticsConfiguration();
    public void set_AnalyticsConfiguration(AnalyticsConfigurationType value);
    internal bool IsSetAnalyticsConfiguration();
    public Nullable`1<int> get_AuthSessionValidity();
    public void set_AuthSessionValidity(Nullable`1<int> value);
    internal bool IsSetAuthSessionValidity();
    public List`1<string> get_CallbackURLs();
    public void set_CallbackURLs(List`1<string> value);
    internal bool IsSetCallbackURLs();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_ClientName();
    public void set_ClientName(string value);
    internal bool IsSetClientName();
    public string get_DefaultRedirectURI();
    public void set_DefaultRedirectURI(string value);
    internal bool IsSetDefaultRedirectURI();
    public Nullable`1<bool> get_EnablePropagateAdditionalUserContextData();
    public void set_EnablePropagateAdditionalUserContextData(Nullable`1<bool> value);
    internal bool IsSetEnablePropagateAdditionalUserContextData();
    public Nullable`1<bool> get_EnableTokenRevocation();
    public void set_EnableTokenRevocation(Nullable`1<bool> value);
    internal bool IsSetEnableTokenRevocation();
    public List`1<string> get_ExplicitAuthFlows();
    public void set_ExplicitAuthFlows(List`1<string> value);
    internal bool IsSetExplicitAuthFlows();
    public Nullable`1<int> get_IdTokenValidity();
    public void set_IdTokenValidity(Nullable`1<int> value);
    internal bool IsSetIdTokenValidity();
    public List`1<string> get_LogoutURLs();
    public void set_LogoutURLs(List`1<string> value);
    internal bool IsSetLogoutURLs();
    public PreventUserExistenceErrorTypes get_PreventUserExistenceErrors();
    public void set_PreventUserExistenceErrors(PreventUserExistenceErrorTypes value);
    internal bool IsSetPreventUserExistenceErrors();
    public List`1<string> get_ReadAttributes();
    public void set_ReadAttributes(List`1<string> value);
    internal bool IsSetReadAttributes();
    public Nullable`1<int> get_RefreshTokenValidity();
    public void set_RefreshTokenValidity(Nullable`1<int> value);
    internal bool IsSetRefreshTokenValidity();
    public List`1<string> get_SupportedIdentityProviders();
    public void set_SupportedIdentityProviders(List`1<string> value);
    internal bool IsSetSupportedIdentityProviders();
    public TokenValidityUnitsType get_TokenValidityUnits();
    public void set_TokenValidityUnits(TokenValidityUnitsType value);
    internal bool IsSetTokenValidityUnits();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
    public List`1<string> get_WriteAttributes();
    public void set_WriteAttributes(List`1<string> value);
    internal bool IsSetWriteAttributes();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientResponse : AmazonWebServiceResponse {
    private UserPoolClientType _userPoolClient;
    public UserPoolClientType UserPoolClient { get; public set; }
    public UserPoolClientType get_UserPoolClient();
    public void set_UserPoolClient(UserPoolClientType value);
    internal bool IsSetUserPoolClient();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainRequest : AmazonCognitoIdentityProviderRequest {
    private CustomDomainConfigType _customDomainConfig;
    private string _domain;
    private string _userPoolId;
    [AWSPropertyAttribute]
public CustomDomainConfigType CustomDomainConfig { get; public set; }
    [AWSPropertyAttribute]
public string Domain { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public CustomDomainConfigType get_CustomDomainConfig();
    public void set_CustomDomainConfig(CustomDomainConfigType value);
    internal bool IsSetCustomDomainConfig();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainResponse : AmazonWebServiceResponse {
    private string _cloudFrontDomain;
    [AWSPropertyAttribute]
public string CloudFrontDomain { get; public set; }
    public string get_CloudFrontDomain();
    public void set_CloudFrontDomain(string value);
    internal bool IsSetCloudFrontDomain();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest : AmazonCognitoIdentityProviderRequest {
    private AccountRecoverySettingType _accountRecoverySetting;
    private AdminCreateUserConfigType _adminCreateUserConfig;
    private List`1<string> _autoVerifiedAttributes;
    private DeletionProtectionType _deletionProtection;
    private DeviceConfigurationType _deviceConfiguration;
    private EmailConfigurationType _emailConfiguration;
    private string _emailVerificationMessage;
    private string _emailVerificationSubject;
    private LambdaConfigType _lambdaConfig;
    private UserPoolMfaType _mfaConfiguration;
    private UserPoolPolicyType _policies;
    private string _smsAuthenticationMessage;
    private SmsConfigurationType _smsConfiguration;
    private string _smsVerificationMessage;
    private UserAttributeUpdateSettingsType _userAttributeUpdateSettings;
    private UserPoolAddOnsType _userPoolAddOns;
    private string _userPoolId;
    private Dictionary`2<string, string> _userPoolTags;
    private VerificationMessageTemplateType _verificationMessageTemplate;
    public AccountRecoverySettingType AccountRecoverySetting { get; public set; }
    public AdminCreateUserConfigType AdminCreateUserConfig { get; public set; }
    public List`1<string> AutoVerifiedAttributes { get; public set; }
    public DeletionProtectionType DeletionProtection { get; public set; }
    public DeviceConfigurationType DeviceConfiguration { get; public set; }
    public EmailConfigurationType EmailConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string EmailVerificationMessage { get; public set; }
    [AWSPropertyAttribute]
public string EmailVerificationSubject { get; public set; }
    public LambdaConfigType LambdaConfig { get; public set; }
    public UserPoolMfaType MfaConfiguration { get; public set; }
    public UserPoolPolicyType Policies { get; public set; }
    [AWSPropertyAttribute]
public string SmsAuthenticationMessage { get; public set; }
    public SmsConfigurationType SmsConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string SmsVerificationMessage { get; public set; }
    public UserAttributeUpdateSettingsType UserAttributeUpdateSettings { get; public set; }
    public UserPoolAddOnsType UserPoolAddOns { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public Dictionary`2<string, string> UserPoolTags { get; public set; }
    public VerificationMessageTemplateType VerificationMessageTemplate { get; public set; }
    public AccountRecoverySettingType get_AccountRecoverySetting();
    public void set_AccountRecoverySetting(AccountRecoverySettingType value);
    internal bool IsSetAccountRecoverySetting();
    public AdminCreateUserConfigType get_AdminCreateUserConfig();
    public void set_AdminCreateUserConfig(AdminCreateUserConfigType value);
    internal bool IsSetAdminCreateUserConfig();
    public List`1<string> get_AutoVerifiedAttributes();
    public void set_AutoVerifiedAttributes(List`1<string> value);
    internal bool IsSetAutoVerifiedAttributes();
    public DeletionProtectionType get_DeletionProtection();
    public void set_DeletionProtection(DeletionProtectionType value);
    internal bool IsSetDeletionProtection();
    public DeviceConfigurationType get_DeviceConfiguration();
    public void set_DeviceConfiguration(DeviceConfigurationType value);
    internal bool IsSetDeviceConfiguration();
    public EmailConfigurationType get_EmailConfiguration();
    public void set_EmailConfiguration(EmailConfigurationType value);
    internal bool IsSetEmailConfiguration();
    public string get_EmailVerificationMessage();
    public void set_EmailVerificationMessage(string value);
    internal bool IsSetEmailVerificationMessage();
    public string get_EmailVerificationSubject();
    public void set_EmailVerificationSubject(string value);
    internal bool IsSetEmailVerificationSubject();
    public LambdaConfigType get_LambdaConfig();
    public void set_LambdaConfig(LambdaConfigType value);
    internal bool IsSetLambdaConfig();
    public UserPoolMfaType get_MfaConfiguration();
    public void set_MfaConfiguration(UserPoolMfaType value);
    internal bool IsSetMfaConfiguration();
    public UserPoolPolicyType get_Policies();
    public void set_Policies(UserPoolPolicyType value);
    internal bool IsSetPolicies();
    public string get_SmsAuthenticationMessage();
    public void set_SmsAuthenticationMessage(string value);
    internal bool IsSetSmsAuthenticationMessage();
    public SmsConfigurationType get_SmsConfiguration();
    public void set_SmsConfiguration(SmsConfigurationType value);
    internal bool IsSetSmsConfiguration();
    public string get_SmsVerificationMessage();
    public void set_SmsVerificationMessage(string value);
    internal bool IsSetSmsVerificationMessage();
    public UserAttributeUpdateSettingsType get_UserAttributeUpdateSettings();
    public void set_UserAttributeUpdateSettings(UserAttributeUpdateSettingsType value);
    internal bool IsSetUserAttributeUpdateSettings();
    public UserPoolAddOnsType get_UserPoolAddOns();
    public void set_UserPoolAddOns(UserPoolAddOnsType value);
    internal bool IsSetUserPoolAddOns();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
    public Dictionary`2<string, string> get_UserPoolTags();
    public void set_UserPoolTags(Dictionary`2<string, string> value);
    internal bool IsSetUserPoolTags();
    public VerificationMessageTemplateType get_VerificationMessageTemplate();
    public void set_VerificationMessageTemplate(VerificationMessageTemplateType value);
    internal bool IsSetVerificationMessageTemplate();
}
public class Amazon.CognitoIdentityProvider.Model.UpdateUserPoolResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.Model.UserAttributeUpdateSettingsType : object {
    private List`1<string> _attributesRequireVerificationBeforeUpdate;
    public List`1<string> AttributesRequireVerificationBeforeUpdate { get; public set; }
    public List`1<string> get_AttributesRequireVerificationBeforeUpdate();
    public void set_AttributesRequireVerificationBeforeUpdate(List`1<string> value);
    internal bool IsSetAttributesRequireVerificationBeforeUpdate();
}
public class Amazon.CognitoIdentityProvider.Model.UserContextDataType : object {
    private string _encodedData;
    private string _ipAddress;
    [AWSPropertyAttribute]
public string EncodedData { get; public set; }
    [AWSPropertyAttribute]
public string IpAddress { get; public set; }
    public string get_EncodedData();
    public void set_EncodedData(string value);
    internal bool IsSetEncodedData();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
}
public class Amazon.CognitoIdentityProvider.Model.UserImportInProgressException : AmazonCognitoIdentityProviderException {
    public UserImportInProgressException(string message);
    public UserImportInProgressException(string message, Exception innerException);
    public UserImportInProgressException(Exception innerException);
    public UserImportInProgressException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UserImportInProgressException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UserImportJobType : object {
    private string _cloudWatchLogsRoleArn;
    private Nullable`1<DateTime> _completionDate;
    private string _completionMessage;
    private Nullable`1<DateTime> _creationDate;
    private Nullable`1<long> _failedUsers;
    private Nullable`1<long> _importedUsers;
    private string _jobId;
    private string _jobName;
    private string _preSignedUrl;
    private Nullable`1<long> _skippedUsers;
    private Nullable`1<DateTime> _startDate;
    private UserImportJobStatusType _status;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string CloudWatchLogsRoleArn { get; public set; }
    public Nullable`1<DateTime> CompletionDate { get; public set; }
    [AWSPropertyAttribute]
public string CompletionMessage { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    public Nullable`1<long> FailedUsers { get; public set; }
    public Nullable`1<long> ImportedUsers { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public string JobName { get; public set; }
    [AWSPropertyAttribute]
public string PreSignedUrl { get; public set; }
    public Nullable`1<long> SkippedUsers { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public UserImportJobStatusType Status { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_CloudWatchLogsRoleArn();
    public void set_CloudWatchLogsRoleArn(string value);
    internal bool IsSetCloudWatchLogsRoleArn();
    public Nullable`1<DateTime> get_CompletionDate();
    public void set_CompletionDate(Nullable`1<DateTime> value);
    internal bool IsSetCompletionDate();
    public string get_CompletionMessage();
    public void set_CompletionMessage(string value);
    internal bool IsSetCompletionMessage();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public Nullable`1<long> get_FailedUsers();
    public void set_FailedUsers(Nullable`1<long> value);
    internal bool IsSetFailedUsers();
    public Nullable`1<long> get_ImportedUsers();
    public void set_ImportedUsers(Nullable`1<long> value);
    internal bool IsSetImportedUsers();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_JobName();
    public void set_JobName(string value);
    internal bool IsSetJobName();
    public string get_PreSignedUrl();
    public void set_PreSignedUrl(string value);
    internal bool IsSetPreSignedUrl();
    public Nullable`1<long> get_SkippedUsers();
    public void set_SkippedUsers(Nullable`1<long> value);
    internal bool IsSetSkippedUsers();
    public Nullable`1<DateTime> get_StartDate();
    public void set_StartDate(Nullable`1<DateTime> value);
    internal bool IsSetStartDate();
    public UserImportJobStatusType get_Status();
    public void set_Status(UserImportJobStatusType value);
    internal bool IsSetStatus();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException : AmazonCognitoIdentityProviderException {
    public UserLambdaValidationException(string message);
    public UserLambdaValidationException(string message, Exception innerException);
    public UserLambdaValidationException(Exception innerException);
    public UserLambdaValidationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UserLambdaValidationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UsernameConfigurationType : object {
    private Nullable`1<bool> _caseSensitive;
    [AWSPropertyAttribute]
public Nullable`1<bool> CaseSensitive { get; public set; }
    public Nullable`1<bool> get_CaseSensitive();
    public void set_CaseSensitive(Nullable`1<bool> value);
    internal bool IsSetCaseSensitive();
}
public class Amazon.CognitoIdentityProvider.Model.UsernameExistsException : AmazonCognitoIdentityProviderException {
    public UsernameExistsException(string message);
    public UsernameExistsException(string message, Exception innerException);
    public UsernameExistsException(Exception innerException);
    public UsernameExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UsernameExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException : AmazonCognitoIdentityProviderException {
    public UserNotConfirmedException(string message);
    public UserNotConfirmedException(string message, Exception innerException);
    public UserNotConfirmedException(Exception innerException);
    public UserNotConfirmedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UserNotConfirmedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UserNotFoundException : AmazonCognitoIdentityProviderException {
    public UserNotFoundException(string message);
    public UserNotFoundException(string message, Exception innerException);
    public UserNotFoundException(Exception innerException);
    public UserNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UserNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException : AmazonCognitoIdentityProviderException {
    public UserPoolAddOnNotEnabledException(string message);
    public UserPoolAddOnNotEnabledException(string message, Exception innerException);
    public UserPoolAddOnNotEnabledException(Exception innerException);
    public UserPoolAddOnNotEnabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UserPoolAddOnNotEnabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UserPoolAddOnsType : object {
    private AdvancedSecurityModeType _advancedSecurityMode;
    [AWSPropertyAttribute]
public AdvancedSecurityModeType AdvancedSecurityMode { get; public set; }
    public AdvancedSecurityModeType get_AdvancedSecurityMode();
    public void set_AdvancedSecurityMode(AdvancedSecurityModeType value);
    internal bool IsSetAdvancedSecurityMode();
}
public class Amazon.CognitoIdentityProvider.Model.UserPoolClientDescription : object {
    private string _clientId;
    private string _clientName;
    private string _userPoolId;
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string ClientName { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_ClientName();
    public void set_ClientName(string value);
    internal bool IsSetClientName();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
}
public class Amazon.CognitoIdentityProvider.Model.UserPoolClientType : object {
    private Nullable`1<int> _accessTokenValidity;
    private List`1<string> _allowedOAuthFlows;
    private Nullable`1<bool> _allowedOAuthFlowsUserPoolClient;
    private List`1<string> _allowedOAuthScopes;
    private AnalyticsConfigurationType _analyticsConfiguration;
    private Nullable`1<int> _authSessionValidity;
    private List`1<string> _callbackURLs;
    private string _clientId;
    private string _clientName;
    private string _clientSecret;
    private Nullable`1<DateTime> _creationDate;
    private string _defaultRedirectURI;
    private Nullable`1<bool> _enablePropagateAdditionalUserContextData;
    private Nullable`1<bool> _enableTokenRevocation;
    private List`1<string> _explicitAuthFlows;
    private Nullable`1<int> _idTokenValidity;
    private Nullable`1<DateTime> _lastModifiedDate;
    private List`1<string> _logoutURLs;
    private PreventUserExistenceErrorTypes _preventUserExistenceErrors;
    private List`1<string> _readAttributes;
    private Nullable`1<int> _refreshTokenValidity;
    private List`1<string> _supportedIdentityProviders;
    private TokenValidityUnitsType _tokenValidityUnits;
    private string _userPoolId;
    private List`1<string> _writeAttributes;
    [AWSPropertyAttribute]
public Nullable`1<int> AccessTokenValidity { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowedOAuthFlows { get; public set; }
    public Nullable`1<bool> AllowedOAuthFlowsUserPoolClient { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> AllowedOAuthScopes { get; public set; }
    public AnalyticsConfigurationType AnalyticsConfiguration { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> AuthSessionValidity { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> CallbackURLs { get; public set; }
    [AWSPropertyAttribute]
public string ClientId { get; public set; }
    [AWSPropertyAttribute]
public string ClientName { get; public set; }
    [AWSPropertyAttribute]
public string ClientSecret { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public string DefaultRedirectURI { get; public set; }
    public Nullable`1<bool> EnablePropagateAdditionalUserContextData { get; public set; }
    public Nullable`1<bool> EnableTokenRevocation { get; public set; }
    public List`1<string> ExplicitAuthFlows { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> IdTokenValidity { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> LogoutURLs { get; public set; }
    public PreventUserExistenceErrorTypes PreventUserExistenceErrors { get; public set; }
    public List`1<string> ReadAttributes { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> RefreshTokenValidity { get; public set; }
    public List`1<string> SupportedIdentityProviders { get; public set; }
    public TokenValidityUnitsType TokenValidityUnits { get; public set; }
    [AWSPropertyAttribute]
public string UserPoolId { get; public set; }
    public List`1<string> WriteAttributes { get; public set; }
    public Nullable`1<int> get_AccessTokenValidity();
    public void set_AccessTokenValidity(Nullable`1<int> value);
    internal bool IsSetAccessTokenValidity();
    public List`1<string> get_AllowedOAuthFlows();
    public void set_AllowedOAuthFlows(List`1<string> value);
    internal bool IsSetAllowedOAuthFlows();
    public Nullable`1<bool> get_AllowedOAuthFlowsUserPoolClient();
    public void set_AllowedOAuthFlowsUserPoolClient(Nullable`1<bool> value);
    internal bool IsSetAllowedOAuthFlowsUserPoolClient();
    public List`1<string> get_AllowedOAuthScopes();
    public void set_AllowedOAuthScopes(List`1<string> value);
    internal bool IsSetAllowedOAuthScopes();
    public AnalyticsConfigurationType get_AnalyticsConfiguration();
    public void set_AnalyticsConfiguration(AnalyticsConfigurationType value);
    internal bool IsSetAnalyticsConfiguration();
    public Nullable`1<int> get_AuthSessionValidity();
    public void set_AuthSessionValidity(Nullable`1<int> value);
    internal bool IsSetAuthSessionValidity();
    public List`1<string> get_CallbackURLs();
    public void set_CallbackURLs(List`1<string> value);
    internal bool IsSetCallbackURLs();
    public string get_ClientId();
    public void set_ClientId(string value);
    internal bool IsSetClientId();
    public string get_ClientName();
    public void set_ClientName(string value);
    internal bool IsSetClientName();
    public string get_ClientSecret();
    public void set_ClientSecret(string value);
    internal bool IsSetClientSecret();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public string get_DefaultRedirectURI();
    public void set_DefaultRedirectURI(string value);
    internal bool IsSetDefaultRedirectURI();
    public Nullable`1<bool> get_EnablePropagateAdditionalUserContextData();
    public void set_EnablePropagateAdditionalUserContextData(Nullable`1<bool> value);
    internal bool IsSetEnablePropagateAdditionalUserContextData();
    public Nullable`1<bool> get_EnableTokenRevocation();
    public void set_EnableTokenRevocation(Nullable`1<bool> value);
    internal bool IsSetEnableTokenRevocation();
    public List`1<string> get_ExplicitAuthFlows();
    public void set_ExplicitAuthFlows(List`1<string> value);
    internal bool IsSetExplicitAuthFlows();
    public Nullable`1<int> get_IdTokenValidity();
    public void set_IdTokenValidity(Nullable`1<int> value);
    internal bool IsSetIdTokenValidity();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public List`1<string> get_LogoutURLs();
    public void set_LogoutURLs(List`1<string> value);
    internal bool IsSetLogoutURLs();
    public PreventUserExistenceErrorTypes get_PreventUserExistenceErrors();
    public void set_PreventUserExistenceErrors(PreventUserExistenceErrorTypes value);
    internal bool IsSetPreventUserExistenceErrors();
    public List`1<string> get_ReadAttributes();
    public void set_ReadAttributes(List`1<string> value);
    internal bool IsSetReadAttributes();
    public Nullable`1<int> get_RefreshTokenValidity();
    public void set_RefreshTokenValidity(Nullable`1<int> value);
    internal bool IsSetRefreshTokenValidity();
    public List`1<string> get_SupportedIdentityProviders();
    public void set_SupportedIdentityProviders(List`1<string> value);
    internal bool IsSetSupportedIdentityProviders();
    public TokenValidityUnitsType get_TokenValidityUnits();
    public void set_TokenValidityUnits(TokenValidityUnitsType value);
    internal bool IsSetTokenValidityUnits();
    public string get_UserPoolId();
    public void set_UserPoolId(string value);
    internal bool IsSetUserPoolId();
    public List`1<string> get_WriteAttributes();
    public void set_WriteAttributes(List`1<string> value);
    internal bool IsSetWriteAttributes();
}
public class Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType : object {
    private Nullable`1<DateTime> _creationDate;
    private string _id;
    private LambdaConfigType _lambdaConfig;
    private Nullable`1<DateTime> _lastModifiedDate;
    private string _name;
    private StatusType _status;
    public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public LambdaConfigType LambdaConfig { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [ObsoleteAttribute("This property is no longer available.")]
public StatusType Status { get; public set; }
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public LambdaConfigType get_LambdaConfig();
    public void set_LambdaConfig(LambdaConfigType value);
    internal bool IsSetLambdaConfig();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public StatusType get_Status();
    public void set_Status(StatusType value);
    internal bool IsSetStatus();
}
public class Amazon.CognitoIdentityProvider.Model.UserPoolPolicyType : object {
    private PasswordPolicyType _passwordPolicy;
    public PasswordPolicyType PasswordPolicy { get; public set; }
    public PasswordPolicyType get_PasswordPolicy();
    public void set_PasswordPolicy(PasswordPolicyType value);
    internal bool IsSetPasswordPolicy();
}
public class Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException : AmazonCognitoIdentityProviderException {
    public UserPoolTaggingException(string message);
    public UserPoolTaggingException(string message, Exception innerException);
    public UserPoolTaggingException(Exception innerException);
    public UserPoolTaggingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UserPoolTaggingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.CognitoIdentityProvider.Model.UserPoolType : object {
    private AccountRecoverySettingType _accountRecoverySetting;
    private AdminCreateUserConfigType _adminCreateUserConfig;
    private List`1<string> _aliasAttributes;
    private string _arn;
    private List`1<string> _autoVerifiedAttributes;
    private Nullable`1<DateTime> _creationDate;
    private string _customDomain;
    private DeletionProtectionType _deletionProtection;
    private DeviceConfigurationType _deviceConfiguration;
    private string _domain;
    private EmailConfigurationType _emailConfiguration;
    private string _emailConfigurationFailure;
    private string _emailVerificationMessage;
    private string _emailVerificationSubject;
    private Nullable`1<int> _estimatedNumberOfUsers;
    private string _id;
    private LambdaConfigType _lambdaConfig;
    private Nullable`1<DateTime> _lastModifiedDate;
    private UserPoolMfaType _mfaConfiguration;
    private string _name;
    private UserPoolPolicyType _policies;
    private List`1<SchemaAttributeType> _schemaAttributes;
    private string _smsAuthenticationMessage;
    private SmsConfigurationType _smsConfiguration;
    private string _smsConfigurationFailure;
    private string _smsVerificationMessage;
    private StatusType _status;
    private UserAttributeUpdateSettingsType _userAttributeUpdateSettings;
    private List`1<string> _usernameAttributes;
    private UsernameConfigurationType _usernameConfiguration;
    private UserPoolAddOnsType _userPoolAddOns;
    private Dictionary`2<string, string> _userPoolTags;
    private VerificationMessageTemplateType _verificationMessageTemplate;
    public AccountRecoverySettingType AccountRecoverySetting { get; public set; }
    public AdminCreateUserConfigType AdminCreateUserConfig { get; public set; }
    public List`1<string> AliasAttributes { get; public set; }
    [AWSPropertyAttribute]
public string Arn { get; public set; }
    public List`1<string> AutoVerifiedAttributes { get; public set; }
    public Nullable`1<DateTime> CreationDate { get; public set; }
    [AWSPropertyAttribute]
public string CustomDomain { get; public set; }
    public DeletionProtectionType DeletionProtection { get; public set; }
    public DeviceConfigurationType DeviceConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Domain { get; public set; }
    public EmailConfigurationType EmailConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string EmailConfigurationFailure { get; public set; }
    [AWSPropertyAttribute]
public string EmailVerificationMessage { get; public set; }
    [AWSPropertyAttribute]
public string EmailVerificationSubject { get; public set; }
    public Nullable`1<int> EstimatedNumberOfUsers { get; public set; }
    [AWSPropertyAttribute]
public string Id { get; public set; }
    public LambdaConfigType LambdaConfig { get; public set; }
    public Nullable`1<DateTime> LastModifiedDate { get; public set; }
    public UserPoolMfaType MfaConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string Name { get; public set; }
    public UserPoolPolicyType Policies { get; public set; }
    [AWSPropertyAttribute]
public List`1<SchemaAttributeType> SchemaAttributes { get; public set; }
    [AWSPropertyAttribute]
public string SmsAuthenticationMessage { get; public set; }
    public SmsConfigurationType SmsConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string SmsConfigurationFailure { get; public set; }
    [AWSPropertyAttribute]
public string SmsVerificationMessage { get; public set; }
    [ObsoleteAttribute("This property is no longer available.")]
public StatusType Status { get; public set; }
    public UserAttributeUpdateSettingsType UserAttributeUpdateSettings { get; public set; }
    public List`1<string> UsernameAttributes { get; public set; }
    public UsernameConfigurationType UsernameConfiguration { get; public set; }
    public UserPoolAddOnsType UserPoolAddOns { get; public set; }
    public Dictionary`2<string, string> UserPoolTags { get; public set; }
    public VerificationMessageTemplateType VerificationMessageTemplate { get; public set; }
    public AccountRecoverySettingType get_AccountRecoverySetting();
    public void set_AccountRecoverySetting(AccountRecoverySettingType value);
    internal bool IsSetAccountRecoverySetting();
    public AdminCreateUserConfigType get_AdminCreateUserConfig();
    public void set_AdminCreateUserConfig(AdminCreateUserConfigType value);
    internal bool IsSetAdminCreateUserConfig();
    public List`1<string> get_AliasAttributes();
    public void set_AliasAttributes(List`1<string> value);
    internal bool IsSetAliasAttributes();
    public string get_Arn();
    public void set_Arn(string value);
    internal bool IsSetArn();
    public List`1<string> get_AutoVerifiedAttributes();
    public void set_AutoVerifiedAttributes(List`1<string> value);
    internal bool IsSetAutoVerifiedAttributes();
    public Nullable`1<DateTime> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCreationDate();
    public string get_CustomDomain();
    public void set_CustomDomain(string value);
    internal bool IsSetCustomDomain();
    public DeletionProtectionType get_DeletionProtection();
    public void set_DeletionProtection(DeletionProtectionType value);
    internal bool IsSetDeletionProtection();
    public DeviceConfigurationType get_DeviceConfiguration();
    public void set_DeviceConfiguration(DeviceConfigurationType value);
    internal bool IsSetDeviceConfiguration();
    public string get_Domain();
    public void set_Domain(string value);
    internal bool IsSetDomain();
    public EmailConfigurationType get_EmailConfiguration();
    public void set_EmailConfiguration(EmailConfigurationType value);
    internal bool IsSetEmailConfiguration();
    public string get_EmailConfigurationFailure();
    public void set_EmailConfigurationFailure(string value);
    internal bool IsSetEmailConfigurationFailure();
    public string get_EmailVerificationMessage();
    public void set_EmailVerificationMessage(string value);
    internal bool IsSetEmailVerificationMessage();
    public string get_EmailVerificationSubject();
    public void set_EmailVerificationSubject(string value);
    internal bool IsSetEmailVerificationSubject();
    public Nullable`1<int> get_EstimatedNumberOfUsers();
    public void set_EstimatedNumberOfUsers(Nullable`1<int> value);
    internal bool IsSetEstimatedNumberOfUsers();
    public string get_Id();
    public void set_Id(string value);
    internal bool IsSetId();
    public LambdaConfigType get_LambdaConfig();
    public void set_LambdaConfig(LambdaConfigType value);
    internal bool IsSetLambdaConfig();
    public Nullable`1<DateTime> get_LastModifiedDate();
    public void set_LastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetLastModifiedDate();
    public UserPoolMfaType get_MfaConfiguration();
    public void set_MfaConfiguration(UserPoolMfaType value);
    internal bool IsSetMfaConfiguration();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public UserPoolPolicyType get_Policies();
    public void set_Policies(UserPoolPolicyType value);
    internal bool IsSetPolicies();
    public List`1<SchemaAttributeType> get_SchemaAttributes();
    public void set_SchemaAttributes(List`1<SchemaAttributeType> value);
    internal bool IsSetSchemaAttributes();
    public string get_SmsAuthenticationMessage();
    public void set_SmsAuthenticationMessage(string value);
    internal bool IsSetSmsAuthenticationMessage();
    public SmsConfigurationType get_SmsConfiguration();
    public void set_SmsConfiguration(SmsConfigurationType value);
    internal bool IsSetSmsConfiguration();
    public string get_SmsConfigurationFailure();
    public void set_SmsConfigurationFailure(string value);
    internal bool IsSetSmsConfigurationFailure();
    public string get_SmsVerificationMessage();
    public void set_SmsVerificationMessage(string value);
    internal bool IsSetSmsVerificationMessage();
    public StatusType get_Status();
    public void set_Status(StatusType value);
    internal bool IsSetStatus();
    public UserAttributeUpdateSettingsType get_UserAttributeUpdateSettings();
    public void set_UserAttributeUpdateSettings(UserAttributeUpdateSettingsType value);
    internal bool IsSetUserAttributeUpdateSettings();
    public List`1<string> get_UsernameAttributes();
    public void set_UsernameAttributes(List`1<string> value);
    internal bool IsSetUsernameAttributes();
    public UsernameConfigurationType get_UsernameConfiguration();
    public void set_UsernameConfiguration(UsernameConfigurationType value);
    internal bool IsSetUsernameConfiguration();
    public UserPoolAddOnsType get_UserPoolAddOns();
    public void set_UserPoolAddOns(UserPoolAddOnsType value);
    internal bool IsSetUserPoolAddOns();
    public Dictionary`2<string, string> get_UserPoolTags();
    public void set_UserPoolTags(Dictionary`2<string, string> value);
    internal bool IsSetUserPoolTags();
    public VerificationMessageTemplateType get_VerificationMessageTemplate();
    public void set_VerificationMessageTemplate(VerificationMessageTemplateType value);
    internal bool IsSetVerificationMessageTemplate();
}
public class Amazon.CognitoIdentityProvider.Model.UserType : object {
    private List`1<AttributeType> _attributes;
    private Nullable`1<bool> _enabled;
    private List`1<MFAOptionType> _mfaOptions;
    private Nullable`1<DateTime> _userCreateDate;
    private Nullable`1<DateTime> _userLastModifiedDate;
    private string _username;
    private UserStatusType _userStatus;
    public List`1<AttributeType> Attributes { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<MFAOptionType> MFAOptions { get; public set; }
    public Nullable`1<DateTime> UserCreateDate { get; public set; }
    public Nullable`1<DateTime> UserLastModifiedDate { get; public set; }
    [AWSPropertyAttribute]
public string Username { get; public set; }
    public UserStatusType UserStatus { get; public set; }
    public List`1<AttributeType> get_Attributes();
    public void set_Attributes(List`1<AttributeType> value);
    internal bool IsSetAttributes();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<MFAOptionType> get_MFAOptions();
    public void set_MFAOptions(List`1<MFAOptionType> value);
    internal bool IsSetMFAOptions();
    public Nullable`1<DateTime> get_UserCreateDate();
    public void set_UserCreateDate(Nullable`1<DateTime> value);
    internal bool IsSetUserCreateDate();
    public Nullable`1<DateTime> get_UserLastModifiedDate();
    public void set_UserLastModifiedDate(Nullable`1<DateTime> value);
    internal bool IsSetUserLastModifiedDate();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public UserStatusType get_UserStatus();
    public void set_UserStatus(UserStatusType value);
    internal bool IsSetUserStatus();
}
public class Amazon.CognitoIdentityProvider.Model.VerificationMessageTemplateType : object {
    private DefaultEmailOptionType _defaultEmailOption;
    private string _emailMessage;
    private string _emailMessageByLink;
    private string _emailSubject;
    private string _emailSubjectByLink;
    private string _smsMessage;
    public DefaultEmailOptionType DefaultEmailOption { get; public set; }
    [AWSPropertyAttribute]
public string EmailMessage { get; public set; }
    [AWSPropertyAttribute]
public string EmailMessageByLink { get; public set; }
    [AWSPropertyAttribute]
public string EmailSubject { get; public set; }
    [AWSPropertyAttribute]
public string EmailSubjectByLink { get; public set; }
    [AWSPropertyAttribute]
public string SmsMessage { get; public set; }
    public DefaultEmailOptionType get_DefaultEmailOption();
    public void set_DefaultEmailOption(DefaultEmailOptionType value);
    internal bool IsSetDefaultEmailOption();
    public string get_EmailMessage();
    public void set_EmailMessage(string value);
    internal bool IsSetEmailMessage();
    public string get_EmailMessageByLink();
    public void set_EmailMessageByLink(string value);
    internal bool IsSetEmailMessageByLink();
    public string get_EmailSubject();
    public void set_EmailSubject(string value);
    internal bool IsSetEmailSubject();
    public string get_EmailSubjectByLink();
    public void set_EmailSubjectByLink(string value);
    internal bool IsSetEmailSubjectByLink();
    public string get_SmsMessage();
    public void set_SmsMessage(string value);
    internal bool IsSetSmsMessage();
}
public class Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private string _friendlyDeviceName;
    private string _session;
    private string _userCode;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string FriendlyDeviceName { get; public set; }
    [AWSPropertyAttribute]
public string Session { get; public set; }
    [AWSPropertyAttribute]
public string UserCode { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_FriendlyDeviceName();
    public void set_FriendlyDeviceName(string value);
    internal bool IsSetFriendlyDeviceName();
    public string get_Session();
    public void set_Session(string value);
    internal bool IsSetSession();
    public string get_UserCode();
    public void set_UserCode(string value);
    internal bool IsSetUserCode();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenResponse : AmazonWebServiceResponse {
    private string _session;
    private VerifySoftwareTokenResponseType _status;
    [AWSPropertyAttribute]
public string Session { get; public set; }
    public VerifySoftwareTokenResponseType Status { get; public set; }
    public string get_Session();
    public void set_Session(string value);
    internal bool IsSetSession();
    public VerifySoftwareTokenResponseType get_Status();
    public void set_Status(VerifySoftwareTokenResponseType value);
    internal bool IsSetStatus();
}
public class Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest : AmazonCognitoIdentityProviderRequest {
    private string _accessToken;
    private string _attributeName;
    private string _code;
    [AWSPropertyAttribute]
public string AccessToken { get; public set; }
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    [AWSPropertyAttribute]
public string Code { get; public set; }
    public string get_AccessToken();
    public void set_AccessToken(string value);
    internal bool IsSetAccessToken();
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    protected virtual AbstractAWSSigner CreateSigner();
}
public class Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeResponse : AmazonWebServiceResponse {
}
public class Amazon.CognitoIdentityProvider.OAuthFlowType : ConstantClass {
    public static OAuthFlowType Client_credentials;
    public static OAuthFlowType Code;
    public static OAuthFlowType Implicit;
    public OAuthFlowType(string value);
    private static OAuthFlowType();
    public static OAuthFlowType FindValue(string value);
    public static OAuthFlowType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.PreTokenGenerationLambdaVersionType : ConstantClass {
    public static PreTokenGenerationLambdaVersionType V1_0;
    public static PreTokenGenerationLambdaVersionType V2_0;
    public PreTokenGenerationLambdaVersionType(string value);
    private static PreTokenGenerationLambdaVersionType();
    public static PreTokenGenerationLambdaVersionType FindValue(string value);
    public static PreTokenGenerationLambdaVersionType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.PreventUserExistenceErrorTypes : ConstantClass {
    public static PreventUserExistenceErrorTypes ENABLED;
    public static PreventUserExistenceErrorTypes LEGACY;
    public PreventUserExistenceErrorTypes(string value);
    private static PreventUserExistenceErrorTypes();
    public static PreventUserExistenceErrorTypes FindValue(string value);
    public static PreventUserExistenceErrorTypes op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.RecoveryOptionNameType : ConstantClass {
    public static RecoveryOptionNameType Admin_only;
    public static RecoveryOptionNameType Verified_email;
    public static RecoveryOptionNameType Verified_phone_number;
    public RecoveryOptionNameType(string value);
    private static RecoveryOptionNameType();
    public static RecoveryOptionNameType FindValue(string value);
    public static RecoveryOptionNameType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.RiskDecisionType : ConstantClass {
    public static RiskDecisionType AccountTakeover;
    public static RiskDecisionType Block;
    public static RiskDecisionType NoRisk;
    public RiskDecisionType(string value);
    private static RiskDecisionType();
    public static RiskDecisionType FindValue(string value);
    public static RiskDecisionType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.RiskLevelType : ConstantClass {
    public static RiskLevelType High;
    public static RiskLevelType Low;
    public static RiskLevelType Medium;
    public RiskLevelType(string value);
    private static RiskLevelType();
    public static RiskLevelType FindValue(string value);
    public static RiskLevelType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.StatusType : ConstantClass {
    public static StatusType Disabled;
    public static StatusType Enabled;
    public StatusType(string value);
    private static StatusType();
    public static StatusType FindValue(string value);
    public static StatusType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.TimeUnitsType : ConstantClass {
    public static TimeUnitsType Days;
    public static TimeUnitsType Hours;
    public static TimeUnitsType Minutes;
    public static TimeUnitsType Seconds;
    public TimeUnitsType(string value);
    private static TimeUnitsType();
    public static TimeUnitsType FindValue(string value);
    public static TimeUnitsType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.UserImportJobStatusType : ConstantClass {
    public static UserImportJobStatusType Created;
    public static UserImportJobStatusType Expired;
    public static UserImportJobStatusType Failed;
    public static UserImportJobStatusType InProgress;
    public static UserImportJobStatusType Pending;
    public static UserImportJobStatusType Stopped;
    public static UserImportJobStatusType Stopping;
    public static UserImportJobStatusType Succeeded;
    public UserImportJobStatusType(string value);
    private static UserImportJobStatusType();
    public static UserImportJobStatusType FindValue(string value);
    public static UserImportJobStatusType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.UsernameAttributeType : ConstantClass {
    public static UsernameAttributeType Email;
    public static UsernameAttributeType Phone_number;
    public UsernameAttributeType(string value);
    private static UsernameAttributeType();
    public static UsernameAttributeType FindValue(string value);
    public static UsernameAttributeType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.UserPoolMfaType : ConstantClass {
    public static UserPoolMfaType OFF;
    public static UserPoolMfaType ON;
    public static UserPoolMfaType OPTIONAL;
    public UserPoolMfaType(string value);
    private static UserPoolMfaType();
    public static UserPoolMfaType FindValue(string value);
    public static UserPoolMfaType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.UserStatusType : ConstantClass {
    public static UserStatusType ARCHIVED;
    public static UserStatusType COMPROMISED;
    public static UserStatusType CONFIRMED;
    public static UserStatusType EXTERNAL_PROVIDER;
    public static UserStatusType FORCE_CHANGE_PASSWORD;
    public static UserStatusType RESET_REQUIRED;
    public static UserStatusType UNCONFIRMED;
    public static UserStatusType UNKNOWN;
    public UserStatusType(string value);
    private static UserStatusType();
    public static UserStatusType FindValue(string value);
    public static UserStatusType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.VerifiedAttributeType : ConstantClass {
    public static VerifiedAttributeType Email;
    public static VerifiedAttributeType Phone_number;
    public VerifiedAttributeType(string value);
    private static VerifiedAttributeType();
    public static VerifiedAttributeType FindValue(string value);
    public static VerifiedAttributeType op_Implicit(string value);
}
public class Amazon.CognitoIdentityProvider.VerifySoftwareTokenResponseType : ConstantClass {
    public static VerifySoftwareTokenResponseType ERROR;
    public static VerifySoftwareTokenResponseType SUCCESS;
    public VerifySoftwareTokenResponseType(string value);
    private static VerifySoftwareTokenResponseType();
    public static VerifySoftwareTokenResponseType FindValue(string value);
    public static VerifySoftwareTokenResponseType op_Implicit(string value);
}
