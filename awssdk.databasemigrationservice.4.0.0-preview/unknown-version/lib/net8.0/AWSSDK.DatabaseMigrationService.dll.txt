public class Amazon.DatabaseMigrationService.AmazonDatabaseMigrationServiceClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IDatabaseMigrationServicePaginatorFactory _paginators;
    public IDatabaseMigrationServicePaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonDatabaseMigrationServiceClient(RegionEndpoint region);
    public AmazonDatabaseMigrationServiceClient(AmazonDatabaseMigrationServiceConfig config);
    public AmazonDatabaseMigrationServiceClient(AWSCredentials credentials);
    public AmazonDatabaseMigrationServiceClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonDatabaseMigrationServiceClient(AWSCredentials credentials, AmazonDatabaseMigrationServiceConfig clientConfig);
    public AmazonDatabaseMigrationServiceClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonDatabaseMigrationServiceClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonDatabaseMigrationServiceClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonDatabaseMigrationServiceConfig clientConfig);
    public AmazonDatabaseMigrationServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonDatabaseMigrationServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonDatabaseMigrationServiceClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonDatabaseMigrationServiceConfig clientConfig);
    private static AmazonDatabaseMigrationServiceClient();
    public sealed virtual IDatabaseMigrationServicePaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AddTagsToResourceResponse AddTagsToResource(AddTagsToResourceRequest request);
    public virtual Task`1<AddTagsToResourceResponse> AddTagsToResourceAsync(AddTagsToResourceRequest request, CancellationToken cancellationToken);
    internal virtual ApplyPendingMaintenanceActionResponse ApplyPendingMaintenanceAction(ApplyPendingMaintenanceActionRequest request);
    public virtual Task`1<ApplyPendingMaintenanceActionResponse> ApplyPendingMaintenanceActionAsync(ApplyPendingMaintenanceActionRequest request, CancellationToken cancellationToken);
    internal virtual BatchStartRecommendationsResponse BatchStartRecommendations(BatchStartRecommendationsRequest request);
    public virtual Task`1<BatchStartRecommendationsResponse> BatchStartRecommendationsAsync(BatchStartRecommendationsRequest request, CancellationToken cancellationToken);
    internal virtual CancelReplicationTaskAssessmentRunResponse CancelReplicationTaskAssessmentRun(CancelReplicationTaskAssessmentRunRequest request);
    public virtual Task`1<CancelReplicationTaskAssessmentRunResponse> CancelReplicationTaskAssessmentRunAsync(CancelReplicationTaskAssessmentRunRequest request, CancellationToken cancellationToken);
    internal virtual CreateDataProviderResponse CreateDataProvider(CreateDataProviderRequest request);
    public virtual Task`1<CreateDataProviderResponse> CreateDataProviderAsync(CreateDataProviderRequest request, CancellationToken cancellationToken);
    internal virtual CreateEndpointResponse CreateEndpoint(CreateEndpointRequest request);
    public virtual Task`1<CreateEndpointResponse> CreateEndpointAsync(CreateEndpointRequest request, CancellationToken cancellationToken);
    internal virtual CreateEventSubscriptionResponse CreateEventSubscription(CreateEventSubscriptionRequest request);
    public virtual Task`1<CreateEventSubscriptionResponse> CreateEventSubscriptionAsync(CreateEventSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual CreateFleetAdvisorCollectorResponse CreateFleetAdvisorCollector(CreateFleetAdvisorCollectorRequest request);
    public virtual Task`1<CreateFleetAdvisorCollectorResponse> CreateFleetAdvisorCollectorAsync(CreateFleetAdvisorCollectorRequest request, CancellationToken cancellationToken);
    internal virtual CreateInstanceProfileResponse CreateInstanceProfile(CreateInstanceProfileRequest request);
    public virtual Task`1<CreateInstanceProfileResponse> CreateInstanceProfileAsync(CreateInstanceProfileRequest request, CancellationToken cancellationToken);
    internal virtual CreateMigrationProjectResponse CreateMigrationProject(CreateMigrationProjectRequest request);
    public virtual Task`1<CreateMigrationProjectResponse> CreateMigrationProjectAsync(CreateMigrationProjectRequest request, CancellationToken cancellationToken);
    internal virtual CreateReplicationConfigResponse CreateReplicationConfig(CreateReplicationConfigRequest request);
    public virtual Task`1<CreateReplicationConfigResponse> CreateReplicationConfigAsync(CreateReplicationConfigRequest request, CancellationToken cancellationToken);
    internal virtual CreateReplicationInstanceResponse CreateReplicationInstance(CreateReplicationInstanceRequest request);
    public virtual Task`1<CreateReplicationInstanceResponse> CreateReplicationInstanceAsync(CreateReplicationInstanceRequest request, CancellationToken cancellationToken);
    internal virtual CreateReplicationSubnetGroupResponse CreateReplicationSubnetGroup(CreateReplicationSubnetGroupRequest request);
    public virtual Task`1<CreateReplicationSubnetGroupResponse> CreateReplicationSubnetGroupAsync(CreateReplicationSubnetGroupRequest request, CancellationToken cancellationToken);
    internal virtual CreateReplicationTaskResponse CreateReplicationTask(CreateReplicationTaskRequest request);
    public virtual Task`1<CreateReplicationTaskResponse> CreateReplicationTaskAsync(CreateReplicationTaskRequest request, CancellationToken cancellationToken);
    internal virtual DeleteCertificateResponse DeleteCertificate(DeleteCertificateRequest request);
    public virtual Task`1<DeleteCertificateResponse> DeleteCertificateAsync(DeleteCertificateRequest request, CancellationToken cancellationToken);
    internal virtual DeleteConnectionResponse DeleteConnection(DeleteConnectionRequest request);
    public virtual Task`1<DeleteConnectionResponse> DeleteConnectionAsync(DeleteConnectionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteDataProviderResponse DeleteDataProvider(DeleteDataProviderRequest request);
    public virtual Task`1<DeleteDataProviderResponse> DeleteDataProviderAsync(DeleteDataProviderRequest request, CancellationToken cancellationToken);
    internal virtual DeleteEndpointResponse DeleteEndpoint(DeleteEndpointRequest request);
    public virtual Task`1<DeleteEndpointResponse> DeleteEndpointAsync(DeleteEndpointRequest request, CancellationToken cancellationToken);
    internal virtual DeleteEventSubscriptionResponse DeleteEventSubscription(DeleteEventSubscriptionRequest request);
    public virtual Task`1<DeleteEventSubscriptionResponse> DeleteEventSubscriptionAsync(DeleteEventSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFleetAdvisorCollectorResponse DeleteFleetAdvisorCollector(DeleteFleetAdvisorCollectorRequest request);
    public virtual Task`1<DeleteFleetAdvisorCollectorResponse> DeleteFleetAdvisorCollectorAsync(DeleteFleetAdvisorCollectorRequest request, CancellationToken cancellationToken);
    internal virtual DeleteFleetAdvisorDatabasesResponse DeleteFleetAdvisorDatabases(DeleteFleetAdvisorDatabasesRequest request);
    public virtual Task`1<DeleteFleetAdvisorDatabasesResponse> DeleteFleetAdvisorDatabasesAsync(DeleteFleetAdvisorDatabasesRequest request, CancellationToken cancellationToken);
    internal virtual DeleteInstanceProfileResponse DeleteInstanceProfile(DeleteInstanceProfileRequest request);
    public virtual Task`1<DeleteInstanceProfileResponse> DeleteInstanceProfileAsync(DeleteInstanceProfileRequest request, CancellationToken cancellationToken);
    internal virtual DeleteMigrationProjectResponse DeleteMigrationProject(DeleteMigrationProjectRequest request);
    public virtual Task`1<DeleteMigrationProjectResponse> DeleteMigrationProjectAsync(DeleteMigrationProjectRequest request, CancellationToken cancellationToken);
    internal virtual DeleteReplicationConfigResponse DeleteReplicationConfig(DeleteReplicationConfigRequest request);
    public virtual Task`1<DeleteReplicationConfigResponse> DeleteReplicationConfigAsync(DeleteReplicationConfigRequest request, CancellationToken cancellationToken);
    internal virtual DeleteReplicationInstanceResponse DeleteReplicationInstance(DeleteReplicationInstanceRequest request);
    public virtual Task`1<DeleteReplicationInstanceResponse> DeleteReplicationInstanceAsync(DeleteReplicationInstanceRequest request, CancellationToken cancellationToken);
    internal virtual DeleteReplicationSubnetGroupResponse DeleteReplicationSubnetGroup(DeleteReplicationSubnetGroupRequest request);
    public virtual Task`1<DeleteReplicationSubnetGroupResponse> DeleteReplicationSubnetGroupAsync(DeleteReplicationSubnetGroupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteReplicationTaskResponse DeleteReplicationTask(DeleteReplicationTaskRequest request);
    public virtual Task`1<DeleteReplicationTaskResponse> DeleteReplicationTaskAsync(DeleteReplicationTaskRequest request, CancellationToken cancellationToken);
    internal virtual DeleteReplicationTaskAssessmentRunResponse DeleteReplicationTaskAssessmentRun(DeleteReplicationTaskAssessmentRunRequest request);
    public virtual Task`1<DeleteReplicationTaskAssessmentRunResponse> DeleteReplicationTaskAssessmentRunAsync(DeleteReplicationTaskAssessmentRunRequest request, CancellationToken cancellationToken);
    internal virtual DescribeAccountAttributesResponse DescribeAccountAttributes(DescribeAccountAttributesRequest request);
    public virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(DescribeAccountAttributesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeApplicableIndividualAssessmentsResponse DescribeApplicableIndividualAssessments(DescribeApplicableIndividualAssessmentsRequest request);
    public virtual Task`1<DescribeApplicableIndividualAssessmentsResponse> DescribeApplicableIndividualAssessmentsAsync(DescribeApplicableIndividualAssessmentsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeCertificatesResponse DescribeCertificates(DescribeCertificatesRequest request);
    public virtual Task`1<DescribeCertificatesResponse> DescribeCertificatesAsync(DescribeCertificatesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request);
    public virtual Task`1<DescribeConnectionsResponse> DescribeConnectionsAsync(DescribeConnectionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeConversionConfigurationResponse DescribeConversionConfiguration(DescribeConversionConfigurationRequest request);
    public virtual Task`1<DescribeConversionConfigurationResponse> DescribeConversionConfigurationAsync(DescribeConversionConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeDataProvidersResponse DescribeDataProviders(DescribeDataProvidersRequest request);
    public virtual Task`1<DescribeDataProvidersResponse> DescribeDataProvidersAsync(DescribeDataProvidersRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEndpointsResponse DescribeEndpoints(DescribeEndpointsRequest request);
    public virtual Task`1<DescribeEndpointsResponse> DescribeEndpointsAsync(DescribeEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEndpointSettingsResponse DescribeEndpointSettings(DescribeEndpointSettingsRequest request);
    public virtual Task`1<DescribeEndpointSettingsResponse> DescribeEndpointSettingsAsync(DescribeEndpointSettingsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEndpointTypesResponse DescribeEndpointTypes(DescribeEndpointTypesRequest request);
    public virtual Task`1<DescribeEndpointTypesResponse> DescribeEndpointTypesAsync(DescribeEndpointTypesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEngineVersionsResponse DescribeEngineVersions(DescribeEngineVersionsRequest request);
    public virtual Task`1<DescribeEngineVersionsResponse> DescribeEngineVersionsAsync(DescribeEngineVersionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEventCategoriesResponse DescribeEventCategories(DescribeEventCategoriesRequest request);
    public virtual Task`1<DescribeEventCategoriesResponse> DescribeEventCategoriesAsync(DescribeEventCategoriesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEventsResponse DescribeEvents(DescribeEventsRequest request);
    public virtual Task`1<DescribeEventsResponse> DescribeEventsAsync(DescribeEventsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEventSubscriptionsResponse DescribeEventSubscriptions(DescribeEventSubscriptionsRequest request);
    public virtual Task`1<DescribeEventSubscriptionsResponse> DescribeEventSubscriptionsAsync(DescribeEventSubscriptionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeExtensionPackAssociationsResponse DescribeExtensionPackAssociations(DescribeExtensionPackAssociationsRequest request);
    public virtual Task`1<DescribeExtensionPackAssociationsResponse> DescribeExtensionPackAssociationsAsync(DescribeExtensionPackAssociationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFleetAdvisorCollectorsResponse DescribeFleetAdvisorCollectors(DescribeFleetAdvisorCollectorsRequest request);
    public virtual Task`1<DescribeFleetAdvisorCollectorsResponse> DescribeFleetAdvisorCollectorsAsync(DescribeFleetAdvisorCollectorsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFleetAdvisorDatabasesResponse DescribeFleetAdvisorDatabases(DescribeFleetAdvisorDatabasesRequest request);
    public virtual Task`1<DescribeFleetAdvisorDatabasesResponse> DescribeFleetAdvisorDatabasesAsync(DescribeFleetAdvisorDatabasesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFleetAdvisorLsaAnalysisResponse DescribeFleetAdvisorLsaAnalysis(DescribeFleetAdvisorLsaAnalysisRequest request);
    public virtual Task`1<DescribeFleetAdvisorLsaAnalysisResponse> DescribeFleetAdvisorLsaAnalysisAsync(DescribeFleetAdvisorLsaAnalysisRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFleetAdvisorSchemaObjectSummaryResponse DescribeFleetAdvisorSchemaObjectSummary(DescribeFleetAdvisorSchemaObjectSummaryRequest request);
    public virtual Task`1<DescribeFleetAdvisorSchemaObjectSummaryResponse> DescribeFleetAdvisorSchemaObjectSummaryAsync(DescribeFleetAdvisorSchemaObjectSummaryRequest request, CancellationToken cancellationToken);
    internal virtual DescribeFleetAdvisorSchemasResponse DescribeFleetAdvisorSchemas(DescribeFleetAdvisorSchemasRequest request);
    public virtual Task`1<DescribeFleetAdvisorSchemasResponse> DescribeFleetAdvisorSchemasAsync(DescribeFleetAdvisorSchemasRequest request, CancellationToken cancellationToken);
    internal virtual DescribeInstanceProfilesResponse DescribeInstanceProfiles(DescribeInstanceProfilesRequest request);
    public virtual Task`1<DescribeInstanceProfilesResponse> DescribeInstanceProfilesAsync(DescribeInstanceProfilesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMetadataModelAssessmentsResponse DescribeMetadataModelAssessments(DescribeMetadataModelAssessmentsRequest request);
    public virtual Task`1<DescribeMetadataModelAssessmentsResponse> DescribeMetadataModelAssessmentsAsync(DescribeMetadataModelAssessmentsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMetadataModelConversionsResponse DescribeMetadataModelConversions(DescribeMetadataModelConversionsRequest request);
    public virtual Task`1<DescribeMetadataModelConversionsResponse> DescribeMetadataModelConversionsAsync(DescribeMetadataModelConversionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMetadataModelExportsAsScriptResponse DescribeMetadataModelExportsAsScript(DescribeMetadataModelExportsAsScriptRequest request);
    public virtual Task`1<DescribeMetadataModelExportsAsScriptResponse> DescribeMetadataModelExportsAsScriptAsync(DescribeMetadataModelExportsAsScriptRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMetadataModelExportsToTargetResponse DescribeMetadataModelExportsToTarget(DescribeMetadataModelExportsToTargetRequest request);
    public virtual Task`1<DescribeMetadataModelExportsToTargetResponse> DescribeMetadataModelExportsToTargetAsync(DescribeMetadataModelExportsToTargetRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMetadataModelImportsResponse DescribeMetadataModelImports(DescribeMetadataModelImportsRequest request);
    public virtual Task`1<DescribeMetadataModelImportsResponse> DescribeMetadataModelImportsAsync(DescribeMetadataModelImportsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeMigrationProjectsResponse DescribeMigrationProjects(DescribeMigrationProjectsRequest request);
    public virtual Task`1<DescribeMigrationProjectsResponse> DescribeMigrationProjectsAsync(DescribeMigrationProjectsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeOrderableReplicationInstancesResponse DescribeOrderableReplicationInstances(DescribeOrderableReplicationInstancesRequest request);
    public virtual Task`1<DescribeOrderableReplicationInstancesResponse> DescribeOrderableReplicationInstancesAsync(DescribeOrderableReplicationInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribePendingMaintenanceActionsResponse DescribePendingMaintenanceActions(DescribePendingMaintenanceActionsRequest request);
    public virtual Task`1<DescribePendingMaintenanceActionsResponse> DescribePendingMaintenanceActionsAsync(DescribePendingMaintenanceActionsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeRecommendationLimitationsResponse DescribeRecommendationLimitations(DescribeRecommendationLimitationsRequest request);
    public virtual Task`1<DescribeRecommendationLimitationsResponse> DescribeRecommendationLimitationsAsync(DescribeRecommendationLimitationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeRecommendationsResponse DescribeRecommendations(DescribeRecommendationsRequest request);
    public virtual Task`1<DescribeRecommendationsResponse> DescribeRecommendationsAsync(DescribeRecommendationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeRefreshSchemasStatusResponse DescribeRefreshSchemasStatus(DescribeRefreshSchemasStatusRequest request);
    public virtual Task`1<DescribeRefreshSchemasStatusResponse> DescribeRefreshSchemasStatusAsync(DescribeRefreshSchemasStatusRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicationConfigsResponse DescribeReplicationConfigs(DescribeReplicationConfigsRequest request);
    public virtual Task`1<DescribeReplicationConfigsResponse> DescribeReplicationConfigsAsync(DescribeReplicationConfigsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicationInstancesResponse DescribeReplicationInstances(DescribeReplicationInstancesRequest request);
    public virtual Task`1<DescribeReplicationInstancesResponse> DescribeReplicationInstancesAsync(DescribeReplicationInstancesRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicationInstanceTaskLogsResponse DescribeReplicationInstanceTaskLogs(DescribeReplicationInstanceTaskLogsRequest request);
    public virtual Task`1<DescribeReplicationInstanceTaskLogsResponse> DescribeReplicationInstanceTaskLogsAsync(DescribeReplicationInstanceTaskLogsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicationsResponse DescribeReplications(DescribeReplicationsRequest request);
    public virtual Task`1<DescribeReplicationsResponse> DescribeReplicationsAsync(DescribeReplicationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicationSubnetGroupsResponse DescribeReplicationSubnetGroups(DescribeReplicationSubnetGroupsRequest request);
    public virtual Task`1<DescribeReplicationSubnetGroupsResponse> DescribeReplicationSubnetGroupsAsync(DescribeReplicationSubnetGroupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicationTableStatisticsResponse DescribeReplicationTableStatistics(DescribeReplicationTableStatisticsRequest request);
    public virtual Task`1<DescribeReplicationTableStatisticsResponse> DescribeReplicationTableStatisticsAsync(DescribeReplicationTableStatisticsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicationTaskAssessmentResultsResponse DescribeReplicationTaskAssessmentResults(DescribeReplicationTaskAssessmentResultsRequest request);
    public virtual Task`1<DescribeReplicationTaskAssessmentResultsResponse> DescribeReplicationTaskAssessmentResultsAsync(DescribeReplicationTaskAssessmentResultsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicationTaskAssessmentRunsResponse DescribeReplicationTaskAssessmentRuns(DescribeReplicationTaskAssessmentRunsRequest request);
    public virtual Task`1<DescribeReplicationTaskAssessmentRunsResponse> DescribeReplicationTaskAssessmentRunsAsync(DescribeReplicationTaskAssessmentRunsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicationTaskIndividualAssessmentsResponse DescribeReplicationTaskIndividualAssessments(DescribeReplicationTaskIndividualAssessmentsRequest request);
    public virtual Task`1<DescribeReplicationTaskIndividualAssessmentsResponse> DescribeReplicationTaskIndividualAssessmentsAsync(DescribeReplicationTaskIndividualAssessmentsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeReplicationTasksResponse DescribeReplicationTasks(DescribeReplicationTasksRequest request);
    public virtual Task`1<DescribeReplicationTasksResponse> DescribeReplicationTasksAsync(DescribeReplicationTasksRequest request, CancellationToken cancellationToken);
    internal virtual DescribeSchemasResponse DescribeSchemas(DescribeSchemasRequest request);
    public virtual Task`1<DescribeSchemasResponse> DescribeSchemasAsync(DescribeSchemasRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTableStatisticsResponse DescribeTableStatistics(DescribeTableStatisticsRequest request);
    public virtual Task`1<DescribeTableStatisticsResponse> DescribeTableStatisticsAsync(DescribeTableStatisticsRequest request, CancellationToken cancellationToken);
    internal virtual ExportMetadataModelAssessmentResponse ExportMetadataModelAssessment(ExportMetadataModelAssessmentRequest request);
    public virtual Task`1<ExportMetadataModelAssessmentResponse> ExportMetadataModelAssessmentAsync(ExportMetadataModelAssessmentRequest request, CancellationToken cancellationToken);
    internal virtual ImportCertificateResponse ImportCertificate(ImportCertificateRequest request);
    public virtual Task`1<ImportCertificateResponse> ImportCertificateAsync(ImportCertificateRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForResourceResponse ListTagsForResource(ListTagsForResourceRequest request);
    public virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    internal virtual ModifyConversionConfigurationResponse ModifyConversionConfiguration(ModifyConversionConfigurationRequest request);
    public virtual Task`1<ModifyConversionConfigurationResponse> ModifyConversionConfigurationAsync(ModifyConversionConfigurationRequest request, CancellationToken cancellationToken);
    internal virtual ModifyDataProviderResponse ModifyDataProvider(ModifyDataProviderRequest request);
    public virtual Task`1<ModifyDataProviderResponse> ModifyDataProviderAsync(ModifyDataProviderRequest request, CancellationToken cancellationToken);
    internal virtual ModifyEndpointResponse ModifyEndpoint(ModifyEndpointRequest request);
    public virtual Task`1<ModifyEndpointResponse> ModifyEndpointAsync(ModifyEndpointRequest request, CancellationToken cancellationToken);
    internal virtual ModifyEventSubscriptionResponse ModifyEventSubscription(ModifyEventSubscriptionRequest request);
    public virtual Task`1<ModifyEventSubscriptionResponse> ModifyEventSubscriptionAsync(ModifyEventSubscriptionRequest request, CancellationToken cancellationToken);
    internal virtual ModifyInstanceProfileResponse ModifyInstanceProfile(ModifyInstanceProfileRequest request);
    public virtual Task`1<ModifyInstanceProfileResponse> ModifyInstanceProfileAsync(ModifyInstanceProfileRequest request, CancellationToken cancellationToken);
    internal virtual ModifyMigrationProjectResponse ModifyMigrationProject(ModifyMigrationProjectRequest request);
    public virtual Task`1<ModifyMigrationProjectResponse> ModifyMigrationProjectAsync(ModifyMigrationProjectRequest request, CancellationToken cancellationToken);
    internal virtual ModifyReplicationConfigResponse ModifyReplicationConfig(ModifyReplicationConfigRequest request);
    public virtual Task`1<ModifyReplicationConfigResponse> ModifyReplicationConfigAsync(ModifyReplicationConfigRequest request, CancellationToken cancellationToken);
    internal virtual ModifyReplicationInstanceResponse ModifyReplicationInstance(ModifyReplicationInstanceRequest request);
    public virtual Task`1<ModifyReplicationInstanceResponse> ModifyReplicationInstanceAsync(ModifyReplicationInstanceRequest request, CancellationToken cancellationToken);
    internal virtual ModifyReplicationSubnetGroupResponse ModifyReplicationSubnetGroup(ModifyReplicationSubnetGroupRequest request);
    public virtual Task`1<ModifyReplicationSubnetGroupResponse> ModifyReplicationSubnetGroupAsync(ModifyReplicationSubnetGroupRequest request, CancellationToken cancellationToken);
    internal virtual ModifyReplicationTaskResponse ModifyReplicationTask(ModifyReplicationTaskRequest request);
    public virtual Task`1<ModifyReplicationTaskResponse> ModifyReplicationTaskAsync(ModifyReplicationTaskRequest request, CancellationToken cancellationToken);
    internal virtual MoveReplicationTaskResponse MoveReplicationTask(MoveReplicationTaskRequest request);
    public virtual Task`1<MoveReplicationTaskResponse> MoveReplicationTaskAsync(MoveReplicationTaskRequest request, CancellationToken cancellationToken);
    internal virtual RebootReplicationInstanceResponse RebootReplicationInstance(RebootReplicationInstanceRequest request);
    public virtual Task`1<RebootReplicationInstanceResponse> RebootReplicationInstanceAsync(RebootReplicationInstanceRequest request, CancellationToken cancellationToken);
    internal virtual RefreshSchemasResponse RefreshSchemas(RefreshSchemasRequest request);
    public virtual Task`1<RefreshSchemasResponse> RefreshSchemasAsync(RefreshSchemasRequest request, CancellationToken cancellationToken);
    internal virtual ReloadReplicationTablesResponse ReloadReplicationTables(ReloadReplicationTablesRequest request);
    public virtual Task`1<ReloadReplicationTablesResponse> ReloadReplicationTablesAsync(ReloadReplicationTablesRequest request, CancellationToken cancellationToken);
    internal virtual ReloadTablesResponse ReloadTables(ReloadTablesRequest request);
    public virtual Task`1<ReloadTablesResponse> ReloadTablesAsync(ReloadTablesRequest request, CancellationToken cancellationToken);
    internal virtual RemoveTagsFromResourceResponse RemoveTagsFromResource(RemoveTagsFromResourceRequest request);
    public virtual Task`1<RemoveTagsFromResourceResponse> RemoveTagsFromResourceAsync(RemoveTagsFromResourceRequest request, CancellationToken cancellationToken);
    internal virtual RunFleetAdvisorLsaAnalysisResponse RunFleetAdvisorLsaAnalysis(RunFleetAdvisorLsaAnalysisRequest request);
    public virtual Task`1<RunFleetAdvisorLsaAnalysisResponse> RunFleetAdvisorLsaAnalysisAsync(RunFleetAdvisorLsaAnalysisRequest request, CancellationToken cancellationToken);
    internal virtual StartExtensionPackAssociationResponse StartExtensionPackAssociation(StartExtensionPackAssociationRequest request);
    public virtual Task`1<StartExtensionPackAssociationResponse> StartExtensionPackAssociationAsync(StartExtensionPackAssociationRequest request, CancellationToken cancellationToken);
    internal virtual StartMetadataModelAssessmentResponse StartMetadataModelAssessment(StartMetadataModelAssessmentRequest request);
    public virtual Task`1<StartMetadataModelAssessmentResponse> StartMetadataModelAssessmentAsync(StartMetadataModelAssessmentRequest request, CancellationToken cancellationToken);
    internal virtual StartMetadataModelConversionResponse StartMetadataModelConversion(StartMetadataModelConversionRequest request);
    public virtual Task`1<StartMetadataModelConversionResponse> StartMetadataModelConversionAsync(StartMetadataModelConversionRequest request, CancellationToken cancellationToken);
    internal virtual StartMetadataModelExportAsScriptResponse StartMetadataModelExportAsScript(StartMetadataModelExportAsScriptRequest request);
    public virtual Task`1<StartMetadataModelExportAsScriptResponse> StartMetadataModelExportAsScriptAsync(StartMetadataModelExportAsScriptRequest request, CancellationToken cancellationToken);
    internal virtual StartMetadataModelExportToTargetResponse StartMetadataModelExportToTarget(StartMetadataModelExportToTargetRequest request);
    public virtual Task`1<StartMetadataModelExportToTargetResponse> StartMetadataModelExportToTargetAsync(StartMetadataModelExportToTargetRequest request, CancellationToken cancellationToken);
    internal virtual StartMetadataModelImportResponse StartMetadataModelImport(StartMetadataModelImportRequest request);
    public virtual Task`1<StartMetadataModelImportResponse> StartMetadataModelImportAsync(StartMetadataModelImportRequest request, CancellationToken cancellationToken);
    internal virtual StartRecommendationsResponse StartRecommendations(StartRecommendationsRequest request);
    public virtual Task`1<StartRecommendationsResponse> StartRecommendationsAsync(StartRecommendationsRequest request, CancellationToken cancellationToken);
    internal virtual StartReplicationResponse StartReplication(StartReplicationRequest request);
    public virtual Task`1<StartReplicationResponse> StartReplicationAsync(StartReplicationRequest request, CancellationToken cancellationToken);
    internal virtual StartReplicationTaskResponse StartReplicationTask(StartReplicationTaskRequest request);
    public virtual Task`1<StartReplicationTaskResponse> StartReplicationTaskAsync(StartReplicationTaskRequest request, CancellationToken cancellationToken);
    internal virtual StartReplicationTaskAssessmentResponse StartReplicationTaskAssessment(StartReplicationTaskAssessmentRequest request);
    public virtual Task`1<StartReplicationTaskAssessmentResponse> StartReplicationTaskAssessmentAsync(StartReplicationTaskAssessmentRequest request, CancellationToken cancellationToken);
    internal virtual StartReplicationTaskAssessmentRunResponse StartReplicationTaskAssessmentRun(StartReplicationTaskAssessmentRunRequest request);
    public virtual Task`1<StartReplicationTaskAssessmentRunResponse> StartReplicationTaskAssessmentRunAsync(StartReplicationTaskAssessmentRunRequest request, CancellationToken cancellationToken);
    internal virtual StopReplicationResponse StopReplication(StopReplicationRequest request);
    public virtual Task`1<StopReplicationResponse> StopReplicationAsync(StopReplicationRequest request, CancellationToken cancellationToken);
    internal virtual StopReplicationTaskResponse StopReplicationTask(StopReplicationTaskRequest request);
    public virtual Task`1<StopReplicationTaskResponse> StopReplicationTaskAsync(StopReplicationTaskRequest request, CancellationToken cancellationToken);
    internal virtual TestConnectionResponse TestConnection(TestConnectionRequest request);
    public virtual Task`1<TestConnectionResponse> TestConnectionAsync(TestConnectionRequest request, CancellationToken cancellationToken);
    internal virtual UpdateSubscriptionsToEventBridgeResponse UpdateSubscriptionsToEventBridge(UpdateSubscriptionsToEventBridgeRequest request);
    public virtual Task`1<UpdateSubscriptionsToEventBridgeResponse> UpdateSubscriptionsToEventBridgeAsync(UpdateSubscriptionsToEventBridgeRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.DatabaseMigrationService.AmazonDatabaseMigrationServiceConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonDatabaseMigrationServiceEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonDatabaseMigrationServiceConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.DatabaseMigrationService.AmazonDatabaseMigrationServiceDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonDatabaseMigrationServiceDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.DatabaseMigrationService.AmazonDatabaseMigrationServiceException : AmazonServiceException {
    public AmazonDatabaseMigrationServiceException(string message);
    public AmazonDatabaseMigrationServiceException(string message, Exception innerException);
    public AmazonDatabaseMigrationServiceException(Exception innerException);
    public AmazonDatabaseMigrationServiceException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonDatabaseMigrationServiceException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.AmazonDatabaseMigrationServiceRequest : AmazonWebServiceRequest {
}
public class Amazon.DatabaseMigrationService.AssessmentReportType : ConstantClass {
    public static AssessmentReportType Csv;
    public static AssessmentReportType Pdf;
    public AssessmentReportType(string value);
    private static AssessmentReportType();
    public static AssessmentReportType FindValue(string value);
    public static AssessmentReportType op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.AuthMechanismValue : ConstantClass {
    public static AuthMechanismValue Default;
    public static AuthMechanismValue Mongodb_cr;
    public static AuthMechanismValue Scram_sha_1;
    public AuthMechanismValue(string value);
    private static AuthMechanismValue();
    public static AuthMechanismValue FindValue(string value);
    public static AuthMechanismValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.AuthTypeValue : ConstantClass {
    public static AuthTypeValue No;
    public static AuthTypeValue Password;
    public AuthTypeValue(string value);
    private static AuthTypeValue();
    public static AuthTypeValue FindValue(string value);
    public static AuthTypeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.CannedAclForObjectsValue : ConstantClass {
    public static CannedAclForObjectsValue AuthenticatedRead;
    public static CannedAclForObjectsValue AwsExecRead;
    public static CannedAclForObjectsValue BucketOwnerFullControl;
    public static CannedAclForObjectsValue BucketOwnerRead;
    public static CannedAclForObjectsValue None;
    public static CannedAclForObjectsValue Private;
    public static CannedAclForObjectsValue PublicRead;
    public static CannedAclForObjectsValue PublicReadWrite;
    public CannedAclForObjectsValue(string value);
    private static CannedAclForObjectsValue();
    public static CannedAclForObjectsValue FindValue(string value);
    public static CannedAclForObjectsValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.CharLengthSemantics : ConstantClass {
    public static CharLengthSemantics Byte;
    public static CharLengthSemantics Char;
    public static CharLengthSemantics Default;
    public CharLengthSemantics(string value);
    private static CharLengthSemantics();
    public static CharLengthSemantics FindValue(string value);
    public static CharLengthSemantics op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.CollectorStatus : ConstantClass {
    public static CollectorStatus ACTIVE;
    public static CollectorStatus UNREGISTERED;
    public CollectorStatus(string value);
    private static CollectorStatus();
    public static CollectorStatus FindValue(string value);
    public static CollectorStatus op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.CompressionTypeValue : ConstantClass {
    public static CompressionTypeValue Gzip;
    public static CompressionTypeValue None;
    public CompressionTypeValue(string value);
    private static CompressionTypeValue();
    public static CompressionTypeValue FindValue(string value);
    public static CompressionTypeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.DatabaseMode : ConstantClass {
    public static DatabaseMode Babelfish;
    public static DatabaseMode Default;
    public DatabaseMode(string value);
    private static DatabaseMode();
    public static DatabaseMode FindValue(string value);
    public static DatabaseMode op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.DataFormatValue : ConstantClass {
    public static DataFormatValue Csv;
    public static DataFormatValue Parquet;
    public DataFormatValue(string value);
    private static DataFormatValue();
    public static DataFormatValue FindValue(string value);
    public static DataFormatValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.DatePartitionDelimiterValue : ConstantClass {
    public static DatePartitionDelimiterValue DASH;
    public static DatePartitionDelimiterValue NONE;
    public static DatePartitionDelimiterValue SLASH;
    public static DatePartitionDelimiterValue UNDERSCORE;
    public DatePartitionDelimiterValue(string value);
    private static DatePartitionDelimiterValue();
    public static DatePartitionDelimiterValue FindValue(string value);
    public static DatePartitionDelimiterValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.DatePartitionSequenceValue : ConstantClass {
    public static DatePartitionSequenceValue DDMMYYYY;
    public static DatePartitionSequenceValue MMYYYYDD;
    public static DatePartitionSequenceValue YYYYMM;
    public static DatePartitionSequenceValue YYYYMMDD;
    public static DatePartitionSequenceValue YYYYMMDDHH;
    public DatePartitionSequenceValue(string value);
    private static DatePartitionSequenceValue();
    public static DatePartitionSequenceValue FindValue(string value);
    public static DatePartitionSequenceValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.DmsSslModeValue : ConstantClass {
    public static DmsSslModeValue None;
    public static DmsSslModeValue Require;
    public static DmsSslModeValue VerifyCa;
    public static DmsSslModeValue VerifyFull;
    public DmsSslModeValue(string value);
    private static DmsSslModeValue();
    public static DmsSslModeValue FindValue(string value);
    public static DmsSslModeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.EncodingTypeValue : ConstantClass {
    public static EncodingTypeValue Plain;
    public static EncodingTypeValue PlainDictionary;
    public static EncodingTypeValue RleDictionary;
    public EncodingTypeValue(string value);
    private static EncodingTypeValue();
    public static EncodingTypeValue FindValue(string value);
    public static EncodingTypeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.EncryptionModeValue : ConstantClass {
    public static EncryptionModeValue SseKms;
    public static EncryptionModeValue SseS3;
    public EncryptionModeValue(string value);
    private static EncryptionModeValue();
    public static EncryptionModeValue FindValue(string value);
    public static EncryptionModeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.Endpoints.DatabaseMigrationServiceEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.DatabaseMigrationService.EndpointSettingTypeValue : ConstantClass {
    public static EndpointSettingTypeValue Boolean;
    public static EndpointSettingTypeValue Enum;
    public static EndpointSettingTypeValue Integer;
    public static EndpointSettingTypeValue String;
    public EndpointSettingTypeValue(string value);
    private static EndpointSettingTypeValue();
    public static EndpointSettingTypeValue FindValue(string value);
    public static EndpointSettingTypeValue op_Implicit(string value);
}
public interface Amazon.DatabaseMigrationService.IAmazonDatabaseMigrationService {
    public IDatabaseMigrationServicePaginatorFactory Paginators { get; }
    public abstract virtual IDatabaseMigrationServicePaginatorFactory get_Paginators();
    public abstract virtual Task`1<AddTagsToResourceResponse> AddTagsToResourceAsync(AddTagsToResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ApplyPendingMaintenanceActionResponse> ApplyPendingMaintenanceActionAsync(ApplyPendingMaintenanceActionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchStartRecommendationsResponse> BatchStartRecommendationsAsync(BatchStartRecommendationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CancelReplicationTaskAssessmentRunResponse> CancelReplicationTaskAssessmentRunAsync(CancelReplicationTaskAssessmentRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDataProviderResponse> CreateDataProviderAsync(CreateDataProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateEndpointResponse> CreateEndpointAsync(CreateEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateEventSubscriptionResponse> CreateEventSubscriptionAsync(CreateEventSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateFleetAdvisorCollectorResponse> CreateFleetAdvisorCollectorAsync(CreateFleetAdvisorCollectorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateInstanceProfileResponse> CreateInstanceProfileAsync(CreateInstanceProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateMigrationProjectResponse> CreateMigrationProjectAsync(CreateMigrationProjectRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReplicationConfigResponse> CreateReplicationConfigAsync(CreateReplicationConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReplicationInstanceResponse> CreateReplicationInstanceAsync(CreateReplicationInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReplicationSubnetGroupResponse> CreateReplicationSubnetGroupAsync(CreateReplicationSubnetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateReplicationTaskResponse> CreateReplicationTaskAsync(CreateReplicationTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteCertificateResponse> DeleteCertificateAsync(DeleteCertificateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteConnectionResponse> DeleteConnectionAsync(DeleteConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDataProviderResponse> DeleteDataProviderAsync(DeleteDataProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteEndpointResponse> DeleteEndpointAsync(DeleteEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteEventSubscriptionResponse> DeleteEventSubscriptionAsync(DeleteEventSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFleetAdvisorCollectorResponse> DeleteFleetAdvisorCollectorAsync(DeleteFleetAdvisorCollectorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteFleetAdvisorDatabasesResponse> DeleteFleetAdvisorDatabasesAsync(DeleteFleetAdvisorDatabasesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteInstanceProfileResponse> DeleteInstanceProfileAsync(DeleteInstanceProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteMigrationProjectResponse> DeleteMigrationProjectAsync(DeleteMigrationProjectRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReplicationConfigResponse> DeleteReplicationConfigAsync(DeleteReplicationConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReplicationInstanceResponse> DeleteReplicationInstanceAsync(DeleteReplicationInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReplicationSubnetGroupResponse> DeleteReplicationSubnetGroupAsync(DeleteReplicationSubnetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReplicationTaskResponse> DeleteReplicationTaskAsync(DeleteReplicationTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteReplicationTaskAssessmentRunResponse> DeleteReplicationTaskAssessmentRunAsync(DeleteReplicationTaskAssessmentRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeAccountAttributesResponse> DescribeAccountAttributesAsync(DescribeAccountAttributesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeApplicableIndividualAssessmentsResponse> DescribeApplicableIndividualAssessmentsAsync(DescribeApplicableIndividualAssessmentsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeCertificatesResponse> DescribeCertificatesAsync(DescribeCertificatesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeConnectionsResponse> DescribeConnectionsAsync(DescribeConnectionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeConversionConfigurationResponse> DescribeConversionConfigurationAsync(DescribeConversionConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeDataProvidersResponse> DescribeDataProvidersAsync(DescribeDataProvidersRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEndpointsResponse> DescribeEndpointsAsync(DescribeEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEndpointSettingsResponse> DescribeEndpointSettingsAsync(DescribeEndpointSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEndpointTypesResponse> DescribeEndpointTypesAsync(DescribeEndpointTypesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEngineVersionsResponse> DescribeEngineVersionsAsync(DescribeEngineVersionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEventCategoriesResponse> DescribeEventCategoriesAsync(DescribeEventCategoriesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEventsResponse> DescribeEventsAsync(DescribeEventsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEventSubscriptionsResponse> DescribeEventSubscriptionsAsync(DescribeEventSubscriptionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeExtensionPackAssociationsResponse> DescribeExtensionPackAssociationsAsync(DescribeExtensionPackAssociationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFleetAdvisorCollectorsResponse> DescribeFleetAdvisorCollectorsAsync(DescribeFleetAdvisorCollectorsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFleetAdvisorDatabasesResponse> DescribeFleetAdvisorDatabasesAsync(DescribeFleetAdvisorDatabasesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFleetAdvisorLsaAnalysisResponse> DescribeFleetAdvisorLsaAnalysisAsync(DescribeFleetAdvisorLsaAnalysisRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFleetAdvisorSchemaObjectSummaryResponse> DescribeFleetAdvisorSchemaObjectSummaryAsync(DescribeFleetAdvisorSchemaObjectSummaryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeFleetAdvisorSchemasResponse> DescribeFleetAdvisorSchemasAsync(DescribeFleetAdvisorSchemasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeInstanceProfilesResponse> DescribeInstanceProfilesAsync(DescribeInstanceProfilesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMetadataModelAssessmentsResponse> DescribeMetadataModelAssessmentsAsync(DescribeMetadataModelAssessmentsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMetadataModelConversionsResponse> DescribeMetadataModelConversionsAsync(DescribeMetadataModelConversionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMetadataModelExportsAsScriptResponse> DescribeMetadataModelExportsAsScriptAsync(DescribeMetadataModelExportsAsScriptRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMetadataModelExportsToTargetResponse> DescribeMetadataModelExportsToTargetAsync(DescribeMetadataModelExportsToTargetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMetadataModelImportsResponse> DescribeMetadataModelImportsAsync(DescribeMetadataModelImportsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeMigrationProjectsResponse> DescribeMigrationProjectsAsync(DescribeMigrationProjectsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeOrderableReplicationInstancesResponse> DescribeOrderableReplicationInstancesAsync(DescribeOrderableReplicationInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribePendingMaintenanceActionsResponse> DescribePendingMaintenanceActionsAsync(DescribePendingMaintenanceActionsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRecommendationLimitationsResponse> DescribeRecommendationLimitationsAsync(DescribeRecommendationLimitationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRecommendationsResponse> DescribeRecommendationsAsync(DescribeRecommendationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeRefreshSchemasStatusResponse> DescribeRefreshSchemasStatusAsync(DescribeRefreshSchemasStatusRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicationConfigsResponse> DescribeReplicationConfigsAsync(DescribeReplicationConfigsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicationInstancesResponse> DescribeReplicationInstancesAsync(DescribeReplicationInstancesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicationInstanceTaskLogsResponse> DescribeReplicationInstanceTaskLogsAsync(DescribeReplicationInstanceTaskLogsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicationsResponse> DescribeReplicationsAsync(DescribeReplicationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicationSubnetGroupsResponse> DescribeReplicationSubnetGroupsAsync(DescribeReplicationSubnetGroupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicationTableStatisticsResponse> DescribeReplicationTableStatisticsAsync(DescribeReplicationTableStatisticsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicationTaskAssessmentResultsResponse> DescribeReplicationTaskAssessmentResultsAsync(DescribeReplicationTaskAssessmentResultsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicationTaskAssessmentRunsResponse> DescribeReplicationTaskAssessmentRunsAsync(DescribeReplicationTaskAssessmentRunsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicationTaskIndividualAssessmentsResponse> DescribeReplicationTaskIndividualAssessmentsAsync(DescribeReplicationTaskIndividualAssessmentsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeReplicationTasksResponse> DescribeReplicationTasksAsync(DescribeReplicationTasksRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeSchemasResponse> DescribeSchemasAsync(DescribeSchemasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTableStatisticsResponse> DescribeTableStatisticsAsync(DescribeTableStatisticsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExportMetadataModelAssessmentResponse> ExportMetadataModelAssessmentAsync(ExportMetadataModelAssessmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportCertificateResponse> ImportCertificateAsync(ImportCertificateRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyConversionConfigurationResponse> ModifyConversionConfigurationAsync(ModifyConversionConfigurationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDataProviderResponse> ModifyDataProviderAsync(ModifyDataProviderRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyEndpointResponse> ModifyEndpointAsync(ModifyEndpointRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyEventSubscriptionResponse> ModifyEventSubscriptionAsync(ModifyEventSubscriptionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyInstanceProfileResponse> ModifyInstanceProfileAsync(ModifyInstanceProfileRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyMigrationProjectResponse> ModifyMigrationProjectAsync(ModifyMigrationProjectRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyReplicationConfigResponse> ModifyReplicationConfigAsync(ModifyReplicationConfigRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyReplicationInstanceResponse> ModifyReplicationInstanceAsync(ModifyReplicationInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyReplicationSubnetGroupResponse> ModifyReplicationSubnetGroupAsync(ModifyReplicationSubnetGroupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyReplicationTaskResponse> ModifyReplicationTaskAsync(ModifyReplicationTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MoveReplicationTaskResponse> MoveReplicationTaskAsync(MoveReplicationTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RebootReplicationInstanceResponse> RebootReplicationInstanceAsync(RebootReplicationInstanceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RefreshSchemasResponse> RefreshSchemasAsync(RefreshSchemasRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReloadReplicationTablesResponse> ReloadReplicationTablesAsync(ReloadReplicationTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ReloadTablesResponse> ReloadTablesAsync(ReloadTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTagsFromResourceResponse> RemoveTagsFromResourceAsync(RemoveTagsFromResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RunFleetAdvisorLsaAnalysisResponse> RunFleetAdvisorLsaAnalysisAsync(RunFleetAdvisorLsaAnalysisRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartExtensionPackAssociationResponse> StartExtensionPackAssociationAsync(StartExtensionPackAssociationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartMetadataModelAssessmentResponse> StartMetadataModelAssessmentAsync(StartMetadataModelAssessmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartMetadataModelConversionResponse> StartMetadataModelConversionAsync(StartMetadataModelConversionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartMetadataModelExportAsScriptResponse> StartMetadataModelExportAsScriptAsync(StartMetadataModelExportAsScriptRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartMetadataModelExportToTargetResponse> StartMetadataModelExportToTargetAsync(StartMetadataModelExportToTargetRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartMetadataModelImportResponse> StartMetadataModelImportAsync(StartMetadataModelImportRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartRecommendationsResponse> StartRecommendationsAsync(StartRecommendationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartReplicationResponse> StartReplicationAsync(StartReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartReplicationTaskResponse> StartReplicationTaskAsync(StartReplicationTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartReplicationTaskAssessmentResponse> StartReplicationTaskAssessmentAsync(StartReplicationTaskAssessmentRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StartReplicationTaskAssessmentRunResponse> StartReplicationTaskAssessmentRunAsync(StartReplicationTaskAssessmentRunRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopReplicationResponse> StopReplicationAsync(StopReplicationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<StopReplicationTaskResponse> StopReplicationTaskAsync(StopReplicationTaskRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestConnectionResponse> TestConnectionAsync(TestConnectionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateSubscriptionsToEventBridgeResponse> UpdateSubscriptionsToEventBridgeAsync(UpdateSubscriptionsToEventBridgeRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    [DynamicDependencyAttribute("512", "Amazon.DatabaseMigrationService.AmazonDatabaseMigrationServiceConfig")]
private static override ClientConfig Amazon.Runtime.IAmazonService.CreateDefaultClientConfig();
    [UnconditionalSuppressMessageAttribute("AssemblyLoadTrimming", "IL2026:RequiresUnreferencedCode")]
private static override IAmazonService Amazon.Runtime.IAmazonService.CreateDefaultServiceClient(AWSCredentials awsCredentials, ClientConfig clientConfig);
}
public class Amazon.DatabaseMigrationService.Internal.AmazonDatabaseMigrationServiceEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.DatabaseMigrationService.Internal.AmazonDatabaseMigrationServiceEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.DatabaseMigrationService.Internal.AmazonDatabaseMigrationServiceMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.DatabaseMigrationService.KafkaSaslMechanism : ConstantClass {
    public static KafkaSaslMechanism Plain;
    public static KafkaSaslMechanism ScramSha512;
    public KafkaSaslMechanism(string value);
    private static KafkaSaslMechanism();
    public static KafkaSaslMechanism FindValue(string value);
    public static KafkaSaslMechanism op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.KafkaSecurityProtocol : ConstantClass {
    public static KafkaSecurityProtocol Plaintext;
    public static KafkaSecurityProtocol SaslSsl;
    public static KafkaSecurityProtocol SslAuthentication;
    public static KafkaSecurityProtocol SslEncryption;
    public KafkaSecurityProtocol(string value);
    private static KafkaSecurityProtocol();
    public static KafkaSecurityProtocol FindValue(string value);
    public static KafkaSecurityProtocol op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.KafkaSslEndpointIdentificationAlgorithm : ConstantClass {
    public static KafkaSslEndpointIdentificationAlgorithm Https;
    public static KafkaSslEndpointIdentificationAlgorithm None;
    public KafkaSslEndpointIdentificationAlgorithm(string value);
    private static KafkaSslEndpointIdentificationAlgorithm();
    public static KafkaSslEndpointIdentificationAlgorithm FindValue(string value);
    public static KafkaSslEndpointIdentificationAlgorithm op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.LongVarcharMappingType : ConstantClass {
    public static LongVarcharMappingType Clob;
    public static LongVarcharMappingType Nclob;
    public static LongVarcharMappingType Wstring;
    public LongVarcharMappingType(string value);
    private static LongVarcharMappingType();
    public static LongVarcharMappingType FindValue(string value);
    public static LongVarcharMappingType op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.MessageFormatValue : ConstantClass {
    public static MessageFormatValue Json;
    public static MessageFormatValue JsonUnformatted;
    public MessageFormatValue(string value);
    private static MessageFormatValue();
    public static MessageFormatValue FindValue(string value);
    public static MessageFormatValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.MigrationTypeValue : ConstantClass {
    public static MigrationTypeValue Cdc;
    public static MigrationTypeValue FullLoad;
    public static MigrationTypeValue FullLoadAndCdc;
    public MigrationTypeValue(string value);
    private static MigrationTypeValue();
    public static MigrationTypeValue FindValue(string value);
    public static MigrationTypeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.Model.AccessDeniedException : AmazonDatabaseMigrationServiceException {
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception innerException);
    public AccessDeniedException(Exception innerException);
    public AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.AccountQuota : object {
    private string _accountQuotaName;
    private Nullable`1<long> _max;
    private Nullable`1<long> _used;
    public string AccountQuotaName { get; public set; }
    public Nullable`1<long> Max { get; public set; }
    public Nullable`1<long> Used { get; public set; }
    public string get_AccountQuotaName();
    public void set_AccountQuotaName(string value);
    internal bool IsSetAccountQuotaName();
    public Nullable`1<long> get_Max();
    public void set_Max(Nullable`1<long> value);
    internal bool IsSetMax();
    public Nullable`1<long> get_Used();
    public void set_Used(Nullable`1<long> value);
    internal bool IsSetUsed();
}
public class Amazon.DatabaseMigrationService.Model.AddTagsToResourceRequest : AmazonDatabaseMigrationServiceRequest {
    private string _resourceArn;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.DatabaseMigrationService.Model.AddTagsToResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.DatabaseMigrationService.Model.ApplyPendingMaintenanceActionRequest : AmazonDatabaseMigrationServiceRequest {
    private string _applyAction;
    private string _optInType;
    private string _replicationInstanceArn;
    [AWSPropertyAttribute]
public string ApplyAction { get; public set; }
    [AWSPropertyAttribute]
public string OptInType { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationInstanceArn { get; public set; }
    public string get_ApplyAction();
    public void set_ApplyAction(string value);
    internal bool IsSetApplyAction();
    public string get_OptInType();
    public void set_OptInType(string value);
    internal bool IsSetOptInType();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
}
public class Amazon.DatabaseMigrationService.Model.ApplyPendingMaintenanceActionResponse : AmazonWebServiceResponse {
    private ResourcePendingMaintenanceActions _resourcePendingMaintenanceActions;
    public ResourcePendingMaintenanceActions ResourcePendingMaintenanceActions { get; public set; }
    public ResourcePendingMaintenanceActions get_ResourcePendingMaintenanceActions();
    public void set_ResourcePendingMaintenanceActions(ResourcePendingMaintenanceActions value);
    internal bool IsSetResourcePendingMaintenanceActions();
}
public class Amazon.DatabaseMigrationService.Model.AvailabilityZone : object {
    private string _name;
    public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
}
public class Amazon.DatabaseMigrationService.Model.BatchStartRecommendationsErrorEntry : object {
    private string _code;
    private string _databaseId;
    private string _message;
    public string Code { get; public set; }
    public string DatabaseId { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_DatabaseId();
    public void set_DatabaseId(string value);
    internal bool IsSetDatabaseId();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.DatabaseMigrationService.Model.BatchStartRecommendationsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<StartRecommendationsRequestEntry> _data;
    public List`1<StartRecommendationsRequestEntry> Data { get; public set; }
    public List`1<StartRecommendationsRequestEntry> get_Data();
    public void set_Data(List`1<StartRecommendationsRequestEntry> value);
    internal bool IsSetData();
}
public class Amazon.DatabaseMigrationService.Model.BatchStartRecommendationsResponse : AmazonWebServiceResponse {
    private List`1<BatchStartRecommendationsErrorEntry> _errorEntries;
    public List`1<BatchStartRecommendationsErrorEntry> ErrorEntries { get; public set; }
    public List`1<BatchStartRecommendationsErrorEntry> get_ErrorEntries();
    public void set_ErrorEntries(List`1<BatchStartRecommendationsErrorEntry> value);
    internal bool IsSetErrorEntries();
}
public class Amazon.DatabaseMigrationService.Model.CancelReplicationTaskAssessmentRunRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationTaskAssessmentRunArn;
    [AWSPropertyAttribute]
public string ReplicationTaskAssessmentRunArn { get; public set; }
    public string get_ReplicationTaskAssessmentRunArn();
    public void set_ReplicationTaskAssessmentRunArn(string value);
    internal bool IsSetReplicationTaskAssessmentRunArn();
}
public class Amazon.DatabaseMigrationService.Model.CancelReplicationTaskAssessmentRunResponse : AmazonWebServiceResponse {
    private ReplicationTaskAssessmentRun _replicationTaskAssessmentRun;
    public ReplicationTaskAssessmentRun ReplicationTaskAssessmentRun { get; public set; }
    public ReplicationTaskAssessmentRun get_ReplicationTaskAssessmentRun();
    public void set_ReplicationTaskAssessmentRun(ReplicationTaskAssessmentRun value);
    internal bool IsSetReplicationTaskAssessmentRun();
}
public class Amazon.DatabaseMigrationService.Model.Certificate : object {
    private string _certificateArn;
    private Nullable`1<DateTime> _certificateCreationDate;
    private string _certificateIdentifier;
    private string _certificateOwner;
    private string _certificatePem;
    private MemoryStream _certificateWallet;
    private Nullable`1<int> _keyLength;
    private string _signingAlgorithm;
    private Nullable`1<DateTime> _validFromDate;
    private Nullable`1<DateTime> _validToDate;
    public string CertificateArn { get; public set; }
    public Nullable`1<DateTime> CertificateCreationDate { get; public set; }
    public string CertificateIdentifier { get; public set; }
    public string CertificateOwner { get; public set; }
    public string CertificatePem { get; public set; }
    public MemoryStream CertificateWallet { get; public set; }
    public Nullable`1<int> KeyLength { get; public set; }
    public string SigningAlgorithm { get; public set; }
    public Nullable`1<DateTime> ValidFromDate { get; public set; }
    public Nullable`1<DateTime> ValidToDate { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public Nullable`1<DateTime> get_CertificateCreationDate();
    public void set_CertificateCreationDate(Nullable`1<DateTime> value);
    internal bool IsSetCertificateCreationDate();
    public string get_CertificateIdentifier();
    public void set_CertificateIdentifier(string value);
    internal bool IsSetCertificateIdentifier();
    public string get_CertificateOwner();
    public void set_CertificateOwner(string value);
    internal bool IsSetCertificateOwner();
    public string get_CertificatePem();
    public void set_CertificatePem(string value);
    internal bool IsSetCertificatePem();
    public MemoryStream get_CertificateWallet();
    public void set_CertificateWallet(MemoryStream value);
    internal bool IsSetCertificateWallet();
    public Nullable`1<int> get_KeyLength();
    public void set_KeyLength(Nullable`1<int> value);
    internal bool IsSetKeyLength();
    public string get_SigningAlgorithm();
    public void set_SigningAlgorithm(string value);
    internal bool IsSetSigningAlgorithm();
    public Nullable`1<DateTime> get_ValidFromDate();
    public void set_ValidFromDate(Nullable`1<DateTime> value);
    internal bool IsSetValidFromDate();
    public Nullable`1<DateTime> get_ValidToDate();
    public void set_ValidToDate(Nullable`1<DateTime> value);
    internal bool IsSetValidToDate();
}
public class Amazon.DatabaseMigrationService.Model.CollectorHealthCheck : object {
    private CollectorStatus _collectorStatus;
    private Nullable`1<bool> _localCollectorS3Access;
    private Nullable`1<bool> _webCollectorGrantedRoleBasedAccess;
    private Nullable`1<bool> _webCollectorS3Access;
    public CollectorStatus CollectorStatus { get; public set; }
    public Nullable`1<bool> LocalCollectorS3Access { get; public set; }
    public Nullable`1<bool> WebCollectorGrantedRoleBasedAccess { get; public set; }
    public Nullable`1<bool> WebCollectorS3Access { get; public set; }
    public CollectorStatus get_CollectorStatus();
    public void set_CollectorStatus(CollectorStatus value);
    internal bool IsSetCollectorStatus();
    public Nullable`1<bool> get_LocalCollectorS3Access();
    public void set_LocalCollectorS3Access(Nullable`1<bool> value);
    internal bool IsSetLocalCollectorS3Access();
    public Nullable`1<bool> get_WebCollectorGrantedRoleBasedAccess();
    public void set_WebCollectorGrantedRoleBasedAccess(Nullable`1<bool> value);
    internal bool IsSetWebCollectorGrantedRoleBasedAccess();
    public Nullable`1<bool> get_WebCollectorS3Access();
    public void set_WebCollectorS3Access(Nullable`1<bool> value);
    internal bool IsSetWebCollectorS3Access();
}
public class Amazon.DatabaseMigrationService.Model.CollectorNotFoundException : AmazonDatabaseMigrationServiceException {
    public CollectorNotFoundException(string message);
    public CollectorNotFoundException(string message, Exception innerException);
    public CollectorNotFoundException(Exception innerException);
    public CollectorNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public CollectorNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.CollectorResponse : object {
    private CollectorHealthCheck _collectorHealthCheck;
    private string _collectorName;
    private string _collectorReferencedId;
    private string _collectorVersion;
    private string _createdDate;
    private string _description;
    private InventoryData _inventoryData;
    private string _lastDataReceived;
    private string _modifiedDate;
    private string _registeredDate;
    private string _s3BucketName;
    private string _serviceAccessRoleArn;
    private VersionStatus _versionStatus;
    public CollectorHealthCheck CollectorHealthCheck { get; public set; }
    public string CollectorName { get; public set; }
    public string CollectorReferencedId { get; public set; }
    public string CollectorVersion { get; public set; }
    public string CreatedDate { get; public set; }
    public string Description { get; public set; }
    public InventoryData InventoryData { get; public set; }
    public string LastDataReceived { get; public set; }
    public string ModifiedDate { get; public set; }
    public string RegisteredDate { get; public set; }
    public string S3BucketName { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public VersionStatus VersionStatus { get; public set; }
    public CollectorHealthCheck get_CollectorHealthCheck();
    public void set_CollectorHealthCheck(CollectorHealthCheck value);
    internal bool IsSetCollectorHealthCheck();
    public string get_CollectorName();
    public void set_CollectorName(string value);
    internal bool IsSetCollectorName();
    public string get_CollectorReferencedId();
    public void set_CollectorReferencedId(string value);
    internal bool IsSetCollectorReferencedId();
    public string get_CollectorVersion();
    public void set_CollectorVersion(string value);
    internal bool IsSetCollectorVersion();
    public string get_CreatedDate();
    public void set_CreatedDate(string value);
    internal bool IsSetCreatedDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public InventoryData get_InventoryData();
    public void set_InventoryData(InventoryData value);
    internal bool IsSetInventoryData();
    public string get_LastDataReceived();
    public void set_LastDataReceived(string value);
    internal bool IsSetLastDataReceived();
    public string get_ModifiedDate();
    public void set_ModifiedDate(string value);
    internal bool IsSetModifiedDate();
    public string get_RegisteredDate();
    public void set_RegisteredDate(string value);
    internal bool IsSetRegisteredDate();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
    public VersionStatus get_VersionStatus();
    public void set_VersionStatus(VersionStatus value);
    internal bool IsSetVersionStatus();
}
public class Amazon.DatabaseMigrationService.Model.CollectorShortInfoResponse : object {
    private string _collectorName;
    private string _collectorReferencedId;
    public string CollectorName { get; public set; }
    public string CollectorReferencedId { get; public set; }
    public string get_CollectorName();
    public void set_CollectorName(string value);
    internal bool IsSetCollectorName();
    public string get_CollectorReferencedId();
    public void set_CollectorReferencedId(string value);
    internal bool IsSetCollectorReferencedId();
}
public class Amazon.DatabaseMigrationService.Model.ComputeConfig : object {
    private string _availabilityZone;
    private string _dnsNameServers;
    private string _kmsKeyId;
    private Nullable`1<int> _maxCapacityUnits;
    private Nullable`1<int> _minCapacityUnits;
    private Nullable`1<bool> _multiAZ;
    private string _preferredMaintenanceWindow;
    private string _replicationSubnetGroupId;
    private List`1<string> _vpcSecurityGroupIds;
    public string AvailabilityZone { get; public set; }
    public string DnsNameServers { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<int> MaxCapacityUnits { get; public set; }
    public Nullable`1<int> MinCapacityUnits { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    public string ReplicationSubnetGroupId { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_DnsNameServers();
    public void set_DnsNameServers(string value);
    internal bool IsSetDnsNameServers();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<int> get_MaxCapacityUnits();
    public void set_MaxCapacityUnits(Nullable`1<int> value);
    internal bool IsSetMaxCapacityUnits();
    public Nullable`1<int> get_MinCapacityUnits();
    public void set_MinCapacityUnits(Nullable`1<int> value);
    internal bool IsSetMinCapacityUnits();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public string get_ReplicationSubnetGroupId();
    public void set_ReplicationSubnetGroupId(string value);
    internal bool IsSetReplicationSubnetGroupId();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.DatabaseMigrationService.Model.Connection : object {
    private string _endpointArn;
    private string _endpointIdentifier;
    private string _lastFailureMessage;
    private string _replicationInstanceArn;
    private string _replicationInstanceIdentifier;
    private string _status;
    public string EndpointArn { get; public set; }
    public string EndpointIdentifier { get; public set; }
    public string LastFailureMessage { get; public set; }
    public string ReplicationInstanceArn { get; public set; }
    public string ReplicationInstanceIdentifier { get; public set; }
    public string Status { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
    public string get_EndpointIdentifier();
    public void set_EndpointIdentifier(string value);
    internal bool IsSetEndpointIdentifier();
    public string get_LastFailureMessage();
    public void set_LastFailureMessage(string value);
    internal bool IsSetLastFailureMessage();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
    public string get_ReplicationInstanceIdentifier();
    public void set_ReplicationInstanceIdentifier(string value);
    internal bool IsSetReplicationInstanceIdentifier();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.DatabaseMigrationService.Model.CreateDataProviderRequest : AmazonDatabaseMigrationServiceRequest {
    private string _dataProviderName;
    private string _description;
    private string _engine;
    private DataProviderSettings _settings;
    private List`1<Tag> _tags;
    public string DataProviderName { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string Engine { get; public set; }
    [AWSPropertyAttribute]
public DataProviderSettings Settings { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_DataProviderName();
    public void set_DataProviderName(string value);
    internal bool IsSetDataProviderName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public DataProviderSettings get_Settings();
    public void set_Settings(DataProviderSettings value);
    internal bool IsSetSettings();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.DatabaseMigrationService.Model.CreateDataProviderResponse : AmazonWebServiceResponse {
    private DataProvider _dataProvider;
    public DataProvider DataProvider { get; public set; }
    public DataProvider get_DataProvider();
    public void set_DataProvider(DataProvider value);
    internal bool IsSetDataProvider();
}
public class Amazon.DatabaseMigrationService.Model.CreateEndpointRequest : AmazonDatabaseMigrationServiceRequest {
    private string _certificateArn;
    private string _databaseName;
    private DmsTransferSettings _dmsTransferSettings;
    private DocDbSettings _docDbSettings;
    private DynamoDbSettings _dynamoDbSettings;
    private ElasticsearchSettings _elasticsearchSettings;
    private string _endpointIdentifier;
    private ReplicationEndpointTypeValue _endpointType;
    private string _engineName;
    private string _externalTableDefinition;
    private string _extraConnectionAttributes;
    private GcpMySQLSettings _gcpMySQLSettings;
    private IBMDb2Settings _ibmDb2Settings;
    private KafkaSettings _kafkaSettings;
    private KinesisSettings _kinesisSettings;
    private string _kmsKeyId;
    private MicrosoftSQLServerSettings _microsoftSQLServerSettings;
    private MongoDbSettings _mongoDbSettings;
    private MySQLSettings _mySQLSettings;
    private NeptuneSettings _neptuneSettings;
    private OracleSettings _oracleSettings;
    private string _password;
    private Nullable`1<int> _port;
    private PostgreSQLSettings _postgreSQLSettings;
    private RedisSettings _redisSettings;
    private RedshiftSettings _redshiftSettings;
    private string _resourceIdentifier;
    private S3Settings _s3Settings;
    private string _serverName;
    private string _serviceAccessRoleArn;
    private DmsSslModeValue _sslMode;
    private SybaseSettings _sybaseSettings;
    private List`1<Tag> _tags;
    private TimestreamSettings _timestreamSettings;
    private string _username;
    public string CertificateArn { get; public set; }
    public string DatabaseName { get; public set; }
    public DmsTransferSettings DmsTransferSettings { get; public set; }
    public DocDbSettings DocDbSettings { get; public set; }
    public DynamoDbSettings DynamoDbSettings { get; public set; }
    public ElasticsearchSettings ElasticsearchSettings { get; public set; }
    [AWSPropertyAttribute]
public string EndpointIdentifier { get; public set; }
    [AWSPropertyAttribute]
public ReplicationEndpointTypeValue EndpointType { get; public set; }
    [AWSPropertyAttribute]
public string EngineName { get; public set; }
    public string ExternalTableDefinition { get; public set; }
    public string ExtraConnectionAttributes { get; public set; }
    public GcpMySQLSettings GcpMySQLSettings { get; public set; }
    public IBMDb2Settings IBMDb2Settings { get; public set; }
    public KafkaSettings KafkaSettings { get; public set; }
    public KinesisSettings KinesisSettings { get; public set; }
    public string KmsKeyId { get; public set; }
    public MicrosoftSQLServerSettings MicrosoftSQLServerSettings { get; public set; }
    public MongoDbSettings MongoDbSettings { get; public set; }
    public MySQLSettings MySQLSettings { get; public set; }
    public NeptuneSettings NeptuneSettings { get; public set; }
    public OracleSettings OracleSettings { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public PostgreSQLSettings PostgreSQLSettings { get; public set; }
    public RedisSettings RedisSettings { get; public set; }
    public RedshiftSettings RedshiftSettings { get; public set; }
    public string ResourceIdentifier { get; public set; }
    public S3Settings S3Settings { get; public set; }
    public string ServerName { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public DmsSslModeValue SslMode { get; public set; }
    public SybaseSettings SybaseSettings { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public TimestreamSettings TimestreamSettings { get; public set; }
    public string Username { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public DmsTransferSettings get_DmsTransferSettings();
    public void set_DmsTransferSettings(DmsTransferSettings value);
    internal bool IsSetDmsTransferSettings();
    public DocDbSettings get_DocDbSettings();
    public void set_DocDbSettings(DocDbSettings value);
    internal bool IsSetDocDbSettings();
    public DynamoDbSettings get_DynamoDbSettings();
    public void set_DynamoDbSettings(DynamoDbSettings value);
    internal bool IsSetDynamoDbSettings();
    public ElasticsearchSettings get_ElasticsearchSettings();
    public void set_ElasticsearchSettings(ElasticsearchSettings value);
    internal bool IsSetElasticsearchSettings();
    public string get_EndpointIdentifier();
    public void set_EndpointIdentifier(string value);
    internal bool IsSetEndpointIdentifier();
    public ReplicationEndpointTypeValue get_EndpointType();
    public void set_EndpointType(ReplicationEndpointTypeValue value);
    internal bool IsSetEndpointType();
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public string get_ExternalTableDefinition();
    public void set_ExternalTableDefinition(string value);
    internal bool IsSetExternalTableDefinition();
    public string get_ExtraConnectionAttributes();
    public void set_ExtraConnectionAttributes(string value);
    internal bool IsSetExtraConnectionAttributes();
    public GcpMySQLSettings get_GcpMySQLSettings();
    public void set_GcpMySQLSettings(GcpMySQLSettings value);
    internal bool IsSetGcpMySQLSettings();
    public IBMDb2Settings get_IBMDb2Settings();
    public void set_IBMDb2Settings(IBMDb2Settings value);
    internal bool IsSetIBMDb2Settings();
    public KafkaSettings get_KafkaSettings();
    public void set_KafkaSettings(KafkaSettings value);
    internal bool IsSetKafkaSettings();
    public KinesisSettings get_KinesisSettings();
    public void set_KinesisSettings(KinesisSettings value);
    internal bool IsSetKinesisSettings();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public MicrosoftSQLServerSettings get_MicrosoftSQLServerSettings();
    public void set_MicrosoftSQLServerSettings(MicrosoftSQLServerSettings value);
    internal bool IsSetMicrosoftSQLServerSettings();
    public MongoDbSettings get_MongoDbSettings();
    public void set_MongoDbSettings(MongoDbSettings value);
    internal bool IsSetMongoDbSettings();
    public MySQLSettings get_MySQLSettings();
    public void set_MySQLSettings(MySQLSettings value);
    internal bool IsSetMySQLSettings();
    public NeptuneSettings get_NeptuneSettings();
    public void set_NeptuneSettings(NeptuneSettings value);
    internal bool IsSetNeptuneSettings();
    public OracleSettings get_OracleSettings();
    public void set_OracleSettings(OracleSettings value);
    internal bool IsSetOracleSettings();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public PostgreSQLSettings get_PostgreSQLSettings();
    public void set_PostgreSQLSettings(PostgreSQLSettings value);
    internal bool IsSetPostgreSQLSettings();
    public RedisSettings get_RedisSettings();
    public void set_RedisSettings(RedisSettings value);
    internal bool IsSetRedisSettings();
    public RedshiftSettings get_RedshiftSettings();
    public void set_RedshiftSettings(RedshiftSettings value);
    internal bool IsSetRedshiftSettings();
    public string get_ResourceIdentifier();
    public void set_ResourceIdentifier(string value);
    internal bool IsSetResourceIdentifier();
    public S3Settings get_S3Settings();
    public void set_S3Settings(S3Settings value);
    internal bool IsSetS3Settings();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
    public DmsSslModeValue get_SslMode();
    public void set_SslMode(DmsSslModeValue value);
    internal bool IsSetSslMode();
    public SybaseSettings get_SybaseSettings();
    public void set_SybaseSettings(SybaseSettings value);
    internal bool IsSetSybaseSettings();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public TimestreamSettings get_TimestreamSettings();
    public void set_TimestreamSettings(TimestreamSettings value);
    internal bool IsSetTimestreamSettings();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.DatabaseMigrationService.Model.CreateEndpointResponse : AmazonWebServiceResponse {
    private Endpoint _endpoint;
    public Endpoint Endpoint { get; public set; }
    public Endpoint get_Endpoint();
    public void set_Endpoint(Endpoint value);
    internal bool IsSetEndpoint();
}
public class Amazon.DatabaseMigrationService.Model.CreateEventSubscriptionRequest : AmazonDatabaseMigrationServiceRequest {
    private Nullable`1<bool> _enabled;
    private List`1<string> _eventCategories;
    private string _snsTopicArn;
    private List`1<string> _sourceIds;
    private string _sourceType;
    private string _subscriptionName;
    private List`1<Tag> _tags;
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<string> EventCategories { get; public set; }
    [AWSPropertyAttribute]
public string SnsTopicArn { get; public set; }
    public List`1<string> SourceIds { get; public set; }
    public string SourceType { get; public set; }
    [AWSPropertyAttribute]
public string SubscriptionName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<string> get_EventCategories();
    public void set_EventCategories(List`1<string> value);
    internal bool IsSetEventCategories();
    public string get_SnsTopicArn();
    public void set_SnsTopicArn(string value);
    internal bool IsSetSnsTopicArn();
    public List`1<string> get_SourceIds();
    public void set_SourceIds(List`1<string> value);
    internal bool IsSetSourceIds();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
    public string get_SubscriptionName();
    public void set_SubscriptionName(string value);
    internal bool IsSetSubscriptionName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.DatabaseMigrationService.Model.CreateEventSubscriptionResponse : AmazonWebServiceResponse {
    private EventSubscription _eventSubscription;
    public EventSubscription EventSubscription { get; public set; }
    public EventSubscription get_EventSubscription();
    public void set_EventSubscription(EventSubscription value);
    internal bool IsSetEventSubscription();
}
public class Amazon.DatabaseMigrationService.Model.CreateFleetAdvisorCollectorRequest : AmazonDatabaseMigrationServiceRequest {
    private string _collectorName;
    private string _description;
    private string _s3BucketName;
    private string _serviceAccessRoleArn;
    [AWSPropertyAttribute]
public string CollectorName { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string S3BucketName { get; public set; }
    [AWSPropertyAttribute]
public string ServiceAccessRoleArn { get; public set; }
    public string get_CollectorName();
    public void set_CollectorName(string value);
    internal bool IsSetCollectorName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
}
public class Amazon.DatabaseMigrationService.Model.CreateFleetAdvisorCollectorResponse : AmazonWebServiceResponse {
    private string _collectorName;
    private string _collectorReferencedId;
    private string _description;
    private string _s3BucketName;
    private string _serviceAccessRoleArn;
    public string CollectorName { get; public set; }
    public string CollectorReferencedId { get; public set; }
    public string Description { get; public set; }
    public string S3BucketName { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public string get_CollectorName();
    public void set_CollectorName(string value);
    internal bool IsSetCollectorName();
    public string get_CollectorReferencedId();
    public void set_CollectorReferencedId(string value);
    internal bool IsSetCollectorReferencedId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
}
public class Amazon.DatabaseMigrationService.Model.CreateInstanceProfileRequest : AmazonDatabaseMigrationServiceRequest {
    private string _availabilityZone;
    private string _description;
    private string _instanceProfileName;
    private string _kmsKeyArn;
    private string _networkType;
    private Nullable`1<bool> _publiclyAccessible;
    private string _subnetGroupIdentifier;
    private List`1<Tag> _tags;
    private List`1<string> _vpcSecurityGroups;
    public string AvailabilityZone { get; public set; }
    public string Description { get; public set; }
    public string InstanceProfileName { get; public set; }
    public string KmsKeyArn { get; public set; }
    public string NetworkType { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public string SubnetGroupIdentifier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<string> VpcSecurityGroups { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceProfileName();
    public void set_InstanceProfileName(string value);
    internal bool IsSetInstanceProfileName();
    public string get_KmsKeyArn();
    public void set_KmsKeyArn(string value);
    internal bool IsSetKmsKeyArn();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_SubnetGroupIdentifier();
    public void set_SubnetGroupIdentifier(string value);
    internal bool IsSetSubnetGroupIdentifier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<string> get_VpcSecurityGroups();
    public void set_VpcSecurityGroups(List`1<string> value);
    internal bool IsSetVpcSecurityGroups();
}
public class Amazon.DatabaseMigrationService.Model.CreateInstanceProfileResponse : AmazonWebServiceResponse {
    private InstanceProfile _instanceProfile;
    public InstanceProfile InstanceProfile { get; public set; }
    public InstanceProfile get_InstanceProfile();
    public void set_InstanceProfile(InstanceProfile value);
    internal bool IsSetInstanceProfile();
}
public class Amazon.DatabaseMigrationService.Model.CreateMigrationProjectRequest : AmazonDatabaseMigrationServiceRequest {
    private string _description;
    private string _instanceProfileIdentifier;
    private string _migrationProjectName;
    private SCApplicationAttributes _schemaConversionApplicationAttributes;
    private List`1<DataProviderDescriptorDefinition> _sourceDataProviderDescriptors;
    private List`1<Tag> _tags;
    private List`1<DataProviderDescriptorDefinition> _targetDataProviderDescriptors;
    private string _transformationRules;
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string InstanceProfileIdentifier { get; public set; }
    public string MigrationProjectName { get; public set; }
    public SCApplicationAttributes SchemaConversionApplicationAttributes { get; public set; }
    [AWSPropertyAttribute]
public List`1<DataProviderDescriptorDefinition> SourceDataProviderDescriptors { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public List`1<DataProviderDescriptorDefinition> TargetDataProviderDescriptors { get; public set; }
    public string TransformationRules { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceProfileIdentifier();
    public void set_InstanceProfileIdentifier(string value);
    internal bool IsSetInstanceProfileIdentifier();
    public string get_MigrationProjectName();
    public void set_MigrationProjectName(string value);
    internal bool IsSetMigrationProjectName();
    public SCApplicationAttributes get_SchemaConversionApplicationAttributes();
    public void set_SchemaConversionApplicationAttributes(SCApplicationAttributes value);
    internal bool IsSetSchemaConversionApplicationAttributes();
    public List`1<DataProviderDescriptorDefinition> get_SourceDataProviderDescriptors();
    public void set_SourceDataProviderDescriptors(List`1<DataProviderDescriptorDefinition> value);
    internal bool IsSetSourceDataProviderDescriptors();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<DataProviderDescriptorDefinition> get_TargetDataProviderDescriptors();
    public void set_TargetDataProviderDescriptors(List`1<DataProviderDescriptorDefinition> value);
    internal bool IsSetTargetDataProviderDescriptors();
    public string get_TransformationRules();
    public void set_TransformationRules(string value);
    internal bool IsSetTransformationRules();
}
public class Amazon.DatabaseMigrationService.Model.CreateMigrationProjectResponse : AmazonWebServiceResponse {
    private MigrationProject _migrationProject;
    public MigrationProject MigrationProject { get; public set; }
    public MigrationProject get_MigrationProject();
    public void set_MigrationProject(MigrationProject value);
    internal bool IsSetMigrationProject();
}
public class Amazon.DatabaseMigrationService.Model.CreateReplicationConfigRequest : AmazonDatabaseMigrationServiceRequest {
    private ComputeConfig _computeConfig;
    private string _replicationConfigIdentifier;
    private string _replicationSettings;
    private MigrationTypeValue _replicationType;
    private string _resourceIdentifier;
    private string _sourceEndpointArn;
    private string _supplementalSettings;
    private string _tableMappings;
    private List`1<Tag> _tags;
    private string _targetEndpointArn;
    [AWSPropertyAttribute]
public ComputeConfig ComputeConfig { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationConfigIdentifier { get; public set; }
    public string ReplicationSettings { get; public set; }
    [AWSPropertyAttribute]
public MigrationTypeValue ReplicationType { get; public set; }
    public string ResourceIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string SourceEndpointArn { get; public set; }
    public string SupplementalSettings { get; public set; }
    [AWSPropertyAttribute]
public string TableMappings { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetEndpointArn { get; public set; }
    public ComputeConfig get_ComputeConfig();
    public void set_ComputeConfig(ComputeConfig value);
    internal bool IsSetComputeConfig();
    public string get_ReplicationConfigIdentifier();
    public void set_ReplicationConfigIdentifier(string value);
    internal bool IsSetReplicationConfigIdentifier();
    public string get_ReplicationSettings();
    public void set_ReplicationSettings(string value);
    internal bool IsSetReplicationSettings();
    public MigrationTypeValue get_ReplicationType();
    public void set_ReplicationType(MigrationTypeValue value);
    internal bool IsSetReplicationType();
    public string get_ResourceIdentifier();
    public void set_ResourceIdentifier(string value);
    internal bool IsSetResourceIdentifier();
    public string get_SourceEndpointArn();
    public void set_SourceEndpointArn(string value);
    internal bool IsSetSourceEndpointArn();
    public string get_SupplementalSettings();
    public void set_SupplementalSettings(string value);
    internal bool IsSetSupplementalSettings();
    public string get_TableMappings();
    public void set_TableMappings(string value);
    internal bool IsSetTableMappings();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetEndpointArn();
    public void set_TargetEndpointArn(string value);
    internal bool IsSetTargetEndpointArn();
}
public class Amazon.DatabaseMigrationService.Model.CreateReplicationConfigResponse : AmazonWebServiceResponse {
    private ReplicationConfig _replicationConfig;
    public ReplicationConfig ReplicationConfig { get; public set; }
    public ReplicationConfig get_ReplicationConfig();
    public void set_ReplicationConfig(ReplicationConfig value);
    internal bool IsSetReplicationConfig();
}
public class Amazon.DatabaseMigrationService.Model.CreateReplicationInstanceRequest : AmazonDatabaseMigrationServiceRequest {
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _availabilityZone;
    private string _dnsNameServers;
    private string _engineVersion;
    private string _kmsKeyId;
    private Nullable`1<bool> _multiAZ;
    private string _networkType;
    private string _preferredMaintenanceWindow;
    private Nullable`1<bool> _publiclyAccessible;
    private string _replicationInstanceClass;
    private string _replicationInstanceIdentifier;
    private string _replicationSubnetGroupIdentifier;
    private string _resourceIdentifier;
    private List`1<Tag> _tags;
    private List`1<string> _vpcSecurityGroupIds;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string DnsNameServers { get; public set; }
    public string EngineVersion { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string NetworkType { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationInstanceClass { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationInstanceIdentifier { get; public set; }
    public string ReplicationSubnetGroupIdentifier { get; public set; }
    public string ResourceIdentifier { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_DnsNameServers();
    public void set_DnsNameServers(string value);
    internal bool IsSetDnsNameServers();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_ReplicationInstanceClass();
    public void set_ReplicationInstanceClass(string value);
    internal bool IsSetReplicationInstanceClass();
    public string get_ReplicationInstanceIdentifier();
    public void set_ReplicationInstanceIdentifier(string value);
    internal bool IsSetReplicationInstanceIdentifier();
    public string get_ReplicationSubnetGroupIdentifier();
    public void set_ReplicationSubnetGroupIdentifier(string value);
    internal bool IsSetReplicationSubnetGroupIdentifier();
    public string get_ResourceIdentifier();
    public void set_ResourceIdentifier(string value);
    internal bool IsSetResourceIdentifier();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.DatabaseMigrationService.Model.CreateReplicationInstanceResponse : AmazonWebServiceResponse {
    private ReplicationInstance _replicationInstance;
    public ReplicationInstance ReplicationInstance { get; public set; }
    public ReplicationInstance get_ReplicationInstance();
    public void set_ReplicationInstance(ReplicationInstance value);
    internal bool IsSetReplicationInstance();
}
public class Amazon.DatabaseMigrationService.Model.CreateReplicationSubnetGroupRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationSubnetGroupDescription;
    private string _replicationSubnetGroupIdentifier;
    private List`1<string> _subnetIds;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ReplicationSubnetGroupDescription { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationSubnetGroupIdentifier { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_ReplicationSubnetGroupDescription();
    public void set_ReplicationSubnetGroupDescription(string value);
    internal bool IsSetReplicationSubnetGroupDescription();
    public string get_ReplicationSubnetGroupIdentifier();
    public void set_ReplicationSubnetGroupIdentifier(string value);
    internal bool IsSetReplicationSubnetGroupIdentifier();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.DatabaseMigrationService.Model.CreateReplicationSubnetGroupResponse : AmazonWebServiceResponse {
    private ReplicationSubnetGroup _replicationSubnetGroup;
    public ReplicationSubnetGroup ReplicationSubnetGroup { get; public set; }
    public ReplicationSubnetGroup get_ReplicationSubnetGroup();
    public void set_ReplicationSubnetGroup(ReplicationSubnetGroup value);
    internal bool IsSetReplicationSubnetGroup();
}
public class Amazon.DatabaseMigrationService.Model.CreateReplicationTaskRequest : AmazonDatabaseMigrationServiceRequest {
    private string _cdcStartPosition;
    private Nullable`1<DateTime> _cdcStartTime;
    private string _cdcStopPosition;
    private MigrationTypeValue _migrationType;
    private string _replicationInstanceArn;
    private string _replicationTaskIdentifier;
    private string _replicationTaskSettings;
    private string _resourceIdentifier;
    private string _sourceEndpointArn;
    private string _tableMappings;
    private List`1<Tag> _tags;
    private string _targetEndpointArn;
    private string _taskData;
    public string CdcStartPosition { get; public set; }
    public Nullable`1<DateTime> CdcStartTime { get; public set; }
    public string CdcStopPosition { get; public set; }
    [AWSPropertyAttribute]
public MigrationTypeValue MigrationType { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationInstanceArn { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationTaskIdentifier { get; public set; }
    public string ReplicationTaskSettings { get; public set; }
    public string ResourceIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string SourceEndpointArn { get; public set; }
    [AWSPropertyAttribute]
public string TableMappings { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    [AWSPropertyAttribute]
public string TargetEndpointArn { get; public set; }
    public string TaskData { get; public set; }
    public string get_CdcStartPosition();
    public void set_CdcStartPosition(string value);
    internal bool IsSetCdcStartPosition();
    public Nullable`1<DateTime> get_CdcStartTime();
    public void set_CdcStartTime(Nullable`1<DateTime> value);
    internal bool IsSetCdcStartTime();
    public string get_CdcStopPosition();
    public void set_CdcStopPosition(string value);
    internal bool IsSetCdcStopPosition();
    public MigrationTypeValue get_MigrationType();
    public void set_MigrationType(MigrationTypeValue value);
    internal bool IsSetMigrationType();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
    public string get_ReplicationTaskIdentifier();
    public void set_ReplicationTaskIdentifier(string value);
    internal bool IsSetReplicationTaskIdentifier();
    public string get_ReplicationTaskSettings();
    public void set_ReplicationTaskSettings(string value);
    internal bool IsSetReplicationTaskSettings();
    public string get_ResourceIdentifier();
    public void set_ResourceIdentifier(string value);
    internal bool IsSetResourceIdentifier();
    public string get_SourceEndpointArn();
    public void set_SourceEndpointArn(string value);
    internal bool IsSetSourceEndpointArn();
    public string get_TableMappings();
    public void set_TableMappings(string value);
    internal bool IsSetTableMappings();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
    public string get_TargetEndpointArn();
    public void set_TargetEndpointArn(string value);
    internal bool IsSetTargetEndpointArn();
    public string get_TaskData();
    public void set_TaskData(string value);
    internal bool IsSetTaskData();
}
public class Amazon.DatabaseMigrationService.Model.CreateReplicationTaskResponse : AmazonWebServiceResponse {
    private ReplicationTask _replicationTask;
    public ReplicationTask ReplicationTask { get; public set; }
    public ReplicationTask get_ReplicationTask();
    public void set_ReplicationTask(ReplicationTask value);
    internal bool IsSetReplicationTask();
}
public class Amazon.DatabaseMigrationService.Model.DatabaseInstanceSoftwareDetailsResponse : object {
    private string _engine;
    private string _engineEdition;
    private string _engineVersion;
    private Nullable`1<int> _osArchitecture;
    private string _servicePack;
    private string _supportLevel;
    private string _tooltip;
    public string Engine { get; public set; }
    public string EngineEdition { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<int> OsArchitecture { get; public set; }
    public string ServicePack { get; public set; }
    public string SupportLevel { get; public set; }
    public string Tooltip { get; public set; }
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public string get_EngineEdition();
    public void set_EngineEdition(string value);
    internal bool IsSetEngineEdition();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<int> get_OsArchitecture();
    public void set_OsArchitecture(Nullable`1<int> value);
    internal bool IsSetOsArchitecture();
    public string get_ServicePack();
    public void set_ServicePack(string value);
    internal bool IsSetServicePack();
    public string get_SupportLevel();
    public void set_SupportLevel(string value);
    internal bool IsSetSupportLevel();
    public string get_Tooltip();
    public void set_Tooltip(string value);
    internal bool IsSetTooltip();
}
public class Amazon.DatabaseMigrationService.Model.DatabaseMigrationServicePaginatorFactory : object {
    private IAmazonDatabaseMigrationService client;
    internal DatabaseMigrationServicePaginatorFactory(IAmazonDatabaseMigrationService client);
    public sealed virtual IDescribeApplicableIndividualAssessmentsPaginator DescribeApplicableIndividualAssessments(DescribeApplicableIndividualAssessmentsRequest request);
    public sealed virtual IDescribeCertificatesPaginator DescribeCertificates(DescribeCertificatesRequest request);
    public sealed virtual IDescribeConnectionsPaginator DescribeConnections(DescribeConnectionsRequest request);
    public sealed virtual IDescribeDataProvidersPaginator DescribeDataProviders(DescribeDataProvidersRequest request);
    public sealed virtual IDescribeEndpointsPaginator DescribeEndpoints(DescribeEndpointsRequest request);
    public sealed virtual IDescribeEndpointSettingsPaginator DescribeEndpointSettings(DescribeEndpointSettingsRequest request);
    public sealed virtual IDescribeEndpointTypesPaginator DescribeEndpointTypes(DescribeEndpointTypesRequest request);
    public sealed virtual IDescribeEngineVersionsPaginator DescribeEngineVersions(DescribeEngineVersionsRequest request);
    public sealed virtual IDescribeEventsPaginator DescribeEvents(DescribeEventsRequest request);
    public sealed virtual IDescribeEventSubscriptionsPaginator DescribeEventSubscriptions(DescribeEventSubscriptionsRequest request);
    public sealed virtual IDescribeExtensionPackAssociationsPaginator DescribeExtensionPackAssociations(DescribeExtensionPackAssociationsRequest request);
    public sealed virtual IDescribeFleetAdvisorCollectorsPaginator DescribeFleetAdvisorCollectors(DescribeFleetAdvisorCollectorsRequest request);
    public sealed virtual IDescribeFleetAdvisorDatabasesPaginator DescribeFleetAdvisorDatabases(DescribeFleetAdvisorDatabasesRequest request);
    public sealed virtual IDescribeFleetAdvisorLsaAnalysisPaginator DescribeFleetAdvisorLsaAnalysis(DescribeFleetAdvisorLsaAnalysisRequest request);
    public sealed virtual IDescribeFleetAdvisorSchemaObjectSummaryPaginator DescribeFleetAdvisorSchemaObjectSummary(DescribeFleetAdvisorSchemaObjectSummaryRequest request);
    public sealed virtual IDescribeFleetAdvisorSchemasPaginator DescribeFleetAdvisorSchemas(DescribeFleetAdvisorSchemasRequest request);
    public sealed virtual IDescribeInstanceProfilesPaginator DescribeInstanceProfiles(DescribeInstanceProfilesRequest request);
    public sealed virtual IDescribeMetadataModelAssessmentsPaginator DescribeMetadataModelAssessments(DescribeMetadataModelAssessmentsRequest request);
    public sealed virtual IDescribeMetadataModelConversionsPaginator DescribeMetadataModelConversions(DescribeMetadataModelConversionsRequest request);
    public sealed virtual IDescribeMetadataModelExportsAsScriptPaginator DescribeMetadataModelExportsAsScript(DescribeMetadataModelExportsAsScriptRequest request);
    public sealed virtual IDescribeMetadataModelExportsToTargetPaginator DescribeMetadataModelExportsToTarget(DescribeMetadataModelExportsToTargetRequest request);
    public sealed virtual IDescribeMetadataModelImportsPaginator DescribeMetadataModelImports(DescribeMetadataModelImportsRequest request);
    public sealed virtual IDescribeMigrationProjectsPaginator DescribeMigrationProjects(DescribeMigrationProjectsRequest request);
    public sealed virtual IDescribeOrderableReplicationInstancesPaginator DescribeOrderableReplicationInstances(DescribeOrderableReplicationInstancesRequest request);
    public sealed virtual IDescribePendingMaintenanceActionsPaginator DescribePendingMaintenanceActions(DescribePendingMaintenanceActionsRequest request);
    public sealed virtual IDescribeRecommendationLimitationsPaginator DescribeRecommendationLimitations(DescribeRecommendationLimitationsRequest request);
    public sealed virtual IDescribeRecommendationsPaginator DescribeRecommendations(DescribeRecommendationsRequest request);
    public sealed virtual IDescribeReplicationConfigsPaginator DescribeReplicationConfigs(DescribeReplicationConfigsRequest request);
    public sealed virtual IDescribeReplicationInstancesPaginator DescribeReplicationInstances(DescribeReplicationInstancesRequest request);
    public sealed virtual IDescribeReplicationInstanceTaskLogsPaginator DescribeReplicationInstanceTaskLogs(DescribeReplicationInstanceTaskLogsRequest request);
    public sealed virtual IDescribeReplicationsPaginator DescribeReplications(DescribeReplicationsRequest request);
    public sealed virtual IDescribeReplicationSubnetGroupsPaginator DescribeReplicationSubnetGroups(DescribeReplicationSubnetGroupsRequest request);
    public sealed virtual IDescribeReplicationTableStatisticsPaginator DescribeReplicationTableStatistics(DescribeReplicationTableStatisticsRequest request);
    public sealed virtual IDescribeReplicationTaskAssessmentResultsPaginator DescribeReplicationTaskAssessmentResults(DescribeReplicationTaskAssessmentResultsRequest request);
    public sealed virtual IDescribeReplicationTaskAssessmentRunsPaginator DescribeReplicationTaskAssessmentRuns(DescribeReplicationTaskAssessmentRunsRequest request);
    public sealed virtual IDescribeReplicationTaskIndividualAssessmentsPaginator DescribeReplicationTaskIndividualAssessments(DescribeReplicationTaskIndividualAssessmentsRequest request);
    public sealed virtual IDescribeReplicationTasksPaginator DescribeReplicationTasks(DescribeReplicationTasksRequest request);
    public sealed virtual IDescribeSchemasPaginator DescribeSchemas(DescribeSchemasRequest request);
    public sealed virtual IDescribeTableStatisticsPaginator DescribeTableStatistics(DescribeTableStatisticsRequest request);
}
public class Amazon.DatabaseMigrationService.Model.DatabaseResponse : object {
    private List`1<CollectorShortInfoResponse> _collectors;
    private string _databaseId;
    private string _databaseName;
    private string _ipAddress;
    private Nullable`1<long> _numberOfSchemas;
    private ServerShortInfoResponse _server;
    private DatabaseInstanceSoftwareDetailsResponse _softwareDetails;
    public List`1<CollectorShortInfoResponse> Collectors { get; public set; }
    public string DatabaseId { get; public set; }
    public string DatabaseName { get; public set; }
    public string IpAddress { get; public set; }
    public Nullable`1<long> NumberOfSchemas { get; public set; }
    public ServerShortInfoResponse Server { get; public set; }
    public DatabaseInstanceSoftwareDetailsResponse SoftwareDetails { get; public set; }
    public List`1<CollectorShortInfoResponse> get_Collectors();
    public void set_Collectors(List`1<CollectorShortInfoResponse> value);
    internal bool IsSetCollectors();
    public string get_DatabaseId();
    public void set_DatabaseId(string value);
    internal bool IsSetDatabaseId();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public Nullable`1<long> get_NumberOfSchemas();
    public void set_NumberOfSchemas(Nullable`1<long> value);
    internal bool IsSetNumberOfSchemas();
    public ServerShortInfoResponse get_Server();
    public void set_Server(ServerShortInfoResponse value);
    internal bool IsSetServer();
    public DatabaseInstanceSoftwareDetailsResponse get_SoftwareDetails();
    public void set_SoftwareDetails(DatabaseInstanceSoftwareDetailsResponse value);
    internal bool IsSetSoftwareDetails();
}
public class Amazon.DatabaseMigrationService.Model.DatabaseShortInfoResponse : object {
    private string _databaseEngine;
    private string _databaseId;
    private string _databaseIpAddress;
    private string _databaseName;
    public string DatabaseEngine { get; public set; }
    public string DatabaseId { get; public set; }
    public string DatabaseIpAddress { get; public set; }
    public string DatabaseName { get; public set; }
    public string get_DatabaseEngine();
    public void set_DatabaseEngine(string value);
    internal bool IsSetDatabaseEngine();
    public string get_DatabaseId();
    public void set_DatabaseId(string value);
    internal bool IsSetDatabaseId();
    public string get_DatabaseIpAddress();
    public void set_DatabaseIpAddress(string value);
    internal bool IsSetDatabaseIpAddress();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
}
public class Amazon.DatabaseMigrationService.Model.DataProvider : object {
    private string _dataProviderArn;
    private Nullable`1<DateTime> _dataProviderCreationTime;
    private string _dataProviderName;
    private string _description;
    private string _engine;
    private DataProviderSettings _settings;
    public string DataProviderArn { get; public set; }
    public Nullable`1<DateTime> DataProviderCreationTime { get; public set; }
    public string DataProviderName { get; public set; }
    public string Description { get; public set; }
    public string Engine { get; public set; }
    public DataProviderSettings Settings { get; public set; }
    public string get_DataProviderArn();
    public void set_DataProviderArn(string value);
    internal bool IsSetDataProviderArn();
    public Nullable`1<DateTime> get_DataProviderCreationTime();
    public void set_DataProviderCreationTime(Nullable`1<DateTime> value);
    internal bool IsSetDataProviderCreationTime();
    public string get_DataProviderName();
    public void set_DataProviderName(string value);
    internal bool IsSetDataProviderName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public DataProviderSettings get_Settings();
    public void set_Settings(DataProviderSettings value);
    internal bool IsSetSettings();
}
public class Amazon.DatabaseMigrationService.Model.DataProviderDescriptor : object {
    private string _dataProviderArn;
    private string _dataProviderName;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    public string DataProviderArn { get; public set; }
    public string DataProviderName { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string get_DataProviderArn();
    public void set_DataProviderArn(string value);
    internal bool IsSetDataProviderArn();
    public string get_DataProviderName();
    public void set_DataProviderName(string value);
    internal bool IsSetDataProviderName();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
}
public class Amazon.DatabaseMigrationService.Model.DataProviderDescriptorDefinition : object {
    private string _dataProviderIdentifier;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    [AWSPropertyAttribute]
public string DataProviderIdentifier { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string get_DataProviderIdentifier();
    public void set_DataProviderIdentifier(string value);
    internal bool IsSetDataProviderIdentifier();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
}
public class Amazon.DatabaseMigrationService.Model.DataProviderSettings : object {
    private DocDbDataProviderSettings _docDbSettings;
    private MariaDbDataProviderSettings _mariaDbSettings;
    private MicrosoftSqlServerDataProviderSettings _microsoftSqlServerSettings;
    private MongoDbDataProviderSettings _mongoDbSettings;
    private MySqlDataProviderSettings _mySqlSettings;
    private OracleDataProviderSettings _oracleSettings;
    private PostgreSqlDataProviderSettings _postgreSqlSettings;
    private RedshiftDataProviderSettings _redshiftSettings;
    public DocDbDataProviderSettings DocDbSettings { get; public set; }
    public MariaDbDataProviderSettings MariaDbSettings { get; public set; }
    public MicrosoftSqlServerDataProviderSettings MicrosoftSqlServerSettings { get; public set; }
    public MongoDbDataProviderSettings MongoDbSettings { get; public set; }
    public MySqlDataProviderSettings MySqlSettings { get; public set; }
    public OracleDataProviderSettings OracleSettings { get; public set; }
    public PostgreSqlDataProviderSettings PostgreSqlSettings { get; public set; }
    public RedshiftDataProviderSettings RedshiftSettings { get; public set; }
    public DocDbDataProviderSettings get_DocDbSettings();
    public void set_DocDbSettings(DocDbDataProviderSettings value);
    internal bool IsSetDocDbSettings();
    public MariaDbDataProviderSettings get_MariaDbSettings();
    public void set_MariaDbSettings(MariaDbDataProviderSettings value);
    internal bool IsSetMariaDbSettings();
    public MicrosoftSqlServerDataProviderSettings get_MicrosoftSqlServerSettings();
    public void set_MicrosoftSqlServerSettings(MicrosoftSqlServerDataProviderSettings value);
    internal bool IsSetMicrosoftSqlServerSettings();
    public MongoDbDataProviderSettings get_MongoDbSettings();
    public void set_MongoDbSettings(MongoDbDataProviderSettings value);
    internal bool IsSetMongoDbSettings();
    public MySqlDataProviderSettings get_MySqlSettings();
    public void set_MySqlSettings(MySqlDataProviderSettings value);
    internal bool IsSetMySqlSettings();
    public OracleDataProviderSettings get_OracleSettings();
    public void set_OracleSettings(OracleDataProviderSettings value);
    internal bool IsSetOracleSettings();
    public PostgreSqlDataProviderSettings get_PostgreSqlSettings();
    public void set_PostgreSqlSettings(PostgreSqlDataProviderSettings value);
    internal bool IsSetPostgreSqlSettings();
    public RedshiftDataProviderSettings get_RedshiftSettings();
    public void set_RedshiftSettings(RedshiftDataProviderSettings value);
    internal bool IsSetRedshiftSettings();
}
public class Amazon.DatabaseMigrationService.Model.DefaultErrorDetails : object {
    private string _message;
    public string Message { get; public set; }
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.DatabaseMigrationService.Model.DeleteCertificateRequest : AmazonDatabaseMigrationServiceRequest {
    private string _certificateArn;
    [AWSPropertyAttribute]
public string CertificateArn { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
}
public class Amazon.DatabaseMigrationService.Model.DeleteCertificateResponse : AmazonWebServiceResponse {
    private Certificate _certificate;
    public Certificate Certificate { get; public set; }
    public Certificate get_Certificate();
    public void set_Certificate(Certificate value);
    internal bool IsSetCertificate();
}
public class Amazon.DatabaseMigrationService.Model.DeleteConnectionRequest : AmazonDatabaseMigrationServiceRequest {
    private string _endpointArn;
    private string _replicationInstanceArn;
    [AWSPropertyAttribute]
public string EndpointArn { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationInstanceArn { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
}
public class Amazon.DatabaseMigrationService.Model.DeleteConnectionResponse : AmazonWebServiceResponse {
    private Connection _connection;
    public Connection Connection { get; public set; }
    public Connection get_Connection();
    public void set_Connection(Connection value);
    internal bool IsSetConnection();
}
public class Amazon.DatabaseMigrationService.Model.DeleteDataProviderRequest : AmazonDatabaseMigrationServiceRequest {
    private string _dataProviderIdentifier;
    [AWSPropertyAttribute]
public string DataProviderIdentifier { get; public set; }
    public string get_DataProviderIdentifier();
    public void set_DataProviderIdentifier(string value);
    internal bool IsSetDataProviderIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DeleteDataProviderResponse : AmazonWebServiceResponse {
    private DataProvider _dataProvider;
    public DataProvider DataProvider { get; public set; }
    public DataProvider get_DataProvider();
    public void set_DataProvider(DataProvider value);
    internal bool IsSetDataProvider();
}
public class Amazon.DatabaseMigrationService.Model.DeleteEndpointRequest : AmazonDatabaseMigrationServiceRequest {
    private string _endpointArn;
    [AWSPropertyAttribute]
public string EndpointArn { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
}
public class Amazon.DatabaseMigrationService.Model.DeleteEndpointResponse : AmazonWebServiceResponse {
    private Endpoint _endpoint;
    public Endpoint Endpoint { get; public set; }
    public Endpoint get_Endpoint();
    public void set_Endpoint(Endpoint value);
    internal bool IsSetEndpoint();
}
public class Amazon.DatabaseMigrationService.Model.DeleteEventSubscriptionRequest : AmazonDatabaseMigrationServiceRequest {
    private string _subscriptionName;
    [AWSPropertyAttribute]
public string SubscriptionName { get; public set; }
    public string get_SubscriptionName();
    public void set_SubscriptionName(string value);
    internal bool IsSetSubscriptionName();
}
public class Amazon.DatabaseMigrationService.Model.DeleteEventSubscriptionResponse : AmazonWebServiceResponse {
    private EventSubscription _eventSubscription;
    public EventSubscription EventSubscription { get; public set; }
    public EventSubscription get_EventSubscription();
    public void set_EventSubscription(EventSubscription value);
    internal bool IsSetEventSubscription();
}
public class Amazon.DatabaseMigrationService.Model.DeleteFleetAdvisorCollectorRequest : AmazonDatabaseMigrationServiceRequest {
    private string _collectorReferencedId;
    [AWSPropertyAttribute]
public string CollectorReferencedId { get; public set; }
    public string get_CollectorReferencedId();
    public void set_CollectorReferencedId(string value);
    internal bool IsSetCollectorReferencedId();
}
public class Amazon.DatabaseMigrationService.Model.DeleteFleetAdvisorCollectorResponse : AmazonWebServiceResponse {
}
public class Amazon.DatabaseMigrationService.Model.DeleteFleetAdvisorDatabasesRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<string> _databaseIds;
    [AWSPropertyAttribute]
public List`1<string> DatabaseIds { get; public set; }
    public List`1<string> get_DatabaseIds();
    public void set_DatabaseIds(List`1<string> value);
    internal bool IsSetDatabaseIds();
}
public class Amazon.DatabaseMigrationService.Model.DeleteFleetAdvisorDatabasesResponse : AmazonWebServiceResponse {
    private List`1<string> _databaseIds;
    public List`1<string> DatabaseIds { get; public set; }
    public List`1<string> get_DatabaseIds();
    public void set_DatabaseIds(List`1<string> value);
    internal bool IsSetDatabaseIds();
}
public class Amazon.DatabaseMigrationService.Model.DeleteInstanceProfileRequest : AmazonDatabaseMigrationServiceRequest {
    private string _instanceProfileIdentifier;
    [AWSPropertyAttribute]
public string InstanceProfileIdentifier { get; public set; }
    public string get_InstanceProfileIdentifier();
    public void set_InstanceProfileIdentifier(string value);
    internal bool IsSetInstanceProfileIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DeleteInstanceProfileResponse : AmazonWebServiceResponse {
    private InstanceProfile _instanceProfile;
    public InstanceProfile InstanceProfile { get; public set; }
    public InstanceProfile get_InstanceProfile();
    public void set_InstanceProfile(InstanceProfile value);
    internal bool IsSetInstanceProfile();
}
public class Amazon.DatabaseMigrationService.Model.DeleteMigrationProjectRequest : AmazonDatabaseMigrationServiceRequest {
    private string _migrationProjectIdentifier;
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DeleteMigrationProjectResponse : AmazonWebServiceResponse {
    private MigrationProject _migrationProject;
    public MigrationProject MigrationProject { get; public set; }
    public MigrationProject get_MigrationProject();
    public void set_MigrationProject(MigrationProject value);
    internal bool IsSetMigrationProject();
}
public class Amazon.DatabaseMigrationService.Model.DeleteReplicationConfigRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationConfigArn;
    [AWSPropertyAttribute]
public string ReplicationConfigArn { get; public set; }
    public string get_ReplicationConfigArn();
    public void set_ReplicationConfigArn(string value);
    internal bool IsSetReplicationConfigArn();
}
public class Amazon.DatabaseMigrationService.Model.DeleteReplicationConfigResponse : AmazonWebServiceResponse {
    private ReplicationConfig _replicationConfig;
    public ReplicationConfig ReplicationConfig { get; public set; }
    public ReplicationConfig get_ReplicationConfig();
    public void set_ReplicationConfig(ReplicationConfig value);
    internal bool IsSetReplicationConfig();
}
public class Amazon.DatabaseMigrationService.Model.DeleteReplicationInstanceRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationInstanceArn;
    [AWSPropertyAttribute]
public string ReplicationInstanceArn { get; public set; }
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
}
public class Amazon.DatabaseMigrationService.Model.DeleteReplicationInstanceResponse : AmazonWebServiceResponse {
    private ReplicationInstance _replicationInstance;
    public ReplicationInstance ReplicationInstance { get; public set; }
    public ReplicationInstance get_ReplicationInstance();
    public void set_ReplicationInstance(ReplicationInstance value);
    internal bool IsSetReplicationInstance();
}
public class Amazon.DatabaseMigrationService.Model.DeleteReplicationSubnetGroupRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationSubnetGroupIdentifier;
    [AWSPropertyAttribute]
public string ReplicationSubnetGroupIdentifier { get; public set; }
    public string get_ReplicationSubnetGroupIdentifier();
    public void set_ReplicationSubnetGroupIdentifier(string value);
    internal bool IsSetReplicationSubnetGroupIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DeleteReplicationSubnetGroupResponse : AmazonWebServiceResponse {
}
public class Amazon.DatabaseMigrationService.Model.DeleteReplicationTaskAssessmentRunRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationTaskAssessmentRunArn;
    [AWSPropertyAttribute]
public string ReplicationTaskAssessmentRunArn { get; public set; }
    public string get_ReplicationTaskAssessmentRunArn();
    public void set_ReplicationTaskAssessmentRunArn(string value);
    internal bool IsSetReplicationTaskAssessmentRunArn();
}
public class Amazon.DatabaseMigrationService.Model.DeleteReplicationTaskAssessmentRunResponse : AmazonWebServiceResponse {
    private ReplicationTaskAssessmentRun _replicationTaskAssessmentRun;
    public ReplicationTaskAssessmentRun ReplicationTaskAssessmentRun { get; public set; }
    public ReplicationTaskAssessmentRun get_ReplicationTaskAssessmentRun();
    public void set_ReplicationTaskAssessmentRun(ReplicationTaskAssessmentRun value);
    internal bool IsSetReplicationTaskAssessmentRun();
}
public class Amazon.DatabaseMigrationService.Model.DeleteReplicationTaskRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationTaskArn;
    [AWSPropertyAttribute]
public string ReplicationTaskArn { get; public set; }
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
}
public class Amazon.DatabaseMigrationService.Model.DeleteReplicationTaskResponse : AmazonWebServiceResponse {
    private ReplicationTask _replicationTask;
    public ReplicationTask ReplicationTask { get; public set; }
    public ReplicationTask get_ReplicationTask();
    public void set_ReplicationTask(ReplicationTask value);
    internal bool IsSetReplicationTask();
}
public class Amazon.DatabaseMigrationService.Model.DescribeAccountAttributesRequest : AmazonDatabaseMigrationServiceRequest {
}
public class Amazon.DatabaseMigrationService.Model.DescribeAccountAttributesResponse : AmazonWebServiceResponse {
    private List`1<AccountQuota> _accountQuotas;
    private string _uniqueAccountIdentifier;
    public List`1<AccountQuota> AccountQuotas { get; public set; }
    public string UniqueAccountIdentifier { get; public set; }
    public List`1<AccountQuota> get_AccountQuotas();
    public void set_AccountQuotas(List`1<AccountQuota> value);
    internal bool IsSetAccountQuotas();
    public string get_UniqueAccountIdentifier();
    public void set_UniqueAccountIdentifier(string value);
    internal bool IsSetUniqueAccountIdentifier();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeApplicableIndividualAssessmentsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeApplicableIndividualAssessmentsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeApplicableIndividualAssessmentsResponse> Responses { get; }
    internal DescribeApplicableIndividualAssessmentsPaginator(IAmazonDatabaseMigrationService client, DescribeApplicableIndividualAssessmentsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeApplicableIndividualAssessmentsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeApplicableIndividualAssessmentsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeApplicableIndividualAssessmentsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeApplicableIndividualAssessmentsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeApplicableIndividualAssessmentsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeApplicableIndividualAssessmentsRequest : AmazonDatabaseMigrationServiceRequest {
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private MigrationTypeValue _migrationType;
    private string _replicationInstanceArn;
    private string _replicationTaskArn;
    private string _sourceEngineName;
    private string _targetEngineName;
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public MigrationTypeValue MigrationType { get; public set; }
    public string ReplicationInstanceArn { get; public set; }
    public string ReplicationTaskArn { get; public set; }
    public string SourceEngineName { get; public set; }
    public string TargetEngineName { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public MigrationTypeValue get_MigrationType();
    public void set_MigrationType(MigrationTypeValue value);
    internal bool IsSetMigrationType();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public string get_SourceEngineName();
    public void set_SourceEngineName(string value);
    internal bool IsSetSourceEngineName();
    public string get_TargetEngineName();
    public void set_TargetEngineName(string value);
    internal bool IsSetTargetEngineName();
}
public class Amazon.DatabaseMigrationService.Model.DescribeApplicableIndividualAssessmentsResponse : AmazonWebServiceResponse {
    private List`1<string> _individualAssessmentNames;
    private string _marker;
    public List`1<string> IndividualAssessmentNames { get; public set; }
    public string Marker { get; public set; }
    public List`1<string> get_IndividualAssessmentNames();
    public void set_IndividualAssessmentNames(List`1<string> value);
    internal bool IsSetIndividualAssessmentNames();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeCertificatesPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeCertificatesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeCertificatesResponse> Responses { get; }
    internal DescribeCertificatesPaginator(IAmazonDatabaseMigrationService client, DescribeCertificatesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeCertificatesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeCertificatesPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeCertificatesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeCertificatesResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeCertificatesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeCertificatesRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeCertificatesResponse : AmazonWebServiceResponse {
    private List`1<Certificate> _certificates;
    private string _marker;
    public List`1<Certificate> Certificates { get; public set; }
    public string Marker { get; public set; }
    public List`1<Certificate> get_Certificates();
    public void set_Certificates(List`1<Certificate> value);
    internal bool IsSetCertificates();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeConnectionsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeConnectionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeConnectionsResponse> Responses { get; }
    internal DescribeConnectionsPaginator(IAmazonDatabaseMigrationService client, DescribeConnectionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeConnectionsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeConnectionsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeConnectionsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeConnectionsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeConnectionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeConnectionsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeConnectionsResponse : AmazonWebServiceResponse {
    private List`1<Connection> _connections;
    private string _marker;
    public List`1<Connection> Connections { get; public set; }
    public string Marker { get; public set; }
    public List`1<Connection> get_Connections();
    public void set_Connections(List`1<Connection> value);
    internal bool IsSetConnections();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.DatabaseMigrationService.Model.DescribeConversionConfigurationRequest : AmazonDatabaseMigrationServiceRequest {
    private string _migrationProjectIdentifier;
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DescribeConversionConfigurationResponse : AmazonWebServiceResponse {
    private string _conversionConfiguration;
    private string _migrationProjectIdentifier;
    public string ConversionConfiguration { get; public set; }
    public string MigrationProjectIdentifier { get; public set; }
    public string get_ConversionConfiguration();
    public void set_ConversionConfiguration(string value);
    internal bool IsSetConversionConfiguration();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeDataProvidersPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeDataProvidersRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeDataProvidersResponse> Responses { get; }
    internal DescribeDataProvidersPaginator(IAmazonDatabaseMigrationService client, DescribeDataProvidersRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeDataProvidersResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeDataProvidersPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeDataProvidersResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeDataProvidersResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeDataProvidersResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeDataProvidersRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeDataProvidersResponse : AmazonWebServiceResponse {
    private List`1<DataProvider> _dataProviders;
    private string _marker;
    public List`1<DataProvider> DataProviders { get; public set; }
    public string Marker { get; public set; }
    public List`1<DataProvider> get_DataProviders();
    public void set_DataProviders(List`1<DataProvider> value);
    internal bool IsSetDataProviders();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeEndpointSettingsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeEndpointSettingsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEndpointSettingsResponse> Responses { get; }
    internal DescribeEndpointSettingsPaginator(IAmazonDatabaseMigrationService client, DescribeEndpointSettingsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEndpointSettingsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeEndpointSettingsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeEndpointSettingsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeEndpointSettingsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeEndpointSettingsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeEndpointSettingsRequest : AmazonDatabaseMigrationServiceRequest {
    private string _engineName;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    [AWSPropertyAttribute]
public string EngineName { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeEndpointSettingsResponse : AmazonWebServiceResponse {
    private List`1<EndpointSetting> _endpointSettings;
    private string _marker;
    public List`1<EndpointSetting> EndpointSettings { get; public set; }
    public string Marker { get; public set; }
    public List`1<EndpointSetting> get_EndpointSettings();
    public void set_EndpointSettings(List`1<EndpointSetting> value);
    internal bool IsSetEndpointSettings();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeEndpointsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeEndpointsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEndpointsResponse> Responses { get; }
    internal DescribeEndpointsPaginator(IAmazonDatabaseMigrationService client, DescribeEndpointsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEndpointsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeEndpointsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeEndpointsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeEndpointsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeEndpointsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeEndpointsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeEndpointsResponse : AmazonWebServiceResponse {
    private List`1<Endpoint> _endpoints;
    private string _marker;
    public List`1<Endpoint> Endpoints { get; public set; }
    public string Marker { get; public set; }
    public List`1<Endpoint> get_Endpoints();
    public void set_Endpoints(List`1<Endpoint> value);
    internal bool IsSetEndpoints();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeEndpointTypesPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeEndpointTypesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEndpointTypesResponse> Responses { get; }
    internal DescribeEndpointTypesPaginator(IAmazonDatabaseMigrationService client, DescribeEndpointTypesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEndpointTypesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeEndpointTypesPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeEndpointTypesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeEndpointTypesResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeEndpointTypesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeEndpointTypesRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeEndpointTypesResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<SupportedEndpointType> _supportedEndpointTypes;
    public string Marker { get; public set; }
    public List`1<SupportedEndpointType> SupportedEndpointTypes { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<SupportedEndpointType> get_SupportedEndpointTypes();
    public void set_SupportedEndpointTypes(List`1<SupportedEndpointType> value);
    internal bool IsSetSupportedEndpointTypes();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeEngineVersionsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeEngineVersionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEngineVersionsResponse> Responses { get; }
    internal DescribeEngineVersionsPaginator(IAmazonDatabaseMigrationService client, DescribeEngineVersionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEngineVersionsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeEngineVersionsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeEngineVersionsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeEngineVersionsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeEngineVersionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeEngineVersionsRequest : AmazonDatabaseMigrationServiceRequest {
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeEngineVersionsResponse : AmazonWebServiceResponse {
    private List`1<EngineVersion> _engineVersions;
    private string _marker;
    public List`1<EngineVersion> EngineVersions { get; public set; }
    public string Marker { get; public set; }
    public List`1<EngineVersion> get_EngineVersions();
    public void set_EngineVersions(List`1<EngineVersion> value);
    internal bool IsSetEngineVersions();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.DatabaseMigrationService.Model.DescribeEventCategoriesRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _sourceType;
    public List`1<Filter> Filters { get; public set; }
    public string SourceType { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
}
public class Amazon.DatabaseMigrationService.Model.DescribeEventCategoriesResponse : AmazonWebServiceResponse {
    private List`1<EventCategoryGroup> _eventCategoryGroupList;
    public List`1<EventCategoryGroup> EventCategoryGroupList { get; public set; }
    public List`1<EventCategoryGroup> get_EventCategoryGroupList();
    public void set_EventCategoryGroupList(List`1<EventCategoryGroup> value);
    internal bool IsSetEventCategoryGroupList();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeEventsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeEventsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEventsResponse> Responses { get; }
    internal DescribeEventsPaginator(IAmazonDatabaseMigrationService client, DescribeEventsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEventsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeEventsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeEventsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeEventsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeEventsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeEventsRequest : AmazonDatabaseMigrationServiceRequest {
    private Nullable`1<int> _duration;
    private Nullable`1<DateTime> _endTime;
    private List`1<string> _eventCategories;
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _sourceIdentifier;
    private SourceType _sourceType;
    private Nullable`1<DateTime> _startTime;
    public Nullable`1<int> Duration { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public List`1<string> EventCategories { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string SourceIdentifier { get; public set; }
    public SourceType SourceType { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public Nullable`1<int> get_Duration();
    public void set_Duration(Nullable`1<int> value);
    internal bool IsSetDuration();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public List`1<string> get_EventCategories();
    public void set_EventCategories(List`1<string> value);
    internal bool IsSetEventCategories();
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    internal bool IsSetSourceIdentifier();
    public SourceType get_SourceType();
    public void set_SourceType(SourceType value);
    internal bool IsSetSourceType();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
}
public class Amazon.DatabaseMigrationService.Model.DescribeEventsResponse : AmazonWebServiceResponse {
    private List`1<DMSEvent> _events;
    private string _marker;
    public List`1<DMSEvent> Events { get; public set; }
    public string Marker { get; public set; }
    public List`1<DMSEvent> get_Events();
    public void set_Events(List`1<DMSEvent> value);
    internal bool IsSetEvents();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeEventSubscriptionsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeEventSubscriptionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeEventSubscriptionsResponse> Responses { get; }
    internal DescribeEventSubscriptionsPaginator(IAmazonDatabaseMigrationService client, DescribeEventSubscriptionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeEventSubscriptionsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeEventSubscriptionsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeEventSubscriptionsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeEventSubscriptionsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeEventSubscriptionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeEventSubscriptionsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _subscriptionName;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string SubscriptionName { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_SubscriptionName();
    public void set_SubscriptionName(string value);
    internal bool IsSetSubscriptionName();
}
public class Amazon.DatabaseMigrationService.Model.DescribeEventSubscriptionsResponse : AmazonWebServiceResponse {
    private List`1<EventSubscription> _eventSubscriptionsList;
    private string _marker;
    public List`1<EventSubscription> EventSubscriptionsList { get; public set; }
    public string Marker { get; public set; }
    public List`1<EventSubscription> get_EventSubscriptionsList();
    public void set_EventSubscriptionsList(List`1<EventSubscription> value);
    internal bool IsSetEventSubscriptionsList();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeExtensionPackAssociationsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeExtensionPackAssociationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeExtensionPackAssociationsResponse> Responses { get; }
    internal DescribeExtensionPackAssociationsPaginator(IAmazonDatabaseMigrationService client, DescribeExtensionPackAssociationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeExtensionPackAssociationsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeExtensionPackAssociationsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeExtensionPackAssociationsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeExtensionPackAssociationsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeExtensionPackAssociationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeExtensionPackAssociationsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _migrationProjectIdentifier;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DescribeExtensionPackAssociationsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<SchemaConversionRequest> _requests;
    public string Marker { get; public set; }
    public List`1<SchemaConversionRequest> Requests { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<SchemaConversionRequest> get_Requests();
    public void set_Requests(List`1<SchemaConversionRequest> value);
    internal bool IsSetRequests();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorCollectorsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeFleetAdvisorCollectorsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFleetAdvisorCollectorsResponse> Responses { get; }
    internal DescribeFleetAdvisorCollectorsPaginator(IAmazonDatabaseMigrationService client, DescribeFleetAdvisorCollectorsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFleetAdvisorCollectorsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorCollectorsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeFleetAdvisorCollectorsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeFleetAdvisorCollectorsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorCollectorsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorCollectorsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorCollectorsResponse : AmazonWebServiceResponse {
    private List`1<CollectorResponse> _collectors;
    private string _nextToken;
    public List`1<CollectorResponse> Collectors { get; public set; }
    public string NextToken { get; public set; }
    public List`1<CollectorResponse> get_Collectors();
    public void set_Collectors(List`1<CollectorResponse> value);
    internal bool IsSetCollectors();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorDatabasesPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeFleetAdvisorDatabasesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFleetAdvisorDatabasesResponse> Responses { get; }
    internal DescribeFleetAdvisorDatabasesPaginator(IAmazonDatabaseMigrationService client, DescribeFleetAdvisorDatabasesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFleetAdvisorDatabasesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorDatabasesPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeFleetAdvisorDatabasesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeFleetAdvisorDatabasesResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorDatabasesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorDatabasesRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorDatabasesResponse : AmazonWebServiceResponse {
    private List`1<DatabaseResponse> _databases;
    private string _nextToken;
    public List`1<DatabaseResponse> Databases { get; public set; }
    public string NextToken { get; public set; }
    public List`1<DatabaseResponse> get_Databases();
    public void set_Databases(List`1<DatabaseResponse> value);
    internal bool IsSetDatabases();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorLsaAnalysisPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeFleetAdvisorLsaAnalysisRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFleetAdvisorLsaAnalysisResponse> Responses { get; }
    internal DescribeFleetAdvisorLsaAnalysisPaginator(IAmazonDatabaseMigrationService client, DescribeFleetAdvisorLsaAnalysisRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFleetAdvisorLsaAnalysisResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorLsaAnalysisPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeFleetAdvisorLsaAnalysisResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeFleetAdvisorLsaAnalysisResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorLsaAnalysisResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorLsaAnalysisRequest : AmazonDatabaseMigrationServiceRequest {
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public Nullable`1<int> MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorLsaAnalysisResponse : AmazonWebServiceResponse {
    private List`1<FleetAdvisorLsaAnalysisResponse> _analysis;
    private string _nextToken;
    public List`1<FleetAdvisorLsaAnalysisResponse> Analysis { get; public set; }
    public string NextToken { get; public set; }
    public List`1<FleetAdvisorLsaAnalysisResponse> get_Analysis();
    public void set_Analysis(List`1<FleetAdvisorLsaAnalysisResponse> value);
    internal bool IsSetAnalysis();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorSchemaObjectSummaryPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeFleetAdvisorSchemaObjectSummaryRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFleetAdvisorSchemaObjectSummaryResponse> Responses { get; }
    internal DescribeFleetAdvisorSchemaObjectSummaryPaginator(IAmazonDatabaseMigrationService client, DescribeFleetAdvisorSchemaObjectSummaryRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFleetAdvisorSchemaObjectSummaryResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorSchemaObjectSummaryPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeFleetAdvisorSchemaObjectSummaryResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeFleetAdvisorSchemaObjectSummaryResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorSchemaObjectSummaryResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorSchemaObjectSummaryRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorSchemaObjectSummaryResponse : AmazonWebServiceResponse {
    private List`1<FleetAdvisorSchemaObjectResponse> _fleetAdvisorSchemaObjects;
    private string _nextToken;
    public List`1<FleetAdvisorSchemaObjectResponse> FleetAdvisorSchemaObjects { get; public set; }
    public string NextToken { get; public set; }
    public List`1<FleetAdvisorSchemaObjectResponse> get_FleetAdvisorSchemaObjects();
    public void set_FleetAdvisorSchemaObjects(List`1<FleetAdvisorSchemaObjectResponse> value);
    internal bool IsSetFleetAdvisorSchemaObjects();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorSchemasPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeFleetAdvisorSchemasRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeFleetAdvisorSchemasResponse> Responses { get; }
    internal DescribeFleetAdvisorSchemasPaginator(IAmazonDatabaseMigrationService client, DescribeFleetAdvisorSchemasRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeFleetAdvisorSchemasResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorSchemasPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeFleetAdvisorSchemasResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeFleetAdvisorSchemasResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorSchemasResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorSchemasRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DatabaseMigrationService.Model.DescribeFleetAdvisorSchemasResponse : AmazonWebServiceResponse {
    private List`1<SchemaResponse> _fleetAdvisorSchemas;
    private string _nextToken;
    public List`1<SchemaResponse> FleetAdvisorSchemas { get; public set; }
    public string NextToken { get; public set; }
    public List`1<SchemaResponse> get_FleetAdvisorSchemas();
    public void set_FleetAdvisorSchemas(List`1<SchemaResponse> value);
    internal bool IsSetFleetAdvisorSchemas();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeInstanceProfilesPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeInstanceProfilesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeInstanceProfilesResponse> Responses { get; }
    internal DescribeInstanceProfilesPaginator(IAmazonDatabaseMigrationService client, DescribeInstanceProfilesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeInstanceProfilesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeInstanceProfilesPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeInstanceProfilesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeInstanceProfilesResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeInstanceProfilesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeInstanceProfilesRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeInstanceProfilesResponse : AmazonWebServiceResponse {
    private List`1<InstanceProfile> _instanceProfiles;
    private string _marker;
    public List`1<InstanceProfile> InstanceProfiles { get; public set; }
    public string Marker { get; public set; }
    public List`1<InstanceProfile> get_InstanceProfiles();
    public void set_InstanceProfiles(List`1<InstanceProfile> value);
    internal bool IsSetInstanceProfiles();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelAssessmentsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeMetadataModelAssessmentsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMetadataModelAssessmentsResponse> Responses { get; }
    internal DescribeMetadataModelAssessmentsPaginator(IAmazonDatabaseMigrationService client, DescribeMetadataModelAssessmentsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMetadataModelAssessmentsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeMetadataModelAssessmentsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeMetadataModelAssessmentsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeMetadataModelAssessmentsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeMetadataModelAssessmentsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelAssessmentsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _migrationProjectIdentifier;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelAssessmentsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<SchemaConversionRequest> _requests;
    public string Marker { get; public set; }
    public List`1<SchemaConversionRequest> Requests { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<SchemaConversionRequest> get_Requests();
    public void set_Requests(List`1<SchemaConversionRequest> value);
    internal bool IsSetRequests();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelConversionsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeMetadataModelConversionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMetadataModelConversionsResponse> Responses { get; }
    internal DescribeMetadataModelConversionsPaginator(IAmazonDatabaseMigrationService client, DescribeMetadataModelConversionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMetadataModelConversionsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeMetadataModelConversionsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeMetadataModelConversionsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeMetadataModelConversionsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeMetadataModelConversionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelConversionsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _migrationProjectIdentifier;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelConversionsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<SchemaConversionRequest> _requests;
    public string Marker { get; public set; }
    public List`1<SchemaConversionRequest> Requests { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<SchemaConversionRequest> get_Requests();
    public void set_Requests(List`1<SchemaConversionRequest> value);
    internal bool IsSetRequests();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelExportsAsScriptPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeMetadataModelExportsAsScriptRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMetadataModelExportsAsScriptResponse> Responses { get; }
    internal DescribeMetadataModelExportsAsScriptPaginator(IAmazonDatabaseMigrationService client, DescribeMetadataModelExportsAsScriptRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMetadataModelExportsAsScriptResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeMetadataModelExportsAsScriptPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeMetadataModelExportsAsScriptResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeMetadataModelExportsAsScriptResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeMetadataModelExportsAsScriptResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelExportsAsScriptRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _migrationProjectIdentifier;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelExportsAsScriptResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<SchemaConversionRequest> _requests;
    public string Marker { get; public set; }
    public List`1<SchemaConversionRequest> Requests { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<SchemaConversionRequest> get_Requests();
    public void set_Requests(List`1<SchemaConversionRequest> value);
    internal bool IsSetRequests();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelExportsToTargetPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeMetadataModelExportsToTargetRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMetadataModelExportsToTargetResponse> Responses { get; }
    internal DescribeMetadataModelExportsToTargetPaginator(IAmazonDatabaseMigrationService client, DescribeMetadataModelExportsToTargetRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMetadataModelExportsToTargetResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeMetadataModelExportsToTargetPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeMetadataModelExportsToTargetResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeMetadataModelExportsToTargetResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeMetadataModelExportsToTargetResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelExportsToTargetRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _migrationProjectIdentifier;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelExportsToTargetResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<SchemaConversionRequest> _requests;
    public string Marker { get; public set; }
    public List`1<SchemaConversionRequest> Requests { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<SchemaConversionRequest> get_Requests();
    public void set_Requests(List`1<SchemaConversionRequest> value);
    internal bool IsSetRequests();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelImportsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeMetadataModelImportsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMetadataModelImportsResponse> Responses { get; }
    internal DescribeMetadataModelImportsPaginator(IAmazonDatabaseMigrationService client, DescribeMetadataModelImportsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMetadataModelImportsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeMetadataModelImportsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeMetadataModelImportsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeMetadataModelImportsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeMetadataModelImportsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelImportsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _migrationProjectIdentifier;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.DescribeMetadataModelImportsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<SchemaConversionRequest> _requests;
    public string Marker { get; public set; }
    public List`1<SchemaConversionRequest> Requests { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<SchemaConversionRequest> get_Requests();
    public void set_Requests(List`1<SchemaConversionRequest> value);
    internal bool IsSetRequests();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeMigrationProjectsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeMigrationProjectsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeMigrationProjectsResponse> Responses { get; }
    internal DescribeMigrationProjectsPaginator(IAmazonDatabaseMigrationService client, DescribeMigrationProjectsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeMigrationProjectsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeMigrationProjectsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeMigrationProjectsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeMigrationProjectsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeMigrationProjectsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeMigrationProjectsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeMigrationProjectsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<MigrationProject> _migrationProjects;
    public string Marker { get; public set; }
    public List`1<MigrationProject> MigrationProjects { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<MigrationProject> get_MigrationProjects();
    public void set_MigrationProjects(List`1<MigrationProject> value);
    internal bool IsSetMigrationProjects();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeOrderableReplicationInstancesPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeOrderableReplicationInstancesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeOrderableReplicationInstancesResponse> Responses { get; }
    internal DescribeOrderableReplicationInstancesPaginator(IAmazonDatabaseMigrationService client, DescribeOrderableReplicationInstancesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeOrderableReplicationInstancesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeOrderableReplicationInstancesPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeOrderableReplicationInstancesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeOrderableReplicationInstancesResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeOrderableReplicationInstancesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeOrderableReplicationInstancesRequest : AmazonDatabaseMigrationServiceRequest {
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeOrderableReplicationInstancesResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<OrderableReplicationInstance> _orderableReplicationInstances;
    public string Marker { get; public set; }
    public List`1<OrderableReplicationInstance> OrderableReplicationInstances { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<OrderableReplicationInstance> get_OrderableReplicationInstances();
    public void set_OrderableReplicationInstances(List`1<OrderableReplicationInstance> value);
    internal bool IsSetOrderableReplicationInstances();
}
internal class Amazon.DatabaseMigrationService.Model.DescribePendingMaintenanceActionsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribePendingMaintenanceActionsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribePendingMaintenanceActionsResponse> Responses { get; }
    internal DescribePendingMaintenanceActionsPaginator(IAmazonDatabaseMigrationService client, DescribePendingMaintenanceActionsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribePendingMaintenanceActionsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribePendingMaintenanceActionsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribePendingMaintenanceActionsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribePendingMaintenanceActionsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribePendingMaintenanceActionsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribePendingMaintenanceActionsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _replicationInstanceArn;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string ReplicationInstanceArn { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
}
public class Amazon.DatabaseMigrationService.Model.DescribePendingMaintenanceActionsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<ResourcePendingMaintenanceActions> _pendingMaintenanceActions;
    public string Marker { get; public set; }
    public List`1<ResourcePendingMaintenanceActions> PendingMaintenanceActions { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ResourcePendingMaintenanceActions> get_PendingMaintenanceActions();
    public void set_PendingMaintenanceActions(List`1<ResourcePendingMaintenanceActions> value);
    internal bool IsSetPendingMaintenanceActions();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeRecommendationLimitationsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeRecommendationLimitationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeRecommendationLimitationsResponse> Responses { get; }
    internal DescribeRecommendationLimitationsPaginator(IAmazonDatabaseMigrationService client, DescribeRecommendationLimitationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeRecommendationLimitationsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeRecommendationLimitationsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeRecommendationLimitationsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeRecommendationLimitationsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeRecommendationLimitationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeRecommendationLimitationsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DatabaseMigrationService.Model.DescribeRecommendationLimitationsResponse : AmazonWebServiceResponse {
    private List`1<Limitation> _limitations;
    private string _nextToken;
    public List`1<Limitation> Limitations { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Limitation> get_Limitations();
    public void set_Limitations(List`1<Limitation> value);
    internal bool IsSetLimitations();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeRecommendationsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeRecommendationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeRecommendationsResponse> Responses { get; }
    internal DescribeRecommendationsPaginator(IAmazonDatabaseMigrationService client, DescribeRecommendationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeRecommendationsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeRecommendationsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeRecommendationsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeRecommendationsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeRecommendationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeRecommendationsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private Nullable`1<int> _maxRecords;
    private string _nextToken;
    public List`1<Filter> Filters { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string NextToken { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DatabaseMigrationService.Model.DescribeRecommendationsResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Recommendation> _recommendations;
    public string NextToken { get; public set; }
    public List`1<Recommendation> Recommendations { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Recommendation> get_Recommendations();
    public void set_Recommendations(List`1<Recommendation> value);
    internal bool IsSetRecommendations();
}
public class Amazon.DatabaseMigrationService.Model.DescribeRefreshSchemasStatusRequest : AmazonDatabaseMigrationServiceRequest {
    private string _endpointArn;
    [AWSPropertyAttribute]
public string EndpointArn { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
}
public class Amazon.DatabaseMigrationService.Model.DescribeRefreshSchemasStatusResponse : AmazonWebServiceResponse {
    private RefreshSchemasStatus _refreshSchemasStatus;
    public RefreshSchemasStatus RefreshSchemasStatus { get; public set; }
    public RefreshSchemasStatus get_RefreshSchemasStatus();
    public void set_RefreshSchemasStatus(RefreshSchemasStatus value);
    internal bool IsSetRefreshSchemasStatus();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeReplicationConfigsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeReplicationConfigsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationConfigsResponse> Responses { get; }
    internal DescribeReplicationConfigsPaginator(IAmazonDatabaseMigrationService client, DescribeReplicationConfigsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationConfigsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeReplicationConfigsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeReplicationConfigsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplicationConfigsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeReplicationConfigsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationConfigsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationConfigsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<ReplicationConfig> _replicationConfigs;
    public string Marker { get; public set; }
    public List`1<ReplicationConfig> ReplicationConfigs { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ReplicationConfig> get_ReplicationConfigs();
    public void set_ReplicationConfigs(List`1<ReplicationConfig> value);
    internal bool IsSetReplicationConfigs();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeReplicationInstancesPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeReplicationInstancesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationInstancesResponse> Responses { get; }
    internal DescribeReplicationInstancesPaginator(IAmazonDatabaseMigrationService client, DescribeReplicationInstancesRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationInstancesResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeReplicationInstancesPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeReplicationInstancesResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplicationInstancesResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeReplicationInstancesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationInstancesRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationInstancesResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<ReplicationInstance> _replicationInstances;
    public string Marker { get; public set; }
    public List`1<ReplicationInstance> ReplicationInstances { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ReplicationInstance> get_ReplicationInstances();
    public void set_ReplicationInstances(List`1<ReplicationInstance> value);
    internal bool IsSetReplicationInstances();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeReplicationInstanceTaskLogsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeReplicationInstanceTaskLogsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationInstanceTaskLogsResponse> Responses { get; }
    internal DescribeReplicationInstanceTaskLogsPaginator(IAmazonDatabaseMigrationService client, DescribeReplicationInstanceTaskLogsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationInstanceTaskLogsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeReplicationInstanceTaskLogsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeReplicationInstanceTaskLogsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplicationInstanceTaskLogsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeReplicationInstanceTaskLogsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationInstanceTaskLogsRequest : AmazonDatabaseMigrationServiceRequest {
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _replicationInstanceArn;
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationInstanceArn { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationInstanceTaskLogsResponse : AmazonWebServiceResponse {
    private string _marker;
    private string _replicationInstanceArn;
    private List`1<ReplicationInstanceTaskLog> _replicationInstanceTaskLogs;
    public string Marker { get; public set; }
    public string ReplicationInstanceArn { get; public set; }
    public List`1<ReplicationInstanceTaskLog> ReplicationInstanceTaskLogs { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
    public List`1<ReplicationInstanceTaskLog> get_ReplicationInstanceTaskLogs();
    public void set_ReplicationInstanceTaskLogs(List`1<ReplicationInstanceTaskLog> value);
    internal bool IsSetReplicationInstanceTaskLogs();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeReplicationsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeReplicationsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationsResponse> Responses { get; }
    internal DescribeReplicationsPaginator(IAmazonDatabaseMigrationService client, DescribeReplicationsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeReplicationsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeReplicationsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplicationsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeReplicationsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<Replication> _replications;
    public string Marker { get; public set; }
    public List`1<Replication> Replications { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<Replication> get_Replications();
    public void set_Replications(List`1<Replication> value);
    internal bool IsSetReplications();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeReplicationSubnetGroupsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeReplicationSubnetGroupsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationSubnetGroupsResponse> Responses { get; }
    internal DescribeReplicationSubnetGroupsPaginator(IAmazonDatabaseMigrationService client, DescribeReplicationSubnetGroupsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationSubnetGroupsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeReplicationSubnetGroupsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeReplicationSubnetGroupsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplicationSubnetGroupsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeReplicationSubnetGroupsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationSubnetGroupsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationSubnetGroupsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<ReplicationSubnetGroup> _replicationSubnetGroups;
    public string Marker { get; public set; }
    public List`1<ReplicationSubnetGroup> ReplicationSubnetGroups { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ReplicationSubnetGroup> get_ReplicationSubnetGroups();
    public void set_ReplicationSubnetGroups(List`1<ReplicationSubnetGroup> value);
    internal bool IsSetReplicationSubnetGroups();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeReplicationTableStatisticsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeReplicationTableStatisticsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationTableStatisticsResponse> Responses { get; }
    internal DescribeReplicationTableStatisticsPaginator(IAmazonDatabaseMigrationService client, DescribeReplicationTableStatisticsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationTableStatisticsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeReplicationTableStatisticsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeReplicationTableStatisticsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplicationTableStatisticsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeReplicationTableStatisticsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationTableStatisticsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _replicationConfigArn;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationConfigArn { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_ReplicationConfigArn();
    public void set_ReplicationConfigArn(string value);
    internal bool IsSetReplicationConfigArn();
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationTableStatisticsResponse : AmazonWebServiceResponse {
    private string _marker;
    private string _replicationConfigArn;
    private List`1<TableStatistics> _replicationTableStatistics;
    public string Marker { get; public set; }
    public string ReplicationConfigArn { get; public set; }
    public List`1<TableStatistics> ReplicationTableStatistics { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_ReplicationConfigArn();
    public void set_ReplicationConfigArn(string value);
    internal bool IsSetReplicationConfigArn();
    public List`1<TableStatistics> get_ReplicationTableStatistics();
    public void set_ReplicationTableStatistics(List`1<TableStatistics> value);
    internal bool IsSetReplicationTableStatistics();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskAssessmentResultsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeReplicationTaskAssessmentResultsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationTaskAssessmentResultsResponse> Responses { get; }
    internal DescribeReplicationTaskAssessmentResultsPaginator(IAmazonDatabaseMigrationService client, DescribeReplicationTaskAssessmentResultsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationTaskAssessmentResultsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskAssessmentResultsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeReplicationTaskAssessmentResultsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplicationTaskAssessmentResultsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskAssessmentResultsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskAssessmentResultsRequest : AmazonDatabaseMigrationServiceRequest {
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _replicationTaskArn;
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string ReplicationTaskArn { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskAssessmentResultsResponse : AmazonWebServiceResponse {
    private string _bucketName;
    private string _marker;
    private List`1<ReplicationTaskAssessmentResult> _replicationTaskAssessmentResults;
    public string BucketName { get; public set; }
    public string Marker { get; public set; }
    public List`1<ReplicationTaskAssessmentResult> ReplicationTaskAssessmentResults { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ReplicationTaskAssessmentResult> get_ReplicationTaskAssessmentResults();
    public void set_ReplicationTaskAssessmentResults(List`1<ReplicationTaskAssessmentResult> value);
    internal bool IsSetReplicationTaskAssessmentResults();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskAssessmentRunsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeReplicationTaskAssessmentRunsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationTaskAssessmentRunsResponse> Responses { get; }
    internal DescribeReplicationTaskAssessmentRunsPaginator(IAmazonDatabaseMigrationService client, DescribeReplicationTaskAssessmentRunsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationTaskAssessmentRunsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskAssessmentRunsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeReplicationTaskAssessmentRunsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplicationTaskAssessmentRunsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskAssessmentRunsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskAssessmentRunsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskAssessmentRunsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<ReplicationTaskAssessmentRun> _replicationTaskAssessmentRuns;
    public string Marker { get; public set; }
    public List`1<ReplicationTaskAssessmentRun> ReplicationTaskAssessmentRuns { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ReplicationTaskAssessmentRun> get_ReplicationTaskAssessmentRuns();
    public void set_ReplicationTaskAssessmentRuns(List`1<ReplicationTaskAssessmentRun> value);
    internal bool IsSetReplicationTaskAssessmentRuns();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskIndividualAssessmentsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeReplicationTaskIndividualAssessmentsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationTaskIndividualAssessmentsResponse> Responses { get; }
    internal DescribeReplicationTaskIndividualAssessmentsPaginator(IAmazonDatabaseMigrationService client, DescribeReplicationTaskIndividualAssessmentsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationTaskIndividualAssessmentsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskIndividualAssessmentsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeReplicationTaskIndividualAssessmentsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplicationTaskIndividualAssessmentsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskIndividualAssessmentsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskIndividualAssessmentsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationTaskIndividualAssessmentsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<ReplicationTaskIndividualAssessment> _replicationTaskIndividualAssessments;
    public string Marker { get; public set; }
    public List`1<ReplicationTaskIndividualAssessment> ReplicationTaskIndividualAssessments { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ReplicationTaskIndividualAssessment> get_ReplicationTaskIndividualAssessments();
    public void set_ReplicationTaskIndividualAssessments(List`1<ReplicationTaskIndividualAssessment> value);
    internal bool IsSetReplicationTaskIndividualAssessments();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeReplicationTasksPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeReplicationTasksRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeReplicationTasksResponse> Responses { get; }
    internal DescribeReplicationTasksPaginator(IAmazonDatabaseMigrationService client, DescribeReplicationTasksRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeReplicationTasksResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeReplicationTasksPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeReplicationTasksResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeReplicationTasksResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeReplicationTasksResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationTasksRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private Nullable`1<bool> _withoutSettings;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public Nullable`1<bool> WithoutSettings { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public Nullable`1<bool> get_WithoutSettings();
    public void set_WithoutSettings(Nullable`1<bool> value);
    internal bool IsSetWithoutSettings();
}
public class Amazon.DatabaseMigrationService.Model.DescribeReplicationTasksResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<ReplicationTask> _replicationTasks;
    public string Marker { get; public set; }
    public List`1<ReplicationTask> ReplicationTasks { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<ReplicationTask> get_ReplicationTasks();
    public void set_ReplicationTasks(List`1<ReplicationTask> value);
    internal bool IsSetReplicationTasks();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeSchemasPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeSchemasRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeSchemasResponse> Responses { get; }
    internal DescribeSchemasPaginator(IAmazonDatabaseMigrationService client, DescribeSchemasRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeSchemasResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeSchemasPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeSchemasResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeSchemasResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeSchemasResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeSchemasRequest : AmazonDatabaseMigrationServiceRequest {
    private string _endpointArn;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    [AWSPropertyAttribute]
public string EndpointArn { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
}
public class Amazon.DatabaseMigrationService.Model.DescribeSchemasResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<string> _schemas;
    public string Marker { get; public set; }
    public List`1<string> Schemas { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<string> get_Schemas();
    public void set_Schemas(List`1<string> value);
    internal bool IsSetSchemas();
}
internal class Amazon.DatabaseMigrationService.Model.DescribeTableStatisticsPaginator : object {
    private IAmazonDatabaseMigrationService _client;
    private DescribeTableStatisticsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<DescribeTableStatisticsResponse> Responses { get; }
    internal DescribeTableStatisticsPaginator(IAmazonDatabaseMigrationService client, DescribeTableStatisticsRequest request);
    public sealed virtual IPaginatedEnumerable`1<DescribeTableStatisticsResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DatabaseMigrationService.Model.DescribeTableStatisticsPaginator/<Amazon-Runtime-IPaginator<Amazon-DatabaseMigrationService-Model-DescribeTableStatisticsResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<DescribeTableStatisticsResponse> Amazon.Runtime.IPaginator<Amazon.DatabaseMigrationService.Model.DescribeTableStatisticsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DatabaseMigrationService.Model.DescribeTableStatisticsRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<Filter> _filters;
    private string _marker;
    private Nullable`1<int> _maxRecords;
    private string _replicationTaskArn;
    public List`1<Filter> Filters { get; public set; }
    public string Marker { get; public set; }
    public Nullable`1<int> MaxRecords { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationTaskArn { get; public set; }
    public List`1<Filter> get_Filters();
    public void set_Filters(List`1<Filter> value);
    internal bool IsSetFilters();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public Nullable`1<int> get_MaxRecords();
    public void set_MaxRecords(Nullable`1<int> value);
    internal bool IsSetMaxRecords();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
}
public class Amazon.DatabaseMigrationService.Model.DescribeTableStatisticsResponse : AmazonWebServiceResponse {
    private string _marker;
    private string _replicationTaskArn;
    private List`1<TableStatistics> _tableStatistics;
    public string Marker { get; public set; }
    public string ReplicationTaskArn { get; public set; }
    public List`1<TableStatistics> TableStatistics { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public List`1<TableStatistics> get_TableStatistics();
    public void set_TableStatistics(List`1<TableStatistics> value);
    internal bool IsSetTableStatistics();
}
public class Amazon.DatabaseMigrationService.Model.DMSEvent : object {
    private Nullable`1<DateTime> _date;
    private List`1<string> _eventCategories;
    private string _message;
    private string _sourceIdentifier;
    private SourceType _sourceType;
    public Nullable`1<DateTime> Date { get; public set; }
    public List`1<string> EventCategories { get; public set; }
    public string Message { get; public set; }
    public string SourceIdentifier { get; public set; }
    public SourceType SourceType { get; public set; }
    public Nullable`1<DateTime> get_Date();
    public void set_Date(Nullable`1<DateTime> value);
    internal bool IsSetDate();
    public List`1<string> get_EventCategories();
    public void set_EventCategories(List`1<string> value);
    internal bool IsSetEventCategories();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
    public string get_SourceIdentifier();
    public void set_SourceIdentifier(string value);
    internal bool IsSetSourceIdentifier();
    public SourceType get_SourceType();
    public void set_SourceType(SourceType value);
    internal bool IsSetSourceType();
}
public class Amazon.DatabaseMigrationService.Model.DmsTransferSettings : object {
    private string _bucketName;
    private string _serviceAccessRoleArn;
    public string BucketName { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
}
public class Amazon.DatabaseMigrationService.Model.DocDbDataProviderSettings : object {
    private string _certificateArn;
    private string _databaseName;
    private Nullable`1<int> _port;
    private string _serverName;
    private DmsSslModeValue _sslMode;
    public string CertificateArn { get; public set; }
    public string DatabaseName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string ServerName { get; public set; }
    public DmsSslModeValue SslMode { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public DmsSslModeValue get_SslMode();
    public void set_SslMode(DmsSslModeValue value);
    internal bool IsSetSslMode();
}
public class Amazon.DatabaseMigrationService.Model.DocDbSettings : object {
    private string _databaseName;
    private Nullable`1<int> _docsToInvestigate;
    private Nullable`1<bool> _extractDocId;
    private string _kmsKeyId;
    private NestingLevelValue _nestingLevel;
    private string _password;
    private Nullable`1<int> _port;
    private Nullable`1<bool> _replicateShardCollections;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    private string _serverName;
    private string _username;
    private Nullable`1<bool> _useUpdateLookUp;
    public string DatabaseName { get; public set; }
    public Nullable`1<int> DocsToInvestigate { get; public set; }
    public Nullable`1<bool> ExtractDocId { get; public set; }
    public string KmsKeyId { get; public set; }
    public NestingLevelValue NestingLevel { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public Nullable`1<bool> ReplicateShardCollections { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string ServerName { get; public set; }
    public string Username { get; public set; }
    public Nullable`1<bool> UseUpdateLookUp { get; public set; }
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_DocsToInvestigate();
    public void set_DocsToInvestigate(Nullable`1<int> value);
    internal bool IsSetDocsToInvestigate();
    public Nullable`1<bool> get_ExtractDocId();
    public void set_ExtractDocId(Nullable`1<bool> value);
    internal bool IsSetExtractDocId();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public NestingLevelValue get_NestingLevel();
    public void set_NestingLevel(NestingLevelValue value);
    internal bool IsSetNestingLevel();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public Nullable`1<bool> get_ReplicateShardCollections();
    public void set_ReplicateShardCollections(Nullable`1<bool> value);
    internal bool IsSetReplicateShardCollections();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public Nullable`1<bool> get_UseUpdateLookUp();
    public void set_UseUpdateLookUp(Nullable`1<bool> value);
    internal bool IsSetUseUpdateLookUp();
}
public class Amazon.DatabaseMigrationService.Model.DynamoDbSettings : object {
    private string _serviceAccessRoleArn;
    [AWSPropertyAttribute]
public string ServiceAccessRoleArn { get; public set; }
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
}
public class Amazon.DatabaseMigrationService.Model.ElasticsearchSettings : object {
    private string _endpointUri;
    private Nullable`1<int> _errorRetryDuration;
    private Nullable`1<int> _fullLoadErrorPercentage;
    private string _serviceAccessRoleArn;
    private Nullable`1<bool> _useNewMappingType;
    [AWSPropertyAttribute]
public string EndpointUri { get; public set; }
    public Nullable`1<int> ErrorRetryDuration { get; public set; }
    public Nullable`1<int> FullLoadErrorPercentage { get; public set; }
    [AWSPropertyAttribute]
public string ServiceAccessRoleArn { get; public set; }
    public Nullable`1<bool> UseNewMappingType { get; public set; }
    public string get_EndpointUri();
    public void set_EndpointUri(string value);
    internal bool IsSetEndpointUri();
    public Nullable`1<int> get_ErrorRetryDuration();
    public void set_ErrorRetryDuration(Nullable`1<int> value);
    internal bool IsSetErrorRetryDuration();
    public Nullable`1<int> get_FullLoadErrorPercentage();
    public void set_FullLoadErrorPercentage(Nullable`1<int> value);
    internal bool IsSetFullLoadErrorPercentage();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
    public Nullable`1<bool> get_UseNewMappingType();
    public void set_UseNewMappingType(Nullable`1<bool> value);
    internal bool IsSetUseNewMappingType();
}
public class Amazon.DatabaseMigrationService.Model.Endpoint : object {
    private string _certificateArn;
    private string _databaseName;
    private DmsTransferSettings _dmsTransferSettings;
    private DocDbSettings _docDbSettings;
    private DynamoDbSettings _dynamoDbSettings;
    private ElasticsearchSettings _elasticsearchSettings;
    private string _endpointArn;
    private string _endpointIdentifier;
    private ReplicationEndpointTypeValue _endpointType;
    private string _engineDisplayName;
    private string _engineName;
    private string _externalId;
    private string _externalTableDefinition;
    private string _extraConnectionAttributes;
    private GcpMySQLSettings _gcpMySQLSettings;
    private IBMDb2Settings _ibmDb2Settings;
    private KafkaSettings _kafkaSettings;
    private KinesisSettings _kinesisSettings;
    private string _kmsKeyId;
    private MicrosoftSQLServerSettings _microsoftSQLServerSettings;
    private MongoDbSettings _mongoDbSettings;
    private MySQLSettings _mySQLSettings;
    private NeptuneSettings _neptuneSettings;
    private OracleSettings _oracleSettings;
    private Nullable`1<int> _port;
    private PostgreSQLSettings _postgreSQLSettings;
    private RedisSettings _redisSettings;
    private RedshiftSettings _redshiftSettings;
    private S3Settings _s3Settings;
    private string _serverName;
    private string _serviceAccessRoleArn;
    private DmsSslModeValue _sslMode;
    private string _status;
    private SybaseSettings _sybaseSettings;
    private TimestreamSettings _timestreamSettings;
    private string _username;
    public string CertificateArn { get; public set; }
    public string DatabaseName { get; public set; }
    public DmsTransferSettings DmsTransferSettings { get; public set; }
    public DocDbSettings DocDbSettings { get; public set; }
    public DynamoDbSettings DynamoDbSettings { get; public set; }
    public ElasticsearchSettings ElasticsearchSettings { get; public set; }
    public string EndpointArn { get; public set; }
    public string EndpointIdentifier { get; public set; }
    public ReplicationEndpointTypeValue EndpointType { get; public set; }
    public string EngineDisplayName { get; public set; }
    public string EngineName { get; public set; }
    public string ExternalId { get; public set; }
    public string ExternalTableDefinition { get; public set; }
    public string ExtraConnectionAttributes { get; public set; }
    public GcpMySQLSettings GcpMySQLSettings { get; public set; }
    public IBMDb2Settings IBMDb2Settings { get; public set; }
    public KafkaSettings KafkaSettings { get; public set; }
    public KinesisSettings KinesisSettings { get; public set; }
    public string KmsKeyId { get; public set; }
    public MicrosoftSQLServerSettings MicrosoftSQLServerSettings { get; public set; }
    public MongoDbSettings MongoDbSettings { get; public set; }
    public MySQLSettings MySQLSettings { get; public set; }
    public NeptuneSettings NeptuneSettings { get; public set; }
    public OracleSettings OracleSettings { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public PostgreSQLSettings PostgreSQLSettings { get; public set; }
    public RedisSettings RedisSettings { get; public set; }
    public RedshiftSettings RedshiftSettings { get; public set; }
    public S3Settings S3Settings { get; public set; }
    public string ServerName { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public DmsSslModeValue SslMode { get; public set; }
    public string Status { get; public set; }
    public SybaseSettings SybaseSettings { get; public set; }
    public TimestreamSettings TimestreamSettings { get; public set; }
    public string Username { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public DmsTransferSettings get_DmsTransferSettings();
    public void set_DmsTransferSettings(DmsTransferSettings value);
    internal bool IsSetDmsTransferSettings();
    public DocDbSettings get_DocDbSettings();
    public void set_DocDbSettings(DocDbSettings value);
    internal bool IsSetDocDbSettings();
    public DynamoDbSettings get_DynamoDbSettings();
    public void set_DynamoDbSettings(DynamoDbSettings value);
    internal bool IsSetDynamoDbSettings();
    public ElasticsearchSettings get_ElasticsearchSettings();
    public void set_ElasticsearchSettings(ElasticsearchSettings value);
    internal bool IsSetElasticsearchSettings();
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
    public string get_EndpointIdentifier();
    public void set_EndpointIdentifier(string value);
    internal bool IsSetEndpointIdentifier();
    public ReplicationEndpointTypeValue get_EndpointType();
    public void set_EndpointType(ReplicationEndpointTypeValue value);
    internal bool IsSetEndpointType();
    public string get_EngineDisplayName();
    public void set_EngineDisplayName(string value);
    internal bool IsSetEngineDisplayName();
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public string get_ExternalId();
    public void set_ExternalId(string value);
    internal bool IsSetExternalId();
    public string get_ExternalTableDefinition();
    public void set_ExternalTableDefinition(string value);
    internal bool IsSetExternalTableDefinition();
    public string get_ExtraConnectionAttributes();
    public void set_ExtraConnectionAttributes(string value);
    internal bool IsSetExtraConnectionAttributes();
    public GcpMySQLSettings get_GcpMySQLSettings();
    public void set_GcpMySQLSettings(GcpMySQLSettings value);
    internal bool IsSetGcpMySQLSettings();
    public IBMDb2Settings get_IBMDb2Settings();
    public void set_IBMDb2Settings(IBMDb2Settings value);
    internal bool IsSetIBMDb2Settings();
    public KafkaSettings get_KafkaSettings();
    public void set_KafkaSettings(KafkaSettings value);
    internal bool IsSetKafkaSettings();
    public KinesisSettings get_KinesisSettings();
    public void set_KinesisSettings(KinesisSettings value);
    internal bool IsSetKinesisSettings();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public MicrosoftSQLServerSettings get_MicrosoftSQLServerSettings();
    public void set_MicrosoftSQLServerSettings(MicrosoftSQLServerSettings value);
    internal bool IsSetMicrosoftSQLServerSettings();
    public MongoDbSettings get_MongoDbSettings();
    public void set_MongoDbSettings(MongoDbSettings value);
    internal bool IsSetMongoDbSettings();
    public MySQLSettings get_MySQLSettings();
    public void set_MySQLSettings(MySQLSettings value);
    internal bool IsSetMySQLSettings();
    public NeptuneSettings get_NeptuneSettings();
    public void set_NeptuneSettings(NeptuneSettings value);
    internal bool IsSetNeptuneSettings();
    public OracleSettings get_OracleSettings();
    public void set_OracleSettings(OracleSettings value);
    internal bool IsSetOracleSettings();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public PostgreSQLSettings get_PostgreSQLSettings();
    public void set_PostgreSQLSettings(PostgreSQLSettings value);
    internal bool IsSetPostgreSQLSettings();
    public RedisSettings get_RedisSettings();
    public void set_RedisSettings(RedisSettings value);
    internal bool IsSetRedisSettings();
    public RedshiftSettings get_RedshiftSettings();
    public void set_RedshiftSettings(RedshiftSettings value);
    internal bool IsSetRedshiftSettings();
    public S3Settings get_S3Settings();
    public void set_S3Settings(S3Settings value);
    internal bool IsSetS3Settings();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
    public DmsSslModeValue get_SslMode();
    public void set_SslMode(DmsSslModeValue value);
    internal bool IsSetSslMode();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public SybaseSettings get_SybaseSettings();
    public void set_SybaseSettings(SybaseSettings value);
    internal bool IsSetSybaseSettings();
    public TimestreamSettings get_TimestreamSettings();
    public void set_TimestreamSettings(TimestreamSettings value);
    internal bool IsSetTimestreamSettings();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.DatabaseMigrationService.Model.EndpointSetting : object {
    private string _applicability;
    private string _defaultValue;
    private List`1<string> _enumValues;
    private Nullable`1<int> _intValueMax;
    private Nullable`1<int> _intValueMin;
    private string _name;
    private Nullable`1<bool> _sensitive;
    private EndpointSettingTypeValue _type;
    private string _units;
    public string Applicability { get; public set; }
    public string DefaultValue { get; public set; }
    public List`1<string> EnumValues { get; public set; }
    public Nullable`1<int> IntValueMax { get; public set; }
    public Nullable`1<int> IntValueMin { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<bool> Sensitive { get; public set; }
    public EndpointSettingTypeValue Type { get; public set; }
    public string Units { get; public set; }
    public string get_Applicability();
    public void set_Applicability(string value);
    internal bool IsSetApplicability();
    public string get_DefaultValue();
    public void set_DefaultValue(string value);
    internal bool IsSetDefaultValue();
    public List`1<string> get_EnumValues();
    public void set_EnumValues(List`1<string> value);
    internal bool IsSetEnumValues();
    public Nullable`1<int> get_IntValueMax();
    public void set_IntValueMax(Nullable`1<int> value);
    internal bool IsSetIntValueMax();
    public Nullable`1<int> get_IntValueMin();
    public void set_IntValueMin(Nullable`1<int> value);
    internal bool IsSetIntValueMin();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public Nullable`1<bool> get_Sensitive();
    public void set_Sensitive(Nullable`1<bool> value);
    internal bool IsSetSensitive();
    public EndpointSettingTypeValue get_Type();
    public void set_Type(EndpointSettingTypeValue value);
    internal bool IsSetType();
    public string get_Units();
    public void set_Units(string value);
    internal bool IsSetUnits();
}
public class Amazon.DatabaseMigrationService.Model.EngineVersion : object {
    private Nullable`1<DateTime> _autoUpgradeDate;
    private List`1<string> _availableUpgrades;
    private Nullable`1<DateTime> _deprecationDate;
    private Nullable`1<DateTime> _forceUpgradeDate;
    private Nullable`1<DateTime> _launchDate;
    private string _lifecycle;
    private ReleaseStatusValues _releaseStatus;
    private string _version;
    public Nullable`1<DateTime> AutoUpgradeDate { get; public set; }
    public List`1<string> AvailableUpgrades { get; public set; }
    public Nullable`1<DateTime> DeprecationDate { get; public set; }
    public Nullable`1<DateTime> ForceUpgradeDate { get; public set; }
    public Nullable`1<DateTime> LaunchDate { get; public set; }
    public string Lifecycle { get; public set; }
    public ReleaseStatusValues ReleaseStatus { get; public set; }
    public string Version { get; public set; }
    public Nullable`1<DateTime> get_AutoUpgradeDate();
    public void set_AutoUpgradeDate(Nullable`1<DateTime> value);
    internal bool IsSetAutoUpgradeDate();
    public List`1<string> get_AvailableUpgrades();
    public void set_AvailableUpgrades(List`1<string> value);
    internal bool IsSetAvailableUpgrades();
    public Nullable`1<DateTime> get_DeprecationDate();
    public void set_DeprecationDate(Nullable`1<DateTime> value);
    internal bool IsSetDeprecationDate();
    public Nullable`1<DateTime> get_ForceUpgradeDate();
    public void set_ForceUpgradeDate(Nullable`1<DateTime> value);
    internal bool IsSetForceUpgradeDate();
    public Nullable`1<DateTime> get_LaunchDate();
    public void set_LaunchDate(Nullable`1<DateTime> value);
    internal bool IsSetLaunchDate();
    public string get_Lifecycle();
    public void set_Lifecycle(string value);
    internal bool IsSetLifecycle();
    public ReleaseStatusValues get_ReleaseStatus();
    public void set_ReleaseStatus(ReleaseStatusValues value);
    internal bool IsSetReleaseStatus();
    public string get_Version();
    public void set_Version(string value);
    internal bool IsSetVersion();
}
public class Amazon.DatabaseMigrationService.Model.ErrorDetails : object {
    private DefaultErrorDetails _defaultErrorDetails;
    public DefaultErrorDetails DefaultErrorDetails { get; public set; }
    public DefaultErrorDetails get_DefaultErrorDetails();
    public void set_DefaultErrorDetails(DefaultErrorDetails value);
    internal bool IsSetDefaultErrorDetails();
}
public class Amazon.DatabaseMigrationService.Model.EventCategoryGroup : object {
    private List`1<string> _eventCategories;
    private string _sourceType;
    public List`1<string> EventCategories { get; public set; }
    public string SourceType { get; public set; }
    public List`1<string> get_EventCategories();
    public void set_EventCategories(List`1<string> value);
    internal bool IsSetEventCategories();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
}
public class Amazon.DatabaseMigrationService.Model.EventSubscription : object {
    private string _customerAwsId;
    private string _custSubscriptionId;
    private Nullable`1<bool> _enabled;
    private List`1<string> _eventCategoriesList;
    private string _snsTopicArn;
    private List`1<string> _sourceIdsList;
    private string _sourceType;
    private string _status;
    private string _subscriptionCreationTime;
    public string CustomerAwsId { get; public set; }
    public string CustSubscriptionId { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<string> EventCategoriesList { get; public set; }
    public string SnsTopicArn { get; public set; }
    public List`1<string> SourceIdsList { get; public set; }
    public string SourceType { get; public set; }
    public string Status { get; public set; }
    public string SubscriptionCreationTime { get; public set; }
    public string get_CustomerAwsId();
    public void set_CustomerAwsId(string value);
    internal bool IsSetCustomerAwsId();
    public string get_CustSubscriptionId();
    public void set_CustSubscriptionId(string value);
    internal bool IsSetCustSubscriptionId();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<string> get_EventCategoriesList();
    public void set_EventCategoriesList(List`1<string> value);
    internal bool IsSetEventCategoriesList();
    public string get_SnsTopicArn();
    public void set_SnsTopicArn(string value);
    internal bool IsSetSnsTopicArn();
    public List`1<string> get_SourceIdsList();
    public void set_SourceIdsList(List`1<string> value);
    internal bool IsSetSourceIdsList();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_SubscriptionCreationTime();
    public void set_SubscriptionCreationTime(string value);
    internal bool IsSetSubscriptionCreationTime();
}
public class Amazon.DatabaseMigrationService.Model.ExportMetadataModelAssessmentRequest : AmazonDatabaseMigrationServiceRequest {
    private List`1<string> _assessmentReportTypes;
    private string _fileName;
    private string _migrationProjectIdentifier;
    private string _selectionRules;
    [AWSPropertyAttribute]
public List`1<string> AssessmentReportTypes { get; public set; }
    public string FileName { get; public set; }
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string SelectionRules { get; public set; }
    public List`1<string> get_AssessmentReportTypes();
    public void set_AssessmentReportTypes(List`1<string> value);
    internal bool IsSetAssessmentReportTypes();
    public string get_FileName();
    public void set_FileName(string value);
    internal bool IsSetFileName();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
    public string get_SelectionRules();
    public void set_SelectionRules(string value);
    internal bool IsSetSelectionRules();
}
public class Amazon.DatabaseMigrationService.Model.ExportMetadataModelAssessmentResponse : AmazonWebServiceResponse {
    private ExportMetadataModelAssessmentResultEntry _csvReport;
    private ExportMetadataModelAssessmentResultEntry _pdfReport;
    public ExportMetadataModelAssessmentResultEntry CsvReport { get; public set; }
    public ExportMetadataModelAssessmentResultEntry PdfReport { get; public set; }
    public ExportMetadataModelAssessmentResultEntry get_CsvReport();
    public void set_CsvReport(ExportMetadataModelAssessmentResultEntry value);
    internal bool IsSetCsvReport();
    public ExportMetadataModelAssessmentResultEntry get_PdfReport();
    public void set_PdfReport(ExportMetadataModelAssessmentResultEntry value);
    internal bool IsSetPdfReport();
}
public class Amazon.DatabaseMigrationService.Model.ExportMetadataModelAssessmentResultEntry : object {
    private string _objectURL;
    private string _s3ObjectKey;
    public string ObjectURL { get; public set; }
    public string S3ObjectKey { get; public set; }
    public string get_ObjectURL();
    public void set_ObjectURL(string value);
    internal bool IsSetObjectURL();
    public string get_S3ObjectKey();
    public void set_S3ObjectKey(string value);
    internal bool IsSetS3ObjectKey();
}
public class Amazon.DatabaseMigrationService.Model.ExportSqlDetails : object {
    private string _objectURL;
    private string _s3ObjectKey;
    public string ObjectURL { get; public set; }
    public string S3ObjectKey { get; public set; }
    public string get_ObjectURL();
    public void set_ObjectURL(string value);
    internal bool IsSetObjectURL();
    public string get_S3ObjectKey();
    public void set_S3ObjectKey(string value);
    internal bool IsSetS3ObjectKey();
}
public class Amazon.DatabaseMigrationService.Model.Filter : object {
    private string _name;
    private List`1<string> _values;
    [AWSPropertyAttribute]
public string Name { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> Values { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public List`1<string> get_Values();
    public void set_Values(List`1<string> value);
    internal bool IsSetValues();
}
public class Amazon.DatabaseMigrationService.Model.FleetAdvisorLsaAnalysisResponse : object {
    private string _lsaAnalysisId;
    private string _status;
    public string LsaAnalysisId { get; public set; }
    public string Status { get; public set; }
    public string get_LsaAnalysisId();
    public void set_LsaAnalysisId(string value);
    internal bool IsSetLsaAnalysisId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.DatabaseMigrationService.Model.FleetAdvisorSchemaObjectResponse : object {
    private Nullable`1<long> _codeLineCount;
    private Nullable`1<long> _codeSize;
    private Nullable`1<long> _numberOfObjects;
    private string _objectType;
    private string _schemaId;
    public Nullable`1<long> CodeLineCount { get; public set; }
    public Nullable`1<long> CodeSize { get; public set; }
    public Nullable`1<long> NumberOfObjects { get; public set; }
    public string ObjectType { get; public set; }
    public string SchemaId { get; public set; }
    public Nullable`1<long> get_CodeLineCount();
    public void set_CodeLineCount(Nullable`1<long> value);
    internal bool IsSetCodeLineCount();
    public Nullable`1<long> get_CodeSize();
    public void set_CodeSize(Nullable`1<long> value);
    internal bool IsSetCodeSize();
    public Nullable`1<long> get_NumberOfObjects();
    public void set_NumberOfObjects(Nullable`1<long> value);
    internal bool IsSetNumberOfObjects();
    public string get_ObjectType();
    public void set_ObjectType(string value);
    internal bool IsSetObjectType();
    public string get_SchemaId();
    public void set_SchemaId(string value);
    internal bool IsSetSchemaId();
}
public class Amazon.DatabaseMigrationService.Model.GcpMySQLSettings : object {
    private string _afterConnectScript;
    private Nullable`1<bool> _cleanSourceMetadataOnMismatch;
    private string _databaseName;
    private Nullable`1<int> _eventsPollInterval;
    private Nullable`1<int> _maxFileSize;
    private Nullable`1<int> _parallelLoadThreads;
    private string _password;
    private Nullable`1<int> _port;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    private string _serverName;
    private string _serverTimezone;
    private TargetDbType _targetDbType;
    private string _username;
    public string AfterConnectScript { get; public set; }
    public Nullable`1<bool> CleanSourceMetadataOnMismatch { get; public set; }
    public string DatabaseName { get; public set; }
    public Nullable`1<int> EventsPollInterval { get; public set; }
    public Nullable`1<int> MaxFileSize { get; public set; }
    public Nullable`1<int> ParallelLoadThreads { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string ServerName { get; public set; }
    public string ServerTimezone { get; public set; }
    public TargetDbType TargetDbType { get; public set; }
    public string Username { get; public set; }
    public string get_AfterConnectScript();
    public void set_AfterConnectScript(string value);
    internal bool IsSetAfterConnectScript();
    public Nullable`1<bool> get_CleanSourceMetadataOnMismatch();
    public void set_CleanSourceMetadataOnMismatch(Nullable`1<bool> value);
    internal bool IsSetCleanSourceMetadataOnMismatch();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_EventsPollInterval();
    public void set_EventsPollInterval(Nullable`1<int> value);
    internal bool IsSetEventsPollInterval();
    public Nullable`1<int> get_MaxFileSize();
    public void set_MaxFileSize(Nullable`1<int> value);
    internal bool IsSetMaxFileSize();
    public Nullable`1<int> get_ParallelLoadThreads();
    public void set_ParallelLoadThreads(Nullable`1<int> value);
    internal bool IsSetParallelLoadThreads();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_ServerTimezone();
    public void set_ServerTimezone(string value);
    internal bool IsSetServerTimezone();
    public TargetDbType get_TargetDbType();
    public void set_TargetDbType(TargetDbType value);
    internal bool IsSetTargetDbType();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.DatabaseMigrationService.Model.IBMDb2Settings : object {
    private string _currentLsn;
    private string _databaseName;
    private Nullable`1<bool> _keepCsvFiles;
    private Nullable`1<int> _loadTimeout;
    private Nullable`1<int> _maxFileSize;
    private Nullable`1<int> _maxKBytesPerRead;
    private string _password;
    private Nullable`1<int> _port;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    private string _serverName;
    private Nullable`1<bool> _setDataCaptureChanges;
    private string _username;
    private Nullable`1<int> _writeBufferSize;
    public string CurrentLsn { get; public set; }
    public string DatabaseName { get; public set; }
    public Nullable`1<bool> KeepCsvFiles { get; public set; }
    public Nullable`1<int> LoadTimeout { get; public set; }
    public Nullable`1<int> MaxFileSize { get; public set; }
    public Nullable`1<int> MaxKBytesPerRead { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string ServerName { get; public set; }
    public Nullable`1<bool> SetDataCaptureChanges { get; public set; }
    public string Username { get; public set; }
    public Nullable`1<int> WriteBufferSize { get; public set; }
    public string get_CurrentLsn();
    public void set_CurrentLsn(string value);
    internal bool IsSetCurrentLsn();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<bool> get_KeepCsvFiles();
    public void set_KeepCsvFiles(Nullable`1<bool> value);
    internal bool IsSetKeepCsvFiles();
    public Nullable`1<int> get_LoadTimeout();
    public void set_LoadTimeout(Nullable`1<int> value);
    internal bool IsSetLoadTimeout();
    public Nullable`1<int> get_MaxFileSize();
    public void set_MaxFileSize(Nullable`1<int> value);
    internal bool IsSetMaxFileSize();
    public Nullable`1<int> get_MaxKBytesPerRead();
    public void set_MaxKBytesPerRead(Nullable`1<int> value);
    internal bool IsSetMaxKBytesPerRead();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public Nullable`1<bool> get_SetDataCaptureChanges();
    public void set_SetDataCaptureChanges(Nullable`1<bool> value);
    internal bool IsSetSetDataCaptureChanges();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public Nullable`1<int> get_WriteBufferSize();
    public void set_WriteBufferSize(Nullable`1<int> value);
    internal bool IsSetWriteBufferSize();
}
public interface Amazon.DatabaseMigrationService.Model.IDatabaseMigrationServicePaginatorFactory {
    public abstract virtual IDescribeApplicableIndividualAssessmentsPaginator DescribeApplicableIndividualAssessments(DescribeApplicableIndividualAssessmentsRequest request);
    public abstract virtual IDescribeCertificatesPaginator DescribeCertificates(DescribeCertificatesRequest request);
    public abstract virtual IDescribeConnectionsPaginator DescribeConnections(DescribeConnectionsRequest request);
    public abstract virtual IDescribeDataProvidersPaginator DescribeDataProviders(DescribeDataProvidersRequest request);
    public abstract virtual IDescribeEndpointsPaginator DescribeEndpoints(DescribeEndpointsRequest request);
    public abstract virtual IDescribeEndpointSettingsPaginator DescribeEndpointSettings(DescribeEndpointSettingsRequest request);
    public abstract virtual IDescribeEndpointTypesPaginator DescribeEndpointTypes(DescribeEndpointTypesRequest request);
    public abstract virtual IDescribeEngineVersionsPaginator DescribeEngineVersions(DescribeEngineVersionsRequest request);
    public abstract virtual IDescribeEventsPaginator DescribeEvents(DescribeEventsRequest request);
    public abstract virtual IDescribeEventSubscriptionsPaginator DescribeEventSubscriptions(DescribeEventSubscriptionsRequest request);
    public abstract virtual IDescribeExtensionPackAssociationsPaginator DescribeExtensionPackAssociations(DescribeExtensionPackAssociationsRequest request);
    public abstract virtual IDescribeFleetAdvisorCollectorsPaginator DescribeFleetAdvisorCollectors(DescribeFleetAdvisorCollectorsRequest request);
    public abstract virtual IDescribeFleetAdvisorDatabasesPaginator DescribeFleetAdvisorDatabases(DescribeFleetAdvisorDatabasesRequest request);
    public abstract virtual IDescribeFleetAdvisorLsaAnalysisPaginator DescribeFleetAdvisorLsaAnalysis(DescribeFleetAdvisorLsaAnalysisRequest request);
    public abstract virtual IDescribeFleetAdvisorSchemaObjectSummaryPaginator DescribeFleetAdvisorSchemaObjectSummary(DescribeFleetAdvisorSchemaObjectSummaryRequest request);
    public abstract virtual IDescribeFleetAdvisorSchemasPaginator DescribeFleetAdvisorSchemas(DescribeFleetAdvisorSchemasRequest request);
    public abstract virtual IDescribeInstanceProfilesPaginator DescribeInstanceProfiles(DescribeInstanceProfilesRequest request);
    public abstract virtual IDescribeMetadataModelAssessmentsPaginator DescribeMetadataModelAssessments(DescribeMetadataModelAssessmentsRequest request);
    public abstract virtual IDescribeMetadataModelConversionsPaginator DescribeMetadataModelConversions(DescribeMetadataModelConversionsRequest request);
    public abstract virtual IDescribeMetadataModelExportsAsScriptPaginator DescribeMetadataModelExportsAsScript(DescribeMetadataModelExportsAsScriptRequest request);
    public abstract virtual IDescribeMetadataModelExportsToTargetPaginator DescribeMetadataModelExportsToTarget(DescribeMetadataModelExportsToTargetRequest request);
    public abstract virtual IDescribeMetadataModelImportsPaginator DescribeMetadataModelImports(DescribeMetadataModelImportsRequest request);
    public abstract virtual IDescribeMigrationProjectsPaginator DescribeMigrationProjects(DescribeMigrationProjectsRequest request);
    public abstract virtual IDescribeOrderableReplicationInstancesPaginator DescribeOrderableReplicationInstances(DescribeOrderableReplicationInstancesRequest request);
    public abstract virtual IDescribePendingMaintenanceActionsPaginator DescribePendingMaintenanceActions(DescribePendingMaintenanceActionsRequest request);
    public abstract virtual IDescribeRecommendationLimitationsPaginator DescribeRecommendationLimitations(DescribeRecommendationLimitationsRequest request);
    public abstract virtual IDescribeRecommendationsPaginator DescribeRecommendations(DescribeRecommendationsRequest request);
    public abstract virtual IDescribeReplicationConfigsPaginator DescribeReplicationConfigs(DescribeReplicationConfigsRequest request);
    public abstract virtual IDescribeReplicationInstancesPaginator DescribeReplicationInstances(DescribeReplicationInstancesRequest request);
    public abstract virtual IDescribeReplicationInstanceTaskLogsPaginator DescribeReplicationInstanceTaskLogs(DescribeReplicationInstanceTaskLogsRequest request);
    public abstract virtual IDescribeReplicationsPaginator DescribeReplications(DescribeReplicationsRequest request);
    public abstract virtual IDescribeReplicationSubnetGroupsPaginator DescribeReplicationSubnetGroups(DescribeReplicationSubnetGroupsRequest request);
    public abstract virtual IDescribeReplicationTableStatisticsPaginator DescribeReplicationTableStatistics(DescribeReplicationTableStatisticsRequest request);
    public abstract virtual IDescribeReplicationTaskAssessmentResultsPaginator DescribeReplicationTaskAssessmentResults(DescribeReplicationTaskAssessmentResultsRequest request);
    public abstract virtual IDescribeReplicationTaskAssessmentRunsPaginator DescribeReplicationTaskAssessmentRuns(DescribeReplicationTaskAssessmentRunsRequest request);
    public abstract virtual IDescribeReplicationTaskIndividualAssessmentsPaginator DescribeReplicationTaskIndividualAssessments(DescribeReplicationTaskIndividualAssessmentsRequest request);
    public abstract virtual IDescribeReplicationTasksPaginator DescribeReplicationTasks(DescribeReplicationTasksRequest request);
    public abstract virtual IDescribeSchemasPaginator DescribeSchemas(DescribeSchemasRequest request);
    public abstract virtual IDescribeTableStatisticsPaginator DescribeTableStatistics(DescribeTableStatisticsRequest request);
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeApplicableIndividualAssessmentsPaginator {
    public IPaginatedEnumerable`1<DescribeApplicableIndividualAssessmentsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeApplicableIndividualAssessmentsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeCertificatesPaginator {
    public IPaginatedEnumerable`1<DescribeCertificatesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeCertificatesResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeConnectionsPaginator {
    public IPaginatedEnumerable`1<DescribeConnectionsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeConnectionsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeDataProvidersPaginator {
    public IPaginatedEnumerable`1<DescribeDataProvidersResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeDataProvidersResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeEndpointSettingsPaginator {
    public IPaginatedEnumerable`1<DescribeEndpointSettingsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEndpointSettingsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeEndpointsPaginator {
    public IPaginatedEnumerable`1<DescribeEndpointsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEndpointsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeEndpointTypesPaginator {
    public IPaginatedEnumerable`1<DescribeEndpointTypesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEndpointTypesResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeEngineVersionsPaginator {
    public IPaginatedEnumerable`1<DescribeEngineVersionsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEngineVersionsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeEventsPaginator {
    public IPaginatedEnumerable`1<DescribeEventsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEventsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeEventSubscriptionsPaginator {
    public IPaginatedEnumerable`1<DescribeEventSubscriptionsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeEventSubscriptionsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeExtensionPackAssociationsPaginator {
    public IPaginatedEnumerable`1<DescribeExtensionPackAssociationsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeExtensionPackAssociationsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeFleetAdvisorCollectorsPaginator {
    public IPaginatedEnumerable`1<DescribeFleetAdvisorCollectorsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFleetAdvisorCollectorsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeFleetAdvisorDatabasesPaginator {
    public IPaginatedEnumerable`1<DescribeFleetAdvisorDatabasesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFleetAdvisorDatabasesResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeFleetAdvisorLsaAnalysisPaginator {
    public IPaginatedEnumerable`1<DescribeFleetAdvisorLsaAnalysisResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFleetAdvisorLsaAnalysisResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeFleetAdvisorSchemaObjectSummaryPaginator {
    public IPaginatedEnumerable`1<DescribeFleetAdvisorSchemaObjectSummaryResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFleetAdvisorSchemaObjectSummaryResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeFleetAdvisorSchemasPaginator {
    public IPaginatedEnumerable`1<DescribeFleetAdvisorSchemasResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeFleetAdvisorSchemasResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeInstanceProfilesPaginator {
    public IPaginatedEnumerable`1<DescribeInstanceProfilesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeInstanceProfilesResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeMetadataModelAssessmentsPaginator {
    public IPaginatedEnumerable`1<DescribeMetadataModelAssessmentsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMetadataModelAssessmentsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeMetadataModelConversionsPaginator {
    public IPaginatedEnumerable`1<DescribeMetadataModelConversionsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMetadataModelConversionsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeMetadataModelExportsAsScriptPaginator {
    public IPaginatedEnumerable`1<DescribeMetadataModelExportsAsScriptResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMetadataModelExportsAsScriptResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeMetadataModelExportsToTargetPaginator {
    public IPaginatedEnumerable`1<DescribeMetadataModelExportsToTargetResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMetadataModelExportsToTargetResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeMetadataModelImportsPaginator {
    public IPaginatedEnumerable`1<DescribeMetadataModelImportsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMetadataModelImportsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeMigrationProjectsPaginator {
    public IPaginatedEnumerable`1<DescribeMigrationProjectsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeMigrationProjectsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeOrderableReplicationInstancesPaginator {
    public IPaginatedEnumerable`1<DescribeOrderableReplicationInstancesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeOrderableReplicationInstancesResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribePendingMaintenanceActionsPaginator {
    public IPaginatedEnumerable`1<DescribePendingMaintenanceActionsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribePendingMaintenanceActionsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeRecommendationLimitationsPaginator {
    public IPaginatedEnumerable`1<DescribeRecommendationLimitationsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeRecommendationLimitationsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeRecommendationsPaginator {
    public IPaginatedEnumerable`1<DescribeRecommendationsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeRecommendationsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeReplicationConfigsPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationConfigsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationConfigsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeReplicationInstancesPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationInstancesResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationInstancesResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeReplicationInstanceTaskLogsPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationInstanceTaskLogsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationInstanceTaskLogsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeReplicationsPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeReplicationSubnetGroupsPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationSubnetGroupsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationSubnetGroupsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeReplicationTableStatisticsPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationTableStatisticsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationTableStatisticsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeReplicationTaskAssessmentResultsPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationTaskAssessmentResultsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationTaskAssessmentResultsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeReplicationTaskAssessmentRunsPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationTaskAssessmentRunsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationTaskAssessmentRunsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeReplicationTaskIndividualAssessmentsPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationTaskIndividualAssessmentsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationTaskIndividualAssessmentsResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeReplicationTasksPaginator {
    public IPaginatedEnumerable`1<DescribeReplicationTasksResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeReplicationTasksResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeSchemasPaginator {
    public IPaginatedEnumerable`1<DescribeSchemasResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeSchemasResponse> get_Responses();
}
public interface Amazon.DatabaseMigrationService.Model.IDescribeTableStatisticsPaginator {
    public IPaginatedEnumerable`1<DescribeTableStatisticsResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<DescribeTableStatisticsResponse> get_Responses();
}
public class Amazon.DatabaseMigrationService.Model.ImportCertificateRequest : AmazonDatabaseMigrationServiceRequest {
    private string _certificateIdentifier;
    private string _certificatePem;
    private MemoryStream _certificateWallet;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string CertificateIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string CertificatePem { get; public set; }
    public MemoryStream CertificateWallet { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_CertificateIdentifier();
    public void set_CertificateIdentifier(string value);
    internal bool IsSetCertificateIdentifier();
    public string get_CertificatePem();
    public void set_CertificatePem(string value);
    internal bool IsSetCertificatePem();
    public MemoryStream get_CertificateWallet();
    public void set_CertificateWallet(MemoryStream value);
    internal bool IsSetCertificateWallet();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.DatabaseMigrationService.Model.ImportCertificateResponse : AmazonWebServiceResponse {
    private Certificate _certificate;
    public Certificate Certificate { get; public set; }
    public Certificate get_Certificate();
    public void set_Certificate(Certificate value);
    internal bool IsSetCertificate();
}
public class Amazon.DatabaseMigrationService.Model.InstanceProfile : object {
    private string _availabilityZone;
    private string _description;
    private string _instanceProfileArn;
    private Nullable`1<DateTime> _instanceProfileCreationTime;
    private string _instanceProfileName;
    private string _kmsKeyArn;
    private string _networkType;
    private Nullable`1<bool> _publiclyAccessible;
    private string _subnetGroupIdentifier;
    private List`1<string> _vpcSecurityGroups;
    public string AvailabilityZone { get; public set; }
    public string Description { get; public set; }
    public string InstanceProfileArn { get; public set; }
    public Nullable`1<DateTime> InstanceProfileCreationTime { get; public set; }
    public string InstanceProfileName { get; public set; }
    public string KmsKeyArn { get; public set; }
    public string NetworkType { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public string SubnetGroupIdentifier { get; public set; }
    public List`1<string> VpcSecurityGroups { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceProfileArn();
    public void set_InstanceProfileArn(string value);
    internal bool IsSetInstanceProfileArn();
    public Nullable`1<DateTime> get_InstanceProfileCreationTime();
    public void set_InstanceProfileCreationTime(Nullable`1<DateTime> value);
    internal bool IsSetInstanceProfileCreationTime();
    public string get_InstanceProfileName();
    public void set_InstanceProfileName(string value);
    internal bool IsSetInstanceProfileName();
    public string get_KmsKeyArn();
    public void set_KmsKeyArn(string value);
    internal bool IsSetKmsKeyArn();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_SubnetGroupIdentifier();
    public void set_SubnetGroupIdentifier(string value);
    internal bool IsSetSubnetGroupIdentifier();
    public List`1<string> get_VpcSecurityGroups();
    public void set_VpcSecurityGroups(List`1<string> value);
    internal bool IsSetVpcSecurityGroups();
}
public class Amazon.DatabaseMigrationService.Model.InsufficientResourceCapacityException : AmazonDatabaseMigrationServiceException {
    public InsufficientResourceCapacityException(string message);
    public InsufficientResourceCapacityException(string message, Exception innerException);
    public InsufficientResourceCapacityException(Exception innerException);
    public InsufficientResourceCapacityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientResourceCapacityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller : object {
    private static AccessDeniedExceptionUnmarshaller _instance;
    public static AccessDeniedExceptionUnmarshaller Instance { get; }
    private static AccessDeniedExceptionUnmarshaller();
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.AccountQuotaUnmarshaller : object {
    private static AccountQuotaUnmarshaller _instance;
    public static AccountQuotaUnmarshaller Instance { get; }
    private static AccountQuotaUnmarshaller();
    private sealed virtual override AccountQuota Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.AccountQuota,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AccountQuota Unmarshall(JsonUnmarshallerContext context);
    public static AccountQuotaUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller : object {
    private static AddTagsToResourceRequestMarshaller _instance;
    public static AddTagsToResourceRequestMarshaller Instance { get; }
    private static AddTagsToResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTagsToResourceRequest publicRequest);
    internal static AddTagsToResourceRequestMarshaller GetInstance();
    public static AddTagsToResourceRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddTagsToResourceResponseUnmarshaller _instance;
    public static AddTagsToResourceResponseUnmarshaller Instance { get; }
    private static AddTagsToResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTagsToResourceResponseUnmarshaller GetInstance();
    public static AddTagsToResourceResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionRequestMarshaller : object {
    private static ApplyPendingMaintenanceActionRequestMarshaller _instance;
    public static ApplyPendingMaintenanceActionRequestMarshaller Instance { get; }
    private static ApplyPendingMaintenanceActionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ApplyPendingMaintenanceActionRequest publicRequest);
    internal static ApplyPendingMaintenanceActionRequestMarshaller GetInstance();
    public static ApplyPendingMaintenanceActionRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ApplyPendingMaintenanceActionResponseUnmarshaller _instance;
    public static ApplyPendingMaintenanceActionResponseUnmarshaller Instance { get; }
    private static ApplyPendingMaintenanceActionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ApplyPendingMaintenanceActionResponseUnmarshaller GetInstance();
    public static ApplyPendingMaintenanceActionResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller : object {
    private static AvailabilityZoneUnmarshaller _instance;
    public static AvailabilityZoneUnmarshaller Instance { get; }
    private static AvailabilityZoneUnmarshaller();
    private sealed virtual override AvailabilityZone Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.AvailabilityZone,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AvailabilityZone Unmarshall(JsonUnmarshallerContext context);
    public static AvailabilityZoneUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.BatchStartRecommendationsErrorEntryUnmarshaller : object {
    private static BatchStartRecommendationsErrorEntryUnmarshaller _instance;
    public static BatchStartRecommendationsErrorEntryUnmarshaller Instance { get; }
    private static BatchStartRecommendationsErrorEntryUnmarshaller();
    private sealed virtual override BatchStartRecommendationsErrorEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.BatchStartRecommendationsErrorEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchStartRecommendationsErrorEntry Unmarshall(JsonUnmarshallerContext context);
    public static BatchStartRecommendationsErrorEntryUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.BatchStartRecommendationsRequestMarshaller : object {
    private static BatchStartRecommendationsRequestMarshaller _instance;
    public static BatchStartRecommendationsRequestMarshaller Instance { get; }
    private static BatchStartRecommendationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchStartRecommendationsRequest publicRequest);
    internal static BatchStartRecommendationsRequestMarshaller GetInstance();
    public static BatchStartRecommendationsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.BatchStartRecommendationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchStartRecommendationsResponseUnmarshaller _instance;
    public static BatchStartRecommendationsResponseUnmarshaller Instance { get; }
    private static BatchStartRecommendationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchStartRecommendationsResponseUnmarshaller GetInstance();
    public static BatchStartRecommendationsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CancelReplicationTaskAssessmentRunRequestMarshaller : object {
    private static CancelReplicationTaskAssessmentRunRequestMarshaller _instance;
    public static CancelReplicationTaskAssessmentRunRequestMarshaller Instance { get; }
    private static CancelReplicationTaskAssessmentRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CancelReplicationTaskAssessmentRunRequest publicRequest);
    internal static CancelReplicationTaskAssessmentRunRequestMarshaller GetInstance();
    public static CancelReplicationTaskAssessmentRunRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CancelReplicationTaskAssessmentRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CancelReplicationTaskAssessmentRunResponseUnmarshaller _instance;
    public static CancelReplicationTaskAssessmentRunResponseUnmarshaller Instance { get; }
    private static CancelReplicationTaskAssessmentRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CancelReplicationTaskAssessmentRunResponseUnmarshaller GetInstance();
    public static CancelReplicationTaskAssessmentRunResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CertificateUnmarshaller : object {
    private static CertificateUnmarshaller _instance;
    public static CertificateUnmarshaller Instance { get; }
    private static CertificateUnmarshaller();
    private sealed virtual override Certificate Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.Certificate,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Certificate Unmarshall(JsonUnmarshallerContext context);
    public static CertificateUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CollectorHealthCheckUnmarshaller : object {
    private static CollectorHealthCheckUnmarshaller _instance;
    public static CollectorHealthCheckUnmarshaller Instance { get; }
    private static CollectorHealthCheckUnmarshaller();
    private sealed virtual override CollectorHealthCheck Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.CollectorHealthCheck,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CollectorHealthCheck Unmarshall(JsonUnmarshallerContext context);
    public static CollectorHealthCheckUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CollectorNotFoundExceptionUnmarshaller : object {
    private static CollectorNotFoundExceptionUnmarshaller _instance;
    public static CollectorNotFoundExceptionUnmarshaller Instance { get; }
    private static CollectorNotFoundExceptionUnmarshaller();
    public sealed virtual CollectorNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual CollectorNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static CollectorNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CollectorResponseUnmarshaller : object {
    private static CollectorResponseUnmarshaller _instance;
    public static CollectorResponseUnmarshaller Instance { get; }
    private static CollectorResponseUnmarshaller();
    private sealed virtual override CollectorResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.CollectorResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CollectorResponse Unmarshall(JsonUnmarshallerContext context);
    public static CollectorResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CollectorShortInfoResponseUnmarshaller : object {
    private static CollectorShortInfoResponseUnmarshaller _instance;
    public static CollectorShortInfoResponseUnmarshaller Instance { get; }
    private static CollectorShortInfoResponseUnmarshaller();
    private sealed virtual override CollectorShortInfoResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.CollectorShortInfoResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CollectorShortInfoResponse Unmarshall(JsonUnmarshallerContext context);
    public static CollectorShortInfoResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ComputeConfigMarshaller : object {
    public static ComputeConfigMarshaller Instance;
    private static ComputeConfigMarshaller();
    public sealed virtual void Marshall(ComputeConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ComputeConfigUnmarshaller : object {
    private static ComputeConfigUnmarshaller _instance;
    public static ComputeConfigUnmarshaller Instance { get; }
    private static ComputeConfigUnmarshaller();
    private sealed virtual override ComputeConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ComputeConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ComputeConfig Unmarshall(JsonUnmarshallerContext context);
    public static ComputeConfigUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ConnectionUnmarshaller : object {
    private static ConnectionUnmarshaller _instance;
    public static ConnectionUnmarshaller Instance { get; }
    private static ConnectionUnmarshaller();
    private sealed virtual override Connection Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.Connection,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Connection Unmarshall(JsonUnmarshallerContext context);
    public static ConnectionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateDataProviderRequestMarshaller : object {
    private static CreateDataProviderRequestMarshaller _instance;
    public static CreateDataProviderRequestMarshaller Instance { get; }
    private static CreateDataProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateDataProviderRequest publicRequest);
    internal static CreateDataProviderRequestMarshaller GetInstance();
    public static CreateDataProviderRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateDataProviderResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateDataProviderResponseUnmarshaller _instance;
    public static CreateDataProviderResponseUnmarshaller Instance { get; }
    private static CreateDataProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateDataProviderResponseUnmarshaller GetInstance();
    public static CreateDataProviderResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateEndpointRequestMarshaller : object {
    private static CreateEndpointRequestMarshaller _instance;
    public static CreateEndpointRequestMarshaller Instance { get; }
    private static CreateEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateEndpointRequest publicRequest);
    internal static CreateEndpointRequestMarshaller GetInstance();
    public static CreateEndpointRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateEndpointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateEndpointResponseUnmarshaller _instance;
    public static CreateEndpointResponseUnmarshaller Instance { get; }
    private static CreateEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateEndpointResponseUnmarshaller GetInstance();
    public static CreateEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateEventSubscriptionRequestMarshaller : object {
    private static CreateEventSubscriptionRequestMarshaller _instance;
    public static CreateEventSubscriptionRequestMarshaller Instance { get; }
    private static CreateEventSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateEventSubscriptionRequest publicRequest);
    internal static CreateEventSubscriptionRequestMarshaller GetInstance();
    public static CreateEventSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateEventSubscriptionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateEventSubscriptionResponseUnmarshaller _instance;
    public static CreateEventSubscriptionResponseUnmarshaller Instance { get; }
    private static CreateEventSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateEventSubscriptionResponseUnmarshaller GetInstance();
    public static CreateEventSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateFleetAdvisorCollectorRequestMarshaller : object {
    private static CreateFleetAdvisorCollectorRequestMarshaller _instance;
    public static CreateFleetAdvisorCollectorRequestMarshaller Instance { get; }
    private static CreateFleetAdvisorCollectorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateFleetAdvisorCollectorRequest publicRequest);
    internal static CreateFleetAdvisorCollectorRequestMarshaller GetInstance();
    public static CreateFleetAdvisorCollectorRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateFleetAdvisorCollectorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateFleetAdvisorCollectorResponseUnmarshaller _instance;
    public static CreateFleetAdvisorCollectorResponseUnmarshaller Instance { get; }
    private static CreateFleetAdvisorCollectorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateFleetAdvisorCollectorResponseUnmarshaller GetInstance();
    public static CreateFleetAdvisorCollectorResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateInstanceProfileRequestMarshaller : object {
    private static CreateInstanceProfileRequestMarshaller _instance;
    public static CreateInstanceProfileRequestMarshaller Instance { get; }
    private static CreateInstanceProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateInstanceProfileRequest publicRequest);
    internal static CreateInstanceProfileRequestMarshaller GetInstance();
    public static CreateInstanceProfileRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateInstanceProfileResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateInstanceProfileResponseUnmarshaller _instance;
    public static CreateInstanceProfileResponseUnmarshaller Instance { get; }
    private static CreateInstanceProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateInstanceProfileResponseUnmarshaller GetInstance();
    public static CreateInstanceProfileResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateMigrationProjectRequestMarshaller : object {
    private static CreateMigrationProjectRequestMarshaller _instance;
    public static CreateMigrationProjectRequestMarshaller Instance { get; }
    private static CreateMigrationProjectRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateMigrationProjectRequest publicRequest);
    internal static CreateMigrationProjectRequestMarshaller GetInstance();
    public static CreateMigrationProjectRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateMigrationProjectResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateMigrationProjectResponseUnmarshaller _instance;
    public static CreateMigrationProjectResponseUnmarshaller Instance { get; }
    private static CreateMigrationProjectResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateMigrationProjectResponseUnmarshaller GetInstance();
    public static CreateMigrationProjectResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateReplicationConfigRequestMarshaller : object {
    private static CreateReplicationConfigRequestMarshaller _instance;
    public static CreateReplicationConfigRequestMarshaller Instance { get; }
    private static CreateReplicationConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReplicationConfigRequest publicRequest);
    internal static CreateReplicationConfigRequestMarshaller GetInstance();
    public static CreateReplicationConfigRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateReplicationConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateReplicationConfigResponseUnmarshaller _instance;
    public static CreateReplicationConfigResponseUnmarshaller Instance { get; }
    private static CreateReplicationConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReplicationConfigResponseUnmarshaller GetInstance();
    public static CreateReplicationConfigResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateReplicationInstanceRequestMarshaller : object {
    private static CreateReplicationInstanceRequestMarshaller _instance;
    public static CreateReplicationInstanceRequestMarshaller Instance { get; }
    private static CreateReplicationInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReplicationInstanceRequest publicRequest);
    internal static CreateReplicationInstanceRequestMarshaller GetInstance();
    public static CreateReplicationInstanceRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateReplicationInstanceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateReplicationInstanceResponseUnmarshaller _instance;
    public static CreateReplicationInstanceResponseUnmarshaller Instance { get; }
    private static CreateReplicationInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReplicationInstanceResponseUnmarshaller GetInstance();
    public static CreateReplicationInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateReplicationSubnetGroupRequestMarshaller : object {
    private static CreateReplicationSubnetGroupRequestMarshaller _instance;
    public static CreateReplicationSubnetGroupRequestMarshaller Instance { get; }
    private static CreateReplicationSubnetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReplicationSubnetGroupRequest publicRequest);
    internal static CreateReplicationSubnetGroupRequestMarshaller GetInstance();
    public static CreateReplicationSubnetGroupRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateReplicationSubnetGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateReplicationSubnetGroupResponseUnmarshaller _instance;
    public static CreateReplicationSubnetGroupResponseUnmarshaller Instance { get; }
    private static CreateReplicationSubnetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReplicationSubnetGroupResponseUnmarshaller GetInstance();
    public static CreateReplicationSubnetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateReplicationTaskRequestMarshaller : object {
    private static CreateReplicationTaskRequestMarshaller _instance;
    public static CreateReplicationTaskRequestMarshaller Instance { get; }
    private static CreateReplicationTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateReplicationTaskRequest publicRequest);
    internal static CreateReplicationTaskRequestMarshaller GetInstance();
    public static CreateReplicationTaskRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.CreateReplicationTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateReplicationTaskResponseUnmarshaller _instance;
    public static CreateReplicationTaskResponseUnmarshaller Instance { get; }
    private static CreateReplicationTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateReplicationTaskResponseUnmarshaller GetInstance();
    public static CreateReplicationTaskResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DatabaseInstanceSoftwareDetailsResponseUnmarshaller : object {
    private static DatabaseInstanceSoftwareDetailsResponseUnmarshaller _instance;
    public static DatabaseInstanceSoftwareDetailsResponseUnmarshaller Instance { get; }
    private static DatabaseInstanceSoftwareDetailsResponseUnmarshaller();
    private sealed virtual override DatabaseInstanceSoftwareDetailsResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DatabaseInstanceSoftwareDetailsResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DatabaseInstanceSoftwareDetailsResponse Unmarshall(JsonUnmarshallerContext context);
    public static DatabaseInstanceSoftwareDetailsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DatabaseResponseUnmarshaller : object {
    private static DatabaseResponseUnmarshaller _instance;
    public static DatabaseResponseUnmarshaller Instance { get; }
    private static DatabaseResponseUnmarshaller();
    private sealed virtual override DatabaseResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DatabaseResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DatabaseResponse Unmarshall(JsonUnmarshallerContext context);
    public static DatabaseResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DatabaseShortInfoResponseUnmarshaller : object {
    private static DatabaseShortInfoResponseUnmarshaller _instance;
    public static DatabaseShortInfoResponseUnmarshaller Instance { get; }
    private static DatabaseShortInfoResponseUnmarshaller();
    private sealed virtual override DatabaseShortInfoResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DatabaseShortInfoResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DatabaseShortInfoResponse Unmarshall(JsonUnmarshallerContext context);
    public static DatabaseShortInfoResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DataProviderDescriptorDefinitionMarshaller : object {
    public static DataProviderDescriptorDefinitionMarshaller Instance;
    private static DataProviderDescriptorDefinitionMarshaller();
    public sealed virtual void Marshall(DataProviderDescriptorDefinition requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DataProviderDescriptorUnmarshaller : object {
    private static DataProviderDescriptorUnmarshaller _instance;
    public static DataProviderDescriptorUnmarshaller Instance { get; }
    private static DataProviderDescriptorUnmarshaller();
    private sealed virtual override DataProviderDescriptor Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DataProviderDescriptor,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataProviderDescriptor Unmarshall(JsonUnmarshallerContext context);
    public static DataProviderDescriptorUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DataProviderSettingsMarshaller : object {
    public static DataProviderSettingsMarshaller Instance;
    private static DataProviderSettingsMarshaller();
    public sealed virtual void Marshall(DataProviderSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DataProviderSettingsUnmarshaller : object {
    private static DataProviderSettingsUnmarshaller _instance;
    public static DataProviderSettingsUnmarshaller Instance { get; }
    private static DataProviderSettingsUnmarshaller();
    private sealed virtual override DataProviderSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DataProviderSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataProviderSettings Unmarshall(JsonUnmarshallerContext context);
    public static DataProviderSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DataProviderUnmarshaller : object {
    private static DataProviderUnmarshaller _instance;
    public static DataProviderUnmarshaller Instance { get; }
    private static DataProviderUnmarshaller();
    private sealed virtual override DataProvider Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DataProvider,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataProvider Unmarshall(JsonUnmarshallerContext context);
    public static DataProviderUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DefaultErrorDetailsUnmarshaller : object {
    private static DefaultErrorDetailsUnmarshaller _instance;
    public static DefaultErrorDetailsUnmarshaller Instance { get; }
    private static DefaultErrorDetailsUnmarshaller();
    private sealed virtual override DefaultErrorDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DefaultErrorDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DefaultErrorDetails Unmarshall(JsonUnmarshallerContext context);
    public static DefaultErrorDetailsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller : object {
    private static DeleteCertificateRequestMarshaller _instance;
    public static DeleteCertificateRequestMarshaller Instance { get; }
    private static DeleteCertificateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteCertificateRequest publicRequest);
    internal static DeleteCertificateRequestMarshaller GetInstance();
    public static DeleteCertificateRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteCertificateResponseUnmarshaller _instance;
    public static DeleteCertificateResponseUnmarshaller Instance { get; }
    private static DeleteCertificateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteCertificateResponseUnmarshaller GetInstance();
    public static DeleteCertificateResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteConnectionRequestMarshaller : object {
    private static DeleteConnectionRequestMarshaller _instance;
    public static DeleteConnectionRequestMarshaller Instance { get; }
    private static DeleteConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteConnectionRequest publicRequest);
    internal static DeleteConnectionRequestMarshaller GetInstance();
    public static DeleteConnectionRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteConnectionResponseUnmarshaller _instance;
    public static DeleteConnectionResponseUnmarshaller Instance { get; }
    private static DeleteConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteConnectionResponseUnmarshaller GetInstance();
    public static DeleteConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteDataProviderRequestMarshaller : object {
    private static DeleteDataProviderRequestMarshaller _instance;
    public static DeleteDataProviderRequestMarshaller Instance { get; }
    private static DeleteDataProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteDataProviderRequest publicRequest);
    internal static DeleteDataProviderRequestMarshaller GetInstance();
    public static DeleteDataProviderRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteDataProviderResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteDataProviderResponseUnmarshaller _instance;
    public static DeleteDataProviderResponseUnmarshaller Instance { get; }
    private static DeleteDataProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteDataProviderResponseUnmarshaller GetInstance();
    public static DeleteDataProviderResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteEndpointRequestMarshaller : object {
    private static DeleteEndpointRequestMarshaller _instance;
    public static DeleteEndpointRequestMarshaller Instance { get; }
    private static DeleteEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteEndpointRequest publicRequest);
    internal static DeleteEndpointRequestMarshaller GetInstance();
    public static DeleteEndpointRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteEndpointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteEndpointResponseUnmarshaller _instance;
    public static DeleteEndpointResponseUnmarshaller Instance { get; }
    private static DeleteEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteEndpointResponseUnmarshaller GetInstance();
    public static DeleteEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteEventSubscriptionRequestMarshaller : object {
    private static DeleteEventSubscriptionRequestMarshaller _instance;
    public static DeleteEventSubscriptionRequestMarshaller Instance { get; }
    private static DeleteEventSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteEventSubscriptionRequest publicRequest);
    internal static DeleteEventSubscriptionRequestMarshaller GetInstance();
    public static DeleteEventSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteEventSubscriptionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteEventSubscriptionResponseUnmarshaller _instance;
    public static DeleteEventSubscriptionResponseUnmarshaller Instance { get; }
    private static DeleteEventSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteEventSubscriptionResponseUnmarshaller GetInstance();
    public static DeleteEventSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteFleetAdvisorCollectorRequestMarshaller : object {
    private static DeleteFleetAdvisorCollectorRequestMarshaller _instance;
    public static DeleteFleetAdvisorCollectorRequestMarshaller Instance { get; }
    private static DeleteFleetAdvisorCollectorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFleetAdvisorCollectorRequest publicRequest);
    internal static DeleteFleetAdvisorCollectorRequestMarshaller GetInstance();
    public static DeleteFleetAdvisorCollectorRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteFleetAdvisorCollectorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFleetAdvisorCollectorResponseUnmarshaller _instance;
    public static DeleteFleetAdvisorCollectorResponseUnmarshaller Instance { get; }
    private static DeleteFleetAdvisorCollectorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFleetAdvisorCollectorResponseUnmarshaller GetInstance();
    public static DeleteFleetAdvisorCollectorResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteFleetAdvisorDatabasesRequestMarshaller : object {
    private static DeleteFleetAdvisorDatabasesRequestMarshaller _instance;
    public static DeleteFleetAdvisorDatabasesRequestMarshaller Instance { get; }
    private static DeleteFleetAdvisorDatabasesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteFleetAdvisorDatabasesRequest publicRequest);
    internal static DeleteFleetAdvisorDatabasesRequestMarshaller GetInstance();
    public static DeleteFleetAdvisorDatabasesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteFleetAdvisorDatabasesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteFleetAdvisorDatabasesResponseUnmarshaller _instance;
    public static DeleteFleetAdvisorDatabasesResponseUnmarshaller Instance { get; }
    private static DeleteFleetAdvisorDatabasesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteFleetAdvisorDatabasesResponseUnmarshaller GetInstance();
    public static DeleteFleetAdvisorDatabasesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteInstanceProfileRequestMarshaller : object {
    private static DeleteInstanceProfileRequestMarshaller _instance;
    public static DeleteInstanceProfileRequestMarshaller Instance { get; }
    private static DeleteInstanceProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteInstanceProfileRequest publicRequest);
    internal static DeleteInstanceProfileRequestMarshaller GetInstance();
    public static DeleteInstanceProfileRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteInstanceProfileResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteInstanceProfileResponseUnmarshaller _instance;
    public static DeleteInstanceProfileResponseUnmarshaller Instance { get; }
    private static DeleteInstanceProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteInstanceProfileResponseUnmarshaller GetInstance();
    public static DeleteInstanceProfileResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteMigrationProjectRequestMarshaller : object {
    private static DeleteMigrationProjectRequestMarshaller _instance;
    public static DeleteMigrationProjectRequestMarshaller Instance { get; }
    private static DeleteMigrationProjectRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteMigrationProjectRequest publicRequest);
    internal static DeleteMigrationProjectRequestMarshaller GetInstance();
    public static DeleteMigrationProjectRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteMigrationProjectResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteMigrationProjectResponseUnmarshaller _instance;
    public static DeleteMigrationProjectResponseUnmarshaller Instance { get; }
    private static DeleteMigrationProjectResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteMigrationProjectResponseUnmarshaller GetInstance();
    public static DeleteMigrationProjectResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteReplicationConfigRequestMarshaller : object {
    private static DeleteReplicationConfigRequestMarshaller _instance;
    public static DeleteReplicationConfigRequestMarshaller Instance { get; }
    private static DeleteReplicationConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReplicationConfigRequest publicRequest);
    internal static DeleteReplicationConfigRequestMarshaller GetInstance();
    public static DeleteReplicationConfigRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteReplicationConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteReplicationConfigResponseUnmarshaller _instance;
    public static DeleteReplicationConfigResponseUnmarshaller Instance { get; }
    private static DeleteReplicationConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReplicationConfigResponseUnmarshaller GetInstance();
    public static DeleteReplicationConfigResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteReplicationInstanceRequestMarshaller : object {
    private static DeleteReplicationInstanceRequestMarshaller _instance;
    public static DeleteReplicationInstanceRequestMarshaller Instance { get; }
    private static DeleteReplicationInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReplicationInstanceRequest publicRequest);
    internal static DeleteReplicationInstanceRequestMarshaller GetInstance();
    public static DeleteReplicationInstanceRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteReplicationInstanceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteReplicationInstanceResponseUnmarshaller _instance;
    public static DeleteReplicationInstanceResponseUnmarshaller Instance { get; }
    private static DeleteReplicationInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReplicationInstanceResponseUnmarshaller GetInstance();
    public static DeleteReplicationInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteReplicationSubnetGroupRequestMarshaller : object {
    private static DeleteReplicationSubnetGroupRequestMarshaller _instance;
    public static DeleteReplicationSubnetGroupRequestMarshaller Instance { get; }
    private static DeleteReplicationSubnetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReplicationSubnetGroupRequest publicRequest);
    internal static DeleteReplicationSubnetGroupRequestMarshaller GetInstance();
    public static DeleteReplicationSubnetGroupRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteReplicationSubnetGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteReplicationSubnetGroupResponseUnmarshaller _instance;
    public static DeleteReplicationSubnetGroupResponseUnmarshaller Instance { get; }
    private static DeleteReplicationSubnetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReplicationSubnetGroupResponseUnmarshaller GetInstance();
    public static DeleteReplicationSubnetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteReplicationTaskAssessmentRunRequestMarshaller : object {
    private static DeleteReplicationTaskAssessmentRunRequestMarshaller _instance;
    public static DeleteReplicationTaskAssessmentRunRequestMarshaller Instance { get; }
    private static DeleteReplicationTaskAssessmentRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReplicationTaskAssessmentRunRequest publicRequest);
    internal static DeleteReplicationTaskAssessmentRunRequestMarshaller GetInstance();
    public static DeleteReplicationTaskAssessmentRunRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteReplicationTaskAssessmentRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteReplicationTaskAssessmentRunResponseUnmarshaller _instance;
    public static DeleteReplicationTaskAssessmentRunResponseUnmarshaller Instance { get; }
    private static DeleteReplicationTaskAssessmentRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReplicationTaskAssessmentRunResponseUnmarshaller GetInstance();
    public static DeleteReplicationTaskAssessmentRunResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteReplicationTaskRequestMarshaller : object {
    private static DeleteReplicationTaskRequestMarshaller _instance;
    public static DeleteReplicationTaskRequestMarshaller Instance { get; }
    private static DeleteReplicationTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteReplicationTaskRequest publicRequest);
    internal static DeleteReplicationTaskRequestMarshaller GetInstance();
    public static DeleteReplicationTaskRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DeleteReplicationTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteReplicationTaskResponseUnmarshaller _instance;
    public static DeleteReplicationTaskResponseUnmarshaller Instance { get; }
    private static DeleteReplicationTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteReplicationTaskResponseUnmarshaller GetInstance();
    public static DeleteReplicationTaskResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeAccountAttributesRequestMarshaller : object {
    private static DescribeAccountAttributesRequestMarshaller _instance;
    public static DescribeAccountAttributesRequestMarshaller Instance { get; }
    private static DescribeAccountAttributesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeAccountAttributesRequest publicRequest);
    internal static DescribeAccountAttributesRequestMarshaller GetInstance();
    public static DescribeAccountAttributesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeAccountAttributesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeAccountAttributesResponseUnmarshaller _instance;
    public static DescribeAccountAttributesResponseUnmarshaller Instance { get; }
    private static DescribeAccountAttributesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeAccountAttributesResponseUnmarshaller GetInstance();
    public static DescribeAccountAttributesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeApplicableIndividualAssessmentsRequestMarshaller : object {
    private static DescribeApplicableIndividualAssessmentsRequestMarshaller _instance;
    public static DescribeApplicableIndividualAssessmentsRequestMarshaller Instance { get; }
    private static DescribeApplicableIndividualAssessmentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeApplicableIndividualAssessmentsRequest publicRequest);
    internal static DescribeApplicableIndividualAssessmentsRequestMarshaller GetInstance();
    public static DescribeApplicableIndividualAssessmentsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeApplicableIndividualAssessmentsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeApplicableIndividualAssessmentsResponseUnmarshaller _instance;
    public static DescribeApplicableIndividualAssessmentsResponseUnmarshaller Instance { get; }
    private static DescribeApplicableIndividualAssessmentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeApplicableIndividualAssessmentsResponseUnmarshaller GetInstance();
    public static DescribeApplicableIndividualAssessmentsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeCertificatesRequestMarshaller : object {
    private static DescribeCertificatesRequestMarshaller _instance;
    public static DescribeCertificatesRequestMarshaller Instance { get; }
    private static DescribeCertificatesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeCertificatesRequest publicRequest);
    internal static DescribeCertificatesRequestMarshaller GetInstance();
    public static DescribeCertificatesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeCertificatesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeCertificatesResponseUnmarshaller _instance;
    public static DescribeCertificatesResponseUnmarshaller Instance { get; }
    private static DescribeCertificatesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeCertificatesResponseUnmarshaller GetInstance();
    public static DescribeCertificatesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeConnectionsRequestMarshaller : object {
    private static DescribeConnectionsRequestMarshaller _instance;
    public static DescribeConnectionsRequestMarshaller Instance { get; }
    private static DescribeConnectionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeConnectionsRequest publicRequest);
    internal static DescribeConnectionsRequestMarshaller GetInstance();
    public static DescribeConnectionsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeConnectionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeConnectionsResponseUnmarshaller _instance;
    public static DescribeConnectionsResponseUnmarshaller Instance { get; }
    private static DescribeConnectionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeConnectionsResponseUnmarshaller GetInstance();
    public static DescribeConnectionsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeConversionConfigurationRequestMarshaller : object {
    private static DescribeConversionConfigurationRequestMarshaller _instance;
    public static DescribeConversionConfigurationRequestMarshaller Instance { get; }
    private static DescribeConversionConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeConversionConfigurationRequest publicRequest);
    internal static DescribeConversionConfigurationRequestMarshaller GetInstance();
    public static DescribeConversionConfigurationRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeConversionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeConversionConfigurationResponseUnmarshaller _instance;
    public static DescribeConversionConfigurationResponseUnmarshaller Instance { get; }
    private static DescribeConversionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeConversionConfigurationResponseUnmarshaller GetInstance();
    public static DescribeConversionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeDataProvidersRequestMarshaller : object {
    private static DescribeDataProvidersRequestMarshaller _instance;
    public static DescribeDataProvidersRequestMarshaller Instance { get; }
    private static DescribeDataProvidersRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeDataProvidersRequest publicRequest);
    internal static DescribeDataProvidersRequestMarshaller GetInstance();
    public static DescribeDataProvidersRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeDataProvidersResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeDataProvidersResponseUnmarshaller _instance;
    public static DescribeDataProvidersResponseUnmarshaller Instance { get; }
    private static DescribeDataProvidersResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeDataProvidersResponseUnmarshaller GetInstance();
    public static DescribeDataProvidersResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEndpointSettingsRequestMarshaller : object {
    private static DescribeEndpointSettingsRequestMarshaller _instance;
    public static DescribeEndpointSettingsRequestMarshaller Instance { get; }
    private static DescribeEndpointSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEndpointSettingsRequest publicRequest);
    internal static DescribeEndpointSettingsRequestMarshaller GetInstance();
    public static DescribeEndpointSettingsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEndpointSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEndpointSettingsResponseUnmarshaller _instance;
    public static DescribeEndpointSettingsResponseUnmarshaller Instance { get; }
    private static DescribeEndpointSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEndpointSettingsResponseUnmarshaller GetInstance();
    public static DescribeEndpointSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEndpointsRequestMarshaller : object {
    private static DescribeEndpointsRequestMarshaller _instance;
    public static DescribeEndpointsRequestMarshaller Instance { get; }
    private static DescribeEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEndpointsRequest publicRequest);
    internal static DescribeEndpointsRequestMarshaller GetInstance();
    public static DescribeEndpointsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEndpointsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEndpointsResponseUnmarshaller _instance;
    public static DescribeEndpointsResponseUnmarshaller Instance { get; }
    private static DescribeEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEndpointsResponseUnmarshaller GetInstance();
    public static DescribeEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEndpointTypesRequestMarshaller : object {
    private static DescribeEndpointTypesRequestMarshaller _instance;
    public static DescribeEndpointTypesRequestMarshaller Instance { get; }
    private static DescribeEndpointTypesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEndpointTypesRequest publicRequest);
    internal static DescribeEndpointTypesRequestMarshaller GetInstance();
    public static DescribeEndpointTypesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEndpointTypesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEndpointTypesResponseUnmarshaller _instance;
    public static DescribeEndpointTypesResponseUnmarshaller Instance { get; }
    private static DescribeEndpointTypesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEndpointTypesResponseUnmarshaller GetInstance();
    public static DescribeEndpointTypesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEngineVersionsRequestMarshaller : object {
    private static DescribeEngineVersionsRequestMarshaller _instance;
    public static DescribeEngineVersionsRequestMarshaller Instance { get; }
    private static DescribeEngineVersionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEngineVersionsRequest publicRequest);
    internal static DescribeEngineVersionsRequestMarshaller GetInstance();
    public static DescribeEngineVersionsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEngineVersionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEngineVersionsResponseUnmarshaller _instance;
    public static DescribeEngineVersionsResponseUnmarshaller Instance { get; }
    private static DescribeEngineVersionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEngineVersionsResponseUnmarshaller GetInstance();
    public static DescribeEngineVersionsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEventCategoriesRequestMarshaller : object {
    private static DescribeEventCategoriesRequestMarshaller _instance;
    public static DescribeEventCategoriesRequestMarshaller Instance { get; }
    private static DescribeEventCategoriesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEventCategoriesRequest publicRequest);
    internal static DescribeEventCategoriesRequestMarshaller GetInstance();
    public static DescribeEventCategoriesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEventCategoriesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEventCategoriesResponseUnmarshaller _instance;
    public static DescribeEventCategoriesResponseUnmarshaller Instance { get; }
    private static DescribeEventCategoriesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEventCategoriesResponseUnmarshaller GetInstance();
    public static DescribeEventCategoriesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller : object {
    private static DescribeEventsRequestMarshaller _instance;
    public static DescribeEventsRequestMarshaller Instance { get; }
    private static DescribeEventsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEventsRequest publicRequest);
    internal static DescribeEventsRequestMarshaller GetInstance();
    public static DescribeEventsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEventsResponseUnmarshaller _instance;
    public static DescribeEventsResponseUnmarshaller Instance { get; }
    private static DescribeEventsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEventsResponseUnmarshaller GetInstance();
    public static DescribeEventsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsRequestMarshaller : object {
    private static DescribeEventSubscriptionsRequestMarshaller _instance;
    public static DescribeEventSubscriptionsRequestMarshaller Instance { get; }
    private static DescribeEventSubscriptionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEventSubscriptionsRequest publicRequest);
    internal static DescribeEventSubscriptionsRequestMarshaller GetInstance();
    public static DescribeEventSubscriptionsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEventSubscriptionsResponseUnmarshaller _instance;
    public static DescribeEventSubscriptionsResponseUnmarshaller Instance { get; }
    private static DescribeEventSubscriptionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEventSubscriptionsResponseUnmarshaller GetInstance();
    public static DescribeEventSubscriptionsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeExtensionPackAssociationsRequestMarshaller : object {
    private static DescribeExtensionPackAssociationsRequestMarshaller _instance;
    public static DescribeExtensionPackAssociationsRequestMarshaller Instance { get; }
    private static DescribeExtensionPackAssociationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeExtensionPackAssociationsRequest publicRequest);
    internal static DescribeExtensionPackAssociationsRequestMarshaller GetInstance();
    public static DescribeExtensionPackAssociationsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeExtensionPackAssociationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeExtensionPackAssociationsResponseUnmarshaller _instance;
    public static DescribeExtensionPackAssociationsResponseUnmarshaller Instance { get; }
    private static DescribeExtensionPackAssociationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeExtensionPackAssociationsResponseUnmarshaller GetInstance();
    public static DescribeExtensionPackAssociationsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeFleetAdvisorCollectorsRequestMarshaller : object {
    private static DescribeFleetAdvisorCollectorsRequestMarshaller _instance;
    public static DescribeFleetAdvisorCollectorsRequestMarshaller Instance { get; }
    private static DescribeFleetAdvisorCollectorsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFleetAdvisorCollectorsRequest publicRequest);
    internal static DescribeFleetAdvisorCollectorsRequestMarshaller GetInstance();
    public static DescribeFleetAdvisorCollectorsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeFleetAdvisorCollectorsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeFleetAdvisorCollectorsResponseUnmarshaller _instance;
    public static DescribeFleetAdvisorCollectorsResponseUnmarshaller Instance { get; }
    private static DescribeFleetAdvisorCollectorsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFleetAdvisorCollectorsResponseUnmarshaller GetInstance();
    public static DescribeFleetAdvisorCollectorsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeFleetAdvisorDatabasesRequestMarshaller : object {
    private static DescribeFleetAdvisorDatabasesRequestMarshaller _instance;
    public static DescribeFleetAdvisorDatabasesRequestMarshaller Instance { get; }
    private static DescribeFleetAdvisorDatabasesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFleetAdvisorDatabasesRequest publicRequest);
    internal static DescribeFleetAdvisorDatabasesRequestMarshaller GetInstance();
    public static DescribeFleetAdvisorDatabasesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeFleetAdvisorDatabasesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeFleetAdvisorDatabasesResponseUnmarshaller _instance;
    public static DescribeFleetAdvisorDatabasesResponseUnmarshaller Instance { get; }
    private static DescribeFleetAdvisorDatabasesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFleetAdvisorDatabasesResponseUnmarshaller GetInstance();
    public static DescribeFleetAdvisorDatabasesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeFleetAdvisorLsaAnalysisRequestMarshaller : object {
    private static DescribeFleetAdvisorLsaAnalysisRequestMarshaller _instance;
    public static DescribeFleetAdvisorLsaAnalysisRequestMarshaller Instance { get; }
    private static DescribeFleetAdvisorLsaAnalysisRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFleetAdvisorLsaAnalysisRequest publicRequest);
    internal static DescribeFleetAdvisorLsaAnalysisRequestMarshaller GetInstance();
    public static DescribeFleetAdvisorLsaAnalysisRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeFleetAdvisorLsaAnalysisResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeFleetAdvisorLsaAnalysisResponseUnmarshaller _instance;
    public static DescribeFleetAdvisorLsaAnalysisResponseUnmarshaller Instance { get; }
    private static DescribeFleetAdvisorLsaAnalysisResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFleetAdvisorLsaAnalysisResponseUnmarshaller GetInstance();
    public static DescribeFleetAdvisorLsaAnalysisResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeFleetAdvisorSchemaObjectSummaryRequestMarshaller : object {
    private static DescribeFleetAdvisorSchemaObjectSummaryRequestMarshaller _instance;
    public static DescribeFleetAdvisorSchemaObjectSummaryRequestMarshaller Instance { get; }
    private static DescribeFleetAdvisorSchemaObjectSummaryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFleetAdvisorSchemaObjectSummaryRequest publicRequest);
    internal static DescribeFleetAdvisorSchemaObjectSummaryRequestMarshaller GetInstance();
    public static DescribeFleetAdvisorSchemaObjectSummaryRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeFleetAdvisorSchemaObjectSummaryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeFleetAdvisorSchemaObjectSummaryResponseUnmarshaller _instance;
    public static DescribeFleetAdvisorSchemaObjectSummaryResponseUnmarshaller Instance { get; }
    private static DescribeFleetAdvisorSchemaObjectSummaryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFleetAdvisorSchemaObjectSummaryResponseUnmarshaller GetInstance();
    public static DescribeFleetAdvisorSchemaObjectSummaryResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeFleetAdvisorSchemasRequestMarshaller : object {
    private static DescribeFleetAdvisorSchemasRequestMarshaller _instance;
    public static DescribeFleetAdvisorSchemasRequestMarshaller Instance { get; }
    private static DescribeFleetAdvisorSchemasRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeFleetAdvisorSchemasRequest publicRequest);
    internal static DescribeFleetAdvisorSchemasRequestMarshaller GetInstance();
    public static DescribeFleetAdvisorSchemasRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeFleetAdvisorSchemasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeFleetAdvisorSchemasResponseUnmarshaller _instance;
    public static DescribeFleetAdvisorSchemasResponseUnmarshaller Instance { get; }
    private static DescribeFleetAdvisorSchemasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeFleetAdvisorSchemasResponseUnmarshaller GetInstance();
    public static DescribeFleetAdvisorSchemasResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeInstanceProfilesRequestMarshaller : object {
    private static DescribeInstanceProfilesRequestMarshaller _instance;
    public static DescribeInstanceProfilesRequestMarshaller Instance { get; }
    private static DescribeInstanceProfilesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeInstanceProfilesRequest publicRequest);
    internal static DescribeInstanceProfilesRequestMarshaller GetInstance();
    public static DescribeInstanceProfilesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeInstanceProfilesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeInstanceProfilesResponseUnmarshaller _instance;
    public static DescribeInstanceProfilesResponseUnmarshaller Instance { get; }
    private static DescribeInstanceProfilesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeInstanceProfilesResponseUnmarshaller GetInstance();
    public static DescribeInstanceProfilesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMetadataModelAssessmentsRequestMarshaller : object {
    private static DescribeMetadataModelAssessmentsRequestMarshaller _instance;
    public static DescribeMetadataModelAssessmentsRequestMarshaller Instance { get; }
    private static DescribeMetadataModelAssessmentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMetadataModelAssessmentsRequest publicRequest);
    internal static DescribeMetadataModelAssessmentsRequestMarshaller GetInstance();
    public static DescribeMetadataModelAssessmentsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMetadataModelAssessmentsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMetadataModelAssessmentsResponseUnmarshaller _instance;
    public static DescribeMetadataModelAssessmentsResponseUnmarshaller Instance { get; }
    private static DescribeMetadataModelAssessmentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMetadataModelAssessmentsResponseUnmarshaller GetInstance();
    public static DescribeMetadataModelAssessmentsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMetadataModelConversionsRequestMarshaller : object {
    private static DescribeMetadataModelConversionsRequestMarshaller _instance;
    public static DescribeMetadataModelConversionsRequestMarshaller Instance { get; }
    private static DescribeMetadataModelConversionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMetadataModelConversionsRequest publicRequest);
    internal static DescribeMetadataModelConversionsRequestMarshaller GetInstance();
    public static DescribeMetadataModelConversionsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMetadataModelConversionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMetadataModelConversionsResponseUnmarshaller _instance;
    public static DescribeMetadataModelConversionsResponseUnmarshaller Instance { get; }
    private static DescribeMetadataModelConversionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMetadataModelConversionsResponseUnmarshaller GetInstance();
    public static DescribeMetadataModelConversionsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMetadataModelExportsAsScriptRequestMarshaller : object {
    private static DescribeMetadataModelExportsAsScriptRequestMarshaller _instance;
    public static DescribeMetadataModelExportsAsScriptRequestMarshaller Instance { get; }
    private static DescribeMetadataModelExportsAsScriptRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMetadataModelExportsAsScriptRequest publicRequest);
    internal static DescribeMetadataModelExportsAsScriptRequestMarshaller GetInstance();
    public static DescribeMetadataModelExportsAsScriptRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMetadataModelExportsAsScriptResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMetadataModelExportsAsScriptResponseUnmarshaller _instance;
    public static DescribeMetadataModelExportsAsScriptResponseUnmarshaller Instance { get; }
    private static DescribeMetadataModelExportsAsScriptResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMetadataModelExportsAsScriptResponseUnmarshaller GetInstance();
    public static DescribeMetadataModelExportsAsScriptResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMetadataModelExportsToTargetRequestMarshaller : object {
    private static DescribeMetadataModelExportsToTargetRequestMarshaller _instance;
    public static DescribeMetadataModelExportsToTargetRequestMarshaller Instance { get; }
    private static DescribeMetadataModelExportsToTargetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMetadataModelExportsToTargetRequest publicRequest);
    internal static DescribeMetadataModelExportsToTargetRequestMarshaller GetInstance();
    public static DescribeMetadataModelExportsToTargetRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMetadataModelExportsToTargetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMetadataModelExportsToTargetResponseUnmarshaller _instance;
    public static DescribeMetadataModelExportsToTargetResponseUnmarshaller Instance { get; }
    private static DescribeMetadataModelExportsToTargetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMetadataModelExportsToTargetResponseUnmarshaller GetInstance();
    public static DescribeMetadataModelExportsToTargetResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMetadataModelImportsRequestMarshaller : object {
    private static DescribeMetadataModelImportsRequestMarshaller _instance;
    public static DescribeMetadataModelImportsRequestMarshaller Instance { get; }
    private static DescribeMetadataModelImportsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMetadataModelImportsRequest publicRequest);
    internal static DescribeMetadataModelImportsRequestMarshaller GetInstance();
    public static DescribeMetadataModelImportsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMetadataModelImportsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMetadataModelImportsResponseUnmarshaller _instance;
    public static DescribeMetadataModelImportsResponseUnmarshaller Instance { get; }
    private static DescribeMetadataModelImportsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMetadataModelImportsResponseUnmarshaller GetInstance();
    public static DescribeMetadataModelImportsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMigrationProjectsRequestMarshaller : object {
    private static DescribeMigrationProjectsRequestMarshaller _instance;
    public static DescribeMigrationProjectsRequestMarshaller Instance { get; }
    private static DescribeMigrationProjectsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeMigrationProjectsRequest publicRequest);
    internal static DescribeMigrationProjectsRequestMarshaller GetInstance();
    public static DescribeMigrationProjectsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeMigrationProjectsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeMigrationProjectsResponseUnmarshaller _instance;
    public static DescribeMigrationProjectsResponseUnmarshaller Instance { get; }
    private static DescribeMigrationProjectsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeMigrationProjectsResponseUnmarshaller GetInstance();
    public static DescribeMigrationProjectsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeOrderableReplicationInstancesRequestMarshaller : object {
    private static DescribeOrderableReplicationInstancesRequestMarshaller _instance;
    public static DescribeOrderableReplicationInstancesRequestMarshaller Instance { get; }
    private static DescribeOrderableReplicationInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeOrderableReplicationInstancesRequest publicRequest);
    internal static DescribeOrderableReplicationInstancesRequestMarshaller GetInstance();
    public static DescribeOrderableReplicationInstancesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeOrderableReplicationInstancesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeOrderableReplicationInstancesResponseUnmarshaller _instance;
    public static DescribeOrderableReplicationInstancesResponseUnmarshaller Instance { get; }
    private static DescribeOrderableReplicationInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeOrderableReplicationInstancesResponseUnmarshaller GetInstance();
    public static DescribeOrderableReplicationInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsRequestMarshaller : object {
    private static DescribePendingMaintenanceActionsRequestMarshaller _instance;
    public static DescribePendingMaintenanceActionsRequestMarshaller Instance { get; }
    private static DescribePendingMaintenanceActionsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribePendingMaintenanceActionsRequest publicRequest);
    internal static DescribePendingMaintenanceActionsRequestMarshaller GetInstance();
    public static DescribePendingMaintenanceActionsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribePendingMaintenanceActionsResponseUnmarshaller _instance;
    public static DescribePendingMaintenanceActionsResponseUnmarshaller Instance { get; }
    private static DescribePendingMaintenanceActionsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribePendingMaintenanceActionsResponseUnmarshaller GetInstance();
    public static DescribePendingMaintenanceActionsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeRecommendationLimitationsRequestMarshaller : object {
    private static DescribeRecommendationLimitationsRequestMarshaller _instance;
    public static DescribeRecommendationLimitationsRequestMarshaller Instance { get; }
    private static DescribeRecommendationLimitationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRecommendationLimitationsRequest publicRequest);
    internal static DescribeRecommendationLimitationsRequestMarshaller GetInstance();
    public static DescribeRecommendationLimitationsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeRecommendationLimitationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeRecommendationLimitationsResponseUnmarshaller _instance;
    public static DescribeRecommendationLimitationsResponseUnmarshaller Instance { get; }
    private static DescribeRecommendationLimitationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRecommendationLimitationsResponseUnmarshaller GetInstance();
    public static DescribeRecommendationLimitationsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeRecommendationsRequestMarshaller : object {
    private static DescribeRecommendationsRequestMarshaller _instance;
    public static DescribeRecommendationsRequestMarshaller Instance { get; }
    private static DescribeRecommendationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRecommendationsRequest publicRequest);
    internal static DescribeRecommendationsRequestMarshaller GetInstance();
    public static DescribeRecommendationsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeRecommendationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeRecommendationsResponseUnmarshaller _instance;
    public static DescribeRecommendationsResponseUnmarshaller Instance { get; }
    private static DescribeRecommendationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRecommendationsResponseUnmarshaller GetInstance();
    public static DescribeRecommendationsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeRefreshSchemasStatusRequestMarshaller : object {
    private static DescribeRefreshSchemasStatusRequestMarshaller _instance;
    public static DescribeRefreshSchemasStatusRequestMarshaller Instance { get; }
    private static DescribeRefreshSchemasStatusRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeRefreshSchemasStatusRequest publicRequest);
    internal static DescribeRefreshSchemasStatusRequestMarshaller GetInstance();
    public static DescribeRefreshSchemasStatusRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeRefreshSchemasStatusResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeRefreshSchemasStatusResponseUnmarshaller _instance;
    public static DescribeRefreshSchemasStatusResponseUnmarshaller Instance { get; }
    private static DescribeRefreshSchemasStatusResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeRefreshSchemasStatusResponseUnmarshaller GetInstance();
    public static DescribeRefreshSchemasStatusResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationConfigsRequestMarshaller : object {
    private static DescribeReplicationConfigsRequestMarshaller _instance;
    public static DescribeReplicationConfigsRequestMarshaller Instance { get; }
    private static DescribeReplicationConfigsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationConfigsRequest publicRequest);
    internal static DescribeReplicationConfigsRequestMarshaller GetInstance();
    public static DescribeReplicationConfigsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationConfigsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationConfigsResponseUnmarshaller _instance;
    public static DescribeReplicationConfigsResponseUnmarshaller Instance { get; }
    private static DescribeReplicationConfigsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationConfigsResponseUnmarshaller GetInstance();
    public static DescribeReplicationConfigsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationInstancesRequestMarshaller : object {
    private static DescribeReplicationInstancesRequestMarshaller _instance;
    public static DescribeReplicationInstancesRequestMarshaller Instance { get; }
    private static DescribeReplicationInstancesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationInstancesRequest publicRequest);
    internal static DescribeReplicationInstancesRequestMarshaller GetInstance();
    public static DescribeReplicationInstancesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationInstancesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationInstancesResponseUnmarshaller _instance;
    public static DescribeReplicationInstancesResponseUnmarshaller Instance { get; }
    private static DescribeReplicationInstancesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationInstancesResponseUnmarshaller GetInstance();
    public static DescribeReplicationInstancesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationInstanceTaskLogsRequestMarshaller : object {
    private static DescribeReplicationInstanceTaskLogsRequestMarshaller _instance;
    public static DescribeReplicationInstanceTaskLogsRequestMarshaller Instance { get; }
    private static DescribeReplicationInstanceTaskLogsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationInstanceTaskLogsRequest publicRequest);
    internal static DescribeReplicationInstanceTaskLogsRequestMarshaller GetInstance();
    public static DescribeReplicationInstanceTaskLogsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationInstanceTaskLogsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationInstanceTaskLogsResponseUnmarshaller _instance;
    public static DescribeReplicationInstanceTaskLogsResponseUnmarshaller Instance { get; }
    private static DescribeReplicationInstanceTaskLogsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationInstanceTaskLogsResponseUnmarshaller GetInstance();
    public static DescribeReplicationInstanceTaskLogsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationsRequestMarshaller : object {
    private static DescribeReplicationsRequestMarshaller _instance;
    public static DescribeReplicationsRequestMarshaller Instance { get; }
    private static DescribeReplicationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationsRequest publicRequest);
    internal static DescribeReplicationsRequestMarshaller GetInstance();
    public static DescribeReplicationsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationsResponseUnmarshaller _instance;
    public static DescribeReplicationsResponseUnmarshaller Instance { get; }
    private static DescribeReplicationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationsResponseUnmarshaller GetInstance();
    public static DescribeReplicationsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationSubnetGroupsRequestMarshaller : object {
    private static DescribeReplicationSubnetGroupsRequestMarshaller _instance;
    public static DescribeReplicationSubnetGroupsRequestMarshaller Instance { get; }
    private static DescribeReplicationSubnetGroupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationSubnetGroupsRequest publicRequest);
    internal static DescribeReplicationSubnetGroupsRequestMarshaller GetInstance();
    public static DescribeReplicationSubnetGroupsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationSubnetGroupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationSubnetGroupsResponseUnmarshaller _instance;
    public static DescribeReplicationSubnetGroupsResponseUnmarshaller Instance { get; }
    private static DescribeReplicationSubnetGroupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationSubnetGroupsResponseUnmarshaller GetInstance();
    public static DescribeReplicationSubnetGroupsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationTableStatisticsRequestMarshaller : object {
    private static DescribeReplicationTableStatisticsRequestMarshaller _instance;
    public static DescribeReplicationTableStatisticsRequestMarshaller Instance { get; }
    private static DescribeReplicationTableStatisticsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationTableStatisticsRequest publicRequest);
    internal static DescribeReplicationTableStatisticsRequestMarshaller GetInstance();
    public static DescribeReplicationTableStatisticsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationTableStatisticsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationTableStatisticsResponseUnmarshaller _instance;
    public static DescribeReplicationTableStatisticsResponseUnmarshaller Instance { get; }
    private static DescribeReplicationTableStatisticsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationTableStatisticsResponseUnmarshaller GetInstance();
    public static DescribeReplicationTableStatisticsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationTaskAssessmentResultsRequestMarshaller : object {
    private static DescribeReplicationTaskAssessmentResultsRequestMarshaller _instance;
    public static DescribeReplicationTaskAssessmentResultsRequestMarshaller Instance { get; }
    private static DescribeReplicationTaskAssessmentResultsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationTaskAssessmentResultsRequest publicRequest);
    internal static DescribeReplicationTaskAssessmentResultsRequestMarshaller GetInstance();
    public static DescribeReplicationTaskAssessmentResultsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationTaskAssessmentResultsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationTaskAssessmentResultsResponseUnmarshaller _instance;
    public static DescribeReplicationTaskAssessmentResultsResponseUnmarshaller Instance { get; }
    private static DescribeReplicationTaskAssessmentResultsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationTaskAssessmentResultsResponseUnmarshaller GetInstance();
    public static DescribeReplicationTaskAssessmentResultsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationTaskAssessmentRunsRequestMarshaller : object {
    private static DescribeReplicationTaskAssessmentRunsRequestMarshaller _instance;
    public static DescribeReplicationTaskAssessmentRunsRequestMarshaller Instance { get; }
    private static DescribeReplicationTaskAssessmentRunsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationTaskAssessmentRunsRequest publicRequest);
    internal static DescribeReplicationTaskAssessmentRunsRequestMarshaller GetInstance();
    public static DescribeReplicationTaskAssessmentRunsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationTaskAssessmentRunsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationTaskAssessmentRunsResponseUnmarshaller _instance;
    public static DescribeReplicationTaskAssessmentRunsResponseUnmarshaller Instance { get; }
    private static DescribeReplicationTaskAssessmentRunsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationTaskAssessmentRunsResponseUnmarshaller GetInstance();
    public static DescribeReplicationTaskAssessmentRunsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationTaskIndividualAssessmentsRequestMarshaller : object {
    private static DescribeReplicationTaskIndividualAssessmentsRequestMarshaller _instance;
    public static DescribeReplicationTaskIndividualAssessmentsRequestMarshaller Instance { get; }
    private static DescribeReplicationTaskIndividualAssessmentsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationTaskIndividualAssessmentsRequest publicRequest);
    internal static DescribeReplicationTaskIndividualAssessmentsRequestMarshaller GetInstance();
    public static DescribeReplicationTaskIndividualAssessmentsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationTaskIndividualAssessmentsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationTaskIndividualAssessmentsResponseUnmarshaller _instance;
    public static DescribeReplicationTaskIndividualAssessmentsResponseUnmarshaller Instance { get; }
    private static DescribeReplicationTaskIndividualAssessmentsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationTaskIndividualAssessmentsResponseUnmarshaller GetInstance();
    public static DescribeReplicationTaskIndividualAssessmentsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationTasksRequestMarshaller : object {
    private static DescribeReplicationTasksRequestMarshaller _instance;
    public static DescribeReplicationTasksRequestMarshaller Instance { get; }
    private static DescribeReplicationTasksRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeReplicationTasksRequest publicRequest);
    internal static DescribeReplicationTasksRequestMarshaller GetInstance();
    public static DescribeReplicationTasksRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeReplicationTasksResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeReplicationTasksResponseUnmarshaller _instance;
    public static DescribeReplicationTasksResponseUnmarshaller Instance { get; }
    private static DescribeReplicationTasksResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeReplicationTasksResponseUnmarshaller GetInstance();
    public static DescribeReplicationTasksResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeSchemasRequestMarshaller : object {
    private static DescribeSchemasRequestMarshaller _instance;
    public static DescribeSchemasRequestMarshaller Instance { get; }
    private static DescribeSchemasRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeSchemasRequest publicRequest);
    internal static DescribeSchemasRequestMarshaller GetInstance();
    public static DescribeSchemasRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeSchemasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeSchemasResponseUnmarshaller _instance;
    public static DescribeSchemasResponseUnmarshaller Instance { get; }
    private static DescribeSchemasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeSchemasResponseUnmarshaller GetInstance();
    public static DescribeSchemasResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeTableStatisticsRequestMarshaller : object {
    private static DescribeTableStatisticsRequestMarshaller _instance;
    public static DescribeTableStatisticsRequestMarshaller Instance { get; }
    private static DescribeTableStatisticsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTableStatisticsRequest publicRequest);
    internal static DescribeTableStatisticsRequestMarshaller GetInstance();
    public static DescribeTableStatisticsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DescribeTableStatisticsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTableStatisticsResponseUnmarshaller _instance;
    public static DescribeTableStatisticsResponseUnmarshaller Instance { get; }
    private static DescribeTableStatisticsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTableStatisticsResponseUnmarshaller GetInstance();
    public static DescribeTableStatisticsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DMSEventUnmarshaller : object {
    private static DMSEventUnmarshaller _instance;
    public static DMSEventUnmarshaller Instance { get; }
    private static DMSEventUnmarshaller();
    private sealed virtual override DMSEvent Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DMSEvent,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DMSEvent Unmarshall(JsonUnmarshallerContext context);
    public static DMSEventUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DmsTransferSettingsMarshaller : object {
    public static DmsTransferSettingsMarshaller Instance;
    private static DmsTransferSettingsMarshaller();
    public sealed virtual void Marshall(DmsTransferSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DmsTransferSettingsUnmarshaller : object {
    private static DmsTransferSettingsUnmarshaller _instance;
    public static DmsTransferSettingsUnmarshaller Instance { get; }
    private static DmsTransferSettingsUnmarshaller();
    private sealed virtual override DmsTransferSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DmsTransferSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DmsTransferSettings Unmarshall(JsonUnmarshallerContext context);
    public static DmsTransferSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DocDbDataProviderSettingsMarshaller : object {
    public static DocDbDataProviderSettingsMarshaller Instance;
    private static DocDbDataProviderSettingsMarshaller();
    public sealed virtual void Marshall(DocDbDataProviderSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DocDbDataProviderSettingsUnmarshaller : object {
    private static DocDbDataProviderSettingsUnmarshaller _instance;
    public static DocDbDataProviderSettingsUnmarshaller Instance { get; }
    private static DocDbDataProviderSettingsUnmarshaller();
    private sealed virtual override DocDbDataProviderSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DocDbDataProviderSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocDbDataProviderSettings Unmarshall(JsonUnmarshallerContext context);
    public static DocDbDataProviderSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DocDbSettingsMarshaller : object {
    public static DocDbSettingsMarshaller Instance;
    private static DocDbSettingsMarshaller();
    public sealed virtual void Marshall(DocDbSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DocDbSettingsUnmarshaller : object {
    private static DocDbSettingsUnmarshaller _instance;
    public static DocDbSettingsUnmarshaller Instance { get; }
    private static DocDbSettingsUnmarshaller();
    private sealed virtual override DocDbSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DocDbSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DocDbSettings Unmarshall(JsonUnmarshallerContext context);
    public static DocDbSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DynamoDbSettingsMarshaller : object {
    public static DynamoDbSettingsMarshaller Instance;
    private static DynamoDbSettingsMarshaller();
    public sealed virtual void Marshall(DynamoDbSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.DynamoDbSettingsUnmarshaller : object {
    private static DynamoDbSettingsUnmarshaller _instance;
    public static DynamoDbSettingsUnmarshaller Instance { get; }
    private static DynamoDbSettingsUnmarshaller();
    private sealed virtual override DynamoDbSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.DynamoDbSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DynamoDbSettings Unmarshall(JsonUnmarshallerContext context);
    public static DynamoDbSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ElasticsearchSettingsMarshaller : object {
    public static ElasticsearchSettingsMarshaller Instance;
    private static ElasticsearchSettingsMarshaller();
    public sealed virtual void Marshall(ElasticsearchSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ElasticsearchSettingsUnmarshaller : object {
    private static ElasticsearchSettingsUnmarshaller _instance;
    public static ElasticsearchSettingsUnmarshaller Instance { get; }
    private static ElasticsearchSettingsUnmarshaller();
    private sealed virtual override ElasticsearchSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ElasticsearchSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ElasticsearchSettings Unmarshall(JsonUnmarshallerContext context);
    public static ElasticsearchSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.EndpointSettingUnmarshaller : object {
    private static EndpointSettingUnmarshaller _instance;
    public static EndpointSettingUnmarshaller Instance { get; }
    private static EndpointSettingUnmarshaller();
    private sealed virtual override EndpointSetting Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.EndpointSetting,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EndpointSetting Unmarshall(JsonUnmarshallerContext context);
    public static EndpointSettingUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.EndpointUnmarshaller : object {
    private static EndpointUnmarshaller _instance;
    public static EndpointUnmarshaller Instance { get; }
    private static EndpointUnmarshaller();
    private sealed virtual override Endpoint Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.Endpoint,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Endpoint Unmarshall(JsonUnmarshallerContext context);
    public static EndpointUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.EngineVersionUnmarshaller : object {
    private static EngineVersionUnmarshaller _instance;
    public static EngineVersionUnmarshaller Instance { get; }
    private static EngineVersionUnmarshaller();
    private sealed virtual override EngineVersion Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.EngineVersion,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EngineVersion Unmarshall(JsonUnmarshallerContext context);
    public static EngineVersionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ErrorDetailsUnmarshaller : object {
    private static ErrorDetailsUnmarshaller _instance;
    public static ErrorDetailsUnmarshaller Instance { get; }
    private static ErrorDetailsUnmarshaller();
    private sealed virtual override ErrorDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ErrorDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ErrorDetails Unmarshall(JsonUnmarshallerContext context);
    public static ErrorDetailsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.EventCategoryGroupUnmarshaller : object {
    private static EventCategoryGroupUnmarshaller _instance;
    public static EventCategoryGroupUnmarshaller Instance { get; }
    private static EventCategoryGroupUnmarshaller();
    private sealed virtual override EventCategoryGroup Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.EventCategoryGroup,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventCategoryGroup Unmarshall(JsonUnmarshallerContext context);
    public static EventCategoryGroupUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.EventSubscriptionUnmarshaller : object {
    private static EventSubscriptionUnmarshaller _instance;
    public static EventSubscriptionUnmarshaller Instance { get; }
    private static EventSubscriptionUnmarshaller();
    private sealed virtual override EventSubscription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.EventSubscription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EventSubscription Unmarshall(JsonUnmarshallerContext context);
    public static EventSubscriptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ExportMetadataModelAssessmentRequestMarshaller : object {
    private static ExportMetadataModelAssessmentRequestMarshaller _instance;
    public static ExportMetadataModelAssessmentRequestMarshaller Instance { get; }
    private static ExportMetadataModelAssessmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExportMetadataModelAssessmentRequest publicRequest);
    internal static ExportMetadataModelAssessmentRequestMarshaller GetInstance();
    public static ExportMetadataModelAssessmentRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ExportMetadataModelAssessmentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ExportMetadataModelAssessmentResponseUnmarshaller _instance;
    public static ExportMetadataModelAssessmentResponseUnmarshaller Instance { get; }
    private static ExportMetadataModelAssessmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExportMetadataModelAssessmentResponseUnmarshaller GetInstance();
    public static ExportMetadataModelAssessmentResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ExportMetadataModelAssessmentResultEntryUnmarshaller : object {
    private static ExportMetadataModelAssessmentResultEntryUnmarshaller _instance;
    public static ExportMetadataModelAssessmentResultEntryUnmarshaller Instance { get; }
    private static ExportMetadataModelAssessmentResultEntryUnmarshaller();
    private sealed virtual override ExportMetadataModelAssessmentResultEntry Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ExportMetadataModelAssessmentResultEntry,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportMetadataModelAssessmentResultEntry Unmarshall(JsonUnmarshallerContext context);
    public static ExportMetadataModelAssessmentResultEntryUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ExportSqlDetailsUnmarshaller : object {
    private static ExportSqlDetailsUnmarshaller _instance;
    public static ExportSqlDetailsUnmarshaller Instance { get; }
    private static ExportSqlDetailsUnmarshaller();
    private sealed virtual override ExportSqlDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ExportSqlDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportSqlDetails Unmarshall(JsonUnmarshallerContext context);
    public static ExportSqlDetailsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.FilterMarshaller : object {
    public static FilterMarshaller Instance;
    private static FilterMarshaller();
    public sealed virtual void Marshall(Filter requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.FleetAdvisorLsaAnalysisResponseUnmarshaller : object {
    private static FleetAdvisorLsaAnalysisResponseUnmarshaller _instance;
    public static FleetAdvisorLsaAnalysisResponseUnmarshaller Instance { get; }
    private static FleetAdvisorLsaAnalysisResponseUnmarshaller();
    private sealed virtual override FleetAdvisorLsaAnalysisResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.FleetAdvisorLsaAnalysisResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FleetAdvisorLsaAnalysisResponse Unmarshall(JsonUnmarshallerContext context);
    public static FleetAdvisorLsaAnalysisResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.FleetAdvisorSchemaObjectResponseUnmarshaller : object {
    private static FleetAdvisorSchemaObjectResponseUnmarshaller _instance;
    public static FleetAdvisorSchemaObjectResponseUnmarshaller Instance { get; }
    private static FleetAdvisorSchemaObjectResponseUnmarshaller();
    private sealed virtual override FleetAdvisorSchemaObjectResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.FleetAdvisorSchemaObjectResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FleetAdvisorSchemaObjectResponse Unmarshall(JsonUnmarshallerContext context);
    public static FleetAdvisorSchemaObjectResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.GcpMySQLSettingsMarshaller : object {
    public static GcpMySQLSettingsMarshaller Instance;
    private static GcpMySQLSettingsMarshaller();
    public sealed virtual void Marshall(GcpMySQLSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.GcpMySQLSettingsUnmarshaller : object {
    private static GcpMySQLSettingsUnmarshaller _instance;
    public static GcpMySQLSettingsUnmarshaller Instance { get; }
    private static GcpMySQLSettingsUnmarshaller();
    private sealed virtual override GcpMySQLSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.GcpMySQLSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GcpMySQLSettings Unmarshall(JsonUnmarshallerContext context);
    public static GcpMySQLSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.IBMDb2SettingsMarshaller : object {
    public static IBMDb2SettingsMarshaller Instance;
    private static IBMDb2SettingsMarshaller();
    public sealed virtual void Marshall(IBMDb2Settings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.IBMDb2SettingsUnmarshaller : object {
    private static IBMDb2SettingsUnmarshaller _instance;
    public static IBMDb2SettingsUnmarshaller Instance { get; }
    private static IBMDb2SettingsUnmarshaller();
    private sealed virtual override IBMDb2Settings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.IBMDb2Settings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IBMDb2Settings Unmarshall(JsonUnmarshallerContext context);
    public static IBMDb2SettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller : object {
    private static ImportCertificateRequestMarshaller _instance;
    public static ImportCertificateRequestMarshaller Instance { get; }
    private static ImportCertificateRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportCertificateRequest publicRequest);
    internal static ImportCertificateRequestMarshaller GetInstance();
    public static ImportCertificateRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ImportCertificateResponseUnmarshaller _instance;
    public static ImportCertificateResponseUnmarshaller Instance { get; }
    private static ImportCertificateResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportCertificateResponseUnmarshaller GetInstance();
    public static ImportCertificateResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.InstanceProfileUnmarshaller : object {
    private static InstanceProfileUnmarshaller _instance;
    public static InstanceProfileUnmarshaller Instance { get; }
    private static InstanceProfileUnmarshaller();
    private sealed virtual override InstanceProfile Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.InstanceProfile,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InstanceProfile Unmarshall(JsonUnmarshallerContext context);
    public static InstanceProfileUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.InsufficientResourceCapacityExceptionUnmarshaller : object {
    private static InsufficientResourceCapacityExceptionUnmarshaller _instance;
    public static InsufficientResourceCapacityExceptionUnmarshaller Instance { get; }
    private static InsufficientResourceCapacityExceptionUnmarshaller();
    public sealed virtual InsufficientResourceCapacityException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InsufficientResourceCapacityException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientResourceCapacityExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.InvalidCertificateExceptionUnmarshaller : object {
    private static InvalidCertificateExceptionUnmarshaller _instance;
    public static InvalidCertificateExceptionUnmarshaller Instance { get; }
    private static InvalidCertificateExceptionUnmarshaller();
    public sealed virtual InvalidCertificateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidCertificateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidCertificateExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.InvalidOperationExceptionUnmarshaller : object {
    private static InvalidOperationExceptionUnmarshaller _instance;
    public static InvalidOperationExceptionUnmarshaller Instance { get; }
    private static InvalidOperationExceptionUnmarshaller();
    public sealed virtual InvalidOperationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidOperationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidOperationExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.InvalidResourceStateExceptionUnmarshaller : object {
    private static InvalidResourceStateExceptionUnmarshaller _instance;
    public static InvalidResourceStateExceptionUnmarshaller Instance { get; }
    private static InvalidResourceStateExceptionUnmarshaller();
    public sealed virtual InvalidResourceStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidResourceStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidResourceStateExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller : object {
    private static InvalidSubnetExceptionUnmarshaller _instance;
    public static InvalidSubnetExceptionUnmarshaller Instance { get; }
    private static InvalidSubnetExceptionUnmarshaller();
    public sealed virtual InvalidSubnetException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidSubnetException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidSubnetExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.InventoryDataUnmarshaller : object {
    private static InventoryDataUnmarshaller _instance;
    public static InventoryDataUnmarshaller Instance { get; }
    private static InventoryDataUnmarshaller();
    private sealed virtual override InventoryData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.InventoryData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InventoryData Unmarshall(JsonUnmarshallerContext context);
    public static InventoryDataUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KafkaSettingsMarshaller : object {
    public static KafkaSettingsMarshaller Instance;
    private static KafkaSettingsMarshaller();
    public sealed virtual void Marshall(KafkaSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KafkaSettingsUnmarshaller : object {
    private static KafkaSettingsUnmarshaller _instance;
    public static KafkaSettingsUnmarshaller Instance { get; }
    private static KafkaSettingsUnmarshaller();
    private sealed virtual override KafkaSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.KafkaSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KafkaSettings Unmarshall(JsonUnmarshallerContext context);
    public static KafkaSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KinesisSettingsMarshaller : object {
    public static KinesisSettingsMarshaller Instance;
    private static KinesisSettingsMarshaller();
    public sealed virtual void Marshall(KinesisSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KinesisSettingsUnmarshaller : object {
    private static KinesisSettingsUnmarshaller _instance;
    public static KinesisSettingsUnmarshaller Instance { get; }
    private static KinesisSettingsUnmarshaller();
    private sealed virtual override KinesisSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.KinesisSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KinesisSettings Unmarshall(JsonUnmarshallerContext context);
    public static KinesisSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KMSAccessDeniedExceptionUnmarshaller : object {
    private static KMSAccessDeniedExceptionUnmarshaller _instance;
    public static KMSAccessDeniedExceptionUnmarshaller Instance { get; }
    private static KMSAccessDeniedExceptionUnmarshaller();
    public sealed virtual KMSAccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSAccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSAccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KMSDisabledExceptionUnmarshaller : object {
    private static KMSDisabledExceptionUnmarshaller _instance;
    public static KMSDisabledExceptionUnmarshaller Instance { get; }
    private static KMSDisabledExceptionUnmarshaller();
    public sealed virtual KMSDisabledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSDisabledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSDisabledExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KMSExceptionUnmarshaller : object {
    private static KMSExceptionUnmarshaller _instance;
    public static KMSExceptionUnmarshaller Instance { get; }
    private static KMSExceptionUnmarshaller();
    public sealed virtual KMSException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KMSInvalidStateExceptionUnmarshaller : object {
    private static KMSInvalidStateExceptionUnmarshaller _instance;
    public static KMSInvalidStateExceptionUnmarshaller Instance { get; }
    private static KMSInvalidStateExceptionUnmarshaller();
    public sealed virtual KMSInvalidStateException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSInvalidStateException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSInvalidStateExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KMSKeyNotAccessibleExceptionUnmarshaller : object {
    private static KMSKeyNotAccessibleExceptionUnmarshaller _instance;
    public static KMSKeyNotAccessibleExceptionUnmarshaller Instance { get; }
    private static KMSKeyNotAccessibleExceptionUnmarshaller();
    public sealed virtual KMSKeyNotAccessibleException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSKeyNotAccessibleException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSKeyNotAccessibleExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KMSNotFoundExceptionUnmarshaller : object {
    private static KMSNotFoundExceptionUnmarshaller _instance;
    public static KMSNotFoundExceptionUnmarshaller Instance { get; }
    private static KMSNotFoundExceptionUnmarshaller();
    public sealed virtual KMSNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.KMSThrottlingExceptionUnmarshaller : object {
    private static KMSThrottlingExceptionUnmarshaller _instance;
    public static KMSThrottlingExceptionUnmarshaller Instance { get; }
    private static KMSThrottlingExceptionUnmarshaller();
    public sealed virtual KMSThrottlingException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual KMSThrottlingException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static KMSThrottlingExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.LimitationUnmarshaller : object {
    private static LimitationUnmarshaller _instance;
    public static LimitationUnmarshaller Instance { get; }
    private static LimitationUnmarshaller();
    private sealed virtual override Limitation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.Limitation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Limitation Unmarshall(JsonUnmarshallerContext context);
    public static LimitationUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller : object {
    private static ListTagsForResourceRequestMarshaller _instance;
    public static ListTagsForResourceRequestMarshaller Instance { get; }
    private static ListTagsForResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForResourceRequest publicRequest);
    internal static ListTagsForResourceRequestMarshaller GetInstance();
    public static ListTagsForResourceRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForResourceResponseUnmarshaller _instance;
    public static ListTagsForResourceResponseUnmarshaller Instance { get; }
    private static ListTagsForResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForResourceResponseUnmarshaller GetInstance();
    public static ListTagsForResourceResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MariaDbDataProviderSettingsMarshaller : object {
    public static MariaDbDataProviderSettingsMarshaller Instance;
    private static MariaDbDataProviderSettingsMarshaller();
    public sealed virtual void Marshall(MariaDbDataProviderSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MariaDbDataProviderSettingsUnmarshaller : object {
    private static MariaDbDataProviderSettingsUnmarshaller _instance;
    public static MariaDbDataProviderSettingsUnmarshaller Instance { get; }
    private static MariaDbDataProviderSettingsUnmarshaller();
    private sealed virtual override MariaDbDataProviderSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.MariaDbDataProviderSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MariaDbDataProviderSettings Unmarshall(JsonUnmarshallerContext context);
    public static MariaDbDataProviderSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MicrosoftSqlServerDataProviderSettingsMarshaller : object {
    public static MicrosoftSqlServerDataProviderSettingsMarshaller Instance;
    private static MicrosoftSqlServerDataProviderSettingsMarshaller();
    public sealed virtual void Marshall(MicrosoftSqlServerDataProviderSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MicrosoftSqlServerDataProviderSettingsUnmarshaller : object {
    private static MicrosoftSqlServerDataProviderSettingsUnmarshaller _instance;
    public static MicrosoftSqlServerDataProviderSettingsUnmarshaller Instance { get; }
    private static MicrosoftSqlServerDataProviderSettingsUnmarshaller();
    private sealed virtual override MicrosoftSqlServerDataProviderSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.MicrosoftSqlServerDataProviderSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MicrosoftSqlServerDataProviderSettings Unmarshall(JsonUnmarshallerContext context);
    public static MicrosoftSqlServerDataProviderSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MicrosoftSQLServerSettingsMarshaller : object {
    public static MicrosoftSQLServerSettingsMarshaller Instance;
    private static MicrosoftSQLServerSettingsMarshaller();
    public sealed virtual void Marshall(MicrosoftSQLServerSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MicrosoftSQLServerSettingsUnmarshaller : object {
    private static MicrosoftSQLServerSettingsUnmarshaller _instance;
    public static MicrosoftSQLServerSettingsUnmarshaller Instance { get; }
    private static MicrosoftSQLServerSettingsUnmarshaller();
    private sealed virtual override MicrosoftSQLServerSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.MicrosoftSQLServerSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MicrosoftSQLServerSettings Unmarshall(JsonUnmarshallerContext context);
    public static MicrosoftSQLServerSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MigrationProjectUnmarshaller : object {
    private static MigrationProjectUnmarshaller _instance;
    public static MigrationProjectUnmarshaller Instance { get; }
    private static MigrationProjectUnmarshaller();
    private sealed virtual override MigrationProject Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.MigrationProject,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MigrationProject Unmarshall(JsonUnmarshallerContext context);
    public static MigrationProjectUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyConversionConfigurationRequestMarshaller : object {
    private static ModifyConversionConfigurationRequestMarshaller _instance;
    public static ModifyConversionConfigurationRequestMarshaller Instance { get; }
    private static ModifyConversionConfigurationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyConversionConfigurationRequest publicRequest);
    internal static ModifyConversionConfigurationRequestMarshaller GetInstance();
    public static ModifyConversionConfigurationRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyConversionConfigurationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyConversionConfigurationResponseUnmarshaller _instance;
    public static ModifyConversionConfigurationResponseUnmarshaller Instance { get; }
    private static ModifyConversionConfigurationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyConversionConfigurationResponseUnmarshaller GetInstance();
    public static ModifyConversionConfigurationResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyDataProviderRequestMarshaller : object {
    private static ModifyDataProviderRequestMarshaller _instance;
    public static ModifyDataProviderRequestMarshaller Instance { get; }
    private static ModifyDataProviderRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyDataProviderRequest publicRequest);
    internal static ModifyDataProviderRequestMarshaller GetInstance();
    public static ModifyDataProviderRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyDataProviderResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyDataProviderResponseUnmarshaller _instance;
    public static ModifyDataProviderResponseUnmarshaller Instance { get; }
    private static ModifyDataProviderResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyDataProviderResponseUnmarshaller GetInstance();
    public static ModifyDataProviderResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyEndpointRequestMarshaller : object {
    private static ModifyEndpointRequestMarshaller _instance;
    public static ModifyEndpointRequestMarshaller Instance { get; }
    private static ModifyEndpointRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyEndpointRequest publicRequest);
    internal static ModifyEndpointRequestMarshaller GetInstance();
    public static ModifyEndpointRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyEndpointResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyEndpointResponseUnmarshaller _instance;
    public static ModifyEndpointResponseUnmarshaller Instance { get; }
    private static ModifyEndpointResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyEndpointResponseUnmarshaller GetInstance();
    public static ModifyEndpointResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyEventSubscriptionRequestMarshaller : object {
    private static ModifyEventSubscriptionRequestMarshaller _instance;
    public static ModifyEventSubscriptionRequestMarshaller Instance { get; }
    private static ModifyEventSubscriptionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyEventSubscriptionRequest publicRequest);
    internal static ModifyEventSubscriptionRequestMarshaller GetInstance();
    public static ModifyEventSubscriptionRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyEventSubscriptionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyEventSubscriptionResponseUnmarshaller _instance;
    public static ModifyEventSubscriptionResponseUnmarshaller Instance { get; }
    private static ModifyEventSubscriptionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyEventSubscriptionResponseUnmarshaller GetInstance();
    public static ModifyEventSubscriptionResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyInstanceProfileRequestMarshaller : object {
    private static ModifyInstanceProfileRequestMarshaller _instance;
    public static ModifyInstanceProfileRequestMarshaller Instance { get; }
    private static ModifyInstanceProfileRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyInstanceProfileRequest publicRequest);
    internal static ModifyInstanceProfileRequestMarshaller GetInstance();
    public static ModifyInstanceProfileRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyInstanceProfileResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyInstanceProfileResponseUnmarshaller _instance;
    public static ModifyInstanceProfileResponseUnmarshaller Instance { get; }
    private static ModifyInstanceProfileResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyInstanceProfileResponseUnmarshaller GetInstance();
    public static ModifyInstanceProfileResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyMigrationProjectRequestMarshaller : object {
    private static ModifyMigrationProjectRequestMarshaller _instance;
    public static ModifyMigrationProjectRequestMarshaller Instance { get; }
    private static ModifyMigrationProjectRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyMigrationProjectRequest publicRequest);
    internal static ModifyMigrationProjectRequestMarshaller GetInstance();
    public static ModifyMigrationProjectRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyMigrationProjectResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyMigrationProjectResponseUnmarshaller _instance;
    public static ModifyMigrationProjectResponseUnmarshaller Instance { get; }
    private static ModifyMigrationProjectResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyMigrationProjectResponseUnmarshaller GetInstance();
    public static ModifyMigrationProjectResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyReplicationConfigRequestMarshaller : object {
    private static ModifyReplicationConfigRequestMarshaller _instance;
    public static ModifyReplicationConfigRequestMarshaller Instance { get; }
    private static ModifyReplicationConfigRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyReplicationConfigRequest publicRequest);
    internal static ModifyReplicationConfigRequestMarshaller GetInstance();
    public static ModifyReplicationConfigRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyReplicationConfigResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyReplicationConfigResponseUnmarshaller _instance;
    public static ModifyReplicationConfigResponseUnmarshaller Instance { get; }
    private static ModifyReplicationConfigResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyReplicationConfigResponseUnmarshaller GetInstance();
    public static ModifyReplicationConfigResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyReplicationInstanceRequestMarshaller : object {
    private static ModifyReplicationInstanceRequestMarshaller _instance;
    public static ModifyReplicationInstanceRequestMarshaller Instance { get; }
    private static ModifyReplicationInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyReplicationInstanceRequest publicRequest);
    internal static ModifyReplicationInstanceRequestMarshaller GetInstance();
    public static ModifyReplicationInstanceRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyReplicationInstanceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyReplicationInstanceResponseUnmarshaller _instance;
    public static ModifyReplicationInstanceResponseUnmarshaller Instance { get; }
    private static ModifyReplicationInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyReplicationInstanceResponseUnmarshaller GetInstance();
    public static ModifyReplicationInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyReplicationSubnetGroupRequestMarshaller : object {
    private static ModifyReplicationSubnetGroupRequestMarshaller _instance;
    public static ModifyReplicationSubnetGroupRequestMarshaller Instance { get; }
    private static ModifyReplicationSubnetGroupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyReplicationSubnetGroupRequest publicRequest);
    internal static ModifyReplicationSubnetGroupRequestMarshaller GetInstance();
    public static ModifyReplicationSubnetGroupRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyReplicationSubnetGroupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyReplicationSubnetGroupResponseUnmarshaller _instance;
    public static ModifyReplicationSubnetGroupResponseUnmarshaller Instance { get; }
    private static ModifyReplicationSubnetGroupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyReplicationSubnetGroupResponseUnmarshaller GetInstance();
    public static ModifyReplicationSubnetGroupResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyReplicationTaskRequestMarshaller : object {
    private static ModifyReplicationTaskRequestMarshaller _instance;
    public static ModifyReplicationTaskRequestMarshaller Instance { get; }
    private static ModifyReplicationTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ModifyReplicationTaskRequest publicRequest);
    internal static ModifyReplicationTaskRequestMarshaller GetInstance();
    public static ModifyReplicationTaskRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ModifyReplicationTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ModifyReplicationTaskResponseUnmarshaller _instance;
    public static ModifyReplicationTaskResponseUnmarshaller Instance { get; }
    private static ModifyReplicationTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ModifyReplicationTaskResponseUnmarshaller GetInstance();
    public static ModifyReplicationTaskResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MongoDbDataProviderSettingsMarshaller : object {
    public static MongoDbDataProviderSettingsMarshaller Instance;
    private static MongoDbDataProviderSettingsMarshaller();
    public sealed virtual void Marshall(MongoDbDataProviderSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MongoDbDataProviderSettingsUnmarshaller : object {
    private static MongoDbDataProviderSettingsUnmarshaller _instance;
    public static MongoDbDataProviderSettingsUnmarshaller Instance { get; }
    private static MongoDbDataProviderSettingsUnmarshaller();
    private sealed virtual override MongoDbDataProviderSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.MongoDbDataProviderSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MongoDbDataProviderSettings Unmarshall(JsonUnmarshallerContext context);
    public static MongoDbDataProviderSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MongoDbSettingsMarshaller : object {
    public static MongoDbSettingsMarshaller Instance;
    private static MongoDbSettingsMarshaller();
    public sealed virtual void Marshall(MongoDbSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MongoDbSettingsUnmarshaller : object {
    private static MongoDbSettingsUnmarshaller _instance;
    public static MongoDbSettingsUnmarshaller Instance { get; }
    private static MongoDbSettingsUnmarshaller();
    private sealed virtual override MongoDbSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.MongoDbSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MongoDbSettings Unmarshall(JsonUnmarshallerContext context);
    public static MongoDbSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MoveReplicationTaskRequestMarshaller : object {
    private static MoveReplicationTaskRequestMarshaller _instance;
    public static MoveReplicationTaskRequestMarshaller Instance { get; }
    private static MoveReplicationTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(MoveReplicationTaskRequest publicRequest);
    internal static MoveReplicationTaskRequestMarshaller GetInstance();
    public static MoveReplicationTaskRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MoveReplicationTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static MoveReplicationTaskResponseUnmarshaller _instance;
    public static MoveReplicationTaskResponseUnmarshaller Instance { get; }
    private static MoveReplicationTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static MoveReplicationTaskResponseUnmarshaller GetInstance();
    public static MoveReplicationTaskResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MySqlDataProviderSettingsMarshaller : object {
    public static MySqlDataProviderSettingsMarshaller Instance;
    private static MySqlDataProviderSettingsMarshaller();
    public sealed virtual void Marshall(MySqlDataProviderSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MySqlDataProviderSettingsUnmarshaller : object {
    private static MySqlDataProviderSettingsUnmarshaller _instance;
    public static MySqlDataProviderSettingsUnmarshaller Instance { get; }
    private static MySqlDataProviderSettingsUnmarshaller();
    private sealed virtual override MySqlDataProviderSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.MySqlDataProviderSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MySqlDataProviderSettings Unmarshall(JsonUnmarshallerContext context);
    public static MySqlDataProviderSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MySQLSettingsMarshaller : object {
    public static MySQLSettingsMarshaller Instance;
    private static MySQLSettingsMarshaller();
    public sealed virtual void Marshall(MySQLSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.MySQLSettingsUnmarshaller : object {
    private static MySQLSettingsUnmarshaller _instance;
    public static MySQLSettingsUnmarshaller Instance { get; }
    private static MySQLSettingsUnmarshaller();
    private sealed virtual override MySQLSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.MySQLSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual MySQLSettings Unmarshall(JsonUnmarshallerContext context);
    public static MySQLSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.NeptuneSettingsMarshaller : object {
    public static NeptuneSettingsMarshaller Instance;
    private static NeptuneSettingsMarshaller();
    public sealed virtual void Marshall(NeptuneSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.NeptuneSettingsUnmarshaller : object {
    private static NeptuneSettingsUnmarshaller _instance;
    public static NeptuneSettingsUnmarshaller Instance { get; }
    private static NeptuneSettingsUnmarshaller();
    private sealed virtual override NeptuneSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.NeptuneSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual NeptuneSettings Unmarshall(JsonUnmarshallerContext context);
    public static NeptuneSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.OracleDataProviderSettingsMarshaller : object {
    public static OracleDataProviderSettingsMarshaller Instance;
    private static OracleDataProviderSettingsMarshaller();
    public sealed virtual void Marshall(OracleDataProviderSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.OracleDataProviderSettingsUnmarshaller : object {
    private static OracleDataProviderSettingsUnmarshaller _instance;
    public static OracleDataProviderSettingsUnmarshaller Instance { get; }
    private static OracleDataProviderSettingsUnmarshaller();
    private sealed virtual override OracleDataProviderSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.OracleDataProviderSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OracleDataProviderSettings Unmarshall(JsonUnmarshallerContext context);
    public static OracleDataProviderSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.OracleSettingsMarshaller : object {
    public static OracleSettingsMarshaller Instance;
    private static OracleSettingsMarshaller();
    public sealed virtual void Marshall(OracleSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.OracleSettingsUnmarshaller : object {
    private static OracleSettingsUnmarshaller _instance;
    public static OracleSettingsUnmarshaller Instance { get; }
    private static OracleSettingsUnmarshaller();
    private sealed virtual override OracleSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.OracleSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OracleSettings Unmarshall(JsonUnmarshallerContext context);
    public static OracleSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.OrderableReplicationInstanceUnmarshaller : object {
    private static OrderableReplicationInstanceUnmarshaller _instance;
    public static OrderableReplicationInstanceUnmarshaller Instance { get; }
    private static OrderableReplicationInstanceUnmarshaller();
    private sealed virtual override OrderableReplicationInstance Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.OrderableReplicationInstance,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OrderableReplicationInstance Unmarshall(JsonUnmarshallerContext context);
    public static OrderableReplicationInstanceUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.PendingMaintenanceActionUnmarshaller : object {
    private static PendingMaintenanceActionUnmarshaller _instance;
    public static PendingMaintenanceActionUnmarshaller Instance { get; }
    private static PendingMaintenanceActionUnmarshaller();
    private sealed virtual override PendingMaintenanceAction Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.PendingMaintenanceAction,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PendingMaintenanceAction Unmarshall(JsonUnmarshallerContext context);
    public static PendingMaintenanceActionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.PostgreSqlDataProviderSettingsMarshaller : object {
    public static PostgreSqlDataProviderSettingsMarshaller Instance;
    private static PostgreSqlDataProviderSettingsMarshaller();
    public sealed virtual void Marshall(PostgreSqlDataProviderSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.PostgreSqlDataProviderSettingsUnmarshaller : object {
    private static PostgreSqlDataProviderSettingsUnmarshaller _instance;
    public static PostgreSqlDataProviderSettingsUnmarshaller Instance { get; }
    private static PostgreSqlDataProviderSettingsUnmarshaller();
    private sealed virtual override PostgreSqlDataProviderSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.PostgreSqlDataProviderSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PostgreSqlDataProviderSettings Unmarshall(JsonUnmarshallerContext context);
    public static PostgreSqlDataProviderSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.PostgreSQLSettingsMarshaller : object {
    public static PostgreSQLSettingsMarshaller Instance;
    private static PostgreSQLSettingsMarshaller();
    public sealed virtual void Marshall(PostgreSQLSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.PostgreSQLSettingsUnmarshaller : object {
    private static PostgreSQLSettingsUnmarshaller _instance;
    public static PostgreSQLSettingsUnmarshaller Instance { get; }
    private static PostgreSQLSettingsUnmarshaller();
    private sealed virtual override PostgreSQLSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.PostgreSQLSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PostgreSQLSettings Unmarshall(JsonUnmarshallerContext context);
    public static PostgreSQLSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ProvisionDataUnmarshaller : object {
    private static ProvisionDataUnmarshaller _instance;
    public static ProvisionDataUnmarshaller Instance { get; }
    private static ProvisionDataUnmarshaller();
    private sealed virtual override ProvisionData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ProvisionData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProvisionData Unmarshall(JsonUnmarshallerContext context);
    public static ProvisionDataUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RdsConfigurationUnmarshaller : object {
    private static RdsConfigurationUnmarshaller _instance;
    public static RdsConfigurationUnmarshaller Instance { get; }
    private static RdsConfigurationUnmarshaller();
    private sealed virtual override RdsConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.RdsConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RdsConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static RdsConfigurationUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RdsRecommendationUnmarshaller : object {
    private static RdsRecommendationUnmarshaller _instance;
    public static RdsRecommendationUnmarshaller Instance { get; }
    private static RdsRecommendationUnmarshaller();
    private sealed virtual override RdsRecommendation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.RdsRecommendation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RdsRecommendation Unmarshall(JsonUnmarshallerContext context);
    public static RdsRecommendationUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RdsRequirementsUnmarshaller : object {
    private static RdsRequirementsUnmarshaller _instance;
    public static RdsRequirementsUnmarshaller Instance { get; }
    private static RdsRequirementsUnmarshaller();
    private sealed virtual override RdsRequirements Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.RdsRequirements,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RdsRequirements Unmarshall(JsonUnmarshallerContext context);
    public static RdsRequirementsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RebootReplicationInstanceRequestMarshaller : object {
    private static RebootReplicationInstanceRequestMarshaller _instance;
    public static RebootReplicationInstanceRequestMarshaller Instance { get; }
    private static RebootReplicationInstanceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RebootReplicationInstanceRequest publicRequest);
    internal static RebootReplicationInstanceRequestMarshaller GetInstance();
    public static RebootReplicationInstanceRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RebootReplicationInstanceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RebootReplicationInstanceResponseUnmarshaller _instance;
    public static RebootReplicationInstanceResponseUnmarshaller Instance { get; }
    private static RebootReplicationInstanceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RebootReplicationInstanceResponseUnmarshaller GetInstance();
    public static RebootReplicationInstanceResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RecommendationDataUnmarshaller : object {
    private static RecommendationDataUnmarshaller _instance;
    public static RecommendationDataUnmarshaller Instance { get; }
    private static RecommendationDataUnmarshaller();
    private sealed virtual override RecommendationData Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.RecommendationData,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecommendationData Unmarshall(JsonUnmarshallerContext context);
    public static RecommendationDataUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RecommendationSettingsMarshaller : object {
    public static RecommendationSettingsMarshaller Instance;
    private static RecommendationSettingsMarshaller();
    public sealed virtual void Marshall(RecommendationSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RecommendationSettingsUnmarshaller : object {
    private static RecommendationSettingsUnmarshaller _instance;
    public static RecommendationSettingsUnmarshaller Instance { get; }
    private static RecommendationSettingsUnmarshaller();
    private sealed virtual override RecommendationSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.RecommendationSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RecommendationSettings Unmarshall(JsonUnmarshallerContext context);
    public static RecommendationSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RecommendationUnmarshaller : object {
    private static RecommendationUnmarshaller _instance;
    public static RecommendationUnmarshaller Instance { get; }
    private static RecommendationUnmarshaller();
    private sealed virtual override Recommendation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.Recommendation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Recommendation Unmarshall(JsonUnmarshallerContext context);
    public static RecommendationUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RedisSettingsMarshaller : object {
    public static RedisSettingsMarshaller Instance;
    private static RedisSettingsMarshaller();
    public sealed virtual void Marshall(RedisSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RedisSettingsUnmarshaller : object {
    private static RedisSettingsUnmarshaller _instance;
    public static RedisSettingsUnmarshaller Instance { get; }
    private static RedisSettingsUnmarshaller();
    private sealed virtual override RedisSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.RedisSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RedisSettings Unmarshall(JsonUnmarshallerContext context);
    public static RedisSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RedshiftDataProviderSettingsMarshaller : object {
    public static RedshiftDataProviderSettingsMarshaller Instance;
    private static RedshiftDataProviderSettingsMarshaller();
    public sealed virtual void Marshall(RedshiftDataProviderSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RedshiftDataProviderSettingsUnmarshaller : object {
    private static RedshiftDataProviderSettingsUnmarshaller _instance;
    public static RedshiftDataProviderSettingsUnmarshaller Instance { get; }
    private static RedshiftDataProviderSettingsUnmarshaller();
    private sealed virtual override RedshiftDataProviderSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.RedshiftDataProviderSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RedshiftDataProviderSettings Unmarshall(JsonUnmarshallerContext context);
    public static RedshiftDataProviderSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RedshiftSettingsMarshaller : object {
    public static RedshiftSettingsMarshaller Instance;
    private static RedshiftSettingsMarshaller();
    public sealed virtual void Marshall(RedshiftSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RedshiftSettingsUnmarshaller : object {
    private static RedshiftSettingsUnmarshaller _instance;
    public static RedshiftSettingsUnmarshaller Instance { get; }
    private static RedshiftSettingsUnmarshaller();
    private sealed virtual override RedshiftSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.RedshiftSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RedshiftSettings Unmarshall(JsonUnmarshallerContext context);
    public static RedshiftSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RefreshSchemasRequestMarshaller : object {
    private static RefreshSchemasRequestMarshaller _instance;
    public static RefreshSchemasRequestMarshaller Instance { get; }
    private static RefreshSchemasRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RefreshSchemasRequest publicRequest);
    internal static RefreshSchemasRequestMarshaller GetInstance();
    public static RefreshSchemasRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RefreshSchemasResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RefreshSchemasResponseUnmarshaller _instance;
    public static RefreshSchemasResponseUnmarshaller Instance { get; }
    private static RefreshSchemasResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RefreshSchemasResponseUnmarshaller GetInstance();
    public static RefreshSchemasResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RefreshSchemasStatusUnmarshaller : object {
    private static RefreshSchemasStatusUnmarshaller _instance;
    public static RefreshSchemasStatusUnmarshaller Instance { get; }
    private static RefreshSchemasStatusUnmarshaller();
    private sealed virtual override RefreshSchemasStatus Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.RefreshSchemasStatus,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RefreshSchemasStatus Unmarshall(JsonUnmarshallerContext context);
    public static RefreshSchemasStatusUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReloadReplicationTablesRequestMarshaller : object {
    private static ReloadReplicationTablesRequestMarshaller _instance;
    public static ReloadReplicationTablesRequestMarshaller Instance { get; }
    private static ReloadReplicationTablesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReloadReplicationTablesRequest publicRequest);
    internal static ReloadReplicationTablesRequestMarshaller GetInstance();
    public static ReloadReplicationTablesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReloadReplicationTablesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ReloadReplicationTablesResponseUnmarshaller _instance;
    public static ReloadReplicationTablesResponseUnmarshaller Instance { get; }
    private static ReloadReplicationTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReloadReplicationTablesResponseUnmarshaller GetInstance();
    public static ReloadReplicationTablesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReloadTablesRequestMarshaller : object {
    private static ReloadTablesRequestMarshaller _instance;
    public static ReloadTablesRequestMarshaller Instance { get; }
    private static ReloadTablesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ReloadTablesRequest publicRequest);
    internal static ReloadTablesRequestMarshaller GetInstance();
    public static ReloadTablesRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReloadTablesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ReloadTablesResponseUnmarshaller _instance;
    public static ReloadTablesResponseUnmarshaller Instance { get; }
    private static ReloadTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ReloadTablesResponseUnmarshaller GetInstance();
    public static ReloadTablesResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller : object {
    private static RemoveTagsFromResourceRequestMarshaller _instance;
    public static RemoveTagsFromResourceRequestMarshaller Instance { get; }
    private static RemoveTagsFromResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTagsFromResourceRequest publicRequest);
    internal static RemoveTagsFromResourceRequestMarshaller GetInstance();
    public static RemoveTagsFromResourceRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveTagsFromResourceResponseUnmarshaller _instance;
    public static RemoveTagsFromResourceResponseUnmarshaller Instance { get; }
    private static RemoveTagsFromResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTagsFromResourceResponseUnmarshaller GetInstance();
    public static RemoveTagsFromResourceResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationConfigUnmarshaller : object {
    private static ReplicationConfigUnmarshaller _instance;
    public static ReplicationConfigUnmarshaller Instance { get; }
    private static ReplicationConfigUnmarshaller();
    private sealed virtual override ReplicationConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationConfig Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationConfigUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationInstanceTaskLogUnmarshaller : object {
    private static ReplicationInstanceTaskLogUnmarshaller _instance;
    public static ReplicationInstanceTaskLogUnmarshaller Instance { get; }
    private static ReplicationInstanceTaskLogUnmarshaller();
    private sealed virtual override ReplicationInstanceTaskLog Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationInstanceTaskLog,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationInstanceTaskLog Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationInstanceTaskLogUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationInstanceUnmarshaller : object {
    private static ReplicationInstanceUnmarshaller _instance;
    public static ReplicationInstanceUnmarshaller Instance { get; }
    private static ReplicationInstanceUnmarshaller();
    private sealed virtual override ReplicationInstance Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationInstance,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationInstance Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationInstanceUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationPendingModifiedValuesUnmarshaller : object {
    private static ReplicationPendingModifiedValuesUnmarshaller _instance;
    public static ReplicationPendingModifiedValuesUnmarshaller Instance { get; }
    private static ReplicationPendingModifiedValuesUnmarshaller();
    private sealed virtual override ReplicationPendingModifiedValues Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationPendingModifiedValues,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationPendingModifiedValues Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationPendingModifiedValuesUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationStatsUnmarshaller : object {
    private static ReplicationStatsUnmarshaller _instance;
    public static ReplicationStatsUnmarshaller Instance { get; }
    private static ReplicationStatsUnmarshaller();
    private sealed virtual override ReplicationStats Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationStats,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationStats Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationStatsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller : object {
    private static ReplicationSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller _instance;
    public static ReplicationSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller Instance { get; }
    private static ReplicationSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller();
    public sealed virtual ReplicationSubnetGroupDoesNotCoverEnoughAZsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ReplicationSubnetGroupDoesNotCoverEnoughAZsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ReplicationSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationSubnetGroupUnmarshaller : object {
    private static ReplicationSubnetGroupUnmarshaller _instance;
    public static ReplicationSubnetGroupUnmarshaller Instance { get; }
    private static ReplicationSubnetGroupUnmarshaller();
    private sealed virtual override ReplicationSubnetGroup Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationSubnetGroup,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationSubnetGroup Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationSubnetGroupUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationTaskAssessmentResultUnmarshaller : object {
    private static ReplicationTaskAssessmentResultUnmarshaller _instance;
    public static ReplicationTaskAssessmentResultUnmarshaller Instance { get; }
    private static ReplicationTaskAssessmentResultUnmarshaller();
    private sealed virtual override ReplicationTaskAssessmentResult Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationTaskAssessmentResult,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationTaskAssessmentResult Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationTaskAssessmentResultUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationTaskAssessmentRunProgressUnmarshaller : object {
    private static ReplicationTaskAssessmentRunProgressUnmarshaller _instance;
    public static ReplicationTaskAssessmentRunProgressUnmarshaller Instance { get; }
    private static ReplicationTaskAssessmentRunProgressUnmarshaller();
    private sealed virtual override ReplicationTaskAssessmentRunProgress Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationTaskAssessmentRunProgress,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationTaskAssessmentRunProgress Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationTaskAssessmentRunProgressUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationTaskAssessmentRunUnmarshaller : object {
    private static ReplicationTaskAssessmentRunUnmarshaller _instance;
    public static ReplicationTaskAssessmentRunUnmarshaller Instance { get; }
    private static ReplicationTaskAssessmentRunUnmarshaller();
    private sealed virtual override ReplicationTaskAssessmentRun Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationTaskAssessmentRun,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationTaskAssessmentRun Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationTaskAssessmentRunUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationTaskIndividualAssessmentUnmarshaller : object {
    private static ReplicationTaskIndividualAssessmentUnmarshaller _instance;
    public static ReplicationTaskIndividualAssessmentUnmarshaller Instance { get; }
    private static ReplicationTaskIndividualAssessmentUnmarshaller();
    private sealed virtual override ReplicationTaskIndividualAssessment Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationTaskIndividualAssessment,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationTaskIndividualAssessment Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationTaskIndividualAssessmentUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationTaskStatsUnmarshaller : object {
    private static ReplicationTaskStatsUnmarshaller _instance;
    public static ReplicationTaskStatsUnmarshaller Instance { get; }
    private static ReplicationTaskStatsUnmarshaller();
    private sealed virtual override ReplicationTaskStats Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationTaskStats,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationTaskStats Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationTaskStatsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationTaskUnmarshaller : object {
    private static ReplicationTaskUnmarshaller _instance;
    public static ReplicationTaskUnmarshaller Instance { get; }
    private static ReplicationTaskUnmarshaller();
    private sealed virtual override ReplicationTask Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ReplicationTask,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicationTask Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationTaskUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ReplicationUnmarshaller : object {
    private static ReplicationUnmarshaller _instance;
    public static ReplicationUnmarshaller Instance { get; }
    private static ReplicationUnmarshaller();
    private sealed virtual override Replication Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.Replication,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Replication Unmarshall(JsonUnmarshallerContext context);
    public static ReplicationUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ResourceAlreadyExistsExceptionUnmarshaller : object {
    private static ResourceAlreadyExistsExceptionUnmarshaller _instance;
    public static ResourceAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ResourceAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ResourceAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ResourcePendingMaintenanceActionsUnmarshaller : object {
    private static ResourcePendingMaintenanceActionsUnmarshaller _instance;
    public static ResourcePendingMaintenanceActionsUnmarshaller Instance { get; }
    private static ResourcePendingMaintenanceActionsUnmarshaller();
    private sealed virtual override ResourcePendingMaintenanceActions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ResourcePendingMaintenanceActions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ResourcePendingMaintenanceActions Unmarshall(JsonUnmarshallerContext context);
    public static ResourcePendingMaintenanceActionsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ResourceQuotaExceededExceptionUnmarshaller : object {
    private static ResourceQuotaExceededExceptionUnmarshaller _instance;
    public static ResourceQuotaExceededExceptionUnmarshaller Instance { get; }
    private static ResourceQuotaExceededExceptionUnmarshaller();
    public sealed virtual ResourceQuotaExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceQuotaExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RunFleetAdvisorLsaAnalysisRequestMarshaller : object {
    private static RunFleetAdvisorLsaAnalysisRequestMarshaller _instance;
    public static RunFleetAdvisorLsaAnalysisRequestMarshaller Instance { get; }
    private static RunFleetAdvisorLsaAnalysisRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RunFleetAdvisorLsaAnalysisRequest publicRequest);
    internal static RunFleetAdvisorLsaAnalysisRequestMarshaller GetInstance();
    public static RunFleetAdvisorLsaAnalysisRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.RunFleetAdvisorLsaAnalysisResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RunFleetAdvisorLsaAnalysisResponseUnmarshaller _instance;
    public static RunFleetAdvisorLsaAnalysisResponseUnmarshaller Instance { get; }
    private static RunFleetAdvisorLsaAnalysisResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RunFleetAdvisorLsaAnalysisResponseUnmarshaller GetInstance();
    public static RunFleetAdvisorLsaAnalysisResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.S3AccessDeniedExceptionUnmarshaller : object {
    private static S3AccessDeniedExceptionUnmarshaller _instance;
    public static S3AccessDeniedExceptionUnmarshaller Instance { get; }
    private static S3AccessDeniedExceptionUnmarshaller();
    public sealed virtual S3AccessDeniedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual S3AccessDeniedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static S3AccessDeniedExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.S3ResourceNotFoundExceptionUnmarshaller : object {
    private static S3ResourceNotFoundExceptionUnmarshaller _instance;
    public static S3ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static S3ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual S3ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual S3ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static S3ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.S3SettingsMarshaller : object {
    public static S3SettingsMarshaller Instance;
    private static S3SettingsMarshaller();
    public sealed virtual void Marshall(S3Settings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.S3SettingsUnmarshaller : object {
    private static S3SettingsUnmarshaller _instance;
    public static S3SettingsUnmarshaller Instance { get; }
    private static S3SettingsUnmarshaller();
    private sealed virtual override S3Settings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.S3Settings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Settings Unmarshall(JsonUnmarshallerContext context);
    public static S3SettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SCApplicationAttributesMarshaller : object {
    public static SCApplicationAttributesMarshaller Instance;
    private static SCApplicationAttributesMarshaller();
    public sealed virtual void Marshall(SCApplicationAttributes requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SCApplicationAttributesUnmarshaller : object {
    private static SCApplicationAttributesUnmarshaller _instance;
    public static SCApplicationAttributesUnmarshaller Instance { get; }
    private static SCApplicationAttributesUnmarshaller();
    private sealed virtual override SCApplicationAttributes Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.SCApplicationAttributes,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SCApplicationAttributes Unmarshall(JsonUnmarshallerContext context);
    public static SCApplicationAttributesUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SchemaConversionRequestUnmarshaller : object {
    private static SchemaConversionRequestUnmarshaller _instance;
    public static SchemaConversionRequestUnmarshaller Instance { get; }
    private static SchemaConversionRequestUnmarshaller();
    private sealed virtual override SchemaConversionRequest Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.SchemaConversionRequest,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaConversionRequest Unmarshall(JsonUnmarshallerContext context);
    public static SchemaConversionRequestUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SchemaResponseUnmarshaller : object {
    private static SchemaResponseUnmarshaller _instance;
    public static SchemaResponseUnmarshaller Instance { get; }
    private static SchemaResponseUnmarshaller();
    private sealed virtual override SchemaResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.SchemaResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaResponse Unmarshall(JsonUnmarshallerContext context);
    public static SchemaResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SchemaShortInfoResponseUnmarshaller : object {
    private static SchemaShortInfoResponseUnmarshaller _instance;
    public static SchemaShortInfoResponseUnmarshaller Instance { get; }
    private static SchemaShortInfoResponseUnmarshaller();
    private sealed virtual override SchemaShortInfoResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.SchemaShortInfoResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SchemaShortInfoResponse Unmarshall(JsonUnmarshallerContext context);
    public static SchemaShortInfoResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.ServerShortInfoResponseUnmarshaller : object {
    private static ServerShortInfoResponseUnmarshaller _instance;
    public static ServerShortInfoResponseUnmarshaller Instance { get; }
    private static ServerShortInfoResponseUnmarshaller();
    private sealed virtual override ServerShortInfoResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.ServerShortInfoResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ServerShortInfoResponse Unmarshall(JsonUnmarshallerContext context);
    public static ServerShortInfoResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SNSInvalidTopicExceptionUnmarshaller : object {
    private static SNSInvalidTopicExceptionUnmarshaller _instance;
    public static SNSInvalidTopicExceptionUnmarshaller Instance { get; }
    private static SNSInvalidTopicExceptionUnmarshaller();
    public sealed virtual SNSInvalidTopicException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SNSInvalidTopicException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SNSInvalidTopicExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SNSNoAuthorizationExceptionUnmarshaller : object {
    private static SNSNoAuthorizationExceptionUnmarshaller _instance;
    public static SNSNoAuthorizationExceptionUnmarshaller Instance { get; }
    private static SNSNoAuthorizationExceptionUnmarshaller();
    public sealed virtual SNSNoAuthorizationException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SNSNoAuthorizationException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SNSNoAuthorizationExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartExtensionPackAssociationRequestMarshaller : object {
    private static StartExtensionPackAssociationRequestMarshaller _instance;
    public static StartExtensionPackAssociationRequestMarshaller Instance { get; }
    private static StartExtensionPackAssociationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartExtensionPackAssociationRequest publicRequest);
    internal static StartExtensionPackAssociationRequestMarshaller GetInstance();
    public static StartExtensionPackAssociationRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartExtensionPackAssociationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartExtensionPackAssociationResponseUnmarshaller _instance;
    public static StartExtensionPackAssociationResponseUnmarshaller Instance { get; }
    private static StartExtensionPackAssociationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartExtensionPackAssociationResponseUnmarshaller GetInstance();
    public static StartExtensionPackAssociationResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartMetadataModelAssessmentRequestMarshaller : object {
    private static StartMetadataModelAssessmentRequestMarshaller _instance;
    public static StartMetadataModelAssessmentRequestMarshaller Instance { get; }
    private static StartMetadataModelAssessmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMetadataModelAssessmentRequest publicRequest);
    internal static StartMetadataModelAssessmentRequestMarshaller GetInstance();
    public static StartMetadataModelAssessmentRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartMetadataModelAssessmentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartMetadataModelAssessmentResponseUnmarshaller _instance;
    public static StartMetadataModelAssessmentResponseUnmarshaller Instance { get; }
    private static StartMetadataModelAssessmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMetadataModelAssessmentResponseUnmarshaller GetInstance();
    public static StartMetadataModelAssessmentResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartMetadataModelConversionRequestMarshaller : object {
    private static StartMetadataModelConversionRequestMarshaller _instance;
    public static StartMetadataModelConversionRequestMarshaller Instance { get; }
    private static StartMetadataModelConversionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMetadataModelConversionRequest publicRequest);
    internal static StartMetadataModelConversionRequestMarshaller GetInstance();
    public static StartMetadataModelConversionRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartMetadataModelConversionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartMetadataModelConversionResponseUnmarshaller _instance;
    public static StartMetadataModelConversionResponseUnmarshaller Instance { get; }
    private static StartMetadataModelConversionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMetadataModelConversionResponseUnmarshaller GetInstance();
    public static StartMetadataModelConversionResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartMetadataModelExportAsScriptRequestMarshaller : object {
    private static StartMetadataModelExportAsScriptRequestMarshaller _instance;
    public static StartMetadataModelExportAsScriptRequestMarshaller Instance { get; }
    private static StartMetadataModelExportAsScriptRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMetadataModelExportAsScriptRequest publicRequest);
    internal static StartMetadataModelExportAsScriptRequestMarshaller GetInstance();
    public static StartMetadataModelExportAsScriptRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartMetadataModelExportAsScriptResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartMetadataModelExportAsScriptResponseUnmarshaller _instance;
    public static StartMetadataModelExportAsScriptResponseUnmarshaller Instance { get; }
    private static StartMetadataModelExportAsScriptResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMetadataModelExportAsScriptResponseUnmarshaller GetInstance();
    public static StartMetadataModelExportAsScriptResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartMetadataModelExportToTargetRequestMarshaller : object {
    private static StartMetadataModelExportToTargetRequestMarshaller _instance;
    public static StartMetadataModelExportToTargetRequestMarshaller Instance { get; }
    private static StartMetadataModelExportToTargetRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMetadataModelExportToTargetRequest publicRequest);
    internal static StartMetadataModelExportToTargetRequestMarshaller GetInstance();
    public static StartMetadataModelExportToTargetRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartMetadataModelExportToTargetResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartMetadataModelExportToTargetResponseUnmarshaller _instance;
    public static StartMetadataModelExportToTargetResponseUnmarshaller Instance { get; }
    private static StartMetadataModelExportToTargetResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMetadataModelExportToTargetResponseUnmarshaller GetInstance();
    public static StartMetadataModelExportToTargetResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartMetadataModelImportRequestMarshaller : object {
    private static StartMetadataModelImportRequestMarshaller _instance;
    public static StartMetadataModelImportRequestMarshaller Instance { get; }
    private static StartMetadataModelImportRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartMetadataModelImportRequest publicRequest);
    internal static StartMetadataModelImportRequestMarshaller GetInstance();
    public static StartMetadataModelImportRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartMetadataModelImportResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartMetadataModelImportResponseUnmarshaller _instance;
    public static StartMetadataModelImportResponseUnmarshaller Instance { get; }
    private static StartMetadataModelImportResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartMetadataModelImportResponseUnmarshaller GetInstance();
    public static StartMetadataModelImportResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartRecommendationsRequestEntryMarshaller : object {
    public static StartRecommendationsRequestEntryMarshaller Instance;
    private static StartRecommendationsRequestEntryMarshaller();
    public sealed virtual void Marshall(StartRecommendationsRequestEntry requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartRecommendationsRequestMarshaller : object {
    private static StartRecommendationsRequestMarshaller _instance;
    public static StartRecommendationsRequestMarshaller Instance { get; }
    private static StartRecommendationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartRecommendationsRequest publicRequest);
    internal static StartRecommendationsRequestMarshaller GetInstance();
    public static StartRecommendationsRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartRecommendationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartRecommendationsResponseUnmarshaller _instance;
    public static StartRecommendationsResponseUnmarshaller Instance { get; }
    private static StartRecommendationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartRecommendationsResponseUnmarshaller GetInstance();
    public static StartRecommendationsResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartReplicationRequestMarshaller : object {
    private static StartReplicationRequestMarshaller _instance;
    public static StartReplicationRequestMarshaller Instance { get; }
    private static StartReplicationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartReplicationRequest publicRequest);
    internal static StartReplicationRequestMarshaller GetInstance();
    public static StartReplicationRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartReplicationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartReplicationResponseUnmarshaller _instance;
    public static StartReplicationResponseUnmarshaller Instance { get; }
    private static StartReplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartReplicationResponseUnmarshaller GetInstance();
    public static StartReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartReplicationTaskAssessmentRequestMarshaller : object {
    private static StartReplicationTaskAssessmentRequestMarshaller _instance;
    public static StartReplicationTaskAssessmentRequestMarshaller Instance { get; }
    private static StartReplicationTaskAssessmentRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartReplicationTaskAssessmentRequest publicRequest);
    internal static StartReplicationTaskAssessmentRequestMarshaller GetInstance();
    public static StartReplicationTaskAssessmentRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartReplicationTaskAssessmentResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartReplicationTaskAssessmentResponseUnmarshaller _instance;
    public static StartReplicationTaskAssessmentResponseUnmarshaller Instance { get; }
    private static StartReplicationTaskAssessmentResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartReplicationTaskAssessmentResponseUnmarshaller GetInstance();
    public static StartReplicationTaskAssessmentResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartReplicationTaskAssessmentRunRequestMarshaller : object {
    private static StartReplicationTaskAssessmentRunRequestMarshaller _instance;
    public static StartReplicationTaskAssessmentRunRequestMarshaller Instance { get; }
    private static StartReplicationTaskAssessmentRunRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartReplicationTaskAssessmentRunRequest publicRequest);
    internal static StartReplicationTaskAssessmentRunRequestMarshaller GetInstance();
    public static StartReplicationTaskAssessmentRunRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartReplicationTaskAssessmentRunResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartReplicationTaskAssessmentRunResponseUnmarshaller _instance;
    public static StartReplicationTaskAssessmentRunResponseUnmarshaller Instance { get; }
    private static StartReplicationTaskAssessmentRunResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartReplicationTaskAssessmentRunResponseUnmarshaller GetInstance();
    public static StartReplicationTaskAssessmentRunResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartReplicationTaskRequestMarshaller : object {
    private static StartReplicationTaskRequestMarshaller _instance;
    public static StartReplicationTaskRequestMarshaller Instance { get; }
    private static StartReplicationTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StartReplicationTaskRequest publicRequest);
    internal static StartReplicationTaskRequestMarshaller GetInstance();
    public static StartReplicationTaskRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StartReplicationTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StartReplicationTaskResponseUnmarshaller _instance;
    public static StartReplicationTaskResponseUnmarshaller Instance { get; }
    private static StartReplicationTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StartReplicationTaskResponseUnmarshaller GetInstance();
    public static StartReplicationTaskResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StopReplicationRequestMarshaller : object {
    private static StopReplicationRequestMarshaller _instance;
    public static StopReplicationRequestMarshaller Instance { get; }
    private static StopReplicationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopReplicationRequest publicRequest);
    internal static StopReplicationRequestMarshaller GetInstance();
    public static StopReplicationRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StopReplicationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopReplicationResponseUnmarshaller _instance;
    public static StopReplicationResponseUnmarshaller Instance { get; }
    private static StopReplicationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopReplicationResponseUnmarshaller GetInstance();
    public static StopReplicationResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StopReplicationTaskRequestMarshaller : object {
    private static StopReplicationTaskRequestMarshaller _instance;
    public static StopReplicationTaskRequestMarshaller Instance { get; }
    private static StopReplicationTaskRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(StopReplicationTaskRequest publicRequest);
    internal static StopReplicationTaskRequestMarshaller GetInstance();
    public static StopReplicationTaskRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StopReplicationTaskResponseUnmarshaller : JsonResponseUnmarshaller {
    private static StopReplicationTaskResponseUnmarshaller _instance;
    public static StopReplicationTaskResponseUnmarshaller Instance { get; }
    private static StopReplicationTaskResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static StopReplicationTaskResponseUnmarshaller GetInstance();
    public static StopReplicationTaskResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.StorageQuotaExceededExceptionUnmarshaller : object {
    private static StorageQuotaExceededExceptionUnmarshaller _instance;
    public static StorageQuotaExceededExceptionUnmarshaller Instance { get; }
    private static StorageQuotaExceededExceptionUnmarshaller();
    public sealed virtual StorageQuotaExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual StorageQuotaExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static StorageQuotaExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SubnetAlreadyInUseExceptionUnmarshaller : object {
    private static SubnetAlreadyInUseExceptionUnmarshaller _instance;
    public static SubnetAlreadyInUseExceptionUnmarshaller Instance { get; }
    private static SubnetAlreadyInUseExceptionUnmarshaller();
    public sealed virtual SubnetAlreadyInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual SubnetAlreadyInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static SubnetAlreadyInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SubnetUnmarshaller : object {
    private static SubnetUnmarshaller _instance;
    public static SubnetUnmarshaller Instance { get; }
    private static SubnetUnmarshaller();
    private sealed virtual override Subnet Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.Subnet,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Subnet Unmarshall(JsonUnmarshallerContext context);
    public static SubnetUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SupportedEndpointTypeUnmarshaller : object {
    private static SupportedEndpointTypeUnmarshaller _instance;
    public static SupportedEndpointTypeUnmarshaller Instance { get; }
    private static SupportedEndpointTypeUnmarshaller();
    private sealed virtual override SupportedEndpointType Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.SupportedEndpointType,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SupportedEndpointType Unmarshall(JsonUnmarshallerContext context);
    public static SupportedEndpointTypeUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SybaseSettingsMarshaller : object {
    public static SybaseSettingsMarshaller Instance;
    private static SybaseSettingsMarshaller();
    public sealed virtual void Marshall(SybaseSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.SybaseSettingsUnmarshaller : object {
    private static SybaseSettingsUnmarshaller _instance;
    public static SybaseSettingsUnmarshaller Instance { get; }
    private static SybaseSettingsUnmarshaller();
    private sealed virtual override SybaseSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.SybaseSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SybaseSettings Unmarshall(JsonUnmarshallerContext context);
    public static SybaseSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.TableStatisticsUnmarshaller : object {
    private static TableStatisticsUnmarshaller _instance;
    public static TableStatisticsUnmarshaller Instance { get; }
    private static TableStatisticsUnmarshaller();
    private sealed virtual override TableStatistics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.TableStatistics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableStatistics Unmarshall(JsonUnmarshallerContext context);
    public static TableStatisticsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.TableToReloadMarshaller : object {
    public static TableToReloadMarshaller Instance;
    private static TableToReloadMarshaller();
    public sealed virtual void Marshall(TableToReload requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.TestConnectionRequestMarshaller : object {
    private static TestConnectionRequestMarshaller _instance;
    public static TestConnectionRequestMarshaller Instance { get; }
    private static TestConnectionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TestConnectionRequest publicRequest);
    internal static TestConnectionRequestMarshaller GetInstance();
    public static TestConnectionRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.TestConnectionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TestConnectionResponseUnmarshaller _instance;
    public static TestConnectionResponseUnmarshaller Instance { get; }
    private static TestConnectionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TestConnectionResponseUnmarshaller GetInstance();
    public static TestConnectionResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.TimestreamSettingsMarshaller : object {
    public static TimestreamSettingsMarshaller Instance;
    private static TimestreamSettingsMarshaller();
    public sealed virtual void Marshall(TimestreamSettings requestObject, JsonMarshallerContext context);
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.TimestreamSettingsUnmarshaller : object {
    private static TimestreamSettingsUnmarshaller _instance;
    public static TimestreamSettingsUnmarshaller Instance { get; }
    private static TimestreamSettingsUnmarshaller();
    private sealed virtual override TimestreamSettings Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.TimestreamSettings,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TimestreamSettings Unmarshall(JsonUnmarshallerContext context);
    public static TimestreamSettingsUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.UpdateSubscriptionsToEventBridgeRequestMarshaller : object {
    private static UpdateSubscriptionsToEventBridgeRequestMarshaller _instance;
    public static UpdateSubscriptionsToEventBridgeRequestMarshaller Instance { get; }
    private static UpdateSubscriptionsToEventBridgeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateSubscriptionsToEventBridgeRequest publicRequest);
    internal static UpdateSubscriptionsToEventBridgeRequestMarshaller GetInstance();
    public static UpdateSubscriptionsToEventBridgeRequestMarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.UpdateSubscriptionsToEventBridgeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateSubscriptionsToEventBridgeResponseUnmarshaller _instance;
    public static UpdateSubscriptionsToEventBridgeResponseUnmarshaller Instance { get; }
    private static UpdateSubscriptionsToEventBridgeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateSubscriptionsToEventBridgeResponseUnmarshaller GetInstance();
    public static UpdateSubscriptionsToEventBridgeResponseUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.UpgradeDependencyFailureExceptionUnmarshaller : object {
    private static UpgradeDependencyFailureExceptionUnmarshaller _instance;
    public static UpgradeDependencyFailureExceptionUnmarshaller Instance { get; }
    private static UpgradeDependencyFailureExceptionUnmarshaller();
    public sealed virtual UpgradeDependencyFailureException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual UpgradeDependencyFailureException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static UpgradeDependencyFailureExceptionUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.Internal.MarshallTransformations.VpcSecurityGroupMembershipUnmarshaller : object {
    private static VpcSecurityGroupMembershipUnmarshaller _instance;
    public static VpcSecurityGroupMembershipUnmarshaller Instance { get; }
    private static VpcSecurityGroupMembershipUnmarshaller();
    private sealed virtual override VpcSecurityGroupMembership Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DatabaseMigrationService.Model.VpcSecurityGroupMembership,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VpcSecurityGroupMembership Unmarshall(JsonUnmarshallerContext context);
    public static VpcSecurityGroupMembershipUnmarshaller get_Instance();
}
public class Amazon.DatabaseMigrationService.Model.InvalidCertificateException : AmazonDatabaseMigrationServiceException {
    public InvalidCertificateException(string message);
    public InvalidCertificateException(string message, Exception innerException);
    public InvalidCertificateException(Exception innerException);
    public InvalidCertificateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidCertificateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.InvalidOperationException : AmazonDatabaseMigrationServiceException {
    public InvalidOperationException(string message);
    public InvalidOperationException(string message, Exception innerException);
    public InvalidOperationException(Exception innerException);
    public InvalidOperationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidOperationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.InvalidResourceStateException : AmazonDatabaseMigrationServiceException {
    public InvalidResourceStateException(string message);
    public InvalidResourceStateException(string message, Exception innerException);
    public InvalidResourceStateException(Exception innerException);
    public InvalidResourceStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidResourceStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.InvalidSubnetException : AmazonDatabaseMigrationServiceException {
    public InvalidSubnetException(string message);
    public InvalidSubnetException(string message, Exception innerException);
    public InvalidSubnetException(Exception innerException);
    public InvalidSubnetException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidSubnetException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.InventoryData : object {
    private Nullable`1<int> _numberOfDatabases;
    private Nullable`1<int> _numberOfSchemas;
    public Nullable`1<int> NumberOfDatabases { get; public set; }
    public Nullable`1<int> NumberOfSchemas { get; public set; }
    public Nullable`1<int> get_NumberOfDatabases();
    public void set_NumberOfDatabases(Nullable`1<int> value);
    internal bool IsSetNumberOfDatabases();
    public Nullable`1<int> get_NumberOfSchemas();
    public void set_NumberOfSchemas(Nullable`1<int> value);
    internal bool IsSetNumberOfSchemas();
}
public class Amazon.DatabaseMigrationService.Model.KafkaSettings : object {
    private string _broker;
    private Nullable`1<bool> _includeControlDetails;
    private Nullable`1<bool> _includeNullAndEmpty;
    private Nullable`1<bool> _includePartitionValue;
    private Nullable`1<bool> _includeTableAlterOperations;
    private Nullable`1<bool> _includeTransactionDetails;
    private MessageFormatValue _messageFormat;
    private Nullable`1<int> _messageMaxBytes;
    private Nullable`1<bool> _noHexPrefix;
    private Nullable`1<bool> _partitionIncludeSchemaTable;
    private KafkaSaslMechanism _saslMechanism;
    private string _saslPassword;
    private string _saslUsername;
    private KafkaSecurityProtocol _securityProtocol;
    private string _sslCaCertificateArn;
    private string _sslClientCertificateArn;
    private string _sslClientKeyArn;
    private string _sslClientKeyPassword;
    private KafkaSslEndpointIdentificationAlgorithm _sslEndpointIdentificationAlgorithm;
    private string _topic;
    public string Broker { get; public set; }
    public Nullable`1<bool> IncludeControlDetails { get; public set; }
    public Nullable`1<bool> IncludeNullAndEmpty { get; public set; }
    public Nullable`1<bool> IncludePartitionValue { get; public set; }
    public Nullable`1<bool> IncludeTableAlterOperations { get; public set; }
    public Nullable`1<bool> IncludeTransactionDetails { get; public set; }
    public MessageFormatValue MessageFormat { get; public set; }
    public Nullable`1<int> MessageMaxBytes { get; public set; }
    public Nullable`1<bool> NoHexPrefix { get; public set; }
    public Nullable`1<bool> PartitionIncludeSchemaTable { get; public set; }
    public KafkaSaslMechanism SaslMechanism { get; public set; }
    [AWSPropertyAttribute]
public string SaslPassword { get; public set; }
    public string SaslUsername { get; public set; }
    public KafkaSecurityProtocol SecurityProtocol { get; public set; }
    public string SslCaCertificateArn { get; public set; }
    public string SslClientCertificateArn { get; public set; }
    public string SslClientKeyArn { get; public set; }
    [AWSPropertyAttribute]
public string SslClientKeyPassword { get; public set; }
    public KafkaSslEndpointIdentificationAlgorithm SslEndpointIdentificationAlgorithm { get; public set; }
    public string Topic { get; public set; }
    public string get_Broker();
    public void set_Broker(string value);
    internal bool IsSetBroker();
    public Nullable`1<bool> get_IncludeControlDetails();
    public void set_IncludeControlDetails(Nullable`1<bool> value);
    internal bool IsSetIncludeControlDetails();
    public Nullable`1<bool> get_IncludeNullAndEmpty();
    public void set_IncludeNullAndEmpty(Nullable`1<bool> value);
    internal bool IsSetIncludeNullAndEmpty();
    public Nullable`1<bool> get_IncludePartitionValue();
    public void set_IncludePartitionValue(Nullable`1<bool> value);
    internal bool IsSetIncludePartitionValue();
    public Nullable`1<bool> get_IncludeTableAlterOperations();
    public void set_IncludeTableAlterOperations(Nullable`1<bool> value);
    internal bool IsSetIncludeTableAlterOperations();
    public Nullable`1<bool> get_IncludeTransactionDetails();
    public void set_IncludeTransactionDetails(Nullable`1<bool> value);
    internal bool IsSetIncludeTransactionDetails();
    public MessageFormatValue get_MessageFormat();
    public void set_MessageFormat(MessageFormatValue value);
    internal bool IsSetMessageFormat();
    public Nullable`1<int> get_MessageMaxBytes();
    public void set_MessageMaxBytes(Nullable`1<int> value);
    internal bool IsSetMessageMaxBytes();
    public Nullable`1<bool> get_NoHexPrefix();
    public void set_NoHexPrefix(Nullable`1<bool> value);
    internal bool IsSetNoHexPrefix();
    public Nullable`1<bool> get_PartitionIncludeSchemaTable();
    public void set_PartitionIncludeSchemaTable(Nullable`1<bool> value);
    internal bool IsSetPartitionIncludeSchemaTable();
    public KafkaSaslMechanism get_SaslMechanism();
    public void set_SaslMechanism(KafkaSaslMechanism value);
    internal bool IsSetSaslMechanism();
    public string get_SaslPassword();
    public void set_SaslPassword(string value);
    internal bool IsSetSaslPassword();
    public string get_SaslUsername();
    public void set_SaslUsername(string value);
    internal bool IsSetSaslUsername();
    public KafkaSecurityProtocol get_SecurityProtocol();
    public void set_SecurityProtocol(KafkaSecurityProtocol value);
    internal bool IsSetSecurityProtocol();
    public string get_SslCaCertificateArn();
    public void set_SslCaCertificateArn(string value);
    internal bool IsSetSslCaCertificateArn();
    public string get_SslClientCertificateArn();
    public void set_SslClientCertificateArn(string value);
    internal bool IsSetSslClientCertificateArn();
    public string get_SslClientKeyArn();
    public void set_SslClientKeyArn(string value);
    internal bool IsSetSslClientKeyArn();
    public string get_SslClientKeyPassword();
    public void set_SslClientKeyPassword(string value);
    internal bool IsSetSslClientKeyPassword();
    public KafkaSslEndpointIdentificationAlgorithm get_SslEndpointIdentificationAlgorithm();
    public void set_SslEndpointIdentificationAlgorithm(KafkaSslEndpointIdentificationAlgorithm value);
    internal bool IsSetSslEndpointIdentificationAlgorithm();
    public string get_Topic();
    public void set_Topic(string value);
    internal bool IsSetTopic();
}
public class Amazon.DatabaseMigrationService.Model.KinesisSettings : object {
    private Nullable`1<bool> _includeControlDetails;
    private Nullable`1<bool> _includeNullAndEmpty;
    private Nullable`1<bool> _includePartitionValue;
    private Nullable`1<bool> _includeTableAlterOperations;
    private Nullable`1<bool> _includeTransactionDetails;
    private MessageFormatValue _messageFormat;
    private Nullable`1<bool> _noHexPrefix;
    private Nullable`1<bool> _partitionIncludeSchemaTable;
    private string _serviceAccessRoleArn;
    private string _streamArn;
    public Nullable`1<bool> IncludeControlDetails { get; public set; }
    public Nullable`1<bool> IncludeNullAndEmpty { get; public set; }
    public Nullable`1<bool> IncludePartitionValue { get; public set; }
    public Nullable`1<bool> IncludeTableAlterOperations { get; public set; }
    public Nullable`1<bool> IncludeTransactionDetails { get; public set; }
    public MessageFormatValue MessageFormat { get; public set; }
    public Nullable`1<bool> NoHexPrefix { get; public set; }
    public Nullable`1<bool> PartitionIncludeSchemaTable { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public string StreamArn { get; public set; }
    public Nullable`1<bool> get_IncludeControlDetails();
    public void set_IncludeControlDetails(Nullable`1<bool> value);
    internal bool IsSetIncludeControlDetails();
    public Nullable`1<bool> get_IncludeNullAndEmpty();
    public void set_IncludeNullAndEmpty(Nullable`1<bool> value);
    internal bool IsSetIncludeNullAndEmpty();
    public Nullable`1<bool> get_IncludePartitionValue();
    public void set_IncludePartitionValue(Nullable`1<bool> value);
    internal bool IsSetIncludePartitionValue();
    public Nullable`1<bool> get_IncludeTableAlterOperations();
    public void set_IncludeTableAlterOperations(Nullable`1<bool> value);
    internal bool IsSetIncludeTableAlterOperations();
    public Nullable`1<bool> get_IncludeTransactionDetails();
    public void set_IncludeTransactionDetails(Nullable`1<bool> value);
    internal bool IsSetIncludeTransactionDetails();
    public MessageFormatValue get_MessageFormat();
    public void set_MessageFormat(MessageFormatValue value);
    internal bool IsSetMessageFormat();
    public Nullable`1<bool> get_NoHexPrefix();
    public void set_NoHexPrefix(Nullable`1<bool> value);
    internal bool IsSetNoHexPrefix();
    public Nullable`1<bool> get_PartitionIncludeSchemaTable();
    public void set_PartitionIncludeSchemaTable(Nullable`1<bool> value);
    internal bool IsSetPartitionIncludeSchemaTable();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
}
public class Amazon.DatabaseMigrationService.Model.KMSAccessDeniedException : AmazonDatabaseMigrationServiceException {
    public KMSAccessDeniedException(string message);
    public KMSAccessDeniedException(string message, Exception innerException);
    public KMSAccessDeniedException(Exception innerException);
    public KMSAccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSAccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.KMSDisabledException : AmazonDatabaseMigrationServiceException {
    public KMSDisabledException(string message);
    public KMSDisabledException(string message, Exception innerException);
    public KMSDisabledException(Exception innerException);
    public KMSDisabledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSDisabledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.KMSException : AmazonDatabaseMigrationServiceException {
    public KMSException(string message);
    public KMSException(string message, Exception innerException);
    public KMSException(Exception innerException);
    public KMSException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.KMSInvalidStateException : AmazonDatabaseMigrationServiceException {
    public KMSInvalidStateException(string message);
    public KMSInvalidStateException(string message, Exception innerException);
    public KMSInvalidStateException(Exception innerException);
    public KMSInvalidStateException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSInvalidStateException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.KMSKeyNotAccessibleException : AmazonDatabaseMigrationServiceException {
    public KMSKeyNotAccessibleException(string message);
    public KMSKeyNotAccessibleException(string message, Exception innerException);
    public KMSKeyNotAccessibleException(Exception innerException);
    public KMSKeyNotAccessibleException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSKeyNotAccessibleException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.KMSNotFoundException : AmazonDatabaseMigrationServiceException {
    public KMSNotFoundException(string message);
    public KMSNotFoundException(string message, Exception innerException);
    public KMSNotFoundException(Exception innerException);
    public KMSNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.KMSThrottlingException : AmazonDatabaseMigrationServiceException {
    public KMSThrottlingException(string message);
    public KMSThrottlingException(string message, Exception innerException);
    public KMSThrottlingException(Exception innerException);
    public KMSThrottlingException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public KMSThrottlingException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.Limitation : object {
    private string _databaseId;
    private string _description;
    private string _engineName;
    private string _impact;
    private string _name;
    private string _type;
    public string DatabaseId { get; public set; }
    public string Description { get; public set; }
    public string EngineName { get; public set; }
    public string Impact { get; public set; }
    public string Name { get; public set; }
    public string Type { get; public set; }
    public string get_DatabaseId();
    public void set_DatabaseId(string value);
    internal bool IsSetDatabaseId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public string get_Impact();
    public void set_Impact(string value);
    internal bool IsSetImpact();
    public string get_Name();
    public void set_Name(string value);
    internal bool IsSetName();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.DatabaseMigrationService.Model.ListTagsForResourceRequest : AmazonDatabaseMigrationServiceRequest {
    private string _resourceArn;
    private List`1<string> _resourceArnList;
    public string ResourceArn { get; public set; }
    public List`1<string> ResourceArnList { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_ResourceArnList();
    public void set_ResourceArnList(List`1<string> value);
    internal bool IsSetResourceArnList();
}
public class Amazon.DatabaseMigrationService.Model.ListTagsForResourceResponse : AmazonWebServiceResponse {
    private List`1<Tag> _tagList;
    public List`1<Tag> TagList { get; public set; }
    public List`1<Tag> get_TagList();
    public void set_TagList(List`1<Tag> value);
    internal bool IsSetTagList();
}
public class Amazon.DatabaseMigrationService.Model.MariaDbDataProviderSettings : object {
    private string _certificateArn;
    private Nullable`1<int> _port;
    private string _serverName;
    private DmsSslModeValue _sslMode;
    public string CertificateArn { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string ServerName { get; public set; }
    public DmsSslModeValue SslMode { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public DmsSslModeValue get_SslMode();
    public void set_SslMode(DmsSslModeValue value);
    internal bool IsSetSslMode();
}
public class Amazon.DatabaseMigrationService.Model.MicrosoftSqlServerDataProviderSettings : object {
    private string _certificateArn;
    private string _databaseName;
    private Nullable`1<int> _port;
    private string _serverName;
    private DmsSslModeValue _sslMode;
    public string CertificateArn { get; public set; }
    public string DatabaseName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string ServerName { get; public set; }
    public DmsSslModeValue SslMode { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public DmsSslModeValue get_SslMode();
    public void set_SslMode(DmsSslModeValue value);
    internal bool IsSetSslMode();
}
public class Amazon.DatabaseMigrationService.Model.MicrosoftSQLServerSettings : object {
    private Nullable`1<int> _bcpPacketSize;
    private string _controlTablesFileGroup;
    private string _databaseName;
    private Nullable`1<bool> _forceLobLookup;
    private string _password;
    private Nullable`1<int> _port;
    private Nullable`1<bool> _querySingleAlwaysOnNode;
    private Nullable`1<bool> _readBackupOnly;
    private SafeguardPolicy _safeguardPolicy;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    private string _serverName;
    private TlogAccessMode _tlogAccessMode;
    private Nullable`1<bool> _trimSpaceInChar;
    private Nullable`1<bool> _useBcpFullLoad;
    private string _username;
    private Nullable`1<bool> _useThirdPartyBackupDevice;
    public Nullable`1<int> BcpPacketSize { get; public set; }
    public string ControlTablesFileGroup { get; public set; }
    public string DatabaseName { get; public set; }
    public Nullable`1<bool> ForceLobLookup { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public Nullable`1<bool> QuerySingleAlwaysOnNode { get; public set; }
    public Nullable`1<bool> ReadBackupOnly { get; public set; }
    public SafeguardPolicy SafeguardPolicy { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string ServerName { get; public set; }
    public TlogAccessMode TlogAccessMode { get; public set; }
    public Nullable`1<bool> TrimSpaceInChar { get; public set; }
    public Nullable`1<bool> UseBcpFullLoad { get; public set; }
    public string Username { get; public set; }
    public Nullable`1<bool> UseThirdPartyBackupDevice { get; public set; }
    public Nullable`1<int> get_BcpPacketSize();
    public void set_BcpPacketSize(Nullable`1<int> value);
    internal bool IsSetBcpPacketSize();
    public string get_ControlTablesFileGroup();
    public void set_ControlTablesFileGroup(string value);
    internal bool IsSetControlTablesFileGroup();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<bool> get_ForceLobLookup();
    public void set_ForceLobLookup(Nullable`1<bool> value);
    internal bool IsSetForceLobLookup();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public Nullable`1<bool> get_QuerySingleAlwaysOnNode();
    public void set_QuerySingleAlwaysOnNode(Nullable`1<bool> value);
    internal bool IsSetQuerySingleAlwaysOnNode();
    public Nullable`1<bool> get_ReadBackupOnly();
    public void set_ReadBackupOnly(Nullable`1<bool> value);
    internal bool IsSetReadBackupOnly();
    public SafeguardPolicy get_SafeguardPolicy();
    public void set_SafeguardPolicy(SafeguardPolicy value);
    internal bool IsSetSafeguardPolicy();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public TlogAccessMode get_TlogAccessMode();
    public void set_TlogAccessMode(TlogAccessMode value);
    internal bool IsSetTlogAccessMode();
    public Nullable`1<bool> get_TrimSpaceInChar();
    public void set_TrimSpaceInChar(Nullable`1<bool> value);
    internal bool IsSetTrimSpaceInChar();
    public Nullable`1<bool> get_UseBcpFullLoad();
    public void set_UseBcpFullLoad(Nullable`1<bool> value);
    internal bool IsSetUseBcpFullLoad();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public Nullable`1<bool> get_UseThirdPartyBackupDevice();
    public void set_UseThirdPartyBackupDevice(Nullable`1<bool> value);
    internal bool IsSetUseThirdPartyBackupDevice();
}
public class Amazon.DatabaseMigrationService.Model.MigrationProject : object {
    private string _description;
    private string _instanceProfileArn;
    private string _instanceProfileName;
    private string _migrationProjectArn;
    private Nullable`1<DateTime> _migrationProjectCreationTime;
    private string _migrationProjectName;
    private SCApplicationAttributes _schemaConversionApplicationAttributes;
    private List`1<DataProviderDescriptor> _sourceDataProviderDescriptors;
    private List`1<DataProviderDescriptor> _targetDataProviderDescriptors;
    private string _transformationRules;
    public string Description { get; public set; }
    public string InstanceProfileArn { get; public set; }
    public string InstanceProfileName { get; public set; }
    public string MigrationProjectArn { get; public set; }
    public Nullable`1<DateTime> MigrationProjectCreationTime { get; public set; }
    public string MigrationProjectName { get; public set; }
    public SCApplicationAttributes SchemaConversionApplicationAttributes { get; public set; }
    public List`1<DataProviderDescriptor> SourceDataProviderDescriptors { get; public set; }
    public List`1<DataProviderDescriptor> TargetDataProviderDescriptors { get; public set; }
    public string TransformationRules { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceProfileArn();
    public void set_InstanceProfileArn(string value);
    internal bool IsSetInstanceProfileArn();
    public string get_InstanceProfileName();
    public void set_InstanceProfileName(string value);
    internal bool IsSetInstanceProfileName();
    public string get_MigrationProjectArn();
    public void set_MigrationProjectArn(string value);
    internal bool IsSetMigrationProjectArn();
    public Nullable`1<DateTime> get_MigrationProjectCreationTime();
    public void set_MigrationProjectCreationTime(Nullable`1<DateTime> value);
    internal bool IsSetMigrationProjectCreationTime();
    public string get_MigrationProjectName();
    public void set_MigrationProjectName(string value);
    internal bool IsSetMigrationProjectName();
    public SCApplicationAttributes get_SchemaConversionApplicationAttributes();
    public void set_SchemaConversionApplicationAttributes(SCApplicationAttributes value);
    internal bool IsSetSchemaConversionApplicationAttributes();
    public List`1<DataProviderDescriptor> get_SourceDataProviderDescriptors();
    public void set_SourceDataProviderDescriptors(List`1<DataProviderDescriptor> value);
    internal bool IsSetSourceDataProviderDescriptors();
    public List`1<DataProviderDescriptor> get_TargetDataProviderDescriptors();
    public void set_TargetDataProviderDescriptors(List`1<DataProviderDescriptor> value);
    internal bool IsSetTargetDataProviderDescriptors();
    public string get_TransformationRules();
    public void set_TransformationRules(string value);
    internal bool IsSetTransformationRules();
}
public class Amazon.DatabaseMigrationService.Model.ModifyConversionConfigurationRequest : AmazonDatabaseMigrationServiceRequest {
    private string _conversionConfiguration;
    private string _migrationProjectIdentifier;
    [AWSPropertyAttribute]
public string ConversionConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public string get_ConversionConfiguration();
    public void set_ConversionConfiguration(string value);
    internal bool IsSetConversionConfiguration();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.ModifyConversionConfigurationResponse : AmazonWebServiceResponse {
    private string _migrationProjectIdentifier;
    public string MigrationProjectIdentifier { get; public set; }
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.ModifyDataProviderRequest : AmazonDatabaseMigrationServiceRequest {
    private string _dataProviderIdentifier;
    private string _dataProviderName;
    private string _description;
    private string _engine;
    private Nullable`1<bool> _exactSettings;
    private DataProviderSettings _settings;
    [AWSPropertyAttribute]
public string DataProviderIdentifier { get; public set; }
    public string DataProviderName { get; public set; }
    public string Description { get; public set; }
    public string Engine { get; public set; }
    public Nullable`1<bool> ExactSettings { get; public set; }
    public DataProviderSettings Settings { get; public set; }
    public string get_DataProviderIdentifier();
    public void set_DataProviderIdentifier(string value);
    internal bool IsSetDataProviderIdentifier();
    public string get_DataProviderName();
    public void set_DataProviderName(string value);
    internal bool IsSetDataProviderName();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Engine();
    public void set_Engine(string value);
    internal bool IsSetEngine();
    public Nullable`1<bool> get_ExactSettings();
    public void set_ExactSettings(Nullable`1<bool> value);
    internal bool IsSetExactSettings();
    public DataProviderSettings get_Settings();
    public void set_Settings(DataProviderSettings value);
    internal bool IsSetSettings();
}
public class Amazon.DatabaseMigrationService.Model.ModifyDataProviderResponse : AmazonWebServiceResponse {
    private DataProvider _dataProvider;
    public DataProvider DataProvider { get; public set; }
    public DataProvider get_DataProvider();
    public void set_DataProvider(DataProvider value);
    internal bool IsSetDataProvider();
}
public class Amazon.DatabaseMigrationService.Model.ModifyEndpointRequest : AmazonDatabaseMigrationServiceRequest {
    private string _certificateArn;
    private string _databaseName;
    private DmsTransferSettings _dmsTransferSettings;
    private DocDbSettings _docDbSettings;
    private DynamoDbSettings _dynamoDbSettings;
    private ElasticsearchSettings _elasticsearchSettings;
    private string _endpointArn;
    private string _endpointIdentifier;
    private ReplicationEndpointTypeValue _endpointType;
    private string _engineName;
    private Nullable`1<bool> _exactSettings;
    private string _externalTableDefinition;
    private string _extraConnectionAttributes;
    private GcpMySQLSettings _gcpMySQLSettings;
    private IBMDb2Settings _ibmDb2Settings;
    private KafkaSettings _kafkaSettings;
    private KinesisSettings _kinesisSettings;
    private MicrosoftSQLServerSettings _microsoftSQLServerSettings;
    private MongoDbSettings _mongoDbSettings;
    private MySQLSettings _mySQLSettings;
    private NeptuneSettings _neptuneSettings;
    private OracleSettings _oracleSettings;
    private string _password;
    private Nullable`1<int> _port;
    private PostgreSQLSettings _postgreSQLSettings;
    private RedisSettings _redisSettings;
    private RedshiftSettings _redshiftSettings;
    private S3Settings _s3Settings;
    private string _serverName;
    private string _serviceAccessRoleArn;
    private DmsSslModeValue _sslMode;
    private SybaseSettings _sybaseSettings;
    private TimestreamSettings _timestreamSettings;
    private string _username;
    public string CertificateArn { get; public set; }
    public string DatabaseName { get; public set; }
    public DmsTransferSettings DmsTransferSettings { get; public set; }
    public DocDbSettings DocDbSettings { get; public set; }
    public DynamoDbSettings DynamoDbSettings { get; public set; }
    public ElasticsearchSettings ElasticsearchSettings { get; public set; }
    [AWSPropertyAttribute]
public string EndpointArn { get; public set; }
    public string EndpointIdentifier { get; public set; }
    public ReplicationEndpointTypeValue EndpointType { get; public set; }
    public string EngineName { get; public set; }
    public Nullable`1<bool> ExactSettings { get; public set; }
    public string ExternalTableDefinition { get; public set; }
    public string ExtraConnectionAttributes { get; public set; }
    public GcpMySQLSettings GcpMySQLSettings { get; public set; }
    public IBMDb2Settings IBMDb2Settings { get; public set; }
    public KafkaSettings KafkaSettings { get; public set; }
    public KinesisSettings KinesisSettings { get; public set; }
    public MicrosoftSQLServerSettings MicrosoftSQLServerSettings { get; public set; }
    public MongoDbSettings MongoDbSettings { get; public set; }
    public MySQLSettings MySQLSettings { get; public set; }
    public NeptuneSettings NeptuneSettings { get; public set; }
    public OracleSettings OracleSettings { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public PostgreSQLSettings PostgreSQLSettings { get; public set; }
    public RedisSettings RedisSettings { get; public set; }
    public RedshiftSettings RedshiftSettings { get; public set; }
    public S3Settings S3Settings { get; public set; }
    public string ServerName { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public DmsSslModeValue SslMode { get; public set; }
    public SybaseSettings SybaseSettings { get; public set; }
    public TimestreamSettings TimestreamSettings { get; public set; }
    public string Username { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public DmsTransferSettings get_DmsTransferSettings();
    public void set_DmsTransferSettings(DmsTransferSettings value);
    internal bool IsSetDmsTransferSettings();
    public DocDbSettings get_DocDbSettings();
    public void set_DocDbSettings(DocDbSettings value);
    internal bool IsSetDocDbSettings();
    public DynamoDbSettings get_DynamoDbSettings();
    public void set_DynamoDbSettings(DynamoDbSettings value);
    internal bool IsSetDynamoDbSettings();
    public ElasticsearchSettings get_ElasticsearchSettings();
    public void set_ElasticsearchSettings(ElasticsearchSettings value);
    internal bool IsSetElasticsearchSettings();
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
    public string get_EndpointIdentifier();
    public void set_EndpointIdentifier(string value);
    internal bool IsSetEndpointIdentifier();
    public ReplicationEndpointTypeValue get_EndpointType();
    public void set_EndpointType(ReplicationEndpointTypeValue value);
    internal bool IsSetEndpointType();
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public Nullable`1<bool> get_ExactSettings();
    public void set_ExactSettings(Nullable`1<bool> value);
    internal bool IsSetExactSettings();
    public string get_ExternalTableDefinition();
    public void set_ExternalTableDefinition(string value);
    internal bool IsSetExternalTableDefinition();
    public string get_ExtraConnectionAttributes();
    public void set_ExtraConnectionAttributes(string value);
    internal bool IsSetExtraConnectionAttributes();
    public GcpMySQLSettings get_GcpMySQLSettings();
    public void set_GcpMySQLSettings(GcpMySQLSettings value);
    internal bool IsSetGcpMySQLSettings();
    public IBMDb2Settings get_IBMDb2Settings();
    public void set_IBMDb2Settings(IBMDb2Settings value);
    internal bool IsSetIBMDb2Settings();
    public KafkaSettings get_KafkaSettings();
    public void set_KafkaSettings(KafkaSettings value);
    internal bool IsSetKafkaSettings();
    public KinesisSettings get_KinesisSettings();
    public void set_KinesisSettings(KinesisSettings value);
    internal bool IsSetKinesisSettings();
    public MicrosoftSQLServerSettings get_MicrosoftSQLServerSettings();
    public void set_MicrosoftSQLServerSettings(MicrosoftSQLServerSettings value);
    internal bool IsSetMicrosoftSQLServerSettings();
    public MongoDbSettings get_MongoDbSettings();
    public void set_MongoDbSettings(MongoDbSettings value);
    internal bool IsSetMongoDbSettings();
    public MySQLSettings get_MySQLSettings();
    public void set_MySQLSettings(MySQLSettings value);
    internal bool IsSetMySQLSettings();
    public NeptuneSettings get_NeptuneSettings();
    public void set_NeptuneSettings(NeptuneSettings value);
    internal bool IsSetNeptuneSettings();
    public OracleSettings get_OracleSettings();
    public void set_OracleSettings(OracleSettings value);
    internal bool IsSetOracleSettings();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public PostgreSQLSettings get_PostgreSQLSettings();
    public void set_PostgreSQLSettings(PostgreSQLSettings value);
    internal bool IsSetPostgreSQLSettings();
    public RedisSettings get_RedisSettings();
    public void set_RedisSettings(RedisSettings value);
    internal bool IsSetRedisSettings();
    public RedshiftSettings get_RedshiftSettings();
    public void set_RedshiftSettings(RedshiftSettings value);
    internal bool IsSetRedshiftSettings();
    public S3Settings get_S3Settings();
    public void set_S3Settings(S3Settings value);
    internal bool IsSetS3Settings();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
    public DmsSslModeValue get_SslMode();
    public void set_SslMode(DmsSslModeValue value);
    internal bool IsSetSslMode();
    public SybaseSettings get_SybaseSettings();
    public void set_SybaseSettings(SybaseSettings value);
    internal bool IsSetSybaseSettings();
    public TimestreamSettings get_TimestreamSettings();
    public void set_TimestreamSettings(TimestreamSettings value);
    internal bool IsSetTimestreamSettings();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.DatabaseMigrationService.Model.ModifyEndpointResponse : AmazonWebServiceResponse {
    private Endpoint _endpoint;
    public Endpoint Endpoint { get; public set; }
    public Endpoint get_Endpoint();
    public void set_Endpoint(Endpoint value);
    internal bool IsSetEndpoint();
}
public class Amazon.DatabaseMigrationService.Model.ModifyEventSubscriptionRequest : AmazonDatabaseMigrationServiceRequest {
    private Nullable`1<bool> _enabled;
    private List`1<string> _eventCategories;
    private string _snsTopicArn;
    private string _sourceType;
    private string _subscriptionName;
    public Nullable`1<bool> Enabled { get; public set; }
    public List`1<string> EventCategories { get; public set; }
    public string SnsTopicArn { get; public set; }
    public string SourceType { get; public set; }
    [AWSPropertyAttribute]
public string SubscriptionName { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public List`1<string> get_EventCategories();
    public void set_EventCategories(List`1<string> value);
    internal bool IsSetEventCategories();
    public string get_SnsTopicArn();
    public void set_SnsTopicArn(string value);
    internal bool IsSetSnsTopicArn();
    public string get_SourceType();
    public void set_SourceType(string value);
    internal bool IsSetSourceType();
    public string get_SubscriptionName();
    public void set_SubscriptionName(string value);
    internal bool IsSetSubscriptionName();
}
public class Amazon.DatabaseMigrationService.Model.ModifyEventSubscriptionResponse : AmazonWebServiceResponse {
    private EventSubscription _eventSubscription;
    public EventSubscription EventSubscription { get; public set; }
    public EventSubscription get_EventSubscription();
    public void set_EventSubscription(EventSubscription value);
    internal bool IsSetEventSubscription();
}
public class Amazon.DatabaseMigrationService.Model.ModifyInstanceProfileRequest : AmazonDatabaseMigrationServiceRequest {
    private string _availabilityZone;
    private string _description;
    private string _instanceProfileIdentifier;
    private string _instanceProfileName;
    private string _kmsKeyArn;
    private string _networkType;
    private Nullable`1<bool> _publiclyAccessible;
    private string _subnetGroupIdentifier;
    private List`1<string> _vpcSecurityGroups;
    public string AvailabilityZone { get; public set; }
    public string Description { get; public set; }
    [AWSPropertyAttribute]
public string InstanceProfileIdentifier { get; public set; }
    public string InstanceProfileName { get; public set; }
    public string KmsKeyArn { get; public set; }
    public string NetworkType { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public string SubnetGroupIdentifier { get; public set; }
    public List`1<string> VpcSecurityGroups { get; public set; }
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceProfileIdentifier();
    public void set_InstanceProfileIdentifier(string value);
    internal bool IsSetInstanceProfileIdentifier();
    public string get_InstanceProfileName();
    public void set_InstanceProfileName(string value);
    internal bool IsSetInstanceProfileName();
    public string get_KmsKeyArn();
    public void set_KmsKeyArn(string value);
    internal bool IsSetKmsKeyArn();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_SubnetGroupIdentifier();
    public void set_SubnetGroupIdentifier(string value);
    internal bool IsSetSubnetGroupIdentifier();
    public List`1<string> get_VpcSecurityGroups();
    public void set_VpcSecurityGroups(List`1<string> value);
    internal bool IsSetVpcSecurityGroups();
}
public class Amazon.DatabaseMigrationService.Model.ModifyInstanceProfileResponse : AmazonWebServiceResponse {
    private InstanceProfile _instanceProfile;
    public InstanceProfile InstanceProfile { get; public set; }
    public InstanceProfile get_InstanceProfile();
    public void set_InstanceProfile(InstanceProfile value);
    internal bool IsSetInstanceProfile();
}
public class Amazon.DatabaseMigrationService.Model.ModifyMigrationProjectRequest : AmazonDatabaseMigrationServiceRequest {
    private string _description;
    private string _instanceProfileIdentifier;
    private string _migrationProjectIdentifier;
    private string _migrationProjectName;
    private SCApplicationAttributes _schemaConversionApplicationAttributes;
    private List`1<DataProviderDescriptorDefinition> _sourceDataProviderDescriptors;
    private List`1<DataProviderDescriptorDefinition> _targetDataProviderDescriptors;
    private string _transformationRules;
    public string Description { get; public set; }
    public string InstanceProfileIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public string MigrationProjectName { get; public set; }
    public SCApplicationAttributes SchemaConversionApplicationAttributes { get; public set; }
    public List`1<DataProviderDescriptorDefinition> SourceDataProviderDescriptors { get; public set; }
    public List`1<DataProviderDescriptorDefinition> TargetDataProviderDescriptors { get; public set; }
    public string TransformationRules { get; public set; }
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_InstanceProfileIdentifier();
    public void set_InstanceProfileIdentifier(string value);
    internal bool IsSetInstanceProfileIdentifier();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
    public string get_MigrationProjectName();
    public void set_MigrationProjectName(string value);
    internal bool IsSetMigrationProjectName();
    public SCApplicationAttributes get_SchemaConversionApplicationAttributes();
    public void set_SchemaConversionApplicationAttributes(SCApplicationAttributes value);
    internal bool IsSetSchemaConversionApplicationAttributes();
    public List`1<DataProviderDescriptorDefinition> get_SourceDataProviderDescriptors();
    public void set_SourceDataProviderDescriptors(List`1<DataProviderDescriptorDefinition> value);
    internal bool IsSetSourceDataProviderDescriptors();
    public List`1<DataProviderDescriptorDefinition> get_TargetDataProviderDescriptors();
    public void set_TargetDataProviderDescriptors(List`1<DataProviderDescriptorDefinition> value);
    internal bool IsSetTargetDataProviderDescriptors();
    public string get_TransformationRules();
    public void set_TransformationRules(string value);
    internal bool IsSetTransformationRules();
}
public class Amazon.DatabaseMigrationService.Model.ModifyMigrationProjectResponse : AmazonWebServiceResponse {
    private MigrationProject _migrationProject;
    public MigrationProject MigrationProject { get; public set; }
    public MigrationProject get_MigrationProject();
    public void set_MigrationProject(MigrationProject value);
    internal bool IsSetMigrationProject();
}
public class Amazon.DatabaseMigrationService.Model.ModifyReplicationConfigRequest : AmazonDatabaseMigrationServiceRequest {
    private ComputeConfig _computeConfig;
    private string _replicationConfigArn;
    private string _replicationConfigIdentifier;
    private string _replicationSettings;
    private MigrationTypeValue _replicationType;
    private string _sourceEndpointArn;
    private string _supplementalSettings;
    private string _tableMappings;
    private string _targetEndpointArn;
    public ComputeConfig ComputeConfig { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationConfigArn { get; public set; }
    public string ReplicationConfigIdentifier { get; public set; }
    public string ReplicationSettings { get; public set; }
    public MigrationTypeValue ReplicationType { get; public set; }
    public string SourceEndpointArn { get; public set; }
    public string SupplementalSettings { get; public set; }
    public string TableMappings { get; public set; }
    public string TargetEndpointArn { get; public set; }
    public ComputeConfig get_ComputeConfig();
    public void set_ComputeConfig(ComputeConfig value);
    internal bool IsSetComputeConfig();
    public string get_ReplicationConfigArn();
    public void set_ReplicationConfigArn(string value);
    internal bool IsSetReplicationConfigArn();
    public string get_ReplicationConfigIdentifier();
    public void set_ReplicationConfigIdentifier(string value);
    internal bool IsSetReplicationConfigIdentifier();
    public string get_ReplicationSettings();
    public void set_ReplicationSettings(string value);
    internal bool IsSetReplicationSettings();
    public MigrationTypeValue get_ReplicationType();
    public void set_ReplicationType(MigrationTypeValue value);
    internal bool IsSetReplicationType();
    public string get_SourceEndpointArn();
    public void set_SourceEndpointArn(string value);
    internal bool IsSetSourceEndpointArn();
    public string get_SupplementalSettings();
    public void set_SupplementalSettings(string value);
    internal bool IsSetSupplementalSettings();
    public string get_TableMappings();
    public void set_TableMappings(string value);
    internal bool IsSetTableMappings();
    public string get_TargetEndpointArn();
    public void set_TargetEndpointArn(string value);
    internal bool IsSetTargetEndpointArn();
}
public class Amazon.DatabaseMigrationService.Model.ModifyReplicationConfigResponse : AmazonWebServiceResponse {
    private ReplicationConfig _replicationConfig;
    public ReplicationConfig ReplicationConfig { get; public set; }
    public ReplicationConfig get_ReplicationConfig();
    public void set_ReplicationConfig(ReplicationConfig value);
    internal bool IsSetReplicationConfig();
}
public class Amazon.DatabaseMigrationService.Model.ModifyReplicationInstanceRequest : AmazonDatabaseMigrationServiceRequest {
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _allowMajorVersionUpgrade;
    private Nullable`1<bool> _applyImmediately;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _engineVersion;
    private Nullable`1<bool> _multiAZ;
    private string _networkType;
    private string _preferredMaintenanceWindow;
    private string _replicationInstanceArn;
    private string _replicationInstanceClass;
    private string _replicationInstanceIdentifier;
    private List`1<string> _vpcSecurityGroupIds;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AllowMajorVersionUpgrade { get; public set; }
    public Nullable`1<bool> ApplyImmediately { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string NetworkType { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationInstanceArn { get; public set; }
    public string ReplicationInstanceClass { get; public set; }
    public string ReplicationInstanceIdentifier { get; public set; }
    public List`1<string> VpcSecurityGroupIds { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AllowMajorVersionUpgrade();
    public void set_AllowMajorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAllowMajorVersionUpgrade();
    public Nullable`1<bool> get_ApplyImmediately();
    public void set_ApplyImmediately(Nullable`1<bool> value);
    internal bool IsSetApplyImmediately();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
    public string get_ReplicationInstanceClass();
    public void set_ReplicationInstanceClass(string value);
    internal bool IsSetReplicationInstanceClass();
    public string get_ReplicationInstanceIdentifier();
    public void set_ReplicationInstanceIdentifier(string value);
    internal bool IsSetReplicationInstanceIdentifier();
    public List`1<string> get_VpcSecurityGroupIds();
    public void set_VpcSecurityGroupIds(List`1<string> value);
    internal bool IsSetVpcSecurityGroupIds();
}
public class Amazon.DatabaseMigrationService.Model.ModifyReplicationInstanceResponse : AmazonWebServiceResponse {
    private ReplicationInstance _replicationInstance;
    public ReplicationInstance ReplicationInstance { get; public set; }
    public ReplicationInstance get_ReplicationInstance();
    public void set_ReplicationInstance(ReplicationInstance value);
    internal bool IsSetReplicationInstance();
}
public class Amazon.DatabaseMigrationService.Model.ModifyReplicationSubnetGroupRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationSubnetGroupDescription;
    private string _replicationSubnetGroupIdentifier;
    private List`1<string> _subnetIds;
    public string ReplicationSubnetGroupDescription { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationSubnetGroupIdentifier { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> SubnetIds { get; public set; }
    public string get_ReplicationSubnetGroupDescription();
    public void set_ReplicationSubnetGroupDescription(string value);
    internal bool IsSetReplicationSubnetGroupDescription();
    public string get_ReplicationSubnetGroupIdentifier();
    public void set_ReplicationSubnetGroupIdentifier(string value);
    internal bool IsSetReplicationSubnetGroupIdentifier();
    public List`1<string> get_SubnetIds();
    public void set_SubnetIds(List`1<string> value);
    internal bool IsSetSubnetIds();
}
public class Amazon.DatabaseMigrationService.Model.ModifyReplicationSubnetGroupResponse : AmazonWebServiceResponse {
    private ReplicationSubnetGroup _replicationSubnetGroup;
    public ReplicationSubnetGroup ReplicationSubnetGroup { get; public set; }
    public ReplicationSubnetGroup get_ReplicationSubnetGroup();
    public void set_ReplicationSubnetGroup(ReplicationSubnetGroup value);
    internal bool IsSetReplicationSubnetGroup();
}
public class Amazon.DatabaseMigrationService.Model.ModifyReplicationTaskRequest : AmazonDatabaseMigrationServiceRequest {
    private string _cdcStartPosition;
    private Nullable`1<DateTime> _cdcStartTime;
    private string _cdcStopPosition;
    private MigrationTypeValue _migrationType;
    private string _replicationTaskArn;
    private string _replicationTaskIdentifier;
    private string _replicationTaskSettings;
    private string _tableMappings;
    private string _taskData;
    public string CdcStartPosition { get; public set; }
    public Nullable`1<DateTime> CdcStartTime { get; public set; }
    public string CdcStopPosition { get; public set; }
    public MigrationTypeValue MigrationType { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationTaskArn { get; public set; }
    public string ReplicationTaskIdentifier { get; public set; }
    public string ReplicationTaskSettings { get; public set; }
    public string TableMappings { get; public set; }
    public string TaskData { get; public set; }
    public string get_CdcStartPosition();
    public void set_CdcStartPosition(string value);
    internal bool IsSetCdcStartPosition();
    public Nullable`1<DateTime> get_CdcStartTime();
    public void set_CdcStartTime(Nullable`1<DateTime> value);
    internal bool IsSetCdcStartTime();
    public string get_CdcStopPosition();
    public void set_CdcStopPosition(string value);
    internal bool IsSetCdcStopPosition();
    public MigrationTypeValue get_MigrationType();
    public void set_MigrationType(MigrationTypeValue value);
    internal bool IsSetMigrationType();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public string get_ReplicationTaskIdentifier();
    public void set_ReplicationTaskIdentifier(string value);
    internal bool IsSetReplicationTaskIdentifier();
    public string get_ReplicationTaskSettings();
    public void set_ReplicationTaskSettings(string value);
    internal bool IsSetReplicationTaskSettings();
    public string get_TableMappings();
    public void set_TableMappings(string value);
    internal bool IsSetTableMappings();
    public string get_TaskData();
    public void set_TaskData(string value);
    internal bool IsSetTaskData();
}
public class Amazon.DatabaseMigrationService.Model.ModifyReplicationTaskResponse : AmazonWebServiceResponse {
    private ReplicationTask _replicationTask;
    public ReplicationTask ReplicationTask { get; public set; }
    public ReplicationTask get_ReplicationTask();
    public void set_ReplicationTask(ReplicationTask value);
    internal bool IsSetReplicationTask();
}
public class Amazon.DatabaseMigrationService.Model.MongoDbDataProviderSettings : object {
    private AuthMechanismValue _authMechanism;
    private string _authSource;
    private AuthTypeValue _authType;
    private string _certificateArn;
    private string _databaseName;
    private Nullable`1<int> _port;
    private string _serverName;
    private DmsSslModeValue _sslMode;
    public AuthMechanismValue AuthMechanism { get; public set; }
    public string AuthSource { get; public set; }
    public AuthTypeValue AuthType { get; public set; }
    public string CertificateArn { get; public set; }
    public string DatabaseName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string ServerName { get; public set; }
    public DmsSslModeValue SslMode { get; public set; }
    public AuthMechanismValue get_AuthMechanism();
    public void set_AuthMechanism(AuthMechanismValue value);
    internal bool IsSetAuthMechanism();
    public string get_AuthSource();
    public void set_AuthSource(string value);
    internal bool IsSetAuthSource();
    public AuthTypeValue get_AuthType();
    public void set_AuthType(AuthTypeValue value);
    internal bool IsSetAuthType();
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public DmsSslModeValue get_SslMode();
    public void set_SslMode(DmsSslModeValue value);
    internal bool IsSetSslMode();
}
public class Amazon.DatabaseMigrationService.Model.MongoDbSettings : object {
    private AuthMechanismValue _authMechanism;
    private string _authSource;
    private AuthTypeValue _authType;
    private string _databaseName;
    private string _docsToInvestigate;
    private string _extractDocId;
    private string _kmsKeyId;
    private NestingLevelValue _nestingLevel;
    private string _password;
    private Nullable`1<int> _port;
    private Nullable`1<bool> _replicateShardCollections;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    private string _serverName;
    private string _username;
    private Nullable`1<bool> _useUpdateLookUp;
    public AuthMechanismValue AuthMechanism { get; public set; }
    public string AuthSource { get; public set; }
    public AuthTypeValue AuthType { get; public set; }
    public string DatabaseName { get; public set; }
    public string DocsToInvestigate { get; public set; }
    public string ExtractDocId { get; public set; }
    public string KmsKeyId { get; public set; }
    public NestingLevelValue NestingLevel { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public Nullable`1<bool> ReplicateShardCollections { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string ServerName { get; public set; }
    public string Username { get; public set; }
    public Nullable`1<bool> UseUpdateLookUp { get; public set; }
    public AuthMechanismValue get_AuthMechanism();
    public void set_AuthMechanism(AuthMechanismValue value);
    internal bool IsSetAuthMechanism();
    public string get_AuthSource();
    public void set_AuthSource(string value);
    internal bool IsSetAuthSource();
    public AuthTypeValue get_AuthType();
    public void set_AuthType(AuthTypeValue value);
    internal bool IsSetAuthType();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_DocsToInvestigate();
    public void set_DocsToInvestigate(string value);
    internal bool IsSetDocsToInvestigate();
    public string get_ExtractDocId();
    public void set_ExtractDocId(string value);
    internal bool IsSetExtractDocId();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public NestingLevelValue get_NestingLevel();
    public void set_NestingLevel(NestingLevelValue value);
    internal bool IsSetNestingLevel();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public Nullable`1<bool> get_ReplicateShardCollections();
    public void set_ReplicateShardCollections(Nullable`1<bool> value);
    internal bool IsSetReplicateShardCollections();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public Nullable`1<bool> get_UseUpdateLookUp();
    public void set_UseUpdateLookUp(Nullable`1<bool> value);
    internal bool IsSetUseUpdateLookUp();
}
public class Amazon.DatabaseMigrationService.Model.MoveReplicationTaskRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationTaskArn;
    private string _targetReplicationInstanceArn;
    [AWSPropertyAttribute]
public string ReplicationTaskArn { get; public set; }
    [AWSPropertyAttribute]
public string TargetReplicationInstanceArn { get; public set; }
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public string get_TargetReplicationInstanceArn();
    public void set_TargetReplicationInstanceArn(string value);
    internal bool IsSetTargetReplicationInstanceArn();
}
public class Amazon.DatabaseMigrationService.Model.MoveReplicationTaskResponse : AmazonWebServiceResponse {
    private ReplicationTask _replicationTask;
    public ReplicationTask ReplicationTask { get; public set; }
    public ReplicationTask get_ReplicationTask();
    public void set_ReplicationTask(ReplicationTask value);
    internal bool IsSetReplicationTask();
}
public class Amazon.DatabaseMigrationService.Model.MySqlDataProviderSettings : object {
    private string _certificateArn;
    private Nullable`1<int> _port;
    private string _serverName;
    private DmsSslModeValue _sslMode;
    public string CertificateArn { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string ServerName { get; public set; }
    public DmsSslModeValue SslMode { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public DmsSslModeValue get_SslMode();
    public void set_SslMode(DmsSslModeValue value);
    internal bool IsSetSslMode();
}
public class Amazon.DatabaseMigrationService.Model.MySQLSettings : object {
    private string _afterConnectScript;
    private Nullable`1<bool> _cleanSourceMetadataOnMismatch;
    private string _databaseName;
    private Nullable`1<int> _eventsPollInterval;
    private Nullable`1<int> _executeTimeout;
    private Nullable`1<int> _maxFileSize;
    private Nullable`1<int> _parallelLoadThreads;
    private string _password;
    private Nullable`1<int> _port;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    private string _serverName;
    private string _serverTimezone;
    private TargetDbType _targetDbType;
    private string _username;
    public string AfterConnectScript { get; public set; }
    public Nullable`1<bool> CleanSourceMetadataOnMismatch { get; public set; }
    public string DatabaseName { get; public set; }
    public Nullable`1<int> EventsPollInterval { get; public set; }
    public Nullable`1<int> ExecuteTimeout { get; public set; }
    public Nullable`1<int> MaxFileSize { get; public set; }
    public Nullable`1<int> ParallelLoadThreads { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string ServerName { get; public set; }
    public string ServerTimezone { get; public set; }
    public TargetDbType TargetDbType { get; public set; }
    public string Username { get; public set; }
    public string get_AfterConnectScript();
    public void set_AfterConnectScript(string value);
    internal bool IsSetAfterConnectScript();
    public Nullable`1<bool> get_CleanSourceMetadataOnMismatch();
    public void set_CleanSourceMetadataOnMismatch(Nullable`1<bool> value);
    internal bool IsSetCleanSourceMetadataOnMismatch();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_EventsPollInterval();
    public void set_EventsPollInterval(Nullable`1<int> value);
    internal bool IsSetEventsPollInterval();
    public Nullable`1<int> get_ExecuteTimeout();
    public void set_ExecuteTimeout(Nullable`1<int> value);
    internal bool IsSetExecuteTimeout();
    public Nullable`1<int> get_MaxFileSize();
    public void set_MaxFileSize(Nullable`1<int> value);
    internal bool IsSetMaxFileSize();
    public Nullable`1<int> get_ParallelLoadThreads();
    public void set_ParallelLoadThreads(Nullable`1<int> value);
    internal bool IsSetParallelLoadThreads();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_ServerTimezone();
    public void set_ServerTimezone(string value);
    internal bool IsSetServerTimezone();
    public TargetDbType get_TargetDbType();
    public void set_TargetDbType(TargetDbType value);
    internal bool IsSetTargetDbType();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.DatabaseMigrationService.Model.NeptuneSettings : object {
    private Nullable`1<int> _errorRetryDuration;
    private Nullable`1<bool> _iamAuthEnabled;
    private Nullable`1<int> _maxFileSize;
    private Nullable`1<int> _maxRetryCount;
    private string _s3BucketFolder;
    private string _s3BucketName;
    private string _serviceAccessRoleArn;
    public Nullable`1<int> ErrorRetryDuration { get; public set; }
    public Nullable`1<bool> IamAuthEnabled { get; public set; }
    public Nullable`1<int> MaxFileSize { get; public set; }
    public Nullable`1<int> MaxRetryCount { get; public set; }
    [AWSPropertyAttribute]
public string S3BucketFolder { get; public set; }
    [AWSPropertyAttribute]
public string S3BucketName { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public Nullable`1<int> get_ErrorRetryDuration();
    public void set_ErrorRetryDuration(Nullable`1<int> value);
    internal bool IsSetErrorRetryDuration();
    public Nullable`1<bool> get_IamAuthEnabled();
    public void set_IamAuthEnabled(Nullable`1<bool> value);
    internal bool IsSetIamAuthEnabled();
    public Nullable`1<int> get_MaxFileSize();
    public void set_MaxFileSize(Nullable`1<int> value);
    internal bool IsSetMaxFileSize();
    public Nullable`1<int> get_MaxRetryCount();
    public void set_MaxRetryCount(Nullable`1<int> value);
    internal bool IsSetMaxRetryCount();
    public string get_S3BucketFolder();
    public void set_S3BucketFolder(string value);
    internal bool IsSetS3BucketFolder();
    public string get_S3BucketName();
    public void set_S3BucketName(string value);
    internal bool IsSetS3BucketName();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
}
public class Amazon.DatabaseMigrationService.Model.OracleDataProviderSettings : object {
    private string _asmServer;
    private string _certificateArn;
    private string _databaseName;
    private Nullable`1<int> _port;
    private string _secretsManagerOracleAsmAccessRoleArn;
    private string _secretsManagerOracleAsmSecretId;
    private string _secretsManagerSecurityDbEncryptionAccessRoleArn;
    private string _secretsManagerSecurityDbEncryptionSecretId;
    private string _serverName;
    private DmsSslModeValue _sslMode;
    public string AsmServer { get; public set; }
    public string CertificateArn { get; public set; }
    public string DatabaseName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string SecretsManagerOracleAsmAccessRoleArn { get; public set; }
    public string SecretsManagerOracleAsmSecretId { get; public set; }
    public string SecretsManagerSecurityDbEncryptionAccessRoleArn { get; public set; }
    public string SecretsManagerSecurityDbEncryptionSecretId { get; public set; }
    public string ServerName { get; public set; }
    public DmsSslModeValue SslMode { get; public set; }
    public string get_AsmServer();
    public void set_AsmServer(string value);
    internal bool IsSetAsmServer();
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_SecretsManagerOracleAsmAccessRoleArn();
    public void set_SecretsManagerOracleAsmAccessRoleArn(string value);
    internal bool IsSetSecretsManagerOracleAsmAccessRoleArn();
    public string get_SecretsManagerOracleAsmSecretId();
    public void set_SecretsManagerOracleAsmSecretId(string value);
    internal bool IsSetSecretsManagerOracleAsmSecretId();
    public string get_SecretsManagerSecurityDbEncryptionAccessRoleArn();
    public void set_SecretsManagerSecurityDbEncryptionAccessRoleArn(string value);
    internal bool IsSetSecretsManagerSecurityDbEncryptionAccessRoleArn();
    public string get_SecretsManagerSecurityDbEncryptionSecretId();
    public void set_SecretsManagerSecurityDbEncryptionSecretId(string value);
    internal bool IsSetSecretsManagerSecurityDbEncryptionSecretId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public DmsSslModeValue get_SslMode();
    public void set_SslMode(DmsSslModeValue value);
    internal bool IsSetSslMode();
}
public class Amazon.DatabaseMigrationService.Model.OracleSettings : object {
    private Nullable`1<bool> _accessAlternateDirectly;
    private Nullable`1<int> _additionalArchivedLogDestId;
    private Nullable`1<bool> _addSupplementalLogging;
    private Nullable`1<bool> _allowSelectNestedTables;
    private Nullable`1<int> _archivedLogDestId;
    private Nullable`1<bool> _archivedLogsOnly;
    private string _asmPassword;
    private string _asmServer;
    private string _asmUser;
    private CharLengthSemantics _charLengthSemantics;
    private Nullable`1<bool> _convertTimestampWithZoneToUTC;
    private string _databaseName;
    private Nullable`1<bool> _directPathNoLog;
    private Nullable`1<bool> _directPathParallelLoad;
    private Nullable`1<bool> _enableHomogenousTablespace;
    private List`1<int> _extraArchivedLogDestIds;
    private Nullable`1<bool> _failTasksOnLobTruncation;
    private Nullable`1<int> _numberDatatypeScale;
    private Nullable`1<int> _openTransactionWindow;
    private string _oraclePathPrefix;
    private Nullable`1<int> _parallelAsmReadThreads;
    private string _password;
    private Nullable`1<int> _port;
    private Nullable`1<int> _readAheadBlocks;
    private Nullable`1<bool> _readTableSpaceName;
    private Nullable`1<bool> _replacePathPrefix;
    private Nullable`1<int> _retryInterval;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerOracleAsmAccessRoleArn;
    private string _secretsManagerOracleAsmSecretId;
    private string _secretsManagerSecretId;
    private string _securityDbEncryption;
    private string _securityDbEncryptionName;
    private string _serverName;
    private string _spatialDataOptionToGeoJsonFunctionName;
    private Nullable`1<int> _standbyDelayTime;
    private Nullable`1<bool> _trimSpaceInChar;
    private Nullable`1<bool> _useAlternateFolderForOnline;
    private Nullable`1<bool> _useBFile;
    private Nullable`1<bool> _useDirectPathFullLoad;
    private Nullable`1<bool> _useLogminerReader;
    private string _usePathPrefix;
    private string _username;
    public Nullable`1<bool> AccessAlternateDirectly { get; public set; }
    public Nullable`1<int> AdditionalArchivedLogDestId { get; public set; }
    public Nullable`1<bool> AddSupplementalLogging { get; public set; }
    public Nullable`1<bool> AllowSelectNestedTables { get; public set; }
    public Nullable`1<int> ArchivedLogDestId { get; public set; }
    public Nullable`1<bool> ArchivedLogsOnly { get; public set; }
    [AWSPropertyAttribute]
public string AsmPassword { get; public set; }
    public string AsmServer { get; public set; }
    public string AsmUser { get; public set; }
    public CharLengthSemantics CharLengthSemantics { get; public set; }
    public Nullable`1<bool> ConvertTimestampWithZoneToUTC { get; public set; }
    public string DatabaseName { get; public set; }
    public Nullable`1<bool> DirectPathNoLog { get; public set; }
    public Nullable`1<bool> DirectPathParallelLoad { get; public set; }
    public Nullable`1<bool> EnableHomogenousTablespace { get; public set; }
    public List`1<int> ExtraArchivedLogDestIds { get; public set; }
    public Nullable`1<bool> FailTasksOnLobTruncation { get; public set; }
    public Nullable`1<int> NumberDatatypeScale { get; public set; }
    public Nullable`1<int> OpenTransactionWindow { get; public set; }
    public string OraclePathPrefix { get; public set; }
    public Nullable`1<int> ParallelAsmReadThreads { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public Nullable`1<int> ReadAheadBlocks { get; public set; }
    public Nullable`1<bool> ReadTableSpaceName { get; public set; }
    public Nullable`1<bool> ReplacePathPrefix { get; public set; }
    public Nullable`1<int> RetryInterval { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerOracleAsmAccessRoleArn { get; public set; }
    public string SecretsManagerOracleAsmSecretId { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    [AWSPropertyAttribute]
public string SecurityDbEncryption { get; public set; }
    public string SecurityDbEncryptionName { get; public set; }
    public string ServerName { get; public set; }
    public string SpatialDataOptionToGeoJsonFunctionName { get; public set; }
    public Nullable`1<int> StandbyDelayTime { get; public set; }
    public Nullable`1<bool> TrimSpaceInChar { get; public set; }
    public Nullable`1<bool> UseAlternateFolderForOnline { get; public set; }
    public Nullable`1<bool> UseBFile { get; public set; }
    public Nullable`1<bool> UseDirectPathFullLoad { get; public set; }
    public Nullable`1<bool> UseLogminerReader { get; public set; }
    public string UsePathPrefix { get; public set; }
    public string Username { get; public set; }
    public Nullable`1<bool> get_AccessAlternateDirectly();
    public void set_AccessAlternateDirectly(Nullable`1<bool> value);
    internal bool IsSetAccessAlternateDirectly();
    public Nullable`1<int> get_AdditionalArchivedLogDestId();
    public void set_AdditionalArchivedLogDestId(Nullable`1<int> value);
    internal bool IsSetAdditionalArchivedLogDestId();
    public Nullable`1<bool> get_AddSupplementalLogging();
    public void set_AddSupplementalLogging(Nullable`1<bool> value);
    internal bool IsSetAddSupplementalLogging();
    public Nullable`1<bool> get_AllowSelectNestedTables();
    public void set_AllowSelectNestedTables(Nullable`1<bool> value);
    internal bool IsSetAllowSelectNestedTables();
    public Nullable`1<int> get_ArchivedLogDestId();
    public void set_ArchivedLogDestId(Nullable`1<int> value);
    internal bool IsSetArchivedLogDestId();
    public Nullable`1<bool> get_ArchivedLogsOnly();
    public void set_ArchivedLogsOnly(Nullable`1<bool> value);
    internal bool IsSetArchivedLogsOnly();
    public string get_AsmPassword();
    public void set_AsmPassword(string value);
    internal bool IsSetAsmPassword();
    public string get_AsmServer();
    public void set_AsmServer(string value);
    internal bool IsSetAsmServer();
    public string get_AsmUser();
    public void set_AsmUser(string value);
    internal bool IsSetAsmUser();
    public CharLengthSemantics get_CharLengthSemantics();
    public void set_CharLengthSemantics(CharLengthSemantics value);
    internal bool IsSetCharLengthSemantics();
    public Nullable`1<bool> get_ConvertTimestampWithZoneToUTC();
    public void set_ConvertTimestampWithZoneToUTC(Nullable`1<bool> value);
    internal bool IsSetConvertTimestampWithZoneToUTC();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<bool> get_DirectPathNoLog();
    public void set_DirectPathNoLog(Nullable`1<bool> value);
    internal bool IsSetDirectPathNoLog();
    public Nullable`1<bool> get_DirectPathParallelLoad();
    public void set_DirectPathParallelLoad(Nullable`1<bool> value);
    internal bool IsSetDirectPathParallelLoad();
    public Nullable`1<bool> get_EnableHomogenousTablespace();
    public void set_EnableHomogenousTablespace(Nullable`1<bool> value);
    internal bool IsSetEnableHomogenousTablespace();
    public List`1<int> get_ExtraArchivedLogDestIds();
    public void set_ExtraArchivedLogDestIds(List`1<int> value);
    internal bool IsSetExtraArchivedLogDestIds();
    public Nullable`1<bool> get_FailTasksOnLobTruncation();
    public void set_FailTasksOnLobTruncation(Nullable`1<bool> value);
    internal bool IsSetFailTasksOnLobTruncation();
    public Nullable`1<int> get_NumberDatatypeScale();
    public void set_NumberDatatypeScale(Nullable`1<int> value);
    internal bool IsSetNumberDatatypeScale();
    public Nullable`1<int> get_OpenTransactionWindow();
    public void set_OpenTransactionWindow(Nullable`1<int> value);
    internal bool IsSetOpenTransactionWindow();
    public string get_OraclePathPrefix();
    public void set_OraclePathPrefix(string value);
    internal bool IsSetOraclePathPrefix();
    public Nullable`1<int> get_ParallelAsmReadThreads();
    public void set_ParallelAsmReadThreads(Nullable`1<int> value);
    internal bool IsSetParallelAsmReadThreads();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public Nullable`1<int> get_ReadAheadBlocks();
    public void set_ReadAheadBlocks(Nullable`1<int> value);
    internal bool IsSetReadAheadBlocks();
    public Nullable`1<bool> get_ReadTableSpaceName();
    public void set_ReadTableSpaceName(Nullable`1<bool> value);
    internal bool IsSetReadTableSpaceName();
    public Nullable`1<bool> get_ReplacePathPrefix();
    public void set_ReplacePathPrefix(Nullable`1<bool> value);
    internal bool IsSetReplacePathPrefix();
    public Nullable`1<int> get_RetryInterval();
    public void set_RetryInterval(Nullable`1<int> value);
    internal bool IsSetRetryInterval();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerOracleAsmAccessRoleArn();
    public void set_SecretsManagerOracleAsmAccessRoleArn(string value);
    internal bool IsSetSecretsManagerOracleAsmAccessRoleArn();
    public string get_SecretsManagerOracleAsmSecretId();
    public void set_SecretsManagerOracleAsmSecretId(string value);
    internal bool IsSetSecretsManagerOracleAsmSecretId();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
    public string get_SecurityDbEncryption();
    public void set_SecurityDbEncryption(string value);
    internal bool IsSetSecurityDbEncryption();
    public string get_SecurityDbEncryptionName();
    public void set_SecurityDbEncryptionName(string value);
    internal bool IsSetSecurityDbEncryptionName();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_SpatialDataOptionToGeoJsonFunctionName();
    public void set_SpatialDataOptionToGeoJsonFunctionName(string value);
    internal bool IsSetSpatialDataOptionToGeoJsonFunctionName();
    public Nullable`1<int> get_StandbyDelayTime();
    public void set_StandbyDelayTime(Nullable`1<int> value);
    internal bool IsSetStandbyDelayTime();
    public Nullable`1<bool> get_TrimSpaceInChar();
    public void set_TrimSpaceInChar(Nullable`1<bool> value);
    internal bool IsSetTrimSpaceInChar();
    public Nullable`1<bool> get_UseAlternateFolderForOnline();
    public void set_UseAlternateFolderForOnline(Nullable`1<bool> value);
    internal bool IsSetUseAlternateFolderForOnline();
    public Nullable`1<bool> get_UseBFile();
    public void set_UseBFile(Nullable`1<bool> value);
    internal bool IsSetUseBFile();
    public Nullable`1<bool> get_UseDirectPathFullLoad();
    public void set_UseDirectPathFullLoad(Nullable`1<bool> value);
    internal bool IsSetUseDirectPathFullLoad();
    public Nullable`1<bool> get_UseLogminerReader();
    public void set_UseLogminerReader(Nullable`1<bool> value);
    internal bool IsSetUseLogminerReader();
    public string get_UsePathPrefix();
    public void set_UsePathPrefix(string value);
    internal bool IsSetUsePathPrefix();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.DatabaseMigrationService.Model.OrderableReplicationInstance : object {
    private List`1<string> _availabilityZones;
    private Nullable`1<int> _defaultAllocatedStorage;
    private string _engineVersion;
    private Nullable`1<int> _includedAllocatedStorage;
    private Nullable`1<int> _maxAllocatedStorage;
    private Nullable`1<int> _minAllocatedStorage;
    private ReleaseStatusValues _releaseStatus;
    private string _replicationInstanceClass;
    private string _storageType;
    public List`1<string> AvailabilityZones { get; public set; }
    public Nullable`1<int> DefaultAllocatedStorage { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<int> IncludedAllocatedStorage { get; public set; }
    public Nullable`1<int> MaxAllocatedStorage { get; public set; }
    public Nullable`1<int> MinAllocatedStorage { get; public set; }
    public ReleaseStatusValues ReleaseStatus { get; public set; }
    public string ReplicationInstanceClass { get; public set; }
    public string StorageType { get; public set; }
    public List`1<string> get_AvailabilityZones();
    public void set_AvailabilityZones(List`1<string> value);
    internal bool IsSetAvailabilityZones();
    public Nullable`1<int> get_DefaultAllocatedStorage();
    public void set_DefaultAllocatedStorage(Nullable`1<int> value);
    internal bool IsSetDefaultAllocatedStorage();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<int> get_IncludedAllocatedStorage();
    public void set_IncludedAllocatedStorage(Nullable`1<int> value);
    internal bool IsSetIncludedAllocatedStorage();
    public Nullable`1<int> get_MaxAllocatedStorage();
    public void set_MaxAllocatedStorage(Nullable`1<int> value);
    internal bool IsSetMaxAllocatedStorage();
    public Nullable`1<int> get_MinAllocatedStorage();
    public void set_MinAllocatedStorage(Nullable`1<int> value);
    internal bool IsSetMinAllocatedStorage();
    public ReleaseStatusValues get_ReleaseStatus();
    public void set_ReleaseStatus(ReleaseStatusValues value);
    internal bool IsSetReleaseStatus();
    public string get_ReplicationInstanceClass();
    public void set_ReplicationInstanceClass(string value);
    internal bool IsSetReplicationInstanceClass();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
}
public class Amazon.DatabaseMigrationService.Model.PendingMaintenanceAction : object {
    private string _action;
    private Nullable`1<DateTime> _autoAppliedAfterDate;
    private Nullable`1<DateTime> _currentApplyDate;
    private string _description;
    private Nullable`1<DateTime> _forcedApplyDate;
    private string _optInStatus;
    public string Action { get; public set; }
    public Nullable`1<DateTime> AutoAppliedAfterDate { get; public set; }
    public Nullable`1<DateTime> CurrentApplyDate { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<DateTime> ForcedApplyDate { get; public set; }
    public string OptInStatus { get; public set; }
    public string get_Action();
    public void set_Action(string value);
    internal bool IsSetAction();
    public Nullable`1<DateTime> get_AutoAppliedAfterDate();
    public void set_AutoAppliedAfterDate(Nullable`1<DateTime> value);
    internal bool IsSetAutoAppliedAfterDate();
    public Nullable`1<DateTime> get_CurrentApplyDate();
    public void set_CurrentApplyDate(Nullable`1<DateTime> value);
    internal bool IsSetCurrentApplyDate();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public Nullable`1<DateTime> get_ForcedApplyDate();
    public void set_ForcedApplyDate(Nullable`1<DateTime> value);
    internal bool IsSetForcedApplyDate();
    public string get_OptInStatus();
    public void set_OptInStatus(string value);
    internal bool IsSetOptInStatus();
}
public class Amazon.DatabaseMigrationService.Model.PostgreSqlDataProviderSettings : object {
    private string _certificateArn;
    private string _databaseName;
    private Nullable`1<int> _port;
    private string _serverName;
    private DmsSslModeValue _sslMode;
    public string CertificateArn { get; public set; }
    public string DatabaseName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string ServerName { get; public set; }
    public DmsSslModeValue SslMode { get; public set; }
    public string get_CertificateArn();
    public void set_CertificateArn(string value);
    internal bool IsSetCertificateArn();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public DmsSslModeValue get_SslMode();
    public void set_SslMode(DmsSslModeValue value);
    internal bool IsSetSslMode();
}
public class Amazon.DatabaseMigrationService.Model.PostgreSQLSettings : object {
    private string _afterConnectScript;
    private string _babelfishDatabaseName;
    private Nullable`1<bool> _captureDdls;
    private DatabaseMode _databaseMode;
    private string _databaseName;
    private string _ddlArtifactsSchema;
    private Nullable`1<int> _executeTimeout;
    private Nullable`1<bool> _failTasksOnLobTruncation;
    private Nullable`1<bool> _heartbeatEnable;
    private Nullable`1<int> _heartbeatFrequency;
    private string _heartbeatSchema;
    private Nullable`1<bool> _mapBooleanAsBoolean;
    private Nullable`1<bool> _mapJsonbAsClob;
    private LongVarcharMappingType _mapLongVarcharAs;
    private Nullable`1<int> _maxFileSize;
    private string _password;
    private PluginNameValue _pluginName;
    private Nullable`1<int> _port;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    private string _serverName;
    private string _slotName;
    private Nullable`1<bool> _trimSpaceInChar;
    private string _username;
    public string AfterConnectScript { get; public set; }
    public string BabelfishDatabaseName { get; public set; }
    public Nullable`1<bool> CaptureDdls { get; public set; }
    public DatabaseMode DatabaseMode { get; public set; }
    public string DatabaseName { get; public set; }
    public string DdlArtifactsSchema { get; public set; }
    public Nullable`1<int> ExecuteTimeout { get; public set; }
    public Nullable`1<bool> FailTasksOnLobTruncation { get; public set; }
    public Nullable`1<bool> HeartbeatEnable { get; public set; }
    public Nullable`1<int> HeartbeatFrequency { get; public set; }
    public string HeartbeatSchema { get; public set; }
    public Nullable`1<bool> MapBooleanAsBoolean { get; public set; }
    public Nullable`1<bool> MapJsonbAsClob { get; public set; }
    public LongVarcharMappingType MapLongVarcharAs { get; public set; }
    public Nullable`1<int> MaxFileSize { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public PluginNameValue PluginName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string ServerName { get; public set; }
    public string SlotName { get; public set; }
    public Nullable`1<bool> TrimSpaceInChar { get; public set; }
    public string Username { get; public set; }
    public string get_AfterConnectScript();
    public void set_AfterConnectScript(string value);
    internal bool IsSetAfterConnectScript();
    public string get_BabelfishDatabaseName();
    public void set_BabelfishDatabaseName(string value);
    internal bool IsSetBabelfishDatabaseName();
    public Nullable`1<bool> get_CaptureDdls();
    public void set_CaptureDdls(Nullable`1<bool> value);
    internal bool IsSetCaptureDdls();
    public DatabaseMode get_DatabaseMode();
    public void set_DatabaseMode(DatabaseMode value);
    internal bool IsSetDatabaseMode();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_DdlArtifactsSchema();
    public void set_DdlArtifactsSchema(string value);
    internal bool IsSetDdlArtifactsSchema();
    public Nullable`1<int> get_ExecuteTimeout();
    public void set_ExecuteTimeout(Nullable`1<int> value);
    internal bool IsSetExecuteTimeout();
    public Nullable`1<bool> get_FailTasksOnLobTruncation();
    public void set_FailTasksOnLobTruncation(Nullable`1<bool> value);
    internal bool IsSetFailTasksOnLobTruncation();
    public Nullable`1<bool> get_HeartbeatEnable();
    public void set_HeartbeatEnable(Nullable`1<bool> value);
    internal bool IsSetHeartbeatEnable();
    public Nullable`1<int> get_HeartbeatFrequency();
    public void set_HeartbeatFrequency(Nullable`1<int> value);
    internal bool IsSetHeartbeatFrequency();
    public string get_HeartbeatSchema();
    public void set_HeartbeatSchema(string value);
    internal bool IsSetHeartbeatSchema();
    public Nullable`1<bool> get_MapBooleanAsBoolean();
    public void set_MapBooleanAsBoolean(Nullable`1<bool> value);
    internal bool IsSetMapBooleanAsBoolean();
    public Nullable`1<bool> get_MapJsonbAsClob();
    public void set_MapJsonbAsClob(Nullable`1<bool> value);
    internal bool IsSetMapJsonbAsClob();
    public LongVarcharMappingType get_MapLongVarcharAs();
    public void set_MapLongVarcharAs(LongVarcharMappingType value);
    internal bool IsSetMapLongVarcharAs();
    public Nullable`1<int> get_MaxFileSize();
    public void set_MaxFileSize(Nullable`1<int> value);
    internal bool IsSetMaxFileSize();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public PluginNameValue get_PluginName();
    public void set_PluginName(PluginNameValue value);
    internal bool IsSetPluginName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_SlotName();
    public void set_SlotName(string value);
    internal bool IsSetSlotName();
    public Nullable`1<bool> get_TrimSpaceInChar();
    public void set_TrimSpaceInChar(Nullable`1<bool> value);
    internal bool IsSetTrimSpaceInChar();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.DatabaseMigrationService.Model.ProvisionData : object {
    private Nullable`1<DateTime> _dateNewProvisioningDataAvailable;
    private Nullable`1<DateTime> _dateProvisioned;
    private Nullable`1<bool> _isNewProvisioningAvailable;
    private Nullable`1<int> _provisionedCapacityUnits;
    private string _provisionState;
    private string _reasonForNewProvisioningData;
    public Nullable`1<DateTime> DateNewProvisioningDataAvailable { get; public set; }
    public Nullable`1<DateTime> DateProvisioned { get; public set; }
    public Nullable`1<bool> IsNewProvisioningAvailable { get; public set; }
    public Nullable`1<int> ProvisionedCapacityUnits { get; public set; }
    public string ProvisionState { get; public set; }
    public string ReasonForNewProvisioningData { get; public set; }
    public Nullable`1<DateTime> get_DateNewProvisioningDataAvailable();
    public void set_DateNewProvisioningDataAvailable(Nullable`1<DateTime> value);
    internal bool IsSetDateNewProvisioningDataAvailable();
    public Nullable`1<DateTime> get_DateProvisioned();
    public void set_DateProvisioned(Nullable`1<DateTime> value);
    internal bool IsSetDateProvisioned();
    public Nullable`1<bool> get_IsNewProvisioningAvailable();
    public void set_IsNewProvisioningAvailable(Nullable`1<bool> value);
    internal bool IsSetIsNewProvisioningAvailable();
    public Nullable`1<int> get_ProvisionedCapacityUnits();
    public void set_ProvisionedCapacityUnits(Nullable`1<int> value);
    internal bool IsSetProvisionedCapacityUnits();
    public string get_ProvisionState();
    public void set_ProvisionState(string value);
    internal bool IsSetProvisionState();
    public string get_ReasonForNewProvisioningData();
    public void set_ReasonForNewProvisioningData(string value);
    internal bool IsSetReasonForNewProvisioningData();
}
public class Amazon.DatabaseMigrationService.Model.RdsConfiguration : object {
    private string _deploymentOption;
    private string _engineEdition;
    private string _engineVersion;
    private Nullable`1<double> _instanceMemory;
    private string _instanceType;
    private Nullable`1<double> _instanceVcpu;
    private Nullable`1<int> _storageIops;
    private Nullable`1<int> _storageSize;
    private string _storageType;
    public string DeploymentOption { get; public set; }
    public string EngineEdition { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<double> InstanceMemory { get; public set; }
    public string InstanceType { get; public set; }
    public Nullable`1<double> InstanceVcpu { get; public set; }
    public Nullable`1<int> StorageIops { get; public set; }
    public Nullable`1<int> StorageSize { get; public set; }
    public string StorageType { get; public set; }
    public string get_DeploymentOption();
    public void set_DeploymentOption(string value);
    internal bool IsSetDeploymentOption();
    public string get_EngineEdition();
    public void set_EngineEdition(string value);
    internal bool IsSetEngineEdition();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<double> get_InstanceMemory();
    public void set_InstanceMemory(Nullable`1<double> value);
    internal bool IsSetInstanceMemory();
    public string get_InstanceType();
    public void set_InstanceType(string value);
    internal bool IsSetInstanceType();
    public Nullable`1<double> get_InstanceVcpu();
    public void set_InstanceVcpu(Nullable`1<double> value);
    internal bool IsSetInstanceVcpu();
    public Nullable`1<int> get_StorageIops();
    public void set_StorageIops(Nullable`1<int> value);
    internal bool IsSetStorageIops();
    public Nullable`1<int> get_StorageSize();
    public void set_StorageSize(Nullable`1<int> value);
    internal bool IsSetStorageSize();
    public string get_StorageType();
    public void set_StorageType(string value);
    internal bool IsSetStorageType();
}
public class Amazon.DatabaseMigrationService.Model.RdsRecommendation : object {
    private RdsRequirements _requirementsToTarget;
    private RdsConfiguration _targetConfiguration;
    public RdsRequirements RequirementsToTarget { get; public set; }
    public RdsConfiguration TargetConfiguration { get; public set; }
    public RdsRequirements get_RequirementsToTarget();
    public void set_RequirementsToTarget(RdsRequirements value);
    internal bool IsSetRequirementsToTarget();
    public RdsConfiguration get_TargetConfiguration();
    public void set_TargetConfiguration(RdsConfiguration value);
    internal bool IsSetTargetConfiguration();
}
public class Amazon.DatabaseMigrationService.Model.RdsRequirements : object {
    private string _deploymentOption;
    private string _engineEdition;
    private string _engineVersion;
    private Nullable`1<double> _instanceMemory;
    private Nullable`1<double> _instanceVcpu;
    private Nullable`1<int> _storageIops;
    private Nullable`1<int> _storageSize;
    public string DeploymentOption { get; public set; }
    public string EngineEdition { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<double> InstanceMemory { get; public set; }
    public Nullable`1<double> InstanceVcpu { get; public set; }
    public Nullable`1<int> StorageIops { get; public set; }
    public Nullable`1<int> StorageSize { get; public set; }
    public string get_DeploymentOption();
    public void set_DeploymentOption(string value);
    internal bool IsSetDeploymentOption();
    public string get_EngineEdition();
    public void set_EngineEdition(string value);
    internal bool IsSetEngineEdition();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<double> get_InstanceMemory();
    public void set_InstanceMemory(Nullable`1<double> value);
    internal bool IsSetInstanceMemory();
    public Nullable`1<double> get_InstanceVcpu();
    public void set_InstanceVcpu(Nullable`1<double> value);
    internal bool IsSetInstanceVcpu();
    public Nullable`1<int> get_StorageIops();
    public void set_StorageIops(Nullable`1<int> value);
    internal bool IsSetStorageIops();
    public Nullable`1<int> get_StorageSize();
    public void set_StorageSize(Nullable`1<int> value);
    internal bool IsSetStorageSize();
}
public class Amazon.DatabaseMigrationService.Model.RebootReplicationInstanceRequest : AmazonDatabaseMigrationServiceRequest {
    private Nullable`1<bool> _forceFailover;
    private Nullable`1<bool> _forcePlannedFailover;
    private string _replicationInstanceArn;
    public Nullable`1<bool> ForceFailover { get; public set; }
    public Nullable`1<bool> ForcePlannedFailover { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationInstanceArn { get; public set; }
    public Nullable`1<bool> get_ForceFailover();
    public void set_ForceFailover(Nullable`1<bool> value);
    internal bool IsSetForceFailover();
    public Nullable`1<bool> get_ForcePlannedFailover();
    public void set_ForcePlannedFailover(Nullable`1<bool> value);
    internal bool IsSetForcePlannedFailover();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
}
public class Amazon.DatabaseMigrationService.Model.RebootReplicationInstanceResponse : AmazonWebServiceResponse {
    private ReplicationInstance _replicationInstance;
    public ReplicationInstance ReplicationInstance { get; public set; }
    public ReplicationInstance get_ReplicationInstance();
    public void set_ReplicationInstance(ReplicationInstance value);
    internal bool IsSetReplicationInstance();
}
public class Amazon.DatabaseMigrationService.Model.Recommendation : object {
    private string _createdDate;
    private RecommendationData _data;
    private string _databaseId;
    private string _engineName;
    private Nullable`1<bool> _preferred;
    private RecommendationSettings _settings;
    private string _status;
    public string CreatedDate { get; public set; }
    public RecommendationData Data { get; public set; }
    public string DatabaseId { get; public set; }
    public string EngineName { get; public set; }
    public Nullable`1<bool> Preferred { get; public set; }
    public RecommendationSettings Settings { get; public set; }
    public string Status { get; public set; }
    public string get_CreatedDate();
    public void set_CreatedDate(string value);
    internal bool IsSetCreatedDate();
    public RecommendationData get_Data();
    public void set_Data(RecommendationData value);
    internal bool IsSetData();
    public string get_DatabaseId();
    public void set_DatabaseId(string value);
    internal bool IsSetDatabaseId();
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public Nullable`1<bool> get_Preferred();
    public void set_Preferred(Nullable`1<bool> value);
    internal bool IsSetPreferred();
    public RecommendationSettings get_Settings();
    public void set_Settings(RecommendationSettings value);
    internal bool IsSetSettings();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.DatabaseMigrationService.Model.RecommendationData : object {
    private RdsRecommendation _rdsEngine;
    public RdsRecommendation RdsEngine { get; public set; }
    public RdsRecommendation get_RdsEngine();
    public void set_RdsEngine(RdsRecommendation value);
    internal bool IsSetRdsEngine();
}
public class Amazon.DatabaseMigrationService.Model.RecommendationSettings : object {
    private string _instanceSizingType;
    private string _workloadType;
    [AWSPropertyAttribute]
public string InstanceSizingType { get; public set; }
    [AWSPropertyAttribute]
public string WorkloadType { get; public set; }
    public string get_InstanceSizingType();
    public void set_InstanceSizingType(string value);
    internal bool IsSetInstanceSizingType();
    public string get_WorkloadType();
    public void set_WorkloadType(string value);
    internal bool IsSetWorkloadType();
}
public class Amazon.DatabaseMigrationService.Model.RedisSettings : object {
    private string _authPassword;
    private RedisAuthTypeValue _authType;
    private string _authUserName;
    private Nullable`1<int> _port;
    private string _serverName;
    private string _sslCaCertificateArn;
    private SslSecurityProtocolValue _sslSecurityProtocol;
    [AWSPropertyAttribute]
public string AuthPassword { get; public set; }
    public RedisAuthTypeValue AuthType { get; public set; }
    public string AuthUserName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Port { get; public set; }
    [AWSPropertyAttribute]
public string ServerName { get; public set; }
    public string SslCaCertificateArn { get; public set; }
    public SslSecurityProtocolValue SslSecurityProtocol { get; public set; }
    public string get_AuthPassword();
    public void set_AuthPassword(string value);
    internal bool IsSetAuthPassword();
    public RedisAuthTypeValue get_AuthType();
    public void set_AuthType(RedisAuthTypeValue value);
    internal bool IsSetAuthType();
    public string get_AuthUserName();
    public void set_AuthUserName(string value);
    internal bool IsSetAuthUserName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_SslCaCertificateArn();
    public void set_SslCaCertificateArn(string value);
    internal bool IsSetSslCaCertificateArn();
    public SslSecurityProtocolValue get_SslSecurityProtocol();
    public void set_SslSecurityProtocol(SslSecurityProtocolValue value);
    internal bool IsSetSslSecurityProtocol();
}
public class Amazon.DatabaseMigrationService.Model.RedshiftDataProviderSettings : object {
    private string _databaseName;
    private Nullable`1<int> _port;
    private string _serverName;
    public string DatabaseName { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string ServerName { get; public set; }
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
}
public class Amazon.DatabaseMigrationService.Model.RedshiftSettings : object {
    private Nullable`1<bool> _acceptAnyDate;
    private string _afterConnectScript;
    private string _bucketFolder;
    private string _bucketName;
    private Nullable`1<bool> _caseSensitiveNames;
    private Nullable`1<bool> _compUpdate;
    private Nullable`1<int> _connectionTimeout;
    private string _databaseName;
    private string _dateFormat;
    private Nullable`1<bool> _emptyAsNull;
    private EncryptionModeValue _encryptionMode;
    private Nullable`1<bool> _explicitIds;
    private Nullable`1<int> _fileTransferUploadStreams;
    private Nullable`1<int> _loadTimeout;
    private Nullable`1<bool> _mapBooleanAsBoolean;
    private Nullable`1<int> _maxFileSize;
    private string _password;
    private Nullable`1<int> _port;
    private Nullable`1<bool> _removeQuotes;
    private string _replaceChars;
    private string _replaceInvalidChars;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    private string _serverName;
    private string _serverSideEncryptionKmsKeyId;
    private string _serviceAccessRoleArn;
    private string _timeFormat;
    private Nullable`1<bool> _trimBlanks;
    private Nullable`1<bool> _truncateColumns;
    private string _username;
    private Nullable`1<int> _writeBufferSize;
    public Nullable`1<bool> AcceptAnyDate { get; public set; }
    public string AfterConnectScript { get; public set; }
    public string BucketFolder { get; public set; }
    public string BucketName { get; public set; }
    public Nullable`1<bool> CaseSensitiveNames { get; public set; }
    public Nullable`1<bool> CompUpdate { get; public set; }
    public Nullable`1<int> ConnectionTimeout { get; public set; }
    public string DatabaseName { get; public set; }
    public string DateFormat { get; public set; }
    public Nullable`1<bool> EmptyAsNull { get; public set; }
    public EncryptionModeValue EncryptionMode { get; public set; }
    public Nullable`1<bool> ExplicitIds { get; public set; }
    public Nullable`1<int> FileTransferUploadStreams { get; public set; }
    public Nullable`1<int> LoadTimeout { get; public set; }
    public Nullable`1<bool> MapBooleanAsBoolean { get; public set; }
    public Nullable`1<int> MaxFileSize { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public Nullable`1<bool> RemoveQuotes { get; public set; }
    public string ReplaceChars { get; public set; }
    public string ReplaceInvalidChars { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string ServerName { get; public set; }
    public string ServerSideEncryptionKmsKeyId { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public string TimeFormat { get; public set; }
    public Nullable`1<bool> TrimBlanks { get; public set; }
    public Nullable`1<bool> TruncateColumns { get; public set; }
    public string Username { get; public set; }
    public Nullable`1<int> WriteBufferSize { get; public set; }
    public Nullable`1<bool> get_AcceptAnyDate();
    public void set_AcceptAnyDate(Nullable`1<bool> value);
    internal bool IsSetAcceptAnyDate();
    public string get_AfterConnectScript();
    public void set_AfterConnectScript(string value);
    internal bool IsSetAfterConnectScript();
    public string get_BucketFolder();
    public void set_BucketFolder(string value);
    internal bool IsSetBucketFolder();
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public Nullable`1<bool> get_CaseSensitiveNames();
    public void set_CaseSensitiveNames(Nullable`1<bool> value);
    internal bool IsSetCaseSensitiveNames();
    public Nullable`1<bool> get_CompUpdate();
    public void set_CompUpdate(Nullable`1<bool> value);
    internal bool IsSetCompUpdate();
    public Nullable`1<int> get_ConnectionTimeout();
    public void set_ConnectionTimeout(Nullable`1<int> value);
    internal bool IsSetConnectionTimeout();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_DateFormat();
    public void set_DateFormat(string value);
    internal bool IsSetDateFormat();
    public Nullable`1<bool> get_EmptyAsNull();
    public void set_EmptyAsNull(Nullable`1<bool> value);
    internal bool IsSetEmptyAsNull();
    public EncryptionModeValue get_EncryptionMode();
    public void set_EncryptionMode(EncryptionModeValue value);
    internal bool IsSetEncryptionMode();
    public Nullable`1<bool> get_ExplicitIds();
    public void set_ExplicitIds(Nullable`1<bool> value);
    internal bool IsSetExplicitIds();
    public Nullable`1<int> get_FileTransferUploadStreams();
    public void set_FileTransferUploadStreams(Nullable`1<int> value);
    internal bool IsSetFileTransferUploadStreams();
    public Nullable`1<int> get_LoadTimeout();
    public void set_LoadTimeout(Nullable`1<int> value);
    internal bool IsSetLoadTimeout();
    public Nullable`1<bool> get_MapBooleanAsBoolean();
    public void set_MapBooleanAsBoolean(Nullable`1<bool> value);
    internal bool IsSetMapBooleanAsBoolean();
    public Nullable`1<int> get_MaxFileSize();
    public void set_MaxFileSize(Nullable`1<int> value);
    internal bool IsSetMaxFileSize();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public Nullable`1<bool> get_RemoveQuotes();
    public void set_RemoveQuotes(Nullable`1<bool> value);
    internal bool IsSetRemoveQuotes();
    public string get_ReplaceChars();
    public void set_ReplaceChars(string value);
    internal bool IsSetReplaceChars();
    public string get_ReplaceInvalidChars();
    public void set_ReplaceInvalidChars(string value);
    internal bool IsSetReplaceInvalidChars();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_ServerSideEncryptionKmsKeyId();
    public void set_ServerSideEncryptionKmsKeyId(string value);
    internal bool IsSetServerSideEncryptionKmsKeyId();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
    public string get_TimeFormat();
    public void set_TimeFormat(string value);
    internal bool IsSetTimeFormat();
    public Nullable`1<bool> get_TrimBlanks();
    public void set_TrimBlanks(Nullable`1<bool> value);
    internal bool IsSetTrimBlanks();
    public Nullable`1<bool> get_TruncateColumns();
    public void set_TruncateColumns(Nullable`1<bool> value);
    internal bool IsSetTruncateColumns();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
    public Nullable`1<int> get_WriteBufferSize();
    public void set_WriteBufferSize(Nullable`1<int> value);
    internal bool IsSetWriteBufferSize();
}
public class Amazon.DatabaseMigrationService.Model.RefreshSchemasRequest : AmazonDatabaseMigrationServiceRequest {
    private string _endpointArn;
    private string _replicationInstanceArn;
    [AWSPropertyAttribute]
public string EndpointArn { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationInstanceArn { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
}
public class Amazon.DatabaseMigrationService.Model.RefreshSchemasResponse : AmazonWebServiceResponse {
    private RefreshSchemasStatus _refreshSchemasStatus;
    public RefreshSchemasStatus RefreshSchemasStatus { get; public set; }
    public RefreshSchemasStatus get_RefreshSchemasStatus();
    public void set_RefreshSchemasStatus(RefreshSchemasStatus value);
    internal bool IsSetRefreshSchemasStatus();
}
public class Amazon.DatabaseMigrationService.Model.RefreshSchemasStatus : object {
    private string _endpointArn;
    private string _lastFailureMessage;
    private Nullable`1<DateTime> _lastRefreshDate;
    private string _replicationInstanceArn;
    private RefreshSchemasStatusTypeValue _status;
    public string EndpointArn { get; public set; }
    public string LastFailureMessage { get; public set; }
    public Nullable`1<DateTime> LastRefreshDate { get; public set; }
    public string ReplicationInstanceArn { get; public set; }
    public RefreshSchemasStatusTypeValue Status { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
    public string get_LastFailureMessage();
    public void set_LastFailureMessage(string value);
    internal bool IsSetLastFailureMessage();
    public Nullable`1<DateTime> get_LastRefreshDate();
    public void set_LastRefreshDate(Nullable`1<DateTime> value);
    internal bool IsSetLastRefreshDate();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
    public RefreshSchemasStatusTypeValue get_Status();
    public void set_Status(RefreshSchemasStatusTypeValue value);
    internal bool IsSetStatus();
}
public class Amazon.DatabaseMigrationService.Model.ReloadReplicationTablesRequest : AmazonDatabaseMigrationServiceRequest {
    private ReloadOptionValue _reloadOption;
    private string _replicationConfigArn;
    private List`1<TableToReload> _tablesToReload;
    public ReloadOptionValue ReloadOption { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationConfigArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<TableToReload> TablesToReload { get; public set; }
    public ReloadOptionValue get_ReloadOption();
    public void set_ReloadOption(ReloadOptionValue value);
    internal bool IsSetReloadOption();
    public string get_ReplicationConfigArn();
    public void set_ReplicationConfigArn(string value);
    internal bool IsSetReplicationConfigArn();
    public List`1<TableToReload> get_TablesToReload();
    public void set_TablesToReload(List`1<TableToReload> value);
    internal bool IsSetTablesToReload();
}
public class Amazon.DatabaseMigrationService.Model.ReloadReplicationTablesResponse : AmazonWebServiceResponse {
    private string _replicationConfigArn;
    public string ReplicationConfigArn { get; public set; }
    public string get_ReplicationConfigArn();
    public void set_ReplicationConfigArn(string value);
    internal bool IsSetReplicationConfigArn();
}
public class Amazon.DatabaseMigrationService.Model.ReloadTablesRequest : AmazonDatabaseMigrationServiceRequest {
    private ReloadOptionValue _reloadOption;
    private string _replicationTaskArn;
    private List`1<TableToReload> _tablesToReload;
    public ReloadOptionValue ReloadOption { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationTaskArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<TableToReload> TablesToReload { get; public set; }
    public ReloadOptionValue get_ReloadOption();
    public void set_ReloadOption(ReloadOptionValue value);
    internal bool IsSetReloadOption();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public List`1<TableToReload> get_TablesToReload();
    public void set_TablesToReload(List`1<TableToReload> value);
    internal bool IsSetTablesToReload();
}
public class Amazon.DatabaseMigrationService.Model.ReloadTablesResponse : AmazonWebServiceResponse {
    private string _replicationTaskArn;
    public string ReplicationTaskArn { get; public set; }
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
}
public class Amazon.DatabaseMigrationService.Model.RemoveTagsFromResourceRequest : AmazonDatabaseMigrationServiceRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.DatabaseMigrationService.Model.RemoveTagsFromResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.DatabaseMigrationService.Model.Replication : object {
    private string _cdcStartPosition;
    private Nullable`1<DateTime> _cdcStartTime;
    private string _cdcStopPosition;
    private List`1<string> _failureMessages;
    private ProvisionData _provisionData;
    private string _recoveryCheckpoint;
    private string _replicationConfigArn;
    private string _replicationConfigIdentifier;
    private Nullable`1<DateTime> _replicationCreateTime;
    private Nullable`1<DateTime> _replicationDeprovisionTime;
    private Nullable`1<DateTime> _replicationLastStopTime;
    private ReplicationStats _replicationStats;
    private MigrationTypeValue _replicationType;
    private Nullable`1<DateTime> _replicationUpdateTime;
    private string _sourceEndpointArn;
    private string _startReplicationType;
    private string _status;
    private string _stopReason;
    private string _targetEndpointArn;
    public string CdcStartPosition { get; public set; }
    public Nullable`1<DateTime> CdcStartTime { get; public set; }
    public string CdcStopPosition { get; public set; }
    public List`1<string> FailureMessages { get; public set; }
    public ProvisionData ProvisionData { get; public set; }
    public string RecoveryCheckpoint { get; public set; }
    public string ReplicationConfigArn { get; public set; }
    public string ReplicationConfigIdentifier { get; public set; }
    public Nullable`1<DateTime> ReplicationCreateTime { get; public set; }
    public Nullable`1<DateTime> ReplicationDeprovisionTime { get; public set; }
    public Nullable`1<DateTime> ReplicationLastStopTime { get; public set; }
    public ReplicationStats ReplicationStats { get; public set; }
    public MigrationTypeValue ReplicationType { get; public set; }
    public Nullable`1<DateTime> ReplicationUpdateTime { get; public set; }
    public string SourceEndpointArn { get; public set; }
    public string StartReplicationType { get; public set; }
    public string Status { get; public set; }
    public string StopReason { get; public set; }
    public string TargetEndpointArn { get; public set; }
    public string get_CdcStartPosition();
    public void set_CdcStartPosition(string value);
    internal bool IsSetCdcStartPosition();
    public Nullable`1<DateTime> get_CdcStartTime();
    public void set_CdcStartTime(Nullable`1<DateTime> value);
    internal bool IsSetCdcStartTime();
    public string get_CdcStopPosition();
    public void set_CdcStopPosition(string value);
    internal bool IsSetCdcStopPosition();
    public List`1<string> get_FailureMessages();
    public void set_FailureMessages(List`1<string> value);
    internal bool IsSetFailureMessages();
    public ProvisionData get_ProvisionData();
    public void set_ProvisionData(ProvisionData value);
    internal bool IsSetProvisionData();
    public string get_RecoveryCheckpoint();
    public void set_RecoveryCheckpoint(string value);
    internal bool IsSetRecoveryCheckpoint();
    public string get_ReplicationConfigArn();
    public void set_ReplicationConfigArn(string value);
    internal bool IsSetReplicationConfigArn();
    public string get_ReplicationConfigIdentifier();
    public void set_ReplicationConfigIdentifier(string value);
    internal bool IsSetReplicationConfigIdentifier();
    public Nullable`1<DateTime> get_ReplicationCreateTime();
    public void set_ReplicationCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetReplicationCreateTime();
    public Nullable`1<DateTime> get_ReplicationDeprovisionTime();
    public void set_ReplicationDeprovisionTime(Nullable`1<DateTime> value);
    internal bool IsSetReplicationDeprovisionTime();
    public Nullable`1<DateTime> get_ReplicationLastStopTime();
    public void set_ReplicationLastStopTime(Nullable`1<DateTime> value);
    internal bool IsSetReplicationLastStopTime();
    public ReplicationStats get_ReplicationStats();
    public void set_ReplicationStats(ReplicationStats value);
    internal bool IsSetReplicationStats();
    public MigrationTypeValue get_ReplicationType();
    public void set_ReplicationType(MigrationTypeValue value);
    internal bool IsSetReplicationType();
    public Nullable`1<DateTime> get_ReplicationUpdateTime();
    public void set_ReplicationUpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetReplicationUpdateTime();
    public string get_SourceEndpointArn();
    public void set_SourceEndpointArn(string value);
    internal bool IsSetSourceEndpointArn();
    public string get_StartReplicationType();
    public void set_StartReplicationType(string value);
    internal bool IsSetStartReplicationType();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StopReason();
    public void set_StopReason(string value);
    internal bool IsSetStopReason();
    public string get_TargetEndpointArn();
    public void set_TargetEndpointArn(string value);
    internal bool IsSetTargetEndpointArn();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationConfig : object {
    private ComputeConfig _computeConfig;
    private string _replicationConfigArn;
    private Nullable`1<DateTime> _replicationConfigCreateTime;
    private string _replicationConfigIdentifier;
    private Nullable`1<DateTime> _replicationConfigUpdateTime;
    private string _replicationSettings;
    private MigrationTypeValue _replicationType;
    private string _sourceEndpointArn;
    private string _supplementalSettings;
    private string _tableMappings;
    private string _targetEndpointArn;
    public ComputeConfig ComputeConfig { get; public set; }
    public string ReplicationConfigArn { get; public set; }
    public Nullable`1<DateTime> ReplicationConfigCreateTime { get; public set; }
    public string ReplicationConfigIdentifier { get; public set; }
    public Nullable`1<DateTime> ReplicationConfigUpdateTime { get; public set; }
    public string ReplicationSettings { get; public set; }
    public MigrationTypeValue ReplicationType { get; public set; }
    public string SourceEndpointArn { get; public set; }
    public string SupplementalSettings { get; public set; }
    public string TableMappings { get; public set; }
    public string TargetEndpointArn { get; public set; }
    public ComputeConfig get_ComputeConfig();
    public void set_ComputeConfig(ComputeConfig value);
    internal bool IsSetComputeConfig();
    public string get_ReplicationConfigArn();
    public void set_ReplicationConfigArn(string value);
    internal bool IsSetReplicationConfigArn();
    public Nullable`1<DateTime> get_ReplicationConfigCreateTime();
    public void set_ReplicationConfigCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetReplicationConfigCreateTime();
    public string get_ReplicationConfigIdentifier();
    public void set_ReplicationConfigIdentifier(string value);
    internal bool IsSetReplicationConfigIdentifier();
    public Nullable`1<DateTime> get_ReplicationConfigUpdateTime();
    public void set_ReplicationConfigUpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetReplicationConfigUpdateTime();
    public string get_ReplicationSettings();
    public void set_ReplicationSettings(string value);
    internal bool IsSetReplicationSettings();
    public MigrationTypeValue get_ReplicationType();
    public void set_ReplicationType(MigrationTypeValue value);
    internal bool IsSetReplicationType();
    public string get_SourceEndpointArn();
    public void set_SourceEndpointArn(string value);
    internal bool IsSetSourceEndpointArn();
    public string get_SupplementalSettings();
    public void set_SupplementalSettings(string value);
    internal bool IsSetSupplementalSettings();
    public string get_TableMappings();
    public void set_TableMappings(string value);
    internal bool IsSetTableMappings();
    public string get_TargetEndpointArn();
    public void set_TargetEndpointArn(string value);
    internal bool IsSetTargetEndpointArn();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationInstance : object {
    private Nullable`1<int> _allocatedStorage;
    private Nullable`1<bool> _autoMinorVersionUpgrade;
    private string _availabilityZone;
    private string _dnsNameServers;
    private string _engineVersion;
    private Nullable`1<DateTime> _freeUntil;
    private Nullable`1<DateTime> _instanceCreateTime;
    private string _kmsKeyId;
    private Nullable`1<bool> _multiAZ;
    private string _networkType;
    private ReplicationPendingModifiedValues _pendingModifiedValues;
    private string _preferredMaintenanceWindow;
    private Nullable`1<bool> _publiclyAccessible;
    private string _replicationInstanceArn;
    private string _replicationInstanceClass;
    private string _replicationInstanceIdentifier;
    private List`1<string> _replicationInstanceIpv6Addresses;
    private string _replicationInstancePrivateIpAddress;
    private List`1<string> _replicationInstancePrivateIpAddresses;
    private string _replicationInstancePublicIpAddress;
    private List`1<string> _replicationInstancePublicIpAddresses;
    private string _replicationInstanceStatus;
    private ReplicationSubnetGroup _replicationSubnetGroup;
    private string _secondaryAvailabilityZone;
    private List`1<VpcSecurityGroupMembership> _vpcSecurityGroups;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public Nullable`1<bool> AutoMinorVersionUpgrade { get; public set; }
    public string AvailabilityZone { get; public set; }
    public string DnsNameServers { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<DateTime> FreeUntil { get; public set; }
    public Nullable`1<DateTime> InstanceCreateTime { get; public set; }
    public string KmsKeyId { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string NetworkType { get; public set; }
    public ReplicationPendingModifiedValues PendingModifiedValues { get; public set; }
    public string PreferredMaintenanceWindow { get; public set; }
    public Nullable`1<bool> PubliclyAccessible { get; public set; }
    public string ReplicationInstanceArn { get; public set; }
    public string ReplicationInstanceClass { get; public set; }
    public string ReplicationInstanceIdentifier { get; public set; }
    public List`1<string> ReplicationInstanceIpv6Addresses { get; public set; }
    [ObsoleteAttribute("This type is deprecated")]
public string ReplicationInstancePrivateIpAddress { get; public set; }
    public List`1<string> ReplicationInstancePrivateIpAddresses { get; public set; }
    [ObsoleteAttribute("This type is deprecated")]
public string ReplicationInstancePublicIpAddress { get; public set; }
    public List`1<string> ReplicationInstancePublicIpAddresses { get; public set; }
    public string ReplicationInstanceStatus { get; public set; }
    public ReplicationSubnetGroup ReplicationSubnetGroup { get; public set; }
    public string SecondaryAvailabilityZone { get; public set; }
    public List`1<VpcSecurityGroupMembership> VpcSecurityGroups { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public Nullable`1<bool> get_AutoMinorVersionUpgrade();
    public void set_AutoMinorVersionUpgrade(Nullable`1<bool> value);
    internal bool IsSetAutoMinorVersionUpgrade();
    public string get_AvailabilityZone();
    public void set_AvailabilityZone(string value);
    internal bool IsSetAvailabilityZone();
    public string get_DnsNameServers();
    public void set_DnsNameServers(string value);
    internal bool IsSetDnsNameServers();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<DateTime> get_FreeUntil();
    public void set_FreeUntil(Nullable`1<DateTime> value);
    internal bool IsSetFreeUntil();
    public Nullable`1<DateTime> get_InstanceCreateTime();
    public void set_InstanceCreateTime(Nullable`1<DateTime> value);
    internal bool IsSetInstanceCreateTime();
    public string get_KmsKeyId();
    public void set_KmsKeyId(string value);
    internal bool IsSetKmsKeyId();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public ReplicationPendingModifiedValues get_PendingModifiedValues();
    public void set_PendingModifiedValues(ReplicationPendingModifiedValues value);
    internal bool IsSetPendingModifiedValues();
    public string get_PreferredMaintenanceWindow();
    public void set_PreferredMaintenanceWindow(string value);
    internal bool IsSetPreferredMaintenanceWindow();
    public Nullable`1<bool> get_PubliclyAccessible();
    public void set_PubliclyAccessible(Nullable`1<bool> value);
    internal bool IsSetPubliclyAccessible();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
    public string get_ReplicationInstanceClass();
    public void set_ReplicationInstanceClass(string value);
    internal bool IsSetReplicationInstanceClass();
    public string get_ReplicationInstanceIdentifier();
    public void set_ReplicationInstanceIdentifier(string value);
    internal bool IsSetReplicationInstanceIdentifier();
    public List`1<string> get_ReplicationInstanceIpv6Addresses();
    public void set_ReplicationInstanceIpv6Addresses(List`1<string> value);
    internal bool IsSetReplicationInstanceIpv6Addresses();
    public string get_ReplicationInstancePrivateIpAddress();
    public void set_ReplicationInstancePrivateIpAddress(string value);
    internal bool IsSetReplicationInstancePrivateIpAddress();
    public List`1<string> get_ReplicationInstancePrivateIpAddresses();
    public void set_ReplicationInstancePrivateIpAddresses(List`1<string> value);
    internal bool IsSetReplicationInstancePrivateIpAddresses();
    public string get_ReplicationInstancePublicIpAddress();
    public void set_ReplicationInstancePublicIpAddress(string value);
    internal bool IsSetReplicationInstancePublicIpAddress();
    public List`1<string> get_ReplicationInstancePublicIpAddresses();
    public void set_ReplicationInstancePublicIpAddresses(List`1<string> value);
    internal bool IsSetReplicationInstancePublicIpAddresses();
    public string get_ReplicationInstanceStatus();
    public void set_ReplicationInstanceStatus(string value);
    internal bool IsSetReplicationInstanceStatus();
    public ReplicationSubnetGroup get_ReplicationSubnetGroup();
    public void set_ReplicationSubnetGroup(ReplicationSubnetGroup value);
    internal bool IsSetReplicationSubnetGroup();
    public string get_SecondaryAvailabilityZone();
    public void set_SecondaryAvailabilityZone(string value);
    internal bool IsSetSecondaryAvailabilityZone();
    public List`1<VpcSecurityGroupMembership> get_VpcSecurityGroups();
    public void set_VpcSecurityGroups(List`1<VpcSecurityGroupMembership> value);
    internal bool IsSetVpcSecurityGroups();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationInstanceTaskLog : object {
    private Nullable`1<long> _replicationInstanceTaskLogSize;
    private string _replicationTaskArn;
    private string _replicationTaskName;
    public Nullable`1<long> ReplicationInstanceTaskLogSize { get; public set; }
    public string ReplicationTaskArn { get; public set; }
    public string ReplicationTaskName { get; public set; }
    public Nullable`1<long> get_ReplicationInstanceTaskLogSize();
    public void set_ReplicationInstanceTaskLogSize(Nullable`1<long> value);
    internal bool IsSetReplicationInstanceTaskLogSize();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public string get_ReplicationTaskName();
    public void set_ReplicationTaskName(string value);
    internal bool IsSetReplicationTaskName();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationPendingModifiedValues : object {
    private Nullable`1<int> _allocatedStorage;
    private string _engineVersion;
    private Nullable`1<bool> _multiAZ;
    private string _networkType;
    private string _replicationInstanceClass;
    public Nullable`1<int> AllocatedStorage { get; public set; }
    public string EngineVersion { get; public set; }
    public Nullable`1<bool> MultiAZ { get; public set; }
    public string NetworkType { get; public set; }
    public string ReplicationInstanceClass { get; public set; }
    public Nullable`1<int> get_AllocatedStorage();
    public void set_AllocatedStorage(Nullable`1<int> value);
    internal bool IsSetAllocatedStorage();
    public string get_EngineVersion();
    public void set_EngineVersion(string value);
    internal bool IsSetEngineVersion();
    public Nullable`1<bool> get_MultiAZ();
    public void set_MultiAZ(Nullable`1<bool> value);
    internal bool IsSetMultiAZ();
    public string get_NetworkType();
    public void set_NetworkType(string value);
    internal bool IsSetNetworkType();
    public string get_ReplicationInstanceClass();
    public void set_ReplicationInstanceClass(string value);
    internal bool IsSetReplicationInstanceClass();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationStats : object {
    private Nullable`1<long> _elapsedTimeMillis;
    private Nullable`1<DateTime> _freshStartDate;
    private Nullable`1<DateTime> _fullLoadFinishDate;
    private Nullable`1<int> _fullLoadProgressPercent;
    private Nullable`1<DateTime> _fullLoadStartDate;
    private Nullable`1<DateTime> _startDate;
    private Nullable`1<DateTime> _stopDate;
    private Nullable`1<int> _tablesErrored;
    private Nullable`1<int> _tablesLoaded;
    private Nullable`1<int> _tablesLoading;
    private Nullable`1<int> _tablesQueued;
    public Nullable`1<long> ElapsedTimeMillis { get; public set; }
    public Nullable`1<DateTime> FreshStartDate { get; public set; }
    public Nullable`1<DateTime> FullLoadFinishDate { get; public set; }
    public Nullable`1<int> FullLoadProgressPercent { get; public set; }
    public Nullable`1<DateTime> FullLoadStartDate { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public Nullable`1<DateTime> StopDate { get; public set; }
    public Nullable`1<int> TablesErrored { get; public set; }
    public Nullable`1<int> TablesLoaded { get; public set; }
    public Nullable`1<int> TablesLoading { get; public set; }
    public Nullable`1<int> TablesQueued { get; public set; }
    public Nullable`1<long> get_ElapsedTimeMillis();
    public void set_ElapsedTimeMillis(Nullable`1<long> value);
    internal bool IsSetElapsedTimeMillis();
    public Nullable`1<DateTime> get_FreshStartDate();
    public void set_FreshStartDate(Nullable`1<DateTime> value);
    internal bool IsSetFreshStartDate();
    public Nullable`1<DateTime> get_FullLoadFinishDate();
    public void set_FullLoadFinishDate(Nullable`1<DateTime> value);
    internal bool IsSetFullLoadFinishDate();
    public Nullable`1<int> get_FullLoadProgressPercent();
    public void set_FullLoadProgressPercent(Nullable`1<int> value);
    internal bool IsSetFullLoadProgressPercent();
    public Nullable`1<DateTime> get_FullLoadStartDate();
    public void set_FullLoadStartDate(Nullable`1<DateTime> value);
    internal bool IsSetFullLoadStartDate();
    public Nullable`1<DateTime> get_StartDate();
    public void set_StartDate(Nullable`1<DateTime> value);
    internal bool IsSetStartDate();
    public Nullable`1<DateTime> get_StopDate();
    public void set_StopDate(Nullable`1<DateTime> value);
    internal bool IsSetStopDate();
    public Nullable`1<int> get_TablesErrored();
    public void set_TablesErrored(Nullable`1<int> value);
    internal bool IsSetTablesErrored();
    public Nullable`1<int> get_TablesLoaded();
    public void set_TablesLoaded(Nullable`1<int> value);
    internal bool IsSetTablesLoaded();
    public Nullable`1<int> get_TablesLoading();
    public void set_TablesLoading(Nullable`1<int> value);
    internal bool IsSetTablesLoading();
    public Nullable`1<int> get_TablesQueued();
    public void set_TablesQueued(Nullable`1<int> value);
    internal bool IsSetTablesQueued();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationSubnetGroup : object {
    private string _replicationSubnetGroupDescription;
    private string _replicationSubnetGroupIdentifier;
    private string _subnetGroupStatus;
    private List`1<Subnet> _subnets;
    private List`1<string> _supportedNetworkTypes;
    private string _vpcId;
    public string ReplicationSubnetGroupDescription { get; public set; }
    public string ReplicationSubnetGroupIdentifier { get; public set; }
    public string SubnetGroupStatus { get; public set; }
    public List`1<Subnet> Subnets { get; public set; }
    public List`1<string> SupportedNetworkTypes { get; public set; }
    public string VpcId { get; public set; }
    public string get_ReplicationSubnetGroupDescription();
    public void set_ReplicationSubnetGroupDescription(string value);
    internal bool IsSetReplicationSubnetGroupDescription();
    public string get_ReplicationSubnetGroupIdentifier();
    public void set_ReplicationSubnetGroupIdentifier(string value);
    internal bool IsSetReplicationSubnetGroupIdentifier();
    public string get_SubnetGroupStatus();
    public void set_SubnetGroupStatus(string value);
    internal bool IsSetSubnetGroupStatus();
    public List`1<Subnet> get_Subnets();
    public void set_Subnets(List`1<Subnet> value);
    internal bool IsSetSubnets();
    public List`1<string> get_SupportedNetworkTypes();
    public void set_SupportedNetworkTypes(List`1<string> value);
    internal bool IsSetSupportedNetworkTypes();
    public string get_VpcId();
    public void set_VpcId(string value);
    internal bool IsSetVpcId();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationSubnetGroupDoesNotCoverEnoughAZsException : AmazonDatabaseMigrationServiceException {
    public ReplicationSubnetGroupDoesNotCoverEnoughAZsException(string message);
    public ReplicationSubnetGroupDoesNotCoverEnoughAZsException(string message, Exception innerException);
    public ReplicationSubnetGroupDoesNotCoverEnoughAZsException(Exception innerException);
    public ReplicationSubnetGroupDoesNotCoverEnoughAZsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ReplicationSubnetGroupDoesNotCoverEnoughAZsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.ReplicationTask : object {
    private string _cdcStartPosition;
    private string _cdcStopPosition;
    private string _lastFailureMessage;
    private MigrationTypeValue _migrationType;
    private string _recoveryCheckpoint;
    private string _replicationInstanceArn;
    private string _replicationTaskArn;
    private Nullable`1<DateTime> _replicationTaskCreationDate;
    private string _replicationTaskIdentifier;
    private string _replicationTaskSettings;
    private Nullable`1<DateTime> _replicationTaskStartDate;
    private ReplicationTaskStats _replicationTaskStats;
    private string _sourceEndpointArn;
    private string _status;
    private string _stopReason;
    private string _tableMappings;
    private string _targetEndpointArn;
    private string _targetReplicationInstanceArn;
    private string _taskData;
    public string CdcStartPosition { get; public set; }
    public string CdcStopPosition { get; public set; }
    public string LastFailureMessage { get; public set; }
    public MigrationTypeValue MigrationType { get; public set; }
    public string RecoveryCheckpoint { get; public set; }
    public string ReplicationInstanceArn { get; public set; }
    public string ReplicationTaskArn { get; public set; }
    public Nullable`1<DateTime> ReplicationTaskCreationDate { get; public set; }
    public string ReplicationTaskIdentifier { get; public set; }
    public string ReplicationTaskSettings { get; public set; }
    public Nullable`1<DateTime> ReplicationTaskStartDate { get; public set; }
    public ReplicationTaskStats ReplicationTaskStats { get; public set; }
    public string SourceEndpointArn { get; public set; }
    public string Status { get; public set; }
    public string StopReason { get; public set; }
    public string TableMappings { get; public set; }
    public string TargetEndpointArn { get; public set; }
    public string TargetReplicationInstanceArn { get; public set; }
    public string TaskData { get; public set; }
    public string get_CdcStartPosition();
    public void set_CdcStartPosition(string value);
    internal bool IsSetCdcStartPosition();
    public string get_CdcStopPosition();
    public void set_CdcStopPosition(string value);
    internal bool IsSetCdcStopPosition();
    public string get_LastFailureMessage();
    public void set_LastFailureMessage(string value);
    internal bool IsSetLastFailureMessage();
    public MigrationTypeValue get_MigrationType();
    public void set_MigrationType(MigrationTypeValue value);
    internal bool IsSetMigrationType();
    public string get_RecoveryCheckpoint();
    public void set_RecoveryCheckpoint(string value);
    internal bool IsSetRecoveryCheckpoint();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public Nullable`1<DateTime> get_ReplicationTaskCreationDate();
    public void set_ReplicationTaskCreationDate(Nullable`1<DateTime> value);
    internal bool IsSetReplicationTaskCreationDate();
    public string get_ReplicationTaskIdentifier();
    public void set_ReplicationTaskIdentifier(string value);
    internal bool IsSetReplicationTaskIdentifier();
    public string get_ReplicationTaskSettings();
    public void set_ReplicationTaskSettings(string value);
    internal bool IsSetReplicationTaskSettings();
    public Nullable`1<DateTime> get_ReplicationTaskStartDate();
    public void set_ReplicationTaskStartDate(Nullable`1<DateTime> value);
    internal bool IsSetReplicationTaskStartDate();
    public ReplicationTaskStats get_ReplicationTaskStats();
    public void set_ReplicationTaskStats(ReplicationTaskStats value);
    internal bool IsSetReplicationTaskStats();
    public string get_SourceEndpointArn();
    public void set_SourceEndpointArn(string value);
    internal bool IsSetSourceEndpointArn();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_StopReason();
    public void set_StopReason(string value);
    internal bool IsSetStopReason();
    public string get_TableMappings();
    public void set_TableMappings(string value);
    internal bool IsSetTableMappings();
    public string get_TargetEndpointArn();
    public void set_TargetEndpointArn(string value);
    internal bool IsSetTargetEndpointArn();
    public string get_TargetReplicationInstanceArn();
    public void set_TargetReplicationInstanceArn(string value);
    internal bool IsSetTargetReplicationInstanceArn();
    public string get_TaskData();
    public void set_TaskData(string value);
    internal bool IsSetTaskData();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationTaskAssessmentResult : object {
    private string _assessmentResults;
    private string _assessmentResultsFile;
    private string _assessmentStatus;
    private string _replicationTaskArn;
    private string _replicationTaskIdentifier;
    private Nullable`1<DateTime> _replicationTaskLastAssessmentDate;
    private string _s3ObjectUrl;
    public string AssessmentResults { get; public set; }
    public string AssessmentResultsFile { get; public set; }
    public string AssessmentStatus { get; public set; }
    public string ReplicationTaskArn { get; public set; }
    public string ReplicationTaskIdentifier { get; public set; }
    public Nullable`1<DateTime> ReplicationTaskLastAssessmentDate { get; public set; }
    public string S3ObjectUrl { get; public set; }
    public string get_AssessmentResults();
    public void set_AssessmentResults(string value);
    internal bool IsSetAssessmentResults();
    public string get_AssessmentResultsFile();
    public void set_AssessmentResultsFile(string value);
    internal bool IsSetAssessmentResultsFile();
    public string get_AssessmentStatus();
    public void set_AssessmentStatus(string value);
    internal bool IsSetAssessmentStatus();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public string get_ReplicationTaskIdentifier();
    public void set_ReplicationTaskIdentifier(string value);
    internal bool IsSetReplicationTaskIdentifier();
    public Nullable`1<DateTime> get_ReplicationTaskLastAssessmentDate();
    public void set_ReplicationTaskLastAssessmentDate(Nullable`1<DateTime> value);
    internal bool IsSetReplicationTaskLastAssessmentDate();
    public string get_S3ObjectUrl();
    public void set_S3ObjectUrl(string value);
    internal bool IsSetS3ObjectUrl();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationTaskAssessmentRun : object {
    private ReplicationTaskAssessmentRunProgress _assessmentProgress;
    private string _assessmentRunName;
    private string _lastFailureMessage;
    private string _replicationTaskArn;
    private string _replicationTaskAssessmentRunArn;
    private Nullable`1<DateTime> _replicationTaskAssessmentRunCreationDate;
    private string _resultEncryptionMode;
    private string _resultKmsKeyArn;
    private string _resultLocationBucket;
    private string _resultLocationFolder;
    private string _serviceAccessRoleArn;
    private string _status;
    public ReplicationTaskAssessmentRunProgress AssessmentProgress { get; public set; }
    public string AssessmentRunName { get; public set; }
    public string LastFailureMessage { get; public set; }
    public string ReplicationTaskArn { get; public set; }
    public string ReplicationTaskAssessmentRunArn { get; public set; }
    public Nullable`1<DateTime> ReplicationTaskAssessmentRunCreationDate { get; public set; }
    public string ResultEncryptionMode { get; public set; }
    public string ResultKmsKeyArn { get; public set; }
    public string ResultLocationBucket { get; public set; }
    public string ResultLocationFolder { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public string Status { get; public set; }
    public ReplicationTaskAssessmentRunProgress get_AssessmentProgress();
    public void set_AssessmentProgress(ReplicationTaskAssessmentRunProgress value);
    internal bool IsSetAssessmentProgress();
    public string get_AssessmentRunName();
    public void set_AssessmentRunName(string value);
    internal bool IsSetAssessmentRunName();
    public string get_LastFailureMessage();
    public void set_LastFailureMessage(string value);
    internal bool IsSetLastFailureMessage();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public string get_ReplicationTaskAssessmentRunArn();
    public void set_ReplicationTaskAssessmentRunArn(string value);
    internal bool IsSetReplicationTaskAssessmentRunArn();
    public Nullable`1<DateTime> get_ReplicationTaskAssessmentRunCreationDate();
    public void set_ReplicationTaskAssessmentRunCreationDate(Nullable`1<DateTime> value);
    internal bool IsSetReplicationTaskAssessmentRunCreationDate();
    public string get_ResultEncryptionMode();
    public void set_ResultEncryptionMode(string value);
    internal bool IsSetResultEncryptionMode();
    public string get_ResultKmsKeyArn();
    public void set_ResultKmsKeyArn(string value);
    internal bool IsSetResultKmsKeyArn();
    public string get_ResultLocationBucket();
    public void set_ResultLocationBucket(string value);
    internal bool IsSetResultLocationBucket();
    public string get_ResultLocationFolder();
    public void set_ResultLocationFolder(string value);
    internal bool IsSetResultLocationFolder();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationTaskAssessmentRunProgress : object {
    private Nullable`1<int> _individualAssessmentCompletedCount;
    private Nullable`1<int> _individualAssessmentCount;
    public Nullable`1<int> IndividualAssessmentCompletedCount { get; public set; }
    public Nullable`1<int> IndividualAssessmentCount { get; public set; }
    public Nullable`1<int> get_IndividualAssessmentCompletedCount();
    public void set_IndividualAssessmentCompletedCount(Nullable`1<int> value);
    internal bool IsSetIndividualAssessmentCompletedCount();
    public Nullable`1<int> get_IndividualAssessmentCount();
    public void set_IndividualAssessmentCount(Nullable`1<int> value);
    internal bool IsSetIndividualAssessmentCount();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationTaskIndividualAssessment : object {
    private string _individualAssessmentName;
    private string _replicationTaskAssessmentRunArn;
    private string _replicationTaskIndividualAssessmentArn;
    private Nullable`1<DateTime> _replicationTaskIndividualAssessmentStartDate;
    private string _status;
    public string IndividualAssessmentName { get; public set; }
    public string ReplicationTaskAssessmentRunArn { get; public set; }
    public string ReplicationTaskIndividualAssessmentArn { get; public set; }
    public Nullable`1<DateTime> ReplicationTaskIndividualAssessmentStartDate { get; public set; }
    public string Status { get; public set; }
    public string get_IndividualAssessmentName();
    public void set_IndividualAssessmentName(string value);
    internal bool IsSetIndividualAssessmentName();
    public string get_ReplicationTaskAssessmentRunArn();
    public void set_ReplicationTaskAssessmentRunArn(string value);
    internal bool IsSetReplicationTaskAssessmentRunArn();
    public string get_ReplicationTaskIndividualAssessmentArn();
    public void set_ReplicationTaskIndividualAssessmentArn(string value);
    internal bool IsSetReplicationTaskIndividualAssessmentArn();
    public Nullable`1<DateTime> get_ReplicationTaskIndividualAssessmentStartDate();
    public void set_ReplicationTaskIndividualAssessmentStartDate(Nullable`1<DateTime> value);
    internal bool IsSetReplicationTaskIndividualAssessmentStartDate();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.DatabaseMigrationService.Model.ReplicationTaskStats : object {
    private Nullable`1<long> _elapsedTimeMillis;
    private Nullable`1<DateTime> _freshStartDate;
    private Nullable`1<DateTime> _fullLoadFinishDate;
    private Nullable`1<int> _fullLoadProgressPercent;
    private Nullable`1<DateTime> _fullLoadStartDate;
    private Nullable`1<DateTime> _startDate;
    private Nullable`1<DateTime> _stopDate;
    private Nullable`1<int> _tablesErrored;
    private Nullable`1<int> _tablesLoaded;
    private Nullable`1<int> _tablesLoading;
    private Nullable`1<int> _tablesQueued;
    public Nullable`1<long> ElapsedTimeMillis { get; public set; }
    public Nullable`1<DateTime> FreshStartDate { get; public set; }
    public Nullable`1<DateTime> FullLoadFinishDate { get; public set; }
    public Nullable`1<int> FullLoadProgressPercent { get; public set; }
    public Nullable`1<DateTime> FullLoadStartDate { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public Nullable`1<DateTime> StopDate { get; public set; }
    public Nullable`1<int> TablesErrored { get; public set; }
    public Nullable`1<int> TablesLoaded { get; public set; }
    public Nullable`1<int> TablesLoading { get; public set; }
    public Nullable`1<int> TablesQueued { get; public set; }
    public Nullable`1<long> get_ElapsedTimeMillis();
    public void set_ElapsedTimeMillis(Nullable`1<long> value);
    internal bool IsSetElapsedTimeMillis();
    public Nullable`1<DateTime> get_FreshStartDate();
    public void set_FreshStartDate(Nullable`1<DateTime> value);
    internal bool IsSetFreshStartDate();
    public Nullable`1<DateTime> get_FullLoadFinishDate();
    public void set_FullLoadFinishDate(Nullable`1<DateTime> value);
    internal bool IsSetFullLoadFinishDate();
    public Nullable`1<int> get_FullLoadProgressPercent();
    public void set_FullLoadProgressPercent(Nullable`1<int> value);
    internal bool IsSetFullLoadProgressPercent();
    public Nullable`1<DateTime> get_FullLoadStartDate();
    public void set_FullLoadStartDate(Nullable`1<DateTime> value);
    internal bool IsSetFullLoadStartDate();
    public Nullable`1<DateTime> get_StartDate();
    public void set_StartDate(Nullable`1<DateTime> value);
    internal bool IsSetStartDate();
    public Nullable`1<DateTime> get_StopDate();
    public void set_StopDate(Nullable`1<DateTime> value);
    internal bool IsSetStopDate();
    public Nullable`1<int> get_TablesErrored();
    public void set_TablesErrored(Nullable`1<int> value);
    internal bool IsSetTablesErrored();
    public Nullable`1<int> get_TablesLoaded();
    public void set_TablesLoaded(Nullable`1<int> value);
    internal bool IsSetTablesLoaded();
    public Nullable`1<int> get_TablesLoading();
    public void set_TablesLoading(Nullable`1<int> value);
    internal bool IsSetTablesLoading();
    public Nullable`1<int> get_TablesQueued();
    public void set_TablesQueued(Nullable`1<int> value);
    internal bool IsSetTablesQueued();
}
public class Amazon.DatabaseMigrationService.Model.ResourceAlreadyExistsException : AmazonDatabaseMigrationServiceException {
    private string _resourceArn;
    public string ResourceArn { get; public set; }
    public ResourceAlreadyExistsException(string message);
    public ResourceAlreadyExistsException(string message, Exception innerException);
    public ResourceAlreadyExistsException(Exception innerException);
    public ResourceAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.DatabaseMigrationService.Model.ResourceNotFoundException : AmazonDatabaseMigrationServiceException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.ResourcePendingMaintenanceActions : object {
    private List`1<PendingMaintenanceAction> _pendingMaintenanceActionDetails;
    private string _resourceIdentifier;
    public List`1<PendingMaintenanceAction> PendingMaintenanceActionDetails { get; public set; }
    public string ResourceIdentifier { get; public set; }
    public List`1<PendingMaintenanceAction> get_PendingMaintenanceActionDetails();
    public void set_PendingMaintenanceActionDetails(List`1<PendingMaintenanceAction> value);
    internal bool IsSetPendingMaintenanceActionDetails();
    public string get_ResourceIdentifier();
    public void set_ResourceIdentifier(string value);
    internal bool IsSetResourceIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.ResourceQuotaExceededException : AmazonDatabaseMigrationServiceException {
    public ResourceQuotaExceededException(string message);
    public ResourceQuotaExceededException(string message, Exception innerException);
    public ResourceQuotaExceededException(Exception innerException);
    public ResourceQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.RunFleetAdvisorLsaAnalysisRequest : AmazonDatabaseMigrationServiceRequest {
}
public class Amazon.DatabaseMigrationService.Model.RunFleetAdvisorLsaAnalysisResponse : AmazonWebServiceResponse {
    private string _lsaAnalysisId;
    private string _status;
    public string LsaAnalysisId { get; public set; }
    public string Status { get; public set; }
    public string get_LsaAnalysisId();
    public void set_LsaAnalysisId(string value);
    internal bool IsSetLsaAnalysisId();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.DatabaseMigrationService.Model.S3AccessDeniedException : AmazonDatabaseMigrationServiceException {
    public S3AccessDeniedException(string message);
    public S3AccessDeniedException(string message, Exception innerException);
    public S3AccessDeniedException(Exception innerException);
    public S3AccessDeniedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public S3AccessDeniedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.S3ResourceNotFoundException : AmazonDatabaseMigrationServiceException {
    public S3ResourceNotFoundException(string message);
    public S3ResourceNotFoundException(string message, Exception innerException);
    public S3ResourceNotFoundException(Exception innerException);
    public S3ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public S3ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.S3Settings : object {
    private Nullable`1<bool> _addColumnName;
    private Nullable`1<bool> _addTrailingPaddingCharacter;
    private string _bucketFolder;
    private string _bucketName;
    private CannedAclForObjectsValue _cannedAclForObjects;
    private Nullable`1<bool> _cdcInsertsAndUpdates;
    private Nullable`1<bool> _cdcInsertsOnly;
    private Nullable`1<int> _cdcMaxBatchInterval;
    private Nullable`1<int> _cdcMinFileSize;
    private string _cdcPath;
    private CompressionTypeValue _compressionType;
    private string _csvDelimiter;
    private string _csvNoSupValue;
    private string _csvNullValue;
    private string _csvRowDelimiter;
    private DataFormatValue _dataFormat;
    private Nullable`1<int> _dataPageSize;
    private DatePartitionDelimiterValue _datePartitionDelimiter;
    private Nullable`1<bool> _datePartitionEnabled;
    private DatePartitionSequenceValue _datePartitionSequence;
    private string _datePartitionTimezone;
    private Nullable`1<int> _dictPageSizeLimit;
    private Nullable`1<bool> _enableStatistics;
    private EncodingTypeValue _encodingType;
    private EncryptionModeValue _encryptionMode;
    private string _expectedBucketOwner;
    private string _externalTableDefinition;
    private Nullable`1<bool> _glueCatalogGeneration;
    private Nullable`1<int> _ignoreHeaderRows;
    private Nullable`1<bool> _includeOpForFullLoad;
    private Nullable`1<int> _maxFileSize;
    private Nullable`1<bool> _parquetTimestampInMillisecond;
    private ParquetVersionValue _parquetVersion;
    private Nullable`1<bool> _preserveTransactions;
    private Nullable`1<bool> _rfc4180;
    private Nullable`1<int> _rowGroupLength;
    private string _serverSideEncryptionKmsKeyId;
    private string _serviceAccessRoleArn;
    private string _timestampColumnName;
    private Nullable`1<bool> _useCsvNoSupValue;
    private Nullable`1<bool> _useTaskStartTimeForFullLoadTimestamp;
    public Nullable`1<bool> AddColumnName { get; public set; }
    public Nullable`1<bool> AddTrailingPaddingCharacter { get; public set; }
    public string BucketFolder { get; public set; }
    public string BucketName { get; public set; }
    public CannedAclForObjectsValue CannedAclForObjects { get; public set; }
    public Nullable`1<bool> CdcInsertsAndUpdates { get; public set; }
    public Nullable`1<bool> CdcInsertsOnly { get; public set; }
    public Nullable`1<int> CdcMaxBatchInterval { get; public set; }
    public Nullable`1<int> CdcMinFileSize { get; public set; }
    public string CdcPath { get; public set; }
    public CompressionTypeValue CompressionType { get; public set; }
    public string CsvDelimiter { get; public set; }
    public string CsvNoSupValue { get; public set; }
    public string CsvNullValue { get; public set; }
    public string CsvRowDelimiter { get; public set; }
    public DataFormatValue DataFormat { get; public set; }
    public Nullable`1<int> DataPageSize { get; public set; }
    public DatePartitionDelimiterValue DatePartitionDelimiter { get; public set; }
    public Nullable`1<bool> DatePartitionEnabled { get; public set; }
    public DatePartitionSequenceValue DatePartitionSequence { get; public set; }
    public string DatePartitionTimezone { get; public set; }
    public Nullable`1<int> DictPageSizeLimit { get; public set; }
    public Nullable`1<bool> EnableStatistics { get; public set; }
    public EncodingTypeValue EncodingType { get; public set; }
    public EncryptionModeValue EncryptionMode { get; public set; }
    public string ExpectedBucketOwner { get; public set; }
    public string ExternalTableDefinition { get; public set; }
    public Nullable`1<bool> GlueCatalogGeneration { get; public set; }
    public Nullable`1<int> IgnoreHeaderRows { get; public set; }
    public Nullable`1<bool> IncludeOpForFullLoad { get; public set; }
    public Nullable`1<int> MaxFileSize { get; public set; }
    public Nullable`1<bool> ParquetTimestampInMillisecond { get; public set; }
    public ParquetVersionValue ParquetVersion { get; public set; }
    public Nullable`1<bool> PreserveTransactions { get; public set; }
    public Nullable`1<bool> Rfc4180 { get; public set; }
    public Nullable`1<int> RowGroupLength { get; public set; }
    public string ServerSideEncryptionKmsKeyId { get; public set; }
    public string ServiceAccessRoleArn { get; public set; }
    public string TimestampColumnName { get; public set; }
    public Nullable`1<bool> UseCsvNoSupValue { get; public set; }
    public Nullable`1<bool> UseTaskStartTimeForFullLoadTimestamp { get; public set; }
    public Nullable`1<bool> get_AddColumnName();
    public void set_AddColumnName(Nullable`1<bool> value);
    internal bool IsSetAddColumnName();
    public Nullable`1<bool> get_AddTrailingPaddingCharacter();
    public void set_AddTrailingPaddingCharacter(Nullable`1<bool> value);
    internal bool IsSetAddTrailingPaddingCharacter();
    public string get_BucketFolder();
    public void set_BucketFolder(string value);
    internal bool IsSetBucketFolder();
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public CannedAclForObjectsValue get_CannedAclForObjects();
    public void set_CannedAclForObjects(CannedAclForObjectsValue value);
    internal bool IsSetCannedAclForObjects();
    public Nullable`1<bool> get_CdcInsertsAndUpdates();
    public void set_CdcInsertsAndUpdates(Nullable`1<bool> value);
    internal bool IsSetCdcInsertsAndUpdates();
    public Nullable`1<bool> get_CdcInsertsOnly();
    public void set_CdcInsertsOnly(Nullable`1<bool> value);
    internal bool IsSetCdcInsertsOnly();
    public Nullable`1<int> get_CdcMaxBatchInterval();
    public void set_CdcMaxBatchInterval(Nullable`1<int> value);
    internal bool IsSetCdcMaxBatchInterval();
    public Nullable`1<int> get_CdcMinFileSize();
    public void set_CdcMinFileSize(Nullable`1<int> value);
    internal bool IsSetCdcMinFileSize();
    public string get_CdcPath();
    public void set_CdcPath(string value);
    internal bool IsSetCdcPath();
    public CompressionTypeValue get_CompressionType();
    public void set_CompressionType(CompressionTypeValue value);
    internal bool IsSetCompressionType();
    public string get_CsvDelimiter();
    public void set_CsvDelimiter(string value);
    internal bool IsSetCsvDelimiter();
    public string get_CsvNoSupValue();
    public void set_CsvNoSupValue(string value);
    internal bool IsSetCsvNoSupValue();
    public string get_CsvNullValue();
    public void set_CsvNullValue(string value);
    internal bool IsSetCsvNullValue();
    public string get_CsvRowDelimiter();
    public void set_CsvRowDelimiter(string value);
    internal bool IsSetCsvRowDelimiter();
    public DataFormatValue get_DataFormat();
    public void set_DataFormat(DataFormatValue value);
    internal bool IsSetDataFormat();
    public Nullable`1<int> get_DataPageSize();
    public void set_DataPageSize(Nullable`1<int> value);
    internal bool IsSetDataPageSize();
    public DatePartitionDelimiterValue get_DatePartitionDelimiter();
    public void set_DatePartitionDelimiter(DatePartitionDelimiterValue value);
    internal bool IsSetDatePartitionDelimiter();
    public Nullable`1<bool> get_DatePartitionEnabled();
    public void set_DatePartitionEnabled(Nullable`1<bool> value);
    internal bool IsSetDatePartitionEnabled();
    public DatePartitionSequenceValue get_DatePartitionSequence();
    public void set_DatePartitionSequence(DatePartitionSequenceValue value);
    internal bool IsSetDatePartitionSequence();
    public string get_DatePartitionTimezone();
    public void set_DatePartitionTimezone(string value);
    internal bool IsSetDatePartitionTimezone();
    public Nullable`1<int> get_DictPageSizeLimit();
    public void set_DictPageSizeLimit(Nullable`1<int> value);
    internal bool IsSetDictPageSizeLimit();
    public Nullable`1<bool> get_EnableStatistics();
    public void set_EnableStatistics(Nullable`1<bool> value);
    internal bool IsSetEnableStatistics();
    public EncodingTypeValue get_EncodingType();
    public void set_EncodingType(EncodingTypeValue value);
    internal bool IsSetEncodingType();
    public EncryptionModeValue get_EncryptionMode();
    public void set_EncryptionMode(EncryptionModeValue value);
    internal bool IsSetEncryptionMode();
    public string get_ExpectedBucketOwner();
    public void set_ExpectedBucketOwner(string value);
    internal bool IsSetExpectedBucketOwner();
    public string get_ExternalTableDefinition();
    public void set_ExternalTableDefinition(string value);
    internal bool IsSetExternalTableDefinition();
    public Nullable`1<bool> get_GlueCatalogGeneration();
    public void set_GlueCatalogGeneration(Nullable`1<bool> value);
    internal bool IsSetGlueCatalogGeneration();
    public Nullable`1<int> get_IgnoreHeaderRows();
    public void set_IgnoreHeaderRows(Nullable`1<int> value);
    internal bool IsSetIgnoreHeaderRows();
    public Nullable`1<bool> get_IncludeOpForFullLoad();
    public void set_IncludeOpForFullLoad(Nullable`1<bool> value);
    internal bool IsSetIncludeOpForFullLoad();
    public Nullable`1<int> get_MaxFileSize();
    public void set_MaxFileSize(Nullable`1<int> value);
    internal bool IsSetMaxFileSize();
    public Nullable`1<bool> get_ParquetTimestampInMillisecond();
    public void set_ParquetTimestampInMillisecond(Nullable`1<bool> value);
    internal bool IsSetParquetTimestampInMillisecond();
    public ParquetVersionValue get_ParquetVersion();
    public void set_ParquetVersion(ParquetVersionValue value);
    internal bool IsSetParquetVersion();
    public Nullable`1<bool> get_PreserveTransactions();
    public void set_PreserveTransactions(Nullable`1<bool> value);
    internal bool IsSetPreserveTransactions();
    public Nullable`1<bool> get_Rfc4180();
    public void set_Rfc4180(Nullable`1<bool> value);
    internal bool IsSetRfc4180();
    public Nullable`1<int> get_RowGroupLength();
    public void set_RowGroupLength(Nullable`1<int> value);
    internal bool IsSetRowGroupLength();
    public string get_ServerSideEncryptionKmsKeyId();
    public void set_ServerSideEncryptionKmsKeyId(string value);
    internal bool IsSetServerSideEncryptionKmsKeyId();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
    public string get_TimestampColumnName();
    public void set_TimestampColumnName(string value);
    internal bool IsSetTimestampColumnName();
    public Nullable`1<bool> get_UseCsvNoSupValue();
    public void set_UseCsvNoSupValue(Nullable`1<bool> value);
    internal bool IsSetUseCsvNoSupValue();
    public Nullable`1<bool> get_UseTaskStartTimeForFullLoadTimestamp();
    public void set_UseTaskStartTimeForFullLoadTimestamp(Nullable`1<bool> value);
    internal bool IsSetUseTaskStartTimeForFullLoadTimestamp();
}
public class Amazon.DatabaseMigrationService.Model.SCApplicationAttributes : object {
    private string _s3BucketPath;
    private string _s3BucketRoleArn;
    public string S3BucketPath { get; public set; }
    public string S3BucketRoleArn { get; public set; }
    public string get_S3BucketPath();
    public void set_S3BucketPath(string value);
    internal bool IsSetS3BucketPath();
    public string get_S3BucketRoleArn();
    public void set_S3BucketRoleArn(string value);
    internal bool IsSetS3BucketRoleArn();
}
public class Amazon.DatabaseMigrationService.Model.SchemaConversionRequest : object {
    private ErrorDetails _error;
    private ExportSqlDetails _exportSqlDetails;
    private string _migrationProjectArn;
    private string _requestIdentifier;
    private string _status;
    public ErrorDetails Error { get; public set; }
    public ExportSqlDetails ExportSqlDetails { get; public set; }
    public string MigrationProjectArn { get; public set; }
    public string RequestIdentifier { get; public set; }
    public string Status { get; public set; }
    public ErrorDetails get_Error();
    public void set_Error(ErrorDetails value);
    internal bool IsSetError();
    public ExportSqlDetails get_ExportSqlDetails();
    public void set_ExportSqlDetails(ExportSqlDetails value);
    internal bool IsSetExportSqlDetails();
    public string get_MigrationProjectArn();
    public void set_MigrationProjectArn(string value);
    internal bool IsSetMigrationProjectArn();
    public string get_RequestIdentifier();
    public void set_RequestIdentifier(string value);
    internal bool IsSetRequestIdentifier();
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
}
public class Amazon.DatabaseMigrationService.Model.SchemaResponse : object {
    private Nullable`1<long> _codeLineCount;
    private Nullable`1<long> _codeSize;
    private string _complexity;
    private DatabaseShortInfoResponse _databaseInstance;
    private SchemaShortInfoResponse _originalSchema;
    private string _schemaId;
    private string _schemaName;
    private ServerShortInfoResponse _server;
    private Nullable`1<double> _similarity;
    public Nullable`1<long> CodeLineCount { get; public set; }
    public Nullable`1<long> CodeSize { get; public set; }
    public string Complexity { get; public set; }
    public DatabaseShortInfoResponse DatabaseInstance { get; public set; }
    public SchemaShortInfoResponse OriginalSchema { get; public set; }
    public string SchemaId { get; public set; }
    public string SchemaName { get; public set; }
    public ServerShortInfoResponse Server { get; public set; }
    public Nullable`1<double> Similarity { get; public set; }
    public Nullable`1<long> get_CodeLineCount();
    public void set_CodeLineCount(Nullable`1<long> value);
    internal bool IsSetCodeLineCount();
    public Nullable`1<long> get_CodeSize();
    public void set_CodeSize(Nullable`1<long> value);
    internal bool IsSetCodeSize();
    public string get_Complexity();
    public void set_Complexity(string value);
    internal bool IsSetComplexity();
    public DatabaseShortInfoResponse get_DatabaseInstance();
    public void set_DatabaseInstance(DatabaseShortInfoResponse value);
    internal bool IsSetDatabaseInstance();
    public SchemaShortInfoResponse get_OriginalSchema();
    public void set_OriginalSchema(SchemaShortInfoResponse value);
    internal bool IsSetOriginalSchema();
    public string get_SchemaId();
    public void set_SchemaId(string value);
    internal bool IsSetSchemaId();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
    public ServerShortInfoResponse get_Server();
    public void set_Server(ServerShortInfoResponse value);
    internal bool IsSetServer();
    public Nullable`1<double> get_Similarity();
    public void set_Similarity(Nullable`1<double> value);
    internal bool IsSetSimilarity();
}
public class Amazon.DatabaseMigrationService.Model.SchemaShortInfoResponse : object {
    private string _databaseId;
    private string _databaseIpAddress;
    private string _databaseName;
    private string _schemaId;
    private string _schemaName;
    public string DatabaseId { get; public set; }
    public string DatabaseIpAddress { get; public set; }
    public string DatabaseName { get; public set; }
    public string SchemaId { get; public set; }
    public string SchemaName { get; public set; }
    public string get_DatabaseId();
    public void set_DatabaseId(string value);
    internal bool IsSetDatabaseId();
    public string get_DatabaseIpAddress();
    public void set_DatabaseIpAddress(string value);
    internal bool IsSetDatabaseIpAddress();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_SchemaId();
    public void set_SchemaId(string value);
    internal bool IsSetSchemaId();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
}
public class Amazon.DatabaseMigrationService.Model.ServerShortInfoResponse : object {
    private string _ipAddress;
    private string _serverId;
    private string _serverName;
    public string IpAddress { get; public set; }
    public string ServerId { get; public set; }
    public string ServerName { get; public set; }
    public string get_IpAddress();
    public void set_IpAddress(string value);
    internal bool IsSetIpAddress();
    public string get_ServerId();
    public void set_ServerId(string value);
    internal bool IsSetServerId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
}
public class Amazon.DatabaseMigrationService.Model.SNSInvalidTopicException : AmazonDatabaseMigrationServiceException {
    public SNSInvalidTopicException(string message);
    public SNSInvalidTopicException(string message, Exception innerException);
    public SNSInvalidTopicException(Exception innerException);
    public SNSInvalidTopicException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SNSInvalidTopicException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.SNSNoAuthorizationException : AmazonDatabaseMigrationServiceException {
    public SNSNoAuthorizationException(string message);
    public SNSNoAuthorizationException(string message, Exception innerException);
    public SNSNoAuthorizationException(Exception innerException);
    public SNSNoAuthorizationException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SNSNoAuthorizationException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.StartExtensionPackAssociationRequest : AmazonDatabaseMigrationServiceRequest {
    private string _migrationProjectIdentifier;
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.StartExtensionPackAssociationResponse : AmazonWebServiceResponse {
    private string _requestIdentifier;
    public string RequestIdentifier { get; public set; }
    public string get_RequestIdentifier();
    public void set_RequestIdentifier(string value);
    internal bool IsSetRequestIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.StartMetadataModelAssessmentRequest : AmazonDatabaseMigrationServiceRequest {
    private string _migrationProjectIdentifier;
    private string _selectionRules;
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string SelectionRules { get; public set; }
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
    public string get_SelectionRules();
    public void set_SelectionRules(string value);
    internal bool IsSetSelectionRules();
}
public class Amazon.DatabaseMigrationService.Model.StartMetadataModelAssessmentResponse : AmazonWebServiceResponse {
    private string _requestIdentifier;
    public string RequestIdentifier { get; public set; }
    public string get_RequestIdentifier();
    public void set_RequestIdentifier(string value);
    internal bool IsSetRequestIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.StartMetadataModelConversionRequest : AmazonDatabaseMigrationServiceRequest {
    private string _migrationProjectIdentifier;
    private string _selectionRules;
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    [AWSPropertyAttribute]
public string SelectionRules { get; public set; }
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
    public string get_SelectionRules();
    public void set_SelectionRules(string value);
    internal bool IsSetSelectionRules();
}
public class Amazon.DatabaseMigrationService.Model.StartMetadataModelConversionResponse : AmazonWebServiceResponse {
    private string _requestIdentifier;
    public string RequestIdentifier { get; public set; }
    public string get_RequestIdentifier();
    public void set_RequestIdentifier(string value);
    internal bool IsSetRequestIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.StartMetadataModelExportAsScriptRequest : AmazonDatabaseMigrationServiceRequest {
    private string _fileName;
    private string _migrationProjectIdentifier;
    private OriginTypeValue _origin;
    private string _selectionRules;
    public string FileName { get; public set; }
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    [AWSPropertyAttribute]
public OriginTypeValue Origin { get; public set; }
    [AWSPropertyAttribute]
public string SelectionRules { get; public set; }
    public string get_FileName();
    public void set_FileName(string value);
    internal bool IsSetFileName();
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
    public OriginTypeValue get_Origin();
    public void set_Origin(OriginTypeValue value);
    internal bool IsSetOrigin();
    public string get_SelectionRules();
    public void set_SelectionRules(string value);
    internal bool IsSetSelectionRules();
}
public class Amazon.DatabaseMigrationService.Model.StartMetadataModelExportAsScriptResponse : AmazonWebServiceResponse {
    private string _requestIdentifier;
    public string RequestIdentifier { get; public set; }
    public string get_RequestIdentifier();
    public void set_RequestIdentifier(string value);
    internal bool IsSetRequestIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.StartMetadataModelExportToTargetRequest : AmazonDatabaseMigrationServiceRequest {
    private string _migrationProjectIdentifier;
    private Nullable`1<bool> _overwriteExtensionPack;
    private string _selectionRules;
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    public Nullable`1<bool> OverwriteExtensionPack { get; public set; }
    [AWSPropertyAttribute]
public string SelectionRules { get; public set; }
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
    public Nullable`1<bool> get_OverwriteExtensionPack();
    public void set_OverwriteExtensionPack(Nullable`1<bool> value);
    internal bool IsSetOverwriteExtensionPack();
    public string get_SelectionRules();
    public void set_SelectionRules(string value);
    internal bool IsSetSelectionRules();
}
public class Amazon.DatabaseMigrationService.Model.StartMetadataModelExportToTargetResponse : AmazonWebServiceResponse {
    private string _requestIdentifier;
    public string RequestIdentifier { get; public set; }
    public string get_RequestIdentifier();
    public void set_RequestIdentifier(string value);
    internal bool IsSetRequestIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.StartMetadataModelImportRequest : AmazonDatabaseMigrationServiceRequest {
    private string _migrationProjectIdentifier;
    private OriginTypeValue _origin;
    private Nullable`1<bool> _refresh;
    private string _selectionRules;
    [AWSPropertyAttribute]
public string MigrationProjectIdentifier { get; public set; }
    [AWSPropertyAttribute]
public OriginTypeValue Origin { get; public set; }
    public Nullable`1<bool> Refresh { get; public set; }
    [AWSPropertyAttribute]
public string SelectionRules { get; public set; }
    public string get_MigrationProjectIdentifier();
    public void set_MigrationProjectIdentifier(string value);
    internal bool IsSetMigrationProjectIdentifier();
    public OriginTypeValue get_Origin();
    public void set_Origin(OriginTypeValue value);
    internal bool IsSetOrigin();
    public Nullable`1<bool> get_Refresh();
    public void set_Refresh(Nullable`1<bool> value);
    internal bool IsSetRefresh();
    public string get_SelectionRules();
    public void set_SelectionRules(string value);
    internal bool IsSetSelectionRules();
}
public class Amazon.DatabaseMigrationService.Model.StartMetadataModelImportResponse : AmazonWebServiceResponse {
    private string _requestIdentifier;
    public string RequestIdentifier { get; public set; }
    public string get_RequestIdentifier();
    public void set_RequestIdentifier(string value);
    internal bool IsSetRequestIdentifier();
}
public class Amazon.DatabaseMigrationService.Model.StartRecommendationsRequest : AmazonDatabaseMigrationServiceRequest {
    private string _databaseId;
    private RecommendationSettings _settings;
    [AWSPropertyAttribute]
public string DatabaseId { get; public set; }
    [AWSPropertyAttribute]
public RecommendationSettings Settings { get; public set; }
    public string get_DatabaseId();
    public void set_DatabaseId(string value);
    internal bool IsSetDatabaseId();
    public RecommendationSettings get_Settings();
    public void set_Settings(RecommendationSettings value);
    internal bool IsSetSettings();
}
public class Amazon.DatabaseMigrationService.Model.StartRecommendationsRequestEntry : object {
    private string _databaseId;
    private RecommendationSettings _settings;
    [AWSPropertyAttribute]
public string DatabaseId { get; public set; }
    [AWSPropertyAttribute]
public RecommendationSettings Settings { get; public set; }
    public string get_DatabaseId();
    public void set_DatabaseId(string value);
    internal bool IsSetDatabaseId();
    public RecommendationSettings get_Settings();
    public void set_Settings(RecommendationSettings value);
    internal bool IsSetSettings();
}
public class Amazon.DatabaseMigrationService.Model.StartRecommendationsResponse : AmazonWebServiceResponse {
}
public class Amazon.DatabaseMigrationService.Model.StartReplicationRequest : AmazonDatabaseMigrationServiceRequest {
    private string _cdcStartPosition;
    private Nullable`1<DateTime> _cdcStartTime;
    private string _cdcStopPosition;
    private string _replicationConfigArn;
    private string _startReplicationType;
    public string CdcStartPosition { get; public set; }
    public Nullable`1<DateTime> CdcStartTime { get; public set; }
    public string CdcStopPosition { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationConfigArn { get; public set; }
    [AWSPropertyAttribute]
public string StartReplicationType { get; public set; }
    public string get_CdcStartPosition();
    public void set_CdcStartPosition(string value);
    internal bool IsSetCdcStartPosition();
    public Nullable`1<DateTime> get_CdcStartTime();
    public void set_CdcStartTime(Nullable`1<DateTime> value);
    internal bool IsSetCdcStartTime();
    public string get_CdcStopPosition();
    public void set_CdcStopPosition(string value);
    internal bool IsSetCdcStopPosition();
    public string get_ReplicationConfigArn();
    public void set_ReplicationConfigArn(string value);
    internal bool IsSetReplicationConfigArn();
    public string get_StartReplicationType();
    public void set_StartReplicationType(string value);
    internal bool IsSetStartReplicationType();
}
public class Amazon.DatabaseMigrationService.Model.StartReplicationResponse : AmazonWebServiceResponse {
    private Replication _replication;
    public Replication Replication { get; public set; }
    public Replication get_Replication();
    public void set_Replication(Replication value);
    internal bool IsSetReplication();
}
public class Amazon.DatabaseMigrationService.Model.StartReplicationTaskAssessmentRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationTaskArn;
    [AWSPropertyAttribute]
public string ReplicationTaskArn { get; public set; }
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
}
public class Amazon.DatabaseMigrationService.Model.StartReplicationTaskAssessmentResponse : AmazonWebServiceResponse {
    private ReplicationTask _replicationTask;
    public ReplicationTask ReplicationTask { get; public set; }
    public ReplicationTask get_ReplicationTask();
    public void set_ReplicationTask(ReplicationTask value);
    internal bool IsSetReplicationTask();
}
public class Amazon.DatabaseMigrationService.Model.StartReplicationTaskAssessmentRunRequest : AmazonDatabaseMigrationServiceRequest {
    private string _assessmentRunName;
    private List`1<string> _exclude;
    private List`1<string> _includeOnly;
    private string _replicationTaskArn;
    private string _resultEncryptionMode;
    private string _resultKmsKeyArn;
    private string _resultLocationBucket;
    private string _resultLocationFolder;
    private string _serviceAccessRoleArn;
    [AWSPropertyAttribute]
public string AssessmentRunName { get; public set; }
    public List`1<string> Exclude { get; public set; }
    public List`1<string> IncludeOnly { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationTaskArn { get; public set; }
    public string ResultEncryptionMode { get; public set; }
    public string ResultKmsKeyArn { get; public set; }
    [AWSPropertyAttribute]
public string ResultLocationBucket { get; public set; }
    public string ResultLocationFolder { get; public set; }
    [AWSPropertyAttribute]
public string ServiceAccessRoleArn { get; public set; }
    public string get_AssessmentRunName();
    public void set_AssessmentRunName(string value);
    internal bool IsSetAssessmentRunName();
    public List`1<string> get_Exclude();
    public void set_Exclude(List`1<string> value);
    internal bool IsSetExclude();
    public List`1<string> get_IncludeOnly();
    public void set_IncludeOnly(List`1<string> value);
    internal bool IsSetIncludeOnly();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public string get_ResultEncryptionMode();
    public void set_ResultEncryptionMode(string value);
    internal bool IsSetResultEncryptionMode();
    public string get_ResultKmsKeyArn();
    public void set_ResultKmsKeyArn(string value);
    internal bool IsSetResultKmsKeyArn();
    public string get_ResultLocationBucket();
    public void set_ResultLocationBucket(string value);
    internal bool IsSetResultLocationBucket();
    public string get_ResultLocationFolder();
    public void set_ResultLocationFolder(string value);
    internal bool IsSetResultLocationFolder();
    public string get_ServiceAccessRoleArn();
    public void set_ServiceAccessRoleArn(string value);
    internal bool IsSetServiceAccessRoleArn();
}
public class Amazon.DatabaseMigrationService.Model.StartReplicationTaskAssessmentRunResponse : AmazonWebServiceResponse {
    private ReplicationTaskAssessmentRun _replicationTaskAssessmentRun;
    public ReplicationTaskAssessmentRun ReplicationTaskAssessmentRun { get; public set; }
    public ReplicationTaskAssessmentRun get_ReplicationTaskAssessmentRun();
    public void set_ReplicationTaskAssessmentRun(ReplicationTaskAssessmentRun value);
    internal bool IsSetReplicationTaskAssessmentRun();
}
public class Amazon.DatabaseMigrationService.Model.StartReplicationTaskRequest : AmazonDatabaseMigrationServiceRequest {
    private string _cdcStartPosition;
    private Nullable`1<DateTime> _cdcStartTime;
    private string _cdcStopPosition;
    private string _replicationTaskArn;
    private StartReplicationTaskTypeValue _startReplicationTaskType;
    public string CdcStartPosition { get; public set; }
    public Nullable`1<DateTime> CdcStartTime { get; public set; }
    public string CdcStopPosition { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationTaskArn { get; public set; }
    [AWSPropertyAttribute]
public StartReplicationTaskTypeValue StartReplicationTaskType { get; public set; }
    public string get_CdcStartPosition();
    public void set_CdcStartPosition(string value);
    internal bool IsSetCdcStartPosition();
    public Nullable`1<DateTime> get_CdcStartTime();
    public void set_CdcStartTime(Nullable`1<DateTime> value);
    internal bool IsSetCdcStartTime();
    public string get_CdcStopPosition();
    public void set_CdcStopPosition(string value);
    internal bool IsSetCdcStopPosition();
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
    public StartReplicationTaskTypeValue get_StartReplicationTaskType();
    public void set_StartReplicationTaskType(StartReplicationTaskTypeValue value);
    internal bool IsSetStartReplicationTaskType();
}
public class Amazon.DatabaseMigrationService.Model.StartReplicationTaskResponse : AmazonWebServiceResponse {
    private ReplicationTask _replicationTask;
    public ReplicationTask ReplicationTask { get; public set; }
    public ReplicationTask get_ReplicationTask();
    public void set_ReplicationTask(ReplicationTask value);
    internal bool IsSetReplicationTask();
}
public class Amazon.DatabaseMigrationService.Model.StopReplicationRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationConfigArn;
    [AWSPropertyAttribute]
public string ReplicationConfigArn { get; public set; }
    public string get_ReplicationConfigArn();
    public void set_ReplicationConfigArn(string value);
    internal bool IsSetReplicationConfigArn();
}
public class Amazon.DatabaseMigrationService.Model.StopReplicationResponse : AmazonWebServiceResponse {
    private Replication _replication;
    public Replication Replication { get; public set; }
    public Replication get_Replication();
    public void set_Replication(Replication value);
    internal bool IsSetReplication();
}
public class Amazon.DatabaseMigrationService.Model.StopReplicationTaskRequest : AmazonDatabaseMigrationServiceRequest {
    private string _replicationTaskArn;
    [AWSPropertyAttribute]
public string ReplicationTaskArn { get; public set; }
    public string get_ReplicationTaskArn();
    public void set_ReplicationTaskArn(string value);
    internal bool IsSetReplicationTaskArn();
}
public class Amazon.DatabaseMigrationService.Model.StopReplicationTaskResponse : AmazonWebServiceResponse {
    private ReplicationTask _replicationTask;
    public ReplicationTask ReplicationTask { get; public set; }
    public ReplicationTask get_ReplicationTask();
    public void set_ReplicationTask(ReplicationTask value);
    internal bool IsSetReplicationTask();
}
public class Amazon.DatabaseMigrationService.Model.StorageQuotaExceededException : AmazonDatabaseMigrationServiceException {
    public StorageQuotaExceededException(string message);
    public StorageQuotaExceededException(string message, Exception innerException);
    public StorageQuotaExceededException(Exception innerException);
    public StorageQuotaExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public StorageQuotaExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.Subnet : object {
    private AvailabilityZone _subnetAvailabilityZone;
    private string _subnetIdentifier;
    private string _subnetStatus;
    public AvailabilityZone SubnetAvailabilityZone { get; public set; }
    public string SubnetIdentifier { get; public set; }
    public string SubnetStatus { get; public set; }
    public AvailabilityZone get_SubnetAvailabilityZone();
    public void set_SubnetAvailabilityZone(AvailabilityZone value);
    internal bool IsSetSubnetAvailabilityZone();
    public string get_SubnetIdentifier();
    public void set_SubnetIdentifier(string value);
    internal bool IsSetSubnetIdentifier();
    public string get_SubnetStatus();
    public void set_SubnetStatus(string value);
    internal bool IsSetSubnetStatus();
}
public class Amazon.DatabaseMigrationService.Model.SubnetAlreadyInUseException : AmazonDatabaseMigrationServiceException {
    public SubnetAlreadyInUseException(string message);
    public SubnetAlreadyInUseException(string message, Exception innerException);
    public SubnetAlreadyInUseException(Exception innerException);
    public SubnetAlreadyInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public SubnetAlreadyInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.SupportedEndpointType : object {
    private ReplicationEndpointTypeValue _endpointType;
    private string _engineDisplayName;
    private string _engineName;
    private string _replicationInstanceEngineMinimumVersion;
    private Nullable`1<bool> _supportsCDC;
    public ReplicationEndpointTypeValue EndpointType { get; public set; }
    public string EngineDisplayName { get; public set; }
    public string EngineName { get; public set; }
    public string ReplicationInstanceEngineMinimumVersion { get; public set; }
    public Nullable`1<bool> SupportsCDC { get; public set; }
    public ReplicationEndpointTypeValue get_EndpointType();
    public void set_EndpointType(ReplicationEndpointTypeValue value);
    internal bool IsSetEndpointType();
    public string get_EngineDisplayName();
    public void set_EngineDisplayName(string value);
    internal bool IsSetEngineDisplayName();
    public string get_EngineName();
    public void set_EngineName(string value);
    internal bool IsSetEngineName();
    public string get_ReplicationInstanceEngineMinimumVersion();
    public void set_ReplicationInstanceEngineMinimumVersion(string value);
    internal bool IsSetReplicationInstanceEngineMinimumVersion();
    public Nullable`1<bool> get_SupportsCDC();
    public void set_SupportsCDC(Nullable`1<bool> value);
    internal bool IsSetSupportsCDC();
}
public class Amazon.DatabaseMigrationService.Model.SybaseSettings : object {
    private string _databaseName;
    private string _password;
    private Nullable`1<int> _port;
    private string _secretsManagerAccessRoleArn;
    private string _secretsManagerSecretId;
    private string _serverName;
    private string _username;
    public string DatabaseName { get; public set; }
    [AWSPropertyAttribute]
public string Password { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public string SecretsManagerAccessRoleArn { get; public set; }
    public string SecretsManagerSecretId { get; public set; }
    public string ServerName { get; public set; }
    public string Username { get; public set; }
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public string get_Password();
    public void set_Password(string value);
    internal bool IsSetPassword();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    internal bool IsSetPort();
    public string get_SecretsManagerAccessRoleArn();
    public void set_SecretsManagerAccessRoleArn(string value);
    internal bool IsSetSecretsManagerAccessRoleArn();
    public string get_SecretsManagerSecretId();
    public void set_SecretsManagerSecretId(string value);
    internal bool IsSetSecretsManagerSecretId();
    public string get_ServerName();
    public void set_ServerName(string value);
    internal bool IsSetServerName();
    public string get_Username();
    public void set_Username(string value);
    internal bool IsSetUsername();
}
public class Amazon.DatabaseMigrationService.Model.TableStatistics : object {
    private Nullable`1<long> _appliedDdls;
    private Nullable`1<long> _appliedDeletes;
    private Nullable`1<long> _appliedInserts;
    private Nullable`1<long> _appliedUpdates;
    private Nullable`1<long> _ddls;
    private Nullable`1<long> _deletes;
    private Nullable`1<long> _fullLoadCondtnlChkFailedRows;
    private Nullable`1<DateTime> _fullLoadEndTime;
    private Nullable`1<long> _fullLoadErrorRows;
    private Nullable`1<bool> _fullLoadReloaded;
    private Nullable`1<long> _fullLoadRows;
    private Nullable`1<DateTime> _fullLoadStartTime;
    private Nullable`1<long> _inserts;
    private Nullable`1<DateTime> _lastUpdateTime;
    private string _schemaName;
    private string _tableName;
    private string _tableState;
    private Nullable`1<long> _updates;
    private Nullable`1<long> _validationFailedRecords;
    private Nullable`1<long> _validationPendingRecords;
    private string _validationState;
    private string _validationStateDetails;
    private Nullable`1<long> _validationSuspendedRecords;
    public Nullable`1<long> AppliedDdls { get; public set; }
    public Nullable`1<long> AppliedDeletes { get; public set; }
    public Nullable`1<long> AppliedInserts { get; public set; }
    public Nullable`1<long> AppliedUpdates { get; public set; }
    public Nullable`1<long> Ddls { get; public set; }
    public Nullable`1<long> Deletes { get; public set; }
    public Nullable`1<long> FullLoadCondtnlChkFailedRows { get; public set; }
    public Nullable`1<DateTime> FullLoadEndTime { get; public set; }
    public Nullable`1<long> FullLoadErrorRows { get; public set; }
    public Nullable`1<bool> FullLoadReloaded { get; public set; }
    public Nullable`1<long> FullLoadRows { get; public set; }
    public Nullable`1<DateTime> FullLoadStartTime { get; public set; }
    public Nullable`1<long> Inserts { get; public set; }
    public Nullable`1<DateTime> LastUpdateTime { get; public set; }
    public string SchemaName { get; public set; }
    public string TableName { get; public set; }
    public string TableState { get; public set; }
    public Nullable`1<long> Updates { get; public set; }
    public Nullable`1<long> ValidationFailedRecords { get; public set; }
    public Nullable`1<long> ValidationPendingRecords { get; public set; }
    public string ValidationState { get; public set; }
    public string ValidationStateDetails { get; public set; }
    public Nullable`1<long> ValidationSuspendedRecords { get; public set; }
    public Nullable`1<long> get_AppliedDdls();
    public void set_AppliedDdls(Nullable`1<long> value);
    internal bool IsSetAppliedDdls();
    public Nullable`1<long> get_AppliedDeletes();
    public void set_AppliedDeletes(Nullable`1<long> value);
    internal bool IsSetAppliedDeletes();
    public Nullable`1<long> get_AppliedInserts();
    public void set_AppliedInserts(Nullable`1<long> value);
    internal bool IsSetAppliedInserts();
    public Nullable`1<long> get_AppliedUpdates();
    public void set_AppliedUpdates(Nullable`1<long> value);
    internal bool IsSetAppliedUpdates();
    public Nullable`1<long> get_Ddls();
    public void set_Ddls(Nullable`1<long> value);
    internal bool IsSetDdls();
    public Nullable`1<long> get_Deletes();
    public void set_Deletes(Nullable`1<long> value);
    internal bool IsSetDeletes();
    public Nullable`1<long> get_FullLoadCondtnlChkFailedRows();
    public void set_FullLoadCondtnlChkFailedRows(Nullable`1<long> value);
    internal bool IsSetFullLoadCondtnlChkFailedRows();
    public Nullable`1<DateTime> get_FullLoadEndTime();
    public void set_FullLoadEndTime(Nullable`1<DateTime> value);
    internal bool IsSetFullLoadEndTime();
    public Nullable`1<long> get_FullLoadErrorRows();
    public void set_FullLoadErrorRows(Nullable`1<long> value);
    internal bool IsSetFullLoadErrorRows();
    public Nullable`1<bool> get_FullLoadReloaded();
    public void set_FullLoadReloaded(Nullable`1<bool> value);
    internal bool IsSetFullLoadReloaded();
    public Nullable`1<long> get_FullLoadRows();
    public void set_FullLoadRows(Nullable`1<long> value);
    internal bool IsSetFullLoadRows();
    public Nullable`1<DateTime> get_FullLoadStartTime();
    public void set_FullLoadStartTime(Nullable`1<DateTime> value);
    internal bool IsSetFullLoadStartTime();
    public Nullable`1<long> get_Inserts();
    public void set_Inserts(Nullable`1<long> value);
    internal bool IsSetInserts();
    public Nullable`1<DateTime> get_LastUpdateTime();
    public void set_LastUpdateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdateTime();
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public string get_TableState();
    public void set_TableState(string value);
    internal bool IsSetTableState();
    public Nullable`1<long> get_Updates();
    public void set_Updates(Nullable`1<long> value);
    internal bool IsSetUpdates();
    public Nullable`1<long> get_ValidationFailedRecords();
    public void set_ValidationFailedRecords(Nullable`1<long> value);
    internal bool IsSetValidationFailedRecords();
    public Nullable`1<long> get_ValidationPendingRecords();
    public void set_ValidationPendingRecords(Nullable`1<long> value);
    internal bool IsSetValidationPendingRecords();
    public string get_ValidationState();
    public void set_ValidationState(string value);
    internal bool IsSetValidationState();
    public string get_ValidationStateDetails();
    public void set_ValidationStateDetails(string value);
    internal bool IsSetValidationStateDetails();
    public Nullable`1<long> get_ValidationSuspendedRecords();
    public void set_ValidationSuspendedRecords(Nullable`1<long> value);
    internal bool IsSetValidationSuspendedRecords();
}
public class Amazon.DatabaseMigrationService.Model.TableToReload : object {
    private string _schemaName;
    private string _tableName;
    [AWSPropertyAttribute]
public string SchemaName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_SchemaName();
    public void set_SchemaName(string value);
    internal bool IsSetSchemaName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DatabaseMigrationService.Model.Tag : object {
    private string _key;
    private string _resourceArn;
    private string _value;
    public string Key { get; public set; }
    public string ResourceArn { get; public set; }
    public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.DatabaseMigrationService.Model.TestConnectionRequest : AmazonDatabaseMigrationServiceRequest {
    private string _endpointArn;
    private string _replicationInstanceArn;
    [AWSPropertyAttribute]
public string EndpointArn { get; public set; }
    [AWSPropertyAttribute]
public string ReplicationInstanceArn { get; public set; }
    public string get_EndpointArn();
    public void set_EndpointArn(string value);
    internal bool IsSetEndpointArn();
    public string get_ReplicationInstanceArn();
    public void set_ReplicationInstanceArn(string value);
    internal bool IsSetReplicationInstanceArn();
}
public class Amazon.DatabaseMigrationService.Model.TestConnectionResponse : AmazonWebServiceResponse {
    private Connection _connection;
    public Connection Connection { get; public set; }
    public Connection get_Connection();
    public void set_Connection(Connection value);
    internal bool IsSetConnection();
}
public class Amazon.DatabaseMigrationService.Model.TimestreamSettings : object {
    private Nullable`1<bool> _cdcInsertsAndUpdates;
    private string _databaseName;
    private Nullable`1<bool> _enableMagneticStoreWrites;
    private Nullable`1<int> _magneticDuration;
    private Nullable`1<int> _memoryDuration;
    public Nullable`1<bool> CdcInsertsAndUpdates { get; public set; }
    [AWSPropertyAttribute]
public string DatabaseName { get; public set; }
    public Nullable`1<bool> EnableMagneticStoreWrites { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MagneticDuration { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> MemoryDuration { get; public set; }
    public Nullable`1<bool> get_CdcInsertsAndUpdates();
    public void set_CdcInsertsAndUpdates(Nullable`1<bool> value);
    internal bool IsSetCdcInsertsAndUpdates();
    public string get_DatabaseName();
    public void set_DatabaseName(string value);
    internal bool IsSetDatabaseName();
    public Nullable`1<bool> get_EnableMagneticStoreWrites();
    public void set_EnableMagneticStoreWrites(Nullable`1<bool> value);
    internal bool IsSetEnableMagneticStoreWrites();
    public Nullable`1<int> get_MagneticDuration();
    public void set_MagneticDuration(Nullable`1<int> value);
    internal bool IsSetMagneticDuration();
    public Nullable`1<int> get_MemoryDuration();
    public void set_MemoryDuration(Nullable`1<int> value);
    internal bool IsSetMemoryDuration();
}
public class Amazon.DatabaseMigrationService.Model.UpdateSubscriptionsToEventBridgeRequest : AmazonDatabaseMigrationServiceRequest {
    private Nullable`1<bool> _forceMove;
    public Nullable`1<bool> ForceMove { get; public set; }
    public Nullable`1<bool> get_ForceMove();
    public void set_ForceMove(Nullable`1<bool> value);
    internal bool IsSetForceMove();
}
public class Amazon.DatabaseMigrationService.Model.UpdateSubscriptionsToEventBridgeResponse : AmazonWebServiceResponse {
    private string _result;
    public string Result { get; public set; }
    public string get_Result();
    public void set_Result(string value);
    internal bool IsSetResult();
}
public class Amazon.DatabaseMigrationService.Model.UpgradeDependencyFailureException : AmazonDatabaseMigrationServiceException {
    public UpgradeDependencyFailureException(string message);
    public UpgradeDependencyFailureException(string message, Exception innerException);
    public UpgradeDependencyFailureException(Exception innerException);
    public UpgradeDependencyFailureException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public UpgradeDependencyFailureException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DatabaseMigrationService.Model.VpcSecurityGroupMembership : object {
    private string _status;
    private string _vpcSecurityGroupId;
    public string Status { get; public set; }
    public string VpcSecurityGroupId { get; public set; }
    public string get_Status();
    public void set_Status(string value);
    internal bool IsSetStatus();
    public string get_VpcSecurityGroupId();
    public void set_VpcSecurityGroupId(string value);
    internal bool IsSetVpcSecurityGroupId();
}
public class Amazon.DatabaseMigrationService.NestingLevelValue : ConstantClass {
    public static NestingLevelValue None;
    public static NestingLevelValue One;
    public NestingLevelValue(string value);
    private static NestingLevelValue();
    public static NestingLevelValue FindValue(string value);
    public static NestingLevelValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.OriginTypeValue : ConstantClass {
    public static OriginTypeValue SOURCE;
    public static OriginTypeValue TARGET;
    public OriginTypeValue(string value);
    private static OriginTypeValue();
    public static OriginTypeValue FindValue(string value);
    public static OriginTypeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.ParquetVersionValue : ConstantClass {
    public static ParquetVersionValue Parquet10;
    public static ParquetVersionValue Parquet20;
    public ParquetVersionValue(string value);
    private static ParquetVersionValue();
    public static ParquetVersionValue FindValue(string value);
    public static ParquetVersionValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.PluginNameValue : ConstantClass {
    public static PluginNameValue NoPreference;
    public static PluginNameValue Pglogical;
    public static PluginNameValue TestDecoding;
    public PluginNameValue(string value);
    private static PluginNameValue();
    public static PluginNameValue FindValue(string value);
    public static PluginNameValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.RedisAuthTypeValue : ConstantClass {
    public static RedisAuthTypeValue AuthRole;
    public static RedisAuthTypeValue AuthToken;
    public static RedisAuthTypeValue None;
    public RedisAuthTypeValue(string value);
    private static RedisAuthTypeValue();
    public static RedisAuthTypeValue FindValue(string value);
    public static RedisAuthTypeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.RefreshSchemasStatusTypeValue : ConstantClass {
    public static RefreshSchemasStatusTypeValue Failed;
    public static RefreshSchemasStatusTypeValue Refreshing;
    public static RefreshSchemasStatusTypeValue Successful;
    public RefreshSchemasStatusTypeValue(string value);
    private static RefreshSchemasStatusTypeValue();
    public static RefreshSchemasStatusTypeValue FindValue(string value);
    public static RefreshSchemasStatusTypeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.ReleaseStatusValues : ConstantClass {
    public static ReleaseStatusValues Beta;
    public static ReleaseStatusValues Prod;
    public ReleaseStatusValues(string value);
    private static ReleaseStatusValues();
    public static ReleaseStatusValues FindValue(string value);
    public static ReleaseStatusValues op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.ReloadOptionValue : ConstantClass {
    public static ReloadOptionValue DataReload;
    public static ReloadOptionValue ValidateOnly;
    public ReloadOptionValue(string value);
    private static ReloadOptionValue();
    public static ReloadOptionValue FindValue(string value);
    public static ReloadOptionValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.ReplicationEndpointTypeValue : ConstantClass {
    public static ReplicationEndpointTypeValue Source;
    public static ReplicationEndpointTypeValue Target;
    public ReplicationEndpointTypeValue(string value);
    private static ReplicationEndpointTypeValue();
    public static ReplicationEndpointTypeValue FindValue(string value);
    public static ReplicationEndpointTypeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.SafeguardPolicy : ConstantClass {
    public static SafeguardPolicy ExclusiveAutomaticTruncation;
    public static SafeguardPolicy RelyOnSqlServerReplicationAgent;
    public static SafeguardPolicy SharedAutomaticTruncation;
    public SafeguardPolicy(string value);
    private static SafeguardPolicy();
    public static SafeguardPolicy FindValue(string value);
    public static SafeguardPolicy op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.SourceType : ConstantClass {
    public static SourceType ReplicationInstance;
    public SourceType(string value);
    private static SourceType();
    public static SourceType FindValue(string value);
    public static SourceType op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.SslSecurityProtocolValue : ConstantClass {
    public static SslSecurityProtocolValue Plaintext;
    public static SslSecurityProtocolValue SslEncryption;
    public SslSecurityProtocolValue(string value);
    private static SslSecurityProtocolValue();
    public static SslSecurityProtocolValue FindValue(string value);
    public static SslSecurityProtocolValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.StartReplicationTaskTypeValue : ConstantClass {
    public static StartReplicationTaskTypeValue ReloadTarget;
    public static StartReplicationTaskTypeValue ResumeProcessing;
    public static StartReplicationTaskTypeValue StartReplication;
    public StartReplicationTaskTypeValue(string value);
    private static StartReplicationTaskTypeValue();
    public static StartReplicationTaskTypeValue FindValue(string value);
    public static StartReplicationTaskTypeValue op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.TargetDbType : ConstantClass {
    public static TargetDbType MultipleDatabases;
    public static TargetDbType SpecificDatabase;
    public TargetDbType(string value);
    private static TargetDbType();
    public static TargetDbType FindValue(string value);
    public static TargetDbType op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.TlogAccessMode : ConstantClass {
    public static TlogAccessMode BackupOnly;
    public static TlogAccessMode PreferBackup;
    public static TlogAccessMode PreferTlog;
    public static TlogAccessMode TlogOnly;
    public TlogAccessMode(string value);
    private static TlogAccessMode();
    public static TlogAccessMode FindValue(string value);
    public static TlogAccessMode op_Implicit(string value);
}
public class Amazon.DatabaseMigrationService.VersionStatus : ConstantClass {
    public static VersionStatus OUTDATED;
    public static VersionStatus UNSUPPORTED;
    public static VersionStatus UP_TO_DATE;
    public VersionStatus(string value);
    private static VersionStatus();
    public static VersionStatus FindValue(string value);
    public static VersionStatus op_Implicit(string value);
}
