public static class Amazon.AWSConfigsDynamoDB : object {
    private static string dynamoDBKey;
    public static string DynamoDBContextTableNamePrefixKey;
    [CompilerGeneratedAttribute]
private static ConversionSchema <ConversionSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private static DynamoDBContextConfig <Context>k__BackingField;
    [ObsoleteAttribute("This property is obsolete. Use DynamoDBConfig.Context.TableNamePrefix instead.")]
public static string DynamoDBContextTableNamePrefix { get; public set; }
    internal static ConversionSchema ConversionSchema { get; internal set; }
    public static DynamoDBContextConfig Context { get; private set; }
    private static AWSConfigsDynamoDB();
    public static string get_DynamoDBContextTableNamePrefix();
    public static void set_DynamoDBContextTableNamePrefix(string value);
    [CompilerGeneratedAttribute]
internal static ConversionSchema get_ConversionSchema();
    [CompilerGeneratedAttribute]
internal static void set_ConversionSchema(ConversionSchema value);
    [CompilerGeneratedAttribute]
public static DynamoDBContextConfig get_Context();
    [CompilerGeneratedAttribute]
private static void set_Context(DynamoDBContextConfig value);
}
public class Amazon.DynamoDBv2.AmazonDynamoDBClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IDynamoDBv2PaginatorFactory _paginators;
    public IDynamoDBv2PaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonDynamoDBClient(RegionEndpoint region);
    public AmazonDynamoDBClient(AmazonDynamoDBConfig config);
    public AmazonDynamoDBClient(AWSCredentials credentials);
    public AmazonDynamoDBClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonDynamoDBClient(AWSCredentials credentials, AmazonDynamoDBConfig clientConfig);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonDynamoDBConfig clientConfig);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonDynamoDBClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonDynamoDBConfig clientConfig);
    private static AmazonDynamoDBClient();
    public sealed virtual IDynamoDBv2PaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    protected virtual IEnumerable`1<DiscoveryEndpointBase> EndpointOperation(EndpointOperationContextBase context);
    internal virtual BatchExecuteStatementResponse BatchExecuteStatement(BatchExecuteStatementRequest request);
    public virtual Task`1<BatchExecuteStatementResponse> BatchExecuteStatementAsync(BatchExecuteStatementRequest request, CancellationToken cancellationToken);
    internal virtual BatchGetItemResponse BatchGetItem(BatchGetItemRequest request);
    public virtual Task`1<BatchGetItemResponse> BatchGetItemAsync(Dictionary`2<string, KeysAndAttributes> requestItems, ReturnConsumedCapacity returnConsumedCapacity, CancellationToken cancellationToken);
    public virtual Task`1<BatchGetItemResponse> BatchGetItemAsync(Dictionary`2<string, KeysAndAttributes> requestItems, CancellationToken cancellationToken);
    public virtual Task`1<BatchGetItemResponse> BatchGetItemAsync(BatchGetItemRequest request, CancellationToken cancellationToken);
    internal virtual BatchWriteItemResponse BatchWriteItem(BatchWriteItemRequest request);
    public virtual Task`1<BatchWriteItemResponse> BatchWriteItemAsync(Dictionary`2<string, List`1<WriteRequest>> requestItems, CancellationToken cancellationToken);
    public virtual Task`1<BatchWriteItemResponse> BatchWriteItemAsync(BatchWriteItemRequest request, CancellationToken cancellationToken);
    internal virtual CreateBackupResponse CreateBackup(CreateBackupRequest request);
    public virtual Task`1<CreateBackupResponse> CreateBackupAsync(CreateBackupRequest request, CancellationToken cancellationToken);
    internal virtual CreateGlobalTableResponse CreateGlobalTable(CreateGlobalTableRequest request);
    public virtual Task`1<CreateGlobalTableResponse> CreateGlobalTableAsync(CreateGlobalTableRequest request, CancellationToken cancellationToken);
    internal virtual CreateTableResponse CreateTable(CreateTableRequest request);
    public virtual Task`1<CreateTableResponse> CreateTableAsync(string tableName, List`1<KeySchemaElement> keySchema, List`1<AttributeDefinition> attributeDefinitions, ProvisionedThroughput provisionedThroughput, CancellationToken cancellationToken);
    public virtual Task`1<CreateTableResponse> CreateTableAsync(CreateTableRequest request, CancellationToken cancellationToken);
    internal virtual DeleteBackupResponse DeleteBackup(DeleteBackupRequest request);
    public virtual Task`1<DeleteBackupResponse> DeleteBackupAsync(DeleteBackupRequest request, CancellationToken cancellationToken);
    internal virtual DeleteItemResponse DeleteItem(DeleteItemRequest request);
    public virtual Task`1<DeleteItemResponse> DeleteItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, CancellationToken cancellationToken);
    public virtual Task`1<DeleteItemResponse> DeleteItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, ReturnValue returnValues, CancellationToken cancellationToken);
    public virtual Task`1<DeleteItemResponse> DeleteItemAsync(DeleteItemRequest request, CancellationToken cancellationToken);
    internal virtual DeleteResourcePolicyResponse DeleteResourcePolicy(DeleteResourcePolicyRequest request);
    public virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteTableResponse DeleteTable(DeleteTableRequest request);
    public virtual Task`1<DeleteTableResponse> DeleteTableAsync(string tableName, CancellationToken cancellationToken);
    public virtual Task`1<DeleteTableResponse> DeleteTableAsync(DeleteTableRequest request, CancellationToken cancellationToken);
    internal virtual DescribeBackupResponse DescribeBackup(DescribeBackupRequest request);
    public virtual Task`1<DescribeBackupResponse> DescribeBackupAsync(DescribeBackupRequest request, CancellationToken cancellationToken);
    internal virtual DescribeContinuousBackupsResponse DescribeContinuousBackups(DescribeContinuousBackupsRequest request);
    public virtual Task`1<DescribeContinuousBackupsResponse> DescribeContinuousBackupsAsync(DescribeContinuousBackupsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeContributorInsightsResponse DescribeContributorInsights(DescribeContributorInsightsRequest request);
    public virtual Task`1<DescribeContributorInsightsResponse> DescribeContributorInsightsAsync(DescribeContributorInsightsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeEndpointsResponse DescribeEndpoints(DescribeEndpointsRequest request);
    public virtual Task`1<DescribeEndpointsResponse> DescribeEndpointsAsync(DescribeEndpointsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeExportResponse DescribeExport(DescribeExportRequest request);
    public virtual Task`1<DescribeExportResponse> DescribeExportAsync(DescribeExportRequest request, CancellationToken cancellationToken);
    internal virtual DescribeGlobalTableResponse DescribeGlobalTable(DescribeGlobalTableRequest request);
    public virtual Task`1<DescribeGlobalTableResponse> DescribeGlobalTableAsync(DescribeGlobalTableRequest request, CancellationToken cancellationToken);
    internal virtual DescribeGlobalTableSettingsResponse DescribeGlobalTableSettings(DescribeGlobalTableSettingsRequest request);
    public virtual Task`1<DescribeGlobalTableSettingsResponse> DescribeGlobalTableSettingsAsync(DescribeGlobalTableSettingsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeImportResponse DescribeImport(DescribeImportRequest request);
    public virtual Task`1<DescribeImportResponse> DescribeImportAsync(DescribeImportRequest request, CancellationToken cancellationToken);
    internal virtual DescribeKinesisStreamingDestinationResponse DescribeKinesisStreamingDestination(DescribeKinesisStreamingDestinationRequest request);
    public virtual Task`1<DescribeKinesisStreamingDestinationResponse> DescribeKinesisStreamingDestinationAsync(DescribeKinesisStreamingDestinationRequest request, CancellationToken cancellationToken);
    internal virtual DescribeLimitsResponse DescribeLimits(DescribeLimitsRequest request);
    public virtual Task`1<DescribeLimitsResponse> DescribeLimitsAsync(DescribeLimitsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTableResponse DescribeTable(DescribeTableRequest request);
    public virtual Task`1<DescribeTableResponse> DescribeTableAsync(string tableName, CancellationToken cancellationToken);
    public virtual Task`1<DescribeTableResponse> DescribeTableAsync(DescribeTableRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTableReplicaAutoScalingResponse DescribeTableReplicaAutoScaling(DescribeTableReplicaAutoScalingRequest request);
    public virtual Task`1<DescribeTableReplicaAutoScalingResponse> DescribeTableReplicaAutoScalingAsync(DescribeTableReplicaAutoScalingRequest request, CancellationToken cancellationToken);
    internal virtual DescribeTimeToLiveResponse DescribeTimeToLive(DescribeTimeToLiveRequest request);
    public virtual Task`1<DescribeTimeToLiveResponse> DescribeTimeToLiveAsync(string tableName, CancellationToken cancellationToken);
    public virtual Task`1<DescribeTimeToLiveResponse> DescribeTimeToLiveAsync(DescribeTimeToLiveRequest request, CancellationToken cancellationToken);
    internal virtual DisableKinesisStreamingDestinationResponse DisableKinesisStreamingDestination(DisableKinesisStreamingDestinationRequest request);
    public virtual Task`1<DisableKinesisStreamingDestinationResponse> DisableKinesisStreamingDestinationAsync(DisableKinesisStreamingDestinationRequest request, CancellationToken cancellationToken);
    internal virtual EnableKinesisStreamingDestinationResponse EnableKinesisStreamingDestination(EnableKinesisStreamingDestinationRequest request);
    public virtual Task`1<EnableKinesisStreamingDestinationResponse> EnableKinesisStreamingDestinationAsync(EnableKinesisStreamingDestinationRequest request, CancellationToken cancellationToken);
    internal virtual ExecuteStatementResponse ExecuteStatement(ExecuteStatementRequest request);
    public virtual Task`1<ExecuteStatementResponse> ExecuteStatementAsync(ExecuteStatementRequest request, CancellationToken cancellationToken);
    internal virtual ExecuteTransactionResponse ExecuteTransaction(ExecuteTransactionRequest request);
    public virtual Task`1<ExecuteTransactionResponse> ExecuteTransactionAsync(ExecuteTransactionRequest request, CancellationToken cancellationToken);
    internal virtual ExportTableToPointInTimeResponse ExportTableToPointInTime(ExportTableToPointInTimeRequest request);
    public virtual Task`1<ExportTableToPointInTimeResponse> ExportTableToPointInTimeAsync(ExportTableToPointInTimeRequest request, CancellationToken cancellationToken);
    internal virtual GetItemResponse GetItem(GetItemRequest request);
    public virtual Task`1<GetItemResponse> GetItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, CancellationToken cancellationToken);
    public virtual Task`1<GetItemResponse> GetItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, Nullable`1<bool> consistentRead, CancellationToken cancellationToken);
    public virtual Task`1<GetItemResponse> GetItemAsync(GetItemRequest request, CancellationToken cancellationToken);
    internal virtual GetResourcePolicyResponse GetResourcePolicy(GetResourcePolicyRequest request);
    public virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual ImportTableResponse ImportTable(ImportTableRequest request);
    public virtual Task`1<ImportTableResponse> ImportTableAsync(ImportTableRequest request, CancellationToken cancellationToken);
    internal virtual ListBackupsResponse ListBackups(ListBackupsRequest request);
    public virtual Task`1<ListBackupsResponse> ListBackupsAsync(ListBackupsRequest request, CancellationToken cancellationToken);
    internal virtual ListContributorInsightsResponse ListContributorInsights(ListContributorInsightsRequest request);
    public virtual Task`1<ListContributorInsightsResponse> ListContributorInsightsAsync(ListContributorInsightsRequest request, CancellationToken cancellationToken);
    internal virtual ListExportsResponse ListExports(ListExportsRequest request);
    public virtual Task`1<ListExportsResponse> ListExportsAsync(ListExportsRequest request, CancellationToken cancellationToken);
    internal virtual ListGlobalTablesResponse ListGlobalTables(ListGlobalTablesRequest request);
    public virtual Task`1<ListGlobalTablesResponse> ListGlobalTablesAsync(ListGlobalTablesRequest request, CancellationToken cancellationToken);
    internal virtual ListImportsResponse ListImports(ListImportsRequest request);
    public virtual Task`1<ListImportsResponse> ListImportsAsync(ListImportsRequest request, CancellationToken cancellationToken);
    internal virtual ListTablesResponse ListTables();
    internal virtual ListTablesResponse ListTables(ListTablesRequest request);
    public virtual Task`1<ListTablesResponse> ListTablesAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListTablesResponse> ListTablesAsync(string exclusiveStartTableName, CancellationToken cancellationToken);
    public virtual Task`1<ListTablesResponse> ListTablesAsync(string exclusiveStartTableName, Nullable`1<int> limit, CancellationToken cancellationToken);
    public virtual Task`1<ListTablesResponse> ListTablesAsync(Nullable`1<int> limit, CancellationToken cancellationToken);
    public virtual Task`1<ListTablesResponse> ListTablesAsync(ListTablesRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsOfResourceResponse ListTagsOfResource(ListTagsOfResourceRequest request);
    public virtual Task`1<ListTagsOfResourceResponse> ListTagsOfResourceAsync(ListTagsOfResourceRequest request, CancellationToken cancellationToken);
    internal virtual PutItemResponse PutItem(PutItemRequest request);
    public virtual Task`1<PutItemResponse> PutItemAsync(string tableName, Dictionary`2<string, AttributeValue> item, CancellationToken cancellationToken);
    public virtual Task`1<PutItemResponse> PutItemAsync(string tableName, Dictionary`2<string, AttributeValue> item, ReturnValue returnValues, CancellationToken cancellationToken);
    public virtual Task`1<PutItemResponse> PutItemAsync(PutItemRequest request, CancellationToken cancellationToken);
    internal virtual PutResourcePolicyResponse PutResourcePolicy(PutResourcePolicyRequest request);
    public virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    internal virtual QueryResponse Query(QueryRequest request);
    public virtual Task`1<QueryResponse> QueryAsync(QueryRequest request, CancellationToken cancellationToken);
    internal virtual RestoreTableFromBackupResponse RestoreTableFromBackup(RestoreTableFromBackupRequest request);
    public virtual Task`1<RestoreTableFromBackupResponse> RestoreTableFromBackupAsync(RestoreTableFromBackupRequest request, CancellationToken cancellationToken);
    internal virtual RestoreTableToPointInTimeResponse RestoreTableToPointInTime(RestoreTableToPointInTimeRequest request);
    public virtual Task`1<RestoreTableToPointInTimeResponse> RestoreTableToPointInTimeAsync(RestoreTableToPointInTimeRequest request, CancellationToken cancellationToken);
    internal virtual ScanResponse Scan(ScanRequest request);
    public virtual Task`1<ScanResponse> ScanAsync(string tableName, List`1<string> attributesToGet, CancellationToken cancellationToken);
    public virtual Task`1<ScanResponse> ScanAsync(string tableName, Dictionary`2<string, Condition> scanFilter, CancellationToken cancellationToken);
    public virtual Task`1<ScanResponse> ScanAsync(string tableName, List`1<string> attributesToGet, Dictionary`2<string, Condition> scanFilter, CancellationToken cancellationToken);
    public virtual Task`1<ScanResponse> ScanAsync(ScanRequest request, CancellationToken cancellationToken);
    internal virtual TagResourceResponse TagResource(TagResourceRequest request);
    public virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    internal virtual TransactGetItemsResponse TransactGetItems(TransactGetItemsRequest request);
    public virtual Task`1<TransactGetItemsResponse> TransactGetItemsAsync(TransactGetItemsRequest request, CancellationToken cancellationToken);
    internal virtual TransactWriteItemsResponse TransactWriteItems(TransactWriteItemsRequest request);
    public virtual Task`1<TransactWriteItemsResponse> TransactWriteItemsAsync(TransactWriteItemsRequest request, CancellationToken cancellationToken);
    internal virtual UntagResourceResponse UntagResource(UntagResourceRequest request);
    public virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    internal virtual UpdateContinuousBackupsResponse UpdateContinuousBackups(UpdateContinuousBackupsRequest request);
    public virtual Task`1<UpdateContinuousBackupsResponse> UpdateContinuousBackupsAsync(UpdateContinuousBackupsRequest request, CancellationToken cancellationToken);
    internal virtual UpdateContributorInsightsResponse UpdateContributorInsights(UpdateContributorInsightsRequest request);
    public virtual Task`1<UpdateContributorInsightsResponse> UpdateContributorInsightsAsync(UpdateContributorInsightsRequest request, CancellationToken cancellationToken);
    internal virtual UpdateGlobalTableResponse UpdateGlobalTable(UpdateGlobalTableRequest request);
    public virtual Task`1<UpdateGlobalTableResponse> UpdateGlobalTableAsync(UpdateGlobalTableRequest request, CancellationToken cancellationToken);
    internal virtual UpdateGlobalTableSettingsResponse UpdateGlobalTableSettings(UpdateGlobalTableSettingsRequest request);
    public virtual Task`1<UpdateGlobalTableSettingsResponse> UpdateGlobalTableSettingsAsync(UpdateGlobalTableSettingsRequest request, CancellationToken cancellationToken);
    internal virtual UpdateItemResponse UpdateItem(UpdateItemRequest request);
    public virtual Task`1<UpdateItemResponse> UpdateItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, Dictionary`2<string, AttributeValueUpdate> attributeUpdates, CancellationToken cancellationToken);
    public virtual Task`1<UpdateItemResponse> UpdateItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, Dictionary`2<string, AttributeValueUpdate> attributeUpdates, ReturnValue returnValues, CancellationToken cancellationToken);
    public virtual Task`1<UpdateItemResponse> UpdateItemAsync(UpdateItemRequest request, CancellationToken cancellationToken);
    internal virtual UpdateKinesisStreamingDestinationResponse UpdateKinesisStreamingDestination(UpdateKinesisStreamingDestinationRequest request);
    public virtual Task`1<UpdateKinesisStreamingDestinationResponse> UpdateKinesisStreamingDestinationAsync(UpdateKinesisStreamingDestinationRequest request, CancellationToken cancellationToken);
    internal virtual UpdateTableResponse UpdateTable(UpdateTableRequest request);
    public virtual Task`1<UpdateTableResponse> UpdateTableAsync(string tableName, ProvisionedThroughput provisionedThroughput, CancellationToken cancellationToken);
    public virtual Task`1<UpdateTableResponse> UpdateTableAsync(UpdateTableRequest request, CancellationToken cancellationToken);
    internal virtual UpdateTableReplicaAutoScalingResponse UpdateTableReplicaAutoScaling(UpdateTableReplicaAutoScalingRequest request);
    public virtual Task`1<UpdateTableReplicaAutoScalingResponse> UpdateTableReplicaAutoScalingAsync(UpdateTableReplicaAutoScalingRequest request, CancellationToken cancellationToken);
    internal virtual UpdateTimeToLiveResponse UpdateTimeToLive(UpdateTimeToLiveRequest request);
    public virtual Task`1<UpdateTimeToLiveResponse> UpdateTimeToLiveAsync(UpdateTimeToLiveRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
    [CompilerGeneratedAttribute]
private IList`1<DiscoveryEndpointBase> <EndpointOperation>b__21_0();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.DynamoDBv2.AmazonDynamoDBConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonDynamoDBEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonDynamoDBConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.DynamoDBv2.AmazonDynamoDBDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonDynamoDBDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
public class Amazon.DynamoDBv2.AmazonDynamoDBException : AmazonServiceException {
    public AmazonDynamoDBException(string message);
    public AmazonDynamoDBException(string message, Exception innerException);
    public AmazonDynamoDBException(Exception innerException);
    public AmazonDynamoDBException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonDynamoDBException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.AmazonDynamoDBRequest : AmazonWebServiceRequest {
}
public class Amazon.DynamoDBv2.AmazonDynamoDBStreamsClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonDynamoDBStreamsClient(RegionEndpoint region);
    public AmazonDynamoDBStreamsClient(AmazonDynamoDBStreamsConfig config);
    public AmazonDynamoDBStreamsClient(AWSCredentials credentials);
    public AmazonDynamoDBStreamsClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonDynamoDBStreamsClient(AWSCredentials credentials, AmazonDynamoDBStreamsConfig clientConfig);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonDynamoDBStreamsConfig clientConfig);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonDynamoDBStreamsClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonDynamoDBStreamsConfig clientConfig);
    private static AmazonDynamoDBStreamsClient();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual DescribeStreamResponse DescribeStream(DescribeStreamRequest request);
    public virtual Task`1<DescribeStreamResponse> DescribeStreamAsync(string streamArn, CancellationToken cancellationToken);
    public virtual Task`1<DescribeStreamResponse> DescribeStreamAsync(DescribeStreamRequest request, CancellationToken cancellationToken);
    internal virtual GetRecordsResponse GetRecords(GetRecordsRequest request);
    public virtual Task`1<GetRecordsResponse> GetRecordsAsync(string shardIterator, CancellationToken cancellationToken);
    public virtual Task`1<GetRecordsResponse> GetRecordsAsync(GetRecordsRequest request, CancellationToken cancellationToken);
    internal virtual GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request);
    public virtual Task`1<GetShardIteratorResponse> GetShardIteratorAsync(GetShardIteratorRequest request, CancellationToken cancellationToken);
    internal virtual ListStreamsResponse ListStreams();
    internal virtual ListStreamsResponse ListStreams(ListStreamsRequest request);
    public virtual Task`1<ListStreamsResponse> ListStreamsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListStreamsResponse> ListStreamsAsync(ListStreamsRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.DynamoDBv2.AmazonDynamoDBStreamsConfig : ClientConfig {
    private static string UserAgentString;
    private static AmazonDynamoDBStreamsEndpointResolver EndpointResolver;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonDynamoDBStreamsConfig();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
    public virtual Endpoint DetermineServiceOperationEndpoint(ServiceOperationEndpointParameters parameters);
}
public static class Amazon.DynamoDBv2.AmazonDynamoDBStreamsDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    private static AmazonDynamoDBStreamsDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
}
[ObsoleteAttribute("This exception type is never thrown and will be removed in a future version.")]
public class Amazon.DynamoDBv2.AmazonDynamoDBStreamsException : AmazonServiceException {
    public AmazonDynamoDBStreamsException(string message);
    public AmazonDynamoDBStreamsException(string message, Exception innerException);
    public AmazonDynamoDBStreamsException(Exception innerException);
    public AmazonDynamoDBStreamsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonDynamoDBStreamsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.AmazonDynamoDBStreamsRequest : AmazonWebServiceRequest {
}
public class Amazon.DynamoDBv2.ApproximateCreationDateTimePrecision : ConstantClass {
    public static ApproximateCreationDateTimePrecision MICROSECOND;
    public static ApproximateCreationDateTimePrecision MILLISECOND;
    public ApproximateCreationDateTimePrecision(string value);
    private static ApproximateCreationDateTimePrecision();
    public static ApproximateCreationDateTimePrecision FindValue(string value);
    public static ApproximateCreationDateTimePrecision op_Implicit(string value);
}
public class Amazon.DynamoDBv2.AttributeAction : ConstantClass {
    public static AttributeAction ADD;
    public static AttributeAction DELETE;
    public static AttributeAction PUT;
    public AttributeAction(string value);
    private static AttributeAction();
    public static AttributeAction FindValue(string value);
    public static AttributeAction op_Implicit(string value);
}
public class Amazon.DynamoDBv2.BackupStatus : ConstantClass {
    public static BackupStatus AVAILABLE;
    public static BackupStatus CREATING;
    public static BackupStatus DELETED;
    public BackupStatus(string value);
    private static BackupStatus();
    public static BackupStatus FindValue(string value);
    public static BackupStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.BackupType : ConstantClass {
    public static BackupType AWS_BACKUP;
    public static BackupType SYSTEM;
    public static BackupType USER;
    public BackupType(string value);
    private static BackupType();
    public static BackupType FindValue(string value);
    public static BackupType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.BackupTypeFilter : ConstantClass {
    public static BackupTypeFilter ALL;
    public static BackupTypeFilter AWS_BACKUP;
    public static BackupTypeFilter SYSTEM;
    public static BackupTypeFilter USER;
    public BackupTypeFilter(string value);
    private static BackupTypeFilter();
    public static BackupTypeFilter FindValue(string value);
    public static BackupTypeFilter op_Implicit(string value);
}
public class Amazon.DynamoDBv2.BatchStatementErrorCodeEnum : ConstantClass {
    public static BatchStatementErrorCodeEnum AccessDenied;
    public static BatchStatementErrorCodeEnum ConditionalCheckFailed;
    public static BatchStatementErrorCodeEnum DuplicateItem;
    public static BatchStatementErrorCodeEnum InternalServerError;
    public static BatchStatementErrorCodeEnum ItemCollectionSizeLimitExceeded;
    public static BatchStatementErrorCodeEnum ProvisionedThroughputExceeded;
    public static BatchStatementErrorCodeEnum RequestLimitExceeded;
    public static BatchStatementErrorCodeEnum ResourceNotFound;
    public static BatchStatementErrorCodeEnum ThrottlingError;
    public static BatchStatementErrorCodeEnum TransactionConflict;
    public static BatchStatementErrorCodeEnum ValidationError;
    public BatchStatementErrorCodeEnum(string value);
    private static BatchStatementErrorCodeEnum();
    public static BatchStatementErrorCodeEnum FindValue(string value);
    public static BatchStatementErrorCodeEnum op_Implicit(string value);
}
public class Amazon.DynamoDBv2.BillingMode : ConstantClass {
    public static BillingMode PAY_PER_REQUEST;
    public static BillingMode PROVISIONED;
    public BillingMode(string value);
    private static BillingMode();
    public static BillingMode FindValue(string value);
    public static BillingMode op_Implicit(string value);
}
public class Amazon.DynamoDBv2.BoolAsNConverter : object {
    private static BoolConverterV1 v1Converter;
    private static Type boolType;
    private static BoolAsNConverter();
    public sealed virtual DynamoDBEntry ToEntry(object value);
    public sealed virtual object FromEntry(DynamoDBEntry entry);
}
internal class Amazon.DynamoDBv2.BoolConverterV1 : Converter`1<bool> {
    protected virtual bool TryTo(bool value, Primitive& p);
    protected virtual bool TryFrom(DynamoDBBool b, Type targetType, Boolean& result);
    protected virtual bool TryFrom(Primitive p, Type targetType, Boolean& result);
}
internal class Amazon.DynamoDBv2.BoolConverterV2 : BoolConverterV1 {
    protected virtual bool TryTo(bool value, DynamoDBBool& b);
    protected virtual bool TryTo(bool value, Primitive& p);
}
internal class Amazon.DynamoDBv2.ByteConverterV1 : Converter`1<byte> {
    protected virtual bool TryTo(byte value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Byte& result);
}
internal class Amazon.DynamoDBv2.ByteConverterV2 : ByteConverterV1 {
}
internal class Amazon.DynamoDBv2.BytesConverterV1 : Converter`1<Byte[]> {
    protected virtual bool TryTo(Byte[] value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Byte[]& result);
}
internal class Amazon.DynamoDBv2.BytesConverterV2 : BytesConverterV1 {
}
internal class Amazon.DynamoDBv2.CharConverterV1 : Converter`1<char> {
    protected virtual bool TryTo(char value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Char& result);
}
internal class Amazon.DynamoDBv2.CharConverterV2 : CharConverterV1 {
}
internal abstract class Amazon.DynamoDBv2.CollectionConverter : Converter {
    private IEnumerable`1<Type> targetTypes;
    public CollectionConverter(IEnumerable`1<Type> memberTypes);
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.CollectionConverter/<GetTargetTypes>d__1")]
private static IEnumerable`1<Type> GetTargetTypes(IEnumerable`1<Type> memberTypes);
    public virtual IEnumerable`1<Type> GetTargetTypes();
    protected bool EntriesToCollection(Type targetType, Type elementType, IEnumerable`1<DynamoDBEntry> entries, Object& result);
}
internal class Amazon.DynamoDBv2.CollectionConverterV2 : PrimitiveCollectionConverterV1 {
    private static Type setTypeInfo;
    private static Type enumerableType;
    private static CollectionConverterV2();
    public virtual bool TryTo(object value, PrimitiveList& pl);
    public virtual bool TryTo(object value, DynamoDBList& l);
}
public class Amazon.DynamoDBv2.ComparisonOperator : ConstantClass {
    public static ComparisonOperator BEGINS_WITH;
    public static ComparisonOperator BETWEEN;
    public static ComparisonOperator CONTAINS;
    public static ComparisonOperator EQ;
    public static ComparisonOperator GE;
    public static ComparisonOperator GT;
    public static ComparisonOperator IN;
    public static ComparisonOperator LE;
    public static ComparisonOperator LT;
    public static ComparisonOperator NE;
    public static ComparisonOperator NOT_CONTAINS;
    public static ComparisonOperator NOT_NULL;
    public static ComparisonOperator NULL;
    public ComparisonOperator(string value);
    private static ComparisonOperator();
    public static ComparisonOperator FindValue(string value);
    public static ComparisonOperator op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ConditionalOperator : ConstantClass {
    public static ConditionalOperator AND;
    public static ConditionalOperator OR;
    public ConditionalOperator(string value);
    private static ConditionalOperator();
    public static ConditionalOperator FindValue(string value);
    public static ConditionalOperator op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ContinuousBackupsStatus : ConstantClass {
    public static ContinuousBackupsStatus DISABLED;
    public static ContinuousBackupsStatus ENABLED;
    public ContinuousBackupsStatus(string value);
    private static ContinuousBackupsStatus();
    public static ContinuousBackupsStatus FindValue(string value);
    public static ContinuousBackupsStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ContributorInsightsAction : ConstantClass {
    public static ContributorInsightsAction DISABLE;
    public static ContributorInsightsAction ENABLE;
    public ContributorInsightsAction(string value);
    private static ContributorInsightsAction();
    public static ContributorInsightsAction FindValue(string value);
    public static ContributorInsightsAction op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ContributorInsightsStatus : ConstantClass {
    public static ContributorInsightsStatus DISABLED;
    public static ContributorInsightsStatus DISABLING;
    public static ContributorInsightsStatus ENABLED;
    public static ContributorInsightsStatus ENABLING;
    public static ContributorInsightsStatus FAILED;
    public ContributorInsightsStatus(string value);
    private static ContributorInsightsStatus();
    public static ContributorInsightsStatus FindValue(string value);
    public static ContributorInsightsStatus op_Implicit(string value);
}
internal enum Amazon.DynamoDBv2.ConversionSchema : Enum {
    public int value__;
    public static ConversionSchema V1;
    public static ConversionSchema V2;
}
internal abstract class Amazon.DynamoDBv2.Converter : object {
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    public DynamoDBEntryConversion Conversion { get; public set; }
    public abstract virtual IEnumerable`1<Type> GetTargetTypes();
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
    public DynamoDBEntry ToEntry(object value);
    public bool TryToEntry(object value, DynamoDBEntry& entry);
    public object FromEntry(DynamoDBEntry entry, Type targetType);
    public bool TryFromEntry(DynamoDBEntry entry, Type targetType, Object& value);
    public virtual bool TryTo(object value, DynamoDBBool& b);
    public virtual bool TryTo(object value, Primitive& p);
    public virtual bool TryTo(object value, PrimitiveList& pl);
    public virtual bool TryTo(object value, DynamoDBList& l);
    public virtual bool TryTo(object value, Document& d);
    public virtual bool TryFrom(DynamoDBBool b, Type targetType, Object& result);
    public virtual bool TryFrom(Primitive p, Type targetType, Object& result);
    public virtual bool TryFrom(PrimitiveList pl, Type targetType, Object& result);
    public virtual bool TryFrom(DynamoDBList l, Type targetType, Object& result);
    public virtual bool TryFrom(Document d, Type targetType, Object& result);
}
internal abstract class Amazon.DynamoDBv2.Converter`1 : Converter {
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.Converter`1/<GetTargetTypes>d__0")]
public virtual IEnumerable`1<Type> GetTargetTypes();
    public virtual bool TryTo(object value, DynamoDBBool& b);
    public virtual bool TryTo(object value, Primitive& p);
    public virtual bool TryTo(object value, PrimitiveList& pl);
    public virtual bool TryTo(object value, DynamoDBList& l);
    public virtual bool TryTo(object value, Document& d);
    protected virtual bool TryTo(T value, DynamoDBBool& b);
    protected virtual bool TryTo(T value, Primitive& p);
    protected virtual bool TryTo(T value, PrimitiveList& pl);
    protected virtual bool TryTo(T value, DynamoDBList& l);
    protected virtual bool TryTo(T value, Document& d);
    public virtual bool TryFrom(DynamoDBBool b, Type targetType, Object& result);
    public virtual bool TryFrom(Primitive p, Type targetType, Object& result);
    public virtual bool TryFrom(PrimitiveList pl, Type targetType, Object& result);
    public virtual bool TryFrom(DynamoDBList l, Type targetType, Object& result);
    public virtual bool TryFrom(Document d, Type targetType, Object& result);
    protected virtual bool TryFrom(DynamoDBBool b, Type targetType, T& result);
    protected virtual bool TryFrom(Primitive p, Type targetType, T& result);
    protected virtual bool TryFrom(PrimitiveList pl, Type targetType, T& result);
    protected virtual bool TryFrom(DynamoDBList l, Type targetType, T& result);
    protected virtual bool TryFrom(Document d, Type targetType, T& result);
}
internal class Amazon.DynamoDBv2.ConverterCache : object {
    private static Type EnumType;
    private Dictionary`2<Type, Converter> Cache;
    private static ConverterCache();
    public bool HasConverter(Type type);
    public void AddConverter(Converter converter, DynamoDBEntryConversion conversion);
    public Converter GetConverter(Type type);
    public bool TryGetConverter(Type type, Converter& converter);
}
internal static class Amazon.DynamoDBv2.Custom.Internal.InternalConstants : object {
    internal static string RequiresUnreferencedCodeMessage;
}
public class Amazon.DynamoDBv2.DataModel.AsyncSearch`1 : object {
    [CompilerGeneratedAttribute]
private Search <DocumentSearch>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBContext <SourceContext>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBFlatConfig <Config>k__BackingField;
    private Search DocumentSearch { get; private set; }
    private DynamoDBContext SourceContext { get; private set; }
    private DynamoDBFlatConfig Config { get; private set; }
    public bool IsDone { get; }
    public string PaginationToken { get; }
    internal AsyncSearch`1(DynamoDBContext source, ContextSearch contextSearch);
    [CompilerGeneratedAttribute]
private Search get_DocumentSearch();
    [CompilerGeneratedAttribute]
private void set_DocumentSearch(Search value);
    [CompilerGeneratedAttribute]
private DynamoDBContext get_SourceContext();
    [CompilerGeneratedAttribute]
private void set_SourceContext(DynamoDBContext value);
    [CompilerGeneratedAttribute]
private DynamoDBFlatConfig get_Config();
    [CompilerGeneratedAttribute]
private void set_Config(DynamoDBFlatConfig value);
    public virtual bool get_IsDone();
    public virtual string get_PaginationToken();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.AsyncSearch`1/<GetNextSetAsync>d__18")]
public virtual Task`1<List`1<T>> GetNextSetAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.AsyncSearch`1/<GetRemainingAsync>d__19")]
public virtual Task`1<List`1<T>> GetRemainingAsync(CancellationToken cancellationToken);
}
public abstract class Amazon.DynamoDBv2.DataModel.BaseOperationConfig : object {
    [CompilerGeneratedAttribute]
private string <OverrideTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsEmptyStringValueEnabled>k__BackingField;
    public string OverrideTableName { get; public set; }
    public string TableNamePrefix { get; public set; }
    public DynamoDBEntryConversion Conversion { get; public set; }
    public Nullable`1<bool> IsEmptyStringValueEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OverrideTableName();
    [CompilerGeneratedAttribute]
public void set_OverrideTableName(string value);
    [CompilerGeneratedAttribute]
public string get_TableNamePrefix();
    [CompilerGeneratedAttribute]
public void set_TableNamePrefix(string value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsEmptyStringValueEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEmptyStringValueEnabled(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
public abstract class Amazon.DynamoDBv2.DataModel.BatchGet : object {
    [CompilerGeneratedAttribute]
private List`1<object> <UntypedResults>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBFlatConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Key> <Keys>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentBatchGet <DocumentBatch>k__BackingField;
    [CompilerGeneratedAttribute]
private ItemStorageConfig <ItemStorageConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsistentRead>k__BackingField;
    protected List`1<object> UntypedResults { get; protected set; }
    internal DynamoDBContext Context { get; internal set; }
    internal DynamoDBFlatConfig Config { get; internal set; }
    internal List`1<Key> Keys { get; internal set; }
    internal DocumentBatchGet DocumentBatch { get; internal set; }
    internal ItemStorageConfig ItemStorageConfig { get; internal set; }
    public List`1<object> Results { get; }
    public bool ConsistentRead { get; public set; }
    internal BatchGet(DynamoDBContext context, DynamoDBFlatConfig config);
    [CompilerGeneratedAttribute]
protected List`1<object> get_UntypedResults();
    [CompilerGeneratedAttribute]
protected void set_UntypedResults(List`1<object> value);
    [CompilerGeneratedAttribute]
internal DynamoDBContext get_Context();
    [CompilerGeneratedAttribute]
internal void set_Context(DynamoDBContext value);
    [CompilerGeneratedAttribute]
internal DynamoDBFlatConfig get_Config();
    [CompilerGeneratedAttribute]
internal void set_Config(DynamoDBFlatConfig value);
    [CompilerGeneratedAttribute]
internal List`1<Key> get_Keys();
    [CompilerGeneratedAttribute]
internal void set_Keys(List`1<Key> value);
    [CompilerGeneratedAttribute]
internal DocumentBatchGet get_DocumentBatch();
    [CompilerGeneratedAttribute]
internal void set_DocumentBatch(DocumentBatchGet value);
    [CompilerGeneratedAttribute]
internal ItemStorageConfig get_ItemStorageConfig();
    [CompilerGeneratedAttribute]
internal void set_ItemStorageConfig(ItemStorageConfig value);
    public List`1<object> get_Results();
    [CompilerGeneratedAttribute]
public bool get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(bool value);
    protected internal abstract virtual void ExecuteHelper();
    protected internal abstract virtual Task ExecuteHelperAsync(CancellationToken cancellationToken);
    internal abstract virtual void CreateDocumentBatch();
    internal abstract virtual void PopulateResults(List`1<Document> items);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DataModel.BatchGet`1 : BatchGet {
    [CompilerGeneratedAttribute]
private List`1<T> <TypedResults>k__BackingField;
    public List`1<T> Results { get; }
    protected List`1<T> TypedResults { get; protected set; }
    internal BatchGet`1(DynamoDBContext context, DynamoDBFlatConfig config);
    public List`1<T> get_Results();
    public void AddKey(object hashKey);
    public void AddKey(object hashKey, object rangeKey);
    public void AddKey(T keyObject);
    public MultiTableBatchGet Combine(BatchGet[] otherBatches);
    protected internal virtual void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.BatchGet`1/<ExecuteHelperAsync>d__8")]
protected internal virtual Task ExecuteHelperAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
protected List`1<T> get_TypedResults();
    [CompilerGeneratedAttribute]
protected void set_TypedResults(List`1<T> value);
    internal virtual void CreateDocumentBatch();
    internal virtual void PopulateResults(List`1<Document> items);
}
public class Amazon.DynamoDBv2.DataModel.BatchGetConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
public abstract class Amazon.DynamoDBv2.DataModel.BatchWrite : object {
    [CompilerGeneratedAttribute]
private DynamoDBContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBFlatConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentBatchWrite <DocumentBatch>k__BackingField;
    internal DynamoDBContext Context { get; internal set; }
    internal DynamoDBFlatConfig Config { get; internal set; }
    internal DocumentBatchWrite DocumentBatch { get; internal set; }
    internal BatchWrite(DynamoDBContext context, DynamoDBFlatConfig config);
    [CompilerGeneratedAttribute]
internal DynamoDBContext get_Context();
    [CompilerGeneratedAttribute]
internal void set_Context(DynamoDBContext value);
    [CompilerGeneratedAttribute]
internal DynamoDBFlatConfig get_Config();
    [CompilerGeneratedAttribute]
internal void set_Config(DynamoDBFlatConfig value);
    [CompilerGeneratedAttribute]
internal DocumentBatchWrite get_DocumentBatch();
    [CompilerGeneratedAttribute]
internal void set_DocumentBatch(DocumentBatchWrite value);
    protected internal abstract virtual void ExecuteHelper();
    protected internal abstract virtual Task ExecuteHelperAsync(CancellationToken cancellationToken);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DataModel.BatchWrite`1 : BatchWrite {
    [CompilerGeneratedAttribute]
private ItemStorageConfig <StorageConfig>k__BackingField;
    internal ItemStorageConfig StorageConfig { get; internal set; }
    internal BatchWrite`1(DynamoDBContext context, DynamoDBFlatConfig config);
    internal BatchWrite`1(DynamoDBContext context, Type valuesType, DynamoDBFlatConfig config);
    public MultiTableBatchWrite Combine(BatchWrite[] otherBatches);
    public void AddPutItems(IEnumerable`1<T> values);
    public void AddPutItem(T item);
    public void AddDeleteItems(IEnumerable`1<T> values);
    public void AddDeleteItem(T item);
    public void AddDeleteKey(object hashKey);
    public void AddDeleteKey(object hashKey, object rangeKey);
    [CompilerGeneratedAttribute]
internal ItemStorageConfig get_StorageConfig();
    [CompilerGeneratedAttribute]
internal void set_StorageConfig(ItemStorageConfig value);
    protected internal virtual void ExecuteHelper();
    protected internal virtual Task ExecuteHelperAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DataModel.BatchWriteConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipVersionCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreNullValues>k__BackingField;
    public Nullable`1<bool> SkipVersionCheck { get; public set; }
    public Nullable`1<bool> IgnoreNullValues { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SkipVersionCheck();
    [CompilerGeneratedAttribute]
public void set_SkipVersionCheck(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreNullValues();
    [CompilerGeneratedAttribute]
public void set_IgnoreNullValues(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
public class Amazon.DynamoDBv2.DataModel.DeleteConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipVersionCheck>k__BackingField;
    public Nullable`1<bool> SkipVersionCheck { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SkipVersionCheck();
    [CompilerGeneratedAttribute]
public void set_SkipVersionCheck(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
[AttributeUsageAttribute("32767")]
public abstract class Amazon.DynamoDBv2.DataModel.DynamoDBAttribute : Attribute {
}
public class Amazon.DynamoDBv2.DataModel.DynamoDBContext : object {
    private bool disposed;
    private bool ownClient;
    [CompilerGeneratedAttribute]
private IAmazonDynamoDB <Client>k__BackingField;
    private Dictionary`2<string, Table> tablesMap;
    private ReaderWriterLockSlim _readerWriterLockSlim;
    [CompilerGeneratedAttribute]
private DynamoDBContextConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private ItemStorageConfigCache <StorageConfigCache>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<Type, IPropertyConverter> <ConverterCache>k__BackingField;
    private static Task CompletedTask;
    private static string NO_INDEX;
    internal IAmazonDynamoDB Client { get; private set; }
    internal DynamoDBContextConfig Config { get; private set; }
    internal ItemStorageConfigCache StorageConfigCache { get; private set; }
    public Dictionary`2<Type, IPropertyConverter> ConverterCache { get; private set; }
    [ObsoleteAttribute("Use the DynamoDBContextBuilder to construct a DynamoDBContext with the recommended configuration.")]
public DynamoDBContext(IAmazonDynamoDB client);
    [ObsoleteAttribute("Use the DynamoDBContextBuilder to construct a DynamoDBContext with the recommended configuration.")]
public DynamoDBContext(IAmazonDynamoDB client, DynamoDBContextConfig config);
    internal DynamoDBContext(IAmazonDynamoDB client, bool ownClient, DynamoDBContextConfig config);
    private static DynamoDBContext();
    [CompilerGeneratedAttribute]
internal IAmazonDynamoDB get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(IAmazonDynamoDB value);
    [CompilerGeneratedAttribute]
internal DynamoDBContextConfig get_Config();
    [CompilerGeneratedAttribute]
private void set_Config(DynamoDBContextConfig value);
    [CompilerGeneratedAttribute]
internal ItemStorageConfigCache get_StorageConfigCache();
    [CompilerGeneratedAttribute]
private void set_StorageConfigCache(ItemStorageConfigCache value);
    [CompilerGeneratedAttribute]
public Dictionary`2<Type, IPropertyConverter> get_ConverterCache();
    [CompilerGeneratedAttribute]
private void set_ConverterCache(Dictionary`2<Type, IPropertyConverter> value);
    public sealed virtual void RegisterTableDefinition(Table table);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    protected virtual override void Finalize();
    public sealed virtual BatchGet`1<T> CreateBatchGet();
    [ObsoleteAttribute("Use the CreateBatchGet overload that takes BatchGetConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to BatchGet.")]
public sealed virtual BatchGet`1<T> CreateBatchGet(DynamoDBOperationConfig operationConfig);
    public sealed virtual BatchGet`1<T> CreateBatchGet(BatchGetConfig batchGetConfig);
    public sealed virtual MultiTableBatchGet CreateMultiTableBatchGet(BatchGet[] batches);
    public sealed virtual BatchWrite`1<T> CreateBatchWrite();
    [ObsoleteAttribute("Use the CreateBatchWrite overload that takes BatchWriteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to BatchWrite.")]
public sealed virtual BatchWrite`1<T> CreateBatchWrite(DynamoDBOperationConfig operationConfig);
    public sealed virtual BatchWrite`1<object> CreateBatchWrite(Type valuesType);
    [ObsoleteAttribute("Use the CreateBatchWrite overload that takes BatchWriteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to BatchWrite.")]
public sealed virtual BatchWrite`1<object> CreateBatchWrite(Type valuesType, DynamoDBOperationConfig operationConfig);
    public sealed virtual BatchWrite`1<T> CreateBatchWrite(BatchWriteConfig batchWriteConfig);
    public sealed virtual BatchWrite`1<object> CreateBatchWrite(Type valuesType, BatchWriteConfig batchWriteConfig);
    public sealed virtual MultiTableBatchWrite CreateMultiTableBatchWrite(BatchWrite[] batches);
    public sealed virtual TransactGet`1<T> CreateTransactGet();
    [ObsoleteAttribute("Use the CreateTransactGet overload that takes TransactGetConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to BatchGet.")]
public sealed virtual TransactGet`1<T> CreateTransactGet(DynamoDBOperationConfig operationConfig);
    public sealed virtual TransactGet`1<T> CreateTransactGet(TransactGetConfig transactGetConfig);
    public sealed virtual MultiTableTransactGet CreateMultiTableTransactGet(TransactGet[] transactionParts);
    public sealed virtual TransactWrite`1<T> CreateTransactWrite();
    [ObsoleteAttribute("Use the CreateTransactWrite overload that takes TransactWriteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to CreateTransactWrite.")]
public sealed virtual TransactWrite`1<T> CreateTransactWrite(DynamoDBOperationConfig operationConfig);
    public sealed virtual TransactWrite`1<T> CreateTransactWrite(TransactWriteConfig transactWriteConfig);
    public sealed virtual MultiTableTransactWrite CreateMultiTableTransactWrite(TransactWrite[] transactionParts);
    private void SaveHelper(T value, DynamoDBFlatConfig flatConfig);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.DynamoDBContext/<SaveHelperAsync>d__47`1")]
private Task SaveHelperAsync(T value, DynamoDBFlatConfig flatConfig, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.DynamoDBContext/<SaveHelperAsync>d__48")]
private Task SaveHelperAsync(Type valueType, object value, DynamoDBFlatConfig flatConfig, CancellationToken cancellationToken);
    public sealed virtual Document ToDocument(T value);
    [ObsoleteAttribute("Use the ToDocument overload that takes ToDocumentConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to ToDocument.")]
public sealed virtual Document ToDocument(T value, DynamoDBOperationConfig operationConfig);
    public sealed virtual Document ToDocument(T value, ToDocumentConfig toDocumentConfig);
    private T LoadHelper(object hashKey, object rangeKey, DynamoDBFlatConfig flatConfig);
    private Task`1<T> LoadHelperAsync(object hashKey, object rangeKey, DynamoDBFlatConfig flatConfig, CancellationToken cancellationToken);
    private T LoadHelper(T keyObject, DynamoDBFlatConfig flatConfig);
    private Task`1<T> LoadHelperAsync(T keyObject, DynamoDBFlatConfig flatConfig, CancellationToken cancellationToken);
    private T LoadHelper(Key key, DynamoDBFlatConfig flatConfig, ItemStorageConfig storageConfig);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.DynamoDBContext/<LoadHelperAsync>d__57`1")]
private Task`1<T> LoadHelperAsync(Key key, DynamoDBFlatConfig flatConfig, ItemStorageConfig storageConfig, CancellationToken cancellationToken);
    public sealed virtual T FromDocument(Document document);
    [ObsoleteAttribute("Use the FromDocument overload that takes FromDocumentConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to FromDocument.")]
public sealed virtual T FromDocument(Document document, DynamoDBOperationConfig operationConfig);
    public sealed virtual T FromDocument(Document document, FromDocumentConfig fromDocumentConfig);
    internal T FromDocumentHelper(Document document, DynamoDBFlatConfig flatConfig);
    public sealed virtual IEnumerable`1<T> FromDocuments(IEnumerable`1<Document> documents);
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DataModel.DynamoDBContext/<FromDocuments>d__63`1")]
[ObsoleteAttribute("Use the FromDocuments overload that takes FromDocumentConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to FromDocuments.")]
public sealed virtual IEnumerable`1<T> FromDocuments(IEnumerable`1<Document> documents, DynamoDBOperationConfig operationConfig);
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DataModel.DynamoDBContext/<FromDocuments>d__64`1")]
public sealed virtual IEnumerable`1<T> FromDocuments(IEnumerable`1<Document> documents, FromDocumentConfig fromDocumentConfig);
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DataModel.DynamoDBContext/<FromDocumentsHelper>d__65`1")]
internal IEnumerable`1<T> FromDocumentsHelper(IEnumerable`1<Document> documents, DynamoDBFlatConfig flatConfig);
    private void DeleteHelper(object hashKey, object rangeKey, DynamoDBFlatConfig flatConfig);
    private Task DeleteHelperAsync(object hashKey, object rangeKey, DynamoDBFlatConfig flatConfig, CancellationToken cancellationToken);
    private void DeleteHelper(T value, DynamoDBFlatConfig flatConfig);
    private Task DeleteHelperAsync(T value, DynamoDBFlatConfig flatConfig, CancellationToken cancellationToken);
    internal static void SetNewVersion(ItemStorage storage);
    private static void IncrementVersion(Type memberType, Primitive& version);
    private static Document CreateExpectedDocumentForVersion(ItemStorage storage);
    internal static Expression CreateConditionExpressionForVersion(ItemStorage storage, AttributeConversionConfig conversionConfig);
    private Table GetTargetTableInternal(DynamoDBFlatConfig flatConfig);
    internal Table GetTargetTable(ItemStorageConfig storageConfig, DynamoDBFlatConfig flatConfig, DynamoDBConsumer consumer);
    internal Table GetUnconfiguredTable(string tableName, bool disableFetchingTableMetadata);
    internal void StoreUnconfiguredTable(string tableName, Table tableToStore);
    internal static string GetTableName(string baseTableName, DynamoDBFlatConfig flatConfig);
    private static void ValidateConfigAgainstTable(ItemStorageConfig config, Table table);
    private static void CompareKeys(ItemStorageConfig config, Table table, List`1<string> attributes, List`1<string> properties, string keyType);
    private static bool ShouldSave(DynamoDBEntry entry, bool ignoreNullValues);
    private T DocumentToObject(ItemStorage storage, DynamoDBFlatConfig flatConfig);
    private object DocumentToObject(Type objectType, ItemStorage storage, DynamoDBFlatConfig flatConfig);
    private void PopulateInstance(ItemStorage storage, object instance, DynamoDBFlatConfig flatConfig);
    private ItemStorage ObjectToItemStorage(T toStore, bool keysOnly, DynamoDBFlatConfig flatConfig);
    private ItemStorage ObjectToItemStorage(object toStore, Type objectType, bool keysOnly, DynamoDBFlatConfig flatConfig);
    internal ItemStorage ObjectToItemStorageHelper(object toStore, ItemStorageConfig config, DynamoDBFlatConfig flatConfig, bool keysOnly, bool ignoreNullValues);
    private void PopulateItemStorage(object toStore, ItemStorage storage, DynamoDBFlatConfig flatConfig, bool keysOnly, bool ignoreNullValues);
    private object FromDynamoDBEntry(SimplePropertyStorage propertyStorage, DynamoDBEntry entry, DynamoDBFlatConfig flatConfig);
    private bool TryFromList(Type targetType, DynamoDBList list, DynamoDBFlatConfig flatConfig, Object& output);
    private bool TryFromListToIList(Type targetType, DynamoDBList list, DynamoDBFlatConfig flatConfig, Object& output);
    private bool TryFromListToArray(Type targetType, DynamoDBList list, DynamoDBFlatConfig flatConfig, Object& output);
    private bool TryFromMap(Type targetType, Document map, DynamoDBFlatConfig flatConfig, Object& output);
    internal DynamoDBEntry ToDynamoDBEntry(SimplePropertyStorage propertyStorage, object value, DynamoDBFlatConfig flatConfig);
    private DynamoDBEntry ToDynamoDBEntry(SimplePropertyStorage propertyStorage, object value, DynamoDBFlatConfig flatConfig, bool canReturnScalarInsteadOfList);
    private bool TryToMap(object value, Type type, DynamoDBFlatConfig flatConfig, Document& output);
    private bool TryToList(object value, Type type, DynamoDBFlatConfig flatConfig, DynamoDBList& output);
    private bool TryToScalar(object value, Type type, DynamoDBFlatConfig flatConfig, DynamoDBEntry& entry);
    private static bool IsSupportedDictionaryType(Type type, Type& valueType);
    private static bool IsSupportedDictionaryType(Type type, Type& keyType, Type& valueType);
    private object DeserializeFromDocument(Document document, Type targetType, DynamoDBFlatConfig flatConfig);
    private Document SerializeToDocument(object value, Type type, DynamoDBFlatConfig flatConfig);
    private static bool TrySetValue(object instance, MemberInfo member, object value);
    private static bool TryGetValue(object instance, MemberInfo member, Object& value);
    private ScanFilter ComposeScanFilter(IEnumerable`1<ScanCondition> conditions, ItemStorageConfig storageConfig, DynamoDBFlatConfig flatConfig);
    private QueryFilter ComposeQueryFilter(DynamoDBFlatConfig currentConfig, object hashKeyValue, IEnumerable`1<QueryCondition> conditions, ItemStorageConfig storageConfig, List`1& indexNames);
    private QueryFilter ComposeQueryFilterHelper(DynamoDBFlatConfig currentConfig, Document hashKey, IEnumerable`1<QueryCondition> conditions, ItemStorageConfig storageConfig, List`1& indexNames);
    private List`1<AttributeValue> ConvertConditionValues(Object[] conditionValues, PropertyStorage conditionProperty, DynamoDBFlatConfig flatConfig, bool canReturnScalarInsteadOfList);
    private static string GetQueryIndexName(DynamoDBFlatConfig flatConfig, List`1<string> indexNames);
    private static List`1<QueryCondition> CreateQueryConditions(DynamoDBFlatConfig flatConfig, QueryOperator op, IEnumerable`1<object> values, ItemStorageConfig storageConfig);
    private DynamoDBEntry ValueToDynamoDBEntry(PropertyStorage propertyStorage, object value, DynamoDBFlatConfig flatConfig);
    private static void ValidateKey(Key key, ItemStorageConfig storageConfig);
    internal Key MakeKey(object hashKey, object rangeKey, ItemStorageConfig storageConfig, DynamoDBFlatConfig flatConfig);
    internal Key MakeKey(T keyObject, ItemStorageConfig storageConfig, DynamoDBFlatConfig flatConfig);
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DataModel.DynamoDBContext/<FromSearch>d__119`1")]
private IEnumerable`1<T> FromSearch(ContextSearch cs);
    private ContextSearch ConvertScan(IEnumerable`1<ScanCondition> conditions, DynamoDBOperationConfig operationConfig);
    private ContextSearch ConvertFromScan(ScanOperationConfig scanConfig, DynamoDBOperationConfig operationConfig);
    private ContextSearch ConvertFromQuery(QueryOperationConfig queryConfig, DynamoDBOperationConfig operationConfig);
    private ContextSearch ConvertQueryByValue(object hashKeyValue, QueryOperator op, IEnumerable`1<object> values, DynamoDBOperationConfig operationConfig);
    private ContextSearch ConvertQueryByValue(object hashKeyValue, IEnumerable`1<QueryCondition> conditions, DynamoDBOperationConfig operationConfig, ItemStorageConfig storageConfig);
    private ContextSearch ConvertQueryHelper(DynamoDBFlatConfig currentConfig, ItemStorageConfig storageConfig, QueryFilter filter, List`1<string> indexNames);
    private AsyncSearch`1<T> FromSearchAsync(ContextSearch contextSearch);
    public sealed virtual Task SaveAsync(T value, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the SaveAsync overload that takes SaveConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to SaveAsync.")]
public sealed virtual Task SaveAsync(T value, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task SaveAsync(T value, SaveConfig saveConfig, CancellationToken cancellationToken);
    public sealed virtual Task SaveAsync(Type valueType, object value, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the SaveAsync overload that takes SaveConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to SaveAsync.")]
public sealed virtual Task SaveAsync(Type valueType, object value, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task SaveAsync(Type valueType, object value, SaveConfig saveConfig, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(object hashKey, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the LoadAsync overload that takes LoadConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to LoadAsync.")]
public sealed virtual Task`1<T> LoadAsync(object hashKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(object hashKey, LoadConfig loadConfig, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(object hashKey, object rangeKey, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the LoadAsync overload that takes LoadConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to LoadAsync.")]
public sealed virtual Task`1<T> LoadAsync(object hashKey, object rangeKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(object hashKey, object rangeKey, LoadConfig loadConfig, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(T keyObject, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the LoadAsync overload that takes LoadConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to LoadAsync.")]
public sealed virtual Task`1<T> LoadAsync(T keyObject, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task`1<T> LoadAsync(T keyObject, LoadConfig loadConfig, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(T value, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the DeleteAsync overload that takes DeleteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to DeleteAsync.")]
public sealed virtual Task DeleteAsync(T value, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(T value, DeleteConfig deleteConfig, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(object hashKey, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the DeleteAsync overload that takes DeleteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to DeleteAsync.")]
public sealed virtual Task DeleteAsync(object hashKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(object hashKey, DeleteConfig deleteConfig, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(object hashKey, object rangeKey, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the DeleteAsync overload that takes DeleteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to DeleteAsync.")]
public sealed virtual Task DeleteAsync(object hashKey, object rangeKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(object hashKey, object rangeKey, DeleteConfig deleteConfig, CancellationToken cancellationToken);
    public Task ExecuteBatchGetAsync(BatchGet[] batches);
    public sealed virtual Task ExecuteBatchGetAsync(BatchGet[] batches, CancellationToken cancellationToken);
    public sealed virtual Task ExecuteBatchWriteAsync(BatchWrite[] batches, CancellationToken cancellationToken);
    public sealed virtual Task ExecuteTransactGetAsync(TransactGet[] transactionParts, CancellationToken cancellationToken);
    public sealed virtual Task ExecuteTransactWriteAsync(TransactWrite[] transactionParts, CancellationToken cancellationToken);
    public sealed virtual AsyncSearch`1<T> ScanAsync(IEnumerable`1<ScanCondition> conditions);
    [ObsoleteAttribute("Use the ScanAsync overload that takes ScanConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to ScanAsync.")]
public sealed virtual AsyncSearch`1<T> ScanAsync(IEnumerable`1<ScanCondition> conditions, DynamoDBOperationConfig operationConfig);
    public sealed virtual AsyncSearch`1<T> ScanAsync(IEnumerable`1<ScanCondition> conditions, ScanConfig scanConfig);
    public sealed virtual AsyncSearch`1<T> FromScanAsync(ScanOperationConfig scanConfig);
    [ObsoleteAttribute("Use the FromScanAsync overload that takes ScanConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to FromScanAsync.")]
public sealed virtual AsyncSearch`1<T> FromScanAsync(ScanOperationConfig scanConfig, DynamoDBOperationConfig operationConfig);
    public sealed virtual AsyncSearch`1<T> FromScanAsync(ScanOperationConfig scanConfig, FromScanConfig fromScanConfig);
    public sealed virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue);
    [ObsoleteAttribute("Use the QueryAsync overload that takes QueryConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to QueryAsync.")]
public sealed virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, DynamoDBOperationConfig operationConfig);
    public sealed virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, QueryConfig queryConfig);
    public sealed virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, QueryOperator op, IEnumerable`1<object> values);
    [ObsoleteAttribute("Use the QueryAsync overload that takes QueryConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to QueryAsync.")]
public sealed virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, QueryOperator op, IEnumerable`1<object> values, DynamoDBOperationConfig operationConfig);
    public sealed virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, QueryOperator op, IEnumerable`1<object> values, QueryConfig queryConfig);
    public sealed virtual AsyncSearch`1<T> FromQueryAsync(QueryOperationConfig queryConfig);
    [ObsoleteAttribute("Use the FromQueryAsync overload that takes QueryConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to FromQueryAsync.")]
public sealed virtual AsyncSearch`1<T> FromQueryAsync(QueryOperationConfig queryConfig, DynamoDBOperationConfig operationConfig);
    public sealed virtual AsyncSearch`1<T> FromQueryAsync(QueryOperationConfig queryConfig, FromQueryConfig fromQueryConfig);
    public sealed virtual Table GetTargetTable();
    [ObsoleteAttribute("Use the GetTargetTable overload that takes GetTargetTableConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to GetTargetTable.")]
public sealed virtual Table GetTargetTable(DynamoDBOperationConfig operationConfig);
    public sealed virtual Table GetTargetTable(GetTargetTableConfig getTargetTableConfig);
}
public class Amazon.DynamoDBv2.DataModel.DynamoDBContextBuilder : object {
    private DynamoDBContextConfig _config;
    private Func`1<IAmazonDynamoDB> _clientFactory;
    public sealed virtual IDynamoDBContextBuilder ConfigureContext(Action`1<DynamoDBContextConfig> configure);
    public sealed virtual IDynamoDBContextBuilder WithDynamoDBClient(Func`1<IAmazonDynamoDB> factory);
    public sealed virtual DynamoDBContext Build();
}
public class Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipVersionCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MetadataCachingMode> <MetadataCachingMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreNullValues>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsEmptyStringValueEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableFetchingTableMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Nullable`1<bool> SkipVersionCheck { get; public set; }
    public string TableNamePrefix { get; public set; }
    public Nullable`1<MetadataCachingMode> MetadataCachingMode { get; public set; }
    public Nullable`1<bool> IgnoreNullValues { get; public set; }
    public Nullable`1<bool> IsEmptyStringValueEnabled { get; public set; }
    public DynamoDBEntryConversion Conversion { get; public set; }
    public Nullable`1<bool> DisableFetchingTableMetadata { get; public set; }
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SkipVersionCheck();
    [CompilerGeneratedAttribute]
public void set_SkipVersionCheck(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_TableNamePrefix();
    [CompilerGeneratedAttribute]
public void set_TableNamePrefix(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<MetadataCachingMode> get_MetadataCachingMode();
    [CompilerGeneratedAttribute]
public void set_MetadataCachingMode(Nullable`1<MetadataCachingMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreNullValues();
    [CompilerGeneratedAttribute]
public void set_IgnoreNullValues(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsEmptyStringValueEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEmptyStringValueEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableFetchingTableMetadata();
    [CompilerGeneratedAttribute]
public void set_DisableFetchingTableMetadata(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
}
internal class Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig : object {
    public static string DefaultIndexName;
    private static DynamoDBOperationConfig _emptyOperationConfig;
    private static DynamoDBContextConfig _emptyContextConfig;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipVersionCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MetadataCachingMode> <MetadataCachingMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreNullValues>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEmptyStringValueEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OverrideTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BackwardQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ScanCondition> <QueryFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableFetchingTableMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RetrieveDateTimeInUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private OperationState <State>k__BackingField;
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Nullable`1<bool> SkipVersionCheck { get; public set; }
    public string TableNamePrefix { get; public set; }
    public Nullable`1<MetadataCachingMode> MetadataCachingMode { get; public set; }
    public Nullable`1<bool> IgnoreNullValues { get; public set; }
    public bool IsEmptyStringValueEnabled { get; public set; }
    public string OverrideTableName { get; public set; }
    public Nullable`1<bool> BackwardQuery { get; public set; }
    public string IndexName { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    public List`1<ScanCondition> QueryFilter { get; public set; }
    public DynamoDBEntryConversion Conversion { get; public set; }
    public bool DisableFetchingTableMetadata { get; public set; }
    public bool RetrieveDateTimeInUtc { get; public set; }
    internal bool IsIndexOperation { get; }
    internal OperationState State { get; private set; }
    public DynamoDBFlatConfig(DynamoDBOperationConfig operationConfig, DynamoDBContextConfig contextConfig);
    private static DynamoDBFlatConfig();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SkipVersionCheck();
    [CompilerGeneratedAttribute]
public void set_SkipVersionCheck(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_TableNamePrefix();
    [CompilerGeneratedAttribute]
public void set_TableNamePrefix(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<MetadataCachingMode> get_MetadataCachingMode();
    [CompilerGeneratedAttribute]
public void set_MetadataCachingMode(Nullable`1<MetadataCachingMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreNullValues();
    [CompilerGeneratedAttribute]
public void set_IgnoreNullValues(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public bool get_IsEmptyStringValueEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEmptyStringValueEnabled(bool value);
    [CompilerGeneratedAttribute]
public string get_OverrideTableName();
    [CompilerGeneratedAttribute]
public void set_OverrideTableName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BackwardQuery();
    [CompilerGeneratedAttribute]
public void set_BackwardQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
    [CompilerGeneratedAttribute]
public List`1<ScanCondition> get_QueryFilter();
    [CompilerGeneratedAttribute]
public void set_QueryFilter(List`1<ScanCondition> value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
    [CompilerGeneratedAttribute]
public bool get_DisableFetchingTableMetadata();
    [CompilerGeneratedAttribute]
public void set_DisableFetchingTableMetadata(bool value);
    [CompilerGeneratedAttribute]
public bool get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(bool value);
    internal bool get_IsIndexOperation();
    [CompilerGeneratedAttribute]
internal OperationState get_State();
    [CompilerGeneratedAttribute]
private void set_State(OperationState value);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexHashKeyAttribute : DynamoDBHashKeyAttribute {
    [CompilerGeneratedAttribute]
private String[] <IndexNames>k__BackingField;
    public String[] IndexNames { get; public set; }
    public DynamoDBGlobalSecondaryIndexHashKeyAttribute(string indexName);
    public DynamoDBGlobalSecondaryIndexHashKeyAttribute(String[] indexNames);
    [CompilerGeneratedAttribute]
public String[] get_IndexNames();
    [CompilerGeneratedAttribute]
public void set_IndexNames(String[] value);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexRangeKeyAttribute : DynamoDBRangeKeyAttribute {
    [CompilerGeneratedAttribute]
private String[] <IndexNames>k__BackingField;
    public String[] IndexNames { get; public set; }
    public DynamoDBGlobalSecondaryIndexRangeKeyAttribute(string indexName);
    public DynamoDBGlobalSecondaryIndexRangeKeyAttribute(String[] indexNames);
    [CompilerGeneratedAttribute]
public String[] get_IndexNames();
    [CompilerGeneratedAttribute]
public void set_IndexNames(String[] value);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBHashKeyAttribute : DynamoDBPropertyAttribute {
    public DynamoDBHashKeyAttribute(string attributeName);
    public DynamoDBHashKeyAttribute(Type converter);
    public DynamoDBHashKeyAttribute(string attributeName, Type converter);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBIgnoreAttribute : DynamoDBAttribute {
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBLocalSecondaryIndexRangeKeyAttribute : DynamoDBPropertyAttribute {
    [CompilerGeneratedAttribute]
private String[] <IndexNames>k__BackingField;
    public String[] IndexNames { get; public set; }
    public DynamoDBLocalSecondaryIndexRangeKeyAttribute(string indexName);
    public DynamoDBLocalSecondaryIndexRangeKeyAttribute(String[] indexNames);
    [CompilerGeneratedAttribute]
public String[] get_IndexNames();
    [CompilerGeneratedAttribute]
public void set_IndexNames(String[] value);
}
public class Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipVersionCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OverrideTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreNullValues>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsEmptyStringValueEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BackwardQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ScanCondition> <QueryFilter>k__BackingField;
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Nullable`1<bool> SkipVersionCheck { get; public set; }
    public string OverrideTableName { get; public set; }
    public string TableNamePrefix { get; public set; }
    public Nullable`1<bool> IgnoreNullValues { get; public set; }
    public Nullable`1<bool> IsEmptyStringValueEnabled { get; public set; }
    public DynamoDBEntryConversion Conversion { get; public set; }
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    public Nullable`1<bool> BackwardQuery { get; public set; }
    public string IndexName { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    public List`1<ScanCondition> QueryFilter { get; public set; }
    internal bool IsIndexOperation { get; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SkipVersionCheck();
    [CompilerGeneratedAttribute]
public void set_SkipVersionCheck(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_OverrideTableName();
    [CompilerGeneratedAttribute]
public void set_OverrideTableName(string value);
    [CompilerGeneratedAttribute]
public string get_TableNamePrefix();
    [CompilerGeneratedAttribute]
public void set_TableNamePrefix(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreNullValues();
    [CompilerGeneratedAttribute]
public void set_IgnoreNullValues(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsEmptyStringValueEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEmptyStringValueEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BackwardQuery();
    [CompilerGeneratedAttribute]
public void set_BackwardQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
    [CompilerGeneratedAttribute]
public List`1<ScanCondition> get_QueryFilter();
    [CompilerGeneratedAttribute]
public void set_QueryFilter(List`1<ScanCondition> value);
    internal bool get_IsIndexOperation();
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBPropertyAttribute : DynamoDBRenamableAttribute {
    [CompilerGeneratedAttribute]
private Type <Converter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StoreAsEpoch>k__BackingField;
    public Type Converter { get; public set; }
    public bool StoreAsEpoch { get; public set; }
    public DynamoDBPropertyAttribute(string attributeName);
    public DynamoDBPropertyAttribute(Type converter);
    public DynamoDBPropertyAttribute(bool storeAsEpoch);
    public DynamoDBPropertyAttribute(string attributeName, Type converter);
    public DynamoDBPropertyAttribute(string attributeName, bool storeAsEpoch);
    [CompilerGeneratedAttribute]
public Type get_Converter();
    [CompilerGeneratedAttribute]
public void set_Converter(Type value);
    [CompilerGeneratedAttribute]
public bool get_StoreAsEpoch();
    [CompilerGeneratedAttribute]
public void set_StoreAsEpoch(bool value);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBRangeKeyAttribute : DynamoDBPropertyAttribute {
    public DynamoDBRangeKeyAttribute(string attributeName);
    public DynamoDBRangeKeyAttribute(Type converter);
    public DynamoDBRangeKeyAttribute(string attributeName, Type converter);
}
[AttributeUsageAttribute("384")]
public abstract class Amazon.DynamoDBv2.DataModel.DynamoDBRenamableAttribute : DynamoDBAttribute {
    [CompilerGeneratedAttribute]
private string <AttributeName>k__BackingField;
    public string AttributeName { get; public set; }
    protected DynamoDBRenamableAttribute(string attributeName);
    [CompilerGeneratedAttribute]
public string get_AttributeName();
    [CompilerGeneratedAttribute]
public void set_AttributeName(string value);
}
[AttributeUsageAttribute("12")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBTableAttribute : DynamoDBAttribute {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LowerCamelCaseProperties>k__BackingField;
    public string TableName { get; public set; }
    public bool LowerCamelCaseProperties { get; public set; }
    public DynamoDBTableAttribute(string tableName);
    public DynamoDBTableAttribute(string tableName, bool lowerCamelCaseProperties);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public bool get_LowerCamelCaseProperties();
    [CompilerGeneratedAttribute]
public void set_LowerCamelCaseProperties(bool value);
}
[AttributeUsageAttribute("384")]
public class Amazon.DynamoDBv2.DataModel.DynamoDBVersionAttribute : DynamoDBRenamableAttribute {
    public DynamoDBVersionAttribute(string attributeName);
}
public class Amazon.DynamoDBv2.DataModel.FromDocumentConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
public class Amazon.DynamoDBv2.DataModel.FromQueryConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
public class Amazon.DynamoDBv2.DataModel.FromScanConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
public class Amazon.DynamoDBv2.DataModel.GetTargetTableConfig : BaseOperationConfig {
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
internal class Amazon.DynamoDBv2.DataModel.GSIConfig : object {
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HashKeyPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RangeKeyPropertyName>k__BackingField;
    public string IndexName { get; public set; }
    public string HashKeyPropertyName { get; public set; }
    public string RangeKeyPropertyName { get; public set; }
    public GSIConfig(string indexName);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public string get_HashKeyPropertyName();
    [CompilerGeneratedAttribute]
public void set_HashKeyPropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_RangeKeyPropertyName();
    [CompilerGeneratedAttribute]
public void set_RangeKeyPropertyName(string value);
}
public interface Amazon.DynamoDBv2.DataModel.IDynamoDBContext {
    public abstract virtual void RegisterTableDefinition(Table table);
    public abstract virtual Document ToDocument(T value);
    [ObsoleteAttribute("Use the ToDocument overload that takes ToDocumentConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to ToDocument.")]
public abstract virtual Document ToDocument(T value, DynamoDBOperationConfig operationConfig);
    public abstract virtual Document ToDocument(T value, ToDocumentConfig toDocumentConfig);
    public abstract virtual T FromDocument(Document document);
    [ObsoleteAttribute("Use the FromDocument overload that takes FromDocumentConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to FromDocument.")]
public abstract virtual T FromDocument(Document document, DynamoDBOperationConfig operationConfig);
    public abstract virtual T FromDocument(Document document, FromDocumentConfig fromDocumentConfig);
    public abstract virtual IEnumerable`1<T> FromDocuments(IEnumerable`1<Document> documents);
    [ObsoleteAttribute("Use the FromDocuments overload that takes FromDocumentConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to FromDocuments.")]
public abstract virtual IEnumerable`1<T> FromDocuments(IEnumerable`1<Document> documents, DynamoDBOperationConfig operationConfig);
    public abstract virtual IEnumerable`1<T> FromDocuments(IEnumerable`1<Document> documents, FromDocumentConfig fromDocumentConfig);
    public abstract virtual BatchGet`1<T> CreateBatchGet();
    [ObsoleteAttribute("Use the CreateBatchGet overload that takes BatchGetConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to BatchGet.")]
public abstract virtual BatchGet`1<T> CreateBatchGet(DynamoDBOperationConfig operationConfig);
    public abstract virtual BatchGet`1<T> CreateBatchGet(BatchGetConfig batchGetConfig);
    public abstract virtual MultiTableBatchGet CreateMultiTableBatchGet(BatchGet[] batches);
    public abstract virtual BatchWrite`1<T> CreateBatchWrite();
    [ObsoleteAttribute("Use the CreateBatchWrite overload that takes BatchWriteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to BatchWrite.")]
public abstract virtual BatchWrite`1<T> CreateBatchWrite(DynamoDBOperationConfig operationConfig);
    public abstract virtual BatchWrite`1<object> CreateBatchWrite(Type valuesType);
    [ObsoleteAttribute("Use the CreateBatchWrite overload that takes BatchWriteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to BatchWrite.")]
public abstract virtual BatchWrite`1<object> CreateBatchWrite(Type valuesType, DynamoDBOperationConfig operationConfig);
    public abstract virtual BatchWrite`1<T> CreateBatchWrite(BatchWriteConfig batchWriteConfig);
    public abstract virtual BatchWrite`1<object> CreateBatchWrite(Type valuesType, BatchWriteConfig batchWriteConfig);
    public abstract virtual MultiTableBatchWrite CreateMultiTableBatchWrite(BatchWrite[] batches);
    public abstract virtual TransactGet`1<T> CreateTransactGet();
    [ObsoleteAttribute("Use the CreateTransactGet overload that takes TransactGetConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to BatchGet.")]
public abstract virtual TransactGet`1<T> CreateTransactGet(DynamoDBOperationConfig operationConfig);
    public abstract virtual TransactGet`1<T> CreateTransactGet(TransactGetConfig transactGetConfig);
    public abstract virtual MultiTableTransactGet CreateMultiTableTransactGet(TransactGet[] transactionParts);
    public abstract virtual TransactWrite`1<T> CreateTransactWrite();
    [ObsoleteAttribute("Use the CreateTransactWrite overload that takes TransactWriteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to CreateTransactWrite.")]
public abstract virtual TransactWrite`1<T> CreateTransactWrite(DynamoDBOperationConfig operationConfig);
    public abstract virtual TransactWrite`1<T> CreateTransactWrite(TransactWriteConfig transactWriteConfig);
    public abstract virtual MultiTableTransactWrite CreateMultiTableTransactWrite(TransactWrite[] transactionParts);
    public abstract virtual Task SaveAsync(T value, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the SaveAsync overload that takes SaveConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to SaveAsync.")]
public abstract virtual Task SaveAsync(T value, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task SaveAsync(T value, SaveConfig saveConfig, CancellationToken cancellationToken);
    public abstract virtual Task SaveAsync(Type valueType, object value, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the SaveAsync overload that takes SaveConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to SaveAsync.")]
public abstract virtual Task SaveAsync(Type valueType, object value, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task SaveAsync(Type valueType, object value, SaveConfig saveConfig, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(object hashKey, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the LoadAsync overload that takes LoadConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to LoadAsync.")]
public abstract virtual Task`1<T> LoadAsync(object hashKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(object hashKey, LoadConfig loadConfig, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(object hashKey, object rangeKey, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the LoadAsync overload that takes LoadConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to LoadAsync.")]
public abstract virtual Task`1<T> LoadAsync(object hashKey, object rangeKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(object hashKey, object rangeKey, LoadConfig loadConfig, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(T keyObject, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the LoadAsync overload that takes LoadConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to LoadAsync.")]
public abstract virtual Task`1<T> LoadAsync(T keyObject, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> LoadAsync(T keyObject, LoadConfig loadConfig, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(T value, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the DeleteAsync overload that takes DeleteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to DeleteAsync.")]
public abstract virtual Task DeleteAsync(T value, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(T value, DeleteConfig deleteConfig, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(object hashKey, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the DeleteAsync overload that takes DeleteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to DeleteAsync.")]
public abstract virtual Task DeleteAsync(object hashKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(object hashKey, DeleteConfig deleteConfig, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(object hashKey, object rangeKey, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use the DeleteAsync overload that takes DeleteConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to DeleteAsync.")]
public abstract virtual Task DeleteAsync(object hashKey, object rangeKey, DynamoDBOperationConfig operationConfig, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(object hashKey, object rangeKey, DeleteConfig deleteConfig, CancellationToken cancellationToken);
    public abstract virtual Task ExecuteBatchGetAsync(BatchGet[] batches, CancellationToken cancellationToken);
    public abstract virtual Task ExecuteBatchWriteAsync(BatchWrite[] batches, CancellationToken cancellationToken);
    public abstract virtual Task ExecuteTransactGetAsync(TransactGet[] transactionParts, CancellationToken cancellationToken);
    public abstract virtual Task ExecuteTransactWriteAsync(TransactWrite[] transactionParts, CancellationToken cancellationToken);
    public abstract virtual AsyncSearch`1<T> ScanAsync(IEnumerable`1<ScanCondition> conditions);
    [ObsoleteAttribute("Use the ScanAsync overload that takes ScanConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to ScanAsync.")]
public abstract virtual AsyncSearch`1<T> ScanAsync(IEnumerable`1<ScanCondition> conditions, DynamoDBOperationConfig operationConfig);
    public abstract virtual AsyncSearch`1<T> ScanAsync(IEnumerable`1<ScanCondition> conditions, ScanConfig scanConfig);
    public abstract virtual AsyncSearch`1<T> FromScanAsync(ScanOperationConfig scanConfig);
    [ObsoleteAttribute("Use the FromScanAsync overload that takes ScanConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to FromScanAsync.")]
public abstract virtual AsyncSearch`1<T> FromScanAsync(ScanOperationConfig scanConfig, DynamoDBOperationConfig operationConfig);
    public abstract virtual AsyncSearch`1<T> FromScanAsync(ScanOperationConfig scanConfig, FromScanConfig fromScanConfig);
    public abstract virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue);
    [ObsoleteAttribute("Use the QueryAsync overload that takes QueryConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to QueryAsync.")]
public abstract virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, DynamoDBOperationConfig operationConfig);
    public abstract virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, QueryConfig queryConfig);
    public abstract virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, QueryOperator op, IEnumerable`1<object> values);
    [ObsoleteAttribute("Use the QueryAsync overload that takes QueryConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to QueryAsync.")]
public abstract virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, QueryOperator op, IEnumerable`1<object> values, DynamoDBOperationConfig operationConfig);
    public abstract virtual AsyncSearch`1<T> QueryAsync(object hashKeyValue, QueryOperator op, IEnumerable`1<object> values, QueryConfig queryConfig);
    public abstract virtual AsyncSearch`1<T> FromQueryAsync(QueryOperationConfig queryConfig);
    [ObsoleteAttribute("Use the FromQueryAsync overload that takes QueryConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to FromQueryAsync.")]
public abstract virtual AsyncSearch`1<T> FromQueryAsync(QueryOperationConfig queryConfig, DynamoDBOperationConfig operationConfig);
    public abstract virtual AsyncSearch`1<T> FromQueryAsync(QueryOperationConfig queryConfig, FromQueryConfig fromQueryConfig);
    public abstract virtual Table GetTargetTable();
    [ObsoleteAttribute("Use the GetTargetTable overload that takes GetTargetTableConfig instead, since DynamoDBOperationConfig contains properties that are not applicable to GetTargetTable.")]
public abstract virtual Table GetTargetTable(DynamoDBOperationConfig operationConfig);
    public abstract virtual Table GetTargetTable(GetTargetTableConfig getTargetTableConfig);
}
public interface Amazon.DynamoDBv2.DataModel.IDynamoDBContextBuilder {
    public abstract virtual IDynamoDBContextBuilder WithDynamoDBClient(Func`1<IAmazonDynamoDB> factory);
    public abstract virtual IDynamoDBContextBuilder ConfigureContext(Action`1<DynamoDBContextConfig> configure);
    public abstract virtual DynamoDBContext Build();
}
public interface Amazon.DynamoDBv2.DataModel.IPropertyConverter {
    public abstract virtual DynamoDBEntry ToEntry(object value);
    public abstract virtual object FromEntry(DynamoDBEntry entry);
}
internal class Amazon.DynamoDBv2.DataModel.ItemStorage : object {
    [CompilerGeneratedAttribute]
private Document <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private ItemStorageConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private Primitive <CurrentVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<object> <ConvertedObjects>k__BackingField;
    public Document Document { get; public set; }
    public ItemStorageConfig Config { get; public set; }
    public Primitive CurrentVersion { get; public set; }
    public HashSet`1<object> ConvertedObjects { get; private set; }
    public ItemStorage(ItemStorageConfig storageConfig);
    [CompilerGeneratedAttribute]
public Document get_Document();
    [CompilerGeneratedAttribute]
public void set_Document(Document value);
    [CompilerGeneratedAttribute]
public ItemStorageConfig get_Config();
    [CompilerGeneratedAttribute]
public void set_Config(ItemStorageConfig value);
    [CompilerGeneratedAttribute]
public Primitive get_CurrentVersion();
    [CompilerGeneratedAttribute]
public void set_CurrentVersion(Primitive value);
    [CompilerGeneratedAttribute]
public HashSet`1<object> get_ConvertedObjects();
    [CompilerGeneratedAttribute]
private void set_ConvertedObjects(HashSet`1<object> value);
}
internal class Amazon.DynamoDBv2.DataModel.ItemStorageConfig : StorageConfig {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LowerCamelCaseProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <AttributesToStoreAsEpoch>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <HashKeyPropertyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RangeKeyPropertyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersionPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<string>> <AttributeToIndexesNameMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<string>> <IndexNameToLSIRangePropertiesMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, GSIConfig> <IndexNameToGSIMapping>k__BackingField;
    public string TableName { get; public set; }
    public bool LowerCamelCaseProperties { get; public set; }
    public HashSet`1<string> AttributesToStoreAsEpoch { get; public set; }
    public List`1<string> HashKeyPropertyNames { get; private set; }
    public List`1<string> RangeKeyPropertyNames { get; private set; }
    public List`1<string> AttributesToGet { get; private set; }
    public string VersionPropertyName { get; private set; }
    public bool HasVersion { get; }
    public Dictionary`2<string, List`1<string>> AttributeToIndexesNameMapping { get; public set; }
    public Dictionary`2<string, List`1<string>> IndexNameToLSIRangePropertiesMapping { get; public set; }
    public Dictionary`2<string, GSIConfig> IndexNameToGSIMapping { get; public set; }
    public PropertyStorage VersionPropertyStorage { get; }
    public ItemStorageConfig(Type targetType);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public bool get_LowerCamelCaseProperties();
    [CompilerGeneratedAttribute]
public void set_LowerCamelCaseProperties(bool value);
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_AttributesToStoreAsEpoch();
    [CompilerGeneratedAttribute]
public void set_AttributesToStoreAsEpoch(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_HashKeyPropertyNames();
    [CompilerGeneratedAttribute]
private void set_HashKeyPropertyNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_RangeKeyPropertyNames();
    [CompilerGeneratedAttribute]
private void set_RangeKeyPropertyNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
private void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_VersionPropertyName();
    [CompilerGeneratedAttribute]
private void set_VersionPropertyName(string value);
    public bool get_HasVersion();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, List`1<string>> get_AttributeToIndexesNameMapping();
    [CompilerGeneratedAttribute]
public void set_AttributeToIndexesNameMapping(Dictionary`2<string, List`1<string>> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, List`1<string>> get_IndexNameToLSIRangePropertiesMapping();
    [CompilerGeneratedAttribute]
public void set_IndexNameToLSIRangePropertiesMapping(Dictionary`2<string, List`1<string>> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, GSIConfig> get_IndexNameToGSIMapping();
    [CompilerGeneratedAttribute]
public void set_IndexNameToGSIMapping(Dictionary`2<string, GSIConfig> value);
    public GSIConfig GetGSIConfig(string indexName);
    public string GetCorrectHashKeyProperty(DynamoDBFlatConfig currentConfig, string hashKeyProperty);
    public string GetRangeKeyByIndex(string indexName);
    public PropertyStorage get_VersionPropertyStorage();
    public void Denormalize(DynamoDBContext context);
    private void AddPropertyStorage(PropertyStorage value);
    private void AddLSIConfigs(List`1<string> lsiIndexNames, string propertyName);
    private void AddGSIConfigs(List`1<string> gsiIndexNames, string propertyName, bool isHashKey);
}
internal class Amazon.DynamoDBv2.DataModel.ItemStorageConfigCache : object {
    private Dictionary`2<Type, ConfigTableCache> Cache;
    private DynamoDBContext Context;
    private bool disposedValue;
    private ReaderWriterLockSlim _readerWriterLockSlim;
    public ItemStorageConfigCache(DynamoDBContext context);
    public ItemStorageConfig GetConfig(DynamoDBFlatConfig flatConfig, bool conversionOnly);
    public ItemStorageConfig GetConfig(Type type, DynamoDBFlatConfig flatConfig, bool conversionOnly);
    private static string GetAccurateCase(ItemStorageConfig config, string value);
    private ItemStorageConfig CreateStorageConfig(Type baseType, string actualTableName, DynamoDBFlatConfig flatConfig);
    private static void PopulateConfigFromType(ItemStorageConfig config, Type type);
    private static void PopulateConfigFromTable(ItemStorageConfig config, Table table);
    private static void PopulateConfigFromMappings(ItemStorageConfig config, Dictionary`2<Type, TypeMapping> typeMappings);
    private static PropertyStorage GetProperty(ItemStorageConfig config, string attributeName, bool optional);
    private static void Validate(bool value, string messageFormat, Object[] args);
    private static void ValidateProperty(bool value, string propertyName, string messageFormat, Object[] args);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
public class Amazon.DynamoDBv2.DataModel.LoadConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
public class Amazon.DynamoDBv2.DataModel.MultiTableBatchGet : object {
    private List`1<BatchGet> allBatches;
    public int TotalKeys { get; }
    public MultiTableBatchGet(BatchGet[] batches);
    internal MultiTableBatchGet(BatchGet first, BatchGet[] rest);
    public int get_TotalKeys();
    public void AddBatch(BatchGet batch);
    internal void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.MultiTableBatchGet/<ExecuteHelperAsync>d__7")]
internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite : object {
    private List`1<BatchWrite> allBatches;
    public MultiTableBatchWrite(BatchWrite[] batches);
    internal MultiTableBatchWrite(BatchWrite first, BatchWrite[] rest);
    public void AddBatch(BatchWrite batch);
    internal void ExecuteHelper();
    internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DataModel.MultiTableTransactGet : object {
    private List`1<TransactGet> allTransactionParts;
    public MultiTableTransactGet(TransactGet[] transactionParts);
    internal MultiTableTransactGet(TransactGet first, TransactGet[] rest);
    public void AddTransactionPart(TransactGet transactionPart);
    internal void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.MultiTableTransactGet/<ExecuteHelperAsync>d__5")]
internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DataModel.MultiTableTransactWrite : object {
    private List`1<TransactWrite> allTransactionParts;
    public MultiTableTransactWrite(TransactWrite[] transactionParts);
    internal MultiTableTransactWrite(TransactWrite first, TransactWrite[] rest);
    public void AddTransactionPart(TransactWrite transactionPart);
    internal void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.MultiTableTransactWrite/<ExecuteHelperAsync>d__5")]
internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
internal class Amazon.DynamoDBv2.DataModel.PropertyStorage : SimplePropertyStorage {
    [CompilerGeneratedAttribute]
private bool <IsHashKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRangeKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLSIRangeKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGSIHashKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGSIRangeKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIgnored>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StoreAsEpoch>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IndexNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Index> <Indexes>k__BackingField;
    public bool IsHashKey { get; public set; }
    public bool IsRangeKey { get; public set; }
    public bool IsKey { get; }
    public bool IsVersion { get; public set; }
    public bool IsLSIRangeKey { get; public set; }
    public bool IsGSIHashKey { get; public set; }
    public bool IsGSIRangeKey { get; public set; }
    public bool IsGSIKey { get; }
    public bool IsIgnored { get; public set; }
    public bool StoreAsEpoch { get; public set; }
    public List`1<string> IndexNames { get; public set; }
    public List`1<Index> Indexes { get; private set; }
    public PropertyStorage(MemberInfo member);
    [CompilerGeneratedAttribute]
public bool get_IsHashKey();
    [CompilerGeneratedAttribute]
public void set_IsHashKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsRangeKey();
    [CompilerGeneratedAttribute]
public void set_IsRangeKey(bool value);
    public bool get_IsKey();
    [CompilerGeneratedAttribute]
public bool get_IsVersion();
    [CompilerGeneratedAttribute]
public void set_IsVersion(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsLSIRangeKey();
    [CompilerGeneratedAttribute]
public void set_IsLSIRangeKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsGSIHashKey();
    [CompilerGeneratedAttribute]
public void set_IsGSIHashKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsGSIRangeKey();
    [CompilerGeneratedAttribute]
public void set_IsGSIRangeKey(bool value);
    public bool get_IsGSIKey();
    [CompilerGeneratedAttribute]
public bool get_IsIgnored();
    [CompilerGeneratedAttribute]
public void set_IsIgnored(bool value);
    [CompilerGeneratedAttribute]
public bool get_StoreAsEpoch();
    [CompilerGeneratedAttribute]
public void set_StoreAsEpoch(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_IndexNames();
    [CompilerGeneratedAttribute]
public void set_IndexNames(List`1<string> value);
    public void AddIndex(DynamoDBGlobalSecondaryIndexHashKeyAttribute gsiHashKey);
    public void AddIndex(DynamoDBGlobalSecondaryIndexRangeKeyAttribute gsiRangeKey);
    public void AddIndex(DynamoDBLocalSecondaryIndexRangeKeyAttribute lsiRangeKey);
    public void AddGsiIndex(bool isHashKey, string attributeName, String[] indexNames);
    public void AddLsiIndex(string attributeName, String[] indexNames);
    public void AddIndex(Index index);
    [CompilerGeneratedAttribute]
public List`1<Index> get_Indexes();
    [CompilerGeneratedAttribute]
private void set_Indexes(List`1<Index> value);
    public void Validate(DynamoDBContext context);
}
public class Amazon.DynamoDBv2.DataModel.QueryCondition : object {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryOperator <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <Values>k__BackingField;
    public string PropertyName { get; public set; }
    public QueryOperator Operator { get; public set; }
    public Object[] Values { get; public set; }
    public QueryCondition(string propertyName, QueryOperator op, Object[] values);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public QueryOperator get_Operator();
    [CompilerGeneratedAttribute]
public void set_Operator(QueryOperator value);
    [CompilerGeneratedAttribute]
public Object[] get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(Object[] value);
}
public class Amazon.DynamoDBv2.DataModel.QueryConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BackwardQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ScanCondition> <QueryFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    public Nullable`1<bool> BackwardQuery { get; public set; }
    public string IndexName { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    public List`1<ScanCondition> QueryFilter { get; public set; }
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BackwardQuery();
    [CompilerGeneratedAttribute]
public void set_BackwardQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
    [CompilerGeneratedAttribute]
public List`1<ScanCondition> get_QueryFilter();
    [CompilerGeneratedAttribute]
public void set_QueryFilter(List`1<ScanCondition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
internal class Amazon.DynamoDBv2.DataModel.S3ClientCache : object {
    private AmazonDynamoDBClient ddbClient;
    private Dictionary`2<string, ICoreAmazonS3> clientsByRegion;
    internal S3ClientCache(AmazonDynamoDBClient ddbClient);
    internal void UseClient(ICoreAmazonS3 client, RegionEndpoint region);
    internal ICoreAmazonS3 GetClient(RegionEndpoint region);
}
public class Amazon.DynamoDBv2.DataModel.S3Link : object {
    internal static Dictionary`2<DynamoDBContext, S3ClientCache> Caches;
    private static object cacheLock;
    private S3ClientCache s3ClientCache;
    private LinkInfo linker;
    public string Key { get; public set; }
    public string BucketName { get; public set; }
    public string Region { get; public set; }
    public RegionEndpoint RegionAsEndpoint { get; }
    internal S3Link(S3ClientCache clientCache, string bucketName, string key);
    internal S3Link(S3ClientCache clientCache, string bucketName, string key, string region);
    private S3Link(S3ClientCache clientCache, LinkInfo linker);
    internal S3Link(S3ClientCache clientCache, string json);
    private static S3Link();
    public static S3Link Create(DynamoDBContext context, string bucket, string key, RegionEndpoint region);
    public string get_Key();
    public void set_Key(string value);
    public string get_BucketName();
    public void set_BucketName(string value);
    public string get_Region();
    public void set_Region(string value);
    public RegionEndpoint get_RegionAsEndpoint();
    internal static RegionEndpoint GetRegionFromJSON(string json);
    internal static S3ClientCache CreatClientCacheFromContext(DynamoDBContext context);
    public string GetPreSignedURL(DateTime expiration);
    internal string ToJson();
    public Task UploadFromAsync(string sourcePath, CancellationToken cancellationToken);
    public Task UploadStreamAsync(Stream stream, CancellationToken cancellationToken);
    public Task DownloadToAsync(string downloadPath, CancellationToken cancellationToken);
    public Task`1<Stream> OpenStreamAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DataModel.SaveConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipVersionCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreNullValues>k__BackingField;
    public Nullable`1<bool> SkipVersionCheck { get; public set; }
    public Nullable`1<bool> IgnoreNullValues { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SkipVersionCheck();
    [CompilerGeneratedAttribute]
public void set_SkipVersionCheck(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreNullValues();
    [CompilerGeneratedAttribute]
public void set_IgnoreNullValues(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
public class Amazon.DynamoDBv2.DataModel.ScanCondition : object {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private ScanOperator <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <Values>k__BackingField;
    public string PropertyName { get; public set; }
    public ScanOperator Operator { get; public set; }
    public Object[] Values { get; public set; }
    public ScanCondition(string propertyName, ScanOperator op, Object[] values);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public ScanOperator get_Operator();
    [CompilerGeneratedAttribute]
public void set_Operator(ScanOperator value);
    [CompilerGeneratedAttribute]
public Object[] get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(Object[] value);
}
public class Amazon.DynamoDBv2.DataModel.ScanConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ScanCondition> <QueryFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    public string IndexName { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    public List`1<ScanCondition> QueryFilter { get; public set; }
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
    [CompilerGeneratedAttribute]
public List`1<ScanCondition> get_QueryFilter();
    [CompilerGeneratedAttribute]
public void set_QueryFilter(List`1<ScanCondition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
internal class Amazon.DynamoDBv2.DataModel.SimplePropertyStorage : object {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AttributeName>k__BackingField;
    [CompilerGeneratedAttribute]
private MemberInfo <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <MemberType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ConverterType>k__BackingField;
    [CompilerGeneratedAttribute]
private IPropertyConverter <Converter>k__BackingField;
    public string PropertyName { get; protected set; }
    public string AttributeName { get; public set; }
    public MemberInfo Member { get; protected set; }
    public Type MemberType { get; protected set; }
    public Type ConverterType { get; public set; }
    public IPropertyConverter Converter { get; protected set; }
    public SimplePropertyStorage(MemberInfo member);
    public SimplePropertyStorage(Type memberType);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
protected void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_AttributeName();
    [CompilerGeneratedAttribute]
public void set_AttributeName(string value);
    [CompilerGeneratedAttribute]
public MemberInfo get_Member();
    [CompilerGeneratedAttribute]
protected void set_Member(MemberInfo value);
    [CompilerGeneratedAttribute]
public Type get_MemberType();
    [CompilerGeneratedAttribute]
protected void set_MemberType(Type value);
    [CompilerGeneratedAttribute]
public Type get_ConverterType();
    [CompilerGeneratedAttribute]
public void set_ConverterType(Type value);
    [CompilerGeneratedAttribute]
public IPropertyConverter get_Converter();
    [CompilerGeneratedAttribute]
protected void set_Converter(IPropertyConverter value);
    public virtual string ToString();
}
internal class Amazon.DynamoDBv2.DataModel.StorageConfig : object {
    [CompilerGeneratedAttribute]
private List`1<PropertyStorage> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <TargetType>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, MemberInfo> <TargetTypeMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, PropertyStorage> <PropertyToPropertyStorageMapping>k__BackingField;
    public List`1<PropertyStorage> Properties { get; private set; }
    public Type TargetType { get; private set; }
    public Dictionary`2<string, MemberInfo> TargetTypeMembers { get; private set; }
    private Dictionary`2<string, PropertyStorage> PropertyToPropertyStorageMapping { get; private set; }
    public IEnumerable`1<PropertyStorage> AllPropertyStorage { get; }
    public StorageConfig(Type targetType);
    [CompilerGeneratedAttribute]
public List`1<PropertyStorage> get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(List`1<PropertyStorage> value);
    [CompilerGeneratedAttribute]
public Type get_TargetType();
    [CompilerGeneratedAttribute]
private void set_TargetType(Type value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, MemberInfo> get_TargetTypeMembers();
    [CompilerGeneratedAttribute]
private void set_TargetTypeMembers(Dictionary`2<string, MemberInfo> value);
    [CompilerGeneratedAttribute]
private Dictionary`2<string, PropertyStorage> get_PropertyToPropertyStorageMapping();
    [CompilerGeneratedAttribute]
private void set_PropertyToPropertyStorageMapping(Dictionary`2<string, PropertyStorage> value);
    protected void AddPropertyStorage(string propertyName, PropertyStorage propertyStorage);
    public PropertyStorage GetPropertyStorage(string propertyName);
    public bool TryGetPropertyStorage(string propertyName, PropertyStorage& storage);
    public IEnumerable`1<PropertyStorage> get_AllPropertyStorage();
    public bool FindPropertyByPropertyName(string propertyName, PropertyStorage& propertyStorage);
    public bool FindSinglePropertyByAttributeName(string attributeName, PropertyStorage& propertyStorage);
    private bool FindSingleProperty(Func`2<PropertyStorage, bool> match, string errorMessage, PropertyStorage& propertyStorage);
    private static Dictionary`2<string, MemberInfo> GetMembersDictionary(Type type);
}
public class Amazon.DynamoDBv2.DataModel.ToDocumentConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreNullValues>k__BackingField;
    public Nullable`1<bool> IgnoreNullValues { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreNullValues();
    [CompilerGeneratedAttribute]
public void set_IgnoreNullValues(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
public abstract class Amazon.DynamoDBv2.DataModel.TransactGet : object {
    [CompilerGeneratedAttribute]
private List`1<object> <UntypedResults>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBFlatConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentTransactGet <DocumentTransaction>k__BackingField;
    protected List`1<object> UntypedResults { get; protected set; }
    internal DynamoDBContext Context { get; internal set; }
    internal DynamoDBFlatConfig Config { get; internal set; }
    internal DocumentTransactGet DocumentTransaction { get; internal set; }
    public List`1<object> Results { get; }
    internal TransactGet(DynamoDBContext context, DynamoDBFlatConfig config);
    [CompilerGeneratedAttribute]
protected List`1<object> get_UntypedResults();
    [CompilerGeneratedAttribute]
protected void set_UntypedResults(List`1<object> value);
    [CompilerGeneratedAttribute]
internal DynamoDBContext get_Context();
    [CompilerGeneratedAttribute]
internal void set_Context(DynamoDBContext value);
    [CompilerGeneratedAttribute]
internal DynamoDBFlatConfig get_Config();
    [CompilerGeneratedAttribute]
internal void set_Config(DynamoDBFlatConfig value);
    [CompilerGeneratedAttribute]
internal DocumentTransactGet get_DocumentTransaction();
    [CompilerGeneratedAttribute]
internal void set_DocumentTransaction(DocumentTransactGet value);
    public List`1<object> get_Results();
    protected internal abstract virtual void ExecuteHelper();
    protected internal abstract virtual Task ExecuteHelperAsync(CancellationToken cancellationToken);
    internal abstract virtual void PopulateResults();
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DataModel.TransactGet`1 : TransactGet {
    [CompilerGeneratedAttribute]
private List`1<T> <TypedResults>k__BackingField;
    [CompilerGeneratedAttribute]
private ItemStorageConfig <StorageConfig>k__BackingField;
    public List`1<T> Results { get; }
    protected List`1<T> TypedResults { get; protected set; }
    internal ItemStorageConfig StorageConfig { get; internal set; }
    internal TransactGet`1(DynamoDBContext context, DynamoDBFlatConfig config);
    public List`1<T> get_Results();
    public void AddKey(object hashKey);
    public void AddKey(object hashKey, object rangeKey);
    public void AddKey(T keyObject);
    public void AddKeys(IEnumerable`1<T> keyObjects);
    public MultiTableTransactGet Combine(TransactGet[] otherTransactionParts);
    [CompilerGeneratedAttribute]
protected List`1<T> get_TypedResults();
    [CompilerGeneratedAttribute]
protected void set_TypedResults(List`1<T> value);
    [CompilerGeneratedAttribute]
internal ItemStorageConfig get_StorageConfig();
    [CompilerGeneratedAttribute]
internal void set_StorageConfig(ItemStorageConfig value);
    protected internal virtual void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.TransactGet`1/<ExecuteHelperAsync>d__17")]
protected internal virtual Task ExecuteHelperAsync(CancellationToken cancellationToken);
    internal virtual void PopulateResults();
}
public class Amazon.DynamoDBv2.DataModel.TransactGetConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
public abstract class Amazon.DynamoDBv2.DataModel.TransactWrite : object {
    [CompilerGeneratedAttribute]
private DynamoDBContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBFlatConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentTransactWrite <DocumentTransaction>k__BackingField;
    internal DynamoDBContext Context { get; internal set; }
    internal DynamoDBFlatConfig Config { get; internal set; }
    internal DocumentTransactWrite DocumentTransaction { get; internal set; }
    internal TransactWrite(DynamoDBContext context, DynamoDBFlatConfig config);
    [CompilerGeneratedAttribute]
internal DynamoDBContext get_Context();
    [CompilerGeneratedAttribute]
internal void set_Context(DynamoDBContext value);
    [CompilerGeneratedAttribute]
internal DynamoDBFlatConfig get_Config();
    [CompilerGeneratedAttribute]
internal void set_Config(DynamoDBFlatConfig value);
    [CompilerGeneratedAttribute]
internal DocumentTransactWrite get_DocumentTransaction();
    [CompilerGeneratedAttribute]
internal void set_DocumentTransaction(DocumentTransactWrite value);
    protected internal abstract virtual void ExecuteHelper();
    protected internal abstract virtual Task ExecuteHelperAsync(CancellationToken cancellationToken);
    internal abstract virtual void PopulateObjects();
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DataModel.TransactWrite`1 : TransactWrite {
    private List`1<ObjectWithItemStorage> objectItems;
    [CompilerGeneratedAttribute]
private ItemStorageConfig <StorageConfig>k__BackingField;
    internal ItemStorageConfig StorageConfig { get; internal set; }
    internal TransactWrite`1(DynamoDBContext context, DynamoDBFlatConfig config);
    public MultiTableTransactWrite Combine(TransactWrite[] otherTransactionParts);
    public void AddSaveItems(IEnumerable`1<T> values);
    public void AddSaveItem(T item);
    public void AddSaveItem(object hashKey, Expression updateExpression, Expression conditionExpression);
    public void AddSaveItem(object hashKey, object rangeKey, Expression updateExpression, Expression conditionExpression);
    public void AddDeleteItems(IEnumerable`1<T> values);
    public void AddDeleteItem(T item);
    public void AddDeleteKey(object hashKey);
    public void AddDeleteKey(object hashKey, Expression conditionExpression);
    public void AddDeleteKey(object hashKey, object rangeKey);
    public void AddDeleteKey(object hashKey, object rangeKey, Expression conditionExpression);
    public void AddVersionCheckItem(T item);
    public void AddVersionCheckItems(IEnumerable`1<T> items);
    public void AddVersionCheckKey(object hashKey, object version);
    public void AddVersionCheckKey(object hashKey, object rangeKey, object version);
    [CompilerGeneratedAttribute]
internal ItemStorageConfig get_StorageConfig();
    [CompilerGeneratedAttribute]
internal void set_StorageConfig(ItemStorageConfig value);
    protected internal virtual void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DataModel.TransactWrite`1/<ExecuteHelperAsync>d__22")]
protected internal virtual Task ExecuteHelperAsync(CancellationToken cancellationToken);
    internal virtual void PopulateObjects();
    private bool ShouldUseVersioning();
    private void CheckUseVersioning();
    private Expression CreateConditionExpressionForVersion(ItemStorage storage);
    private void SetNewVersion(ItemStorage storage);
}
public class Amazon.DynamoDBv2.DataModel.TransactWriteConfig : BaseOperationConfig {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreNullValues>k__BackingField;
    public Nullable`1<bool> IgnoreNullValues { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreNullValues();
    [CompilerGeneratedAttribute]
public void set_IgnoreNullValues(Nullable`1<bool> value);
    internal virtual DynamoDBOperationConfig ToDynamoDBOperationConfig();
}
internal static class Amazon.DynamoDBv2.DataModel.Utils : object {
    private static Type[] EmptyTypes;
    private static Type[] primitiveTypesArray;
    public static IEnumerable`1<Type> PrimitiveTypes;
    private static Type[][] validConstructorInputs;
    private static Type[][] validArrayConstructorInputs;
    private static Type[][] validConverterConstructorInputs;
    private static Utils();
    public static bool IsPrimitive(Type type);
    public static bool IsPrimitive();
    public static void ValidatePrimitiveType(Type type);
    public static void ValidatePrimitiveType();
    public static void ValidateVersionType(Type memberType);
    public static Type GetPrimitiveElementType(Type collectionType);
    public static Type GetElementType(Type collectionType);
    public static bool ItemsToCollection(Type targetType, IEnumerable`1<object> items, Object& result);
    private static bool ItemsToIList(Type targetType, IEnumerable`1<object> items, Object& result);
    private static bool ItemsToArray(Type targetType, IEnumerable`1<object> items, Object& result);
    public static DynamoDBTableAttribute GetTableAttribute(Type targetType);
    public static DynamoDBAttribute GetAttribute(Type targetType);
    public static DynamoDBAttribute GetAttribute(MemberInfo targetMemberInfo);
    public static List`1<DynamoDBAttribute> GetAttributes(MemberInfo targetMemberInfo);
    private static DynamoDBAttribute GetSingleDDBAttribute(Object[] attributes);
    private static Object[] GetAttributeObjects(MemberInfo targetMemberInfo);
    public static string ToLowerCamelCase(string value);
    public static object InstantiateConverter(Type objectType, IDynamoDBContext context);
    public static object InstantiateArray(Type objectType, int length);
    public static object Instantiate(Type objectType);
    private static object InstantiateHelper(Type objectType, Type[][] validConstructorInputs, Object[] optionalInput);
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DataModel.Utils/<GetConstructors>d__27")]
private static IEnumerable`1<ConstructorInfo> GetConstructors(Type typeInfo, Type[][] validConstructorInputs);
    public static bool CanInstantiate(Type objectType);
    public static bool CanInstantiateArray(Type objectType);
    public static bool CanInstantiateConverter(Type objectType);
    private static bool CanInstantiateHelper(Type objectType, Type[][] validConstructorInputs);
    public static Type GetType(MemberInfo member);
    public static bool IsReadWrite(MemberInfo member);
    public static bool ImplementsInterface(Type targetType, Type interfaceType);
    private static bool IsValidMemberInfo(MemberInfo member);
    public static List`1<MemberInfo> GetMembersFromType(Type type);
}
internal class Amazon.DynamoDBv2.DateTimeConverterV1 : Converter`1<DateTime> {
    protected virtual bool TryTo(DateTime value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, DateTime& result);
}
internal class Amazon.DynamoDBv2.DateTimeConverterV2 : DateTimeConverterV1 {
}
internal class Amazon.DynamoDBv2.DecimalConverterV1 : Converter`1<decimal> {
    protected virtual bool TryTo(decimal value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Decimal& result);
}
internal class Amazon.DynamoDBv2.DecimalConverterV2 : DecimalConverterV1 {
}
public class Amazon.DynamoDBv2.DestinationStatus : ConstantClass {
    public static DestinationStatus ACTIVE;
    public static DestinationStatus DISABLED;
    public static DestinationStatus DISABLING;
    public static DestinationStatus ENABLE_FAILED;
    public static DestinationStatus ENABLING;
    public static DestinationStatus UPDATING;
    public DestinationStatus(string value);
    private static DestinationStatus();
    public static DestinationStatus FindValue(string value);
    public static DestinationStatus op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.DictionaryConverterV1 : Converter {
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DictionaryConverterV1/<GetTargetTypes>d__0")]
public virtual IEnumerable`1<Type> GetTargetTypes();
    public virtual bool TryTo(object value, Document& d);
}
internal class Amazon.DynamoDBv2.DictionaryConverterV2 : DictionaryConverterV1 {
}
internal static class Amazon.DynamoDBv2.DocumentModel.Common : object {
    private static string AwsVariablePrefix;
    public static void ConvertAttributeUpdatesToUpdateExpression(Dictionary`2<string, AttributeValueUpdate> attributesToUpdates, String& statement, Dictionary`2& expressionAttributeValues, Dictionary`2& expressionAttributes);
    public static void ConvertAttributesToGetToProjectionExpression(QueryRequest request);
    public static void ConvertAttributesToGetToProjectionExpression(ScanRequest request);
    private static string AttributesToGetAsProjectionExpression(List`1<string> attributesToGet, Dictionary`2<string, string> attributeNames);
    private static string GetAttributeReference(string attribute, Dictionary`2<string, string> attributeNames, Int32& attributeCount);
    public static string GetAttributeReference(string attributeName);
    public static string GetAttributeValueReference(string attributeName);
    public static string GetVariableName(Int32& attributeCount);
    public static string GetVariableName(string suffix);
    public static Dictionary`2<string, T> Combine(IDictionary`2<string, T> items1, IDictionary`2<string, T> items2, IEqualityComparer`1<T> valueComparer);
    public static string ToPaginationToken(Dictionary`2<string, AttributeValue> nextKey);
    private static string SerializeClearString(Dictionary`2<string, AttributeValue> nextKey);
    public static Dictionary`2<string, AttributeValue> FromPaginationToken(string token);
    private static Dictionary`2<string, AttributeValue> DeserializeClearString(string token);
    private static Dictionary`2<string, AttributeValue> ReadNextKey(Stream stream);
    private static void WriteNextKey(Dictionary`2<string, AttributeValue> nextKey, TextWriter writer);
}
public enum Amazon.DynamoDBv2.DocumentModel.ConditionalOperatorValues : Enum {
    public int value__;
    public static ConditionalOperatorValues And;
    public static ConditionalOperatorValues Or;
}
public class Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig : object {
    [CompilerGeneratedAttribute]
private Expression <ConditionalExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ExpectedState <ExpectedState>k__BackingField;
    [CompilerGeneratedAttribute]
private Document <Expected>k__BackingField;
    [CompilerGeneratedAttribute]
private ReturnValues <ReturnValues>k__BackingField;
    public Expression ConditionalExpression { get; public set; }
    public ExpectedState ExpectedState { get; public set; }
    public Document Expected { get; public set; }
    public ReturnValues ReturnValues { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Expression get_ConditionalExpression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConditionalExpression(Expression value);
    [CompilerGeneratedAttribute]
public sealed virtual ExpectedState get_ExpectedState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExpectedState(ExpectedState value);
    [CompilerGeneratedAttribute]
public sealed virtual Document get_Expected();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expected(Document value);
    [CompilerGeneratedAttribute]
public ReturnValues get_ReturnValues();
    [CompilerGeneratedAttribute]
public void set_ReturnValues(ReturnValues value);
}
[DefaultMemberAttribute("Item")]
public class Amazon.DynamoDBv2.DocumentModel.Document : DynamoDBEntry {
    private Dictionary`2<string, DynamoDBEntry> originalValues;
    private Dictionary`2<string, DynamoDBEntry> currentValues;
    public DynamoDBEntry Item { get; public set; }
    public ICollection`1<string> Keys { get; }
    public ICollection`1<DynamoDBEntry> Values { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public Document(Dictionary`2<string, DynamoDBEntry> values);
    internal Document(Document source);
    public sealed virtual DynamoDBEntry get_Item(string key);
    public sealed virtual void set_Item(string key, DynamoDBEntry value);
    public bool IsAttributeChanged(string attributeName);
    public bool IsDirty();
    public sealed virtual bool TryGetValue(string attributeName, DynamoDBEntry& entry);
    public bool Contains(string attributeName);
    public Document ForceConversion(DynamoDBEntryConversion conversion);
    internal void CommitChanges();
    internal static DynamoDBEntry EpochSecondsToDateTime(DynamoDBEntry entry, string attributeName);
    internal static DynamoDBEntry DateTimeToEpochSeconds(DynamoDBEntry entry, string attributeName);
    internal static Document FromAttributeMap(Dictionary`2<string, AttributeValue> data, IEnumerable`1<string> epochAttributes);
    internal Dictionary`2<string, AttributeValue> ToAttributeMap(DynamoDBEntryConversion conversion, IEnumerable`1<string> epochAttributes, bool isEmptyStringValueEnabled);
    internal Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap(DynamoDBEntryConversion conversion, IEnumerable`1<string> epochAttributes, bool isEmptyStringValueEnabled);
    internal Dictionary`2<string, AttributeValueUpdate> ToAttributeUpdateMap(DynamoDBEntryConversion conversion, bool changedAttributesOnly, IEnumerable`1<string> epochAttributes, bool isEmptyStringValueEnabled);
    private static void ApplyEpochRules(IEnumerable`1<string> epochAttributes, string attributeName, DynamoDBEntry& entry);
    public string ToJson();
    public string ToJsonPretty();
    public Dictionary`2<string, AttributeValue> ToAttributeMap();
    public Dictionary`2<string, AttributeValue> ToAttributeMap(DynamoDBEntryConversion conversion);
    public Dictionary`2<string, AttributeValue> ToAttributeMap(DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled);
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap();
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap(DynamoDBEntryConversion conversion);
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap(DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled);
    public Dictionary`2<string, AttributeValueUpdate> ToAttributeUpdateMap(bool changedAttributesOnly);
    public Dictionary`2<string, AttributeValueUpdate> ToAttributeUpdateMap(DynamoDBEntryConversion conversion, bool changedAttributesOnly);
    public Dictionary`2<string, AttributeValueUpdate> ToAttributeUpdateMap(DynamoDBEntryConversion conversion, bool changedAttributesOnly, bool isEmptyStringValueEnabled);
    public List`1<string> GetAttributeNames();
    public void DecodeBase64Attributes(String[] attributeNames);
    internal static DynamoDBEntry AttributeValueToDynamoDBEntry(AttributeValue attributeValue);
    private static bool TryToPrimitiveList(AttributeValue attributeValue, PrimitiveList& primitiveList);
    private static bool TryToPrimitive(AttributeValue attributeValue, Primitive& primitive);
    private static bool TryToDynamoDBBool(AttributeValue attributeValue, DynamoDBBool& ddbBool);
    private static bool TryToDynamoDBNull(AttributeValue attributeValue, DynamoDBNull& ddbNull);
    private static bool TryToDynamoDBList(AttributeValue attributeValue, DynamoDBList& list);
    private static bool TryToDocument(AttributeValue attributeValue, Document& document);
    public static Document FromAttributeMap(Dictionary`2<string, AttributeValue> data);
    public static Document FromJson(string json);
    public static IEnumerable`1<Document> FromJsonArray(string jsonText);
    public sealed virtual void Add(string key, DynamoDBEntry value);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual bool Remove(string key);
    public sealed virtual ICollection`1<DynamoDBEntry> get_Values();
    public sealed virtual void Add(KeyValuePair`2<string, DynamoDBEntry> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<string, DynamoDBEntry> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(KeyValuePair`2<string, DynamoDBEntry> item);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, DynamoDBEntry>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    public virtual object Clone();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public class Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet : object {
    [CompilerGeneratedAttribute]
private Table <TargetTable>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Key> <Keys>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Document> <Results>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsistentRead>k__BackingField;
    internal Table TargetTable { get; private set; }
    internal List`1<Key> Keys { get; private set; }
    public List`1<Document> Results { get; internal set; }
    public List`1<string> AttributesToGet { get; public set; }
    public bool ConsistentRead { get; public set; }
    public DocumentBatchGet(Table targetTable);
    [CompilerGeneratedAttribute]
internal Table get_TargetTable();
    [CompilerGeneratedAttribute]
private void set_TargetTable(Table value);
    [CompilerGeneratedAttribute]
internal List`1<Key> get_Keys();
    [CompilerGeneratedAttribute]
private void set_Keys(List`1<Key> value);
    [CompilerGeneratedAttribute]
public List`1<Document> get_Results();
    [CompilerGeneratedAttribute]
internal void set_Results(List`1<Document> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
public void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(bool value);
    public void AddKey(Primitive hashKey);
    public void AddKey(Primitive hashKey, Primitive rangeKey);
    public void AddKey(IDictionary`2<string, DynamoDBEntry> key);
    public MultiTableDocumentBatchGet Combine(DocumentBatchGet otherBatch);
    internal void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet/<ExecuteHelperAsync>d__26")]
internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    internal void AddKey(Document document);
    internal void AddKey(Key key);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite : object {
    [CompilerGeneratedAttribute]
private Table <TargetTable>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Key> <ToDelete>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Document> <ToPut>k__BackingField;
    internal Table TargetTable { get; private set; }
    internal List`1<Key> ToDelete { get; private set; }
    internal List`1<Document> ToPut { get; private set; }
    public DocumentBatchWrite(Table targetTable);
    [CompilerGeneratedAttribute]
internal Table get_TargetTable();
    [CompilerGeneratedAttribute]
private void set_TargetTable(Table value);
    [CompilerGeneratedAttribute]
internal List`1<Key> get_ToDelete();
    [CompilerGeneratedAttribute]
private void set_ToDelete(List`1<Key> value);
    [CompilerGeneratedAttribute]
internal List`1<Document> get_ToPut();
    [CompilerGeneratedAttribute]
private void set_ToPut(List`1<Document> value);
    public void AddKeyToDelete(Primitive hashKey);
    public void AddKeyToDelete(Primitive hashKey, Primitive rangeKey);
    public void AddKeyToDelete(IDictionary`2<string, DynamoDBEntry> key);
    public void AddItemToDelete(Document document);
    public void AddDocumentToPut(Document document);
    public MultiTableDocumentBatchWrite Combine(DocumentBatchWrite otherBatch);
    internal void ExecuteHelper();
    internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    internal void AddKeyToDelete(Key key);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Amazon.DynamoDBv2.DocumentModel.DocumentExtensions : object {
    [ExtensionAttribute]
public static string ToJson(IEnumerable`1<Document> documents);
    [ExtensionAttribute]
public static string ToJsonPretty(IEnumerable`1<Document> documents);
    private static string SerializeEnumerable(IEnumerable`1<Document> documents, bool prettyPrint);
}
public class Amazon.DynamoDBv2.DocumentModel.DocumentTransactGet : object {
    [CompilerGeneratedAttribute]
private Table <TargetTable>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TransactGetRequestItem> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Document> <Results>k__BackingField;
    internal Table TargetTable { get; private set; }
    internal List`1<TransactGetRequestItem> Items { get; private set; }
    public List`1<Document> Results { get; internal set; }
    public DocumentTransactGet(Table targetTable);
    [CompilerGeneratedAttribute]
internal Table get_TargetTable();
    [CompilerGeneratedAttribute]
private void set_TargetTable(Table value);
    [CompilerGeneratedAttribute]
internal List`1<TransactGetRequestItem> get_Items();
    [CompilerGeneratedAttribute]
private void set_Items(List`1<TransactGetRequestItem> value);
    [CompilerGeneratedAttribute]
public List`1<Document> get_Results();
    [CompilerGeneratedAttribute]
internal void set_Results(List`1<Document> value);
    public void AddKey(Primitive hashKey, Expression projectionExpression);
    public void AddKey(Primitive hashKey, TransactGetItemOperationConfig operationConfig);
    public void AddKey(Primitive hashKey, Primitive rangeKey, Expression projectionExpression);
    public void AddKey(Primitive hashKey, Primitive rangeKey, TransactGetItemOperationConfig operationConfig);
    public void AddKey(IDictionary`2<string, DynamoDBEntry> key, Expression projectionExpression);
    public void AddKey(IDictionary`2<string, DynamoDBEntry> key, TransactGetItemOperationConfig operationConfig);
    public MultiTableDocumentTransactGet Combine(DocumentTransactGet otherTransactionPart);
    internal void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.DocumentTransactGet/<ExecuteHelperAsync>d__21")]
internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    internal void AddKeyHelper(Key key, TransactGetItemOperationConfig operationConfig);
    private MultiTransactGet GetMultiTransactGet();
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DocumentModel.DocumentTransactWrite : object {
    [CompilerGeneratedAttribute]
private Table <TargetTable>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ITransactWriteRequestItem> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Document> <ConditionCheckFailedItems>k__BackingField;
    internal Table TargetTable { get; private set; }
    internal List`1<ITransactWriteRequestItem> Items { get; private set; }
    public List`1<Document> ConditionCheckFailedItems { get; internal set; }
    public DocumentTransactWrite(Table targetTable);
    [CompilerGeneratedAttribute]
internal Table get_TargetTable();
    [CompilerGeneratedAttribute]
private void set_TargetTable(Table value);
    [CompilerGeneratedAttribute]
internal List`1<ITransactWriteRequestItem> get_Items();
    [CompilerGeneratedAttribute]
private void set_Items(List`1<ITransactWriteRequestItem> value);
    [CompilerGeneratedAttribute]
public List`1<Document> get_ConditionCheckFailedItems();
    [CompilerGeneratedAttribute]
internal void set_ConditionCheckFailedItems(List`1<Document> value);
    public void AddKeyToDelete(Primitive hashKey, TransactWriteItemOperationConfig operationConfig);
    public void AddKeyToDelete(Primitive hashKey, Primitive rangeKey, TransactWriteItemOperationConfig operationConfig);
    public void AddKeyToDelete(IDictionary`2<string, DynamoDBEntry> key, TransactWriteItemOperationConfig operationConfig);
    public void AddItemToDelete(Document document, TransactWriteItemOperationConfig operationConfig);
    public void AddDocumentToUpdate(Document document, Primitive hashKey, TransactWriteItemOperationConfig operationConfig);
    public void AddDocumentToUpdate(Document document, Primitive hashKey, Primitive rangeKey, TransactWriteItemOperationConfig operationConfig);
    public void AddDocumentToUpdate(Document document, IDictionary`2<string, DynamoDBEntry> key, TransactWriteItemOperationConfig operationConfig);
    public void AddDocumentToUpdate(Document document, TransactWriteItemOperationConfig operationConfig);
    public void AddDocumentToUpdate(Primitive hashKey, Expression updateExpression, TransactWriteItemOperationConfig operationConfig);
    public void AddDocumentToUpdate(Primitive hashKey, Primitive rangeKey, Expression updateExpression, TransactWriteItemOperationConfig operationConfig);
    public void AddDocumentToUpdate(IDictionary`2<string, DynamoDBEntry> key, Expression updateExpression, TransactWriteItemOperationConfig operationConfig);
    public void AddDocumentToPut(Document document, TransactWriteItemOperationConfig operationConfig);
    public void AddKeyToConditionCheck(Primitive hashKey, Expression conditionalExpression);
    public void AddKeyToConditionCheck(Primitive hashKey, TransactWriteItemOperationConfig operationConfig);
    public void AddKeyToConditionCheck(Primitive hashKey, Primitive rangeKey, Expression conditionalExpression);
    public void AddKeyToConditionCheck(Primitive hashKey, Primitive rangeKey, TransactWriteItemOperationConfig operationConfig);
    public void AddKeyToConditionCheck(IDictionary`2<string, DynamoDBEntry> key, Expression conditionalExpression);
    public void AddKeyToConditionCheck(IDictionary`2<string, DynamoDBEntry> key, TransactWriteItemOperationConfig operationConfig);
    public void AddItemToConditionCheck(Document document, Expression conditionalExpression);
    public void AddItemToConditionCheck(Document document, TransactWriteItemOperationConfig operationConfig);
    internal void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.DocumentTransactWrite/<ExecuteHelperAsync>d__34")]
internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    private MultiTransactWrite GetMultiTransactWrite();
    internal void AddKeyToDeleteHelper(Key key, TransactWriteItemOperationConfig operationConfig);
    internal void AddDocumentToUpdateHelper(Document document, Key key, TransactWriteItemOperationConfig operationConfig);
    internal void AddDocumentToUpdateHelper(Key key, Expression updateExpression, TransactWriteItemOperationConfig operationConfig);
    internal void AddKeyToConditionCheckHelper(Key key, TransactWriteItemOperationConfig operationConfig);
    private static bool TryFilterDuplicates(Dictionary`2<string, T> src, Dictionary`2<string, T> other, Dictionary`2& dest, List`1& conflictingKeys);
    public MultiTableDocumentTransactWrite Combine(DocumentTransactWrite otherTransactionPart);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DocumentModel.DynamoDBBool : DynamoDBEntry {
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public static DynamoDBBool True;
    public static DynamoDBBool False;
    public bool Value { get; public set; }
    public DynamoDBBool(bool value);
    private static DynamoDBBool();
    [CompilerGeneratedAttribute]
public bool get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(bool value);
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    public virtual object Clone();
    public virtual bool AsBoolean();
    public static DynamoDBBool op_Implicit(bool data);
    public static bool op_Explicit(DynamoDBBool p);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public abstract class Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry : object {
    internal abstract virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    internal ExpectedAttributeValue ConvertToExpectedAttributeValue(AttributeConversionConfig conversionConfig);
    internal AttributeValueUpdate ConvertToAttributeUpdateValue(AttributeConversionConfig conversionConfig);
    public Primitive AsPrimitive();
    public PrimitiveList AsPrimitiveList();
    public DynamoDBList AsDynamoDBList();
    public DynamoDBBool AsDynamoDBBool();
    public DynamoDBNull AsDynamoDBNull();
    public Document AsDocument();
    internal DynamoDBEntry ToConvertedEntry(DynamoDBEntryConversion conversion);
    internal Primitive ToPrimitive();
    internal PrimitiveList ToPrimitiveList();
    internal DynamoDBList ToDynamoDBList();
    internal DynamoDBBool ToDynamoDBBool();
    internal DynamoDBNull ToDynamoDBNull();
    internal Document ToDocument();
    private T Validate(T item);
    public virtual bool AsBoolean();
    public static DynamoDBEntry op_Implicit(bool data);
    public static bool op_Explicit(DynamoDBEntry p);
    public virtual byte AsByte();
    public static DynamoDBEntry op_Implicit(byte data);
    public static byte op_Explicit(DynamoDBEntry p);
    public virtual sbyte AsSByte();
    public static DynamoDBEntry op_Implicit(sbyte data);
    public static sbyte op_Explicit(DynamoDBEntry p);
    public virtual ushort AsUShort();
    public static DynamoDBEntry op_Implicit(ushort data);
    public static ushort op_Explicit(DynamoDBEntry p);
    public virtual short AsShort();
    public static DynamoDBEntry op_Implicit(short data);
    public static short op_Explicit(DynamoDBEntry p);
    public virtual UInt32 AsUInt();
    public static DynamoDBEntry op_Implicit(UInt32 data);
    public static UInt32 op_Explicit(DynamoDBEntry p);
    public virtual int AsInt();
    public static DynamoDBEntry op_Implicit(int data);
    public static int op_Explicit(DynamoDBEntry p);
    public virtual ulong AsULong();
    public static DynamoDBEntry op_Implicit(ulong data);
    public static ulong op_Explicit(DynamoDBEntry p);
    public virtual long AsLong();
    public static DynamoDBEntry op_Implicit(long data);
    public static long op_Explicit(DynamoDBEntry p);
    public virtual float AsSingle();
    public static DynamoDBEntry op_Implicit(float data);
    public static float op_Explicit(DynamoDBEntry p);
    public virtual double AsDouble();
    public static DynamoDBEntry op_Implicit(double data);
    public static double op_Explicit(DynamoDBEntry p);
    public virtual decimal AsDecimal();
    public static DynamoDBEntry op_Implicit(decimal data);
    public static decimal op_Explicit(DynamoDBEntry p);
    public virtual char AsChar();
    public static DynamoDBEntry op_Implicit(char data);
    public static char op_Explicit(DynamoDBEntry p);
    public virtual string AsString();
    public static DynamoDBEntry op_Implicit(string data);
    public static string op_Implicit(DynamoDBEntry p);
    public virtual DateTime AsDateTime();
    public virtual DateTime AsDateTimeUtc();
    public static DynamoDBEntry op_Implicit(DateTime data);
    public static DateTime op_Explicit(DynamoDBEntry p);
    public virtual Guid AsGuid();
    public static DynamoDBEntry op_Implicit(Guid data);
    public static Guid op_Explicit(DynamoDBEntry p);
    public virtual Byte[] AsByteArray();
    public static DynamoDBEntry op_Implicit(Byte[] data);
    public static Byte[] op_Explicit(DynamoDBEntry p);
    public virtual MemoryStream AsMemoryStream();
    public static DynamoDBEntry op_Implicit(MemoryStream data);
    public static MemoryStream op_Explicit(DynamoDBEntry p);
    public virtual DynamoDBEntry[] AsArrayOfDynamoDBEntry();
    public virtual List`1<DynamoDBEntry> AsListOfDynamoDBEntry();
    public virtual HashSet`1<DynamoDBEntry> AsHashSetOfDynamoDBEntry();
    public virtual Primitive[] AsArrayOfPrimitive();
    public static DynamoDBEntry op_Implicit(Primitive[] data);
    public static Primitive[] op_Explicit(DynamoDBEntry p);
    public virtual List`1<Primitive> AsListOfPrimitive();
    public static DynamoDBEntry op_Implicit(List`1<Primitive> data);
    public static List`1<Primitive> op_Explicit(DynamoDBEntry p);
    public virtual HashSet`1<Primitive> AsHashSetOfPrimitive();
    public static DynamoDBEntry op_Implicit(HashSet`1<Primitive> data);
    public static HashSet`1<Primitive> op_Explicit(DynamoDBEntry p);
    public virtual List`1<Document> AsListOfDocument();
    public static DynamoDBEntry op_Implicit(List`1<Document> data);
    public static List`1<Document> op_Explicit(DynamoDBEntry p);
    public virtual String[] AsArrayOfString();
    public static DynamoDBEntry op_Implicit(String[] data);
    public static String[] op_Explicit(DynamoDBEntry p);
    public virtual List`1<string> AsListOfString();
    public static DynamoDBEntry op_Implicit(List`1<string> data);
    public static List`1<string> op_Explicit(DynamoDBEntry p);
    public virtual HashSet`1<string> AsHashSetOfString();
    public static DynamoDBEntry op_Implicit(HashSet`1<string> data);
    public static HashSet`1<string> op_Explicit(DynamoDBEntry p);
    public virtual List`1<Byte[]> AsListOfByteArray();
    public static DynamoDBEntry op_Implicit(List`1<Byte[]> data);
    public static List`1<Byte[]> op_Explicit(DynamoDBEntry p);
    public virtual HashSet`1<Byte[]> AsHashSetOfByteArray();
    public static DynamoDBEntry op_Implicit(HashSet`1<Byte[]> data);
    public static HashSet`1<Byte[]> op_Explicit(DynamoDBEntry p);
    public virtual List`1<MemoryStream> AsListOfMemoryStream();
    public static DynamoDBEntry op_Implicit(List`1<MemoryStream> data);
    public static List`1<MemoryStream> op_Explicit(DynamoDBEntry p);
    public virtual HashSet`1<MemoryStream> AsHashSetOfMemoryStream();
    public static DynamoDBEntry op_Implicit(HashSet`1<MemoryStream> data);
    public static HashSet`1<MemoryStream> op_Explicit(DynamoDBEntry p);
    public abstract virtual object Clone();
}
public enum Amazon.DynamoDBv2.DocumentModel.DynamoDBEntryType : Enum {
    public int value__;
    public static DynamoDBEntryType String;
    public static DynamoDBEntryType Numeric;
    public static DynamoDBEntryType Binary;
}
[DefaultMemberAttribute("Item")]
public class Amazon.DynamoDBv2.DocumentModel.DynamoDBList : DynamoDBEntry {
    private static DynamoDBEntryConversion conversion;
    [CompilerGeneratedAttribute]
private List`1<DynamoDBEntry> <Entries>k__BackingField;
    public List`1<DynamoDBEntry> Entries { get; private set; }
    public DynamoDBEntry Item { get; public set; }
    public DynamoDBList(IEnumerable`1<DynamoDBEntry> entries);
    private static DynamoDBList();
    private static DynamoDBEntryConversion CreateConversion();
    public static DynamoDBList Create(IEnumerable`1<T> items);
    [CompilerGeneratedAttribute]
public List`1<DynamoDBEntry> get_Entries();
    [CompilerGeneratedAttribute]
private void set_Entries(List`1<DynamoDBEntry> value);
    public DynamoDBEntry get_Item(int i);
    public void set_Item(int i, DynamoDBEntry value);
    public void Add(DynamoDBEntry value);
    public DynamoDBList ForceConversion(DynamoDBEntryConversion conversion);
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    public virtual object Clone();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual DynamoDBEntry[] AsArrayOfDynamoDBEntry();
    public static DynamoDBList op_Implicit(DynamoDBEntry[] data);
    public static DynamoDBEntry[] op_Explicit(DynamoDBList p);
    public virtual List`1<DynamoDBEntry> AsListOfDynamoDBEntry();
    public static DynamoDBList op_Implicit(List`1<DynamoDBEntry> data);
    public static List`1<DynamoDBEntry> op_Explicit(DynamoDBList p);
    public virtual List`1<Document> AsListOfDocument();
    public static DynamoDBList op_Implicit(List`1<Document> data);
    public static List`1<Document> op_Explicit(DynamoDBList p);
    public virtual String[] AsArrayOfString();
    public static DynamoDBList op_Implicit(String[] data);
    public static String[] op_Explicit(DynamoDBList p);
    public virtual List`1<string> AsListOfString();
    public static DynamoDBList op_Implicit(List`1<string> data);
    public static List`1<string> op_Explicit(DynamoDBList p);
    public virtual HashSet`1<string> AsHashSetOfString();
    public static DynamoDBList op_Implicit(HashSet`1<string> data);
    public static HashSet`1<string> op_Explicit(DynamoDBList p);
    public virtual List`1<Byte[]> AsListOfByteArray();
    public static DynamoDBList op_Implicit(List`1<Byte[]> data);
    public static List`1<Byte[]> op_Explicit(DynamoDBList p);
    public virtual HashSet`1<Byte[]> AsHashSetOfByteArray();
    public static DynamoDBList op_Implicit(HashSet`1<Byte[]> data);
    public static HashSet`1<Byte[]> op_Explicit(DynamoDBList p);
    public virtual List`1<MemoryStream> AsListOfMemoryStream();
    public static DynamoDBList op_Implicit(List`1<MemoryStream> data);
    public static List`1<MemoryStream> op_Explicit(DynamoDBList p);
}
public class Amazon.DynamoDBv2.DocumentModel.DynamoDBNull : DynamoDBEntry {
    public static DynamoDBNull Null;
    private static DynamoDBNull();
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    public virtual object Clone();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal static class Amazon.DynamoDBv2.DocumentModel.EnumMapper : object {
    public static string Convert(ReturnConsumedCapacityValues value);
    public static string Convert(ReturnItemCollectionMetricsValues value);
    public static string Convert(ProjectionTypeValues value);
    public static string Convert(SelectValues value);
    public static string Convert(ReturnValues value);
    public static string Convert(ReturnValuesOnConditionCheckFailure value);
    public static string Convert(ScanOperator value);
    public static string Convert(QueryOperator value);
    public static string Convert(ConditionalOperatorValues value);
}
public class Amazon.DynamoDBv2.DocumentModel.ExpectedState : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ExpectedValue> <ExpectedValues>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    public Dictionary`2<string, ExpectedValue> ExpectedValues { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ExpectedValue> get_ExpectedValues();
    [CompilerGeneratedAttribute]
public void set_ExpectedValues(Dictionary`2<string, ExpectedValue> value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
    public void AddExpected(string attributeName, bool exists);
    public void AddExpected(string attributeName, ScanOperator comparison, Primitive[] values);
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap();
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap(DynamoDBEntryConversion conversion);
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap(Table table);
    private Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap(DynamoDBEntryConversion conversion, IEnumerable`1<string> epochAttributes, bool isEmptyStringValueEnabled);
}
public class Amazon.DynamoDBv2.DocumentModel.ExpectedValue : object {
    [CompilerGeneratedAttribute]
private bool <Exists>k__BackingField;
    [CompilerGeneratedAttribute]
private ScanOperator <Comparison>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Primitive> <Values>k__BackingField;
    public bool Exists { get; public set; }
    public ScanOperator Comparison { get; private set; }
    public List`1<Primitive> Values { get; private set; }
    public ExpectedValue(bool exists);
    public ExpectedValue(ScanOperator comparison, Primitive[] values);
    [CompilerGeneratedAttribute]
public bool get_Exists();
    [CompilerGeneratedAttribute]
public void set_Exists(bool value);
    [CompilerGeneratedAttribute]
public ScanOperator get_Comparison();
    [CompilerGeneratedAttribute]
private void set_Comparison(ScanOperator value);
    [CompilerGeneratedAttribute]
public List`1<Primitive> get_Values();
    [CompilerGeneratedAttribute]
private void set_Values(List`1<Primitive> value);
    public ExpectedAttributeValue ToExpectedAttributeValue();
    public ExpectedAttributeValue ToExpectedAttributeValue(DynamoDBEntryConversion conversion);
    public ExpectedAttributeValue ToExpectedAttributeValue(DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled);
    internal static ExpectedAttributeValue ToExpectedAttributeValue(bool exists, IEnumerable`1<DynamoDBEntry> values, ScanOperator comparison, DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled);
}
public class Amazon.DynamoDBv2.DocumentModel.Expression : object {
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, DynamoDBEntry> _expressionAttributeValues;
    [CompilerGeneratedAttribute]
private string <ExpressionStatement>k__BackingField;
    internal bool IsSet { get; }
    public string ExpressionStatement { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, DynamoDBEntry> ExpressionAttributeValues { get; public set; }
    internal bool get_IsSet();
    [CompilerGeneratedAttribute]
public string get_ExpressionStatement();
    [CompilerGeneratedAttribute]
public void set_ExpressionStatement(string value);
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    public Dictionary`2<string, DynamoDBEntry> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, DynamoDBEntry> value);
    internal void ApplyExpression(ScanRequest request, Table table);
    internal void ApplyExpression(DeleteItemRequest request, Table table);
    internal void ApplyExpression(PutItemRequest request, Table table);
    internal void ApplyExpression(UpdateItemRequest request, Table table);
    internal void ApplyExpression(Get request, Table table);
    internal void ApplyExpression(Put request, Table table);
    internal void ApplyExpression(Update request, Table table);
    internal void ApplyExpression(Delete request, Table table);
    internal void ApplyExpression(ConditionCheck request, Table table);
    internal static void ApplyExpression(QueryRequest request, Table table, Expression keyExpression, Expression filterExpression);
    internal static Dictionary`2<string, AttributeValue> ConvertToAttributeValues(Dictionary`2<string, DynamoDBEntry> valueMap, Table table);
}
public class Amazon.DynamoDBv2.DocumentModel.Filter : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, FilterCondition> <Conditions>k__BackingField;
    protected Dictionary`2<string, FilterCondition> Conditions { get; private set; }
    [CompilerGeneratedAttribute]
protected Dictionary`2<string, FilterCondition> get_Conditions();
    [CompilerGeneratedAttribute]
private void set_Conditions(Dictionary`2<string, FilterCondition> value);
    public Dictionary`2<string, Condition> ToConditions();
    public Dictionary`2<string, Condition> ToConditions(DynamoDBEntryConversion conversion);
    public Dictionary`2<string, Condition> ToConditions(DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled);
    public Dictionary`2<string, Condition> ToConditions(Table table);
    private Dictionary`2<string, Condition> ToConditions(DynamoDBEntryConversion conversion, IEnumerable`1<string> epochAttributes, bool isEmptyStringValueEnabled);
    public static Filter FromConditions(Dictionary`2<string, Condition> conditions);
    protected static List`1<AttributeValue> ConvertToAttributeValues(DynamoDBEntryConversion conversion, DynamoDBEntry[] values);
    protected static List`1<AttributeValue> ConvertToAttributeValues(DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled, DynamoDBEntry[] values);
    public void AddCondition(string attributeName, Condition condition);
    protected void AddCondition(string attributeName, ComparisonOperator comparisonOperator, List`1<DynamoDBEntry> values);
    protected void AddCondition(string attributeName, FilterCondition filterCondition);
    public void RemoveCondition(string attributeName);
}
public class Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig : object {
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsistentRead>k__BackingField;
    public List`1<string> AttributesToGet { get; public set; }
    public bool ConsistentRead { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
public void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(bool value);
}
internal interface Amazon.DynamoDBv2.DocumentModel.IConditionalOperationConfig {
    public Expression ConditionalExpression { get; public set; }
    public ExpectedState ExpectedState { get; public set; }
    public Document Expected { get; public set; }
    public abstract virtual Expression get_ConditionalExpression();
    public abstract virtual void set_ConditionalExpression(Expression value);
    public abstract virtual ExpectedState get_ExpectedState();
    public abstract virtual void set_ExpectedState(ExpectedState value);
    public abstract virtual Document get_Expected();
    public abstract virtual void set_Expected(Document value);
}
public interface Amazon.DynamoDBv2.DocumentModel.ITableBuilder {
    public abstract virtual Table Build();
    public abstract virtual ITableBuilder AddHashKey(string hashKeyAttribute, DynamoDBEntryType type);
    public abstract virtual ITableBuilder AddRangeKey(string rangeKeyAttribute, DynamoDBEntryType type);
    public abstract virtual ITableBuilder AddLocalSecondaryIndex(string indexName, string rangeKeyAttribute, DynamoDBEntryType type);
    public abstract virtual ITableBuilder AddGlobalSecondaryIndex(string indexName, string hashkeyAttribute, DynamoDBEntryType hashKeyType);
    public abstract virtual ITableBuilder AddGlobalSecondaryIndex(string indexName, string hashkeyAttribute, DynamoDBEntryType hashKeyType, string rangeKeyAttribute, DynamoDBEntryType rangeKeyType);
}
internal interface Amazon.DynamoDBv2.DocumentModel.ITransactWriteRequestItem {
    public DocumentTransactWrite TransactionPart { get; }
    public TransactWriteItemOperationConfig OperationConfig { get; }
    public abstract virtual DocumentTransactWrite get_TransactionPart();
    public abstract virtual TransactWriteItemOperationConfig get_OperationConfig();
    public abstract virtual TransactWriteItem GetRequest();
    public abstract virtual void CommitChanges();
}
internal static class Amazon.DynamoDBv2.DocumentModel.JsonUtils : object {
    public static Document FromJson(string jsonText);
    public static IEnumerable`1<Document> FromJsonArray(string jsonText);
    public static string ToJson(Document document, bool prettyPrint);
    public static void DecodeBase64Attributes(Document document, String[] attributeNames);
    private static bool TryDecodeBase64(DynamoDBEntry entry, DynamoDBEntry& decodedEntry);
    private static bool TryDecodeBase64(string base64Data, Byte[]& bytes);
    private static DynamoDBEntry ToEntry(JsonData data, DynamoDBEntryConversion conversion);
    internal static void WriteJson(DynamoDBEntry entry, JsonWriter writer, DynamoDBEntryConversion conversion);
    private static void WritePrimitive(JsonWriter writer, DynamoDBEntryType type, object value);
    private static int FirstIndex(StringBuilder sb, char toMatch);
}
internal class Amazon.DynamoDBv2.DocumentModel.Key : Dictionary`2<string, AttributeValue> {
    public Key(IDictionary`2<string, AttributeValue> values);
}
internal class Amazon.DynamoDBv2.DocumentModel.KeyComparer : object {
    public sealed virtual bool Equals(Key x, Key y);
    public sealed virtual int GetHashCode(Key key);
    private static int GetHashCode(AttributeValue attributeValue);
    private static bool CompareAttributeValue(AttributeValue x, AttributeValue y);
    private static bool IsEitherNull(T x, T y);
    private static bool AreBothNull(T x, T y);
}
public class Amazon.DynamoDBv2.DocumentModel.KeyDescription : object {
    [CompilerGeneratedAttribute]
private DynamoDBEntryType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsHash>k__BackingField;
    public DynamoDBEntryType Type { get; internal set; }
    public bool IsHash { get; internal set; }
    [CompilerGeneratedAttribute]
public DynamoDBEntryType get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(DynamoDBEntryType value);
    [CompilerGeneratedAttribute]
public bool get_IsHash();
    [CompilerGeneratedAttribute]
internal void set_IsHash(bool value);
}
internal class Amazon.DynamoDBv2.DocumentModel.MultiBatchGet : object {
    [CompilerGeneratedAttribute]
private List`1<DocumentBatchGet> <Batches>k__BackingField;
    public static int MaxItemsPerCall;
    public List`1<DocumentBatchGet> Batches { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<DocumentBatchGet> get_Batches();
    [CompilerGeneratedAttribute]
public void set_Batches(List`1<DocumentBatchGet> value);
    public Dictionary`2<string, List`1<Document>> GetItems();
    public Task`1<Dictionary`2<string, List`1<Document>>> GetItemsAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiBatchGet/<GetItemsHelperAsync>d__7")]
internal Task`1<Dictionary`2<string, List`1<Document>>> GetItemsHelperAsync(CancellationToken cancellationToken);
    internal Dictionary`2<string, List`1<Document>> GetItemsHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiBatchGet/<GetAttributeItemsAsync>d__9")]
private Task`1<Results> GetAttributeItemsAsync(CancellationToken cancellationToken);
    private Results GetAttributeItems();
    private static void CallUntilCompletion(IAmazonDynamoDB client, BatchGetItemRequest request, Results allResults);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiBatchGet/<CallUntilCompletionAsync>d__12")]
private static Task CallUntilCompletionAsync(IAmazonDynamoDB client, BatchGetItemRequest request, Results allResults, CancellationToken cancellationToken);
    private static BatchGetItemRequest CreateRequest(Dictionary`2<string, RequestSet> set);
    private Dictionary`2<string, RequestSet> ConvertBatches();
    private static Dictionary`2<string, RequestSet> GetNextRequestItems(Dictionary`2& getRequestsMap, int maxNumberOfItems);
}
internal class Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite : object {
    private static KeyComparer keyComparer;
    private Dictionary`2<string, Table> tableMap;
    public static int MaxItemsPerCall;
    [CompilerGeneratedAttribute]
private List`1<DocumentBatchWrite> <Batches>k__BackingField;
    public List`1<DocumentBatchWrite> Batches { get; public set; }
    private static MultiBatchWrite();
    [CompilerGeneratedAttribute]
public List`1<DocumentBatchWrite> get_Batches();
    [CompilerGeneratedAttribute]
public void set_Batches(List`1<DocumentBatchWrite> value);
    public void WriteItems();
    public Task WriteItemsAsync(CancellationToken cancellationToken);
    private void WriteItemsHelper(List`1<DocumentBatchWrite> batches);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite/<WriteItemsHelperAsync>d__10")]
private Task WriteItemsHelperAsync(List`1<DocumentBatchWrite> batches, CancellationToken cancellationToken);
    private void SendSet(Dictionary`2<string, QuickList`1<WriteRequestDocument>> set, Table targetTable);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite/<SendSetAsync>d__12")]
private Task SendSetAsync(Dictionary`2<string, QuickList`1<WriteRequestDocument>> set, Table targetTable, CancellationToken cancellationToken);
    private static int GetNumberOfWrites(BatchWriteItemRequest request);
    private BatchWriteItemRequest ConstructRequest(Dictionary`2<string, QuickList`1<WriteRequestDocument>> writeItems, Table targetTable, Dictionary`2& documentMap, bool isAsync);
    private static Dictionary`2<string, QuickList`1<WriteRequestDocument>> GetNextWriteItems(Dictionary`2& writeRequestsMap, int maxNumberOfItems);
    private void CallUntilCompletion(BatchWriteItemRequest request, Dictionary`2<string, Dictionary`2<Key, Document>> documentMap, IAmazonDynamoDB client);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite/<CallUntilCompletionAsync>d__17")]
private Task CallUntilCompletionAsync(BatchWriteItemRequest request, Dictionary`2<string, Dictionary`2<Key, Document>> documentMap, IAmazonDynamoDB client, CancellationToken cancellationToken);
    private Dictionary`2<string, QuickList`1<WriteRequestDocument>> ConvertBatches(List`1<DocumentBatchWrite> batches);
}
public class Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet : object {
    [CompilerGeneratedAttribute]
private List`1<DocumentBatchGet> <Batches>k__BackingField;
    public List`1<DocumentBatchGet> Batches { get; private set; }
    public int TotalKeys { get; }
    public MultiTableDocumentBatchGet(DocumentBatchGet[] batches);
    [CompilerGeneratedAttribute]
public List`1<DocumentBatchGet> get_Batches();
    [CompilerGeneratedAttribute]
private void set_Batches(List`1<DocumentBatchGet> value);
    public int get_TotalKeys();
    public void AddBatch(DocumentBatchGet batch);
    internal void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet/<ExecuteHelperAsync>d__9")]
internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite : object {
    [CompilerGeneratedAttribute]
private List`1<DocumentBatchWrite> <Batches>k__BackingField;
    public List`1<DocumentBatchWrite> Batches { get; private set; }
    public MultiTableDocumentBatchWrite(DocumentBatchWrite[] batches);
    [CompilerGeneratedAttribute]
public List`1<DocumentBatchWrite> get_Batches();
    [CompilerGeneratedAttribute]
private void set_Batches(List`1<DocumentBatchWrite> value);
    public void AddBatch(DocumentBatchWrite batch);
    internal void ExecuteHelper();
    internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentTransactGet : object {
    [CompilerGeneratedAttribute]
private List`1<DocumentTransactGet> <TransactionParts>k__BackingField;
    public List`1<DocumentTransactGet> TransactionParts { get; private set; }
    public MultiTableDocumentTransactGet(DocumentTransactGet[] transactionParts);
    [CompilerGeneratedAttribute]
public List`1<DocumentTransactGet> get_TransactionParts();
    [CompilerGeneratedAttribute]
private void set_TransactionParts(List`1<DocumentTransactGet> value);
    public void AddTransactionPart(DocumentTransactGet transactionPart);
    internal void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentTransactGet/<ExecuteHelperAsync>d__7")]
internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    private MultiTransactGet GetMultiTransactGet();
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentTransactWrite : object {
    [CompilerGeneratedAttribute]
private List`1<DocumentTransactWrite> <TransactionParts>k__BackingField;
    public List`1<DocumentTransactWrite> TransactionParts { get; private set; }
    public MultiTableDocumentTransactWrite(DocumentTransactWrite[] transactionParts);
    [CompilerGeneratedAttribute]
public List`1<DocumentTransactWrite> get_TransactionParts();
    [CompilerGeneratedAttribute]
private void set_TransactionParts(List`1<DocumentTransactWrite> value);
    public void AddTransactionPart(DocumentTransactWrite transactionPart);
    internal void ExecuteHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentTransactWrite/<ExecuteHelperAsync>d__7")]
internal Task ExecuteHelperAsync(CancellationToken cancellationToken);
    private MultiTransactWrite GetMultiTransactWrite();
    public Task ExecuteAsync(CancellationToken cancellationToken);
}
internal class Amazon.DynamoDBv2.DocumentModel.MultiTransactGet : object {
    [CompilerGeneratedAttribute]
private List`1<TransactGetRequestItem> <Items>k__BackingField;
    public List`1<TransactGetRequestItem> Items { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<TransactGetRequestItem> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(List`1<TransactGetRequestItem> value);
    public Dictionary`2<DocumentTransactGet, List`1<Document>> GetItems();
    public Task`1<Dictionary`2<DocumentTransactGet, List`1<Document>>> GetItemsAsync(CancellationToken cancellationToken);
    private Dictionary`2<DocumentTransactGet, List`1<Document>> GetItemsHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiTransactGet/<GetItemsHelperAsync>d__7")]
private Task`1<Dictionary`2<DocumentTransactGet, List`1<Document>>> GetItemsHelperAsync(CancellationToken cancellationToken);
    private TransactGetItemsRequest ConstructRequest(bool isAsync);
    private Dictionary`2<DocumentTransactGet, List`1<Document>> GetDocuments(List`1<ItemResponse> responses);
    [CompilerGeneratedAttribute]
private <>f__AnonymousType0`2<Dictionary`2<string, AttributeValue>, DocumentTransactGet> <GetDocuments>b__9_0(ItemResponse response, int idx);
}
internal class Amazon.DynamoDBv2.DocumentModel.MultiTransactWrite : object {
    [CompilerGeneratedAttribute]
private List`1<ITransactWriteRequestItem> <Items>k__BackingField;
    public List`1<ITransactWriteRequestItem> Items { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ITransactWriteRequestItem> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(List`1<ITransactWriteRequestItem> value);
    public void WriteItems();
    public Task WriteItemsAsync(CancellationToken cancellationToken);
    private void WriteItemsHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.MultiTransactWrite/<WriteItemsHelperAsync>d__7")]
private Task WriteItemsHelperAsync(CancellationToken cancellationToken);
    private TransactWriteItemsRequest ConstructRequest(bool isAsync);
    private void FillConditionCheckFailedItems(List`1<CancellationReason> cancellationReasons);
    [CompilerGeneratedAttribute]
private <>f__AnonymousType1`2<CancellationReason, ITransactWriteRequestItem> <FillConditionCheckFailedItems>b__9_0(CancellationReason cancellationReason, int idx);
}
public class Amazon.DynamoDBv2.DocumentModel.Primitive : DynamoDBEntry {
    private static DynamoDBEntryConversion V1Conversion;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryType <Type>k__BackingField;
    public object Value { get; public set; }
    public DynamoDBEntryType Type { get; public set; }
    internal string StringValue { get; }
    public Primitive(string value);
    public Primitive(string value, bool saveAsNumeric);
    public Primitive(MemoryStream value);
    public Primitive(Byte[] value);
    internal Primitive(object value, DynamoDBEntryType type);
    private static Primitive();
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(DynamoDBEntryType value);
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    internal string get_StringValue();
    public virtual bool AsBoolean();
    public static Primitive op_Implicit(bool data);
    public static bool op_Explicit(Primitive p);
    public virtual byte AsByte();
    public static Primitive op_Implicit(byte data);
    public static byte op_Explicit(Primitive p);
    public virtual sbyte AsSByte();
    public static Primitive op_Implicit(sbyte data);
    public static sbyte op_Explicit(Primitive p);
    public virtual ushort AsUShort();
    public static Primitive op_Implicit(ushort data);
    public static ushort op_Explicit(Primitive p);
    public virtual short AsShort();
    public static Primitive op_Implicit(short data);
    public static short op_Explicit(Primitive p);
    public virtual UInt32 AsUInt();
    public static Primitive op_Implicit(UInt32 data);
    public static UInt32 op_Explicit(Primitive p);
    public virtual int AsInt();
    public static Primitive op_Implicit(int data);
    public static int op_Explicit(Primitive p);
    public virtual ulong AsULong();
    public static Primitive op_Implicit(ulong data);
    public static ulong op_Explicit(Primitive p);
    public virtual long AsLong();
    public static Primitive op_Implicit(long data);
    public static long op_Explicit(Primitive p);
    public virtual float AsSingle();
    public static Primitive op_Implicit(float data);
    public static float op_Explicit(Primitive p);
    public virtual double AsDouble();
    public static Primitive op_Implicit(double data);
    public static double op_Explicit(Primitive p);
    public virtual decimal AsDecimal();
    public static Primitive op_Implicit(decimal data);
    public static decimal op_Explicit(Primitive p);
    public virtual char AsChar();
    public static Primitive op_Implicit(char data);
    public static char op_Explicit(Primitive p);
    public virtual string AsString();
    public static Primitive op_Implicit(string data);
    public static string op_Implicit(Primitive p);
    public virtual DateTime AsDateTime();
    public virtual DateTime AsDateTimeUtc();
    public static Primitive op_Implicit(DateTime data);
    public static DateTime op_Explicit(Primitive p);
    public virtual Guid AsGuid();
    public static Primitive op_Implicit(Guid data);
    public static Guid op_Explicit(Primitive p);
    public virtual Byte[] AsByteArray();
    public static Primitive op_Implicit(Byte[] data);
    public static Byte[] op_Explicit(Primitive p);
    public virtual MemoryStream AsMemoryStream();
    public static Primitive op_Implicit(MemoryStream data);
    public static MemoryStream op_Explicit(Primitive p);
    public virtual string ToString();
    public virtual object Clone();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(Primitive other);
}
internal class Amazon.DynamoDBv2.DocumentModel.PrimitiveComparer : object {
    public static PrimitiveComparer Default;
    private static PrimitiveComparer();
    public sealed virtual int Compare(Primitive x, Primitive y);
}
internal class Amazon.DynamoDBv2.DocumentModel.PrimitiveEqualityComparer : object {
    public static PrimitiveEqualityComparer Default;
    private static PrimitiveEqualityComparer();
    public sealed virtual bool Equals(Primitive x, Primitive y);
    public sealed virtual int GetHashCode(Primitive obj);
}
[DefaultMemberAttribute("Item")]
public class Amazon.DynamoDBv2.DocumentModel.PrimitiveList : DynamoDBEntry {
    private static DynamoDBEntryConversion V1Conversion;
    [CompilerGeneratedAttribute]
private List`1<Primitive> <Entries>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryType <Type>k__BackingField;
    public List`1<Primitive> Entries { get; public set; }
    public DynamoDBEntryType Type { get; public set; }
    public Primitive Item { get; public set; }
    public PrimitiveList(DynamoDBEntryType type);
    internal PrimitiveList(IEnumerable`1<Primitive> primitives);
    private static PrimitiveList();
    [CompilerGeneratedAttribute]
public List`1<Primitive> get_Entries();
    [CompilerGeneratedAttribute]
public void set_Entries(List`1<Primitive> value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(DynamoDBEntryType value);
    public Primitive get_Item(int i);
    public void set_Item(int i, Primitive value);
    public void Add(Primitive value);
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    internal List`1<Primitive> GetSortedEntries();
    public virtual Primitive[] AsArrayOfPrimitive();
    public static PrimitiveList op_Implicit(Primitive[] data);
    public static Primitive[] op_Explicit(PrimitiveList p);
    public virtual List`1<Primitive> AsListOfPrimitive();
    public static PrimitiveList op_Implicit(List`1<Primitive> data);
    public static List`1<Primitive> op_Explicit(PrimitiveList p);
    public virtual HashSet`1<Primitive> AsHashSetOfPrimitive();
    public static PrimitiveList op_Implicit(HashSet`1<Primitive> data);
    public static HashSet`1<Primitive> op_Explicit(PrimitiveList p);
    public virtual String[] AsArrayOfString();
    public static PrimitiveList op_Implicit(String[] data);
    public static String[] op_Explicit(PrimitiveList p);
    public virtual List`1<string> AsListOfString();
    public static PrimitiveList op_Implicit(List`1<string> data);
    public static List`1<string> op_Explicit(PrimitiveList p);
    public virtual HashSet`1<string> AsHashSetOfString();
    public static PrimitiveList op_Implicit(HashSet`1<string> data);
    public static HashSet`1<string> op_Explicit(PrimitiveList p);
    public virtual List`1<Byte[]> AsListOfByteArray();
    public static PrimitiveList op_Implicit(List`1<Byte[]> data);
    public static List`1<Byte[]> op_Explicit(PrimitiveList p);
    public virtual HashSet`1<Byte[]> AsHashSetOfByteArray();
    public static PrimitiveList op_Implicit(HashSet`1<Byte[]> data);
    public static HashSet`1<Byte[]> op_Explicit(PrimitiveList p);
    public virtual List`1<MemoryStream> AsListOfMemoryStream();
    public static PrimitiveList op_Implicit(List`1<MemoryStream> data);
    public static List`1<MemoryStream> op_Explicit(PrimitiveList p);
    public virtual object Clone();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(PrimitiveList other);
}
internal enum Amazon.DynamoDBv2.DocumentModel.ProjectionTypeValues : Enum {
    public int value__;
    public static ProjectionTypeValues All;
    public static ProjectionTypeValues Include;
    public static ProjectionTypeValues KeysOnly;
}
public class Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig : object {
    [CompilerGeneratedAttribute]
private Expression <ConditionalExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ExpectedState <ExpectedState>k__BackingField;
    [CompilerGeneratedAttribute]
private Document <Expected>k__BackingField;
    [CompilerGeneratedAttribute]
private ReturnValues <ReturnValues>k__BackingField;
    public Expression ConditionalExpression { get; public set; }
    public ExpectedState ExpectedState { get; public set; }
    public Document Expected { get; public set; }
    public ReturnValues ReturnValues { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Expression get_ConditionalExpression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConditionalExpression(Expression value);
    [CompilerGeneratedAttribute]
public sealed virtual ExpectedState get_ExpectedState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExpectedState(ExpectedState value);
    [CompilerGeneratedAttribute]
public sealed virtual Document get_Expected();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expected(Document value);
    [CompilerGeneratedAttribute]
public ReturnValues get_ReturnValues();
    [CompilerGeneratedAttribute]
public void set_ReturnValues(ReturnValues value);
}
public class Amazon.DynamoDBv2.DocumentModel.QueryFilter : Filter {
    public QueryFilter(string attributeName, QueryOperator op, List`1<AttributeValue> values);
    public QueryFilter(string attributeName, QueryOperator op, DynamoDBEntry[] values);
    internal QueryFilter(QueryFilter baseFilter);
    public void AddCondition(string keyAttributeName, QueryOperator op, List`1<AttributeValue> values);
    public void AddCondition(string keyAttributeName, QueryOperator op, DynamoDBEntry[] values);
    public void AddCondition(string nonKeyAttributeName, ScanOperator op, List`1<AttributeValue> values);
    public void AddCondition(string nonKeyAttributeName, ScanOperator op, DynamoDBEntry[] values);
}
public class Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig : object {
    [CompilerGeneratedAttribute]
private Expression <KeyExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <FilterExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Limit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BackwardSearch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectValues <Select>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CollectResults>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PaginationToken>k__BackingField;
    public Expression KeyExpression { get; public set; }
    public Expression FilterExpression { get; public set; }
    public QueryFilter Filter { get; public set; }
    public bool ConsistentRead { get; public set; }
    public List`1<string> AttributesToGet { get; public set; }
    public int Limit { get; public set; }
    public bool BackwardSearch { get; public set; }
    public string IndexName { get; public set; }
    public SelectValues Select { get; public set; }
    public bool CollectResults { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    public string PaginationToken { get; public set; }
    [CompilerGeneratedAttribute]
public Expression get_KeyExpression();
    [CompilerGeneratedAttribute]
public void set_KeyExpression(Expression value);
    [CompilerGeneratedAttribute]
public Expression get_FilterExpression();
    [CompilerGeneratedAttribute]
public void set_FilterExpression(Expression value);
    [CompilerGeneratedAttribute]
public QueryFilter get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(QueryFilter value);
    [CompilerGeneratedAttribute]
public bool get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
public void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public int get_Limit();
    [CompilerGeneratedAttribute]
public void set_Limit(int value);
    [CompilerGeneratedAttribute]
public bool get_BackwardSearch();
    [CompilerGeneratedAttribute]
public void set_BackwardSearch(bool value);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public SelectValues get_Select();
    [CompilerGeneratedAttribute]
public void set_Select(SelectValues value);
    [CompilerGeneratedAttribute]
public bool get_CollectResults();
    [CompilerGeneratedAttribute]
public void set_CollectResults(bool value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
    [CompilerGeneratedAttribute]
public string get_PaginationToken();
    [CompilerGeneratedAttribute]
public void set_PaginationToken(string value);
}
public enum Amazon.DynamoDBv2.DocumentModel.QueryOperator : Enum {
    public int value__;
    public static QueryOperator Equal;
    public static QueryOperator LessThanOrEqual;
    public static QueryOperator LessThan;
    public static QueryOperator GreaterThanOrEqual;
    public static QueryOperator GreaterThan;
    public static QueryOperator BeginsWith;
    public static QueryOperator Between;
}
internal class Amazon.DynamoDBv2.DocumentModel.QuickList`1 : object {
    private List`1<T> List;
    private int StartIndex;
    public int Count { get; }
    public QuickList`1(IEnumerable`1<T> items);
    public void Add(IEnumerable`1<T> items);
    public int get_Count();
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.QuickList`1/<RemoveFromHead>d__6")]
public IEnumerable`1<T> RemoveFromHead(int numberOfItems);
    public List`1<T> GetItems();
}
internal enum Amazon.DynamoDBv2.DocumentModel.ReturnConsumedCapacityValues : Enum {
    public int value__;
    public static ReturnConsumedCapacityValues None;
    public static ReturnConsumedCapacityValues Total;
}
internal enum Amazon.DynamoDBv2.DocumentModel.ReturnItemCollectionMetricsValues : Enum {
    public int value__;
    public static ReturnItemCollectionMetricsValues None;
    public static ReturnItemCollectionMetricsValues All;
}
public enum Amazon.DynamoDBv2.DocumentModel.ReturnValues : Enum {
    public int value__;
    public static ReturnValues None;
    public static ReturnValues AllOldAttributes;
    public static ReturnValues AllNewAttributes;
    public static ReturnValues UpdatedOldAttributes;
    public static ReturnValues UpdatedNewAttributes;
}
public enum Amazon.DynamoDBv2.DocumentModel.ReturnValuesOnConditionCheckFailure : Enum {
    public int value__;
    public static ReturnValuesOnConditionCheckFailure None;
    public static ReturnValuesOnConditionCheckFailure AllOldAttributes;
}
public class Amazon.DynamoDBv2.DocumentModel.ScanFilter : Filter {
    public void AddCondition(string attributeName, ScanOperator op, List`1<AttributeValue> values);
    public void AddCondition(string attributeName, ScanOperator op, DynamoDBEntry[] values);
}
public class Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig : object {
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Limit>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <FilterExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ScanFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectValues <Select>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalSegments>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Segment>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CollectResults>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PaginationToken>k__BackingField;
    public List`1<string> AttributesToGet { get; public set; }
    public bool ConsistentRead { get; public set; }
    public int Limit { get; public set; }
    public Expression FilterExpression { get; public set; }
    public ScanFilter Filter { get; public set; }
    public string IndexName { get; public set; }
    public SelectValues Select { get; public set; }
    public int TotalSegments { get; public set; }
    public int Segment { get; public set; }
    public bool CollectResults { get; public set; }
    public ConditionalOperatorValues ConditionalOperator { get; public set; }
    public string PaginationToken { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
public void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_ConsistentRead();
    [CompilerGeneratedAttribute]
public void set_ConsistentRead(bool value);
    [CompilerGeneratedAttribute]
public int get_Limit();
    [CompilerGeneratedAttribute]
public void set_Limit(int value);
    [CompilerGeneratedAttribute]
public Expression get_FilterExpression();
    [CompilerGeneratedAttribute]
public void set_FilterExpression(Expression value);
    [CompilerGeneratedAttribute]
public ScanFilter get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(ScanFilter value);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public SelectValues get_Select();
    [CompilerGeneratedAttribute]
public void set_Select(SelectValues value);
    [CompilerGeneratedAttribute]
public int get_TotalSegments();
    [CompilerGeneratedAttribute]
public void set_TotalSegments(int value);
    [CompilerGeneratedAttribute]
public int get_Segment();
    [CompilerGeneratedAttribute]
public void set_Segment(int value);
    [CompilerGeneratedAttribute]
public bool get_CollectResults();
    [CompilerGeneratedAttribute]
public void set_CollectResults(bool value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
public void set_ConditionalOperator(ConditionalOperatorValues value);
    [CompilerGeneratedAttribute]
public string get_PaginationToken();
    [CompilerGeneratedAttribute]
public void set_PaginationToken(string value);
}
public enum Amazon.DynamoDBv2.DocumentModel.ScanOperator : Enum {
    public int value__;
    public static ScanOperator Equal;
    public static ScanOperator NotEqual;
    public static ScanOperator LessThanOrEqual;
    public static ScanOperator LessThan;
    public static ScanOperator GreaterThanOrEqual;
    public static ScanOperator GreaterThan;
    public static ScanOperator IsNotNull;
    public static ScanOperator IsNull;
    public static ScanOperator Contains;
    public static ScanOperator NotContains;
    public static ScanOperator BeginsWith;
    public static ScanOperator In;
    public static ScanOperator Between;
}
public class Amazon.DynamoDBv2.DocumentModel.Search : object {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CollectResults>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Limit>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <KeyExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <FilterExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Filter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalOperatorValues <ConditionalOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConsistentRead>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBackwardSearch>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDone>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, AttributeValue> <NextKey>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Document> <Matches>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalSegments>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Segment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectValues <Select>k__BackingField;
    private int count;
    [CompilerGeneratedAttribute]
private SearchType <SearchMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Table <SourceTable>k__BackingField;
    public string TableName { get; internal set; }
    public bool CollectResults { get; internal set; }
    public int Limit { get; internal set; }
    public Expression KeyExpression { get; public set; }
    public Expression FilterExpression { get; public set; }
    public Filter Filter { get; internal set; }
    public ConditionalOperatorValues ConditionalOperator { get; internal set; }
    public List`1<string> AttributesToGet { get; internal set; }
    public bool IsConsistentRead { get; internal set; }
    public bool IsBackwardSearch { get; internal set; }
    public bool IsDone { get; private set; }
    public Dictionary`2<string, AttributeValue> NextKey { get; private set; }
    public string PaginationToken { get; internal set; }
    public List`1<Document> Matches { get; private set; }
    public int TotalSegments { get; public set; }
    public int Segment { get; public set; }
    public int Count { get; }
    public string IndexName { get; internal set; }
    public SelectValues Select { get; internal set; }
    private SearchType SearchMethod { get; private set; }
    internal Table SourceTable { get; internal set; }
    internal Search(SearchType searchMethod);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
internal void set_TableName(string value);
    [CompilerGeneratedAttribute]
public bool get_CollectResults();
    [CompilerGeneratedAttribute]
internal void set_CollectResults(bool value);
    [CompilerGeneratedAttribute]
public int get_Limit();
    [CompilerGeneratedAttribute]
internal void set_Limit(int value);
    [CompilerGeneratedAttribute]
public Expression get_KeyExpression();
    [CompilerGeneratedAttribute]
public void set_KeyExpression(Expression value);
    [CompilerGeneratedAttribute]
public Expression get_FilterExpression();
    [CompilerGeneratedAttribute]
public void set_FilterExpression(Expression value);
    [CompilerGeneratedAttribute]
public Filter get_Filter();
    [CompilerGeneratedAttribute]
internal void set_Filter(Filter value);
    [CompilerGeneratedAttribute]
public ConditionalOperatorValues get_ConditionalOperator();
    [CompilerGeneratedAttribute]
internal void set_ConditionalOperator(ConditionalOperatorValues value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToGet();
    [CompilerGeneratedAttribute]
internal void set_AttributesToGet(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IsConsistentRead();
    [CompilerGeneratedAttribute]
internal void set_IsConsistentRead(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsBackwardSearch();
    [CompilerGeneratedAttribute]
internal void set_IsBackwardSearch(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsDone();
    [CompilerGeneratedAttribute]
private void set_IsDone(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, AttributeValue> get_NextKey();
    [CompilerGeneratedAttribute]
private void set_NextKey(Dictionary`2<string, AttributeValue> value);
    public string get_PaginationToken();
    internal void set_PaginationToken(string value);
    [CompilerGeneratedAttribute]
public List`1<Document> get_Matches();
    [CompilerGeneratedAttribute]
private void set_Matches(List`1<Document> value);
    [CompilerGeneratedAttribute]
public int get_TotalSegments();
    [CompilerGeneratedAttribute]
public void set_TotalSegments(int value);
    [CompilerGeneratedAttribute]
public int get_Segment();
    [CompilerGeneratedAttribute]
public void set_Segment(int value);
    public int get_Count();
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
internal void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public SelectValues get_Select();
    [CompilerGeneratedAttribute]
internal void set_Select(SelectValues value);
    internal List`1<Document> GetNextSetHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.Search/<GetNextSetHelperAsync>d__76")]
internal Task`1<List`1<Document>> GetNextSetHelperAsync(CancellationToken cancellationToken);
    internal List`1<Document> GetRemainingHelper();
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.Search/<GetRemainingHelperAsync>d__78")]
internal Task`1<List`1<Document>> GetRemainingHelperAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private SearchType get_SearchMethod();
    [CompilerGeneratedAttribute]
private void set_SearchMethod(SearchType value);
    [CompilerGeneratedAttribute]
internal Table get_SourceTable();
    [CompilerGeneratedAttribute]
internal void set_SourceTable(Table value);
    private static void SplitQueryFilter(Filter filter, Table targetTable, string indexName, Dictionary`2& keyConditions, Dictionary`2& filterConditions);
    private static bool IsKeyAttribute(Table table, string indexName, string attributeName);
    private static Func`2<KeySchemaElement, bool> AttributeIsKey(string attributeName);
    private int GetCount();
    internal void Reset();
    public Task`1<List`1<Document>> GetNextSetAsync(CancellationToken cancellationToken);
    public Task`1<List`1<Document>> GetRemainingAsync(CancellationToken cancellationToken);
}
internal enum Amazon.DynamoDBv2.DocumentModel.SearchType : Enum {
    public int value__;
    public static SearchType Scan;
    public static SearchType Query;
}
public enum Amazon.DynamoDBv2.DocumentModel.SelectValues : Enum {
    public int value__;
    public static SelectValues Count;
    public static SelectValues SpecificAttributes;
    public static SelectValues AllAttributes;
    public static SelectValues AllProjectedAttributes;
}
public class Amazon.DynamoDBv2.DocumentModel.Table : object {
    private static string TableInfoCacheIdentifier;
    private TableConfig Config;
    [CompilerGeneratedAttribute]
private IAmazonDynamoDB <DDBClient>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, KeyDescription> <Keys>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, GlobalSecondaryIndexDescription> <GlobalSecondaryIndexes>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, LocalSecondaryIndexDescription> <LocalSecondaryIndexes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <LocalSecondaryIndexNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <GlobalSecondaryIndexNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <HashKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RangeKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AttributeDefinition> <Attributes>k__BackingField;
    internal DynamoDBConsumer TableConsumer { get; }
    internal DynamoDBEntryConversion Conversion { get; }
    internal bool IsEmptyStringValueEnabled { get; }
    internal IEnumerable`1<string> StoreAsEpoch { get; }
    internal IEnumerable`1<string> KeyNames { get; }
    internal IAmazonDynamoDB DDBClient { get; private set; }
    public string TableName { get; }
    public Dictionary`2<string, KeyDescription> Keys { get; private set; }
    public Dictionary`2<string, GlobalSecondaryIndexDescription> GlobalSecondaryIndexes { get; private set; }
    public Dictionary`2<string, LocalSecondaryIndexDescription> LocalSecondaryIndexes { get; private set; }
    public List`1<string> LocalSecondaryIndexNames { get; private set; }
    public List`1<string> GlobalSecondaryIndexNames { get; private set; }
    public List`1<string> HashKeys { get; private set; }
    public List`1<string> RangeKeys { get; private set; }
    public List`1<AttributeDefinition> Attributes { get; public set; }
    internal Table(IAmazonDynamoDB ddbClient, TableConfig config);
    private static Table();
    internal DynamoDBConsumer get_TableConsumer();
    internal DynamoDBEntryConversion get_Conversion();
    internal bool get_IsEmptyStringValueEnabled();
    internal IEnumerable`1<string> get_StoreAsEpoch();
    internal IEnumerable`1<string> get_KeyNames();
    [CompilerGeneratedAttribute]
internal IAmazonDynamoDB get_DDBClient();
    [CompilerGeneratedAttribute]
private void set_DDBClient(IAmazonDynamoDB value);
    public string get_TableName();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, KeyDescription> get_Keys();
    [CompilerGeneratedAttribute]
private void set_Keys(Dictionary`2<string, KeyDescription> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, GlobalSecondaryIndexDescription> get_GlobalSecondaryIndexes();
    [CompilerGeneratedAttribute]
private void set_GlobalSecondaryIndexes(Dictionary`2<string, GlobalSecondaryIndexDescription> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, LocalSecondaryIndexDescription> get_LocalSecondaryIndexes();
    [CompilerGeneratedAttribute]
private void set_LocalSecondaryIndexes(Dictionary`2<string, LocalSecondaryIndexDescription> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_LocalSecondaryIndexNames();
    [CompilerGeneratedAttribute]
private void set_LocalSecondaryIndexNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_GlobalSecondaryIndexNames();
    [CompilerGeneratedAttribute]
private void set_GlobalSecondaryIndexNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_HashKeys();
    [CompilerGeneratedAttribute]
private void set_HashKeys(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_RangeKeys();
    [CompilerGeneratedAttribute]
private void set_RangeKeys(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<AttributeDefinition> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(List`1<AttributeDefinition> value);
    private static DynamoDBEntryType GetType(string attributeType);
    private ICache`2<string, TableDescription> GetTableDescriptionCache();
    private static ScalarAttributeType PrimitiveToScalar(DynamoDBEntryType primitiveEntryType);
    private void LoadTableInfo(ICache`2<string, TableDescription> tableDescriptionCache);
    internal Key MakeKey(IDictionary`2<string, DynamoDBEntry> doc);
    internal Key MakeKey(Primitive hashKey, Primitive rangeKey);
    private static Primitive KeyDateTimeToEpochSeconds(Primitive key, string attributeName);
    internal void UserAgentRequestEventHandlerSync(object sender, RequestEventArgs args);
    internal void UserAgentRequestEventHandlerAsync(object sender, RequestEventArgs args);
    internal void AddRequestHandler(AmazonDynamoDBRequest request, bool isAsync);
    private void UserAgentRequestEventHandler(object sender, RequestEventArgs args, bool isAsync);
    private static void ValidateConditional(IConditionalOperationConfig config);
    internal void ClearTableData();
    private TableDescription DescribeTable(string tableName);
    internal Table Copy();
    internal Table Copy(TableConfig newConfig);
    internal Dictionary`2<string, AttributeValue> ToAttributeMap(Document doc, DynamoDBEntryConversion conversion);
    public static void ClearTableCache();
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static Table LoadTable(IAmazonDynamoDB ddbClient, TableConfig config);
    private static DynamoDBEntryType GetPrimitiveEntryTypeForProperty(PropertyStorage property, DynamoDBFlatConfig flatConfig);
    internal static Table CreateTableFromItemStorageConfig(IAmazonDynamoDB client, TableConfig config, ItemStorageConfig itemStorageConfig, DynamoDBFlatConfig flatConfig);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static Table LoadTable(IAmazonDynamoDB ddbClient, string tableName);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static Table LoadTable(IAmazonDynamoDB ddbClient, string tableName, DynamoDBEntryConversion conversion);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static Table LoadTable(IAmazonDynamoDB ddbClient, string tableName, bool isEmptyStringValueEnabled);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static Table LoadTable(IAmazonDynamoDB ddbClient, string tableName, DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static Table LoadTable(IAmazonDynamoDB ddbClient, string tableName, DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled, MetadataCachingMode metadataCachingMode);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static bool TryLoadTable(IAmazonDynamoDB ddbClient, string tableName, Table& table);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static bool TryLoadTable(IAmazonDynamoDB ddbClient, string tableName, DynamoDBEntryConversion conversion, Table& table);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static bool TryLoadTable(IAmazonDynamoDB ddbClient, string tableName, bool isEmptyStringValueEnabled, Table& table);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static bool TryLoadTable(IAmazonDynamoDB ddbClient, string tableName, DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled, Table& table);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static bool TryLoadTable(IAmazonDynamoDB ddbClient, string tableName, DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled, Nullable`1<MetadataCachingMode> metadataCachingMode, Table& table);
    [ObsoleteAttribute("Use the TableBuilder to construct a Table with the recommended configuration.")]
public static bool TryLoadTable(IAmazonDynamoDB ddbClient, TableConfig config, Table& table);
    public Document FromAttributeMap(Dictionary`2<string, AttributeValue> data);
    public Dictionary`2<string, AttributeValue> ToAttributeMap(Document doc);
    public Dictionary`2<string, ExpectedAttributeValue> ToExpectedAttributeMap(Document doc);
    public Dictionary`2<string, AttributeValueUpdate> ToAttributeUpdateMap(Document doc, bool changedAttributesOnly);
    internal Document PutItemHelper(Document doc, PutItemOperationConfig config);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.Table/<PutItemHelperAsync>d__89")]
internal Task`1<Document> PutItemHelperAsync(Document doc, PutItemOperationConfig config, CancellationToken cancellationToken);
    internal Document GetItemHelper(Key key, GetItemOperationConfig config);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.Table/<GetItemHelperAsync>d__91")]
internal Task`1<Document> GetItemHelperAsync(Key key, GetItemOperationConfig config, CancellationToken cancellationToken);
    internal Document UpdateHelper(Document doc, Primitive hashKey, Primitive rangeKey, UpdateItemOperationConfig config);
    internal Task`1<Document> UpdateHelperAsync(Document doc, Primitive hashKey, Primitive rangeKey, UpdateItemOperationConfig config, CancellationToken cancellationToken);
    internal Document UpdateHelper(Document doc, Key key, UpdateItemOperationConfig config);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.Table/<UpdateHelperAsync>d__95")]
internal Task`1<Document> UpdateHelperAsync(Document doc, Key key, UpdateItemOperationConfig config, CancellationToken cancellationToken);
    internal bool HaveKeysChanged(Document doc);
    internal Document DeleteHelper(Key key, DeleteItemOperationConfig config);
    [AsyncStateMachineAttribute("Amazon.DynamoDBv2.DocumentModel.Table/<DeleteHelperAsync>d__98")]
internal Task`1<Document> DeleteHelperAsync(Key key, DeleteItemOperationConfig config, CancellationToken cancellationToken);
    public Search Scan(ScanFilter filter);
    public Search Scan(Expression filterExpression);
    public Search Scan(ScanOperationConfig config);
    public Search Query(Primitive hashKey, QueryFilter filter);
    public Search Query(Primitive hashKey, Expression filterExpression);
    public Search Query(QueryFilter filter);
    public Search Query(QueryOperationConfig config);
    public DocumentBatchGet CreateBatchGet();
    public DocumentBatchWrite CreateBatchWrite();
    public DocumentTransactGet CreateTransactGet();
    public DocumentTransactWrite CreateTransactWrite();
    public Task`1<Document> PutItemAsync(Document doc, CancellationToken cancellationToken);
    public Task`1<Document> PutItemAsync(Document doc, PutItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(Primitive hashKey, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(Primitive hashKey, GetItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(Primitive hashKey, Primitive rangeKey, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(Primitive hashKey, Primitive rangeKey, GetItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(IDictionary`2<string, DynamoDBEntry> key, CancellationToken cancellationToken);
    public Task`1<Document> GetItemAsync(IDictionary`2<string, DynamoDBEntry> key, GetItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, UpdateItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, IDictionary`2<string, DynamoDBEntry> key, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, IDictionary`2<string, DynamoDBEntry> key, UpdateItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, Primitive hashKey, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, Primitive hashKey, UpdateItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, Primitive hashKey, Primitive rangeKey, CancellationToken cancellationToken);
    public Task`1<Document> UpdateItemAsync(Document doc, Primitive hashKey, Primitive rangeKey, UpdateItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Document document, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Document document, DeleteItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Primitive hashKey, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Primitive hashKey, DeleteItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Primitive hashKey, Primitive rangeKey, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(Primitive hashKey, Primitive rangeKey, DeleteItemOperationConfig config, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(IDictionary`2<string, DynamoDBEntry> key, CancellationToken cancellationToken);
    public Task`1<Document> DeleteItemAsync(IDictionary`2<string, DynamoDBEntry> key, DeleteItemOperationConfig config, CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.DocumentModel.TableBuilder : object {
    private Table _table;
    private HashSet`1<string> _attributesAlreadyProcessed;
    public TableBuilder(IAmazonDynamoDB ddbClient, string tableName);
    public TableBuilder(IAmazonDynamoDB ddbClient, string tableName, DynamoDBEntryConversion conversion, bool isEmptyStringValueEnabled, Nullable`1<MetadataCachingMode> metadataCachingMode);
    public TableBuilder(IAmazonDynamoDB ddbClient, TableConfig config);
    public sealed virtual Table Build();
    public sealed virtual ITableBuilder AddHashKey(string hashKeyAttribute, DynamoDBEntryType type);
    public sealed virtual ITableBuilder AddRangeKey(string rangeKeyAttribute, DynamoDBEntryType type);
    public sealed virtual ITableBuilder AddLocalSecondaryIndex(string indexName, string rangeKeyAttribute, DynamoDBEntryType type);
    public sealed virtual ITableBuilder AddGlobalSecondaryIndex(string indexName, string hashkeyAttribute, DynamoDBEntryType hashKeyType);
    public sealed virtual ITableBuilder AddGlobalSecondaryIndex(string indexName, string hashkeyAttribute, DynamoDBEntryType hashKeyType, string rangeKeyAttribute, DynamoDBEntryType rangeKeyType);
    private static ScalarAttributeType dynamoDBEntryTypeToScalarAttributeType(DynamoDBEntryType entryType);
}
public class Amazon.DynamoDBv2.DocumentModel.TableConfig : object {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MetadataCachingMode> <MetadataCachingMode>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AttributesToStoreAsEpoch>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamoDBConsumer <Consumer>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEmptyStringValueEnabled>k__BackingField;
    public string TableName { get; public set; }
    public Nullable`1<MetadataCachingMode> MetadataCachingMode { get; public set; }
    public DynamoDBEntryConversion Conversion { get; public set; }
    public List`1<string> AttributesToStoreAsEpoch { get; public set; }
    internal DynamoDBConsumer Consumer { get; internal set; }
    internal bool IsEmptyStringValueEnabled { get; internal set; }
    public TableConfig(string tableName);
    internal TableConfig(string tableName, DynamoDBEntryConversion conversion, DynamoDBConsumer consumer, IEnumerable`1<string> storeAsEpoch, bool isEmptyStringValueEnabled, Nullable`1<MetadataCachingMode> metadataCachingMode);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<MetadataCachingMode> get_MetadataCachingMode();
    [CompilerGeneratedAttribute]
public void set_MetadataCachingMode(Nullable`1<MetadataCachingMode> value);
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AttributesToStoreAsEpoch();
    [CompilerGeneratedAttribute]
public void set_AttributesToStoreAsEpoch(List`1<string> value);
    [CompilerGeneratedAttribute]
internal DynamoDBConsumer get_Consumer();
    [CompilerGeneratedAttribute]
internal void set_Consumer(DynamoDBConsumer value);
    [CompilerGeneratedAttribute]
internal bool get_IsEmptyStringValueEnabled();
    [CompilerGeneratedAttribute]
internal void set_IsEmptyStringValueEnabled(bool value);
}
internal class Amazon.DynamoDBv2.DocumentModel.ToConditionCheckTransactWriteRequestItem : TransactWriteRequestItemBase {
    [CompilerGeneratedAttribute]
private Key <Key>k__BackingField;
    public Key Key { get; public set; }
    [CompilerGeneratedAttribute]
public Key get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Key value);
    public virtual TransactWriteItem GetRequest();
}
internal class Amazon.DynamoDBv2.DocumentModel.ToDeleteTransactWriteRequestItem : TransactWriteRequestItemBase {
    [CompilerGeneratedAttribute]
private Key <Key>k__BackingField;
    public Key Key { get; public set; }
    [CompilerGeneratedAttribute]
public Key get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Key value);
    public virtual TransactWriteItem GetRequest();
}
internal class Amazon.DynamoDBv2.DocumentModel.ToPutTransactWriteRequestItem : TransactWriteRequestItemBase {
    [CompilerGeneratedAttribute]
private Document <Document>k__BackingField;
    public Document Document { get; public set; }
    [CompilerGeneratedAttribute]
public Document get_Document();
    [CompilerGeneratedAttribute]
public void set_Document(Document value);
    public virtual TransactWriteItem GetRequest();
    public virtual void CommitChanges();
}
internal abstract class Amazon.DynamoDBv2.DocumentModel.ToUpdateTransactWriteRequestItemBase : TransactWriteRequestItemBase {
    [CompilerGeneratedAttribute]
private Key <Key>k__BackingField;
    public Key Key { get; public set; }
    [CompilerGeneratedAttribute]
public Key get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Key value);
    public sealed virtual TransactWriteItem GetRequest();
    protected abstract virtual bool TryGetUpdateExpression(String& statement, Dictionary`2& expressionAttributeValues, Dictionary`2& expressionAttributes);
}
internal class Amazon.DynamoDBv2.DocumentModel.ToUpdateWithDocumentTransactWriteRequestItem : ToUpdateTransactWriteRequestItemBase {
    [CompilerGeneratedAttribute]
private Document <Document>k__BackingField;
    public Document Document { get; public set; }
    [CompilerGeneratedAttribute]
public Document get_Document();
    [CompilerGeneratedAttribute]
public void set_Document(Document value);
    protected virtual bool TryGetUpdateExpression(String& statement, Dictionary`2& expressionAttributeValues, Dictionary`2& expressionAttributes);
    public virtual void CommitChanges();
}
internal class Amazon.DynamoDBv2.DocumentModel.ToUpdateWithExpressionTransactWriteRequestItem : ToUpdateTransactWriteRequestItemBase {
    [CompilerGeneratedAttribute]
private Expression <UpdateExpression>k__BackingField;
    public Expression UpdateExpression { get; public set; }
    [CompilerGeneratedAttribute]
public Expression get_UpdateExpression();
    [CompilerGeneratedAttribute]
public void set_UpdateExpression(Expression value);
    protected virtual bool TryGetUpdateExpression(String& statement, Dictionary`2& expressionAttributeValues, Dictionary`2& expressionAttributes);
}
public class Amazon.DynamoDBv2.DocumentModel.TransactGetItemOperationConfig : object {
    [CompilerGeneratedAttribute]
private Expression <ProjectionExpression>k__BackingField;
    public Expression ProjectionExpression { get; public set; }
    [CompilerGeneratedAttribute]
public Expression get_ProjectionExpression();
    [CompilerGeneratedAttribute]
public void set_ProjectionExpression(Expression value);
}
internal class Amazon.DynamoDBv2.DocumentModel.TransactGetRequestItem : object {
    [CompilerGeneratedAttribute]
private Key <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentTransactGet <TransactionPart>k__BackingField;
    [CompilerGeneratedAttribute]
private TransactGetItemOperationConfig <OperationConfig>k__BackingField;
    public Key Key { get; public set; }
    public DocumentTransactGet TransactionPart { get; public set; }
    public TransactGetItemOperationConfig OperationConfig { get; public set; }
    [CompilerGeneratedAttribute]
public Key get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Key value);
    [CompilerGeneratedAttribute]
public DocumentTransactGet get_TransactionPart();
    [CompilerGeneratedAttribute]
public void set_TransactionPart(DocumentTransactGet value);
    [CompilerGeneratedAttribute]
public TransactGetItemOperationConfig get_OperationConfig();
    [CompilerGeneratedAttribute]
public void set_OperationConfig(TransactGetItemOperationConfig value);
    public TransactGetItem GetRequest();
}
public class Amazon.DynamoDBv2.DocumentModel.TransactWriteItemOperationConfig : object {
    [CompilerGeneratedAttribute]
private Expression <ConditionalExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ReturnValuesOnConditionCheckFailure <ReturnValuesOnConditionCheckFailure>k__BackingField;
    public Expression ConditionalExpression { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [CompilerGeneratedAttribute]
public Expression get_ConditionalExpression();
    [CompilerGeneratedAttribute]
public void set_ConditionalExpression(Expression value);
    [CompilerGeneratedAttribute]
public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    [CompilerGeneratedAttribute]
public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
}
internal abstract class Amazon.DynamoDBv2.DocumentModel.TransactWriteRequestItemBase : object {
    [CompilerGeneratedAttribute]
private DocumentTransactWrite <TransactionPart>k__BackingField;
    [CompilerGeneratedAttribute]
private TransactWriteItemOperationConfig <OperationConfig>k__BackingField;
    public DocumentTransactWrite TransactionPart { get; public set; }
    public TransactWriteItemOperationConfig OperationConfig { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual DocumentTransactWrite get_TransactionPart();
    [CompilerGeneratedAttribute]
public void set_TransactionPart(DocumentTransactWrite value);
    [CompilerGeneratedAttribute]
public sealed virtual TransactWriteItemOperationConfig get_OperationConfig();
    [CompilerGeneratedAttribute]
public void set_OperationConfig(TransactWriteItemOperationConfig value);
    public abstract virtual TransactWriteItem GetRequest();
    public virtual void CommitChanges();
}
internal class Amazon.DynamoDBv2.DocumentModel.UnconvertedDynamoDBEntry : DynamoDBEntry {
    private object Value;
    private Type ValueType;
    public UnconvertedDynamoDBEntry(object value);
    internal virtual AttributeValue ConvertToAttributeValue(AttributeConversionConfig conversionConfig);
    public DynamoDBEntry Convert(DynamoDBEntryConversion conversion);
    public virtual object Clone();
    public virtual bool AsBoolean();
    public virtual byte AsByte();
    public virtual string AsString();
    public virtual char AsChar();
    public virtual DateTime AsDateTime();
    public virtual DateTime AsDateTimeUtc();
    public virtual decimal AsDecimal();
    public virtual double AsDouble();
    public virtual int AsInt();
    public virtual long AsLong();
    public virtual sbyte AsSByte();
    public virtual short AsShort();
    public virtual float AsSingle();
    public virtual UInt32 AsUInt();
    public virtual ulong AsULong();
    public virtual ushort AsUShort();
    public virtual String[] AsArrayOfString();
    public virtual Byte[] AsByteArray();
    public virtual Guid AsGuid();
    public virtual MemoryStream AsMemoryStream();
    public virtual List`1<string> AsListOfString();
    public virtual HashSet`1<Byte[]> AsHashSetOfByteArray();
    public virtual HashSet`1<MemoryStream> AsHashSetOfMemoryStream();
    public virtual HashSet`1<string> AsHashSetOfString();
    public virtual List`1<Byte[]> AsListOfByteArray();
    public virtual List`1<MemoryStream> AsListOfMemoryStream();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
}
public class Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig : object {
    [CompilerGeneratedAttribute]
private Expression <ConditionalExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private ExpectedState <ExpectedState>k__BackingField;
    [CompilerGeneratedAttribute]
private Document <Expected>k__BackingField;
    [CompilerGeneratedAttribute]
private ReturnValues <ReturnValues>k__BackingField;
    public Expression ConditionalExpression { get; public set; }
    public ExpectedState ExpectedState { get; public set; }
    public Document Expected { get; public set; }
    public ReturnValues ReturnValues { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Expression get_ConditionalExpression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConditionalExpression(Expression value);
    [CompilerGeneratedAttribute]
public sealed virtual ExpectedState get_ExpectedState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExpectedState(ExpectedState value);
    [CompilerGeneratedAttribute]
public sealed virtual Document get_Expected();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expected(Document value);
    [CompilerGeneratedAttribute]
public ReturnValues get_ReturnValues();
    [CompilerGeneratedAttribute]
public void set_ReturnValues(ReturnValues value);
}
internal class Amazon.DynamoDBv2.DocumentModel.WriteRequestDocument : object {
    [CompilerGeneratedAttribute]
private WriteRequest <WriteRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private Document <Document>k__BackingField;
    public WriteRequest WriteRequest { get; public set; }
    public Document Document { get; public set; }
    [CompilerGeneratedAttribute]
public WriteRequest get_WriteRequest();
    [CompilerGeneratedAttribute]
public void set_WriteRequest(WriteRequest value);
    [CompilerGeneratedAttribute]
public Document get_Document();
    [CompilerGeneratedAttribute]
public void set_Document(Document value);
}
internal class Amazon.DynamoDBv2.DoubleConverterV1 : Converter`1<double> {
    protected virtual bool TryTo(double value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Double& result);
}
internal class Amazon.DynamoDBv2.DoubleConverterV2 : DoubleConverterV1 {
}
public class Amazon.DynamoDBv2.DynamoDBEntryConversion : object {
    [CompilerGeneratedAttribute]
private static DynamoDBEntryConversion <V1>k__BackingField;
    [CompilerGeneratedAttribute]
private static DynamoDBEntryConversion <V2>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsImmutable>k__BackingField;
    private ConverterCache ConverterCache;
    private ConversionSchema OriginalConversion;
    public static DynamoDBEntryConversion V1 { get; private set; }
    public static DynamoDBEntryConversion V2 { get; private set; }
    internal static DynamoDBEntryConversion CurrentConversion { get; }
    internal bool IsImmutable { get; private set; }
    private static DynamoDBEntryConversion();
    private DynamoDBEntryConversion(ConversionSchema schema, bool isImmutable);
    [CompilerGeneratedAttribute]
public static DynamoDBEntryConversion get_V1();
    [CompilerGeneratedAttribute]
private static void set_V1(DynamoDBEntryConversion value);
    [CompilerGeneratedAttribute]
public static DynamoDBEntryConversion get_V2();
    [CompilerGeneratedAttribute]
private static void set_V2(DynamoDBEntryConversion value);
    internal static DynamoDBEntryConversion GetConversion(ConversionSchema schema);
    internal static DynamoDBEntryConversion get_CurrentConversion();
    public DynamoDBEntry ConvertToEntry(TInput value);
    public DynamoDBEntry ConvertToEntry(Type inputType, object value);
    public bool TryConvertToEntry(TInput value, DynamoDBEntry& entry);
    public bool TryConvertToEntry(Type inputType, object value, DynamoDBEntry& entry);
    public TOutput ConvertFromEntry(DynamoDBEntry entry);
    public object ConvertFromEntry(Type outputType, DynamoDBEntry entry);
    public bool TryConvertFromEntry(DynamoDBEntry entry, TOutput& output);
    public bool TryConvertFromEntry(Type outputType, DynamoDBEntry entry, Object& value);
    [CompilerGeneratedAttribute]
internal bool get_IsImmutable();
    [CompilerGeneratedAttribute]
private void set_IsImmutable(bool value);
    internal DynamoDBEntryConversion Clone();
    internal bool HasConverter(Type type);
    internal bool TryGetConverter(Type type, Converter& converter);
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DynamoDBEntryConversion/<ConvertToEntries>d__29")]
internal IEnumerable`1<DynamoDBEntry> ConvertToEntries(Type elementType, IEnumerable values);
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DynamoDBEntryConversion/<ConvertToEntries>d__30`1")]
internal IEnumerable`1<DynamoDBEntry> ConvertToEntries(IEnumerable`1<T> values);
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DynamoDBEntryConversion/<ConvertFromEntries>d__31")]
internal IEnumerable`1<object> ConvertFromEntries(Type elementType, IEnumerable`1<DynamoDBEntry> entries);
    internal PrimitiveList ItemsToPrimitiveList(IEnumerable items);
    internal void AddConverter(Converter converter);
    private void SetV1Converters();
    private void SetV2Converters();
    [IteratorStateMachineAttribute("Amazon.DynamoDBv2.DynamoDBEntryConversion/<ToPrimitives>d__38")]
private IEnumerable`1<Primitive> ToPrimitives(IEnumerable items, Type elementType);
}
internal class Amazon.DynamoDBv2.DynamoDBListConverter : CollectionConverter {
    public DynamoDBListConverter(IEnumerable`1<Type> memberTypes);
    public virtual bool TryTo(object value, DynamoDBList& l);
    public virtual bool TryFrom(DynamoDBList l, Type targetType, Object& result);
}
public class Amazon.DynamoDBv2.Endpoints.DynamoDBEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.DynamoDBv2.Endpoints.DynamoDBStreamsEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
internal class Amazon.DynamoDBv2.EnumConverterV1 : Converter`1<Enum> {
    protected virtual bool TryTo(Enum value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Enum& result);
    private Enum ConvertEnum(Primitive p, Type targetType);
    private static Enum ConvertEnum(string s, Type targetType);
}
internal class Amazon.DynamoDBv2.EnumConverterV2 : EnumConverterV1 {
}
public class Amazon.DynamoDBv2.ExportFormat : ConstantClass {
    public static ExportFormat DYNAMODB_JSON;
    public static ExportFormat ION;
    public ExportFormat(string value);
    private static ExportFormat();
    public static ExportFormat FindValue(string value);
    public static ExportFormat op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ExportStatus : ConstantClass {
    public static ExportStatus COMPLETED;
    public static ExportStatus FAILED;
    public static ExportStatus IN_PROGRESS;
    public ExportStatus(string value);
    private static ExportStatus();
    public static ExportStatus FindValue(string value);
    public static ExportStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ExportType : ConstantClass {
    public static ExportType FULL_EXPORT;
    public static ExportType INCREMENTAL_EXPORT;
    public ExportType(string value);
    private static ExportType();
    public static ExportType FindValue(string value);
    public static ExportType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ExportViewType : ConstantClass {
    public static ExportViewType NEW_AND_OLD_IMAGES;
    public static ExportViewType NEW_IMAGE;
    public ExportViewType(string value);
    private static ExportViewType();
    public static ExportViewType FindValue(string value);
    public static ExportViewType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.GlobalTableStatus : ConstantClass {
    public static GlobalTableStatus ACTIVE;
    public static GlobalTableStatus CREATING;
    public static GlobalTableStatus DELETING;
    public static GlobalTableStatus UPDATING;
    public GlobalTableStatus(string value);
    private static GlobalTableStatus();
    public static GlobalTableStatus FindValue(string value);
    public static GlobalTableStatus op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.GuidConverterV1 : Converter`1<Guid> {
    protected virtual bool TryTo(Guid value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Guid& result);
}
internal class Amazon.DynamoDBv2.GuidConverterV2 : GuidConverterV1 {
}
public interface Amazon.DynamoDBv2.IAmazonDynamoDB {
    public IDynamoDBv2PaginatorFactory Paginators { get; }
    public abstract virtual IDynamoDBv2PaginatorFactory get_Paginators();
    public abstract virtual Task`1<BatchExecuteStatementResponse> BatchExecuteStatementAsync(BatchExecuteStatementRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetItemResponse> BatchGetItemAsync(Dictionary`2<string, KeysAndAttributes> requestItems, ReturnConsumedCapacity returnConsumedCapacity, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetItemResponse> BatchGetItemAsync(Dictionary`2<string, KeysAndAttributes> requestItems, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchGetItemResponse> BatchGetItemAsync(BatchGetItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchWriteItemResponse> BatchWriteItemAsync(Dictionary`2<string, List`1<WriteRequest>> requestItems, CancellationToken cancellationToken);
    public abstract virtual Task`1<BatchWriteItemResponse> BatchWriteItemAsync(BatchWriteItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateBackupResponse> CreateBackupAsync(CreateBackupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateGlobalTableResponse> CreateGlobalTableAsync(CreateGlobalTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTableResponse> CreateTableAsync(string tableName, List`1<KeySchemaElement> keySchema, List`1<AttributeDefinition> attributeDefinitions, ProvisionedThroughput provisionedThroughput, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateTableResponse> CreateTableAsync(CreateTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteBackupResponse> DeleteBackupAsync(DeleteBackupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteItemResponse> DeleteItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteItemResponse> DeleteItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, ReturnValue returnValues, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteItemResponse> DeleteItemAsync(DeleteItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteResourcePolicyResponse> DeleteResourcePolicyAsync(DeleteResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTableResponse> DeleteTableAsync(string tableName, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteTableResponse> DeleteTableAsync(DeleteTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeBackupResponse> DescribeBackupAsync(DescribeBackupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeContinuousBackupsResponse> DescribeContinuousBackupsAsync(DescribeContinuousBackupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeContributorInsightsResponse> DescribeContributorInsightsAsync(DescribeContributorInsightsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeEndpointsResponse> DescribeEndpointsAsync(DescribeEndpointsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeExportResponse> DescribeExportAsync(DescribeExportRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeGlobalTableResponse> DescribeGlobalTableAsync(DescribeGlobalTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeGlobalTableSettingsResponse> DescribeGlobalTableSettingsAsync(DescribeGlobalTableSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeImportResponse> DescribeImportAsync(DescribeImportRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeKinesisStreamingDestinationResponse> DescribeKinesisStreamingDestinationAsync(DescribeKinesisStreamingDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeLimitsResponse> DescribeLimitsAsync(DescribeLimitsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTableResponse> DescribeTableAsync(string tableName, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTableResponse> DescribeTableAsync(DescribeTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTableReplicaAutoScalingResponse> DescribeTableReplicaAutoScalingAsync(DescribeTableReplicaAutoScalingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTimeToLiveResponse> DescribeTimeToLiveAsync(string tableName, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeTimeToLiveResponse> DescribeTimeToLiveAsync(DescribeTimeToLiveRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DisableKinesisStreamingDestinationResponse> DisableKinesisStreamingDestinationAsync(DisableKinesisStreamingDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<EnableKinesisStreamingDestinationResponse> EnableKinesisStreamingDestinationAsync(EnableKinesisStreamingDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExecuteStatementResponse> ExecuteStatementAsync(ExecuteStatementRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExecuteTransactionResponse> ExecuteTransactionAsync(ExecuteTransactionRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExportTableToPointInTimeResponse> ExportTableToPointInTimeAsync(ExportTableToPointInTimeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetItemResponse> GetItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetItemResponse> GetItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, Nullable`1<bool> consistentRead, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetItemResponse> GetItemAsync(GetItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetResourcePolicyResponse> GetResourcePolicyAsync(GetResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ImportTableResponse> ImportTableAsync(ImportTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListBackupsResponse> ListBackupsAsync(ListBackupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListContributorInsightsResponse> ListContributorInsightsAsync(ListContributorInsightsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListExportsResponse> ListExportsAsync(ListExportsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListGlobalTablesResponse> ListGlobalTablesAsync(ListGlobalTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListImportsResponse> ListImportsAsync(ListImportsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTablesResponse> ListTablesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTablesResponse> ListTablesAsync(string exclusiveStartTableName, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTablesResponse> ListTablesAsync(string exclusiveStartTableName, Nullable`1<int> limit, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTablesResponse> ListTablesAsync(Nullable`1<int> limit, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTablesResponse> ListTablesAsync(ListTablesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsOfResourceResponse> ListTagsOfResourceAsync(ListTagsOfResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutItemResponse> PutItemAsync(string tableName, Dictionary`2<string, AttributeValue> item, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutItemResponse> PutItemAsync(string tableName, Dictionary`2<string, AttributeValue> item, ReturnValue returnValues, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutItemResponse> PutItemAsync(PutItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PutResourcePolicyResponse> PutResourcePolicyAsync(PutResourcePolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<QueryResponse> QueryAsync(QueryRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreTableFromBackupResponse> RestoreTableFromBackupAsync(RestoreTableFromBackupRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RestoreTableToPointInTimeResponse> RestoreTableToPointInTimeAsync(RestoreTableToPointInTimeRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ScanResponse> ScanAsync(string tableName, List`1<string> attributesToGet, CancellationToken cancellationToken);
    public abstract virtual Task`1<ScanResponse> ScanAsync(string tableName, Dictionary`2<string, Condition> scanFilter, CancellationToken cancellationToken);
    public abstract virtual Task`1<ScanResponse> ScanAsync(string tableName, List`1<string> attributesToGet, Dictionary`2<string, Condition> scanFilter, CancellationToken cancellationToken);
    public abstract virtual Task`1<ScanResponse> ScanAsync(ScanRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TagResourceResponse> TagResourceAsync(TagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TransactGetItemsResponse> TransactGetItemsAsync(TransactGetItemsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TransactWriteItemsResponse> TransactWriteItemsAsync(TransactWriteItemsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateContinuousBackupsResponse> UpdateContinuousBackupsAsync(UpdateContinuousBackupsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateContributorInsightsResponse> UpdateContributorInsightsAsync(UpdateContributorInsightsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateGlobalTableResponse> UpdateGlobalTableAsync(UpdateGlobalTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateGlobalTableSettingsResponse> UpdateGlobalTableSettingsAsync(UpdateGlobalTableSettingsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateItemResponse> UpdateItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, Dictionary`2<string, AttributeValueUpdate> attributeUpdates, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateItemResponse> UpdateItemAsync(string tableName, Dictionary`2<string, AttributeValue> key, Dictionary`2<string, AttributeValueUpdate> attributeUpdates, ReturnValue returnValues, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateItemResponse> UpdateItemAsync(UpdateItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateKinesisStreamingDestinationResponse> UpdateKinesisStreamingDestinationAsync(UpdateKinesisStreamingDestinationRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTableResponse> UpdateTableAsync(string tableName, ProvisionedThroughput provisionedThroughput, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTableResponse> UpdateTableAsync(UpdateTableRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTableReplicaAutoScalingResponse> UpdateTableReplicaAutoScalingAsync(UpdateTableReplicaAutoScalingRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UpdateTimeToLiveResponse> UpdateTimeToLiveAsync(UpdateTimeToLiveRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public interface Amazon.DynamoDBv2.IAmazonDynamoDBStreams {
    public abstract virtual Task`1<DescribeStreamResponse> DescribeStreamAsync(string streamArn, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeStreamResponse> DescribeStreamAsync(DescribeStreamRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetRecordsResponse> GetRecordsAsync(string shardIterator, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetRecordsResponse> GetRecordsAsync(GetRecordsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetShardIteratorResponse> GetShardIteratorAsync(GetShardIteratorRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStreamsResponse> ListStreamsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListStreamsResponse> ListStreamsAsync(ListStreamsRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.DynamoDBv2.ImportStatus : ConstantClass {
    public static ImportStatus CANCELLED;
    public static ImportStatus CANCELLING;
    public static ImportStatus COMPLETED;
    public static ImportStatus FAILED;
    public static ImportStatus IN_PROGRESS;
    public ImportStatus(string value);
    private static ImportStatus();
    public static ImportStatus FindValue(string value);
    public static ImportStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.IndexStatus : ConstantClass {
    public static IndexStatus ACTIVE;
    public static IndexStatus CREATING;
    public static IndexStatus DELETING;
    public static IndexStatus UPDATING;
    public IndexStatus(string value);
    private static IndexStatus();
    public static IndexStatus FindValue(string value);
    public static IndexStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.InputCompressionType : ConstantClass {
    public static InputCompressionType GZIP;
    public static InputCompressionType NONE;
    public static InputCompressionType ZSTD;
    public InputCompressionType(string value);
    private static InputCompressionType();
    public static InputCompressionType FindValue(string value);
    public static InputCompressionType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.InputFormat : ConstantClass {
    public static InputFormat CSV;
    public static InputFormat DYNAMODB_JSON;
    public static InputFormat ION;
    public InputFormat(string value);
    private static InputFormat();
    public static InputFormat FindValue(string value);
    public static InputFormat op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.Int16ConverterV1 : Converter`1<short> {
    protected virtual bool TryTo(short value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Int16& result);
}
internal class Amazon.DynamoDBv2.Int16ConverterV2 : Int16ConverterV1 {
}
internal class Amazon.DynamoDBv2.Int32ConverterV1 : Converter`1<int> {
    protected virtual bool TryTo(int value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Int32& result);
}
internal class Amazon.DynamoDBv2.Int32ConverterV2 : Int32ConverterV1 {
}
internal class Amazon.DynamoDBv2.Int64ConverterV1 : Converter`1<long> {
    protected virtual bool TryTo(long value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Int64& result);
}
internal class Amazon.DynamoDBv2.Int64ConverterV2 : Int64ConverterV1 {
}
public class Amazon.DynamoDBv2.Internal.AmazonDynamoDBEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.DynamoDBv2.Internal.AmazonDynamoDBEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.DynamoDBv2.Internal.AmazonDynamoDBMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.DynamoDBv2.Internal.AmazonDynamoDBStreamsEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.DynamoDBv2.Internal.AmazonDynamoDBStreamsEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.DynamoDBv2.Internal.AmazonDynamoDBStreamsMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.DynamoDBv2.Internal.DynamoDBRetryPolicy : DefaultRetryPolicy {
    public DynamoDBRetryPolicy(IClientConfig config);
    public virtual void WaitBeforeRetry(IExecutionContext executionContext);
    private void pauseExponentially(int retries);
}
public class Amazon.DynamoDBv2.KeyType : ConstantClass {
    public static KeyType HASH;
    public static KeyType RANGE;
    public KeyType(string value);
    private static KeyType();
    public static KeyType FindValue(string value);
    public static KeyType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ListToSetPropertyConverter`1 : SetPropertyConverter`2<List`1<TElement>, TElement> {
}
internal class Amazon.DynamoDBv2.MemoryStreamConverterV1 : Converter`1<MemoryStream> {
    protected virtual bool TryTo(MemoryStream value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, MemoryStream& result);
}
internal class Amazon.DynamoDBv2.MemoryStreamConverterV2 : MemoryStreamConverterV1 {
}
public enum Amazon.DynamoDBv2.MetadataCachingMode : Enum {
    public int value__;
    public static MetadataCachingMode Default;
    public static MetadataCachingMode TableNameOnly;
}
public class Amazon.DynamoDBv2.Model.ArchivalSummary : object {
    private string _archivalBackupArn;
    private Nullable`1<DateTime> _archivalDateTime;
    private string _archivalReason;
    [AWSPropertyAttribute]
public string ArchivalBackupArn { get; public set; }
    public Nullable`1<DateTime> ArchivalDateTime { get; public set; }
    public string ArchivalReason { get; public set; }
    public string get_ArchivalBackupArn();
    public void set_ArchivalBackupArn(string value);
    internal bool IsSetArchivalBackupArn();
    public Nullable`1<DateTime> get_ArchivalDateTime();
    public void set_ArchivalDateTime(Nullable`1<DateTime> value);
    internal bool IsSetArchivalDateTime();
    public string get_ArchivalReason();
    public void set_ArchivalReason(string value);
    internal bool IsSetArchivalReason();
}
public class Amazon.DynamoDBv2.Model.AttributeDefinition : object {
    private string _attributeName;
    private ScalarAttributeType _attributeType;
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    [AWSPropertyAttribute]
public ScalarAttributeType AttributeType { get; public set; }
    public AttributeDefinition(string attributeName, ScalarAttributeType attributeType);
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public ScalarAttributeType get_AttributeType();
    public void set_AttributeType(ScalarAttributeType value);
    internal bool IsSetAttributeType();
}
public class Amazon.DynamoDBv2.Model.AttributeValue : object {
    private MemoryStream _b;
    private Nullable`1<bool> _bool;
    private List`1<MemoryStream> _bs;
    private List`1<AttributeValue> _l;
    private Dictionary`2<string, AttributeValue> _m;
    private string _n;
    private List`1<string> _ns;
    private Nullable`1<bool> _null;
    private string _s;
    private List`1<string> _ss;
    public MemoryStream B { get; public set; }
    public Nullable`1<bool> BOOL { get; public set; }
    public bool IsBOOLSet { get; public set; }
    public List`1<MemoryStream> BS { get; public set; }
    public bool IsBSSet { get; public set; }
    public List`1<AttributeValue> L { get; public set; }
    public bool IsLSet { get; public set; }
    public Dictionary`2<string, AttributeValue> M { get; public set; }
    public bool IsMSet { get; public set; }
    public string N { get; public set; }
    public List`1<string> NS { get; public set; }
    public bool IsNSSet { get; public set; }
    public Nullable`1<bool> NULL { get; public set; }
    public string S { get; public set; }
    public List`1<string> SS { get; public set; }
    public bool IsSSSet { get; public set; }
    public AttributeValue(string s);
    public AttributeValue(List`1<string> ss);
    public MemoryStream get_B();
    public void set_B(MemoryStream value);
    internal bool IsSetB();
    public Nullable`1<bool> get_BOOL();
    public void set_BOOL(Nullable`1<bool> value);
    public bool get_IsBOOLSet();
    public void set_IsBOOLSet(bool value);
    internal bool IsSetBOOL();
    public List`1<MemoryStream> get_BS();
    public void set_BS(List`1<MemoryStream> value);
    public bool get_IsBSSet();
    public void set_IsBSSet(bool value);
    internal bool IsSetBS();
    public List`1<AttributeValue> get_L();
    public void set_L(List`1<AttributeValue> value);
    public bool get_IsLSet();
    public void set_IsLSet(bool value);
    internal bool IsSetL();
    public Dictionary`2<string, AttributeValue> get_M();
    public void set_M(Dictionary`2<string, AttributeValue> value);
    public bool get_IsMSet();
    public void set_IsMSet(bool value);
    internal bool IsSetM();
    public string get_N();
    public void set_N(string value);
    internal bool IsSetN();
    public List`1<string> get_NS();
    public void set_NS(List`1<string> value);
    public bool get_IsNSSet();
    public void set_IsNSSet(bool value);
    internal bool IsSetNS();
    public Nullable`1<bool> get_NULL();
    public void set_NULL(Nullable`1<bool> value);
    internal bool IsSetNULL();
    public string get_S();
    public void set_S(string value);
    internal bool IsSetS();
    public List`1<string> get_SS();
    public void set_SS(List`1<string> value);
    public bool get_IsSSSet();
    public void set_IsSSSet(bool value);
    internal bool IsSetSS();
}
public class Amazon.DynamoDBv2.Model.AttributeValueUpdate : object {
    private AttributeAction _action;
    private AttributeValue _value;
    public AttributeAction Action { get; public set; }
    public AttributeValue Value { get; public set; }
    public AttributeValueUpdate(AttributeValue value, AttributeAction action);
    public AttributeAction get_Action();
    public void set_Action(AttributeAction value);
    internal bool IsSetAction();
    public AttributeValue get_Value();
    public void set_Value(AttributeValue value);
    internal bool IsSetValue();
}
public class Amazon.DynamoDBv2.Model.AutoScalingPolicyDescription : object {
    private string _policyName;
    private AutoScalingTargetTrackingScalingPolicyConfigurationDescription _targetTrackingScalingPolicyConfiguration;
    [AWSPropertyAttribute]
public string PolicyName { get; public set; }
    public AutoScalingTargetTrackingScalingPolicyConfigurationDescription TargetTrackingScalingPolicyConfiguration { get; public set; }
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public AutoScalingTargetTrackingScalingPolicyConfigurationDescription get_TargetTrackingScalingPolicyConfiguration();
    public void set_TargetTrackingScalingPolicyConfiguration(AutoScalingTargetTrackingScalingPolicyConfigurationDescription value);
    internal bool IsSetTargetTrackingScalingPolicyConfiguration();
}
public class Amazon.DynamoDBv2.Model.AutoScalingPolicyUpdate : object {
    private string _policyName;
    private AutoScalingTargetTrackingScalingPolicyConfigurationUpdate _targetTrackingScalingPolicyConfiguration;
    [AWSPropertyAttribute]
public string PolicyName { get; public set; }
    [AWSPropertyAttribute]
public AutoScalingTargetTrackingScalingPolicyConfigurationUpdate TargetTrackingScalingPolicyConfiguration { get; public set; }
    public string get_PolicyName();
    public void set_PolicyName(string value);
    internal bool IsSetPolicyName();
    public AutoScalingTargetTrackingScalingPolicyConfigurationUpdate get_TargetTrackingScalingPolicyConfiguration();
    public void set_TargetTrackingScalingPolicyConfiguration(AutoScalingTargetTrackingScalingPolicyConfigurationUpdate value);
    internal bool IsSetTargetTrackingScalingPolicyConfiguration();
}
public class Amazon.DynamoDBv2.Model.AutoScalingSettingsDescription : object {
    private Nullable`1<bool> _autoScalingDisabled;
    private string _autoScalingRoleArn;
    private Nullable`1<long> _maximumUnits;
    private Nullable`1<long> _minimumUnits;
    private List`1<AutoScalingPolicyDescription> _scalingPolicies;
    public Nullable`1<bool> AutoScalingDisabled { get; public set; }
    public string AutoScalingRoleArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MaximumUnits { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MinimumUnits { get; public set; }
    public List`1<AutoScalingPolicyDescription> ScalingPolicies { get; public set; }
    public Nullable`1<bool> get_AutoScalingDisabled();
    public void set_AutoScalingDisabled(Nullable`1<bool> value);
    internal bool IsSetAutoScalingDisabled();
    public string get_AutoScalingRoleArn();
    public void set_AutoScalingRoleArn(string value);
    internal bool IsSetAutoScalingRoleArn();
    public Nullable`1<long> get_MaximumUnits();
    public void set_MaximumUnits(Nullable`1<long> value);
    internal bool IsSetMaximumUnits();
    public Nullable`1<long> get_MinimumUnits();
    public void set_MinimumUnits(Nullable`1<long> value);
    internal bool IsSetMinimumUnits();
    public List`1<AutoScalingPolicyDescription> get_ScalingPolicies();
    public void set_ScalingPolicies(List`1<AutoScalingPolicyDescription> value);
    internal bool IsSetScalingPolicies();
}
public class Amazon.DynamoDBv2.Model.AutoScalingSettingsUpdate : object {
    private Nullable`1<bool> _autoScalingDisabled;
    private string _autoScalingRoleArn;
    private Nullable`1<long> _maximumUnits;
    private Nullable`1<long> _minimumUnits;
    private AutoScalingPolicyUpdate _scalingPolicyUpdate;
    public Nullable`1<bool> AutoScalingDisabled { get; public set; }
    [AWSPropertyAttribute]
public string AutoScalingRoleArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MaximumUnits { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> MinimumUnits { get; public set; }
    public AutoScalingPolicyUpdate ScalingPolicyUpdate { get; public set; }
    public Nullable`1<bool> get_AutoScalingDisabled();
    public void set_AutoScalingDisabled(Nullable`1<bool> value);
    internal bool IsSetAutoScalingDisabled();
    public string get_AutoScalingRoleArn();
    public void set_AutoScalingRoleArn(string value);
    internal bool IsSetAutoScalingRoleArn();
    public Nullable`1<long> get_MaximumUnits();
    public void set_MaximumUnits(Nullable`1<long> value);
    internal bool IsSetMaximumUnits();
    public Nullable`1<long> get_MinimumUnits();
    public void set_MinimumUnits(Nullable`1<long> value);
    internal bool IsSetMinimumUnits();
    public AutoScalingPolicyUpdate get_ScalingPolicyUpdate();
    public void set_ScalingPolicyUpdate(AutoScalingPolicyUpdate value);
    internal bool IsSetScalingPolicyUpdate();
}
public class Amazon.DynamoDBv2.Model.AutoScalingTargetTrackingScalingPolicyConfigurationDescription : object {
    private Nullable`1<bool> _disableScaleIn;
    private Nullable`1<int> _scaleInCooldown;
    private Nullable`1<int> _scaleOutCooldown;
    private Nullable`1<double> _targetValue;
    public Nullable`1<bool> DisableScaleIn { get; public set; }
    public Nullable`1<int> ScaleInCooldown { get; public set; }
    public Nullable`1<int> ScaleOutCooldown { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> TargetValue { get; public set; }
    public Nullable`1<bool> get_DisableScaleIn();
    public void set_DisableScaleIn(Nullable`1<bool> value);
    internal bool IsSetDisableScaleIn();
    public Nullable`1<int> get_ScaleInCooldown();
    public void set_ScaleInCooldown(Nullable`1<int> value);
    internal bool IsSetScaleInCooldown();
    public Nullable`1<int> get_ScaleOutCooldown();
    public void set_ScaleOutCooldown(Nullable`1<int> value);
    internal bool IsSetScaleOutCooldown();
    public Nullable`1<double> get_TargetValue();
    public void set_TargetValue(Nullable`1<double> value);
    internal bool IsSetTargetValue();
}
public class Amazon.DynamoDBv2.Model.AutoScalingTargetTrackingScalingPolicyConfigurationUpdate : object {
    private Nullable`1<bool> _disableScaleIn;
    private Nullable`1<int> _scaleInCooldown;
    private Nullable`1<int> _scaleOutCooldown;
    private Nullable`1<double> _targetValue;
    public Nullable`1<bool> DisableScaleIn { get; public set; }
    public Nullable`1<int> ScaleInCooldown { get; public set; }
    public Nullable`1<int> ScaleOutCooldown { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<double> TargetValue { get; public set; }
    public Nullable`1<bool> get_DisableScaleIn();
    public void set_DisableScaleIn(Nullable`1<bool> value);
    internal bool IsSetDisableScaleIn();
    public Nullable`1<int> get_ScaleInCooldown();
    public void set_ScaleInCooldown(Nullable`1<int> value);
    internal bool IsSetScaleInCooldown();
    public Nullable`1<int> get_ScaleOutCooldown();
    public void set_ScaleOutCooldown(Nullable`1<int> value);
    internal bool IsSetScaleOutCooldown();
    public Nullable`1<double> get_TargetValue();
    public void set_TargetValue(Nullable`1<double> value);
    internal bool IsSetTargetValue();
}
public class Amazon.DynamoDBv2.Model.BackupDescription : object {
    private BackupDetails _backupDetails;
    private SourceTableDetails _sourceTableDetails;
    private SourceTableFeatureDetails _sourceTableFeatureDetails;
    public BackupDetails BackupDetails { get; public set; }
    public SourceTableDetails SourceTableDetails { get; public set; }
    public SourceTableFeatureDetails SourceTableFeatureDetails { get; public set; }
    public BackupDetails get_BackupDetails();
    public void set_BackupDetails(BackupDetails value);
    internal bool IsSetBackupDetails();
    public SourceTableDetails get_SourceTableDetails();
    public void set_SourceTableDetails(SourceTableDetails value);
    internal bool IsSetSourceTableDetails();
    public SourceTableFeatureDetails get_SourceTableFeatureDetails();
    public void set_SourceTableFeatureDetails(SourceTableFeatureDetails value);
    internal bool IsSetSourceTableFeatureDetails();
}
public class Amazon.DynamoDBv2.Model.BackupDetails : object {
    private string _backupArn;
    private Nullable`1<DateTime> _backupCreationDateTime;
    private Nullable`1<DateTime> _backupExpiryDateTime;
    private string _backupName;
    private Nullable`1<long> _backupSizeBytes;
    private BackupStatus _backupStatus;
    private BackupType _backupType;
    [AWSPropertyAttribute]
public string BackupArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> BackupCreationDateTime { get; public set; }
    public Nullable`1<DateTime> BackupExpiryDateTime { get; public set; }
    [AWSPropertyAttribute]
public string BackupName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> BackupSizeBytes { get; public set; }
    [AWSPropertyAttribute]
public BackupStatus BackupStatus { get; public set; }
    [AWSPropertyAttribute]
public BackupType BackupType { get; public set; }
    public string get_BackupArn();
    public void set_BackupArn(string value);
    internal bool IsSetBackupArn();
    public Nullable`1<DateTime> get_BackupCreationDateTime();
    public void set_BackupCreationDateTime(Nullable`1<DateTime> value);
    internal bool IsSetBackupCreationDateTime();
    public Nullable`1<DateTime> get_BackupExpiryDateTime();
    public void set_BackupExpiryDateTime(Nullable`1<DateTime> value);
    internal bool IsSetBackupExpiryDateTime();
    public string get_BackupName();
    public void set_BackupName(string value);
    internal bool IsSetBackupName();
    public Nullable`1<long> get_BackupSizeBytes();
    public void set_BackupSizeBytes(Nullable`1<long> value);
    internal bool IsSetBackupSizeBytes();
    public BackupStatus get_BackupStatus();
    public void set_BackupStatus(BackupStatus value);
    internal bool IsSetBackupStatus();
    public BackupType get_BackupType();
    public void set_BackupType(BackupType value);
    internal bool IsSetBackupType();
}
public class Amazon.DynamoDBv2.Model.BackupInUseException : AmazonDynamoDBException {
    public BackupInUseException(string message);
    public BackupInUseException(string message, Exception innerException);
    public BackupInUseException(Exception innerException);
    public BackupInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BackupInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.BackupNotFoundException : AmazonDynamoDBException {
    public BackupNotFoundException(string message);
    public BackupNotFoundException(string message, Exception innerException);
    public BackupNotFoundException(Exception innerException);
    public BackupNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public BackupNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.BackupSummary : object {
    private string _backupArn;
    private Nullable`1<DateTime> _backupCreationDateTime;
    private Nullable`1<DateTime> _backupExpiryDateTime;
    private string _backupName;
    private Nullable`1<long> _backupSizeBytes;
    private BackupStatus _backupStatus;
    private BackupType _backupType;
    private string _tableArn;
    private string _tableId;
    private string _tableName;
    [AWSPropertyAttribute]
public string BackupArn { get; public set; }
    public Nullable`1<DateTime> BackupCreationDateTime { get; public set; }
    public Nullable`1<DateTime> BackupExpiryDateTime { get; public set; }
    [AWSPropertyAttribute]
public string BackupName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> BackupSizeBytes { get; public set; }
    public BackupStatus BackupStatus { get; public set; }
    public BackupType BackupType { get; public set; }
    [AWSPropertyAttribute]
public string TableArn { get; public set; }
    public string TableId { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_BackupArn();
    public void set_BackupArn(string value);
    internal bool IsSetBackupArn();
    public Nullable`1<DateTime> get_BackupCreationDateTime();
    public void set_BackupCreationDateTime(Nullable`1<DateTime> value);
    internal bool IsSetBackupCreationDateTime();
    public Nullable`1<DateTime> get_BackupExpiryDateTime();
    public void set_BackupExpiryDateTime(Nullable`1<DateTime> value);
    internal bool IsSetBackupExpiryDateTime();
    public string get_BackupName();
    public void set_BackupName(string value);
    internal bool IsSetBackupName();
    public Nullable`1<long> get_BackupSizeBytes();
    public void set_BackupSizeBytes(Nullable`1<long> value);
    internal bool IsSetBackupSizeBytes();
    public BackupStatus get_BackupStatus();
    public void set_BackupStatus(BackupStatus value);
    internal bool IsSetBackupStatus();
    public BackupType get_BackupType();
    public void set_BackupType(BackupType value);
    internal bool IsSetBackupType();
    public string get_TableArn();
    public void set_TableArn(string value);
    internal bool IsSetTableArn();
    public string get_TableId();
    public void set_TableId(string value);
    internal bool IsSetTableId();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.BatchExecuteStatementRequest : AmazonDynamoDBRequest {
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private List`1<BatchStatementRequest> _statements;
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    [AWSPropertyAttribute]
public List`1<BatchStatementRequest> Statements { get; public set; }
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public List`1<BatchStatementRequest> get_Statements();
    public void set_Statements(List`1<BatchStatementRequest> value);
    internal bool IsSetStatements();
}
public class Amazon.DynamoDBv2.Model.BatchExecuteStatementResponse : AmazonWebServiceResponse {
    private List`1<ConsumedCapacity> _consumedCapacity;
    private List`1<BatchStatementResponse> _responses;
    public List`1<ConsumedCapacity> ConsumedCapacity { get; public set; }
    public List`1<BatchStatementResponse> Responses { get; public set; }
    public List`1<ConsumedCapacity> get_ConsumedCapacity();
    public void set_ConsumedCapacity(List`1<ConsumedCapacity> value);
    internal bool IsSetConsumedCapacity();
    public List`1<BatchStatementResponse> get_Responses();
    public void set_Responses(List`1<BatchStatementResponse> value);
    internal bool IsSetResponses();
}
internal class Amazon.DynamoDBv2.Model.BatchGetItemPaginator : object {
    private IAmazonDynamoDB _client;
    private BatchGetItemRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<BatchGetItemResponse> Responses { get; }
    internal BatchGetItemPaginator(IAmazonDynamoDB client, BatchGetItemRequest request);
    public sealed virtual IPaginatedEnumerable`1<BatchGetItemResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DynamoDBv2.Model.BatchGetItemPaginator/<Amazon-Runtime-IPaginator<Amazon-DynamoDBv2-Model-BatchGetItemResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<BatchGetItemResponse> Amazon.Runtime.IPaginator<Amazon.DynamoDBv2.Model.BatchGetItemResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.Model.BatchGetItemRequest : AmazonDynamoDBRequest {
    private Dictionary`2<string, KeysAndAttributes> _requestItems;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    [AWSPropertyAttribute]
public Dictionary`2<string, KeysAndAttributes> RequestItems { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public BatchGetItemRequest(Dictionary`2<string, KeysAndAttributes> requestItems);
    public BatchGetItemRequest(Dictionary`2<string, KeysAndAttributes> requestItems, ReturnConsumedCapacity returnConsumedCapacity);
    public Dictionary`2<string, KeysAndAttributes> get_RequestItems();
    public void set_RequestItems(Dictionary`2<string, KeysAndAttributes> value);
    internal bool IsSetRequestItems();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
}
public class Amazon.DynamoDBv2.Model.BatchGetItemResponse : AmazonWebServiceResponse {
    private List`1<ConsumedCapacity> _consumedCapacity;
    private Dictionary`2<string, List`1<Dictionary`2<string, AttributeValue>>> _responses;
    private Dictionary`2<string, KeysAndAttributes> _unprocessedKeys;
    public List`1<ConsumedCapacity> ConsumedCapacity { get; public set; }
    public Dictionary`2<string, List`1<Dictionary`2<string, AttributeValue>>> Responses { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, KeysAndAttributes> UnprocessedKeys { get; public set; }
    public List`1<ConsumedCapacity> get_ConsumedCapacity();
    public void set_ConsumedCapacity(List`1<ConsumedCapacity> value);
    internal bool IsSetConsumedCapacity();
    public Dictionary`2<string, List`1<Dictionary`2<string, AttributeValue>>> get_Responses();
    public void set_Responses(Dictionary`2<string, List`1<Dictionary`2<string, AttributeValue>>> value);
    internal bool IsSetResponses();
    public Dictionary`2<string, KeysAndAttributes> get_UnprocessedKeys();
    public void set_UnprocessedKeys(Dictionary`2<string, KeysAndAttributes> value);
    internal bool IsSetUnprocessedKeys();
}
public class Amazon.DynamoDBv2.Model.BatchStatementError : object {
    private BatchStatementErrorCodeEnum _code;
    private Dictionary`2<string, AttributeValue> _item;
    private string _message;
    public BatchStatementErrorCodeEnum Code { get; public set; }
    public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public string Message { get; public set; }
    public BatchStatementErrorCodeEnum get_Code();
    public void set_Code(BatchStatementErrorCodeEnum value);
    internal bool IsSetCode();
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItem();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.DynamoDBv2.Model.BatchStatementRequest : object {
    private Nullable`1<bool> _consistentRead;
    private List`1<AttributeValue> _parameters;
    private ReturnValuesOnConditionCheckFailure _returnValuesOnConditionCheckFailure;
    private string _statement;
    public Nullable`1<bool> ConsistentRead { get; public set; }
    [AWSPropertyAttribute]
public List`1<AttributeValue> Parameters { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [AWSPropertyAttribute]
public string Statement { get; public set; }
    public Nullable`1<bool> get_ConsistentRead();
    public void set_ConsistentRead(Nullable`1<bool> value);
    internal bool IsSetConsistentRead();
    public List`1<AttributeValue> get_Parameters();
    public void set_Parameters(List`1<AttributeValue> value);
    internal bool IsSetParameters();
    public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
    internal bool IsSetReturnValuesOnConditionCheckFailure();
    public string get_Statement();
    public void set_Statement(string value);
    internal bool IsSetStatement();
}
public class Amazon.DynamoDBv2.Model.BatchStatementResponse : object {
    private BatchStatementError _error;
    private Dictionary`2<string, AttributeValue> _item;
    private string _tableName;
    public BatchStatementError Error { get; public set; }
    public Dictionary`2<string, AttributeValue> Item { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public BatchStatementError get_Error();
    public void set_Error(BatchStatementError value);
    internal bool IsSetError();
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItem();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.BatchWriteItemRequest : AmazonDynamoDBRequest {
    private Dictionary`2<string, List`1<WriteRequest>> _requestItems;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private ReturnItemCollectionMetrics _returnItemCollectionMetrics;
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<WriteRequest>> RequestItems { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public ReturnItemCollectionMetrics ReturnItemCollectionMetrics { get; public set; }
    public BatchWriteItemRequest(Dictionary`2<string, List`1<WriteRequest>> requestItems);
    public Dictionary`2<string, List`1<WriteRequest>> get_RequestItems();
    public void set_RequestItems(Dictionary`2<string, List`1<WriteRequest>> value);
    internal bool IsSetRequestItems();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public ReturnItemCollectionMetrics get_ReturnItemCollectionMetrics();
    public void set_ReturnItemCollectionMetrics(ReturnItemCollectionMetrics value);
    internal bool IsSetReturnItemCollectionMetrics();
}
public class Amazon.DynamoDBv2.Model.BatchWriteItemResponse : AmazonWebServiceResponse {
    private List`1<ConsumedCapacity> _consumedCapacity;
    private Dictionary`2<string, List`1<ItemCollectionMetrics>> _itemCollectionMetrics;
    private Dictionary`2<string, List`1<WriteRequest>> _unprocessedItems;
    public List`1<ConsumedCapacity> ConsumedCapacity { get; public set; }
    public Dictionary`2<string, List`1<ItemCollectionMetrics>> ItemCollectionMetrics { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, List`1<WriteRequest>> UnprocessedItems { get; public set; }
    public List`1<ConsumedCapacity> get_ConsumedCapacity();
    public void set_ConsumedCapacity(List`1<ConsumedCapacity> value);
    internal bool IsSetConsumedCapacity();
    public Dictionary`2<string, List`1<ItemCollectionMetrics>> get_ItemCollectionMetrics();
    public void set_ItemCollectionMetrics(Dictionary`2<string, List`1<ItemCollectionMetrics>> value);
    internal bool IsSetItemCollectionMetrics();
    public Dictionary`2<string, List`1<WriteRequest>> get_UnprocessedItems();
    public void set_UnprocessedItems(Dictionary`2<string, List`1<WriteRequest>> value);
    internal bool IsSetUnprocessedItems();
}
public class Amazon.DynamoDBv2.Model.BillingModeSummary : object {
    private BillingMode _billingMode;
    private Nullable`1<DateTime> _lastUpdateToPayPerRequestDateTime;
    public BillingMode BillingMode { get; public set; }
    public Nullable`1<DateTime> LastUpdateToPayPerRequestDateTime { get; public set; }
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public Nullable`1<DateTime> get_LastUpdateToPayPerRequestDateTime();
    public void set_LastUpdateToPayPerRequestDateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdateToPayPerRequestDateTime();
}
public class Amazon.DynamoDBv2.Model.CancellationReason : object {
    private string _code;
    private Dictionary`2<string, AttributeValue> _item;
    private string _message;
    public string Code { get; public set; }
    public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public string Message { get; public set; }
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItem();
    public string get_Message();
    public void set_Message(string value);
    internal bool IsSetMessage();
}
public class Amazon.DynamoDBv2.Model.Capacity : object {
    private Nullable`1<double> _capacityUnits;
    private Nullable`1<double> _readCapacityUnits;
    private Nullable`1<double> _writeCapacityUnits;
    public Nullable`1<double> CapacityUnits { get; public set; }
    public Nullable`1<double> ReadCapacityUnits { get; public set; }
    public Nullable`1<double> WriteCapacityUnits { get; public set; }
    public Nullable`1<double> get_CapacityUnits();
    public void set_CapacityUnits(Nullable`1<double> value);
    internal bool IsSetCapacityUnits();
    public Nullable`1<double> get_ReadCapacityUnits();
    public void set_ReadCapacityUnits(Nullable`1<double> value);
    internal bool IsSetReadCapacityUnits();
    public Nullable`1<double> get_WriteCapacityUnits();
    public void set_WriteCapacityUnits(Nullable`1<double> value);
    internal bool IsSetWriteCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.Condition : object {
    private List`1<AttributeValue> _attributeValueList;
    private ComparisonOperator _comparisonOperator;
    public List`1<AttributeValue> AttributeValueList { get; public set; }
    [AWSPropertyAttribute]
public ComparisonOperator ComparisonOperator { get; public set; }
    public List`1<AttributeValue> get_AttributeValueList();
    public void set_AttributeValueList(List`1<AttributeValue> value);
    internal bool IsSetAttributeValueList();
    public ComparisonOperator get_ComparisonOperator();
    public void set_ComparisonOperator(ComparisonOperator value);
    internal bool IsSetComparisonOperator();
}
public class Amazon.DynamoDBv2.Model.ConditionalCheckFailedException : AmazonDynamoDBException {
    private Dictionary`2<string, AttributeValue> _item;
    public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public ConditionalCheckFailedException(string message);
    public ConditionalCheckFailedException(string message, Exception innerException);
    public ConditionalCheckFailedException(Exception innerException);
    public ConditionalCheckFailedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ConditionalCheckFailedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItem();
}
public class Amazon.DynamoDBv2.Model.ConditionCheck : object {
    private string _conditionExpression;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private Dictionary`2<string, AttributeValue> _key;
    private ReturnValuesOnConditionCheckFailure _returnValuesOnConditionCheckFailure;
    private string _tableName;
    [AWSPropertyAttribute]
public string ConditionExpression { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_ConditionExpression();
    public void set_ConditionExpression(string value);
    internal bool IsSetConditionExpression();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
    public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
    internal bool IsSetReturnValuesOnConditionCheckFailure();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.ConsumedCapacity : object {
    private Nullable`1<double> _capacityUnits;
    private Dictionary`2<string, Capacity> _globalSecondaryIndexes;
    private Dictionary`2<string, Capacity> _localSecondaryIndexes;
    private Nullable`1<double> _readCapacityUnits;
    private Capacity _table;
    private string _tableName;
    private Nullable`1<double> _writeCapacityUnits;
    public Nullable`1<double> CapacityUnits { get; public set; }
    public Dictionary`2<string, Capacity> GlobalSecondaryIndexes { get; public set; }
    public Dictionary`2<string, Capacity> LocalSecondaryIndexes { get; public set; }
    public Nullable`1<double> ReadCapacityUnits { get; public set; }
    public Capacity Table { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public Nullable`1<double> WriteCapacityUnits { get; public set; }
    public Nullable`1<double> get_CapacityUnits();
    public void set_CapacityUnits(Nullable`1<double> value);
    internal bool IsSetCapacityUnits();
    public Dictionary`2<string, Capacity> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(Dictionary`2<string, Capacity> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public Dictionary`2<string, Capacity> get_LocalSecondaryIndexes();
    public void set_LocalSecondaryIndexes(Dictionary`2<string, Capacity> value);
    internal bool IsSetLocalSecondaryIndexes();
    public Nullable`1<double> get_ReadCapacityUnits();
    public void set_ReadCapacityUnits(Nullable`1<double> value);
    internal bool IsSetReadCapacityUnits();
    public Capacity get_Table();
    public void set_Table(Capacity value);
    internal bool IsSetTable();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public Nullable`1<double> get_WriteCapacityUnits();
    public void set_WriteCapacityUnits(Nullable`1<double> value);
    internal bool IsSetWriteCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.ContinuousBackupsDescription : object {
    private ContinuousBackupsStatus _continuousBackupsStatus;
    private PointInTimeRecoveryDescription _pointInTimeRecoveryDescription;
    [AWSPropertyAttribute]
public ContinuousBackupsStatus ContinuousBackupsStatus { get; public set; }
    public PointInTimeRecoveryDescription PointInTimeRecoveryDescription { get; public set; }
    public ContinuousBackupsStatus get_ContinuousBackupsStatus();
    public void set_ContinuousBackupsStatus(ContinuousBackupsStatus value);
    internal bool IsSetContinuousBackupsStatus();
    public PointInTimeRecoveryDescription get_PointInTimeRecoveryDescription();
    public void set_PointInTimeRecoveryDescription(PointInTimeRecoveryDescription value);
    internal bool IsSetPointInTimeRecoveryDescription();
}
public class Amazon.DynamoDBv2.Model.ContinuousBackupsUnavailableException : AmazonDynamoDBException {
    public ContinuousBackupsUnavailableException(string message);
    public ContinuousBackupsUnavailableException(string message, Exception innerException);
    public ContinuousBackupsUnavailableException(Exception innerException);
    public ContinuousBackupsUnavailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ContinuousBackupsUnavailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ContributorInsightsSummary : object {
    private ContributorInsightsStatus _contributorInsightsStatus;
    private string _indexName;
    private string _tableName;
    public ContributorInsightsStatus ContributorInsightsStatus { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public ContributorInsightsStatus get_ContributorInsightsStatus();
    public void set_ContributorInsightsStatus(ContributorInsightsStatus value);
    internal bool IsSetContributorInsightsStatus();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.CreateBackupRequest : AmazonDynamoDBRequest {
    private string _backupName;
    private string _tableName;
    [AWSPropertyAttribute]
public string BackupName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_BackupName();
    public void set_BackupName(string value);
    internal bool IsSetBackupName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.CreateBackupResponse : AmazonWebServiceResponse {
    private BackupDetails _backupDetails;
    public BackupDetails BackupDetails { get; public set; }
    public BackupDetails get_BackupDetails();
    public void set_BackupDetails(BackupDetails value);
    internal bool IsSetBackupDetails();
}
public class Amazon.DynamoDBv2.Model.CreateGlobalSecondaryIndexAction : object {
    private string _indexName;
    private List`1<KeySchemaElement> _keySchema;
    private OnDemandThroughput _onDemandThroughput;
    private Projection _projection;
    private ProvisionedThroughput _provisionedThroughput;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    public OnDemandThroughput OnDemandThroughput { get; public set; }
    [AWSPropertyAttribute]
public Projection Projection { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public OnDemandThroughput get_OnDemandThroughput();
    public void set_OnDemandThroughput(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughput();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
}
public class Amazon.DynamoDBv2.Model.CreateGlobalTableRequest : AmazonDynamoDBRequest {
    private string _globalTableName;
    private List`1<Replica> _replicationGroup;
    [AWSPropertyAttribute]
public string GlobalTableName { get; public set; }
    [AWSPropertyAttribute]
public List`1<Replica> ReplicationGroup { get; public set; }
    public string get_GlobalTableName();
    public void set_GlobalTableName(string value);
    internal bool IsSetGlobalTableName();
    public List`1<Replica> get_ReplicationGroup();
    public void set_ReplicationGroup(List`1<Replica> value);
    internal bool IsSetReplicationGroup();
}
public class Amazon.DynamoDBv2.Model.CreateGlobalTableResponse : AmazonWebServiceResponse {
    private GlobalTableDescription _globalTableDescription;
    public GlobalTableDescription GlobalTableDescription { get; public set; }
    public GlobalTableDescription get_GlobalTableDescription();
    public void set_GlobalTableDescription(GlobalTableDescription value);
    internal bool IsSetGlobalTableDescription();
}
public class Amazon.DynamoDBv2.Model.CreateReplicaAction : object {
    private string _regionName;
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.DynamoDBv2.Model.CreateReplicationGroupMemberAction : object {
    private List`1<ReplicaGlobalSecondaryIndex> _globalSecondaryIndexes;
    private string _kmsMasterKeyId;
    private OnDemandThroughputOverride _onDemandThroughputOverride;
    private ProvisionedThroughputOverride _provisionedThroughputOverride;
    private string _regionName;
    private TableClass _tableClassOverride;
    [AWSPropertyAttribute]
public List`1<ReplicaGlobalSecondaryIndex> GlobalSecondaryIndexes { get; public set; }
    public string KMSMasterKeyId { get; public set; }
    public OnDemandThroughputOverride OnDemandThroughputOverride { get; public set; }
    public ProvisionedThroughputOverride ProvisionedThroughputOverride { get; public set; }
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public TableClass TableClassOverride { get; public set; }
    public List`1<ReplicaGlobalSecondaryIndex> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(List`1<ReplicaGlobalSecondaryIndex> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public string get_KMSMasterKeyId();
    public void set_KMSMasterKeyId(string value);
    internal bool IsSetKMSMasterKeyId();
    public OnDemandThroughputOverride get_OnDemandThroughputOverride();
    public void set_OnDemandThroughputOverride(OnDemandThroughputOverride value);
    internal bool IsSetOnDemandThroughputOverride();
    public ProvisionedThroughputOverride get_ProvisionedThroughputOverride();
    public void set_ProvisionedThroughputOverride(ProvisionedThroughputOverride value);
    internal bool IsSetProvisionedThroughputOverride();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public TableClass get_TableClassOverride();
    public void set_TableClassOverride(TableClass value);
    internal bool IsSetTableClassOverride();
}
public class Amazon.DynamoDBv2.Model.CreateTableRequest : AmazonDynamoDBRequest {
    private List`1<AttributeDefinition> _attributeDefinitions;
    private BillingMode _billingMode;
    private Nullable`1<bool> _deletionProtectionEnabled;
    private List`1<GlobalSecondaryIndex> _globalSecondaryIndexes;
    private List`1<KeySchemaElement> _keySchema;
    private List`1<LocalSecondaryIndex> _localSecondaryIndexes;
    private OnDemandThroughput _onDemandThroughput;
    private ProvisionedThroughput _provisionedThroughput;
    private string _resourcePolicy;
    private SSESpecification _sseSpecification;
    private StreamSpecification _streamSpecification;
    private TableClass _tableClass;
    private string _tableName;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public List`1<AttributeDefinition> AttributeDefinitions { get; public set; }
    public BillingMode BillingMode { get; public set; }
    public Nullable`1<bool> DeletionProtectionEnabled { get; public set; }
    public List`1<GlobalSecondaryIndex> GlobalSecondaryIndexes { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    public List`1<LocalSecondaryIndex> LocalSecondaryIndexes { get; public set; }
    public OnDemandThroughput OnDemandThroughput { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public string ResourcePolicy { get; public set; }
    public SSESpecification SSESpecification { get; public set; }
    public StreamSpecification StreamSpecification { get; public set; }
    public TableClass TableClass { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public CreateTableRequest(string tableName, List`1<KeySchemaElement> keySchema);
    public CreateTableRequest(string tableName, List`1<KeySchemaElement> keySchema, List`1<AttributeDefinition> attributeDefinitions, ProvisionedThroughput provisionedThroughput);
    public List`1<AttributeDefinition> get_AttributeDefinitions();
    public void set_AttributeDefinitions(List`1<AttributeDefinition> value);
    internal bool IsSetAttributeDefinitions();
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public Nullable`1<bool> get_DeletionProtectionEnabled();
    public void set_DeletionProtectionEnabled(Nullable`1<bool> value);
    internal bool IsSetDeletionProtectionEnabled();
    public List`1<GlobalSecondaryIndex> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(List`1<GlobalSecondaryIndex> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public List`1<LocalSecondaryIndex> get_LocalSecondaryIndexes();
    public void set_LocalSecondaryIndexes(List`1<LocalSecondaryIndex> value);
    internal bool IsSetLocalSecondaryIndexes();
    public OnDemandThroughput get_OnDemandThroughput();
    public void set_OnDemandThroughput(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughput();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
    public string get_ResourcePolicy();
    public void set_ResourcePolicy(string value);
    internal bool IsSetResourcePolicy();
    public SSESpecification get_SSESpecification();
    public void set_SSESpecification(SSESpecification value);
    internal bool IsSetSSESpecification();
    public StreamSpecification get_StreamSpecification();
    public void set_StreamSpecification(StreamSpecification value);
    internal bool IsSetStreamSpecification();
    public TableClass get_TableClass();
    public void set_TableClass(TableClass value);
    internal bool IsSetTableClass();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.DynamoDBv2.Model.CreateTableResponse : AmazonWebServiceResponse {
    private TableDescription _tableDescription;
    public TableDescription TableDescription { get; public set; }
    public TableDescription get_TableDescription();
    public void set_TableDescription(TableDescription value);
    internal bool IsSetTableDescription();
}
public class Amazon.DynamoDBv2.Model.CsvOptions : object {
    private string _delimiter;
    private List`1<string> _headerList;
    [AWSPropertyAttribute]
public string Delimiter { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> HeaderList { get; public set; }
    public string get_Delimiter();
    public void set_Delimiter(string value);
    internal bool IsSetDelimiter();
    public List`1<string> get_HeaderList();
    public void set_HeaderList(List`1<string> value);
    internal bool IsSetHeaderList();
}
public class Amazon.DynamoDBv2.Model.Delete : object {
    private string _conditionExpression;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private Dictionary`2<string, AttributeValue> _key;
    private ReturnValuesOnConditionCheckFailure _returnValuesOnConditionCheckFailure;
    private string _tableName;
    public string ConditionExpression { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_ConditionExpression();
    public void set_ConditionExpression(string value);
    internal bool IsSetConditionExpression();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
    public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
    internal bool IsSetReturnValuesOnConditionCheckFailure();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DeleteBackupRequest : AmazonDynamoDBRequest {
    private string _backupArn;
    [AWSPropertyAttribute]
public string BackupArn { get; public set; }
    public string get_BackupArn();
    public void set_BackupArn(string value);
    internal bool IsSetBackupArn();
}
public class Amazon.DynamoDBv2.Model.DeleteBackupResponse : AmazonWebServiceResponse {
    private BackupDescription _backupDescription;
    public BackupDescription BackupDescription { get; public set; }
    public BackupDescription get_BackupDescription();
    public void set_BackupDescription(BackupDescription value);
    internal bool IsSetBackupDescription();
}
public class Amazon.DynamoDBv2.Model.DeleteGlobalSecondaryIndexAction : object {
    private string _indexName;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
}
public class Amazon.DynamoDBv2.Model.DeleteItemRequest : AmazonDynamoDBRequest {
    private ConditionalOperator _conditionalOperator;
    private string _conditionExpression;
    private Dictionary`2<string, ExpectedAttributeValue> _expected;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private Dictionary`2<string, AttributeValue> _key;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private ReturnItemCollectionMetrics _returnItemCollectionMetrics;
    private ReturnValue _returnValues;
    private ReturnValuesOnConditionCheckFailure _returnValuesOnConditionCheckFailure;
    private string _tableName;
    public ConditionalOperator ConditionalOperator { get; public set; }
    public string ConditionExpression { get; public set; }
    public Dictionary`2<string, ExpectedAttributeValue> Expected { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public ReturnItemCollectionMetrics ReturnItemCollectionMetrics { get; public set; }
    public ReturnValue ReturnValues { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public DeleteItemRequest(string tableName, Dictionary`2<string, AttributeValue> key);
    public DeleteItemRequest(string tableName, Dictionary`2<string, AttributeValue> key, ReturnValue returnValues);
    public ConditionalOperator get_ConditionalOperator();
    public void set_ConditionalOperator(ConditionalOperator value);
    internal bool IsSetConditionalOperator();
    public string get_ConditionExpression();
    public void set_ConditionExpression(string value);
    internal bool IsSetConditionExpression();
    public Dictionary`2<string, ExpectedAttributeValue> get_Expected();
    public void set_Expected(Dictionary`2<string, ExpectedAttributeValue> value);
    internal bool IsSetExpected();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public ReturnItemCollectionMetrics get_ReturnItemCollectionMetrics();
    public void set_ReturnItemCollectionMetrics(ReturnItemCollectionMetrics value);
    internal bool IsSetReturnItemCollectionMetrics();
    public ReturnValue get_ReturnValues();
    public void set_ReturnValues(ReturnValue value);
    internal bool IsSetReturnValues();
    public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
    internal bool IsSetReturnValuesOnConditionCheckFailure();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DeleteItemResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, AttributeValue> _attributes;
    private ConsumedCapacity _consumedCapacity;
    private ItemCollectionMetrics _itemCollectionMetrics;
    public Dictionary`2<string, AttributeValue> Attributes { get; public set; }
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public ItemCollectionMetrics ItemCollectionMetrics { get; public set; }
    public Dictionary`2<string, AttributeValue> get_Attributes();
    public void set_Attributes(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetAttributes();
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public ItemCollectionMetrics get_ItemCollectionMetrics();
    public void set_ItemCollectionMetrics(ItemCollectionMetrics value);
    internal bool IsSetItemCollectionMetrics();
}
public class Amazon.DynamoDBv2.Model.DeleteReplicaAction : object {
    private string _regionName;
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.DynamoDBv2.Model.DeleteReplicationGroupMemberAction : object {
    private string _regionName;
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.DynamoDBv2.Model.DeleteRequest : object {
    private Dictionary`2<string, AttributeValue> _key;
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public DeleteRequest(Dictionary`2<string, AttributeValue> key);
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
}
public class Amazon.DynamoDBv2.Model.DeleteResourcePolicyRequest : AmazonDynamoDBRequest {
    private string _expectedRevisionId;
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ExpectedRevisionId { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ExpectedRevisionId();
    public void set_ExpectedRevisionId(string value);
    internal bool IsSetExpectedRevisionId();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.DynamoDBv2.Model.DeleteResourcePolicyResponse : AmazonWebServiceResponse {
    private string _revisionId;
    [AWSPropertyAttribute]
public string RevisionId { get; public set; }
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
}
public class Amazon.DynamoDBv2.Model.DeleteTableRequest : AmazonDynamoDBRequest {
    private string _tableName;
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public DeleteTableRequest(string tableName);
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DeleteTableResponse : AmazonWebServiceResponse {
    private TableDescription _tableDescription;
    public TableDescription TableDescription { get; public set; }
    public TableDescription get_TableDescription();
    public void set_TableDescription(TableDescription value);
    internal bool IsSetTableDescription();
}
public class Amazon.DynamoDBv2.Model.DescribeBackupRequest : AmazonDynamoDBRequest {
    private string _backupArn;
    [AWSPropertyAttribute]
public string BackupArn { get; public set; }
    public string get_BackupArn();
    public void set_BackupArn(string value);
    internal bool IsSetBackupArn();
}
public class Amazon.DynamoDBv2.Model.DescribeBackupResponse : AmazonWebServiceResponse {
    private BackupDescription _backupDescription;
    public BackupDescription BackupDescription { get; public set; }
    public BackupDescription get_BackupDescription();
    public void set_BackupDescription(BackupDescription value);
    internal bool IsSetBackupDescription();
}
public class Amazon.DynamoDBv2.Model.DescribeContinuousBackupsRequest : AmazonDynamoDBRequest {
    private string _tableName;
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeContinuousBackupsResponse : AmazonWebServiceResponse {
    private ContinuousBackupsDescription _continuousBackupsDescription;
    public ContinuousBackupsDescription ContinuousBackupsDescription { get; public set; }
    public ContinuousBackupsDescription get_ContinuousBackupsDescription();
    public void set_ContinuousBackupsDescription(ContinuousBackupsDescription value);
    internal bool IsSetContinuousBackupsDescription();
}
public class Amazon.DynamoDBv2.Model.DescribeContributorInsightsRequest : AmazonDynamoDBRequest {
    private string _indexName;
    private string _tableName;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeContributorInsightsResponse : AmazonWebServiceResponse {
    private List`1<string> _contributorInsightsRuleList;
    private ContributorInsightsStatus _contributorInsightsStatus;
    private FailureException _failureException;
    private string _indexName;
    private Nullable`1<DateTime> _lastUpdateDateTime;
    private string _tableName;
    public List`1<string> ContributorInsightsRuleList { get; public set; }
    public ContributorInsightsStatus ContributorInsightsStatus { get; public set; }
    public FailureException FailureException { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public Nullable`1<DateTime> LastUpdateDateTime { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public List`1<string> get_ContributorInsightsRuleList();
    public void set_ContributorInsightsRuleList(List`1<string> value);
    internal bool IsSetContributorInsightsRuleList();
    public ContributorInsightsStatus get_ContributorInsightsStatus();
    public void set_ContributorInsightsStatus(ContributorInsightsStatus value);
    internal bool IsSetContributorInsightsStatus();
    public FailureException get_FailureException();
    public void set_FailureException(FailureException value);
    internal bool IsSetFailureException();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public Nullable`1<DateTime> get_LastUpdateDateTime();
    public void set_LastUpdateDateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdateDateTime();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeEndpointsRequest : AmazonDynamoDBRequest {
}
public class Amazon.DynamoDBv2.Model.DescribeEndpointsResponse : AmazonWebServiceResponse {
    private List`1<Endpoint> _endpoints;
    [AWSPropertyAttribute]
public List`1<Endpoint> Endpoints { get; public set; }
    public List`1<Endpoint> get_Endpoints();
    public void set_Endpoints(List`1<Endpoint> value);
    internal bool IsSetEndpoints();
}
public class Amazon.DynamoDBv2.Model.DescribeExportRequest : AmazonDynamoDBRequest {
    private string _exportArn;
    [AWSPropertyAttribute]
public string ExportArn { get; public set; }
    public string get_ExportArn();
    public void set_ExportArn(string value);
    internal bool IsSetExportArn();
}
public class Amazon.DynamoDBv2.Model.DescribeExportResponse : AmazonWebServiceResponse {
    private ExportDescription _exportDescription;
    public ExportDescription ExportDescription { get; public set; }
    public ExportDescription get_ExportDescription();
    public void set_ExportDescription(ExportDescription value);
    internal bool IsSetExportDescription();
}
public class Amazon.DynamoDBv2.Model.DescribeGlobalTableRequest : AmazonDynamoDBRequest {
    private string _globalTableName;
    [AWSPropertyAttribute]
public string GlobalTableName { get; public set; }
    public string get_GlobalTableName();
    public void set_GlobalTableName(string value);
    internal bool IsSetGlobalTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeGlobalTableResponse : AmazonWebServiceResponse {
    private GlobalTableDescription _globalTableDescription;
    public GlobalTableDescription GlobalTableDescription { get; public set; }
    public GlobalTableDescription get_GlobalTableDescription();
    public void set_GlobalTableDescription(GlobalTableDescription value);
    internal bool IsSetGlobalTableDescription();
}
public class Amazon.DynamoDBv2.Model.DescribeGlobalTableSettingsRequest : AmazonDynamoDBRequest {
    private string _globalTableName;
    [AWSPropertyAttribute]
public string GlobalTableName { get; public set; }
    public string get_GlobalTableName();
    public void set_GlobalTableName(string value);
    internal bool IsSetGlobalTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeGlobalTableSettingsResponse : AmazonWebServiceResponse {
    private string _globalTableName;
    private List`1<ReplicaSettingsDescription> _replicaSettings;
    [AWSPropertyAttribute]
public string GlobalTableName { get; public set; }
    public List`1<ReplicaSettingsDescription> ReplicaSettings { get; public set; }
    public string get_GlobalTableName();
    public void set_GlobalTableName(string value);
    internal bool IsSetGlobalTableName();
    public List`1<ReplicaSettingsDescription> get_ReplicaSettings();
    public void set_ReplicaSettings(List`1<ReplicaSettingsDescription> value);
    internal bool IsSetReplicaSettings();
}
public class Amazon.DynamoDBv2.Model.DescribeImportRequest : AmazonDynamoDBRequest {
    private string _importArn;
    [AWSPropertyAttribute]
public string ImportArn { get; public set; }
    public string get_ImportArn();
    public void set_ImportArn(string value);
    internal bool IsSetImportArn();
}
public class Amazon.DynamoDBv2.Model.DescribeImportResponse : AmazonWebServiceResponse {
    private ImportTableDescription _importTableDescription;
    [AWSPropertyAttribute]
public ImportTableDescription ImportTableDescription { get; public set; }
    public ImportTableDescription get_ImportTableDescription();
    public void set_ImportTableDescription(ImportTableDescription value);
    internal bool IsSetImportTableDescription();
}
public class Amazon.DynamoDBv2.Model.DescribeKinesisStreamingDestinationRequest : AmazonDynamoDBRequest {
    private string _tableName;
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeKinesisStreamingDestinationResponse : AmazonWebServiceResponse {
    private List`1<KinesisDataStreamDestination> _kinesisDataStreamDestinations;
    private string _tableName;
    public List`1<KinesisDataStreamDestination> KinesisDataStreamDestinations { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public List`1<KinesisDataStreamDestination> get_KinesisDataStreamDestinations();
    public void set_KinesisDataStreamDestinations(List`1<KinesisDataStreamDestination> value);
    internal bool IsSetKinesisDataStreamDestinations();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeLimitsRequest : AmazonDynamoDBRequest {
}
public class Amazon.DynamoDBv2.Model.DescribeLimitsResponse : AmazonWebServiceResponse {
    private Nullable`1<long> _accountMaxReadCapacityUnits;
    private Nullable`1<long> _accountMaxWriteCapacityUnits;
    private Nullable`1<long> _tableMaxReadCapacityUnits;
    private Nullable`1<long> _tableMaxWriteCapacityUnits;
    [AWSPropertyAttribute]
public Nullable`1<long> AccountMaxReadCapacityUnits { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> AccountMaxWriteCapacityUnits { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> TableMaxReadCapacityUnits { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> TableMaxWriteCapacityUnits { get; public set; }
    public Nullable`1<long> get_AccountMaxReadCapacityUnits();
    public void set_AccountMaxReadCapacityUnits(Nullable`1<long> value);
    internal bool IsSetAccountMaxReadCapacityUnits();
    public Nullable`1<long> get_AccountMaxWriteCapacityUnits();
    public void set_AccountMaxWriteCapacityUnits(Nullable`1<long> value);
    internal bool IsSetAccountMaxWriteCapacityUnits();
    public Nullable`1<long> get_TableMaxReadCapacityUnits();
    public void set_TableMaxReadCapacityUnits(Nullable`1<long> value);
    internal bool IsSetTableMaxReadCapacityUnits();
    public Nullable`1<long> get_TableMaxWriteCapacityUnits();
    public void set_TableMaxWriteCapacityUnits(Nullable`1<long> value);
    internal bool IsSetTableMaxWriteCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.DescribeStreamRequest : AmazonDynamoDBStreamsRequest {
    private string _exclusiveStartShardId;
    private Nullable`1<int> _limit;
    private string _streamArn;
    [AWSPropertyAttribute]
public string ExclusiveStartShardId { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    public string get_ExclusiveStartShardId();
    public void set_ExclusiveStartShardId(string value);
    internal bool IsSetExclusiveStartShardId();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
}
public class Amazon.DynamoDBv2.Model.DescribeStreamResponse : AmazonWebServiceResponse {
    private StreamDescription _streamDescription;
    public StreamDescription StreamDescription { get; public set; }
    public StreamDescription get_StreamDescription();
    public void set_StreamDescription(StreamDescription value);
    internal bool IsSetStreamDescription();
}
public class Amazon.DynamoDBv2.Model.DescribeTableReplicaAutoScalingRequest : AmazonDynamoDBRequest {
    private string _tableName;
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeTableReplicaAutoScalingResponse : AmazonWebServiceResponse {
    private TableAutoScalingDescription _tableAutoScalingDescription;
    public TableAutoScalingDescription TableAutoScalingDescription { get; public set; }
    public TableAutoScalingDescription get_TableAutoScalingDescription();
    public void set_TableAutoScalingDescription(TableAutoScalingDescription value);
    internal bool IsSetTableAutoScalingDescription();
}
public class Amazon.DynamoDBv2.Model.DescribeTableRequest : AmazonDynamoDBRequest {
    private string _tableName;
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public DescribeTableRequest(string tableName);
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeTableResponse : AmazonWebServiceResponse {
    private TableDescription _table;
    public TableDescription Table { get; public set; }
    public TableDescription get_Table();
    public void set_Table(TableDescription value);
    internal bool IsSetTable();
}
public class Amazon.DynamoDBv2.Model.DescribeTimeToLiveRequest : AmazonDynamoDBRequest {
    private string _tableName;
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DescribeTimeToLiveResponse : AmazonWebServiceResponse {
    private TimeToLiveDescription _timeToLiveDescription;
    public TimeToLiveDescription TimeToLiveDescription { get; public set; }
    public TimeToLiveDescription get_TimeToLiveDescription();
    public void set_TimeToLiveDescription(TimeToLiveDescription value);
    internal bool IsSetTimeToLiveDescription();
}
public class Amazon.DynamoDBv2.Model.DisableKinesisStreamingDestinationRequest : AmazonDynamoDBRequest {
    private EnableKinesisStreamingConfiguration _enableKinesisStreamingConfiguration;
    private string _streamArn;
    private string _tableName;
    public EnableKinesisStreamingConfiguration EnableKinesisStreamingConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public EnableKinesisStreamingConfiguration get_EnableKinesisStreamingConfiguration();
    public void set_EnableKinesisStreamingConfiguration(EnableKinesisStreamingConfiguration value);
    internal bool IsSetEnableKinesisStreamingConfiguration();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DisableKinesisStreamingDestinationResponse : AmazonWebServiceResponse {
    private DestinationStatus _destinationStatus;
    private EnableKinesisStreamingConfiguration _enableKinesisStreamingConfiguration;
    private string _streamArn;
    private string _tableName;
    public DestinationStatus DestinationStatus { get; public set; }
    public EnableKinesisStreamingConfiguration EnableKinesisStreamingConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public DestinationStatus get_DestinationStatus();
    public void set_DestinationStatus(DestinationStatus value);
    internal bool IsSetDestinationStatus();
    public EnableKinesisStreamingConfiguration get_EnableKinesisStreamingConfiguration();
    public void set_EnableKinesisStreamingConfiguration(EnableKinesisStreamingConfiguration value);
    internal bool IsSetEnableKinesisStreamingConfiguration();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.DuplicateItemException : AmazonDynamoDBException {
    public DuplicateItemException(string message);
    public DuplicateItemException(string message, Exception innerException);
    public DuplicateItemException(Exception innerException);
    public DuplicateItemException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public DuplicateItemException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.DynamoDBv2PaginatorFactory : object {
    private IAmazonDynamoDB client;
    internal DynamoDBv2PaginatorFactory(IAmazonDynamoDB client);
    public sealed virtual IBatchGetItemPaginator BatchGetItem(BatchGetItemRequest request);
    public sealed virtual IListTablesPaginator ListTables(ListTablesRequest request);
    public sealed virtual IQueryPaginator Query(QueryRequest request);
    public sealed virtual IScanPaginator Scan(ScanRequest request);
}
public class Amazon.DynamoDBv2.Model.EnableKinesisStreamingConfiguration : object {
    private ApproximateCreationDateTimePrecision _approximateCreationDateTimePrecision;
    public ApproximateCreationDateTimePrecision ApproximateCreationDateTimePrecision { get; public set; }
    public ApproximateCreationDateTimePrecision get_ApproximateCreationDateTimePrecision();
    public void set_ApproximateCreationDateTimePrecision(ApproximateCreationDateTimePrecision value);
    internal bool IsSetApproximateCreationDateTimePrecision();
}
public class Amazon.DynamoDBv2.Model.EnableKinesisStreamingDestinationRequest : AmazonDynamoDBRequest {
    private EnableKinesisStreamingConfiguration _enableKinesisStreamingConfiguration;
    private string _streamArn;
    private string _tableName;
    public EnableKinesisStreamingConfiguration EnableKinesisStreamingConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public EnableKinesisStreamingConfiguration get_EnableKinesisStreamingConfiguration();
    public void set_EnableKinesisStreamingConfiguration(EnableKinesisStreamingConfiguration value);
    internal bool IsSetEnableKinesisStreamingConfiguration();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.EnableKinesisStreamingDestinationResponse : AmazonWebServiceResponse {
    private DestinationStatus _destinationStatus;
    private EnableKinesisStreamingConfiguration _enableKinesisStreamingConfiguration;
    private string _streamArn;
    private string _tableName;
    public DestinationStatus DestinationStatus { get; public set; }
    public EnableKinesisStreamingConfiguration EnableKinesisStreamingConfiguration { get; public set; }
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public DestinationStatus get_DestinationStatus();
    public void set_DestinationStatus(DestinationStatus value);
    internal bool IsSetDestinationStatus();
    public EnableKinesisStreamingConfiguration get_EnableKinesisStreamingConfiguration();
    public void set_EnableKinesisStreamingConfiguration(EnableKinesisStreamingConfiguration value);
    internal bool IsSetEnableKinesisStreamingConfiguration();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.Endpoint : object {
    private string _address;
    private Nullable`1<long> _cachePeriodInMinutes;
    [AWSPropertyAttribute]
public string Address { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> CachePeriodInMinutes { get; public set; }
    public string get_Address();
    public void set_Address(string value);
    internal bool IsSetAddress();
    public Nullable`1<long> get_CachePeriodInMinutes();
    public void set_CachePeriodInMinutes(Nullable`1<long> value);
    internal bool IsSetCachePeriodInMinutes();
}
public class Amazon.DynamoDBv2.Model.ExecuteStatementRequest : AmazonDynamoDBRequest {
    private Nullable`1<bool> _consistentRead;
    private Nullable`1<int> _limit;
    private string _nextToken;
    private List`1<AttributeValue> _parameters;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private ReturnValuesOnConditionCheckFailure _returnValuesOnConditionCheckFailure;
    private string _statement;
    public Nullable`1<bool> ConsistentRead { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public List`1<AttributeValue> Parameters { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [AWSPropertyAttribute]
public string Statement { get; public set; }
    public Nullable`1<bool> get_ConsistentRead();
    public void set_ConsistentRead(Nullable`1<bool> value);
    internal bool IsSetConsistentRead();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<AttributeValue> get_Parameters();
    public void set_Parameters(List`1<AttributeValue> value);
    internal bool IsSetParameters();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
    internal bool IsSetReturnValuesOnConditionCheckFailure();
    public string get_Statement();
    public void set_Statement(string value);
    internal bool IsSetStatement();
}
public class Amazon.DynamoDBv2.Model.ExecuteStatementResponse : AmazonWebServiceResponse {
    private ConsumedCapacity _consumedCapacity;
    private List`1<Dictionary`2<string, AttributeValue>> _items;
    private Dictionary`2<string, AttributeValue> _lastEvaluatedKey;
    private string _nextToken;
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public List`1<Dictionary`2<string, AttributeValue>> Items { get; public set; }
    public Dictionary`2<string, AttributeValue> LastEvaluatedKey { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public List`1<Dictionary`2<string, AttributeValue>> get_Items();
    public void set_Items(List`1<Dictionary`2<string, AttributeValue>> value);
    internal bool IsSetItems();
    public Dictionary`2<string, AttributeValue> get_LastEvaluatedKey();
    public void set_LastEvaluatedKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetLastEvaluatedKey();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DynamoDBv2.Model.ExecuteTransactionRequest : AmazonDynamoDBRequest {
    private string _clientRequestToken;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private List`1<ParameterizedStatement> _transactStatements;
    [AWSPropertyAttribute]
public string ClientRequestToken { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    [AWSPropertyAttribute]
public List`1<ParameterizedStatement> TransactStatements { get; public set; }
    public string get_ClientRequestToken();
    public void set_ClientRequestToken(string value);
    internal bool IsSetClientRequestToken();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public List`1<ParameterizedStatement> get_TransactStatements();
    public void set_TransactStatements(List`1<ParameterizedStatement> value);
    internal bool IsSetTransactStatements();
}
public class Amazon.DynamoDBv2.Model.ExecuteTransactionResponse : AmazonWebServiceResponse {
    private List`1<ConsumedCapacity> _consumedCapacity;
    private List`1<ItemResponse> _responses;
    public List`1<ConsumedCapacity> ConsumedCapacity { get; public set; }
    [AWSPropertyAttribute]
public List`1<ItemResponse> Responses { get; public set; }
    public List`1<ConsumedCapacity> get_ConsumedCapacity();
    public void set_ConsumedCapacity(List`1<ConsumedCapacity> value);
    internal bool IsSetConsumedCapacity();
    public List`1<ItemResponse> get_Responses();
    public void set_Responses(List`1<ItemResponse> value);
    internal bool IsSetResponses();
}
public class Amazon.DynamoDBv2.Model.ExpectedAttributeValue : object {
    private List`1<AttributeValue> _attributeValueList;
    private ComparisonOperator _comparisonOperator;
    private Nullable`1<bool> _exists;
    private AttributeValue _value;
    public List`1<AttributeValue> AttributeValueList { get; public set; }
    public ComparisonOperator ComparisonOperator { get; public set; }
    public Nullable`1<bool> Exists { get; public set; }
    public AttributeValue Value { get; public set; }
    public ExpectedAttributeValue(AttributeValue value);
    public ExpectedAttributeValue(Nullable`1<bool> exists);
    public List`1<AttributeValue> get_AttributeValueList();
    public void set_AttributeValueList(List`1<AttributeValue> value);
    internal bool IsSetAttributeValueList();
    public ComparisonOperator get_ComparisonOperator();
    public void set_ComparisonOperator(ComparisonOperator value);
    internal bool IsSetComparisonOperator();
    public Nullable`1<bool> get_Exists();
    public void set_Exists(Nullable`1<bool> value);
    internal bool IsSetExists();
    public AttributeValue get_Value();
    public void set_Value(AttributeValue value);
    internal bool IsSetValue();
}
public class Amazon.DynamoDBv2.Model.ExpiredIteratorException : AmazonDynamoDBException {
    public ExpiredIteratorException(string message);
    public ExpiredIteratorException(string message, Exception innerException);
    public ExpiredIteratorException(Exception innerException);
    public ExpiredIteratorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ExpiredIteratorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ExportConflictException : AmazonDynamoDBException {
    public ExportConflictException(string message);
    public ExportConflictException(string message, Exception innerException);
    public ExportConflictException(Exception innerException);
    public ExportConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ExportConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ExportDescription : object {
    private Nullable`1<long> _billedSizeBytes;
    private string _clientToken;
    private Nullable`1<DateTime> _endTime;
    private string _exportArn;
    private ExportFormat _exportFormat;
    private string _exportManifest;
    private ExportStatus _exportStatus;
    private Nullable`1<DateTime> _exportTime;
    private ExportType _exportType;
    private string _failureCode;
    private string _failureMessage;
    private IncrementalExportSpecification _incrementalExportSpecification;
    private Nullable`1<long> _itemCount;
    private string _s3Bucket;
    private string _s3BucketOwner;
    private string _s3Prefix;
    private S3SseAlgorithm _s3SseAlgorithm;
    private string _s3SseKmsKeyId;
    private Nullable`1<DateTime> _startTime;
    private string _tableArn;
    private string _tableId;
    [AWSPropertyAttribute]
public Nullable`1<long> BilledSizeBytes { get; public set; }
    public string ClientToken { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string ExportArn { get; public set; }
    public ExportFormat ExportFormat { get; public set; }
    public string ExportManifest { get; public set; }
    public ExportStatus ExportStatus { get; public set; }
    public Nullable`1<DateTime> ExportTime { get; public set; }
    public ExportType ExportType { get; public set; }
    public string FailureCode { get; public set; }
    public string FailureMessage { get; public set; }
    public IncrementalExportSpecification IncrementalExportSpecification { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ItemCount { get; public set; }
    [AWSPropertyAttribute]
public string S3Bucket { get; public set; }
    public string S3BucketOwner { get; public set; }
    [AWSPropertyAttribute]
public string S3Prefix { get; public set; }
    public S3SseAlgorithm S3SseAlgorithm { get; public set; }
    [AWSPropertyAttribute]
public string S3SseKmsKeyId { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    [AWSPropertyAttribute]
public string TableArn { get; public set; }
    public string TableId { get; public set; }
    public Nullable`1<long> get_BilledSizeBytes();
    public void set_BilledSizeBytes(Nullable`1<long> value);
    internal bool IsSetBilledSizeBytes();
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_ExportArn();
    public void set_ExportArn(string value);
    internal bool IsSetExportArn();
    public ExportFormat get_ExportFormat();
    public void set_ExportFormat(ExportFormat value);
    internal bool IsSetExportFormat();
    public string get_ExportManifest();
    public void set_ExportManifest(string value);
    internal bool IsSetExportManifest();
    public ExportStatus get_ExportStatus();
    public void set_ExportStatus(ExportStatus value);
    internal bool IsSetExportStatus();
    public Nullable`1<DateTime> get_ExportTime();
    public void set_ExportTime(Nullable`1<DateTime> value);
    internal bool IsSetExportTime();
    public ExportType get_ExportType();
    public void set_ExportType(ExportType value);
    internal bool IsSetExportType();
    public string get_FailureCode();
    public void set_FailureCode(string value);
    internal bool IsSetFailureCode();
    public string get_FailureMessage();
    public void set_FailureMessage(string value);
    internal bool IsSetFailureMessage();
    public IncrementalExportSpecification get_IncrementalExportSpecification();
    public void set_IncrementalExportSpecification(IncrementalExportSpecification value);
    internal bool IsSetIncrementalExportSpecification();
    public Nullable`1<long> get_ItemCount();
    public void set_ItemCount(Nullable`1<long> value);
    internal bool IsSetItemCount();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3BucketOwner();
    public void set_S3BucketOwner(string value);
    internal bool IsSetS3BucketOwner();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
    public S3SseAlgorithm get_S3SseAlgorithm();
    public void set_S3SseAlgorithm(S3SseAlgorithm value);
    internal bool IsSetS3SseAlgorithm();
    public string get_S3SseKmsKeyId();
    public void set_S3SseKmsKeyId(string value);
    internal bool IsSetS3SseKmsKeyId();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public string get_TableArn();
    public void set_TableArn(string value);
    internal bool IsSetTableArn();
    public string get_TableId();
    public void set_TableId(string value);
    internal bool IsSetTableId();
}
public class Amazon.DynamoDBv2.Model.ExportNotFoundException : AmazonDynamoDBException {
    public ExportNotFoundException(string message);
    public ExportNotFoundException(string message, Exception innerException);
    public ExportNotFoundException(Exception innerException);
    public ExportNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ExportNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ExportSummary : object {
    private string _exportArn;
    private ExportStatus _exportStatus;
    private ExportType _exportType;
    [AWSPropertyAttribute]
public string ExportArn { get; public set; }
    public ExportStatus ExportStatus { get; public set; }
    public ExportType ExportType { get; public set; }
    public string get_ExportArn();
    public void set_ExportArn(string value);
    internal bool IsSetExportArn();
    public ExportStatus get_ExportStatus();
    public void set_ExportStatus(ExportStatus value);
    internal bool IsSetExportStatus();
    public ExportType get_ExportType();
    public void set_ExportType(ExportType value);
    internal bool IsSetExportType();
}
public class Amazon.DynamoDBv2.Model.ExportTableToPointInTimeRequest : AmazonDynamoDBRequest {
    private string _clientToken;
    private ExportFormat _exportFormat;
    private Nullable`1<DateTime> _exportTime;
    private ExportType _exportType;
    private IncrementalExportSpecification _incrementalExportSpecification;
    private string _s3Bucket;
    private string _s3BucketOwner;
    private string _s3Prefix;
    private S3SseAlgorithm _s3SseAlgorithm;
    private string _s3SseKmsKeyId;
    private string _tableArn;
    public string ClientToken { get; public set; }
    public ExportFormat ExportFormat { get; public set; }
    public Nullable`1<DateTime> ExportTime { get; public set; }
    public ExportType ExportType { get; public set; }
    public IncrementalExportSpecification IncrementalExportSpecification { get; public set; }
    [AWSPropertyAttribute]
public string S3Bucket { get; public set; }
    public string S3BucketOwner { get; public set; }
    [AWSPropertyAttribute]
public string S3Prefix { get; public set; }
    public S3SseAlgorithm S3SseAlgorithm { get; public set; }
    [AWSPropertyAttribute]
public string S3SseKmsKeyId { get; public set; }
    [AWSPropertyAttribute]
public string TableArn { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public ExportFormat get_ExportFormat();
    public void set_ExportFormat(ExportFormat value);
    internal bool IsSetExportFormat();
    public Nullable`1<DateTime> get_ExportTime();
    public void set_ExportTime(Nullable`1<DateTime> value);
    internal bool IsSetExportTime();
    public ExportType get_ExportType();
    public void set_ExportType(ExportType value);
    internal bool IsSetExportType();
    public IncrementalExportSpecification get_IncrementalExportSpecification();
    public void set_IncrementalExportSpecification(IncrementalExportSpecification value);
    internal bool IsSetIncrementalExportSpecification();
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3BucketOwner();
    public void set_S3BucketOwner(string value);
    internal bool IsSetS3BucketOwner();
    public string get_S3Prefix();
    public void set_S3Prefix(string value);
    internal bool IsSetS3Prefix();
    public S3SseAlgorithm get_S3SseAlgorithm();
    public void set_S3SseAlgorithm(S3SseAlgorithm value);
    internal bool IsSetS3SseAlgorithm();
    public string get_S3SseKmsKeyId();
    public void set_S3SseKmsKeyId(string value);
    internal bool IsSetS3SseKmsKeyId();
    public string get_TableArn();
    public void set_TableArn(string value);
    internal bool IsSetTableArn();
}
public class Amazon.DynamoDBv2.Model.ExportTableToPointInTimeResponse : AmazonWebServiceResponse {
    private ExportDescription _exportDescription;
    public ExportDescription ExportDescription { get; public set; }
    public ExportDescription get_ExportDescription();
    public void set_ExportDescription(ExportDescription value);
    internal bool IsSetExportDescription();
}
public class Amazon.DynamoDBv2.Model.FailureException : object {
    private string _exceptionDescription;
    private string _exceptionName;
    public string ExceptionDescription { get; public set; }
    public string ExceptionName { get; public set; }
    public string get_ExceptionDescription();
    public void set_ExceptionDescription(string value);
    internal bool IsSetExceptionDescription();
    public string get_ExceptionName();
    public void set_ExceptionName(string value);
    internal bool IsSetExceptionName();
}
public class Amazon.DynamoDBv2.Model.Get : object {
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _key;
    private string _projectionExpression;
    private string _tableName;
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public string ProjectionExpression { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
    public string get_ProjectionExpression();
    public void set_ProjectionExpression(string value);
    internal bool IsSetProjectionExpression();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.GetItemRequest : AmazonDynamoDBRequest {
    private List`1<string> _attributesToGet;
    private Nullable`1<bool> _consistentRead;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _key;
    private string _projectionExpression;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private string _tableName;
    [AWSPropertyAttribute]
public List`1<string> AttributesToGet { get; public set; }
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public string ProjectionExpression { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public GetItemRequest(string tableName, Dictionary`2<string, AttributeValue> key);
    public GetItemRequest(string tableName, Dictionary`2<string, AttributeValue> key, Nullable`1<bool> consistentRead);
    public List`1<string> get_AttributesToGet();
    public void set_AttributesToGet(List`1<string> value);
    internal bool IsSetAttributesToGet();
    public Nullable`1<bool> get_ConsistentRead();
    public void set_ConsistentRead(Nullable`1<bool> value);
    internal bool IsSetConsistentRead();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
    public string get_ProjectionExpression();
    public void set_ProjectionExpression(string value);
    internal bool IsSetProjectionExpression();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.GetItemResponse : AmazonWebServiceResponse {
    private ConsumedCapacity _consumedCapacity;
    private Dictionary`2<string, AttributeValue> _item;
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public bool IsItemSet { get; public set; }
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    public bool get_IsItemSet();
    public void set_IsItemSet(bool value);
    internal bool IsSetItem();
}
public class Amazon.DynamoDBv2.Model.GetRecordsRequest : AmazonDynamoDBStreamsRequest {
    private Nullable`1<int> _limit;
    private string _shardIterator;
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string ShardIterator { get; public set; }
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_ShardIterator();
    public void set_ShardIterator(string value);
    internal bool IsSetShardIterator();
}
public class Amazon.DynamoDBv2.Model.GetRecordsResponse : AmazonWebServiceResponse {
    private string _nextShardIterator;
    private List`1<Record> _records;
    [AWSPropertyAttribute]
public string NextShardIterator { get; public set; }
    public List`1<Record> Records { get; public set; }
    public string get_NextShardIterator();
    public void set_NextShardIterator(string value);
    internal bool IsSetNextShardIterator();
    public List`1<Record> get_Records();
    public void set_Records(List`1<Record> value);
    internal bool IsSetRecords();
}
public class Amazon.DynamoDBv2.Model.GetResourcePolicyRequest : AmazonDynamoDBRequest {
    private string _resourceArn;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.DynamoDBv2.Model.GetResourcePolicyResponse : AmazonWebServiceResponse {
    private string _policy;
    private string _revisionId;
    public string Policy { get; public set; }
    [AWSPropertyAttribute]
public string RevisionId { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
}
public class Amazon.DynamoDBv2.Model.GetShardIteratorRequest : AmazonDynamoDBStreamsRequest {
    private string _sequenceNumber;
    private string _shardId;
    private ShardIteratorType _shardIteratorType;
    private string _streamArn;
    [AWSPropertyAttribute]
public string SequenceNumber { get; public set; }
    [AWSPropertyAttribute]
public string ShardId { get; public set; }
    [AWSPropertyAttribute]
public ShardIteratorType ShardIteratorType { get; public set; }
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
    public ShardIteratorType get_ShardIteratorType();
    public void set_ShardIteratorType(ShardIteratorType value);
    internal bool IsSetShardIteratorType();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
}
public class Amazon.DynamoDBv2.Model.GetShardIteratorResponse : AmazonWebServiceResponse {
    private string _shardIterator;
    [AWSPropertyAttribute]
public string ShardIterator { get; public set; }
    public string get_ShardIterator();
    public void set_ShardIterator(string value);
    internal bool IsSetShardIterator();
}
public class Amazon.DynamoDBv2.Model.GlobalSecondaryIndex : object {
    private string _indexName;
    private List`1<KeySchemaElement> _keySchema;
    private OnDemandThroughput _onDemandThroughput;
    private Projection _projection;
    private ProvisionedThroughput _provisionedThroughput;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    public OnDemandThroughput OnDemandThroughput { get; public set; }
    [AWSPropertyAttribute]
public Projection Projection { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public OnDemandThroughput get_OnDemandThroughput();
    public void set_OnDemandThroughput(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughput();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
}
public class Amazon.DynamoDBv2.Model.GlobalSecondaryIndexAutoScalingUpdate : object {
    private string _indexName;
    private AutoScalingSettingsUpdate _provisionedWriteCapacityAutoScalingUpdate;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public AutoScalingSettingsUpdate ProvisionedWriteCapacityAutoScalingUpdate { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public AutoScalingSettingsUpdate get_ProvisionedWriteCapacityAutoScalingUpdate();
    public void set_ProvisionedWriteCapacityAutoScalingUpdate(AutoScalingSettingsUpdate value);
    internal bool IsSetProvisionedWriteCapacityAutoScalingUpdate();
}
public class Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription : object {
    private Nullable`1<bool> _backfilling;
    private string _indexArn;
    private string _indexName;
    private Nullable`1<long> _indexSizeBytes;
    private IndexStatus _indexStatus;
    private Nullable`1<long> _itemCount;
    private List`1<KeySchemaElement> _keySchema;
    private OnDemandThroughput _onDemandThroughput;
    private Projection _projection;
    private ProvisionedThroughputDescription _provisionedThroughput;
    public Nullable`1<bool> Backfilling { get; public set; }
    public string IndexArn { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public Nullable`1<long> IndexSizeBytes { get; public set; }
    public IndexStatus IndexStatus { get; public set; }
    public Nullable`1<long> ItemCount { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    public OnDemandThroughput OnDemandThroughput { get; public set; }
    public Projection Projection { get; public set; }
    public ProvisionedThroughputDescription ProvisionedThroughput { get; public set; }
    public Nullable`1<bool> get_Backfilling();
    public void set_Backfilling(Nullable`1<bool> value);
    internal bool IsSetBackfilling();
    public string get_IndexArn();
    public void set_IndexArn(string value);
    internal bool IsSetIndexArn();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public Nullable`1<long> get_IndexSizeBytes();
    public void set_IndexSizeBytes(Nullable`1<long> value);
    internal bool IsSetIndexSizeBytes();
    public IndexStatus get_IndexStatus();
    public void set_IndexStatus(IndexStatus value);
    internal bool IsSetIndexStatus();
    public Nullable`1<long> get_ItemCount();
    public void set_ItemCount(Nullable`1<long> value);
    internal bool IsSetItemCount();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public OnDemandThroughput get_OnDemandThroughput();
    public void set_OnDemandThroughput(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughput();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
    public ProvisionedThroughputDescription get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughputDescription value);
    internal bool IsSetProvisionedThroughput();
}
public class Amazon.DynamoDBv2.Model.GlobalSecondaryIndexInfo : object {
    private string _indexName;
    private List`1<KeySchemaElement> _keySchema;
    private OnDemandThroughput _onDemandThroughput;
    private Projection _projection;
    private ProvisionedThroughput _provisionedThroughput;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    public OnDemandThroughput OnDemandThroughput { get; public set; }
    public Projection Projection { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public OnDemandThroughput get_OnDemandThroughput();
    public void set_OnDemandThroughput(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughput();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
}
public class Amazon.DynamoDBv2.Model.GlobalSecondaryIndexUpdate : object {
    private CreateGlobalSecondaryIndexAction _create;
    private DeleteGlobalSecondaryIndexAction _delete;
    private UpdateGlobalSecondaryIndexAction _update;
    public CreateGlobalSecondaryIndexAction Create { get; public set; }
    public DeleteGlobalSecondaryIndexAction Delete { get; public set; }
    public UpdateGlobalSecondaryIndexAction Update { get; public set; }
    public CreateGlobalSecondaryIndexAction get_Create();
    public void set_Create(CreateGlobalSecondaryIndexAction value);
    internal bool IsSetCreate();
    public DeleteGlobalSecondaryIndexAction get_Delete();
    public void set_Delete(DeleteGlobalSecondaryIndexAction value);
    internal bool IsSetDelete();
    public UpdateGlobalSecondaryIndexAction get_Update();
    public void set_Update(UpdateGlobalSecondaryIndexAction value);
    internal bool IsSetUpdate();
}
public class Amazon.DynamoDBv2.Model.GlobalTable : object {
    private string _globalTableName;
    private List`1<Replica> _replicationGroup;
    [AWSPropertyAttribute]
public string GlobalTableName { get; public set; }
    public List`1<Replica> ReplicationGroup { get; public set; }
    public string get_GlobalTableName();
    public void set_GlobalTableName(string value);
    internal bool IsSetGlobalTableName();
    public List`1<Replica> get_ReplicationGroup();
    public void set_ReplicationGroup(List`1<Replica> value);
    internal bool IsSetReplicationGroup();
}
public class Amazon.DynamoDBv2.Model.GlobalTableAlreadyExistsException : AmazonDynamoDBException {
    public GlobalTableAlreadyExistsException(string message);
    public GlobalTableAlreadyExistsException(string message, Exception innerException);
    public GlobalTableAlreadyExistsException(Exception innerException);
    public GlobalTableAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public GlobalTableAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.GlobalTableDescription : object {
    private Nullable`1<DateTime> _creationDateTime;
    private string _globalTableArn;
    private string _globalTableName;
    private GlobalTableStatus _globalTableStatus;
    private List`1<ReplicaDescription> _replicationGroup;
    public Nullable`1<DateTime> CreationDateTime { get; public set; }
    public string GlobalTableArn { get; public set; }
    [AWSPropertyAttribute]
public string GlobalTableName { get; public set; }
    public GlobalTableStatus GlobalTableStatus { get; public set; }
    public List`1<ReplicaDescription> ReplicationGroup { get; public set; }
    public Nullable`1<DateTime> get_CreationDateTime();
    public void set_CreationDateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationDateTime();
    public string get_GlobalTableArn();
    public void set_GlobalTableArn(string value);
    internal bool IsSetGlobalTableArn();
    public string get_GlobalTableName();
    public void set_GlobalTableName(string value);
    internal bool IsSetGlobalTableName();
    public GlobalTableStatus get_GlobalTableStatus();
    public void set_GlobalTableStatus(GlobalTableStatus value);
    internal bool IsSetGlobalTableStatus();
    public List`1<ReplicaDescription> get_ReplicationGroup();
    public void set_ReplicationGroup(List`1<ReplicaDescription> value);
    internal bool IsSetReplicationGroup();
}
public class Amazon.DynamoDBv2.Model.GlobalTableGlobalSecondaryIndexSettingsUpdate : object {
    private string _indexName;
    private AutoScalingSettingsUpdate _provisionedWriteCapacityAutoScalingSettingsUpdate;
    private Nullable`1<long> _provisionedWriteCapacityUnits;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public AutoScalingSettingsUpdate ProvisionedWriteCapacityAutoScalingSettingsUpdate { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ProvisionedWriteCapacityUnits { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public AutoScalingSettingsUpdate get_ProvisionedWriteCapacityAutoScalingSettingsUpdate();
    public void set_ProvisionedWriteCapacityAutoScalingSettingsUpdate(AutoScalingSettingsUpdate value);
    internal bool IsSetProvisionedWriteCapacityAutoScalingSettingsUpdate();
    public Nullable`1<long> get_ProvisionedWriteCapacityUnits();
    public void set_ProvisionedWriteCapacityUnits(Nullable`1<long> value);
    internal bool IsSetProvisionedWriteCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.GlobalTableNotFoundException : AmazonDynamoDBException {
    public GlobalTableNotFoundException(string message);
    public GlobalTableNotFoundException(string message, Exception innerException);
    public GlobalTableNotFoundException(Exception innerException);
    public GlobalTableNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public GlobalTableNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.DynamoDBv2.Model.IBatchGetItemPaginator {
    public IPaginatedEnumerable`1<BatchGetItemResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<BatchGetItemResponse> get_Responses();
}
public class Amazon.DynamoDBv2.Model.IdempotentParameterMismatchException : AmazonDynamoDBException {
    public IdempotentParameterMismatchException(string message);
    public IdempotentParameterMismatchException(string message, Exception innerException);
    public IdempotentParameterMismatchException(Exception innerException);
    public IdempotentParameterMismatchException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IdempotentParameterMismatchException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.Identity : object {
    private string _principalId;
    private string _type;
    public string PrincipalId { get; public set; }
    public string Type { get; public set; }
    public string get_PrincipalId();
    public void set_PrincipalId(string value);
    internal bool IsSetPrincipalId();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public interface Amazon.DynamoDBv2.Model.IDynamoDBv2PaginatorFactory {
    public abstract virtual IBatchGetItemPaginator BatchGetItem(BatchGetItemRequest request);
    public abstract virtual IListTablesPaginator ListTables(ListTablesRequest request);
    public abstract virtual IQueryPaginator Query(QueryRequest request);
    public abstract virtual IScanPaginator Scan(ScanRequest request);
}
public interface Amazon.DynamoDBv2.Model.IListTablesPaginator {
    public IPaginatedEnumerable`1<ListTablesResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> TableNames { get; }
    public abstract virtual IPaginatedEnumerable`1<ListTablesResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<string> get_TableNames();
}
public class Amazon.DynamoDBv2.Model.ImportConflictException : AmazonDynamoDBException {
    public ImportConflictException(string message);
    public ImportConflictException(string message, Exception innerException);
    public ImportConflictException(Exception innerException);
    public ImportConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ImportConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ImportNotFoundException : AmazonDynamoDBException {
    public ImportNotFoundException(string message);
    public ImportNotFoundException(string message, Exception innerException);
    public ImportNotFoundException(Exception innerException);
    public ImportNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ImportNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ImportSummary : object {
    private string _cloudWatchLogGroupArn;
    private Nullable`1<DateTime> _endTime;
    private string _importArn;
    private ImportStatus _importStatus;
    private InputFormat _inputFormat;
    private S3BucketSource _s3BucketSource;
    private Nullable`1<DateTime> _startTime;
    private string _tableArn;
    [AWSPropertyAttribute]
public string CloudWatchLogGroupArn { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public string ImportArn { get; public set; }
    public ImportStatus ImportStatus { get; public set; }
    public InputFormat InputFormat { get; public set; }
    public S3BucketSource S3BucketSource { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    [AWSPropertyAttribute]
public string TableArn { get; public set; }
    public string get_CloudWatchLogGroupArn();
    public void set_CloudWatchLogGroupArn(string value);
    internal bool IsSetCloudWatchLogGroupArn();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public string get_ImportArn();
    public void set_ImportArn(string value);
    internal bool IsSetImportArn();
    public ImportStatus get_ImportStatus();
    public void set_ImportStatus(ImportStatus value);
    internal bool IsSetImportStatus();
    public InputFormat get_InputFormat();
    public void set_InputFormat(InputFormat value);
    internal bool IsSetInputFormat();
    public S3BucketSource get_S3BucketSource();
    public void set_S3BucketSource(S3BucketSource value);
    internal bool IsSetS3BucketSource();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public string get_TableArn();
    public void set_TableArn(string value);
    internal bool IsSetTableArn();
}
public class Amazon.DynamoDBv2.Model.ImportTableDescription : object {
    private string _clientToken;
    private string _cloudWatchLogGroupArn;
    private Nullable`1<DateTime> _endTime;
    private Nullable`1<long> _errorCount;
    private string _failureCode;
    private string _failureMessage;
    private string _importArn;
    private Nullable`1<long> _importedItemCount;
    private ImportStatus _importStatus;
    private InputCompressionType _inputCompressionType;
    private InputFormat _inputFormat;
    private InputFormatOptions _inputFormatOptions;
    private Nullable`1<long> _processedItemCount;
    private Nullable`1<long> _processedSizeBytes;
    private S3BucketSource _s3BucketSource;
    private Nullable`1<DateTime> _startTime;
    private string _tableArn;
    private TableCreationParameters _tableCreationParameters;
    private string _tableId;
    public string ClientToken { get; public set; }
    [AWSPropertyAttribute]
public string CloudWatchLogGroupArn { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ErrorCount { get; public set; }
    public string FailureCode { get; public set; }
    public string FailureMessage { get; public set; }
    [AWSPropertyAttribute]
public string ImportArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ImportedItemCount { get; public set; }
    public ImportStatus ImportStatus { get; public set; }
    public InputCompressionType InputCompressionType { get; public set; }
    public InputFormat InputFormat { get; public set; }
    public InputFormatOptions InputFormatOptions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ProcessedItemCount { get; public set; }
    public Nullable`1<long> ProcessedSizeBytes { get; public set; }
    public S3BucketSource S3BucketSource { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    [AWSPropertyAttribute]
public string TableArn { get; public set; }
    public TableCreationParameters TableCreationParameters { get; public set; }
    public string TableId { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public string get_CloudWatchLogGroupArn();
    public void set_CloudWatchLogGroupArn(string value);
    internal bool IsSetCloudWatchLogGroupArn();
    public Nullable`1<DateTime> get_EndTime();
    public void set_EndTime(Nullable`1<DateTime> value);
    internal bool IsSetEndTime();
    public Nullable`1<long> get_ErrorCount();
    public void set_ErrorCount(Nullable`1<long> value);
    internal bool IsSetErrorCount();
    public string get_FailureCode();
    public void set_FailureCode(string value);
    internal bool IsSetFailureCode();
    public string get_FailureMessage();
    public void set_FailureMessage(string value);
    internal bool IsSetFailureMessage();
    public string get_ImportArn();
    public void set_ImportArn(string value);
    internal bool IsSetImportArn();
    public Nullable`1<long> get_ImportedItemCount();
    public void set_ImportedItemCount(Nullable`1<long> value);
    internal bool IsSetImportedItemCount();
    public ImportStatus get_ImportStatus();
    public void set_ImportStatus(ImportStatus value);
    internal bool IsSetImportStatus();
    public InputCompressionType get_InputCompressionType();
    public void set_InputCompressionType(InputCompressionType value);
    internal bool IsSetInputCompressionType();
    public InputFormat get_InputFormat();
    public void set_InputFormat(InputFormat value);
    internal bool IsSetInputFormat();
    public InputFormatOptions get_InputFormatOptions();
    public void set_InputFormatOptions(InputFormatOptions value);
    internal bool IsSetInputFormatOptions();
    public Nullable`1<long> get_ProcessedItemCount();
    public void set_ProcessedItemCount(Nullable`1<long> value);
    internal bool IsSetProcessedItemCount();
    public Nullable`1<long> get_ProcessedSizeBytes();
    public void set_ProcessedSizeBytes(Nullable`1<long> value);
    internal bool IsSetProcessedSizeBytes();
    public S3BucketSource get_S3BucketSource();
    public void set_S3BucketSource(S3BucketSource value);
    internal bool IsSetS3BucketSource();
    public Nullable`1<DateTime> get_StartTime();
    public void set_StartTime(Nullable`1<DateTime> value);
    internal bool IsSetStartTime();
    public string get_TableArn();
    public void set_TableArn(string value);
    internal bool IsSetTableArn();
    public TableCreationParameters get_TableCreationParameters();
    public void set_TableCreationParameters(TableCreationParameters value);
    internal bool IsSetTableCreationParameters();
    public string get_TableId();
    public void set_TableId(string value);
    internal bool IsSetTableId();
}
public class Amazon.DynamoDBv2.Model.ImportTableRequest : AmazonDynamoDBRequest {
    private string _clientToken;
    private InputCompressionType _inputCompressionType;
    private InputFormat _inputFormat;
    private InputFormatOptions _inputFormatOptions;
    private S3BucketSource _s3BucketSource;
    private TableCreationParameters _tableCreationParameters;
    public string ClientToken { get; public set; }
    public InputCompressionType InputCompressionType { get; public set; }
    [AWSPropertyAttribute]
public InputFormat InputFormat { get; public set; }
    public InputFormatOptions InputFormatOptions { get; public set; }
    [AWSPropertyAttribute]
public S3BucketSource S3BucketSource { get; public set; }
    [AWSPropertyAttribute]
public TableCreationParameters TableCreationParameters { get; public set; }
    public string get_ClientToken();
    public void set_ClientToken(string value);
    internal bool IsSetClientToken();
    public InputCompressionType get_InputCompressionType();
    public void set_InputCompressionType(InputCompressionType value);
    internal bool IsSetInputCompressionType();
    public InputFormat get_InputFormat();
    public void set_InputFormat(InputFormat value);
    internal bool IsSetInputFormat();
    public InputFormatOptions get_InputFormatOptions();
    public void set_InputFormatOptions(InputFormatOptions value);
    internal bool IsSetInputFormatOptions();
    public S3BucketSource get_S3BucketSource();
    public void set_S3BucketSource(S3BucketSource value);
    internal bool IsSetS3BucketSource();
    public TableCreationParameters get_TableCreationParameters();
    public void set_TableCreationParameters(TableCreationParameters value);
    internal bool IsSetTableCreationParameters();
}
public class Amazon.DynamoDBv2.Model.ImportTableResponse : AmazonWebServiceResponse {
    private ImportTableDescription _importTableDescription;
    [AWSPropertyAttribute]
public ImportTableDescription ImportTableDescription { get; public set; }
    public ImportTableDescription get_ImportTableDescription();
    public void set_ImportTableDescription(ImportTableDescription value);
    internal bool IsSetImportTableDescription();
}
public class Amazon.DynamoDBv2.Model.IncrementalExportSpecification : object {
    private Nullable`1<DateTime> _exportFromTime;
    private Nullable`1<DateTime> _exportToTime;
    private ExportViewType _exportViewType;
    public Nullable`1<DateTime> ExportFromTime { get; public set; }
    public Nullable`1<DateTime> ExportToTime { get; public set; }
    public ExportViewType ExportViewType { get; public set; }
    public Nullable`1<DateTime> get_ExportFromTime();
    public void set_ExportFromTime(Nullable`1<DateTime> value);
    internal bool IsSetExportFromTime();
    public Nullable`1<DateTime> get_ExportToTime();
    public void set_ExportToTime(Nullable`1<DateTime> value);
    internal bool IsSetExportToTime();
    public ExportViewType get_ExportViewType();
    public void set_ExportViewType(ExportViewType value);
    internal bool IsSetExportViewType();
}
public class Amazon.DynamoDBv2.Model.IndexNotFoundException : AmazonDynamoDBException {
    public IndexNotFoundException(string message);
    public IndexNotFoundException(string message, Exception innerException);
    public IndexNotFoundException(Exception innerException);
    public IndexNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public IndexNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.InputFormatOptions : object {
    private CsvOptions _csv;
    public CsvOptions Csv { get; public set; }
    public CsvOptions get_Csv();
    public void set_Csv(CsvOptions value);
    internal bool IsSetCsv();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ArchivalSummaryUnmarshaller : object {
    private static ArchivalSummaryUnmarshaller _instance;
    public static ArchivalSummaryUnmarshaller Instance { get; }
    private static ArchivalSummaryUnmarshaller();
    private sealed virtual override ArchivalSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ArchivalSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ArchivalSummary Unmarshall(JsonUnmarshallerContext context);
    public static ArchivalSummaryUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeDefinitionMarshaller : object {
    public static AttributeDefinitionMarshaller Instance;
    private static AttributeDefinitionMarshaller();
    public sealed virtual void Marshall(AttributeDefinition requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeDefinitionUnmarshaller : object {
    private static AttributeDefinitionUnmarshaller _instance;
    public static AttributeDefinitionUnmarshaller Instance { get; }
    private static AttributeDefinitionUnmarshaller();
    private sealed virtual override AttributeDefinition Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.AttributeDefinition,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AttributeDefinition Unmarshall(JsonUnmarshallerContext context);
    public static AttributeDefinitionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeValueMarshaller : object {
    public static AttributeValueMarshaller Instance;
    private static AttributeValueMarshaller();
    public sealed virtual void Marshall(AttributeValue requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeValueUnmarshaller : object {
    private static AttributeValueUnmarshaller _instance;
    public static AttributeValueUnmarshaller Instance { get; }
    private static AttributeValueUnmarshaller();
    private sealed virtual override AttributeValue Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.AttributeValue,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AttributeValue Unmarshall(JsonUnmarshallerContext context);
    public static AttributeValueUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeValueUpdateMarshaller : object {
    public static AttributeValueUpdateMarshaller Instance;
    private static AttributeValueUpdateMarshaller();
    public sealed virtual void Marshall(AttributeValueUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AutoScalingPolicyDescriptionUnmarshaller : object {
    private static AutoScalingPolicyDescriptionUnmarshaller _instance;
    public static AutoScalingPolicyDescriptionUnmarshaller Instance { get; }
    private static AutoScalingPolicyDescriptionUnmarshaller();
    private sealed virtual override AutoScalingPolicyDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.AutoScalingPolicyDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AutoScalingPolicyDescription Unmarshall(JsonUnmarshallerContext context);
    public static AutoScalingPolicyDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AutoScalingPolicyUpdateMarshaller : object {
    public static AutoScalingPolicyUpdateMarshaller Instance;
    private static AutoScalingPolicyUpdateMarshaller();
    public sealed virtual void Marshall(AutoScalingPolicyUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AutoScalingSettingsDescriptionUnmarshaller : object {
    private static AutoScalingSettingsDescriptionUnmarshaller _instance;
    public static AutoScalingSettingsDescriptionUnmarshaller Instance { get; }
    private static AutoScalingSettingsDescriptionUnmarshaller();
    private sealed virtual override AutoScalingSettingsDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.AutoScalingSettingsDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AutoScalingSettingsDescription Unmarshall(JsonUnmarshallerContext context);
    public static AutoScalingSettingsDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AutoScalingSettingsUpdateMarshaller : object {
    public static AutoScalingSettingsUpdateMarshaller Instance;
    private static AutoScalingSettingsUpdateMarshaller();
    public sealed virtual void Marshall(AutoScalingSettingsUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionUnmarshaller : object {
    private static AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionUnmarshaller _instance;
    public static AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionUnmarshaller Instance { get; }
    private static AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionUnmarshaller();
    private sealed virtual override AutoScalingTargetTrackingScalingPolicyConfigurationDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.AutoScalingTargetTrackingScalingPolicyConfigurationDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual AutoScalingTargetTrackingScalingPolicyConfigurationDescription Unmarshall(JsonUnmarshallerContext context);
    public static AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AutoScalingTargetTrackingScalingPolicyConfigurationUpdateMarshaller : object {
    public static AutoScalingTargetTrackingScalingPolicyConfigurationUpdateMarshaller Instance;
    private static AutoScalingTargetTrackingScalingPolicyConfigurationUpdateMarshaller();
    public sealed virtual void Marshall(AutoScalingTargetTrackingScalingPolicyConfigurationUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BackupDescriptionUnmarshaller : object {
    private static BackupDescriptionUnmarshaller _instance;
    public static BackupDescriptionUnmarshaller Instance { get; }
    private static BackupDescriptionUnmarshaller();
    private sealed virtual override BackupDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.BackupDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BackupDescription Unmarshall(JsonUnmarshallerContext context);
    public static BackupDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BackupDetailsUnmarshaller : object {
    private static BackupDetailsUnmarshaller _instance;
    public static BackupDetailsUnmarshaller Instance { get; }
    private static BackupDetailsUnmarshaller();
    private sealed virtual override BackupDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.BackupDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BackupDetails Unmarshall(JsonUnmarshallerContext context);
    public static BackupDetailsUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BackupInUseExceptionUnmarshaller : object {
    private static BackupInUseExceptionUnmarshaller _instance;
    public static BackupInUseExceptionUnmarshaller Instance { get; }
    private static BackupInUseExceptionUnmarshaller();
    public sealed virtual BackupInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual BackupInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static BackupInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BackupNotFoundExceptionUnmarshaller : object {
    private static BackupNotFoundExceptionUnmarshaller _instance;
    public static BackupNotFoundExceptionUnmarshaller Instance { get; }
    private static BackupNotFoundExceptionUnmarshaller();
    public sealed virtual BackupNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual BackupNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static BackupNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BackupSummaryUnmarshaller : object {
    private static BackupSummaryUnmarshaller _instance;
    public static BackupSummaryUnmarshaller Instance { get; }
    private static BackupSummaryUnmarshaller();
    private sealed virtual override BackupSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.BackupSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BackupSummary Unmarshall(JsonUnmarshallerContext context);
    public static BackupSummaryUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchExecuteStatementRequestMarshaller : object {
    private static BatchExecuteStatementRequestMarshaller _instance;
    public static BatchExecuteStatementRequestMarshaller Instance { get; }
    private static BatchExecuteStatementRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchExecuteStatementRequest publicRequest);
    internal static BatchExecuteStatementRequestMarshaller GetInstance();
    public static BatchExecuteStatementRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchExecuteStatementResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchExecuteStatementResponseUnmarshaller _instance;
    public static BatchExecuteStatementResponseUnmarshaller Instance { get; }
    private static BatchExecuteStatementResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchExecuteStatementResponseUnmarshaller GetInstance();
    public static BatchExecuteStatementResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchGetItemEndpointDiscoveryMarshaller : object {
    private static BatchGetItemEndpointDiscoveryMarshaller _instance;
    public static BatchGetItemEndpointDiscoveryMarshaller Instance { get; }
    private static BatchGetItemEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(BatchGetItemRequest publicRequest);
    public static BatchGetItemEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchGetItemRequestMarshaller : object {
    private static BatchGetItemRequestMarshaller _instance;
    public static BatchGetItemRequestMarshaller Instance { get; }
    private static BatchGetItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchGetItemRequest publicRequest);
    internal static BatchGetItemRequestMarshaller GetInstance();
    public static BatchGetItemRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchGetItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchGetItemResponseUnmarshaller _instance;
    public static BatchGetItemResponseUnmarshaller Instance { get; }
    private static BatchGetItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchGetItemResponseUnmarshaller GetInstance();
    public static BatchGetItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchStatementErrorUnmarshaller : object {
    private static BatchStatementErrorUnmarshaller _instance;
    public static BatchStatementErrorUnmarshaller Instance { get; }
    private static BatchStatementErrorUnmarshaller();
    private sealed virtual override BatchStatementError Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.BatchStatementError,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchStatementError Unmarshall(JsonUnmarshallerContext context);
    public static BatchStatementErrorUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchStatementRequestMarshaller : object {
    public static BatchStatementRequestMarshaller Instance;
    private static BatchStatementRequestMarshaller();
    public sealed virtual void Marshall(BatchStatementRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchStatementResponseUnmarshaller : object {
    private static BatchStatementResponseUnmarshaller _instance;
    public static BatchStatementResponseUnmarshaller Instance { get; }
    private static BatchStatementResponseUnmarshaller();
    private sealed virtual override BatchStatementResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.BatchStatementResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BatchStatementResponse Unmarshall(JsonUnmarshallerContext context);
    public static BatchStatementResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchWriteItemEndpointDiscoveryMarshaller : object {
    private static BatchWriteItemEndpointDiscoveryMarshaller _instance;
    public static BatchWriteItemEndpointDiscoveryMarshaller Instance { get; }
    private static BatchWriteItemEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(BatchWriteItemRequest publicRequest);
    public static BatchWriteItemEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchWriteItemRequestMarshaller : object {
    private static BatchWriteItemRequestMarshaller _instance;
    public static BatchWriteItemRequestMarshaller Instance { get; }
    private static BatchWriteItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(BatchWriteItemRequest publicRequest);
    internal static BatchWriteItemRequestMarshaller GetInstance();
    public static BatchWriteItemRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchWriteItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static BatchWriteItemResponseUnmarshaller _instance;
    public static BatchWriteItemResponseUnmarshaller Instance { get; }
    private static BatchWriteItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static BatchWriteItemResponseUnmarshaller GetInstance();
    public static BatchWriteItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BillingModeSummaryUnmarshaller : object {
    private static BillingModeSummaryUnmarshaller _instance;
    public static BillingModeSummaryUnmarshaller Instance { get; }
    private static BillingModeSummaryUnmarshaller();
    private sealed virtual override BillingModeSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.BillingModeSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual BillingModeSummary Unmarshall(JsonUnmarshallerContext context);
    public static BillingModeSummaryUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CancellationReasonUnmarshaller : object {
    private static CancellationReasonUnmarshaller _instance;
    public static CancellationReasonUnmarshaller Instance { get; }
    private static CancellationReasonUnmarshaller();
    private sealed virtual override CancellationReason Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.CancellationReason,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CancellationReason Unmarshall(JsonUnmarshallerContext context);
    public static CancellationReasonUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CapacityUnmarshaller : object {
    private static CapacityUnmarshaller _instance;
    public static CapacityUnmarshaller Instance { get; }
    private static CapacityUnmarshaller();
    private sealed virtual override Capacity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Capacity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Capacity Unmarshall(JsonUnmarshallerContext context);
    public static CapacityUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ConditionalCheckFailedExceptionUnmarshaller : object {
    private static ConditionalCheckFailedExceptionUnmarshaller _instance;
    public static ConditionalCheckFailedExceptionUnmarshaller Instance { get; }
    private static ConditionalCheckFailedExceptionUnmarshaller();
    public sealed virtual ConditionalCheckFailedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ConditionalCheckFailedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ConditionalCheckFailedExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ConditionCheckMarshaller : object {
    public static ConditionCheckMarshaller Instance;
    private static ConditionCheckMarshaller();
    public sealed virtual void Marshall(ConditionCheck requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ConditionMarshaller : object {
    public static ConditionMarshaller Instance;
    private static ConditionMarshaller();
    public sealed virtual void Marshall(Condition requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ConsumedCapacityUnmarshaller : object {
    private static ConsumedCapacityUnmarshaller _instance;
    public static ConsumedCapacityUnmarshaller Instance { get; }
    private static ConsumedCapacityUnmarshaller();
    private sealed virtual override ConsumedCapacity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ConsumedCapacity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ConsumedCapacity Unmarshall(JsonUnmarshallerContext context);
    public static ConsumedCapacityUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ContinuousBackupsDescriptionUnmarshaller : object {
    private static ContinuousBackupsDescriptionUnmarshaller _instance;
    public static ContinuousBackupsDescriptionUnmarshaller Instance { get; }
    private static ContinuousBackupsDescriptionUnmarshaller();
    private sealed virtual override ContinuousBackupsDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ContinuousBackupsDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContinuousBackupsDescription Unmarshall(JsonUnmarshallerContext context);
    public static ContinuousBackupsDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ContinuousBackupsUnavailableExceptionUnmarshaller : object {
    private static ContinuousBackupsUnavailableExceptionUnmarshaller _instance;
    public static ContinuousBackupsUnavailableExceptionUnmarshaller Instance { get; }
    private static ContinuousBackupsUnavailableExceptionUnmarshaller();
    public sealed virtual ContinuousBackupsUnavailableException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ContinuousBackupsUnavailableException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ContinuousBackupsUnavailableExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ContributorInsightsSummaryUnmarshaller : object {
    private static ContributorInsightsSummaryUnmarshaller _instance;
    public static ContributorInsightsSummaryUnmarshaller Instance { get; }
    private static ContributorInsightsSummaryUnmarshaller();
    private sealed virtual override ContributorInsightsSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ContributorInsightsSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ContributorInsightsSummary Unmarshall(JsonUnmarshallerContext context);
    public static ContributorInsightsSummaryUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateBackupEndpointDiscoveryMarshaller : object {
    private static CreateBackupEndpointDiscoveryMarshaller _instance;
    public static CreateBackupEndpointDiscoveryMarshaller Instance { get; }
    private static CreateBackupEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(CreateBackupRequest publicRequest);
    public static CreateBackupEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateBackupRequestMarshaller : object {
    private static CreateBackupRequestMarshaller _instance;
    public static CreateBackupRequestMarshaller Instance { get; }
    private static CreateBackupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateBackupRequest publicRequest);
    internal static CreateBackupRequestMarshaller GetInstance();
    public static CreateBackupRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateBackupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateBackupResponseUnmarshaller _instance;
    public static CreateBackupResponseUnmarshaller Instance { get; }
    private static CreateBackupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateBackupResponseUnmarshaller GetInstance();
    public static CreateBackupResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateGlobalSecondaryIndexActionMarshaller : object {
    public static CreateGlobalSecondaryIndexActionMarshaller Instance;
    private static CreateGlobalSecondaryIndexActionMarshaller();
    public sealed virtual void Marshall(CreateGlobalSecondaryIndexAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateGlobalTableEndpointDiscoveryMarshaller : object {
    private static CreateGlobalTableEndpointDiscoveryMarshaller _instance;
    public static CreateGlobalTableEndpointDiscoveryMarshaller Instance { get; }
    private static CreateGlobalTableEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(CreateGlobalTableRequest publicRequest);
    public static CreateGlobalTableEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateGlobalTableRequestMarshaller : object {
    private static CreateGlobalTableRequestMarshaller _instance;
    public static CreateGlobalTableRequestMarshaller Instance { get; }
    private static CreateGlobalTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateGlobalTableRequest publicRequest);
    internal static CreateGlobalTableRequestMarshaller GetInstance();
    public static CreateGlobalTableRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateGlobalTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateGlobalTableResponseUnmarshaller _instance;
    public static CreateGlobalTableResponseUnmarshaller Instance { get; }
    private static CreateGlobalTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateGlobalTableResponseUnmarshaller GetInstance();
    public static CreateGlobalTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateReplicaActionMarshaller : object {
    public static CreateReplicaActionMarshaller Instance;
    private static CreateReplicaActionMarshaller();
    public sealed virtual void Marshall(CreateReplicaAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateReplicationGroupMemberActionMarshaller : object {
    public static CreateReplicationGroupMemberActionMarshaller Instance;
    private static CreateReplicationGroupMemberActionMarshaller();
    public sealed virtual void Marshall(CreateReplicationGroupMemberAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateTableEndpointDiscoveryMarshaller : object {
    private static CreateTableEndpointDiscoveryMarshaller _instance;
    public static CreateTableEndpointDiscoveryMarshaller Instance { get; }
    private static CreateTableEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(CreateTableRequest publicRequest);
    public static CreateTableEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateTableRequestMarshaller : object {
    private static CreateTableRequestMarshaller _instance;
    public static CreateTableRequestMarshaller Instance { get; }
    private static CreateTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateTableRequest publicRequest);
    internal static CreateTableRequestMarshaller GetInstance();
    public static CreateTableRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateTableResponseUnmarshaller _instance;
    public static CreateTableResponseUnmarshaller Instance { get; }
    private static CreateTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateTableResponseUnmarshaller GetInstance();
    public static CreateTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CsvOptionsMarshaller : object {
    public static CsvOptionsMarshaller Instance;
    private static CsvOptionsMarshaller();
    public sealed virtual void Marshall(CsvOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CsvOptionsUnmarshaller : object {
    private static CsvOptionsUnmarshaller _instance;
    public static CsvOptionsUnmarshaller Instance { get; }
    private static CsvOptionsUnmarshaller();
    private sealed virtual override CsvOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.CsvOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CsvOptions Unmarshall(JsonUnmarshallerContext context);
    public static CsvOptionsUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteBackupEndpointDiscoveryMarshaller : object {
    private static DeleteBackupEndpointDiscoveryMarshaller _instance;
    public static DeleteBackupEndpointDiscoveryMarshaller Instance { get; }
    private static DeleteBackupEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DeleteBackupRequest publicRequest);
    public static DeleteBackupEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteBackupRequestMarshaller : object {
    private static DeleteBackupRequestMarshaller _instance;
    public static DeleteBackupRequestMarshaller Instance { get; }
    private static DeleteBackupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteBackupRequest publicRequest);
    internal static DeleteBackupRequestMarshaller GetInstance();
    public static DeleteBackupRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteBackupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteBackupResponseUnmarshaller _instance;
    public static DeleteBackupResponseUnmarshaller Instance { get; }
    private static DeleteBackupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteBackupResponseUnmarshaller GetInstance();
    public static DeleteBackupResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteGlobalSecondaryIndexActionMarshaller : object {
    public static DeleteGlobalSecondaryIndexActionMarshaller Instance;
    private static DeleteGlobalSecondaryIndexActionMarshaller();
    public sealed virtual void Marshall(DeleteGlobalSecondaryIndexAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteItemEndpointDiscoveryMarshaller : object {
    private static DeleteItemEndpointDiscoveryMarshaller _instance;
    public static DeleteItemEndpointDiscoveryMarshaller Instance { get; }
    private static DeleteItemEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DeleteItemRequest publicRequest);
    public static DeleteItemEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteItemRequestMarshaller : object {
    private static DeleteItemRequestMarshaller _instance;
    public static DeleteItemRequestMarshaller Instance { get; }
    private static DeleteItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteItemRequest publicRequest);
    internal static DeleteItemRequestMarshaller GetInstance();
    public static DeleteItemRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteItemResponseUnmarshaller _instance;
    public static DeleteItemResponseUnmarshaller Instance { get; }
    private static DeleteItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteItemResponseUnmarshaller GetInstance();
    public static DeleteItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteMarshaller : object {
    public static DeleteMarshaller Instance;
    private static DeleteMarshaller();
    public sealed virtual void Marshall(Delete requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteReplicaActionMarshaller : object {
    public static DeleteReplicaActionMarshaller Instance;
    private static DeleteReplicaActionMarshaller();
    public sealed virtual void Marshall(DeleteReplicaAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteReplicationGroupMemberActionMarshaller : object {
    public static DeleteReplicationGroupMemberActionMarshaller Instance;
    private static DeleteReplicationGroupMemberActionMarshaller();
    public sealed virtual void Marshall(DeleteReplicationGroupMemberAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteRequestMarshaller : object {
    public static DeleteRequestMarshaller Instance;
    private static DeleteRequestMarshaller();
    public sealed virtual void Marshall(DeleteRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteRequestUnmarshaller : object {
    private static DeleteRequestUnmarshaller _instance;
    public static DeleteRequestUnmarshaller Instance { get; }
    private static DeleteRequestUnmarshaller();
    private sealed virtual override DeleteRequest Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.DeleteRequest,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DeleteRequest Unmarshall(JsonUnmarshallerContext context);
    public static DeleteRequestUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteResourcePolicyEndpointDiscoveryMarshaller : object {
    private static DeleteResourcePolicyEndpointDiscoveryMarshaller _instance;
    public static DeleteResourcePolicyEndpointDiscoveryMarshaller Instance { get; }
    private static DeleteResourcePolicyEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DeleteResourcePolicyRequest publicRequest);
    public static DeleteResourcePolicyEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller : object {
    private static DeleteResourcePolicyRequestMarshaller _instance;
    public static DeleteResourcePolicyRequestMarshaller Instance { get; }
    private static DeleteResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteResourcePolicyRequest publicRequest);
    internal static DeleteResourcePolicyRequestMarshaller GetInstance();
    public static DeleteResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteResourcePolicyResponseUnmarshaller _instance;
    public static DeleteResourcePolicyResponseUnmarshaller Instance { get; }
    private static DeleteResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteResourcePolicyResponseUnmarshaller GetInstance();
    public static DeleteResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteTableEndpointDiscoveryMarshaller : object {
    private static DeleteTableEndpointDiscoveryMarshaller _instance;
    public static DeleteTableEndpointDiscoveryMarshaller Instance { get; }
    private static DeleteTableEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DeleteTableRequest publicRequest);
    public static DeleteTableEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteTableRequestMarshaller : object {
    private static DeleteTableRequestMarshaller _instance;
    public static DeleteTableRequestMarshaller Instance { get; }
    private static DeleteTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteTableRequest publicRequest);
    internal static DeleteTableRequestMarshaller GetInstance();
    public static DeleteTableRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteTableResponseUnmarshaller _instance;
    public static DeleteTableResponseUnmarshaller Instance { get; }
    private static DeleteTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteTableResponseUnmarshaller GetInstance();
    public static DeleteTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeBackupEndpointDiscoveryMarshaller : object {
    private static DescribeBackupEndpointDiscoveryMarshaller _instance;
    public static DescribeBackupEndpointDiscoveryMarshaller Instance { get; }
    private static DescribeBackupEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DescribeBackupRequest publicRequest);
    public static DescribeBackupEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeBackupRequestMarshaller : object {
    private static DescribeBackupRequestMarshaller _instance;
    public static DescribeBackupRequestMarshaller Instance { get; }
    private static DescribeBackupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeBackupRequest publicRequest);
    internal static DescribeBackupRequestMarshaller GetInstance();
    public static DescribeBackupRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeBackupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeBackupResponseUnmarshaller _instance;
    public static DescribeBackupResponseUnmarshaller Instance { get; }
    private static DescribeBackupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeBackupResponseUnmarshaller GetInstance();
    public static DescribeBackupResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeContinuousBackupsEndpointDiscoveryMarshaller : object {
    private static DescribeContinuousBackupsEndpointDiscoveryMarshaller _instance;
    public static DescribeContinuousBackupsEndpointDiscoveryMarshaller Instance { get; }
    private static DescribeContinuousBackupsEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DescribeContinuousBackupsRequest publicRequest);
    public static DescribeContinuousBackupsEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeContinuousBackupsRequestMarshaller : object {
    private static DescribeContinuousBackupsRequestMarshaller _instance;
    public static DescribeContinuousBackupsRequestMarshaller Instance { get; }
    private static DescribeContinuousBackupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeContinuousBackupsRequest publicRequest);
    internal static DescribeContinuousBackupsRequestMarshaller GetInstance();
    public static DescribeContinuousBackupsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeContinuousBackupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeContinuousBackupsResponseUnmarshaller _instance;
    public static DescribeContinuousBackupsResponseUnmarshaller Instance { get; }
    private static DescribeContinuousBackupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeContinuousBackupsResponseUnmarshaller GetInstance();
    public static DescribeContinuousBackupsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeContributorInsightsRequestMarshaller : object {
    private static DescribeContributorInsightsRequestMarshaller _instance;
    public static DescribeContributorInsightsRequestMarshaller Instance { get; }
    private static DescribeContributorInsightsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeContributorInsightsRequest publicRequest);
    internal static DescribeContributorInsightsRequestMarshaller GetInstance();
    public static DescribeContributorInsightsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeContributorInsightsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeContributorInsightsResponseUnmarshaller _instance;
    public static DescribeContributorInsightsResponseUnmarshaller Instance { get; }
    private static DescribeContributorInsightsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeContributorInsightsResponseUnmarshaller GetInstance();
    public static DescribeContributorInsightsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeEndpointsRequestMarshaller : object {
    private static DescribeEndpointsRequestMarshaller _instance;
    public static DescribeEndpointsRequestMarshaller Instance { get; }
    private static DescribeEndpointsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeEndpointsRequest publicRequest);
    internal static DescribeEndpointsRequestMarshaller GetInstance();
    public static DescribeEndpointsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeEndpointsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeEndpointsResponseUnmarshaller _instance;
    public static DescribeEndpointsResponseUnmarshaller Instance { get; }
    private static DescribeEndpointsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeEndpointsResponseUnmarshaller GetInstance();
    public static DescribeEndpointsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeExportRequestMarshaller : object {
    private static DescribeExportRequestMarshaller _instance;
    public static DescribeExportRequestMarshaller Instance { get; }
    private static DescribeExportRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeExportRequest publicRequest);
    internal static DescribeExportRequestMarshaller GetInstance();
    public static DescribeExportRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeExportResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeExportResponseUnmarshaller _instance;
    public static DescribeExportResponseUnmarshaller Instance { get; }
    private static DescribeExportResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeExportResponseUnmarshaller GetInstance();
    public static DescribeExportResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeGlobalTableEndpointDiscoveryMarshaller : object {
    private static DescribeGlobalTableEndpointDiscoveryMarshaller _instance;
    public static DescribeGlobalTableEndpointDiscoveryMarshaller Instance { get; }
    private static DescribeGlobalTableEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DescribeGlobalTableRequest publicRequest);
    public static DescribeGlobalTableEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeGlobalTableRequestMarshaller : object {
    private static DescribeGlobalTableRequestMarshaller _instance;
    public static DescribeGlobalTableRequestMarshaller Instance { get; }
    private static DescribeGlobalTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeGlobalTableRequest publicRequest);
    internal static DescribeGlobalTableRequestMarshaller GetInstance();
    public static DescribeGlobalTableRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeGlobalTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeGlobalTableResponseUnmarshaller _instance;
    public static DescribeGlobalTableResponseUnmarshaller Instance { get; }
    private static DescribeGlobalTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeGlobalTableResponseUnmarshaller GetInstance();
    public static DescribeGlobalTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeGlobalTableSettingsEndpointDiscoveryMarshaller : object {
    private static DescribeGlobalTableSettingsEndpointDiscoveryMarshaller _instance;
    public static DescribeGlobalTableSettingsEndpointDiscoveryMarshaller Instance { get; }
    private static DescribeGlobalTableSettingsEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DescribeGlobalTableSettingsRequest publicRequest);
    public static DescribeGlobalTableSettingsEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeGlobalTableSettingsRequestMarshaller : object {
    private static DescribeGlobalTableSettingsRequestMarshaller _instance;
    public static DescribeGlobalTableSettingsRequestMarshaller Instance { get; }
    private static DescribeGlobalTableSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeGlobalTableSettingsRequest publicRequest);
    internal static DescribeGlobalTableSettingsRequestMarshaller GetInstance();
    public static DescribeGlobalTableSettingsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeGlobalTableSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeGlobalTableSettingsResponseUnmarshaller _instance;
    public static DescribeGlobalTableSettingsResponseUnmarshaller Instance { get; }
    private static DescribeGlobalTableSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeGlobalTableSettingsResponseUnmarshaller GetInstance();
    public static DescribeGlobalTableSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeImportRequestMarshaller : object {
    private static DescribeImportRequestMarshaller _instance;
    public static DescribeImportRequestMarshaller Instance { get; }
    private static DescribeImportRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeImportRequest publicRequest);
    internal static DescribeImportRequestMarshaller GetInstance();
    public static DescribeImportRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeImportResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeImportResponseUnmarshaller _instance;
    public static DescribeImportResponseUnmarshaller Instance { get; }
    private static DescribeImportResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeImportResponseUnmarshaller GetInstance();
    public static DescribeImportResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeKinesisStreamingDestinationEndpointDiscoveryMarshaller : object {
    private static DescribeKinesisStreamingDestinationEndpointDiscoveryMarshaller _instance;
    public static DescribeKinesisStreamingDestinationEndpointDiscoveryMarshaller Instance { get; }
    private static DescribeKinesisStreamingDestinationEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DescribeKinesisStreamingDestinationRequest publicRequest);
    public static DescribeKinesisStreamingDestinationEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeKinesisStreamingDestinationRequestMarshaller : object {
    private static DescribeKinesisStreamingDestinationRequestMarshaller _instance;
    public static DescribeKinesisStreamingDestinationRequestMarshaller Instance { get; }
    private static DescribeKinesisStreamingDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeKinesisStreamingDestinationRequest publicRequest);
    internal static DescribeKinesisStreamingDestinationRequestMarshaller GetInstance();
    public static DescribeKinesisStreamingDestinationRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeKinesisStreamingDestinationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeKinesisStreamingDestinationResponseUnmarshaller _instance;
    public static DescribeKinesisStreamingDestinationResponseUnmarshaller Instance { get; }
    private static DescribeKinesisStreamingDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeKinesisStreamingDestinationResponseUnmarshaller GetInstance();
    public static DescribeKinesisStreamingDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeLimitsEndpointDiscoveryMarshaller : object {
    private static DescribeLimitsEndpointDiscoveryMarshaller _instance;
    public static DescribeLimitsEndpointDiscoveryMarshaller Instance { get; }
    private static DescribeLimitsEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DescribeLimitsRequest publicRequest);
    public static DescribeLimitsEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeLimitsRequestMarshaller : object {
    private static DescribeLimitsRequestMarshaller _instance;
    public static DescribeLimitsRequestMarshaller Instance { get; }
    private static DescribeLimitsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeLimitsRequest publicRequest);
    internal static DescribeLimitsRequestMarshaller GetInstance();
    public static DescribeLimitsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeLimitsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeLimitsResponseUnmarshaller _instance;
    public static DescribeLimitsResponseUnmarshaller Instance { get; }
    private static DescribeLimitsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeLimitsResponseUnmarshaller GetInstance();
    public static DescribeLimitsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeStreamRequestMarshaller : object {
    private static DescribeStreamRequestMarshaller _instance;
    public static DescribeStreamRequestMarshaller Instance { get; }
    private static DescribeStreamRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeStreamRequest publicRequest);
    internal static DescribeStreamRequestMarshaller GetInstance();
    public static DescribeStreamRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeStreamResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeStreamResponseUnmarshaller _instance;
    public static DescribeStreamResponseUnmarshaller Instance { get; }
    private static DescribeStreamResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeStreamResponseUnmarshaller GetInstance();
    public static DescribeStreamResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableEndpointDiscoveryMarshaller : object {
    private static DescribeTableEndpointDiscoveryMarshaller _instance;
    public static DescribeTableEndpointDiscoveryMarshaller Instance { get; }
    private static DescribeTableEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DescribeTableRequest publicRequest);
    public static DescribeTableEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableReplicaAutoScalingRequestMarshaller : object {
    private static DescribeTableReplicaAutoScalingRequestMarshaller _instance;
    public static DescribeTableReplicaAutoScalingRequestMarshaller Instance { get; }
    private static DescribeTableReplicaAutoScalingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTableReplicaAutoScalingRequest publicRequest);
    internal static DescribeTableReplicaAutoScalingRequestMarshaller GetInstance();
    public static DescribeTableReplicaAutoScalingRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableReplicaAutoScalingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTableReplicaAutoScalingResponseUnmarshaller _instance;
    public static DescribeTableReplicaAutoScalingResponseUnmarshaller Instance { get; }
    private static DescribeTableReplicaAutoScalingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTableReplicaAutoScalingResponseUnmarshaller GetInstance();
    public static DescribeTableReplicaAutoScalingResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableRequestMarshaller : object {
    private static DescribeTableRequestMarshaller _instance;
    public static DescribeTableRequestMarshaller Instance { get; }
    private static DescribeTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTableRequest publicRequest);
    internal static DescribeTableRequestMarshaller GetInstance();
    public static DescribeTableRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTableResponseUnmarshaller _instance;
    public static DescribeTableResponseUnmarshaller Instance { get; }
    private static DescribeTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTableResponseUnmarshaller GetInstance();
    public static DescribeTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTimeToLiveEndpointDiscoveryMarshaller : object {
    private static DescribeTimeToLiveEndpointDiscoveryMarshaller _instance;
    public static DescribeTimeToLiveEndpointDiscoveryMarshaller Instance { get; }
    private static DescribeTimeToLiveEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DescribeTimeToLiveRequest publicRequest);
    public static DescribeTimeToLiveEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTimeToLiveRequestMarshaller : object {
    private static DescribeTimeToLiveRequestMarshaller _instance;
    public static DescribeTimeToLiveRequestMarshaller Instance { get; }
    private static DescribeTimeToLiveRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeTimeToLiveRequest publicRequest);
    internal static DescribeTimeToLiveRequestMarshaller GetInstance();
    public static DescribeTimeToLiveRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTimeToLiveResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeTimeToLiveResponseUnmarshaller _instance;
    public static DescribeTimeToLiveResponseUnmarshaller Instance { get; }
    private static DescribeTimeToLiveResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeTimeToLiveResponseUnmarshaller GetInstance();
    public static DescribeTimeToLiveResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DisableKinesisStreamingDestinationEndpointDiscoveryMarshaller : object {
    private static DisableKinesisStreamingDestinationEndpointDiscoveryMarshaller _instance;
    public static DisableKinesisStreamingDestinationEndpointDiscoveryMarshaller Instance { get; }
    private static DisableKinesisStreamingDestinationEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(DisableKinesisStreamingDestinationRequest publicRequest);
    public static DisableKinesisStreamingDestinationEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DisableKinesisStreamingDestinationRequestMarshaller : object {
    private static DisableKinesisStreamingDestinationRequestMarshaller _instance;
    public static DisableKinesisStreamingDestinationRequestMarshaller Instance { get; }
    private static DisableKinesisStreamingDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DisableKinesisStreamingDestinationRequest publicRequest);
    internal static DisableKinesisStreamingDestinationRequestMarshaller GetInstance();
    public static DisableKinesisStreamingDestinationRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DisableKinesisStreamingDestinationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DisableKinesisStreamingDestinationResponseUnmarshaller _instance;
    public static DisableKinesisStreamingDestinationResponseUnmarshaller Instance { get; }
    private static DisableKinesisStreamingDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DisableKinesisStreamingDestinationResponseUnmarshaller GetInstance();
    public static DisableKinesisStreamingDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DuplicateItemExceptionUnmarshaller : object {
    private static DuplicateItemExceptionUnmarshaller _instance;
    public static DuplicateItemExceptionUnmarshaller Instance { get; }
    private static DuplicateItemExceptionUnmarshaller();
    public sealed virtual DuplicateItemException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual DuplicateItemException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static DuplicateItemExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.EnableKinesisStreamingConfigurationMarshaller : object {
    public static EnableKinesisStreamingConfigurationMarshaller Instance;
    private static EnableKinesisStreamingConfigurationMarshaller();
    public sealed virtual void Marshall(EnableKinesisStreamingConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.EnableKinesisStreamingConfigurationUnmarshaller : object {
    private static EnableKinesisStreamingConfigurationUnmarshaller _instance;
    public static EnableKinesisStreamingConfigurationUnmarshaller Instance { get; }
    private static EnableKinesisStreamingConfigurationUnmarshaller();
    private sealed virtual override EnableKinesisStreamingConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.EnableKinesisStreamingConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual EnableKinesisStreamingConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static EnableKinesisStreamingConfigurationUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.EnableKinesisStreamingDestinationEndpointDiscoveryMarshaller : object {
    private static EnableKinesisStreamingDestinationEndpointDiscoveryMarshaller _instance;
    public static EnableKinesisStreamingDestinationEndpointDiscoveryMarshaller Instance { get; }
    private static EnableKinesisStreamingDestinationEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(EnableKinesisStreamingDestinationRequest publicRequest);
    public static EnableKinesisStreamingDestinationEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.EnableKinesisStreamingDestinationRequestMarshaller : object {
    private static EnableKinesisStreamingDestinationRequestMarshaller _instance;
    public static EnableKinesisStreamingDestinationRequestMarshaller Instance { get; }
    private static EnableKinesisStreamingDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(EnableKinesisStreamingDestinationRequest publicRequest);
    internal static EnableKinesisStreamingDestinationRequestMarshaller GetInstance();
    public static EnableKinesisStreamingDestinationRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.EnableKinesisStreamingDestinationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static EnableKinesisStreamingDestinationResponseUnmarshaller _instance;
    public static EnableKinesisStreamingDestinationResponseUnmarshaller Instance { get; }
    private static EnableKinesisStreamingDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static EnableKinesisStreamingDestinationResponseUnmarshaller GetInstance();
    public static EnableKinesisStreamingDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.EndpointUnmarshaller : object {
    private static EndpointUnmarshaller _instance;
    public static EndpointUnmarshaller Instance { get; }
    private static EndpointUnmarshaller();
    private sealed virtual override Endpoint Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Endpoint,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Endpoint Unmarshall(JsonUnmarshallerContext context);
    public static EndpointUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExecuteStatementRequestMarshaller : object {
    private static ExecuteStatementRequestMarshaller _instance;
    public static ExecuteStatementRequestMarshaller Instance { get; }
    private static ExecuteStatementRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExecuteStatementRequest publicRequest);
    internal static ExecuteStatementRequestMarshaller GetInstance();
    public static ExecuteStatementRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExecuteStatementResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ExecuteStatementResponseUnmarshaller _instance;
    public static ExecuteStatementResponseUnmarshaller Instance { get; }
    private static ExecuteStatementResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExecuteStatementResponseUnmarshaller GetInstance();
    public static ExecuteStatementResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExecuteTransactionRequestMarshaller : object {
    private static ExecuteTransactionRequestMarshaller _instance;
    public static ExecuteTransactionRequestMarshaller Instance { get; }
    private static ExecuteTransactionRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExecuteTransactionRequest publicRequest);
    internal static ExecuteTransactionRequestMarshaller GetInstance();
    public static ExecuteTransactionRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExecuteTransactionResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ExecuteTransactionResponseUnmarshaller _instance;
    public static ExecuteTransactionResponseUnmarshaller Instance { get; }
    private static ExecuteTransactionResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExecuteTransactionResponseUnmarshaller GetInstance();
    public static ExecuteTransactionResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExpectedAttributeValueMarshaller : object {
    public static ExpectedAttributeValueMarshaller Instance;
    private static ExpectedAttributeValueMarshaller();
    public sealed virtual void Marshall(ExpectedAttributeValue requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExpiredIteratorExceptionUnmarshaller : object {
    private static ExpiredIteratorExceptionUnmarshaller _instance;
    public static ExpiredIteratorExceptionUnmarshaller Instance { get; }
    private static ExpiredIteratorExceptionUnmarshaller();
    public sealed virtual ExpiredIteratorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ExpiredIteratorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ExpiredIteratorExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExportConflictExceptionUnmarshaller : object {
    private static ExportConflictExceptionUnmarshaller _instance;
    public static ExportConflictExceptionUnmarshaller Instance { get; }
    private static ExportConflictExceptionUnmarshaller();
    public sealed virtual ExportConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ExportConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ExportConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExportDescriptionUnmarshaller : object {
    private static ExportDescriptionUnmarshaller _instance;
    public static ExportDescriptionUnmarshaller Instance { get; }
    private static ExportDescriptionUnmarshaller();
    private sealed virtual override ExportDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ExportDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportDescription Unmarshall(JsonUnmarshallerContext context);
    public static ExportDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExportNotFoundExceptionUnmarshaller : object {
    private static ExportNotFoundExceptionUnmarshaller _instance;
    public static ExportNotFoundExceptionUnmarshaller Instance { get; }
    private static ExportNotFoundExceptionUnmarshaller();
    public sealed virtual ExportNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ExportNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ExportNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExportSummaryUnmarshaller : object {
    private static ExportSummaryUnmarshaller _instance;
    public static ExportSummaryUnmarshaller Instance { get; }
    private static ExportSummaryUnmarshaller();
    private sealed virtual override ExportSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ExportSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ExportSummary Unmarshall(JsonUnmarshallerContext context);
    public static ExportSummaryUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExportTableToPointInTimeRequestMarshaller : object {
    private static ExportTableToPointInTimeRequestMarshaller _instance;
    public static ExportTableToPointInTimeRequestMarshaller Instance { get; }
    private static ExportTableToPointInTimeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ExportTableToPointInTimeRequest publicRequest);
    internal static ExportTableToPointInTimeRequestMarshaller GetInstance();
    public static ExportTableToPointInTimeRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExportTableToPointInTimeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ExportTableToPointInTimeResponseUnmarshaller _instance;
    public static ExportTableToPointInTimeResponseUnmarshaller Instance { get; }
    private static ExportTableToPointInTimeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ExportTableToPointInTimeResponseUnmarshaller GetInstance();
    public static ExportTableToPointInTimeResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.FailureExceptionUnmarshaller : object {
    private static FailureExceptionUnmarshaller _instance;
    public static FailureExceptionUnmarshaller Instance { get; }
    private static FailureExceptionUnmarshaller();
    private sealed virtual override FailureException Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.FailureException,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual FailureException Unmarshall(JsonUnmarshallerContext context);
    public static FailureExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetItemEndpointDiscoveryMarshaller : object {
    private static GetItemEndpointDiscoveryMarshaller _instance;
    public static GetItemEndpointDiscoveryMarshaller Instance { get; }
    private static GetItemEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(GetItemRequest publicRequest);
    public static GetItemEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetItemRequestMarshaller : object {
    private static GetItemRequestMarshaller _instance;
    public static GetItemRequestMarshaller Instance { get; }
    private static GetItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetItemRequest publicRequest);
    internal static GetItemRequestMarshaller GetInstance();
    public static GetItemRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetItemResponseUnmarshaller _instance;
    public static GetItemResponseUnmarshaller Instance { get; }
    private static GetItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetItemResponseUnmarshaller GetInstance();
    public static GetItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetMarshaller : object {
    public static GetMarshaller Instance;
    private static GetMarshaller();
    public sealed virtual void Marshall(Get requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetRecordsRequestMarshaller : object {
    private static GetRecordsRequestMarshaller _instance;
    public static GetRecordsRequestMarshaller Instance { get; }
    private static GetRecordsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetRecordsRequest publicRequest);
    internal static GetRecordsRequestMarshaller GetInstance();
    public static GetRecordsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetRecordsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetRecordsResponseUnmarshaller _instance;
    public static GetRecordsResponseUnmarshaller Instance { get; }
    private static GetRecordsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetRecordsResponseUnmarshaller GetInstance();
    public static GetRecordsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetResourcePolicyEndpointDiscoveryMarshaller : object {
    private static GetResourcePolicyEndpointDiscoveryMarshaller _instance;
    public static GetResourcePolicyEndpointDiscoveryMarshaller Instance { get; }
    private static GetResourcePolicyEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(GetResourcePolicyRequest publicRequest);
    public static GetResourcePolicyEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetResourcePolicyRequestMarshaller : object {
    private static GetResourcePolicyRequestMarshaller _instance;
    public static GetResourcePolicyRequestMarshaller Instance { get; }
    private static GetResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetResourcePolicyRequest publicRequest);
    internal static GetResourcePolicyRequestMarshaller GetInstance();
    public static GetResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetResourcePolicyResponseUnmarshaller _instance;
    public static GetResourcePolicyResponseUnmarshaller Instance { get; }
    private static GetResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetResourcePolicyResponseUnmarshaller GetInstance();
    public static GetResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetShardIteratorRequestMarshaller : object {
    private static GetShardIteratorRequestMarshaller _instance;
    public static GetShardIteratorRequestMarshaller Instance { get; }
    private static GetShardIteratorRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetShardIteratorRequest publicRequest);
    internal static GetShardIteratorRequestMarshaller GetInstance();
    public static GetShardIteratorRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetShardIteratorResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetShardIteratorResponseUnmarshaller _instance;
    public static GetShardIteratorResponseUnmarshaller Instance { get; }
    private static GetShardIteratorResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetShardIteratorResponseUnmarshaller GetInstance();
    public static GetShardIteratorResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexAutoScalingUpdateMarshaller : object {
    public static GlobalSecondaryIndexAutoScalingUpdateMarshaller Instance;
    private static GlobalSecondaryIndexAutoScalingUpdateMarshaller();
    public sealed virtual void Marshall(GlobalSecondaryIndexAutoScalingUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexDescriptionUnmarshaller : object {
    private static GlobalSecondaryIndexDescriptionUnmarshaller _instance;
    public static GlobalSecondaryIndexDescriptionUnmarshaller Instance { get; }
    private static GlobalSecondaryIndexDescriptionUnmarshaller();
    private sealed virtual override GlobalSecondaryIndexDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalSecondaryIndexDescription Unmarshall(JsonUnmarshallerContext context);
    public static GlobalSecondaryIndexDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexInfoUnmarshaller : object {
    private static GlobalSecondaryIndexInfoUnmarshaller _instance;
    public static GlobalSecondaryIndexInfoUnmarshaller Instance { get; }
    private static GlobalSecondaryIndexInfoUnmarshaller();
    private sealed virtual override GlobalSecondaryIndexInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.GlobalSecondaryIndexInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalSecondaryIndexInfo Unmarshall(JsonUnmarshallerContext context);
    public static GlobalSecondaryIndexInfoUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexMarshaller : object {
    public static GlobalSecondaryIndexMarshaller Instance;
    private static GlobalSecondaryIndexMarshaller();
    public sealed virtual void Marshall(GlobalSecondaryIndex requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexUnmarshaller : object {
    private static GlobalSecondaryIndexUnmarshaller _instance;
    public static GlobalSecondaryIndexUnmarshaller Instance { get; }
    private static GlobalSecondaryIndexUnmarshaller();
    private sealed virtual override GlobalSecondaryIndex Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.GlobalSecondaryIndex,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalSecondaryIndex Unmarshall(JsonUnmarshallerContext context);
    public static GlobalSecondaryIndexUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexUpdateMarshaller : object {
    public static GlobalSecondaryIndexUpdateMarshaller Instance;
    private static GlobalSecondaryIndexUpdateMarshaller();
    public sealed virtual void Marshall(GlobalSecondaryIndexUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalTableAlreadyExistsExceptionUnmarshaller : object {
    private static GlobalTableAlreadyExistsExceptionUnmarshaller _instance;
    public static GlobalTableAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static GlobalTableAlreadyExistsExceptionUnmarshaller();
    public sealed virtual GlobalTableAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual GlobalTableAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static GlobalTableAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalTableDescriptionUnmarshaller : object {
    private static GlobalTableDescriptionUnmarshaller _instance;
    public static GlobalTableDescriptionUnmarshaller Instance { get; }
    private static GlobalTableDescriptionUnmarshaller();
    private sealed virtual override GlobalTableDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.GlobalTableDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalTableDescription Unmarshall(JsonUnmarshallerContext context);
    public static GlobalTableDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalTableGlobalSecondaryIndexSettingsUpdateMarshaller : object {
    public static GlobalTableGlobalSecondaryIndexSettingsUpdateMarshaller Instance;
    private static GlobalTableGlobalSecondaryIndexSettingsUpdateMarshaller();
    public sealed virtual void Marshall(GlobalTableGlobalSecondaryIndexSettingsUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalTableNotFoundExceptionUnmarshaller : object {
    private static GlobalTableNotFoundExceptionUnmarshaller _instance;
    public static GlobalTableNotFoundExceptionUnmarshaller Instance { get; }
    private static GlobalTableNotFoundExceptionUnmarshaller();
    public sealed virtual GlobalTableNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual GlobalTableNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static GlobalTableNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalTableUnmarshaller : object {
    private static GlobalTableUnmarshaller _instance;
    public static GlobalTableUnmarshaller Instance { get; }
    private static GlobalTableUnmarshaller();
    private sealed virtual override GlobalTable Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.GlobalTable,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlobalTable Unmarshall(JsonUnmarshallerContext context);
    public static GlobalTableUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.IdempotentParameterMismatchExceptionUnmarshaller : object {
    private static IdempotentParameterMismatchExceptionUnmarshaller _instance;
    public static IdempotentParameterMismatchExceptionUnmarshaller Instance { get; }
    private static IdempotentParameterMismatchExceptionUnmarshaller();
    public sealed virtual IdempotentParameterMismatchException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IdempotentParameterMismatchException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IdempotentParameterMismatchExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.IdentityUnmarshaller : object {
    private static IdentityUnmarshaller _instance;
    public static IdentityUnmarshaller Instance { get; }
    private static IdentityUnmarshaller();
    private sealed virtual override Identity Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Identity,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Identity Unmarshall(JsonUnmarshallerContext context);
    public static IdentityUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ImportConflictExceptionUnmarshaller : object {
    private static ImportConflictExceptionUnmarshaller _instance;
    public static ImportConflictExceptionUnmarshaller Instance { get; }
    private static ImportConflictExceptionUnmarshaller();
    public sealed virtual ImportConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ImportConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ImportConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ImportNotFoundExceptionUnmarshaller : object {
    private static ImportNotFoundExceptionUnmarshaller _instance;
    public static ImportNotFoundExceptionUnmarshaller Instance { get; }
    private static ImportNotFoundExceptionUnmarshaller();
    public sealed virtual ImportNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ImportNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ImportNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ImportSummaryUnmarshaller : object {
    private static ImportSummaryUnmarshaller _instance;
    public static ImportSummaryUnmarshaller Instance { get; }
    private static ImportSummaryUnmarshaller();
    private sealed virtual override ImportSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ImportSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportSummary Unmarshall(JsonUnmarshallerContext context);
    public static ImportSummaryUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ImportTableDescriptionUnmarshaller : object {
    private static ImportTableDescriptionUnmarshaller _instance;
    public static ImportTableDescriptionUnmarshaller Instance { get; }
    private static ImportTableDescriptionUnmarshaller();
    private sealed virtual override ImportTableDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ImportTableDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ImportTableDescription Unmarshall(JsonUnmarshallerContext context);
    public static ImportTableDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ImportTableRequestMarshaller : object {
    private static ImportTableRequestMarshaller _instance;
    public static ImportTableRequestMarshaller Instance { get; }
    private static ImportTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ImportTableRequest publicRequest);
    internal static ImportTableRequestMarshaller GetInstance();
    public static ImportTableRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ImportTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ImportTableResponseUnmarshaller _instance;
    public static ImportTableResponseUnmarshaller Instance { get; }
    private static ImportTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ImportTableResponseUnmarshaller GetInstance();
    public static ImportTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.IncrementalExportSpecificationMarshaller : object {
    public static IncrementalExportSpecificationMarshaller Instance;
    private static IncrementalExportSpecificationMarshaller();
    public sealed virtual void Marshall(IncrementalExportSpecification requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.IncrementalExportSpecificationUnmarshaller : object {
    private static IncrementalExportSpecificationUnmarshaller _instance;
    public static IncrementalExportSpecificationUnmarshaller Instance { get; }
    private static IncrementalExportSpecificationUnmarshaller();
    private sealed virtual override IncrementalExportSpecification Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.IncrementalExportSpecification,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual IncrementalExportSpecification Unmarshall(JsonUnmarshallerContext context);
    public static IncrementalExportSpecificationUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.IndexNotFoundExceptionUnmarshaller : object {
    private static IndexNotFoundExceptionUnmarshaller _instance;
    public static IndexNotFoundExceptionUnmarshaller Instance { get; }
    private static IndexNotFoundExceptionUnmarshaller();
    public sealed virtual IndexNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual IndexNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static IndexNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.InputFormatOptionsMarshaller : object {
    public static InputFormatOptionsMarshaller Instance;
    private static InputFormatOptionsMarshaller();
    public sealed virtual void Marshall(InputFormatOptions requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.InputFormatOptionsUnmarshaller : object {
    private static InputFormatOptionsUnmarshaller _instance;
    public static InputFormatOptionsUnmarshaller Instance { get; }
    private static InputFormatOptionsUnmarshaller();
    private sealed virtual override InputFormatOptions Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.InputFormatOptions,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InputFormatOptions Unmarshall(JsonUnmarshallerContext context);
    public static InputFormatOptionsUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller : object {
    private static InternalServerErrorExceptionUnmarshaller _instance;
    public static InternalServerErrorExceptionUnmarshaller Instance { get; }
    private static InternalServerErrorExceptionUnmarshaller();
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InternalServerErrorException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InternalServerErrorExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.InvalidExportTimeExceptionUnmarshaller : object {
    private static InvalidExportTimeExceptionUnmarshaller _instance;
    public static InvalidExportTimeExceptionUnmarshaller Instance { get; }
    private static InvalidExportTimeExceptionUnmarshaller();
    public sealed virtual InvalidExportTimeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidExportTimeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidExportTimeExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.InvalidRestoreTimeExceptionUnmarshaller : object {
    private static InvalidRestoreTimeExceptionUnmarshaller _instance;
    public static InvalidRestoreTimeExceptionUnmarshaller Instance { get; }
    private static InvalidRestoreTimeExceptionUnmarshaller();
    public sealed virtual InvalidRestoreTimeException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidRestoreTimeException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidRestoreTimeExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ItemCollectionMetricsUnmarshaller : object {
    private static ItemCollectionMetricsUnmarshaller _instance;
    public static ItemCollectionMetricsUnmarshaller Instance { get; }
    private static ItemCollectionMetricsUnmarshaller();
    private sealed virtual override ItemCollectionMetrics Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ItemCollectionMetrics,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ItemCollectionMetrics Unmarshall(JsonUnmarshallerContext context);
    public static ItemCollectionMetricsUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ItemCollectionSizeLimitExceededExceptionUnmarshaller : object {
    private static ItemCollectionSizeLimitExceededExceptionUnmarshaller _instance;
    public static ItemCollectionSizeLimitExceededExceptionUnmarshaller Instance { get; }
    private static ItemCollectionSizeLimitExceededExceptionUnmarshaller();
    public sealed virtual ItemCollectionSizeLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ItemCollectionSizeLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ItemCollectionSizeLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ItemResponseUnmarshaller : object {
    private static ItemResponseUnmarshaller _instance;
    public static ItemResponseUnmarshaller Instance { get; }
    private static ItemResponseUnmarshaller();
    private sealed virtual override ItemResponse Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ItemResponse,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ItemResponse Unmarshall(JsonUnmarshallerContext context);
    public static ItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeysAndAttributesMarshaller : object {
    public static KeysAndAttributesMarshaller Instance;
    private static KeysAndAttributesMarshaller();
    public sealed virtual void Marshall(KeysAndAttributes requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeysAndAttributesUnmarshaller : object {
    private static KeysAndAttributesUnmarshaller _instance;
    public static KeysAndAttributesUnmarshaller Instance { get; }
    private static KeysAndAttributesUnmarshaller();
    private sealed virtual override KeysAndAttributes Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.KeysAndAttributes,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeysAndAttributes Unmarshall(JsonUnmarshallerContext context);
    public static KeysAndAttributesUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeySchemaElementMarshaller : object {
    public static KeySchemaElementMarshaller Instance;
    private static KeySchemaElementMarshaller();
    public sealed virtual void Marshall(KeySchemaElement requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeySchemaElementUnmarshaller : object {
    private static KeySchemaElementUnmarshaller _instance;
    public static KeySchemaElementUnmarshaller Instance { get; }
    private static KeySchemaElementUnmarshaller();
    private sealed virtual override KeySchemaElement Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.KeySchemaElement,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KeySchemaElement Unmarshall(JsonUnmarshallerContext context);
    public static KeySchemaElementUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KinesisDataStreamDestinationUnmarshaller : object {
    private static KinesisDataStreamDestinationUnmarshaller _instance;
    public static KinesisDataStreamDestinationUnmarshaller Instance { get; }
    private static KinesisDataStreamDestinationUnmarshaller();
    private sealed virtual override KinesisDataStreamDestination Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.KinesisDataStreamDestination,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual KinesisDataStreamDestination Unmarshall(JsonUnmarshallerContext context);
    public static KinesisDataStreamDestinationUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListBackupsEndpointDiscoveryMarshaller : object {
    private static ListBackupsEndpointDiscoveryMarshaller _instance;
    public static ListBackupsEndpointDiscoveryMarshaller Instance { get; }
    private static ListBackupsEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(ListBackupsRequest publicRequest);
    public static ListBackupsEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListBackupsRequestMarshaller : object {
    private static ListBackupsRequestMarshaller _instance;
    public static ListBackupsRequestMarshaller Instance { get; }
    private static ListBackupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListBackupsRequest publicRequest);
    internal static ListBackupsRequestMarshaller GetInstance();
    public static ListBackupsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListBackupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListBackupsResponseUnmarshaller _instance;
    public static ListBackupsResponseUnmarshaller Instance { get; }
    private static ListBackupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListBackupsResponseUnmarshaller GetInstance();
    public static ListBackupsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListContributorInsightsRequestMarshaller : object {
    private static ListContributorInsightsRequestMarshaller _instance;
    public static ListContributorInsightsRequestMarshaller Instance { get; }
    private static ListContributorInsightsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListContributorInsightsRequest publicRequest);
    internal static ListContributorInsightsRequestMarshaller GetInstance();
    public static ListContributorInsightsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListContributorInsightsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListContributorInsightsResponseUnmarshaller _instance;
    public static ListContributorInsightsResponseUnmarshaller Instance { get; }
    private static ListContributorInsightsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListContributorInsightsResponseUnmarshaller GetInstance();
    public static ListContributorInsightsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListExportsRequestMarshaller : object {
    private static ListExportsRequestMarshaller _instance;
    public static ListExportsRequestMarshaller Instance { get; }
    private static ListExportsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListExportsRequest publicRequest);
    internal static ListExportsRequestMarshaller GetInstance();
    public static ListExportsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListExportsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListExportsResponseUnmarshaller _instance;
    public static ListExportsResponseUnmarshaller Instance { get; }
    private static ListExportsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListExportsResponseUnmarshaller GetInstance();
    public static ListExportsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListGlobalTablesEndpointDiscoveryMarshaller : object {
    private static ListGlobalTablesEndpointDiscoveryMarshaller _instance;
    public static ListGlobalTablesEndpointDiscoveryMarshaller Instance { get; }
    private static ListGlobalTablesEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(ListGlobalTablesRequest publicRequest);
    public static ListGlobalTablesEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListGlobalTablesRequestMarshaller : object {
    private static ListGlobalTablesRequestMarshaller _instance;
    public static ListGlobalTablesRequestMarshaller Instance { get; }
    private static ListGlobalTablesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListGlobalTablesRequest publicRequest);
    internal static ListGlobalTablesRequestMarshaller GetInstance();
    public static ListGlobalTablesRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListGlobalTablesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListGlobalTablesResponseUnmarshaller _instance;
    public static ListGlobalTablesResponseUnmarshaller Instance { get; }
    private static ListGlobalTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListGlobalTablesResponseUnmarshaller GetInstance();
    public static ListGlobalTablesResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListImportsRequestMarshaller : object {
    private static ListImportsRequestMarshaller _instance;
    public static ListImportsRequestMarshaller Instance { get; }
    private static ListImportsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListImportsRequest publicRequest);
    internal static ListImportsRequestMarshaller GetInstance();
    public static ListImportsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListImportsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListImportsResponseUnmarshaller _instance;
    public static ListImportsResponseUnmarshaller Instance { get; }
    private static ListImportsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListImportsResponseUnmarshaller GetInstance();
    public static ListImportsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListStreamsRequestMarshaller : object {
    private static ListStreamsRequestMarshaller _instance;
    public static ListStreamsRequestMarshaller Instance { get; }
    private static ListStreamsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListStreamsRequest publicRequest);
    internal static ListStreamsRequestMarshaller GetInstance();
    public static ListStreamsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListStreamsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListStreamsResponseUnmarshaller _instance;
    public static ListStreamsResponseUnmarshaller Instance { get; }
    private static ListStreamsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListStreamsResponseUnmarshaller GetInstance();
    public static ListStreamsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTablesEndpointDiscoveryMarshaller : object {
    private static ListTablesEndpointDiscoveryMarshaller _instance;
    public static ListTablesEndpointDiscoveryMarshaller Instance { get; }
    private static ListTablesEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(ListTablesRequest publicRequest);
    public static ListTablesEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTablesRequestMarshaller : object {
    private static ListTablesRequestMarshaller _instance;
    public static ListTablesRequestMarshaller Instance { get; }
    private static ListTablesRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTablesRequest publicRequest);
    internal static ListTablesRequestMarshaller GetInstance();
    public static ListTablesRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTablesResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTablesResponseUnmarshaller _instance;
    public static ListTablesResponseUnmarshaller Instance { get; }
    private static ListTablesResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTablesResponseUnmarshaller GetInstance();
    public static ListTablesResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTagsOfResourceEndpointDiscoveryMarshaller : object {
    private static ListTagsOfResourceEndpointDiscoveryMarshaller _instance;
    public static ListTagsOfResourceEndpointDiscoveryMarshaller Instance { get; }
    private static ListTagsOfResourceEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(ListTagsOfResourceRequest publicRequest);
    public static ListTagsOfResourceEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTagsOfResourceRequestMarshaller : object {
    private static ListTagsOfResourceRequestMarshaller _instance;
    public static ListTagsOfResourceRequestMarshaller Instance { get; }
    private static ListTagsOfResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsOfResourceRequest publicRequest);
    internal static ListTagsOfResourceRequestMarshaller GetInstance();
    public static ListTagsOfResourceRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTagsOfResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsOfResourceResponseUnmarshaller _instance;
    public static ListTagsOfResourceResponseUnmarshaller Instance { get; }
    private static ListTagsOfResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsOfResourceResponseUnmarshaller GetInstance();
    public static ListTagsOfResourceResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.LocalSecondaryIndexDescriptionUnmarshaller : object {
    private static LocalSecondaryIndexDescriptionUnmarshaller _instance;
    public static LocalSecondaryIndexDescriptionUnmarshaller Instance { get; }
    private static LocalSecondaryIndexDescriptionUnmarshaller();
    private sealed virtual override LocalSecondaryIndexDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LocalSecondaryIndexDescription Unmarshall(JsonUnmarshallerContext context);
    public static LocalSecondaryIndexDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.LocalSecondaryIndexInfoUnmarshaller : object {
    private static LocalSecondaryIndexInfoUnmarshaller _instance;
    public static LocalSecondaryIndexInfoUnmarshaller Instance { get; }
    private static LocalSecondaryIndexInfoUnmarshaller();
    private sealed virtual override LocalSecondaryIndexInfo Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.LocalSecondaryIndexInfo,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual LocalSecondaryIndexInfo Unmarshall(JsonUnmarshallerContext context);
    public static LocalSecondaryIndexInfoUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.LocalSecondaryIndexMarshaller : object {
    public static LocalSecondaryIndexMarshaller Instance;
    private static LocalSecondaryIndexMarshaller();
    public sealed virtual void Marshall(LocalSecondaryIndex requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.OnDemandThroughputMarshaller : object {
    public static OnDemandThroughputMarshaller Instance;
    private static OnDemandThroughputMarshaller();
    public sealed virtual void Marshall(OnDemandThroughput requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.OnDemandThroughputOverrideMarshaller : object {
    public static OnDemandThroughputOverrideMarshaller Instance;
    private static OnDemandThroughputOverrideMarshaller();
    public sealed virtual void Marshall(OnDemandThroughputOverride requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.OnDemandThroughputOverrideUnmarshaller : object {
    private static OnDemandThroughputOverrideUnmarshaller _instance;
    public static OnDemandThroughputOverrideUnmarshaller Instance { get; }
    private static OnDemandThroughputOverrideUnmarshaller();
    private sealed virtual override OnDemandThroughputOverride Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.OnDemandThroughputOverride,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OnDemandThroughputOverride Unmarshall(JsonUnmarshallerContext context);
    public static OnDemandThroughputOverrideUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.OnDemandThroughputUnmarshaller : object {
    private static OnDemandThroughputUnmarshaller _instance;
    public static OnDemandThroughputUnmarshaller Instance { get; }
    private static OnDemandThroughputUnmarshaller();
    private sealed virtual override OnDemandThroughput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.OnDemandThroughput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OnDemandThroughput Unmarshall(JsonUnmarshallerContext context);
    public static OnDemandThroughputUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ParameterizedStatementMarshaller : object {
    public static ParameterizedStatementMarshaller Instance;
    private static ParameterizedStatementMarshaller();
    public sealed virtual void Marshall(ParameterizedStatement requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PointInTimeRecoveryDescriptionUnmarshaller : object {
    private static PointInTimeRecoveryDescriptionUnmarshaller _instance;
    public static PointInTimeRecoveryDescriptionUnmarshaller Instance { get; }
    private static PointInTimeRecoveryDescriptionUnmarshaller();
    private sealed virtual override PointInTimeRecoveryDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.PointInTimeRecoveryDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PointInTimeRecoveryDescription Unmarshall(JsonUnmarshallerContext context);
    public static PointInTimeRecoveryDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PointInTimeRecoverySpecificationMarshaller : object {
    public static PointInTimeRecoverySpecificationMarshaller Instance;
    private static PointInTimeRecoverySpecificationMarshaller();
    public sealed virtual void Marshall(PointInTimeRecoverySpecification requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PointInTimeRecoveryUnavailableExceptionUnmarshaller : object {
    private static PointInTimeRecoveryUnavailableExceptionUnmarshaller _instance;
    public static PointInTimeRecoveryUnavailableExceptionUnmarshaller Instance { get; }
    private static PointInTimeRecoveryUnavailableExceptionUnmarshaller();
    public sealed virtual PointInTimeRecoveryUnavailableException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PointInTimeRecoveryUnavailableException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PointInTimeRecoveryUnavailableExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PolicyNotFoundExceptionUnmarshaller : object {
    private static PolicyNotFoundExceptionUnmarshaller _instance;
    public static PolicyNotFoundExceptionUnmarshaller Instance { get; }
    private static PolicyNotFoundExceptionUnmarshaller();
    public sealed virtual PolicyNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProjectionMarshaller : object {
    public static ProjectionMarshaller Instance;
    private static ProjectionMarshaller();
    public sealed virtual void Marshall(Projection requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProjectionUnmarshaller : object {
    private static ProjectionUnmarshaller _instance;
    public static ProjectionUnmarshaller Instance { get; }
    private static ProjectionUnmarshaller();
    private sealed virtual override Projection Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Projection,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Projection Unmarshall(JsonUnmarshallerContext context);
    public static ProjectionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputDescriptionUnmarshaller : object {
    private static ProvisionedThroughputDescriptionUnmarshaller _instance;
    public static ProvisionedThroughputDescriptionUnmarshaller Instance { get; }
    private static ProvisionedThroughputDescriptionUnmarshaller();
    private sealed virtual override ProvisionedThroughputDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProvisionedThroughputDescription Unmarshall(JsonUnmarshallerContext context);
    public static ProvisionedThroughputDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputExceededExceptionUnmarshaller : object {
    private static ProvisionedThroughputExceededExceptionUnmarshaller _instance;
    public static ProvisionedThroughputExceededExceptionUnmarshaller Instance { get; }
    private static ProvisionedThroughputExceededExceptionUnmarshaller();
    public sealed virtual ProvisionedThroughputExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ProvisionedThroughputExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ProvisionedThroughputExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputMarshaller : object {
    public static ProvisionedThroughputMarshaller Instance;
    private static ProvisionedThroughputMarshaller();
    public sealed virtual void Marshall(ProvisionedThroughput requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputOverrideMarshaller : object {
    public static ProvisionedThroughputOverrideMarshaller Instance;
    private static ProvisionedThroughputOverrideMarshaller();
    public sealed virtual void Marshall(ProvisionedThroughputOverride requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputOverrideUnmarshaller : object {
    private static ProvisionedThroughputOverrideUnmarshaller _instance;
    public static ProvisionedThroughputOverrideUnmarshaller Instance { get; }
    private static ProvisionedThroughputOverrideUnmarshaller();
    private sealed virtual override ProvisionedThroughputOverride Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ProvisionedThroughputOverride,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProvisionedThroughputOverride Unmarshall(JsonUnmarshallerContext context);
    public static ProvisionedThroughputOverrideUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputUnmarshaller : object {
    private static ProvisionedThroughputUnmarshaller _instance;
    public static ProvisionedThroughputUnmarshaller Instance { get; }
    private static ProvisionedThroughputUnmarshaller();
    private sealed virtual override ProvisionedThroughput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ProvisionedThroughput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProvisionedThroughput Unmarshall(JsonUnmarshallerContext context);
    public static ProvisionedThroughputUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutItemEndpointDiscoveryMarshaller : object {
    private static PutItemEndpointDiscoveryMarshaller _instance;
    public static PutItemEndpointDiscoveryMarshaller Instance { get; }
    private static PutItemEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(PutItemRequest publicRequest);
    public static PutItemEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutItemRequestMarshaller : object {
    private static PutItemRequestMarshaller _instance;
    public static PutItemRequestMarshaller Instance { get; }
    private static PutItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutItemRequest publicRequest);
    internal static PutItemRequestMarshaller GetInstance();
    public static PutItemRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutItemResponseUnmarshaller _instance;
    public static PutItemResponseUnmarshaller Instance { get; }
    private static PutItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutItemResponseUnmarshaller GetInstance();
    public static PutItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutMarshaller : object {
    public static PutMarshaller Instance;
    private static PutMarshaller();
    public sealed virtual void Marshall(Put requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutRequestMarshaller : object {
    public static PutRequestMarshaller Instance;
    private static PutRequestMarshaller();
    public sealed virtual void Marshall(PutRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutRequestUnmarshaller : object {
    private static PutRequestUnmarshaller _instance;
    public static PutRequestUnmarshaller Instance { get; }
    private static PutRequestUnmarshaller();
    private sealed virtual override PutRequest Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.PutRequest,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PutRequest Unmarshall(JsonUnmarshallerContext context);
    public static PutRequestUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutResourcePolicyEndpointDiscoveryMarshaller : object {
    private static PutResourcePolicyEndpointDiscoveryMarshaller _instance;
    public static PutResourcePolicyEndpointDiscoveryMarshaller Instance { get; }
    private static PutResourcePolicyEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(PutResourcePolicyRequest publicRequest);
    public static PutResourcePolicyEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller : object {
    private static PutResourcePolicyRequestMarshaller _instance;
    public static PutResourcePolicyRequestMarshaller Instance { get; }
    private static PutResourcePolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PutResourcePolicyRequest publicRequest);
    internal static PutResourcePolicyRequestMarshaller GetInstance();
    public static PutResourcePolicyRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PutResourcePolicyResponseUnmarshaller _instance;
    public static PutResourcePolicyResponseUnmarshaller Instance { get; }
    private static PutResourcePolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PutResourcePolicyResponseUnmarshaller GetInstance();
    public static PutResourcePolicyResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.QueryEndpointDiscoveryMarshaller : object {
    private static QueryEndpointDiscoveryMarshaller _instance;
    public static QueryEndpointDiscoveryMarshaller Instance { get; }
    private static QueryEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(QueryRequest publicRequest);
    public static QueryEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.QueryRequestMarshaller : object {
    private static QueryRequestMarshaller _instance;
    public static QueryRequestMarshaller Instance { get; }
    private static QueryRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(QueryRequest publicRequest);
    internal static QueryRequestMarshaller GetInstance();
    public static QueryRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.QueryResponseUnmarshaller : JsonResponseUnmarshaller {
    private static QueryResponseUnmarshaller _instance;
    public static QueryResponseUnmarshaller Instance { get; }
    private static QueryResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static QueryResponseUnmarshaller GetInstance();
    public static QueryResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.RecordUnmarshaller : object {
    private static RecordUnmarshaller _instance;
    public static RecordUnmarshaller Instance { get; }
    private static RecordUnmarshaller();
    private sealed virtual override Record Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Record,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Record Unmarshall(JsonUnmarshallerContext context);
    public static RecordUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaAlreadyExistsExceptionUnmarshaller : object {
    private static ReplicaAlreadyExistsExceptionUnmarshaller _instance;
    public static ReplicaAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static ReplicaAlreadyExistsExceptionUnmarshaller();
    public sealed virtual ReplicaAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ReplicaAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ReplicaAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaAutoScalingDescriptionUnmarshaller : object {
    private static ReplicaAutoScalingDescriptionUnmarshaller _instance;
    public static ReplicaAutoScalingDescriptionUnmarshaller Instance { get; }
    private static ReplicaAutoScalingDescriptionUnmarshaller();
    private sealed virtual override ReplicaAutoScalingDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ReplicaAutoScalingDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicaAutoScalingDescription Unmarshall(JsonUnmarshallerContext context);
    public static ReplicaAutoScalingDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaAutoScalingUpdateMarshaller : object {
    public static ReplicaAutoScalingUpdateMarshaller Instance;
    private static ReplicaAutoScalingUpdateMarshaller();
    public sealed virtual void Marshall(ReplicaAutoScalingUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaDescriptionUnmarshaller : object {
    private static ReplicaDescriptionUnmarshaller _instance;
    public static ReplicaDescriptionUnmarshaller Instance { get; }
    private static ReplicaDescriptionUnmarshaller();
    private sealed virtual override ReplicaDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ReplicaDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicaDescription Unmarshall(JsonUnmarshallerContext context);
    public static ReplicaDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaGlobalSecondaryIndexAutoScalingDescriptionUnmarshaller : object {
    private static ReplicaGlobalSecondaryIndexAutoScalingDescriptionUnmarshaller _instance;
    public static ReplicaGlobalSecondaryIndexAutoScalingDescriptionUnmarshaller Instance { get; }
    private static ReplicaGlobalSecondaryIndexAutoScalingDescriptionUnmarshaller();
    private sealed virtual override ReplicaGlobalSecondaryIndexAutoScalingDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ReplicaGlobalSecondaryIndexAutoScalingDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicaGlobalSecondaryIndexAutoScalingDescription Unmarshall(JsonUnmarshallerContext context);
    public static ReplicaGlobalSecondaryIndexAutoScalingDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaGlobalSecondaryIndexAutoScalingUpdateMarshaller : object {
    public static ReplicaGlobalSecondaryIndexAutoScalingUpdateMarshaller Instance;
    private static ReplicaGlobalSecondaryIndexAutoScalingUpdateMarshaller();
    public sealed virtual void Marshall(ReplicaGlobalSecondaryIndexAutoScalingUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaGlobalSecondaryIndexDescriptionUnmarshaller : object {
    private static ReplicaGlobalSecondaryIndexDescriptionUnmarshaller _instance;
    public static ReplicaGlobalSecondaryIndexDescriptionUnmarshaller Instance { get; }
    private static ReplicaGlobalSecondaryIndexDescriptionUnmarshaller();
    private sealed virtual override ReplicaGlobalSecondaryIndexDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ReplicaGlobalSecondaryIndexDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicaGlobalSecondaryIndexDescription Unmarshall(JsonUnmarshallerContext context);
    public static ReplicaGlobalSecondaryIndexDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaGlobalSecondaryIndexMarshaller : object {
    public static ReplicaGlobalSecondaryIndexMarshaller Instance;
    private static ReplicaGlobalSecondaryIndexMarshaller();
    public sealed virtual void Marshall(ReplicaGlobalSecondaryIndex requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaGlobalSecondaryIndexSettingsDescriptionUnmarshaller : object {
    private static ReplicaGlobalSecondaryIndexSettingsDescriptionUnmarshaller _instance;
    public static ReplicaGlobalSecondaryIndexSettingsDescriptionUnmarshaller Instance { get; }
    private static ReplicaGlobalSecondaryIndexSettingsDescriptionUnmarshaller();
    private sealed virtual override ReplicaGlobalSecondaryIndexSettingsDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ReplicaGlobalSecondaryIndexSettingsDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicaGlobalSecondaryIndexSettingsDescription Unmarshall(JsonUnmarshallerContext context);
    public static ReplicaGlobalSecondaryIndexSettingsDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaGlobalSecondaryIndexSettingsUpdateMarshaller : object {
    public static ReplicaGlobalSecondaryIndexSettingsUpdateMarshaller Instance;
    private static ReplicaGlobalSecondaryIndexSettingsUpdateMarshaller();
    public sealed virtual void Marshall(ReplicaGlobalSecondaryIndexSettingsUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaMarshaller : object {
    public static ReplicaMarshaller Instance;
    private static ReplicaMarshaller();
    public sealed virtual void Marshall(Replica requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaNotFoundExceptionUnmarshaller : object {
    private static ReplicaNotFoundExceptionUnmarshaller _instance;
    public static ReplicaNotFoundExceptionUnmarshaller Instance { get; }
    private static ReplicaNotFoundExceptionUnmarshaller();
    public sealed virtual ReplicaNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ReplicaNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ReplicaNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaSettingsDescriptionUnmarshaller : object {
    private static ReplicaSettingsDescriptionUnmarshaller _instance;
    public static ReplicaSettingsDescriptionUnmarshaller Instance { get; }
    private static ReplicaSettingsDescriptionUnmarshaller();
    private sealed virtual override ReplicaSettingsDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.ReplicaSettingsDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ReplicaSettingsDescription Unmarshall(JsonUnmarshallerContext context);
    public static ReplicaSettingsDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaSettingsUpdateMarshaller : object {
    public static ReplicaSettingsUpdateMarshaller Instance;
    private static ReplicaSettingsUpdateMarshaller();
    public sealed virtual void Marshall(ReplicaSettingsUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicationGroupUpdateMarshaller : object {
    public static ReplicationGroupUpdateMarshaller Instance;
    private static ReplicationGroupUpdateMarshaller();
    public sealed virtual void Marshall(ReplicationGroupUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaUnmarshaller : object {
    private static ReplicaUnmarshaller _instance;
    public static ReplicaUnmarshaller Instance { get; }
    private static ReplicaUnmarshaller();
    private sealed virtual override Replica Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Replica,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Replica Unmarshall(JsonUnmarshallerContext context);
    public static ReplicaUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ReplicaUpdateMarshaller : object {
    public static ReplicaUpdateMarshaller Instance;
    private static ReplicaUpdateMarshaller();
    public sealed virtual void Marshall(ReplicaUpdate requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.RequestLimitExceededExceptionUnmarshaller : object {
    private static RequestLimitExceededExceptionUnmarshaller _instance;
    public static RequestLimitExceededExceptionUnmarshaller Instance { get; }
    private static RequestLimitExceededExceptionUnmarshaller();
    public sealed virtual RequestLimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual RequestLimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static RequestLimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller : object {
    private static ResourceInUseExceptionUnmarshaller _instance;
    public static ResourceInUseExceptionUnmarshaller Instance { get; }
    private static ResourceInUseExceptionUnmarshaller();
    public sealed virtual ResourceInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.RestoreSummaryUnmarshaller : object {
    private static RestoreSummaryUnmarshaller _instance;
    public static RestoreSummaryUnmarshaller Instance { get; }
    private static RestoreSummaryUnmarshaller();
    private sealed virtual override RestoreSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.RestoreSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual RestoreSummary Unmarshall(JsonUnmarshallerContext context);
    public static RestoreSummaryUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.RestoreTableFromBackupEndpointDiscoveryMarshaller : object {
    private static RestoreTableFromBackupEndpointDiscoveryMarshaller _instance;
    public static RestoreTableFromBackupEndpointDiscoveryMarshaller Instance { get; }
    private static RestoreTableFromBackupEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(RestoreTableFromBackupRequest publicRequest);
    public static RestoreTableFromBackupEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.RestoreTableFromBackupRequestMarshaller : object {
    private static RestoreTableFromBackupRequestMarshaller _instance;
    public static RestoreTableFromBackupRequestMarshaller Instance { get; }
    private static RestoreTableFromBackupRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreTableFromBackupRequest publicRequest);
    internal static RestoreTableFromBackupRequestMarshaller GetInstance();
    public static RestoreTableFromBackupRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.RestoreTableFromBackupResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RestoreTableFromBackupResponseUnmarshaller _instance;
    public static RestoreTableFromBackupResponseUnmarshaller Instance { get; }
    private static RestoreTableFromBackupResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreTableFromBackupResponseUnmarshaller GetInstance();
    public static RestoreTableFromBackupResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.RestoreTableToPointInTimeEndpointDiscoveryMarshaller : object {
    private static RestoreTableToPointInTimeEndpointDiscoveryMarshaller _instance;
    public static RestoreTableToPointInTimeEndpointDiscoveryMarshaller Instance { get; }
    private static RestoreTableToPointInTimeEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(RestoreTableToPointInTimeRequest publicRequest);
    public static RestoreTableToPointInTimeEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.RestoreTableToPointInTimeRequestMarshaller : object {
    private static RestoreTableToPointInTimeRequestMarshaller _instance;
    public static RestoreTableToPointInTimeRequestMarshaller Instance { get; }
    private static RestoreTableToPointInTimeRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RestoreTableToPointInTimeRequest publicRequest);
    internal static RestoreTableToPointInTimeRequestMarshaller GetInstance();
    public static RestoreTableToPointInTimeRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.RestoreTableToPointInTimeResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RestoreTableToPointInTimeResponseUnmarshaller _instance;
    public static RestoreTableToPointInTimeResponseUnmarshaller Instance { get; }
    private static RestoreTableToPointInTimeResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RestoreTableToPointInTimeResponseUnmarshaller GetInstance();
    public static RestoreTableToPointInTimeResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.S3BucketSourceMarshaller : object {
    public static S3BucketSourceMarshaller Instance;
    private static S3BucketSourceMarshaller();
    public sealed virtual void Marshall(S3BucketSource requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.S3BucketSourceUnmarshaller : object {
    private static S3BucketSourceUnmarshaller _instance;
    public static S3BucketSourceUnmarshaller Instance { get; }
    private static S3BucketSourceUnmarshaller();
    private sealed virtual override S3BucketSource Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.S3BucketSource,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3BucketSource Unmarshall(JsonUnmarshallerContext context);
    public static S3BucketSourceUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ScanEndpointDiscoveryMarshaller : object {
    private static ScanEndpointDiscoveryMarshaller _instance;
    public static ScanEndpointDiscoveryMarshaller Instance { get; }
    private static ScanEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(ScanRequest publicRequest);
    public static ScanEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ScanRequestMarshaller : object {
    private static ScanRequestMarshaller _instance;
    public static ScanRequestMarshaller Instance { get; }
    private static ScanRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ScanRequest publicRequest);
    internal static ScanRequestMarshaller GetInstance();
    public static ScanRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ScanResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ScanResponseUnmarshaller _instance;
    public static ScanResponseUnmarshaller Instance { get; }
    private static ScanResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ScanResponseUnmarshaller GetInstance();
    public static ScanResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.SequenceNumberRangeUnmarshaller : object {
    private static SequenceNumberRangeUnmarshaller _instance;
    public static SequenceNumberRangeUnmarshaller Instance { get; }
    private static SequenceNumberRangeUnmarshaller();
    private sealed virtual override SequenceNumberRange Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.SequenceNumberRange,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SequenceNumberRange Unmarshall(JsonUnmarshallerContext context);
    public static SequenceNumberRangeUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ShardUnmarshaller : object {
    private static ShardUnmarshaller _instance;
    public static ShardUnmarshaller Instance { get; }
    private static ShardUnmarshaller();
    private sealed virtual override Shard Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Shard,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Shard Unmarshall(JsonUnmarshallerContext context);
    public static ShardUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.SourceTableDetailsUnmarshaller : object {
    private static SourceTableDetailsUnmarshaller _instance;
    public static SourceTableDetailsUnmarshaller Instance { get; }
    private static SourceTableDetailsUnmarshaller();
    private sealed virtual override SourceTableDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.SourceTableDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceTableDetails Unmarshall(JsonUnmarshallerContext context);
    public static SourceTableDetailsUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.SourceTableFeatureDetailsUnmarshaller : object {
    private static SourceTableFeatureDetailsUnmarshaller _instance;
    public static SourceTableFeatureDetailsUnmarshaller Instance { get; }
    private static SourceTableFeatureDetailsUnmarshaller();
    private sealed virtual override SourceTableFeatureDetails Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.SourceTableFeatureDetails,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SourceTableFeatureDetails Unmarshall(JsonUnmarshallerContext context);
    public static SourceTableFeatureDetailsUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.SSEDescriptionUnmarshaller : object {
    private static SSEDescriptionUnmarshaller _instance;
    public static SSEDescriptionUnmarshaller Instance { get; }
    private static SSEDescriptionUnmarshaller();
    private sealed virtual override SSEDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.SSEDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SSEDescription Unmarshall(JsonUnmarshallerContext context);
    public static SSEDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.SSESpecificationMarshaller : object {
    public static SSESpecificationMarshaller Instance;
    private static SSESpecificationMarshaller();
    public sealed virtual void Marshall(SSESpecification requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.SSESpecificationUnmarshaller : object {
    private static SSESpecificationUnmarshaller _instance;
    public static SSESpecificationUnmarshaller Instance { get; }
    private static SSESpecificationUnmarshaller();
    private sealed virtual override SSESpecification Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.SSESpecification,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SSESpecification Unmarshall(JsonUnmarshallerContext context);
    public static SSESpecificationUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.StreamDescriptionUnmarshaller : object {
    private static StreamDescriptionUnmarshaller _instance;
    public static StreamDescriptionUnmarshaller Instance { get; }
    private static StreamDescriptionUnmarshaller();
    private sealed virtual override StreamDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.StreamDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamDescription Unmarshall(JsonUnmarshallerContext context);
    public static StreamDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.StreamRecordUnmarshaller : object {
    private static StreamRecordUnmarshaller _instance;
    public static StreamRecordUnmarshaller Instance { get; }
    private static StreamRecordUnmarshaller();
    private sealed virtual override StreamRecord Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.StreamRecord,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamRecord Unmarshall(JsonUnmarshallerContext context);
    public static StreamRecordUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.StreamSpecificationMarshaller : object {
    public static StreamSpecificationMarshaller Instance;
    private static StreamSpecificationMarshaller();
    public sealed virtual void Marshall(StreamSpecification requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.StreamSpecificationUnmarshaller : object {
    private static StreamSpecificationUnmarshaller _instance;
    public static StreamSpecificationUnmarshaller Instance { get; }
    private static StreamSpecificationUnmarshaller();
    private sealed virtual override StreamSpecification Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.StreamSpecification,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamSpecification Unmarshall(JsonUnmarshallerContext context);
    public static StreamSpecificationUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.StreamSummaryUnmarshaller : object {
    private static StreamSummaryUnmarshaller _instance;
    public static StreamSummaryUnmarshaller Instance { get; }
    private static StreamSummaryUnmarshaller();
    private sealed virtual override StreamSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.StreamSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual StreamSummary Unmarshall(JsonUnmarshallerContext context);
    public static StreamSummaryUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableAlreadyExistsExceptionUnmarshaller : object {
    private static TableAlreadyExistsExceptionUnmarshaller _instance;
    public static TableAlreadyExistsExceptionUnmarshaller Instance { get; }
    private static TableAlreadyExistsExceptionUnmarshaller();
    public sealed virtual TableAlreadyExistsException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TableAlreadyExistsException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TableAlreadyExistsExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableAutoScalingDescriptionUnmarshaller : object {
    private static TableAutoScalingDescriptionUnmarshaller _instance;
    public static TableAutoScalingDescriptionUnmarshaller Instance { get; }
    private static TableAutoScalingDescriptionUnmarshaller();
    private sealed virtual override TableAutoScalingDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.TableAutoScalingDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableAutoScalingDescription Unmarshall(JsonUnmarshallerContext context);
    public static TableAutoScalingDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableClassSummaryUnmarshaller : object {
    private static TableClassSummaryUnmarshaller _instance;
    public static TableClassSummaryUnmarshaller Instance { get; }
    private static TableClassSummaryUnmarshaller();
    private sealed virtual override TableClassSummary Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.TableClassSummary,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableClassSummary Unmarshall(JsonUnmarshallerContext context);
    public static TableClassSummaryUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableCreationParametersMarshaller : object {
    public static TableCreationParametersMarshaller Instance;
    private static TableCreationParametersMarshaller();
    public sealed virtual void Marshall(TableCreationParameters requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableCreationParametersUnmarshaller : object {
    private static TableCreationParametersUnmarshaller _instance;
    public static TableCreationParametersUnmarshaller Instance { get; }
    private static TableCreationParametersUnmarshaller();
    private sealed virtual override TableCreationParameters Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.TableCreationParameters,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableCreationParameters Unmarshall(JsonUnmarshallerContext context);
    public static TableCreationParametersUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableDescriptionUnmarshaller : object {
    private static TableDescriptionUnmarshaller _instance;
    public static TableDescriptionUnmarshaller Instance { get; }
    private static TableDescriptionUnmarshaller();
    private sealed virtual override TableDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.TableDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TableDescription Unmarshall(JsonUnmarshallerContext context);
    public static TableDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableInUseExceptionUnmarshaller : object {
    private static TableInUseExceptionUnmarshaller _instance;
    public static TableInUseExceptionUnmarshaller Instance { get; }
    private static TableInUseExceptionUnmarshaller();
    public sealed virtual TableInUseException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TableInUseException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TableInUseExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableNotFoundExceptionUnmarshaller : object {
    private static TableNotFoundExceptionUnmarshaller _instance;
    public static TableNotFoundExceptionUnmarshaller Instance { get; }
    private static TableNotFoundExceptionUnmarshaller();
    public sealed virtual TableNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TableNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TableNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TagMarshaller : object {
    public static TagMarshaller Instance;
    private static TagMarshaller();
    public sealed virtual void Marshall(Tag requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TagResourceEndpointDiscoveryMarshaller : object {
    private static TagResourceEndpointDiscoveryMarshaller _instance;
    public static TagResourceEndpointDiscoveryMarshaller Instance { get; }
    private static TagResourceEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(TagResourceRequest publicRequest);
    public static TagResourceEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller : object {
    private static TagResourceRequestMarshaller _instance;
    public static TagResourceRequestMarshaller Instance { get; }
    private static TagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TagResourceRequest publicRequest);
    internal static TagResourceRequestMarshaller GetInstance();
    public static TagResourceRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TagResourceResponseUnmarshaller _instance;
    public static TagResourceResponseUnmarshaller Instance { get; }
    private static TagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TagResourceResponseUnmarshaller GetInstance();
    public static TagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TagUnmarshaller : object {
    private static TagUnmarshaller _instance;
    public static TagUnmarshaller Instance { get; }
    private static TagUnmarshaller();
    private sealed virtual override Tag Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.Tag,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Tag Unmarshall(JsonUnmarshallerContext context);
    public static TagUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TimeToLiveDescriptionUnmarshaller : object {
    private static TimeToLiveDescriptionUnmarshaller _instance;
    public static TimeToLiveDescriptionUnmarshaller Instance { get; }
    private static TimeToLiveDescriptionUnmarshaller();
    private sealed virtual override TimeToLiveDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.TimeToLiveDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TimeToLiveDescription Unmarshall(JsonUnmarshallerContext context);
    public static TimeToLiveDescriptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TimeToLiveSpecificationMarshaller : object {
    public static TimeToLiveSpecificationMarshaller Instance;
    private static TimeToLiveSpecificationMarshaller();
    public sealed virtual void Marshall(TimeToLiveSpecification requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TimeToLiveSpecificationUnmarshaller : object {
    private static TimeToLiveSpecificationUnmarshaller _instance;
    public static TimeToLiveSpecificationUnmarshaller Instance { get; }
    private static TimeToLiveSpecificationUnmarshaller();
    private sealed virtual override TimeToLiveSpecification Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.TimeToLiveSpecification,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual TimeToLiveSpecification Unmarshall(JsonUnmarshallerContext context);
    public static TimeToLiveSpecificationUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactGetItemMarshaller : object {
    public static TransactGetItemMarshaller Instance;
    private static TransactGetItemMarshaller();
    public sealed virtual void Marshall(TransactGetItem requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactGetItemsEndpointDiscoveryMarshaller : object {
    private static TransactGetItemsEndpointDiscoveryMarshaller _instance;
    public static TransactGetItemsEndpointDiscoveryMarshaller Instance { get; }
    private static TransactGetItemsEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(TransactGetItemsRequest publicRequest);
    public static TransactGetItemsEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactGetItemsRequestMarshaller : object {
    private static TransactGetItemsRequestMarshaller _instance;
    public static TransactGetItemsRequestMarshaller Instance { get; }
    private static TransactGetItemsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TransactGetItemsRequest publicRequest);
    internal static TransactGetItemsRequestMarshaller GetInstance();
    public static TransactGetItemsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactGetItemsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TransactGetItemsResponseUnmarshaller _instance;
    public static TransactGetItemsResponseUnmarshaller Instance { get; }
    private static TransactGetItemsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TransactGetItemsResponseUnmarshaller GetInstance();
    public static TransactGetItemsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactionCanceledExceptionUnmarshaller : object {
    private static TransactionCanceledExceptionUnmarshaller _instance;
    public static TransactionCanceledExceptionUnmarshaller Instance { get; }
    private static TransactionCanceledExceptionUnmarshaller();
    public sealed virtual TransactionCanceledException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TransactionCanceledException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TransactionCanceledExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactionConflictExceptionUnmarshaller : object {
    private static TransactionConflictExceptionUnmarshaller _instance;
    public static TransactionConflictExceptionUnmarshaller Instance { get; }
    private static TransactionConflictExceptionUnmarshaller();
    public sealed virtual TransactionConflictException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TransactionConflictException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TransactionConflictExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactionInProgressExceptionUnmarshaller : object {
    private static TransactionInProgressExceptionUnmarshaller _instance;
    public static TransactionInProgressExceptionUnmarshaller Instance { get; }
    private static TransactionInProgressExceptionUnmarshaller();
    public sealed virtual TransactionInProgressException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TransactionInProgressException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TransactionInProgressExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactWriteItemMarshaller : object {
    public static TransactWriteItemMarshaller Instance;
    private static TransactWriteItemMarshaller();
    public sealed virtual void Marshall(TransactWriteItem requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactWriteItemsEndpointDiscoveryMarshaller : object {
    private static TransactWriteItemsEndpointDiscoveryMarshaller _instance;
    public static TransactWriteItemsEndpointDiscoveryMarshaller Instance { get; }
    private static TransactWriteItemsEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(TransactWriteItemsRequest publicRequest);
    public static TransactWriteItemsEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactWriteItemsRequestMarshaller : object {
    private static TransactWriteItemsRequestMarshaller _instance;
    public static TransactWriteItemsRequestMarshaller Instance { get; }
    private static TransactWriteItemsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(TransactWriteItemsRequest publicRequest);
    internal static TransactWriteItemsRequestMarshaller GetInstance();
    public static TransactWriteItemsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TransactWriteItemsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static TransactWriteItemsResponseUnmarshaller _instance;
    public static TransactWriteItemsResponseUnmarshaller Instance { get; }
    private static TransactWriteItemsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static TransactWriteItemsResponseUnmarshaller GetInstance();
    public static TransactWriteItemsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TrimmedDataAccessExceptionUnmarshaller : object {
    private static TrimmedDataAccessExceptionUnmarshaller _instance;
    public static TrimmedDataAccessExceptionUnmarshaller Instance { get; }
    private static TrimmedDataAccessExceptionUnmarshaller();
    public sealed virtual TrimmedDataAccessException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual TrimmedDataAccessException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static TrimmedDataAccessExceptionUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UntagResourceEndpointDiscoveryMarshaller : object {
    private static UntagResourceEndpointDiscoveryMarshaller _instance;
    public static UntagResourceEndpointDiscoveryMarshaller Instance { get; }
    private static UntagResourceEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(UntagResourceRequest publicRequest);
    public static UntagResourceEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller : object {
    private static UntagResourceRequestMarshaller _instance;
    public static UntagResourceRequestMarshaller Instance { get; }
    private static UntagResourceRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UntagResourceRequest publicRequest);
    internal static UntagResourceRequestMarshaller GetInstance();
    public static UntagResourceRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UntagResourceResponseUnmarshaller _instance;
    public static UntagResourceResponseUnmarshaller Instance { get; }
    private static UntagResourceResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UntagResourceResponseUnmarshaller GetInstance();
    public static UntagResourceResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateContinuousBackupsEndpointDiscoveryMarshaller : object {
    private static UpdateContinuousBackupsEndpointDiscoveryMarshaller _instance;
    public static UpdateContinuousBackupsEndpointDiscoveryMarshaller Instance { get; }
    private static UpdateContinuousBackupsEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(UpdateContinuousBackupsRequest publicRequest);
    public static UpdateContinuousBackupsEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateContinuousBackupsRequestMarshaller : object {
    private static UpdateContinuousBackupsRequestMarshaller _instance;
    public static UpdateContinuousBackupsRequestMarshaller Instance { get; }
    private static UpdateContinuousBackupsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateContinuousBackupsRequest publicRequest);
    internal static UpdateContinuousBackupsRequestMarshaller GetInstance();
    public static UpdateContinuousBackupsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateContinuousBackupsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateContinuousBackupsResponseUnmarshaller _instance;
    public static UpdateContinuousBackupsResponseUnmarshaller Instance { get; }
    private static UpdateContinuousBackupsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateContinuousBackupsResponseUnmarshaller GetInstance();
    public static UpdateContinuousBackupsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateContributorInsightsRequestMarshaller : object {
    private static UpdateContributorInsightsRequestMarshaller _instance;
    public static UpdateContributorInsightsRequestMarshaller Instance { get; }
    private static UpdateContributorInsightsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateContributorInsightsRequest publicRequest);
    internal static UpdateContributorInsightsRequestMarshaller GetInstance();
    public static UpdateContributorInsightsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateContributorInsightsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateContributorInsightsResponseUnmarshaller _instance;
    public static UpdateContributorInsightsResponseUnmarshaller Instance { get; }
    private static UpdateContributorInsightsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateContributorInsightsResponseUnmarshaller GetInstance();
    public static UpdateContributorInsightsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateGlobalSecondaryIndexActionMarshaller : object {
    public static UpdateGlobalSecondaryIndexActionMarshaller Instance;
    private static UpdateGlobalSecondaryIndexActionMarshaller();
    public sealed virtual void Marshall(UpdateGlobalSecondaryIndexAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateGlobalTableEndpointDiscoveryMarshaller : object {
    private static UpdateGlobalTableEndpointDiscoveryMarshaller _instance;
    public static UpdateGlobalTableEndpointDiscoveryMarshaller Instance { get; }
    private static UpdateGlobalTableEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(UpdateGlobalTableRequest publicRequest);
    public static UpdateGlobalTableEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateGlobalTableRequestMarshaller : object {
    private static UpdateGlobalTableRequestMarshaller _instance;
    public static UpdateGlobalTableRequestMarshaller Instance { get; }
    private static UpdateGlobalTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateGlobalTableRequest publicRequest);
    internal static UpdateGlobalTableRequestMarshaller GetInstance();
    public static UpdateGlobalTableRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateGlobalTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateGlobalTableResponseUnmarshaller _instance;
    public static UpdateGlobalTableResponseUnmarshaller Instance { get; }
    private static UpdateGlobalTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateGlobalTableResponseUnmarshaller GetInstance();
    public static UpdateGlobalTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateGlobalTableSettingsEndpointDiscoveryMarshaller : object {
    private static UpdateGlobalTableSettingsEndpointDiscoveryMarshaller _instance;
    public static UpdateGlobalTableSettingsEndpointDiscoveryMarshaller Instance { get; }
    private static UpdateGlobalTableSettingsEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(UpdateGlobalTableSettingsRequest publicRequest);
    public static UpdateGlobalTableSettingsEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateGlobalTableSettingsRequestMarshaller : object {
    private static UpdateGlobalTableSettingsRequestMarshaller _instance;
    public static UpdateGlobalTableSettingsRequestMarshaller Instance { get; }
    private static UpdateGlobalTableSettingsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateGlobalTableSettingsRequest publicRequest);
    internal static UpdateGlobalTableSettingsRequestMarshaller GetInstance();
    public static UpdateGlobalTableSettingsRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateGlobalTableSettingsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateGlobalTableSettingsResponseUnmarshaller _instance;
    public static UpdateGlobalTableSettingsResponseUnmarshaller Instance { get; }
    private static UpdateGlobalTableSettingsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateGlobalTableSettingsResponseUnmarshaller GetInstance();
    public static UpdateGlobalTableSettingsResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateItemEndpointDiscoveryMarshaller : object {
    private static UpdateItemEndpointDiscoveryMarshaller _instance;
    public static UpdateItemEndpointDiscoveryMarshaller Instance { get; }
    private static UpdateItemEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(UpdateItemRequest publicRequest);
    public static UpdateItemEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateItemRequestMarshaller : object {
    private static UpdateItemRequestMarshaller _instance;
    public static UpdateItemRequestMarshaller Instance { get; }
    private static UpdateItemRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateItemRequest publicRequest);
    internal static UpdateItemRequestMarshaller GetInstance();
    public static UpdateItemRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateItemResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateItemResponseUnmarshaller _instance;
    public static UpdateItemResponseUnmarshaller Instance { get; }
    private static UpdateItemResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateItemResponseUnmarshaller GetInstance();
    public static UpdateItemResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateKinesisStreamingConfigurationMarshaller : object {
    public static UpdateKinesisStreamingConfigurationMarshaller Instance;
    private static UpdateKinesisStreamingConfigurationMarshaller();
    public sealed virtual void Marshall(UpdateKinesisStreamingConfiguration requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateKinesisStreamingConfigurationUnmarshaller : object {
    private static UpdateKinesisStreamingConfigurationUnmarshaller _instance;
    public static UpdateKinesisStreamingConfigurationUnmarshaller Instance { get; }
    private static UpdateKinesisStreamingConfigurationUnmarshaller();
    private sealed virtual override UpdateKinesisStreamingConfiguration Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.UpdateKinesisStreamingConfiguration,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UpdateKinesisStreamingConfiguration Unmarshall(JsonUnmarshallerContext context);
    public static UpdateKinesisStreamingConfigurationUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateKinesisStreamingDestinationEndpointDiscoveryMarshaller : object {
    private static UpdateKinesisStreamingDestinationEndpointDiscoveryMarshaller _instance;
    public static UpdateKinesisStreamingDestinationEndpointDiscoveryMarshaller Instance { get; }
    private static UpdateKinesisStreamingDestinationEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(UpdateKinesisStreamingDestinationRequest publicRequest);
    public static UpdateKinesisStreamingDestinationEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateKinesisStreamingDestinationRequestMarshaller : object {
    private static UpdateKinesisStreamingDestinationRequestMarshaller _instance;
    public static UpdateKinesisStreamingDestinationRequestMarshaller Instance { get; }
    private static UpdateKinesisStreamingDestinationRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateKinesisStreamingDestinationRequest publicRequest);
    internal static UpdateKinesisStreamingDestinationRequestMarshaller GetInstance();
    public static UpdateKinesisStreamingDestinationRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateKinesisStreamingDestinationResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateKinesisStreamingDestinationResponseUnmarshaller _instance;
    public static UpdateKinesisStreamingDestinationResponseUnmarshaller Instance { get; }
    private static UpdateKinesisStreamingDestinationResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateKinesisStreamingDestinationResponseUnmarshaller GetInstance();
    public static UpdateKinesisStreamingDestinationResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateMarshaller : object {
    public static UpdateMarshaller Instance;
    private static UpdateMarshaller();
    public sealed virtual void Marshall(Update requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateReplicationGroupMemberActionMarshaller : object {
    public static UpdateReplicationGroupMemberActionMarshaller Instance;
    private static UpdateReplicationGroupMemberActionMarshaller();
    public sealed virtual void Marshall(UpdateReplicationGroupMemberAction requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableEndpointDiscoveryMarshaller : object {
    private static UpdateTableEndpointDiscoveryMarshaller _instance;
    public static UpdateTableEndpointDiscoveryMarshaller Instance { get; }
    private static UpdateTableEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(UpdateTableRequest publicRequest);
    public static UpdateTableEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableReplicaAutoScalingRequestMarshaller : object {
    private static UpdateTableReplicaAutoScalingRequestMarshaller _instance;
    public static UpdateTableReplicaAutoScalingRequestMarshaller Instance { get; }
    private static UpdateTableReplicaAutoScalingRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateTableReplicaAutoScalingRequest publicRequest);
    internal static UpdateTableReplicaAutoScalingRequestMarshaller GetInstance();
    public static UpdateTableReplicaAutoScalingRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableReplicaAutoScalingResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateTableReplicaAutoScalingResponseUnmarshaller _instance;
    public static UpdateTableReplicaAutoScalingResponseUnmarshaller Instance { get; }
    private static UpdateTableReplicaAutoScalingResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateTableReplicaAutoScalingResponseUnmarshaller GetInstance();
    public static UpdateTableReplicaAutoScalingResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableRequestMarshaller : object {
    private static UpdateTableRequestMarshaller _instance;
    public static UpdateTableRequestMarshaller Instance { get; }
    private static UpdateTableRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateTableRequest publicRequest);
    internal static UpdateTableRequestMarshaller GetInstance();
    public static UpdateTableRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateTableResponseUnmarshaller _instance;
    public static UpdateTableResponseUnmarshaller Instance { get; }
    private static UpdateTableResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateTableResponseUnmarshaller GetInstance();
    public static UpdateTableResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTimeToLiveEndpointDiscoveryMarshaller : object {
    private static UpdateTimeToLiveEndpointDiscoveryMarshaller _instance;
    public static UpdateTimeToLiveEndpointDiscoveryMarshaller Instance { get; }
    private static UpdateTimeToLiveEndpointDiscoveryMarshaller();
    public sealed virtual EndpointDiscoveryDataBase Marshall(AmazonWebServiceRequest input);
    public sealed virtual EndpointDiscoveryDataBase Marshall(UpdateTimeToLiveRequest publicRequest);
    public static UpdateTimeToLiveEndpointDiscoveryMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTimeToLiveRequestMarshaller : object {
    private static UpdateTimeToLiveRequestMarshaller _instance;
    public static UpdateTimeToLiveRequestMarshaller Instance { get; }
    private static UpdateTimeToLiveRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UpdateTimeToLiveRequest publicRequest);
    internal static UpdateTimeToLiveRequestMarshaller GetInstance();
    public static UpdateTimeToLiveRequestMarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTimeToLiveResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UpdateTimeToLiveResponseUnmarshaller _instance;
    public static UpdateTimeToLiveResponseUnmarshaller Instance { get; }
    private static UpdateTimeToLiveResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UpdateTimeToLiveResponseUnmarshaller GetInstance();
    public static UpdateTimeToLiveResponseUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.WriteRequestMarshaller : object {
    public static WriteRequestMarshaller Instance;
    private static WriteRequestMarshaller();
    public sealed virtual void Marshall(WriteRequest requestObject, JsonMarshallerContext context);
}
public class Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.WriteRequestUnmarshaller : object {
    private static WriteRequestUnmarshaller _instance;
    public static WriteRequestUnmarshaller Instance { get; }
    private static WriteRequestUnmarshaller();
    private sealed virtual override WriteRequest Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.DynamoDBv2.Model.WriteRequest,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual WriteRequest Unmarshall(JsonUnmarshallerContext context);
    public static WriteRequestUnmarshaller get_Instance();
}
public class Amazon.DynamoDBv2.Model.InternalServerErrorException : AmazonDynamoDBException {
    public InternalServerErrorException(string message);
    public InternalServerErrorException(string message, Exception innerException);
    public InternalServerErrorException(Exception innerException);
    public InternalServerErrorException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InternalServerErrorException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.InvalidExportTimeException : AmazonDynamoDBException {
    public InvalidExportTimeException(string message);
    public InvalidExportTimeException(string message, Exception innerException);
    public InvalidExportTimeException(Exception innerException);
    public InvalidExportTimeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidExportTimeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.InvalidRestoreTimeException : AmazonDynamoDBException {
    public InvalidRestoreTimeException(string message);
    public InvalidRestoreTimeException(string message, Exception innerException);
    public InvalidRestoreTimeException(Exception innerException);
    public InvalidRestoreTimeException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidRestoreTimeException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public interface Amazon.DynamoDBv2.Model.IQueryPaginator {
    public IPaginatedEnumerable`1<QueryResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<QueryResponse> get_Responses();
}
public interface Amazon.DynamoDBv2.Model.IScanPaginator {
    public IPaginatedEnumerable`1<ScanResponse> Responses { get; }
    public abstract virtual IPaginatedEnumerable`1<ScanResponse> get_Responses();
}
public class Amazon.DynamoDBv2.Model.ItemCollectionMetrics : object {
    private Dictionary`2<string, AttributeValue> _itemCollectionKey;
    private List`1<double> _sizeEstimateRangeGB;
    public Dictionary`2<string, AttributeValue> ItemCollectionKey { get; public set; }
    public List`1<double> SizeEstimateRangeGB { get; public set; }
    public Dictionary`2<string, AttributeValue> get_ItemCollectionKey();
    public void set_ItemCollectionKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItemCollectionKey();
    public List`1<double> get_SizeEstimateRangeGB();
    public void set_SizeEstimateRangeGB(List`1<double> value);
    internal bool IsSetSizeEstimateRangeGB();
}
public class Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException : AmazonDynamoDBException {
    public ItemCollectionSizeLimitExceededException(string message);
    public ItemCollectionSizeLimitExceededException(string message, Exception innerException);
    public ItemCollectionSizeLimitExceededException(Exception innerException);
    public ItemCollectionSizeLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ItemCollectionSizeLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ItemResponse : object {
    private Dictionary`2<string, AttributeValue> _item;
    public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItem();
}
public class Amazon.DynamoDBv2.Model.KeysAndAttributes : object {
    private List`1<string> _attributesToGet;
    private Nullable`1<bool> _consistentRead;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private List`1<Dictionary`2<string, AttributeValue>> _keys;
    private string _projectionExpression;
    [AWSPropertyAttribute]
public List`1<string> AttributesToGet { get; public set; }
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    [AWSPropertyAttribute]
public List`1<Dictionary`2<string, AttributeValue>> Keys { get; public set; }
    public string ProjectionExpression { get; public set; }
    public List`1<string> get_AttributesToGet();
    public void set_AttributesToGet(List`1<string> value);
    internal bool IsSetAttributesToGet();
    public Nullable`1<bool> get_ConsistentRead();
    public void set_ConsistentRead(Nullable`1<bool> value);
    internal bool IsSetConsistentRead();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public List`1<Dictionary`2<string, AttributeValue>> get_Keys();
    public void set_Keys(List`1<Dictionary`2<string, AttributeValue>> value);
    internal bool IsSetKeys();
    public string get_ProjectionExpression();
    public void set_ProjectionExpression(string value);
    internal bool IsSetProjectionExpression();
}
public class Amazon.DynamoDBv2.Model.KeySchemaElement : object {
    private string _attributeName;
    private KeyType _keyType;
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    [AWSPropertyAttribute]
public KeyType KeyType { get; public set; }
    public KeySchemaElement(string attributeName, KeyType keyType);
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public KeyType get_KeyType();
    public void set_KeyType(KeyType value);
    internal bool IsSetKeyType();
}
public class Amazon.DynamoDBv2.Model.KinesisDataStreamDestination : object {
    private ApproximateCreationDateTimePrecision _approximateCreationDateTimePrecision;
    private DestinationStatus _destinationStatus;
    private string _destinationStatusDescription;
    private string _streamArn;
    public ApproximateCreationDateTimePrecision ApproximateCreationDateTimePrecision { get; public set; }
    public DestinationStatus DestinationStatus { get; public set; }
    public string DestinationStatusDescription { get; public set; }
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    public ApproximateCreationDateTimePrecision get_ApproximateCreationDateTimePrecision();
    public void set_ApproximateCreationDateTimePrecision(ApproximateCreationDateTimePrecision value);
    internal bool IsSetApproximateCreationDateTimePrecision();
    public DestinationStatus get_DestinationStatus();
    public void set_DestinationStatus(DestinationStatus value);
    internal bool IsSetDestinationStatus();
    public string get_DestinationStatusDescription();
    public void set_DestinationStatusDescription(string value);
    internal bool IsSetDestinationStatusDescription();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
}
public class Amazon.DynamoDBv2.Model.LimitExceededException : AmazonDynamoDBException {
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ListBackupsRequest : AmazonDynamoDBRequest {
    private BackupTypeFilter _backupType;
    private string _exclusiveStartBackupArn;
    private Nullable`1<int> _limit;
    private string _tableName;
    private Nullable`1<DateTime> _timeRangeLowerBound;
    private Nullable`1<DateTime> _timeRangeUpperBound;
    public BackupTypeFilter BackupType { get; public set; }
    [AWSPropertyAttribute]
public string ExclusiveStartBackupArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public Nullable`1<DateTime> TimeRangeLowerBound { get; public set; }
    public Nullable`1<DateTime> TimeRangeUpperBound { get; public set; }
    public BackupTypeFilter get_BackupType();
    public void set_BackupType(BackupTypeFilter value);
    internal bool IsSetBackupType();
    public string get_ExclusiveStartBackupArn();
    public void set_ExclusiveStartBackupArn(string value);
    internal bool IsSetExclusiveStartBackupArn();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public Nullable`1<DateTime> get_TimeRangeLowerBound();
    public void set_TimeRangeLowerBound(Nullable`1<DateTime> value);
    internal bool IsSetTimeRangeLowerBound();
    public Nullable`1<DateTime> get_TimeRangeUpperBound();
    public void set_TimeRangeUpperBound(Nullable`1<DateTime> value);
    internal bool IsSetTimeRangeUpperBound();
}
public class Amazon.DynamoDBv2.Model.ListBackupsResponse : AmazonWebServiceResponse {
    private List`1<BackupSummary> _backupSummaries;
    private string _lastEvaluatedBackupArn;
    public List`1<BackupSummary> BackupSummaries { get; public set; }
    [AWSPropertyAttribute]
public string LastEvaluatedBackupArn { get; public set; }
    public List`1<BackupSummary> get_BackupSummaries();
    public void set_BackupSummaries(List`1<BackupSummary> value);
    internal bool IsSetBackupSummaries();
    public string get_LastEvaluatedBackupArn();
    public void set_LastEvaluatedBackupArn(string value);
    internal bool IsSetLastEvaluatedBackupArn();
}
public class Amazon.DynamoDBv2.Model.ListContributorInsightsRequest : AmazonDynamoDBRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _tableName;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.ListContributorInsightsResponse : AmazonWebServiceResponse {
    private List`1<ContributorInsightsSummary> _contributorInsightsSummaries;
    private string _nextToken;
    public List`1<ContributorInsightsSummary> ContributorInsightsSummaries { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ContributorInsightsSummary> get_ContributorInsightsSummaries();
    public void set_ContributorInsightsSummaries(List`1<ContributorInsightsSummary> value);
    internal bool IsSetContributorInsightsSummaries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DynamoDBv2.Model.ListExportsRequest : AmazonDynamoDBRequest {
    private Nullable`1<int> _maxResults;
    private string _nextToken;
    private string _tableArn;
    [AWSPropertyAttribute]
public Nullable`1<int> MaxResults { get; public set; }
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string TableArn { get; public set; }
    public Nullable`1<int> get_MaxResults();
    public void set_MaxResults(Nullable`1<int> value);
    internal bool IsSetMaxResults();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_TableArn();
    public void set_TableArn(string value);
    internal bool IsSetTableArn();
}
public class Amazon.DynamoDBv2.Model.ListExportsResponse : AmazonWebServiceResponse {
    private List`1<ExportSummary> _exportSummaries;
    private string _nextToken;
    public List`1<ExportSummary> ExportSummaries { get; public set; }
    public string NextToken { get; public set; }
    public List`1<ExportSummary> get_ExportSummaries();
    public void set_ExportSummaries(List`1<ExportSummary> value);
    internal bool IsSetExportSummaries();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DynamoDBv2.Model.ListGlobalTablesRequest : AmazonDynamoDBRequest {
    private string _exclusiveStartGlobalTableName;
    private Nullable`1<int> _limit;
    private string _regionName;
    [AWSPropertyAttribute]
public string ExclusiveStartGlobalTableName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    public string RegionName { get; public set; }
    public string get_ExclusiveStartGlobalTableName();
    public void set_ExclusiveStartGlobalTableName(string value);
    internal bool IsSetExclusiveStartGlobalTableName();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.DynamoDBv2.Model.ListGlobalTablesResponse : AmazonWebServiceResponse {
    private List`1<GlobalTable> _globalTables;
    private string _lastEvaluatedGlobalTableName;
    public List`1<GlobalTable> GlobalTables { get; public set; }
    [AWSPropertyAttribute]
public string LastEvaluatedGlobalTableName { get; public set; }
    public List`1<GlobalTable> get_GlobalTables();
    public void set_GlobalTables(List`1<GlobalTable> value);
    internal bool IsSetGlobalTables();
    public string get_LastEvaluatedGlobalTableName();
    public void set_LastEvaluatedGlobalTableName(string value);
    internal bool IsSetLastEvaluatedGlobalTableName();
}
public class Amazon.DynamoDBv2.Model.ListImportsRequest : AmazonDynamoDBRequest {
    private string _nextToken;
    private Nullable`1<int> _pageSize;
    private string _tableArn;
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> PageSize { get; public set; }
    [AWSPropertyAttribute]
public string TableArn { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public Nullable`1<int> get_PageSize();
    public void set_PageSize(Nullable`1<int> value);
    internal bool IsSetPageSize();
    public string get_TableArn();
    public void set_TableArn(string value);
    internal bool IsSetTableArn();
}
public class Amazon.DynamoDBv2.Model.ListImportsResponse : AmazonWebServiceResponse {
    private List`1<ImportSummary> _importSummaryList;
    private string _nextToken;
    public List`1<ImportSummary> ImportSummaryList { get; public set; }
    [AWSPropertyAttribute]
public string NextToken { get; public set; }
    public List`1<ImportSummary> get_ImportSummaryList();
    public void set_ImportSummaryList(List`1<ImportSummary> value);
    internal bool IsSetImportSummaryList();
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
}
public class Amazon.DynamoDBv2.Model.ListStreamsRequest : AmazonDynamoDBStreamsRequest {
    private string _exclusiveStartStreamArn;
    private Nullable`1<int> _limit;
    private string _tableName;
    [AWSPropertyAttribute]
public string ExclusiveStartStreamArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_ExclusiveStartStreamArn();
    public void set_ExclusiveStartStreamArn(string value);
    internal bool IsSetExclusiveStartStreamArn();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.ListStreamsResponse : AmazonWebServiceResponse {
    private string _lastEvaluatedStreamArn;
    private List`1<StreamSummary> _streams;
    [AWSPropertyAttribute]
public string LastEvaluatedStreamArn { get; public set; }
    public List`1<StreamSummary> Streams { get; public set; }
    public string get_LastEvaluatedStreamArn();
    public void set_LastEvaluatedStreamArn(string value);
    internal bool IsSetLastEvaluatedStreamArn();
    public List`1<StreamSummary> get_Streams();
    public void set_Streams(List`1<StreamSummary> value);
    internal bool IsSetStreams();
}
internal class Amazon.DynamoDBv2.Model.ListTablesPaginator : object {
    private IAmazonDynamoDB _client;
    private ListTablesRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListTablesResponse> Responses { get; }
    public IPaginatedEnumerable`1<string> TableNames { get; }
    internal ListTablesPaginator(IAmazonDynamoDB client, ListTablesRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListTablesResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<string> get_TableNames();
    [AsyncIteratorStateMachineAttribute("Amazon.DynamoDBv2.Model.ListTablesPaginator/<Amazon-Runtime-IPaginator<Amazon-DynamoDBv2-Model-ListTablesResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListTablesResponse> Amazon.Runtime.IPaginator<Amazon.DynamoDBv2.Model.ListTablesResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.Model.ListTablesRequest : AmazonDynamoDBRequest {
    private string _exclusiveStartTableName;
    private Nullable`1<int> _limit;
    [AWSPropertyAttribute]
public string ExclusiveStartTableName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    public ListTablesRequest(string exclusiveStartTableName);
    public ListTablesRequest(string exclusiveStartTableName, Nullable`1<int> limit);
    public string get_ExclusiveStartTableName();
    public void set_ExclusiveStartTableName(string value);
    internal bool IsSetExclusiveStartTableName();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    internal bool IsSetLimit();
}
public class Amazon.DynamoDBv2.Model.ListTablesResponse : AmazonWebServiceResponse {
    private string _lastEvaluatedTableName;
    private List`1<string> _tableNames;
    [AWSPropertyAttribute]
public string LastEvaluatedTableName { get; public set; }
    public List`1<string> TableNames { get; public set; }
    public string get_LastEvaluatedTableName();
    public void set_LastEvaluatedTableName(string value);
    internal bool IsSetLastEvaluatedTableName();
    public List`1<string> get_TableNames();
    public void set_TableNames(List`1<string> value);
    internal bool IsSetTableNames();
}
public class Amazon.DynamoDBv2.Model.ListTagsOfResourceRequest : AmazonDynamoDBRequest {
    private string _nextToken;
    private string _resourceArn;
    public string NextToken { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.DynamoDBv2.Model.ListTagsOfResourceResponse : AmazonWebServiceResponse {
    private string _nextToken;
    private List`1<Tag> _tags;
    public string NextToken { get; public set; }
    public List`1<Tag> Tags { get; public set; }
    public string get_NextToken();
    public void set_NextToken(string value);
    internal bool IsSetNextToken();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.DynamoDBv2.Model.LocalSecondaryIndex : object {
    private string _indexName;
    private List`1<KeySchemaElement> _keySchema;
    private Projection _projection;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    [AWSPropertyAttribute]
public Projection Projection { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
}
public class Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription : object {
    private string _indexArn;
    private string _indexName;
    private Nullable`1<long> _indexSizeBytes;
    private Nullable`1<long> _itemCount;
    private List`1<KeySchemaElement> _keySchema;
    private Projection _projection;
    public string IndexArn { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public Nullable`1<long> IndexSizeBytes { get; public set; }
    public Nullable`1<long> ItemCount { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    public Projection Projection { get; public set; }
    public string get_IndexArn();
    public void set_IndexArn(string value);
    internal bool IsSetIndexArn();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public Nullable`1<long> get_IndexSizeBytes();
    public void set_IndexSizeBytes(Nullable`1<long> value);
    internal bool IsSetIndexSizeBytes();
    public Nullable`1<long> get_ItemCount();
    public void set_ItemCount(Nullable`1<long> value);
    internal bool IsSetItemCount();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
}
public class Amazon.DynamoDBv2.Model.LocalSecondaryIndexInfo : object {
    private string _indexName;
    private List`1<KeySchemaElement> _keySchema;
    private Projection _projection;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    public Projection Projection { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public Projection get_Projection();
    public void set_Projection(Projection value);
    internal bool IsSetProjection();
}
public class Amazon.DynamoDBv2.Model.OnDemandThroughput : object {
    private Nullable`1<long> _maxReadRequestUnits;
    private Nullable`1<long> _maxWriteRequestUnits;
    public Nullable`1<long> MaxReadRequestUnits { get; public set; }
    public Nullable`1<long> MaxWriteRequestUnits { get; public set; }
    public Nullable`1<long> get_MaxReadRequestUnits();
    public void set_MaxReadRequestUnits(Nullable`1<long> value);
    internal bool IsSetMaxReadRequestUnits();
    public Nullable`1<long> get_MaxWriteRequestUnits();
    public void set_MaxWriteRequestUnits(Nullable`1<long> value);
    internal bool IsSetMaxWriteRequestUnits();
}
public class Amazon.DynamoDBv2.Model.OnDemandThroughputOverride : object {
    private Nullable`1<long> _maxReadRequestUnits;
    public Nullable`1<long> MaxReadRequestUnits { get; public set; }
    public Nullable`1<long> get_MaxReadRequestUnits();
    public void set_MaxReadRequestUnits(Nullable`1<long> value);
    internal bool IsSetMaxReadRequestUnits();
}
public class Amazon.DynamoDBv2.Model.ParameterizedStatement : object {
    private List`1<AttributeValue> _parameters;
    private ReturnValuesOnConditionCheckFailure _returnValuesOnConditionCheckFailure;
    private string _statement;
    [AWSPropertyAttribute]
public List`1<AttributeValue> Parameters { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [AWSPropertyAttribute]
public string Statement { get; public set; }
    public List`1<AttributeValue> get_Parameters();
    public void set_Parameters(List`1<AttributeValue> value);
    internal bool IsSetParameters();
    public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
    internal bool IsSetReturnValuesOnConditionCheckFailure();
    public string get_Statement();
    public void set_Statement(string value);
    internal bool IsSetStatement();
}
public class Amazon.DynamoDBv2.Model.PointInTimeRecoveryDescription : object {
    private Nullable`1<DateTime> _earliestRestorableDateTime;
    private Nullable`1<DateTime> _latestRestorableDateTime;
    private PointInTimeRecoveryStatus _pointInTimeRecoveryStatus;
    public Nullable`1<DateTime> EarliestRestorableDateTime { get; public set; }
    public Nullable`1<DateTime> LatestRestorableDateTime { get; public set; }
    public PointInTimeRecoveryStatus PointInTimeRecoveryStatus { get; public set; }
    public Nullable`1<DateTime> get_EarliestRestorableDateTime();
    public void set_EarliestRestorableDateTime(Nullable`1<DateTime> value);
    internal bool IsSetEarliestRestorableDateTime();
    public Nullable`1<DateTime> get_LatestRestorableDateTime();
    public void set_LatestRestorableDateTime(Nullable`1<DateTime> value);
    internal bool IsSetLatestRestorableDateTime();
    public PointInTimeRecoveryStatus get_PointInTimeRecoveryStatus();
    public void set_PointInTimeRecoveryStatus(PointInTimeRecoveryStatus value);
    internal bool IsSetPointInTimeRecoveryStatus();
}
public class Amazon.DynamoDBv2.Model.PointInTimeRecoverySpecification : object {
    private Nullable`1<bool> _pointInTimeRecoveryEnabled;
    [AWSPropertyAttribute]
public Nullable`1<bool> PointInTimeRecoveryEnabled { get; public set; }
    public Nullable`1<bool> get_PointInTimeRecoveryEnabled();
    public void set_PointInTimeRecoveryEnabled(Nullable`1<bool> value);
    internal bool IsSetPointInTimeRecoveryEnabled();
}
public class Amazon.DynamoDBv2.Model.PointInTimeRecoveryUnavailableException : AmazonDynamoDBException {
    public PointInTimeRecoveryUnavailableException(string message);
    public PointInTimeRecoveryUnavailableException(string message, Exception innerException);
    public PointInTimeRecoveryUnavailableException(Exception innerException);
    public PointInTimeRecoveryUnavailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PointInTimeRecoveryUnavailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.PolicyNotFoundException : AmazonDynamoDBException {
    public PolicyNotFoundException(string message);
    public PolicyNotFoundException(string message, Exception innerException);
    public PolicyNotFoundException(Exception innerException);
    public PolicyNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.Projection : object {
    private List`1<string> _nonKeyAttributes;
    private ProjectionType _projectionType;
    [AWSPropertyAttribute]
public List`1<string> NonKeyAttributes { get; public set; }
    public ProjectionType ProjectionType { get; public set; }
    public List`1<string> get_NonKeyAttributes();
    public void set_NonKeyAttributes(List`1<string> value);
    internal bool IsSetNonKeyAttributes();
    public ProjectionType get_ProjectionType();
    public void set_ProjectionType(ProjectionType value);
    internal bool IsSetProjectionType();
}
public class Amazon.DynamoDBv2.Model.ProvisionedThroughput : object {
    private Nullable`1<long> _readCapacityUnits;
    private Nullable`1<long> _writeCapacityUnits;
    [AWSPropertyAttribute]
public Nullable`1<long> ReadCapacityUnits { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> WriteCapacityUnits { get; public set; }
    public ProvisionedThroughput(Nullable`1<long> readCapacityUnits, Nullable`1<long> writeCapacityUnits);
    public Nullable`1<long> get_ReadCapacityUnits();
    public void set_ReadCapacityUnits(Nullable`1<long> value);
    internal bool IsSetReadCapacityUnits();
    public Nullable`1<long> get_WriteCapacityUnits();
    public void set_WriteCapacityUnits(Nullable`1<long> value);
    internal bool IsSetWriteCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription : object {
    private Nullable`1<DateTime> _lastDecreaseDateTime;
    private Nullable`1<DateTime> _lastIncreaseDateTime;
    private Nullable`1<long> _numberOfDecreasesToday;
    private Nullable`1<long> _readCapacityUnits;
    private Nullable`1<long> _writeCapacityUnits;
    public Nullable`1<DateTime> LastDecreaseDateTime { get; public set; }
    public Nullable`1<DateTime> LastIncreaseDateTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> NumberOfDecreasesToday { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ReadCapacityUnits { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> WriteCapacityUnits { get; public set; }
    public Nullable`1<DateTime> get_LastDecreaseDateTime();
    public void set_LastDecreaseDateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastDecreaseDateTime();
    public Nullable`1<DateTime> get_LastIncreaseDateTime();
    public void set_LastIncreaseDateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastIncreaseDateTime();
    public Nullable`1<long> get_NumberOfDecreasesToday();
    public void set_NumberOfDecreasesToday(Nullable`1<long> value);
    internal bool IsSetNumberOfDecreasesToday();
    public Nullable`1<long> get_ReadCapacityUnits();
    public void set_ReadCapacityUnits(Nullable`1<long> value);
    internal bool IsSetReadCapacityUnits();
    public Nullable`1<long> get_WriteCapacityUnits();
    public void set_WriteCapacityUnits(Nullable`1<long> value);
    internal bool IsSetWriteCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException : AmazonDynamoDBException {
    public ProvisionedThroughputExceededException(string message);
    public ProvisionedThroughputExceededException(string message, Exception innerException);
    public ProvisionedThroughputExceededException(Exception innerException);
    public ProvisionedThroughputExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ProvisionedThroughputExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ProvisionedThroughputOverride : object {
    private Nullable`1<long> _readCapacityUnits;
    [AWSPropertyAttribute]
public Nullable`1<long> ReadCapacityUnits { get; public set; }
    public Nullable`1<long> get_ReadCapacityUnits();
    public void set_ReadCapacityUnits(Nullable`1<long> value);
    internal bool IsSetReadCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.Put : object {
    private string _conditionExpression;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private Dictionary`2<string, AttributeValue> _item;
    private ReturnValuesOnConditionCheckFailure _returnValuesOnConditionCheckFailure;
    private string _tableName;
    public string ConditionExpression { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_ConditionExpression();
    public void set_ConditionExpression(string value);
    internal bool IsSetConditionExpression();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItem();
    public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
    internal bool IsSetReturnValuesOnConditionCheckFailure();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.PutItemRequest : AmazonDynamoDBRequest {
    private ConditionalOperator _conditionalOperator;
    private string _conditionExpression;
    private Dictionary`2<string, ExpectedAttributeValue> _expected;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private Dictionary`2<string, AttributeValue> _item;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private ReturnItemCollectionMetrics _returnItemCollectionMetrics;
    private ReturnValue _returnValues;
    private ReturnValuesOnConditionCheckFailure _returnValuesOnConditionCheckFailure;
    private string _tableName;
    public ConditionalOperator ConditionalOperator { get; public set; }
    public string ConditionExpression { get; public set; }
    public Dictionary`2<string, ExpectedAttributeValue> Expected { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public ReturnItemCollectionMetrics ReturnItemCollectionMetrics { get; public set; }
    public ReturnValue ReturnValues { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public PutItemRequest(string tableName, Dictionary`2<string, AttributeValue> item);
    public PutItemRequest(string tableName, Dictionary`2<string, AttributeValue> item, ReturnValue returnValues);
    public ConditionalOperator get_ConditionalOperator();
    public void set_ConditionalOperator(ConditionalOperator value);
    internal bool IsSetConditionalOperator();
    public string get_ConditionExpression();
    public void set_ConditionExpression(string value);
    internal bool IsSetConditionExpression();
    public Dictionary`2<string, ExpectedAttributeValue> get_Expected();
    public void set_Expected(Dictionary`2<string, ExpectedAttributeValue> value);
    internal bool IsSetExpected();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItem();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public ReturnItemCollectionMetrics get_ReturnItemCollectionMetrics();
    public void set_ReturnItemCollectionMetrics(ReturnItemCollectionMetrics value);
    internal bool IsSetReturnItemCollectionMetrics();
    public ReturnValue get_ReturnValues();
    public void set_ReturnValues(ReturnValue value);
    internal bool IsSetReturnValues();
    public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
    internal bool IsSetReturnValuesOnConditionCheckFailure();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.PutItemResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, AttributeValue> _attributes;
    private ConsumedCapacity _consumedCapacity;
    private ItemCollectionMetrics _itemCollectionMetrics;
    public Dictionary`2<string, AttributeValue> Attributes { get; public set; }
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public ItemCollectionMetrics ItemCollectionMetrics { get; public set; }
    public Dictionary`2<string, AttributeValue> get_Attributes();
    public void set_Attributes(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetAttributes();
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public ItemCollectionMetrics get_ItemCollectionMetrics();
    public void set_ItemCollectionMetrics(ItemCollectionMetrics value);
    internal bool IsSetItemCollectionMetrics();
}
public class Amazon.DynamoDBv2.Model.PutRequest : object {
    private Dictionary`2<string, AttributeValue> _item;
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Item { get; public set; }
    public PutRequest(Dictionary`2<string, AttributeValue> item);
    public Dictionary`2<string, AttributeValue> get_Item();
    public void set_Item(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetItem();
}
public class Amazon.DynamoDBv2.Model.PutResourcePolicyRequest : AmazonDynamoDBRequest {
    private Nullable`1<bool> _confirmRemoveSelfResourceAccess;
    private string _expectedRevisionId;
    private string _policy;
    private string _resourceArn;
    public Nullable`1<bool> ConfirmRemoveSelfResourceAccess { get; public set; }
    [AWSPropertyAttribute]
public string ExpectedRevisionId { get; public set; }
    [AWSPropertyAttribute]
public string Policy { get; public set; }
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    public Nullable`1<bool> get_ConfirmRemoveSelfResourceAccess();
    public void set_ConfirmRemoveSelfResourceAccess(Nullable`1<bool> value);
    internal bool IsSetConfirmRemoveSelfResourceAccess();
    public string get_ExpectedRevisionId();
    public void set_ExpectedRevisionId(string value);
    internal bool IsSetExpectedRevisionId();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
}
public class Amazon.DynamoDBv2.Model.PutResourcePolicyResponse : AmazonWebServiceResponse {
    private string _revisionId;
    [AWSPropertyAttribute]
public string RevisionId { get; public set; }
    public string get_RevisionId();
    public void set_RevisionId(string value);
    internal bool IsSetRevisionId();
}
internal class Amazon.DynamoDBv2.Model.QueryPaginator : object {
    private IAmazonDynamoDB _client;
    private QueryRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<QueryResponse> Responses { get; }
    internal QueryPaginator(IAmazonDynamoDB client, QueryRequest request);
    public sealed virtual IPaginatedEnumerable`1<QueryResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DynamoDBv2.Model.QueryPaginator/<Amazon-Runtime-IPaginator<Amazon-DynamoDBv2-Model-QueryResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<QueryResponse> Amazon.Runtime.IPaginator<Amazon.DynamoDBv2.Model.QueryResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.Model.QueryRequest : AmazonDynamoDBRequest {
    private List`1<string> _attributesToGet;
    private ConditionalOperator _conditionalOperator;
    private Nullable`1<bool> _consistentRead;
    private Dictionary`2<string, AttributeValue> _exclusiveStartKey;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private string _filterExpression;
    private string _indexName;
    private string _keyConditionExpression;
    private Dictionary`2<string, Condition> _keyConditions;
    private Nullable`1<int> _limit;
    private string _projectionExpression;
    private Dictionary`2<string, Condition> _queryFilter;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private Nullable`1<bool> _scanIndexForward;
    private Select _select;
    private string _tableName;
    [AWSPropertyAttribute]
public List`1<string> AttributesToGet { get; public set; }
    public ConditionalOperator ConditionalOperator { get; public set; }
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Dictionary`2<string, AttributeValue> ExclusiveStartKey { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    public string FilterExpression { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public string KeyConditionExpression { get; public set; }
    public Dictionary`2<string, Condition> KeyConditions { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    public bool IsLimitSet { get; public set; }
    public string ProjectionExpression { get; public set; }
    public Dictionary`2<string, Condition> QueryFilter { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public Nullable`1<bool> ScanIndexForward { get; public set; }
    public Select Select { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public QueryRequest(string tableName);
    public List`1<string> get_AttributesToGet();
    public void set_AttributesToGet(List`1<string> value);
    internal bool IsSetAttributesToGet();
    public ConditionalOperator get_ConditionalOperator();
    public void set_ConditionalOperator(ConditionalOperator value);
    internal bool IsSetConditionalOperator();
    public Nullable`1<bool> get_ConsistentRead();
    public void set_ConsistentRead(Nullable`1<bool> value);
    internal bool IsSetConsistentRead();
    public Dictionary`2<string, AttributeValue> get_ExclusiveStartKey();
    public void set_ExclusiveStartKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExclusiveStartKey();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public string get_FilterExpression();
    public void set_FilterExpression(string value);
    internal bool IsSetFilterExpression();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public string get_KeyConditionExpression();
    public void set_KeyConditionExpression(string value);
    internal bool IsSetKeyConditionExpression();
    public Dictionary`2<string, Condition> get_KeyConditions();
    public void set_KeyConditions(Dictionary`2<string, Condition> value);
    internal bool IsSetKeyConditions();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    public bool get_IsLimitSet();
    public void set_IsLimitSet(bool value);
    internal bool IsSetLimit();
    public string get_ProjectionExpression();
    public void set_ProjectionExpression(string value);
    internal bool IsSetProjectionExpression();
    public Dictionary`2<string, Condition> get_QueryFilter();
    public void set_QueryFilter(Dictionary`2<string, Condition> value);
    internal bool IsSetQueryFilter();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public Nullable`1<bool> get_ScanIndexForward();
    public void set_ScanIndexForward(Nullable`1<bool> value);
    internal bool IsSetScanIndexForward();
    public Select get_Select();
    public void set_Select(Select value);
    internal bool IsSetSelect();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.QueryResponse : AmazonWebServiceResponse {
    private ConsumedCapacity _consumedCapacity;
    private Nullable`1<int> _count;
    private List`1<Dictionary`2<string, AttributeValue>> _items;
    private Dictionary`2<string, AttributeValue> _lastEvaluatedKey;
    private Nullable`1<int> _scannedCount;
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public Nullable`1<int> Count { get; public set; }
    public List`1<Dictionary`2<string, AttributeValue>> Items { get; public set; }
    public Dictionary`2<string, AttributeValue> LastEvaluatedKey { get; public set; }
    public Nullable`1<int> ScannedCount { get; public set; }
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public List`1<Dictionary`2<string, AttributeValue>> get_Items();
    public void set_Items(List`1<Dictionary`2<string, AttributeValue>> value);
    internal bool IsSetItems();
    public Dictionary`2<string, AttributeValue> get_LastEvaluatedKey();
    public void set_LastEvaluatedKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetLastEvaluatedKey();
    public Nullable`1<int> get_ScannedCount();
    public void set_ScannedCount(Nullable`1<int> value);
    internal bool IsSetScannedCount();
}
public class Amazon.DynamoDBv2.Model.Record : object {
    private string _awsRegion;
    private StreamRecord _dynamodb;
    private string _eventid;
    private OperationType _eventName;
    private string _eventSource;
    private string _eventVersion;
    private Identity _userIdentity;
    public string AwsRegion { get; public set; }
    public StreamRecord Dynamodb { get; public set; }
    public string EventID { get; public set; }
    public OperationType EventName { get; public set; }
    public string EventSource { get; public set; }
    public string EventVersion { get; public set; }
    public Identity UserIdentity { get; public set; }
    public string get_AwsRegion();
    public void set_AwsRegion(string value);
    internal bool IsSetAwsRegion();
    public StreamRecord get_Dynamodb();
    public void set_Dynamodb(StreamRecord value);
    internal bool IsSetDynamodb();
    public string get_EventID();
    public void set_EventID(string value);
    internal bool IsSetEventID();
    public OperationType get_EventName();
    public void set_EventName(OperationType value);
    internal bool IsSetEventName();
    public string get_EventSource();
    public void set_EventSource(string value);
    internal bool IsSetEventSource();
    public string get_EventVersion();
    public void set_EventVersion(string value);
    internal bool IsSetEventVersion();
    public Identity get_UserIdentity();
    public void set_UserIdentity(Identity value);
    internal bool IsSetUserIdentity();
}
public class Amazon.DynamoDBv2.Model.Replica : object {
    private string _regionName;
    public string RegionName { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
}
public class Amazon.DynamoDBv2.Model.ReplicaAlreadyExistsException : AmazonDynamoDBException {
    public ReplicaAlreadyExistsException(string message);
    public ReplicaAlreadyExistsException(string message, Exception innerException);
    public ReplicaAlreadyExistsException(Exception innerException);
    public ReplicaAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ReplicaAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ReplicaAutoScalingDescription : object {
    private List`1<ReplicaGlobalSecondaryIndexAutoScalingDescription> _globalSecondaryIndexes;
    private string _regionName;
    private AutoScalingSettingsDescription _replicaProvisionedReadCapacityAutoScalingSettings;
    private AutoScalingSettingsDescription _replicaProvisionedWriteCapacityAutoScalingSettings;
    private ReplicaStatus _replicaStatus;
    public List`1<ReplicaGlobalSecondaryIndexAutoScalingDescription> GlobalSecondaryIndexes { get; public set; }
    public string RegionName { get; public set; }
    public AutoScalingSettingsDescription ReplicaProvisionedReadCapacityAutoScalingSettings { get; public set; }
    public AutoScalingSettingsDescription ReplicaProvisionedWriteCapacityAutoScalingSettings { get; public set; }
    public ReplicaStatus ReplicaStatus { get; public set; }
    public List`1<ReplicaGlobalSecondaryIndexAutoScalingDescription> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(List`1<ReplicaGlobalSecondaryIndexAutoScalingDescription> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public AutoScalingSettingsDescription get_ReplicaProvisionedReadCapacityAutoScalingSettings();
    public void set_ReplicaProvisionedReadCapacityAutoScalingSettings(AutoScalingSettingsDescription value);
    internal bool IsSetReplicaProvisionedReadCapacityAutoScalingSettings();
    public AutoScalingSettingsDescription get_ReplicaProvisionedWriteCapacityAutoScalingSettings();
    public void set_ReplicaProvisionedWriteCapacityAutoScalingSettings(AutoScalingSettingsDescription value);
    internal bool IsSetReplicaProvisionedWriteCapacityAutoScalingSettings();
    public ReplicaStatus get_ReplicaStatus();
    public void set_ReplicaStatus(ReplicaStatus value);
    internal bool IsSetReplicaStatus();
}
public class Amazon.DynamoDBv2.Model.ReplicaAutoScalingUpdate : object {
    private string _regionName;
    private List`1<ReplicaGlobalSecondaryIndexAutoScalingUpdate> _replicaGlobalSecondaryIndexUpdates;
    private AutoScalingSettingsUpdate _replicaProvisionedReadCapacityAutoScalingUpdate;
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public List`1<ReplicaGlobalSecondaryIndexAutoScalingUpdate> ReplicaGlobalSecondaryIndexUpdates { get; public set; }
    public AutoScalingSettingsUpdate ReplicaProvisionedReadCapacityAutoScalingUpdate { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public List`1<ReplicaGlobalSecondaryIndexAutoScalingUpdate> get_ReplicaGlobalSecondaryIndexUpdates();
    public void set_ReplicaGlobalSecondaryIndexUpdates(List`1<ReplicaGlobalSecondaryIndexAutoScalingUpdate> value);
    internal bool IsSetReplicaGlobalSecondaryIndexUpdates();
    public AutoScalingSettingsUpdate get_ReplicaProvisionedReadCapacityAutoScalingUpdate();
    public void set_ReplicaProvisionedReadCapacityAutoScalingUpdate(AutoScalingSettingsUpdate value);
    internal bool IsSetReplicaProvisionedReadCapacityAutoScalingUpdate();
}
public class Amazon.DynamoDBv2.Model.ReplicaDescription : object {
    private List`1<ReplicaGlobalSecondaryIndexDescription> _globalSecondaryIndexes;
    private string _kmsMasterKeyId;
    private OnDemandThroughputOverride _onDemandThroughputOverride;
    private ProvisionedThroughputOverride _provisionedThroughputOverride;
    private string _regionName;
    private Nullable`1<DateTime> _replicaInaccessibleDateTime;
    private ReplicaStatus _replicaStatus;
    private string _replicaStatusDescription;
    private string _replicaStatusPercentProgress;
    private TableClassSummary _replicaTableClassSummary;
    public List`1<ReplicaGlobalSecondaryIndexDescription> GlobalSecondaryIndexes { get; public set; }
    public string KMSMasterKeyId { get; public set; }
    public OnDemandThroughputOverride OnDemandThroughputOverride { get; public set; }
    public ProvisionedThroughputOverride ProvisionedThroughputOverride { get; public set; }
    public string RegionName { get; public set; }
    public Nullable`1<DateTime> ReplicaInaccessibleDateTime { get; public set; }
    public ReplicaStatus ReplicaStatus { get; public set; }
    public string ReplicaStatusDescription { get; public set; }
    public string ReplicaStatusPercentProgress { get; public set; }
    public TableClassSummary ReplicaTableClassSummary { get; public set; }
    public List`1<ReplicaGlobalSecondaryIndexDescription> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(List`1<ReplicaGlobalSecondaryIndexDescription> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public string get_KMSMasterKeyId();
    public void set_KMSMasterKeyId(string value);
    internal bool IsSetKMSMasterKeyId();
    public OnDemandThroughputOverride get_OnDemandThroughputOverride();
    public void set_OnDemandThroughputOverride(OnDemandThroughputOverride value);
    internal bool IsSetOnDemandThroughputOverride();
    public ProvisionedThroughputOverride get_ProvisionedThroughputOverride();
    public void set_ProvisionedThroughputOverride(ProvisionedThroughputOverride value);
    internal bool IsSetProvisionedThroughputOverride();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public Nullable`1<DateTime> get_ReplicaInaccessibleDateTime();
    public void set_ReplicaInaccessibleDateTime(Nullable`1<DateTime> value);
    internal bool IsSetReplicaInaccessibleDateTime();
    public ReplicaStatus get_ReplicaStatus();
    public void set_ReplicaStatus(ReplicaStatus value);
    internal bool IsSetReplicaStatus();
    public string get_ReplicaStatusDescription();
    public void set_ReplicaStatusDescription(string value);
    internal bool IsSetReplicaStatusDescription();
    public string get_ReplicaStatusPercentProgress();
    public void set_ReplicaStatusPercentProgress(string value);
    internal bool IsSetReplicaStatusPercentProgress();
    public TableClassSummary get_ReplicaTableClassSummary();
    public void set_ReplicaTableClassSummary(TableClassSummary value);
    internal bool IsSetReplicaTableClassSummary();
}
public class Amazon.DynamoDBv2.Model.ReplicaGlobalSecondaryIndex : object {
    private string _indexName;
    private OnDemandThroughputOverride _onDemandThroughputOverride;
    private ProvisionedThroughputOverride _provisionedThroughputOverride;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public OnDemandThroughputOverride OnDemandThroughputOverride { get; public set; }
    public ProvisionedThroughputOverride ProvisionedThroughputOverride { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public OnDemandThroughputOverride get_OnDemandThroughputOverride();
    public void set_OnDemandThroughputOverride(OnDemandThroughputOverride value);
    internal bool IsSetOnDemandThroughputOverride();
    public ProvisionedThroughputOverride get_ProvisionedThroughputOverride();
    public void set_ProvisionedThroughputOverride(ProvisionedThroughputOverride value);
    internal bool IsSetProvisionedThroughputOverride();
}
public class Amazon.DynamoDBv2.Model.ReplicaGlobalSecondaryIndexAutoScalingDescription : object {
    private string _indexName;
    private IndexStatus _indexStatus;
    private AutoScalingSettingsDescription _provisionedReadCapacityAutoScalingSettings;
    private AutoScalingSettingsDescription _provisionedWriteCapacityAutoScalingSettings;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public IndexStatus IndexStatus { get; public set; }
    public AutoScalingSettingsDescription ProvisionedReadCapacityAutoScalingSettings { get; public set; }
    public AutoScalingSettingsDescription ProvisionedWriteCapacityAutoScalingSettings { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public IndexStatus get_IndexStatus();
    public void set_IndexStatus(IndexStatus value);
    internal bool IsSetIndexStatus();
    public AutoScalingSettingsDescription get_ProvisionedReadCapacityAutoScalingSettings();
    public void set_ProvisionedReadCapacityAutoScalingSettings(AutoScalingSettingsDescription value);
    internal bool IsSetProvisionedReadCapacityAutoScalingSettings();
    public AutoScalingSettingsDescription get_ProvisionedWriteCapacityAutoScalingSettings();
    public void set_ProvisionedWriteCapacityAutoScalingSettings(AutoScalingSettingsDescription value);
    internal bool IsSetProvisionedWriteCapacityAutoScalingSettings();
}
public class Amazon.DynamoDBv2.Model.ReplicaGlobalSecondaryIndexAutoScalingUpdate : object {
    private string _indexName;
    private AutoScalingSettingsUpdate _provisionedReadCapacityAutoScalingUpdate;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public AutoScalingSettingsUpdate ProvisionedReadCapacityAutoScalingUpdate { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public AutoScalingSettingsUpdate get_ProvisionedReadCapacityAutoScalingUpdate();
    public void set_ProvisionedReadCapacityAutoScalingUpdate(AutoScalingSettingsUpdate value);
    internal bool IsSetProvisionedReadCapacityAutoScalingUpdate();
}
public class Amazon.DynamoDBv2.Model.ReplicaGlobalSecondaryIndexDescription : object {
    private string _indexName;
    private OnDemandThroughputOverride _onDemandThroughputOverride;
    private ProvisionedThroughputOverride _provisionedThroughputOverride;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public OnDemandThroughputOverride OnDemandThroughputOverride { get; public set; }
    public ProvisionedThroughputOverride ProvisionedThroughputOverride { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public OnDemandThroughputOverride get_OnDemandThroughputOverride();
    public void set_OnDemandThroughputOverride(OnDemandThroughputOverride value);
    internal bool IsSetOnDemandThroughputOverride();
    public ProvisionedThroughputOverride get_ProvisionedThroughputOverride();
    public void set_ProvisionedThroughputOverride(ProvisionedThroughputOverride value);
    internal bool IsSetProvisionedThroughputOverride();
}
public class Amazon.DynamoDBv2.Model.ReplicaGlobalSecondaryIndexSettingsDescription : object {
    private string _indexName;
    private IndexStatus _indexStatus;
    private AutoScalingSettingsDescription _provisionedReadCapacityAutoScalingSettings;
    private Nullable`1<long> _provisionedReadCapacityUnits;
    private AutoScalingSettingsDescription _provisionedWriteCapacityAutoScalingSettings;
    private Nullable`1<long> _provisionedWriteCapacityUnits;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public IndexStatus IndexStatus { get; public set; }
    public AutoScalingSettingsDescription ProvisionedReadCapacityAutoScalingSettings { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ProvisionedReadCapacityUnits { get; public set; }
    public AutoScalingSettingsDescription ProvisionedWriteCapacityAutoScalingSettings { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ProvisionedWriteCapacityUnits { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public IndexStatus get_IndexStatus();
    public void set_IndexStatus(IndexStatus value);
    internal bool IsSetIndexStatus();
    public AutoScalingSettingsDescription get_ProvisionedReadCapacityAutoScalingSettings();
    public void set_ProvisionedReadCapacityAutoScalingSettings(AutoScalingSettingsDescription value);
    internal bool IsSetProvisionedReadCapacityAutoScalingSettings();
    public Nullable`1<long> get_ProvisionedReadCapacityUnits();
    public void set_ProvisionedReadCapacityUnits(Nullable`1<long> value);
    internal bool IsSetProvisionedReadCapacityUnits();
    public AutoScalingSettingsDescription get_ProvisionedWriteCapacityAutoScalingSettings();
    public void set_ProvisionedWriteCapacityAutoScalingSettings(AutoScalingSettingsDescription value);
    internal bool IsSetProvisionedWriteCapacityAutoScalingSettings();
    public Nullable`1<long> get_ProvisionedWriteCapacityUnits();
    public void set_ProvisionedWriteCapacityUnits(Nullable`1<long> value);
    internal bool IsSetProvisionedWriteCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.ReplicaGlobalSecondaryIndexSettingsUpdate : object {
    private string _indexName;
    private AutoScalingSettingsUpdate _provisionedReadCapacityAutoScalingSettingsUpdate;
    private Nullable`1<long> _provisionedReadCapacityUnits;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public AutoScalingSettingsUpdate ProvisionedReadCapacityAutoScalingSettingsUpdate { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ProvisionedReadCapacityUnits { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public AutoScalingSettingsUpdate get_ProvisionedReadCapacityAutoScalingSettingsUpdate();
    public void set_ProvisionedReadCapacityAutoScalingSettingsUpdate(AutoScalingSettingsUpdate value);
    internal bool IsSetProvisionedReadCapacityAutoScalingSettingsUpdate();
    public Nullable`1<long> get_ProvisionedReadCapacityUnits();
    public void set_ProvisionedReadCapacityUnits(Nullable`1<long> value);
    internal bool IsSetProvisionedReadCapacityUnits();
}
public class Amazon.DynamoDBv2.Model.ReplicaNotFoundException : AmazonDynamoDBException {
    public ReplicaNotFoundException(string message);
    public ReplicaNotFoundException(string message, Exception innerException);
    public ReplicaNotFoundException(Exception innerException);
    public ReplicaNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ReplicaNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ReplicaSettingsDescription : object {
    private string _regionName;
    private BillingModeSummary _replicaBillingModeSummary;
    private List`1<ReplicaGlobalSecondaryIndexSettingsDescription> _replicaGlobalSecondaryIndexSettings;
    private AutoScalingSettingsDescription _replicaProvisionedReadCapacityAutoScalingSettings;
    private Nullable`1<long> _replicaProvisionedReadCapacityUnits;
    private AutoScalingSettingsDescription _replicaProvisionedWriteCapacityAutoScalingSettings;
    private Nullable`1<long> _replicaProvisionedWriteCapacityUnits;
    private ReplicaStatus _replicaStatus;
    private TableClassSummary _replicaTableClassSummary;
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public BillingModeSummary ReplicaBillingModeSummary { get; public set; }
    public List`1<ReplicaGlobalSecondaryIndexSettingsDescription> ReplicaGlobalSecondaryIndexSettings { get; public set; }
    public AutoScalingSettingsDescription ReplicaProvisionedReadCapacityAutoScalingSettings { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ReplicaProvisionedReadCapacityUnits { get; public set; }
    public AutoScalingSettingsDescription ReplicaProvisionedWriteCapacityAutoScalingSettings { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ReplicaProvisionedWriteCapacityUnits { get; public set; }
    public ReplicaStatus ReplicaStatus { get; public set; }
    public TableClassSummary ReplicaTableClassSummary { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public BillingModeSummary get_ReplicaBillingModeSummary();
    public void set_ReplicaBillingModeSummary(BillingModeSummary value);
    internal bool IsSetReplicaBillingModeSummary();
    public List`1<ReplicaGlobalSecondaryIndexSettingsDescription> get_ReplicaGlobalSecondaryIndexSettings();
    public void set_ReplicaGlobalSecondaryIndexSettings(List`1<ReplicaGlobalSecondaryIndexSettingsDescription> value);
    internal bool IsSetReplicaGlobalSecondaryIndexSettings();
    public AutoScalingSettingsDescription get_ReplicaProvisionedReadCapacityAutoScalingSettings();
    public void set_ReplicaProvisionedReadCapacityAutoScalingSettings(AutoScalingSettingsDescription value);
    internal bool IsSetReplicaProvisionedReadCapacityAutoScalingSettings();
    public Nullable`1<long> get_ReplicaProvisionedReadCapacityUnits();
    public void set_ReplicaProvisionedReadCapacityUnits(Nullable`1<long> value);
    internal bool IsSetReplicaProvisionedReadCapacityUnits();
    public AutoScalingSettingsDescription get_ReplicaProvisionedWriteCapacityAutoScalingSettings();
    public void set_ReplicaProvisionedWriteCapacityAutoScalingSettings(AutoScalingSettingsDescription value);
    internal bool IsSetReplicaProvisionedWriteCapacityAutoScalingSettings();
    public Nullable`1<long> get_ReplicaProvisionedWriteCapacityUnits();
    public void set_ReplicaProvisionedWriteCapacityUnits(Nullable`1<long> value);
    internal bool IsSetReplicaProvisionedWriteCapacityUnits();
    public ReplicaStatus get_ReplicaStatus();
    public void set_ReplicaStatus(ReplicaStatus value);
    internal bool IsSetReplicaStatus();
    public TableClassSummary get_ReplicaTableClassSummary();
    public void set_ReplicaTableClassSummary(TableClassSummary value);
    internal bool IsSetReplicaTableClassSummary();
}
public class Amazon.DynamoDBv2.Model.ReplicaSettingsUpdate : object {
    private string _regionName;
    private List`1<ReplicaGlobalSecondaryIndexSettingsUpdate> _replicaGlobalSecondaryIndexSettingsUpdate;
    private AutoScalingSettingsUpdate _replicaProvisionedReadCapacityAutoScalingSettingsUpdate;
    private Nullable`1<long> _replicaProvisionedReadCapacityUnits;
    private TableClass _replicaTableClass;
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    [AWSPropertyAttribute]
public List`1<ReplicaGlobalSecondaryIndexSettingsUpdate> ReplicaGlobalSecondaryIndexSettingsUpdate { get; public set; }
    public AutoScalingSettingsUpdate ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ReplicaProvisionedReadCapacityUnits { get; public set; }
    public TableClass ReplicaTableClass { get; public set; }
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public List`1<ReplicaGlobalSecondaryIndexSettingsUpdate> get_ReplicaGlobalSecondaryIndexSettingsUpdate();
    public void set_ReplicaGlobalSecondaryIndexSettingsUpdate(List`1<ReplicaGlobalSecondaryIndexSettingsUpdate> value);
    internal bool IsSetReplicaGlobalSecondaryIndexSettingsUpdate();
    public AutoScalingSettingsUpdate get_ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate();
    public void set_ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate(AutoScalingSettingsUpdate value);
    internal bool IsSetReplicaProvisionedReadCapacityAutoScalingSettingsUpdate();
    public Nullable`1<long> get_ReplicaProvisionedReadCapacityUnits();
    public void set_ReplicaProvisionedReadCapacityUnits(Nullable`1<long> value);
    internal bool IsSetReplicaProvisionedReadCapacityUnits();
    public TableClass get_ReplicaTableClass();
    public void set_ReplicaTableClass(TableClass value);
    internal bool IsSetReplicaTableClass();
}
public class Amazon.DynamoDBv2.Model.ReplicationGroupUpdate : object {
    private CreateReplicationGroupMemberAction _create;
    private DeleteReplicationGroupMemberAction _delete;
    private UpdateReplicationGroupMemberAction _update;
    public CreateReplicationGroupMemberAction Create { get; public set; }
    public DeleteReplicationGroupMemberAction Delete { get; public set; }
    public UpdateReplicationGroupMemberAction Update { get; public set; }
    public CreateReplicationGroupMemberAction get_Create();
    public void set_Create(CreateReplicationGroupMemberAction value);
    internal bool IsSetCreate();
    public DeleteReplicationGroupMemberAction get_Delete();
    public void set_Delete(DeleteReplicationGroupMemberAction value);
    internal bool IsSetDelete();
    public UpdateReplicationGroupMemberAction get_Update();
    public void set_Update(UpdateReplicationGroupMemberAction value);
    internal bool IsSetUpdate();
}
public class Amazon.DynamoDBv2.Model.ReplicaUpdate : object {
    private CreateReplicaAction _create;
    private DeleteReplicaAction _delete;
    public CreateReplicaAction Create { get; public set; }
    public DeleteReplicaAction Delete { get; public set; }
    public CreateReplicaAction get_Create();
    public void set_Create(CreateReplicaAction value);
    internal bool IsSetCreate();
    public DeleteReplicaAction get_Delete();
    public void set_Delete(DeleteReplicaAction value);
    internal bool IsSetDelete();
}
public class Amazon.DynamoDBv2.Model.RequestLimitExceededException : AmazonDynamoDBException {
    public RequestLimitExceededException(string message);
    public RequestLimitExceededException(string message, Exception innerException);
    public RequestLimitExceededException(Exception innerException);
    public RequestLimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RequestLimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ResourceInUseException : AmazonDynamoDBException {
    public ResourceInUseException(string message);
    public ResourceInUseException(string message, Exception innerException);
    public ResourceInUseException(Exception innerException);
    public ResourceInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.ResourceNotFoundException : AmazonDynamoDBException {
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.RestoreSummary : object {
    private Nullable`1<DateTime> _restoreDateTime;
    private Nullable`1<bool> _restoreInProgress;
    private string _sourceBackupArn;
    private string _sourceTableArn;
    [AWSPropertyAttribute]
public Nullable`1<DateTime> RestoreDateTime { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> RestoreInProgress { get; public set; }
    [AWSPropertyAttribute]
public string SourceBackupArn { get; public set; }
    [AWSPropertyAttribute]
public string SourceTableArn { get; public set; }
    public Nullable`1<DateTime> get_RestoreDateTime();
    public void set_RestoreDateTime(Nullable`1<DateTime> value);
    internal bool IsSetRestoreDateTime();
    public Nullable`1<bool> get_RestoreInProgress();
    public void set_RestoreInProgress(Nullable`1<bool> value);
    internal bool IsSetRestoreInProgress();
    public string get_SourceBackupArn();
    public void set_SourceBackupArn(string value);
    internal bool IsSetSourceBackupArn();
    public string get_SourceTableArn();
    public void set_SourceTableArn(string value);
    internal bool IsSetSourceTableArn();
}
public class Amazon.DynamoDBv2.Model.RestoreTableFromBackupRequest : AmazonDynamoDBRequest {
    private string _backupArn;
    private BillingMode _billingModeOverride;
    private List`1<GlobalSecondaryIndex> _globalSecondaryIndexOverride;
    private List`1<LocalSecondaryIndex> _localSecondaryIndexOverride;
    private OnDemandThroughput _onDemandThroughputOverride;
    private ProvisionedThroughput _provisionedThroughputOverride;
    private SSESpecification _sseSpecificationOverride;
    private string _targetTableName;
    [AWSPropertyAttribute]
public string BackupArn { get; public set; }
    public BillingMode BillingModeOverride { get; public set; }
    public List`1<GlobalSecondaryIndex> GlobalSecondaryIndexOverride { get; public set; }
    public List`1<LocalSecondaryIndex> LocalSecondaryIndexOverride { get; public set; }
    public OnDemandThroughput OnDemandThroughputOverride { get; public set; }
    public ProvisionedThroughput ProvisionedThroughputOverride { get; public set; }
    public SSESpecification SSESpecificationOverride { get; public set; }
    [AWSPropertyAttribute]
public string TargetTableName { get; public set; }
    public string get_BackupArn();
    public void set_BackupArn(string value);
    internal bool IsSetBackupArn();
    public BillingMode get_BillingModeOverride();
    public void set_BillingModeOverride(BillingMode value);
    internal bool IsSetBillingModeOverride();
    public List`1<GlobalSecondaryIndex> get_GlobalSecondaryIndexOverride();
    public void set_GlobalSecondaryIndexOverride(List`1<GlobalSecondaryIndex> value);
    internal bool IsSetGlobalSecondaryIndexOverride();
    public List`1<LocalSecondaryIndex> get_LocalSecondaryIndexOverride();
    public void set_LocalSecondaryIndexOverride(List`1<LocalSecondaryIndex> value);
    internal bool IsSetLocalSecondaryIndexOverride();
    public OnDemandThroughput get_OnDemandThroughputOverride();
    public void set_OnDemandThroughputOverride(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughputOverride();
    public ProvisionedThroughput get_ProvisionedThroughputOverride();
    public void set_ProvisionedThroughputOverride(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughputOverride();
    public SSESpecification get_SSESpecificationOverride();
    public void set_SSESpecificationOverride(SSESpecification value);
    internal bool IsSetSSESpecificationOverride();
    public string get_TargetTableName();
    public void set_TargetTableName(string value);
    internal bool IsSetTargetTableName();
}
public class Amazon.DynamoDBv2.Model.RestoreTableFromBackupResponse : AmazonWebServiceResponse {
    private TableDescription _tableDescription;
    public TableDescription TableDescription { get; public set; }
    public TableDescription get_TableDescription();
    public void set_TableDescription(TableDescription value);
    internal bool IsSetTableDescription();
}
public class Amazon.DynamoDBv2.Model.RestoreTableToPointInTimeRequest : AmazonDynamoDBRequest {
    private BillingMode _billingModeOverride;
    private List`1<GlobalSecondaryIndex> _globalSecondaryIndexOverride;
    private List`1<LocalSecondaryIndex> _localSecondaryIndexOverride;
    private OnDemandThroughput _onDemandThroughputOverride;
    private ProvisionedThroughput _provisionedThroughputOverride;
    private Nullable`1<DateTime> _restoreDateTime;
    private string _sourceTableArn;
    private string _sourceTableName;
    private SSESpecification _sseSpecificationOverride;
    private string _targetTableName;
    private Nullable`1<bool> _useLatestRestorableTime;
    public BillingMode BillingModeOverride { get; public set; }
    public List`1<GlobalSecondaryIndex> GlobalSecondaryIndexOverride { get; public set; }
    public List`1<LocalSecondaryIndex> LocalSecondaryIndexOverride { get; public set; }
    public OnDemandThroughput OnDemandThroughputOverride { get; public set; }
    public ProvisionedThroughput ProvisionedThroughputOverride { get; public set; }
    public Nullable`1<DateTime> RestoreDateTime { get; public set; }
    [AWSPropertyAttribute]
public string SourceTableArn { get; public set; }
    [AWSPropertyAttribute]
public string SourceTableName { get; public set; }
    public SSESpecification SSESpecificationOverride { get; public set; }
    [AWSPropertyAttribute]
public string TargetTableName { get; public set; }
    public Nullable`1<bool> UseLatestRestorableTime { get; public set; }
    public BillingMode get_BillingModeOverride();
    public void set_BillingModeOverride(BillingMode value);
    internal bool IsSetBillingModeOverride();
    public List`1<GlobalSecondaryIndex> get_GlobalSecondaryIndexOverride();
    public void set_GlobalSecondaryIndexOverride(List`1<GlobalSecondaryIndex> value);
    internal bool IsSetGlobalSecondaryIndexOverride();
    public List`1<LocalSecondaryIndex> get_LocalSecondaryIndexOverride();
    public void set_LocalSecondaryIndexOverride(List`1<LocalSecondaryIndex> value);
    internal bool IsSetLocalSecondaryIndexOverride();
    public OnDemandThroughput get_OnDemandThroughputOverride();
    public void set_OnDemandThroughputOverride(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughputOverride();
    public ProvisionedThroughput get_ProvisionedThroughputOverride();
    public void set_ProvisionedThroughputOverride(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughputOverride();
    public Nullable`1<DateTime> get_RestoreDateTime();
    public void set_RestoreDateTime(Nullable`1<DateTime> value);
    internal bool IsSetRestoreDateTime();
    public string get_SourceTableArn();
    public void set_SourceTableArn(string value);
    internal bool IsSetSourceTableArn();
    public string get_SourceTableName();
    public void set_SourceTableName(string value);
    internal bool IsSetSourceTableName();
    public SSESpecification get_SSESpecificationOverride();
    public void set_SSESpecificationOverride(SSESpecification value);
    internal bool IsSetSSESpecificationOverride();
    public string get_TargetTableName();
    public void set_TargetTableName(string value);
    internal bool IsSetTargetTableName();
    public Nullable`1<bool> get_UseLatestRestorableTime();
    public void set_UseLatestRestorableTime(Nullable`1<bool> value);
    internal bool IsSetUseLatestRestorableTime();
}
public class Amazon.DynamoDBv2.Model.RestoreTableToPointInTimeResponse : AmazonWebServiceResponse {
    private TableDescription _tableDescription;
    public TableDescription TableDescription { get; public set; }
    public TableDescription get_TableDescription();
    public void set_TableDescription(TableDescription value);
    internal bool IsSetTableDescription();
}
public class Amazon.DynamoDBv2.Model.S3BucketSource : object {
    private string _s3Bucket;
    private string _s3BucketOwner;
    private string _s3KeyPrefix;
    [AWSPropertyAttribute]
public string S3Bucket { get; public set; }
    public string S3BucketOwner { get; public set; }
    [AWSPropertyAttribute]
public string S3KeyPrefix { get; public set; }
    public string get_S3Bucket();
    public void set_S3Bucket(string value);
    internal bool IsSetS3Bucket();
    public string get_S3BucketOwner();
    public void set_S3BucketOwner(string value);
    internal bool IsSetS3BucketOwner();
    public string get_S3KeyPrefix();
    public void set_S3KeyPrefix(string value);
    internal bool IsSetS3KeyPrefix();
}
internal class Amazon.DynamoDBv2.Model.ScanPaginator : object {
    private IAmazonDynamoDB _client;
    private ScanRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ScanResponse> Responses { get; }
    internal ScanPaginator(IAmazonDynamoDB client, ScanRequest request);
    public sealed virtual IPaginatedEnumerable`1<ScanResponse> get_Responses();
    [AsyncIteratorStateMachineAttribute("Amazon.DynamoDBv2.Model.ScanPaginator/<Amazon-Runtime-IPaginator<Amazon-DynamoDBv2-Model-ScanResponse>-PaginateAsync>d__6")]
private sealed virtual override IAsyncEnumerable`1<ScanResponse> Amazon.Runtime.IPaginator<Amazon.DynamoDBv2.Model.ScanResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.DynamoDBv2.Model.ScanRequest : AmazonDynamoDBRequest {
    private List`1<string> _attributesToGet;
    private ConditionalOperator _conditionalOperator;
    private Nullable`1<bool> _consistentRead;
    private Dictionary`2<string, AttributeValue> _exclusiveStartKey;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private string _filterExpression;
    private string _indexName;
    private Nullable`1<int> _limit;
    private string _projectionExpression;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private Dictionary`2<string, Condition> _scanFilter;
    private Nullable`1<int> _segment;
    private Select _select;
    private string _tableName;
    private Nullable`1<int> _totalSegments;
    [AWSPropertyAttribute]
public List`1<string> AttributesToGet { get; public set; }
    public ConditionalOperator ConditionalOperator { get; public set; }
    public Nullable`1<bool> ConsistentRead { get; public set; }
    public Dictionary`2<string, AttributeValue> ExclusiveStartKey { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    public string FilterExpression { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Limit { get; public set; }
    public bool IsLimitSet { get; public set; }
    public string ProjectionExpression { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public Dictionary`2<string, Condition> ScanFilter { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> Segment { get; public set; }
    public bool IsSegmentSet { get; public set; }
    public Select Select { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<int> TotalSegments { get; public set; }
    public bool IsTotalSegmentsSet { get; public set; }
    public ScanRequest(string tableName);
    public List`1<string> get_AttributesToGet();
    public void set_AttributesToGet(List`1<string> value);
    internal bool IsSetAttributesToGet();
    public ConditionalOperator get_ConditionalOperator();
    public void set_ConditionalOperator(ConditionalOperator value);
    internal bool IsSetConditionalOperator();
    public Nullable`1<bool> get_ConsistentRead();
    public void set_ConsistentRead(Nullable`1<bool> value);
    internal bool IsSetConsistentRead();
    public Dictionary`2<string, AttributeValue> get_ExclusiveStartKey();
    public void set_ExclusiveStartKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExclusiveStartKey();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public string get_FilterExpression();
    public void set_FilterExpression(string value);
    internal bool IsSetFilterExpression();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    public bool get_IsLimitSet();
    public void set_IsLimitSet(bool value);
    internal bool IsSetLimit();
    public string get_ProjectionExpression();
    public void set_ProjectionExpression(string value);
    internal bool IsSetProjectionExpression();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public Dictionary`2<string, Condition> get_ScanFilter();
    public void set_ScanFilter(Dictionary`2<string, Condition> value);
    internal bool IsSetScanFilter();
    public Nullable`1<int> get_Segment();
    public void set_Segment(Nullable`1<int> value);
    public bool get_IsSegmentSet();
    public void set_IsSegmentSet(bool value);
    internal bool IsSetSegment();
    public Select get_Select();
    public void set_Select(Select value);
    internal bool IsSetSelect();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public Nullable`1<int> get_TotalSegments();
    public void set_TotalSegments(Nullable`1<int> value);
    public bool get_IsTotalSegmentsSet();
    public void set_IsTotalSegmentsSet(bool value);
    internal bool IsSetTotalSegments();
}
public class Amazon.DynamoDBv2.Model.ScanResponse : AmazonWebServiceResponse {
    private ConsumedCapacity _consumedCapacity;
    private Nullable`1<int> _count;
    private List`1<Dictionary`2<string, AttributeValue>> _items;
    private Dictionary`2<string, AttributeValue> _lastEvaluatedKey;
    private Nullable`1<int> _scannedCount;
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public Nullable`1<int> Count { get; public set; }
    public List`1<Dictionary`2<string, AttributeValue>> Items { get; public set; }
    public Dictionary`2<string, AttributeValue> LastEvaluatedKey { get; public set; }
    public Nullable`1<int> ScannedCount { get; public set; }
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public Nullable`1<int> get_Count();
    public void set_Count(Nullable`1<int> value);
    internal bool IsSetCount();
    public List`1<Dictionary`2<string, AttributeValue>> get_Items();
    public void set_Items(List`1<Dictionary`2<string, AttributeValue>> value);
    internal bool IsSetItems();
    public Dictionary`2<string, AttributeValue> get_LastEvaluatedKey();
    public void set_LastEvaluatedKey(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetLastEvaluatedKey();
    public Nullable`1<int> get_ScannedCount();
    public void set_ScannedCount(Nullable`1<int> value);
    internal bool IsSetScannedCount();
}
public class Amazon.DynamoDBv2.Model.SequenceNumberRange : object {
    private string _endingSequenceNumber;
    private string _startingSequenceNumber;
    [AWSPropertyAttribute]
public string EndingSequenceNumber { get; public set; }
    [AWSPropertyAttribute]
public string StartingSequenceNumber { get; public set; }
    public string get_EndingSequenceNumber();
    public void set_EndingSequenceNumber(string value);
    internal bool IsSetEndingSequenceNumber();
    public string get_StartingSequenceNumber();
    public void set_StartingSequenceNumber(string value);
    internal bool IsSetStartingSequenceNumber();
}
public class Amazon.DynamoDBv2.Model.Shard : object {
    private string _parentShardId;
    private SequenceNumberRange _sequenceNumberRange;
    private string _shardId;
    [AWSPropertyAttribute]
public string ParentShardId { get; public set; }
    public SequenceNumberRange SequenceNumberRange { get; public set; }
    [AWSPropertyAttribute]
public string ShardId { get; public set; }
    public string get_ParentShardId();
    public void set_ParentShardId(string value);
    internal bool IsSetParentShardId();
    public SequenceNumberRange get_SequenceNumberRange();
    public void set_SequenceNumberRange(SequenceNumberRange value);
    internal bool IsSetSequenceNumberRange();
    public string get_ShardId();
    public void set_ShardId(string value);
    internal bool IsSetShardId();
}
public class Amazon.DynamoDBv2.Model.SourceTableDetails : object {
    private BillingMode _billingMode;
    private Nullable`1<long> _itemCount;
    private List`1<KeySchemaElement> _keySchema;
    private OnDemandThroughput _onDemandThroughput;
    private ProvisionedThroughput _provisionedThroughput;
    private string _tableArn;
    private Nullable`1<DateTime> _tableCreationDateTime;
    private string _tableId;
    private string _tableName;
    private Nullable`1<long> _tableSizeBytes;
    public BillingMode BillingMode { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> ItemCount { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    public OnDemandThroughput OnDemandThroughput { get; public set; }
    [AWSPropertyAttribute]
public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    [AWSPropertyAttribute]
public string TableArn { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<DateTime> TableCreationDateTime { get; public set; }
    [AWSPropertyAttribute]
public string TableId { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public Nullable`1<long> TableSizeBytes { get; public set; }
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public Nullable`1<long> get_ItemCount();
    public void set_ItemCount(Nullable`1<long> value);
    internal bool IsSetItemCount();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public OnDemandThroughput get_OnDemandThroughput();
    public void set_OnDemandThroughput(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughput();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
    public string get_TableArn();
    public void set_TableArn(string value);
    internal bool IsSetTableArn();
    public Nullable`1<DateTime> get_TableCreationDateTime();
    public void set_TableCreationDateTime(Nullable`1<DateTime> value);
    internal bool IsSetTableCreationDateTime();
    public string get_TableId();
    public void set_TableId(string value);
    internal bool IsSetTableId();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public Nullable`1<long> get_TableSizeBytes();
    public void set_TableSizeBytes(Nullable`1<long> value);
    internal bool IsSetTableSizeBytes();
}
public class Amazon.DynamoDBv2.Model.SourceTableFeatureDetails : object {
    private List`1<GlobalSecondaryIndexInfo> _globalSecondaryIndexes;
    private List`1<LocalSecondaryIndexInfo> _localSecondaryIndexes;
    private SSEDescription _sseDescription;
    private StreamSpecification _streamDescription;
    private TimeToLiveDescription _timeToLiveDescription;
    public List`1<GlobalSecondaryIndexInfo> GlobalSecondaryIndexes { get; public set; }
    public List`1<LocalSecondaryIndexInfo> LocalSecondaryIndexes { get; public set; }
    public SSEDescription SSEDescription { get; public set; }
    public StreamSpecification StreamDescription { get; public set; }
    public TimeToLiveDescription TimeToLiveDescription { get; public set; }
    public List`1<GlobalSecondaryIndexInfo> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(List`1<GlobalSecondaryIndexInfo> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public List`1<LocalSecondaryIndexInfo> get_LocalSecondaryIndexes();
    public void set_LocalSecondaryIndexes(List`1<LocalSecondaryIndexInfo> value);
    internal bool IsSetLocalSecondaryIndexes();
    public SSEDescription get_SSEDescription();
    public void set_SSEDescription(SSEDescription value);
    internal bool IsSetSSEDescription();
    public StreamSpecification get_StreamDescription();
    public void set_StreamDescription(StreamSpecification value);
    internal bool IsSetStreamDescription();
    public TimeToLiveDescription get_TimeToLiveDescription();
    public void set_TimeToLiveDescription(TimeToLiveDescription value);
    internal bool IsSetTimeToLiveDescription();
}
public class Amazon.DynamoDBv2.Model.SSEDescription : object {
    private Nullable`1<DateTime> _inaccessibleEncryptionDateTime;
    private string _kmsMasterKeyArn;
    private SSEType _sseType;
    private SSEStatus _status;
    public Nullable`1<DateTime> InaccessibleEncryptionDateTime { get; public set; }
    public string KMSMasterKeyArn { get; public set; }
    public SSEType SSEType { get; public set; }
    public SSEStatus Status { get; public set; }
    public Nullable`1<DateTime> get_InaccessibleEncryptionDateTime();
    public void set_InaccessibleEncryptionDateTime(Nullable`1<DateTime> value);
    internal bool IsSetInaccessibleEncryptionDateTime();
    public string get_KMSMasterKeyArn();
    public void set_KMSMasterKeyArn(string value);
    internal bool IsSetKMSMasterKeyArn();
    public SSEType get_SSEType();
    public void set_SSEType(SSEType value);
    internal bool IsSetSSEType();
    public SSEStatus get_Status();
    public void set_Status(SSEStatus value);
    internal bool IsSetStatus();
}
public class Amazon.DynamoDBv2.Model.SSESpecification : object {
    private Nullable`1<bool> _enabled;
    private string _kmsMasterKeyId;
    private SSEType _sseType;
    public Nullable`1<bool> Enabled { get; public set; }
    public string KMSMasterKeyId { get; public set; }
    public SSEType SSEType { get; public set; }
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
    public string get_KMSMasterKeyId();
    public void set_KMSMasterKeyId(string value);
    internal bool IsSetKMSMasterKeyId();
    public SSEType get_SSEType();
    public void set_SSEType(SSEType value);
    internal bool IsSetSSEType();
}
public class Amazon.DynamoDBv2.Model.StreamDescription : object {
    private Nullable`1<DateTime> _creationRequestDateTime;
    private List`1<KeySchemaElement> _keySchema;
    private string _lastEvaluatedShardId;
    private List`1<Shard> _shards;
    private string _streamArn;
    private string _streamLabel;
    private StreamStatus _streamStatus;
    private StreamViewType _streamViewType;
    private string _tableName;
    public Nullable`1<DateTime> CreationRequestDateTime { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    [AWSPropertyAttribute]
public string LastEvaluatedShardId { get; public set; }
    public List`1<Shard> Shards { get; public set; }
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    public string StreamLabel { get; public set; }
    public StreamStatus StreamStatus { get; public set; }
    public StreamViewType StreamViewType { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public Nullable`1<DateTime> get_CreationRequestDateTime();
    public void set_CreationRequestDateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationRequestDateTime();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public string get_LastEvaluatedShardId();
    public void set_LastEvaluatedShardId(string value);
    internal bool IsSetLastEvaluatedShardId();
    public List`1<Shard> get_Shards();
    public void set_Shards(List`1<Shard> value);
    internal bool IsSetShards();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_StreamLabel();
    public void set_StreamLabel(string value);
    internal bool IsSetStreamLabel();
    public StreamStatus get_StreamStatus();
    public void set_StreamStatus(StreamStatus value);
    internal bool IsSetStreamStatus();
    public StreamViewType get_StreamViewType();
    public void set_StreamViewType(StreamViewType value);
    internal bool IsSetStreamViewType();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.StreamRecord : object {
    private Nullable`1<DateTime> _approximateCreationDateTime;
    private Dictionary`2<string, AttributeValue> _keys;
    private Dictionary`2<string, AttributeValue> _newImage;
    private Dictionary`2<string, AttributeValue> _oldImage;
    private string _sequenceNumber;
    private Nullable`1<long> _sizeBytes;
    private StreamViewType _streamViewType;
    public Nullable`1<DateTime> ApproximateCreationDateTime { get; public set; }
    public Dictionary`2<string, AttributeValue> Keys { get; public set; }
    public Dictionary`2<string, AttributeValue> NewImage { get; public set; }
    public Dictionary`2<string, AttributeValue> OldImage { get; public set; }
    [AWSPropertyAttribute]
public string SequenceNumber { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> SizeBytes { get; public set; }
    public StreamViewType StreamViewType { get; public set; }
    public Nullable`1<DateTime> get_ApproximateCreationDateTime();
    public void set_ApproximateCreationDateTime(Nullable`1<DateTime> value);
    internal bool IsSetApproximateCreationDateTime();
    public Dictionary`2<string, AttributeValue> get_Keys();
    public void set_Keys(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKeys();
    public Dictionary`2<string, AttributeValue> get_NewImage();
    public void set_NewImage(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetNewImage();
    public Dictionary`2<string, AttributeValue> get_OldImage();
    public void set_OldImage(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetOldImage();
    public string get_SequenceNumber();
    public void set_SequenceNumber(string value);
    internal bool IsSetSequenceNumber();
    public Nullable`1<long> get_SizeBytes();
    public void set_SizeBytes(Nullable`1<long> value);
    internal bool IsSetSizeBytes();
    public StreamViewType get_StreamViewType();
    public void set_StreamViewType(StreamViewType value);
    internal bool IsSetStreamViewType();
}
public class Amazon.DynamoDBv2.Model.StreamSpecification : object {
    private Nullable`1<bool> _streamEnabled;
    private StreamViewType _streamViewType;
    [AWSPropertyAttribute]
public Nullable`1<bool> StreamEnabled { get; public set; }
    public StreamViewType StreamViewType { get; public set; }
    public Nullable`1<bool> get_StreamEnabled();
    public void set_StreamEnabled(Nullable`1<bool> value);
    internal bool IsSetStreamEnabled();
    public StreamViewType get_StreamViewType();
    public void set_StreamViewType(StreamViewType value);
    internal bool IsSetStreamViewType();
}
public class Amazon.DynamoDBv2.Model.StreamSummary : object {
    private string _streamArn;
    private string _streamLabel;
    private string _tableName;
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    public string StreamLabel { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_StreamLabel();
    public void set_StreamLabel(string value);
    internal bool IsSetStreamLabel();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.TableAlreadyExistsException : AmazonDynamoDBException {
    public TableAlreadyExistsException(string message);
    public TableAlreadyExistsException(string message, Exception innerException);
    public TableAlreadyExistsException(Exception innerException);
    public TableAlreadyExistsException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TableAlreadyExistsException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.TableAutoScalingDescription : object {
    private List`1<ReplicaAutoScalingDescription> _replicas;
    private string _tableName;
    private TableStatus _tableStatus;
    public List`1<ReplicaAutoScalingDescription> Replicas { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public TableStatus TableStatus { get; public set; }
    public List`1<ReplicaAutoScalingDescription> get_Replicas();
    public void set_Replicas(List`1<ReplicaAutoScalingDescription> value);
    internal bool IsSetReplicas();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TableStatus get_TableStatus();
    public void set_TableStatus(TableStatus value);
    internal bool IsSetTableStatus();
}
public class Amazon.DynamoDBv2.Model.TableClassSummary : object {
    private Nullable`1<DateTime> _lastUpdateDateTime;
    private TableClass _tableClass;
    public Nullable`1<DateTime> LastUpdateDateTime { get; public set; }
    public TableClass TableClass { get; public set; }
    public Nullable`1<DateTime> get_LastUpdateDateTime();
    public void set_LastUpdateDateTime(Nullable`1<DateTime> value);
    internal bool IsSetLastUpdateDateTime();
    public TableClass get_TableClass();
    public void set_TableClass(TableClass value);
    internal bool IsSetTableClass();
}
public class Amazon.DynamoDBv2.Model.TableCreationParameters : object {
    private List`1<AttributeDefinition> _attributeDefinitions;
    private BillingMode _billingMode;
    private List`1<GlobalSecondaryIndex> _globalSecondaryIndexes;
    private List`1<KeySchemaElement> _keySchema;
    private OnDemandThroughput _onDemandThroughput;
    private ProvisionedThroughput _provisionedThroughput;
    private SSESpecification _sseSpecification;
    private string _tableName;
    [AWSPropertyAttribute]
public List`1<AttributeDefinition> AttributeDefinitions { get; public set; }
    public BillingMode BillingMode { get; public set; }
    public List`1<GlobalSecondaryIndex> GlobalSecondaryIndexes { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    public OnDemandThroughput OnDemandThroughput { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public SSESpecification SSESpecification { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public List`1<AttributeDefinition> get_AttributeDefinitions();
    public void set_AttributeDefinitions(List`1<AttributeDefinition> value);
    internal bool IsSetAttributeDefinitions();
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public List`1<GlobalSecondaryIndex> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(List`1<GlobalSecondaryIndex> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public OnDemandThroughput get_OnDemandThroughput();
    public void set_OnDemandThroughput(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughput();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
    public SSESpecification get_SSESpecification();
    public void set_SSESpecification(SSESpecification value);
    internal bool IsSetSSESpecification();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.TableDescription : object {
    private ArchivalSummary _archivalSummary;
    private List`1<AttributeDefinition> _attributeDefinitions;
    private BillingModeSummary _billingModeSummary;
    private Nullable`1<DateTime> _creationDateTime;
    private Nullable`1<bool> _deletionProtectionEnabled;
    private List`1<GlobalSecondaryIndexDescription> _globalSecondaryIndexes;
    private string _globalTableVersion;
    private Nullable`1<long> _itemCount;
    private List`1<KeySchemaElement> _keySchema;
    private string _latestStreamArn;
    private string _latestStreamLabel;
    private List`1<LocalSecondaryIndexDescription> _localSecondaryIndexes;
    private OnDemandThroughput _onDemandThroughput;
    private ProvisionedThroughputDescription _provisionedThroughput;
    private List`1<ReplicaDescription> _replicas;
    private RestoreSummary _restoreSummary;
    private SSEDescription _sseDescription;
    private StreamSpecification _streamSpecification;
    private string _tableArn;
    private TableClassSummary _tableClassSummary;
    private string _tableId;
    private string _tableName;
    private Nullable`1<long> _tableSizeBytes;
    private TableStatus _tableStatus;
    public ArchivalSummary ArchivalSummary { get; public set; }
    public List`1<AttributeDefinition> AttributeDefinitions { get; public set; }
    public BillingModeSummary BillingModeSummary { get; public set; }
    public Nullable`1<DateTime> CreationDateTime { get; public set; }
    public Nullable`1<bool> DeletionProtectionEnabled { get; public set; }
    public List`1<GlobalSecondaryIndexDescription> GlobalSecondaryIndexes { get; public set; }
    public string GlobalTableVersion { get; public set; }
    public Nullable`1<long> ItemCount { get; public set; }
    [AWSPropertyAttribute]
public List`1<KeySchemaElement> KeySchema { get; public set; }
    [AWSPropertyAttribute]
public string LatestStreamArn { get; public set; }
    public string LatestStreamLabel { get; public set; }
    public List`1<LocalSecondaryIndexDescription> LocalSecondaryIndexes { get; public set; }
    public OnDemandThroughput OnDemandThroughput { get; public set; }
    public ProvisionedThroughputDescription ProvisionedThroughput { get; public set; }
    public List`1<ReplicaDescription> Replicas { get; public set; }
    public RestoreSummary RestoreSummary { get; public set; }
    public SSEDescription SSEDescription { get; public set; }
    public StreamSpecification StreamSpecification { get; public set; }
    public string TableArn { get; public set; }
    public TableClassSummary TableClassSummary { get; public set; }
    public string TableId { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public Nullable`1<long> TableSizeBytes { get; public set; }
    public TableStatus TableStatus { get; public set; }
    public ArchivalSummary get_ArchivalSummary();
    public void set_ArchivalSummary(ArchivalSummary value);
    internal bool IsSetArchivalSummary();
    public List`1<AttributeDefinition> get_AttributeDefinitions();
    public void set_AttributeDefinitions(List`1<AttributeDefinition> value);
    internal bool IsSetAttributeDefinitions();
    public BillingModeSummary get_BillingModeSummary();
    public void set_BillingModeSummary(BillingModeSummary value);
    internal bool IsSetBillingModeSummary();
    public Nullable`1<DateTime> get_CreationDateTime();
    public void set_CreationDateTime(Nullable`1<DateTime> value);
    internal bool IsSetCreationDateTime();
    public Nullable`1<bool> get_DeletionProtectionEnabled();
    public void set_DeletionProtectionEnabled(Nullable`1<bool> value);
    internal bool IsSetDeletionProtectionEnabled();
    public List`1<GlobalSecondaryIndexDescription> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(List`1<GlobalSecondaryIndexDescription> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public string get_GlobalTableVersion();
    public void set_GlobalTableVersion(string value);
    internal bool IsSetGlobalTableVersion();
    public Nullable`1<long> get_ItemCount();
    public void set_ItemCount(Nullable`1<long> value);
    internal bool IsSetItemCount();
    public List`1<KeySchemaElement> get_KeySchema();
    public void set_KeySchema(List`1<KeySchemaElement> value);
    internal bool IsSetKeySchema();
    public string get_LatestStreamArn();
    public void set_LatestStreamArn(string value);
    internal bool IsSetLatestStreamArn();
    public string get_LatestStreamLabel();
    public void set_LatestStreamLabel(string value);
    internal bool IsSetLatestStreamLabel();
    public List`1<LocalSecondaryIndexDescription> get_LocalSecondaryIndexes();
    public void set_LocalSecondaryIndexes(List`1<LocalSecondaryIndexDescription> value);
    internal bool IsSetLocalSecondaryIndexes();
    public OnDemandThroughput get_OnDemandThroughput();
    public void set_OnDemandThroughput(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughput();
    public ProvisionedThroughputDescription get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughputDescription value);
    internal bool IsSetProvisionedThroughput();
    public List`1<ReplicaDescription> get_Replicas();
    public void set_Replicas(List`1<ReplicaDescription> value);
    internal bool IsSetReplicas();
    public RestoreSummary get_RestoreSummary();
    public void set_RestoreSummary(RestoreSummary value);
    internal bool IsSetRestoreSummary();
    public SSEDescription get_SSEDescription();
    public void set_SSEDescription(SSEDescription value);
    internal bool IsSetSSEDescription();
    public StreamSpecification get_StreamSpecification();
    public void set_StreamSpecification(StreamSpecification value);
    internal bool IsSetStreamSpecification();
    public string get_TableArn();
    public void set_TableArn(string value);
    internal bool IsSetTableArn();
    public TableClassSummary get_TableClassSummary();
    public void set_TableClassSummary(TableClassSummary value);
    internal bool IsSetTableClassSummary();
    public string get_TableId();
    public void set_TableId(string value);
    internal bool IsSetTableId();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public Nullable`1<long> get_TableSizeBytes();
    public void set_TableSizeBytes(Nullable`1<long> value);
    internal bool IsSetTableSizeBytes();
    public TableStatus get_TableStatus();
    public void set_TableStatus(TableStatus value);
    internal bool IsSetTableStatus();
}
public class Amazon.DynamoDBv2.Model.TableInUseException : AmazonDynamoDBException {
    public TableInUseException(string message);
    public TableInUseException(string message, Exception innerException);
    public TableInUseException(Exception innerException);
    public TableInUseException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TableInUseException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.TableNotFoundException : AmazonDynamoDBException {
    public TableNotFoundException(string message);
    public TableNotFoundException(string message, Exception innerException);
    public TableNotFoundException(Exception innerException);
    public TableNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TableNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.Tag : object {
    private string _key;
    private string _value;
    [AWSPropertyAttribute]
public string Key { get; public set; }
    [AWSPropertyAttribute]
public string Value { get; public set; }
    public string get_Key();
    public void set_Key(string value);
    internal bool IsSetKey();
    public string get_Value();
    public void set_Value(string value);
    internal bool IsSetValue();
}
public class Amazon.DynamoDBv2.Model.TagResourceRequest : AmazonDynamoDBRequest {
    private string _resourceArn;
    private List`1<Tag> _tags;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<Tag> Tags { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<Tag> get_Tags();
    public void set_Tags(List`1<Tag> value);
    internal bool IsSetTags();
}
public class Amazon.DynamoDBv2.Model.TagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.DynamoDBv2.Model.TimeToLiveDescription : object {
    private string _attributeName;
    private TimeToLiveStatus _timeToLiveStatus;
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    public TimeToLiveStatus TimeToLiveStatus { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public TimeToLiveStatus get_TimeToLiveStatus();
    public void set_TimeToLiveStatus(TimeToLiveStatus value);
    internal bool IsSetTimeToLiveStatus();
}
public class Amazon.DynamoDBv2.Model.TimeToLiveSpecification : object {
    private string _attributeName;
    private Nullable`1<bool> _enabled;
    [AWSPropertyAttribute]
public string AttributeName { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public string get_AttributeName();
    public void set_AttributeName(string value);
    internal bool IsSetAttributeName();
    public Nullable`1<bool> get_Enabled();
    public void set_Enabled(Nullable`1<bool> value);
    internal bool IsSetEnabled();
}
public class Amazon.DynamoDBv2.Model.TransactGetItem : object {
    private Get _get;
    [AWSPropertyAttribute]
public Get Get { get; public set; }
    public Get get_Get();
    public void set_Get(Get value);
    internal bool IsSetGet();
}
public class Amazon.DynamoDBv2.Model.TransactGetItemsRequest : AmazonDynamoDBRequest {
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private List`1<TransactGetItem> _transactItems;
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    [AWSPropertyAttribute]
public List`1<TransactGetItem> TransactItems { get; public set; }
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public List`1<TransactGetItem> get_TransactItems();
    public void set_TransactItems(List`1<TransactGetItem> value);
    internal bool IsSetTransactItems();
}
public class Amazon.DynamoDBv2.Model.TransactGetItemsResponse : AmazonWebServiceResponse {
    private List`1<ConsumedCapacity> _consumedCapacity;
    private List`1<ItemResponse> _responses;
    public List`1<ConsumedCapacity> ConsumedCapacity { get; public set; }
    [AWSPropertyAttribute]
public List`1<ItemResponse> Responses { get; public set; }
    public List`1<ConsumedCapacity> get_ConsumedCapacity();
    public void set_ConsumedCapacity(List`1<ConsumedCapacity> value);
    internal bool IsSetConsumedCapacity();
    public List`1<ItemResponse> get_Responses();
    public void set_Responses(List`1<ItemResponse> value);
    internal bool IsSetResponses();
}
public class Amazon.DynamoDBv2.Model.TransactionCanceledException : AmazonDynamoDBException {
    private List`1<CancellationReason> _cancellationReasons;
    [AWSPropertyAttribute]
public List`1<CancellationReason> CancellationReasons { get; public set; }
    public TransactionCanceledException(string message);
    public TransactionCanceledException(string message, Exception innerException);
    public TransactionCanceledException(Exception innerException);
    public TransactionCanceledException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TransactionCanceledException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public List`1<CancellationReason> get_CancellationReasons();
    public void set_CancellationReasons(List`1<CancellationReason> value);
    internal bool IsSetCancellationReasons();
}
public class Amazon.DynamoDBv2.Model.TransactionConflictException : AmazonDynamoDBException {
    public TransactionConflictException(string message);
    public TransactionConflictException(string message, Exception innerException);
    public TransactionConflictException(Exception innerException);
    public TransactionConflictException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TransactionConflictException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.TransactionInProgressException : AmazonDynamoDBException {
    public TransactionInProgressException(string message);
    public TransactionInProgressException(string message, Exception innerException);
    public TransactionInProgressException(Exception innerException);
    public TransactionInProgressException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TransactionInProgressException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.TransactWriteItem : object {
    private ConditionCheck _conditionCheck;
    private Delete _delete;
    private Put _put;
    private Update _update;
    public ConditionCheck ConditionCheck { get; public set; }
    public Delete Delete { get; public set; }
    public Put Put { get; public set; }
    public Update Update { get; public set; }
    public ConditionCheck get_ConditionCheck();
    public void set_ConditionCheck(ConditionCheck value);
    internal bool IsSetConditionCheck();
    public Delete get_Delete();
    public void set_Delete(Delete value);
    internal bool IsSetDelete();
    public Put get_Put();
    public void set_Put(Put value);
    internal bool IsSetPut();
    public Update get_Update();
    public void set_Update(Update value);
    internal bool IsSetUpdate();
}
public class Amazon.DynamoDBv2.Model.TransactWriteItemsRequest : AmazonDynamoDBRequest {
    private string _clientRequestToken;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private ReturnItemCollectionMetrics _returnItemCollectionMetrics;
    private List`1<TransactWriteItem> _transactItems;
    [AWSPropertyAttribute]
public string ClientRequestToken { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public ReturnItemCollectionMetrics ReturnItemCollectionMetrics { get; public set; }
    [AWSPropertyAttribute]
public List`1<TransactWriteItem> TransactItems { get; public set; }
    public string get_ClientRequestToken();
    public void set_ClientRequestToken(string value);
    internal bool IsSetClientRequestToken();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public ReturnItemCollectionMetrics get_ReturnItemCollectionMetrics();
    public void set_ReturnItemCollectionMetrics(ReturnItemCollectionMetrics value);
    internal bool IsSetReturnItemCollectionMetrics();
    public List`1<TransactWriteItem> get_TransactItems();
    public void set_TransactItems(List`1<TransactWriteItem> value);
    internal bool IsSetTransactItems();
}
public class Amazon.DynamoDBv2.Model.TransactWriteItemsResponse : AmazonWebServiceResponse {
    private List`1<ConsumedCapacity> _consumedCapacity;
    private Dictionary`2<string, List`1<ItemCollectionMetrics>> _itemCollectionMetrics;
    public List`1<ConsumedCapacity> ConsumedCapacity { get; public set; }
    public Dictionary`2<string, List`1<ItemCollectionMetrics>> ItemCollectionMetrics { get; public set; }
    public List`1<ConsumedCapacity> get_ConsumedCapacity();
    public void set_ConsumedCapacity(List`1<ConsumedCapacity> value);
    internal bool IsSetConsumedCapacity();
    public Dictionary`2<string, List`1<ItemCollectionMetrics>> get_ItemCollectionMetrics();
    public void set_ItemCollectionMetrics(Dictionary`2<string, List`1<ItemCollectionMetrics>> value);
    internal bool IsSetItemCollectionMetrics();
}
public class Amazon.DynamoDBv2.Model.TrimmedDataAccessException : AmazonDynamoDBException {
    public TrimmedDataAccessException(string message);
    public TrimmedDataAccessException(string message, Exception innerException);
    public TrimmedDataAccessException(Exception innerException);
    public TrimmedDataAccessException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public TrimmedDataAccessException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
public class Amazon.DynamoDBv2.Model.UntagResourceRequest : AmazonDynamoDBRequest {
    private string _resourceArn;
    private List`1<string> _tagKeys;
    [AWSPropertyAttribute]
public string ResourceArn { get; public set; }
    [AWSPropertyAttribute]
public List`1<string> TagKeys { get; public set; }
    public string get_ResourceArn();
    public void set_ResourceArn(string value);
    internal bool IsSetResourceArn();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
}
public class Amazon.DynamoDBv2.Model.UntagResourceResponse : AmazonWebServiceResponse {
}
public class Amazon.DynamoDBv2.Model.Update : object {
    private string _conditionExpression;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private Dictionary`2<string, AttributeValue> _key;
    private ReturnValuesOnConditionCheckFailure _returnValuesOnConditionCheckFailure;
    private string _tableName;
    private string _updateExpression;
    public string ConditionExpression { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public string UpdateExpression { get; public set; }
    public string get_ConditionExpression();
    public void set_ConditionExpression(string value);
    internal bool IsSetConditionExpression();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
    public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
    internal bool IsSetReturnValuesOnConditionCheckFailure();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public string get_UpdateExpression();
    public void set_UpdateExpression(string value);
    internal bool IsSetUpdateExpression();
}
public class Amazon.DynamoDBv2.Model.UpdateContinuousBackupsRequest : AmazonDynamoDBRequest {
    private PointInTimeRecoverySpecification _pointInTimeRecoverySpecification;
    private string _tableName;
    [AWSPropertyAttribute]
public PointInTimeRecoverySpecification PointInTimeRecoverySpecification { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public PointInTimeRecoverySpecification get_PointInTimeRecoverySpecification();
    public void set_PointInTimeRecoverySpecification(PointInTimeRecoverySpecification value);
    internal bool IsSetPointInTimeRecoverySpecification();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.UpdateContinuousBackupsResponse : AmazonWebServiceResponse {
    private ContinuousBackupsDescription _continuousBackupsDescription;
    public ContinuousBackupsDescription ContinuousBackupsDescription { get; public set; }
    public ContinuousBackupsDescription get_ContinuousBackupsDescription();
    public void set_ContinuousBackupsDescription(ContinuousBackupsDescription value);
    internal bool IsSetContinuousBackupsDescription();
}
public class Amazon.DynamoDBv2.Model.UpdateContributorInsightsRequest : AmazonDynamoDBRequest {
    private ContributorInsightsAction _contributorInsightsAction;
    private string _indexName;
    private string _tableName;
    [AWSPropertyAttribute]
public ContributorInsightsAction ContributorInsightsAction { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public ContributorInsightsAction get_ContributorInsightsAction();
    public void set_ContributorInsightsAction(ContributorInsightsAction value);
    internal bool IsSetContributorInsightsAction();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.UpdateContributorInsightsResponse : AmazonWebServiceResponse {
    private ContributorInsightsStatus _contributorInsightsStatus;
    private string _indexName;
    private string _tableName;
    public ContributorInsightsStatus ContributorInsightsStatus { get; public set; }
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public ContributorInsightsStatus get_ContributorInsightsStatus();
    public void set_ContributorInsightsStatus(ContributorInsightsStatus value);
    internal bool IsSetContributorInsightsStatus();
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.UpdateGlobalSecondaryIndexAction : object {
    private string _indexName;
    private OnDemandThroughput _onDemandThroughput;
    private ProvisionedThroughput _provisionedThroughput;
    [AWSPropertyAttribute]
public string IndexName { get; public set; }
    public OnDemandThroughput OnDemandThroughput { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    public string get_IndexName();
    public void set_IndexName(string value);
    internal bool IsSetIndexName();
    public OnDemandThroughput get_OnDemandThroughput();
    public void set_OnDemandThroughput(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughput();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
}
public class Amazon.DynamoDBv2.Model.UpdateGlobalTableRequest : AmazonDynamoDBRequest {
    private string _globalTableName;
    private List`1<ReplicaUpdate> _replicaUpdates;
    [AWSPropertyAttribute]
public string GlobalTableName { get; public set; }
    [AWSPropertyAttribute]
public List`1<ReplicaUpdate> ReplicaUpdates { get; public set; }
    public string get_GlobalTableName();
    public void set_GlobalTableName(string value);
    internal bool IsSetGlobalTableName();
    public List`1<ReplicaUpdate> get_ReplicaUpdates();
    public void set_ReplicaUpdates(List`1<ReplicaUpdate> value);
    internal bool IsSetReplicaUpdates();
}
public class Amazon.DynamoDBv2.Model.UpdateGlobalTableResponse : AmazonWebServiceResponse {
    private GlobalTableDescription _globalTableDescription;
    public GlobalTableDescription GlobalTableDescription { get; public set; }
    public GlobalTableDescription get_GlobalTableDescription();
    public void set_GlobalTableDescription(GlobalTableDescription value);
    internal bool IsSetGlobalTableDescription();
}
public class Amazon.DynamoDBv2.Model.UpdateGlobalTableSettingsRequest : AmazonDynamoDBRequest {
    private BillingMode _globalTableBillingMode;
    private List`1<GlobalTableGlobalSecondaryIndexSettingsUpdate> _globalTableGlobalSecondaryIndexSettingsUpdate;
    private string _globalTableName;
    private AutoScalingSettingsUpdate _globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate;
    private Nullable`1<long> _globalTableProvisionedWriteCapacityUnits;
    private List`1<ReplicaSettingsUpdate> _replicaSettingsUpdate;
    public BillingMode GlobalTableBillingMode { get; public set; }
    [AWSPropertyAttribute]
public List`1<GlobalTableGlobalSecondaryIndexSettingsUpdate> GlobalTableGlobalSecondaryIndexSettingsUpdate { get; public set; }
    [AWSPropertyAttribute]
public string GlobalTableName { get; public set; }
    public AutoScalingSettingsUpdate GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate { get; public set; }
    [AWSPropertyAttribute]
public Nullable`1<long> GlobalTableProvisionedWriteCapacityUnits { get; public set; }
    [AWSPropertyAttribute]
public List`1<ReplicaSettingsUpdate> ReplicaSettingsUpdate { get; public set; }
    public BillingMode get_GlobalTableBillingMode();
    public void set_GlobalTableBillingMode(BillingMode value);
    internal bool IsSetGlobalTableBillingMode();
    public List`1<GlobalTableGlobalSecondaryIndexSettingsUpdate> get_GlobalTableGlobalSecondaryIndexSettingsUpdate();
    public void set_GlobalTableGlobalSecondaryIndexSettingsUpdate(List`1<GlobalTableGlobalSecondaryIndexSettingsUpdate> value);
    internal bool IsSetGlobalTableGlobalSecondaryIndexSettingsUpdate();
    public string get_GlobalTableName();
    public void set_GlobalTableName(string value);
    internal bool IsSetGlobalTableName();
    public AutoScalingSettingsUpdate get_GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate();
    public void set_GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate(AutoScalingSettingsUpdate value);
    internal bool IsSetGlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate();
    public Nullable`1<long> get_GlobalTableProvisionedWriteCapacityUnits();
    public void set_GlobalTableProvisionedWriteCapacityUnits(Nullable`1<long> value);
    internal bool IsSetGlobalTableProvisionedWriteCapacityUnits();
    public List`1<ReplicaSettingsUpdate> get_ReplicaSettingsUpdate();
    public void set_ReplicaSettingsUpdate(List`1<ReplicaSettingsUpdate> value);
    internal bool IsSetReplicaSettingsUpdate();
}
public class Amazon.DynamoDBv2.Model.UpdateGlobalTableSettingsResponse : AmazonWebServiceResponse {
    private string _globalTableName;
    private List`1<ReplicaSettingsDescription> _replicaSettings;
    [AWSPropertyAttribute]
public string GlobalTableName { get; public set; }
    public List`1<ReplicaSettingsDescription> ReplicaSettings { get; public set; }
    public string get_GlobalTableName();
    public void set_GlobalTableName(string value);
    internal bool IsSetGlobalTableName();
    public List`1<ReplicaSettingsDescription> get_ReplicaSettings();
    public void set_ReplicaSettings(List`1<ReplicaSettingsDescription> value);
    internal bool IsSetReplicaSettings();
}
public class Amazon.DynamoDBv2.Model.UpdateItemRequest : AmazonDynamoDBRequest {
    private Dictionary`2<string, AttributeValueUpdate> _attributeUpdates;
    private ConditionalOperator _conditionalOperator;
    private string _conditionExpression;
    private Dictionary`2<string, ExpectedAttributeValue> _expected;
    private Dictionary`2<string, string> _expressionAttributeNames;
    private Dictionary`2<string, AttributeValue> _expressionAttributeValues;
    private Dictionary`2<string, AttributeValue> _key;
    private ReturnConsumedCapacity _returnConsumedCapacity;
    private ReturnItemCollectionMetrics _returnItemCollectionMetrics;
    private ReturnValue _returnValues;
    private ReturnValuesOnConditionCheckFailure _returnValuesOnConditionCheckFailure;
    private string _tableName;
    private string _updateExpression;
    public Dictionary`2<string, AttributeValueUpdate> AttributeUpdates { get; public set; }
    public ConditionalOperator ConditionalOperator { get; public set; }
    public string ConditionExpression { get; public set; }
    public Dictionary`2<string, ExpectedAttributeValue> Expected { get; public set; }
    public Dictionary`2<string, string> ExpressionAttributeNames { get; public set; }
    public Dictionary`2<string, AttributeValue> ExpressionAttributeValues { get; public set; }
    [AWSPropertyAttribute]
public Dictionary`2<string, AttributeValue> Key { get; public set; }
    public ReturnConsumedCapacity ReturnConsumedCapacity { get; public set; }
    public ReturnItemCollectionMetrics ReturnItemCollectionMetrics { get; public set; }
    public ReturnValue ReturnValues { get; public set; }
    public ReturnValuesOnConditionCheckFailure ReturnValuesOnConditionCheckFailure { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public string UpdateExpression { get; public set; }
    public UpdateItemRequest(string tableName, Dictionary`2<string, AttributeValue> key, Dictionary`2<string, AttributeValueUpdate> attributeUpdates);
    public UpdateItemRequest(string tableName, Dictionary`2<string, AttributeValue> key, Dictionary`2<string, AttributeValueUpdate> attributeUpdates, ReturnValue returnValues);
    public Dictionary`2<string, AttributeValueUpdate> get_AttributeUpdates();
    public void set_AttributeUpdates(Dictionary`2<string, AttributeValueUpdate> value);
    internal bool IsSetAttributeUpdates();
    public ConditionalOperator get_ConditionalOperator();
    public void set_ConditionalOperator(ConditionalOperator value);
    internal bool IsSetConditionalOperator();
    public string get_ConditionExpression();
    public void set_ConditionExpression(string value);
    internal bool IsSetConditionExpression();
    public Dictionary`2<string, ExpectedAttributeValue> get_Expected();
    public void set_Expected(Dictionary`2<string, ExpectedAttributeValue> value);
    internal bool IsSetExpected();
    public Dictionary`2<string, string> get_ExpressionAttributeNames();
    public void set_ExpressionAttributeNames(Dictionary`2<string, string> value);
    internal bool IsSetExpressionAttributeNames();
    public Dictionary`2<string, AttributeValue> get_ExpressionAttributeValues();
    public void set_ExpressionAttributeValues(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetExpressionAttributeValues();
    public Dictionary`2<string, AttributeValue> get_Key();
    public void set_Key(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetKey();
    public ReturnConsumedCapacity get_ReturnConsumedCapacity();
    public void set_ReturnConsumedCapacity(ReturnConsumedCapacity value);
    internal bool IsSetReturnConsumedCapacity();
    public ReturnItemCollectionMetrics get_ReturnItemCollectionMetrics();
    public void set_ReturnItemCollectionMetrics(ReturnItemCollectionMetrics value);
    internal bool IsSetReturnItemCollectionMetrics();
    public ReturnValue get_ReturnValues();
    public void set_ReturnValues(ReturnValue value);
    internal bool IsSetReturnValues();
    public ReturnValuesOnConditionCheckFailure get_ReturnValuesOnConditionCheckFailure();
    public void set_ReturnValuesOnConditionCheckFailure(ReturnValuesOnConditionCheckFailure value);
    internal bool IsSetReturnValuesOnConditionCheckFailure();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public string get_UpdateExpression();
    public void set_UpdateExpression(string value);
    internal bool IsSetUpdateExpression();
}
public class Amazon.DynamoDBv2.Model.UpdateItemResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, AttributeValue> _attributes;
    private ConsumedCapacity _consumedCapacity;
    private ItemCollectionMetrics _itemCollectionMetrics;
    public Dictionary`2<string, AttributeValue> Attributes { get; public set; }
    public ConsumedCapacity ConsumedCapacity { get; public set; }
    public ItemCollectionMetrics ItemCollectionMetrics { get; public set; }
    public Dictionary`2<string, AttributeValue> get_Attributes();
    public void set_Attributes(Dictionary`2<string, AttributeValue> value);
    internal bool IsSetAttributes();
    public ConsumedCapacity get_ConsumedCapacity();
    public void set_ConsumedCapacity(ConsumedCapacity value);
    internal bool IsSetConsumedCapacity();
    public ItemCollectionMetrics get_ItemCollectionMetrics();
    public void set_ItemCollectionMetrics(ItemCollectionMetrics value);
    internal bool IsSetItemCollectionMetrics();
}
public class Amazon.DynamoDBv2.Model.UpdateKinesisStreamingConfiguration : object {
    private ApproximateCreationDateTimePrecision _approximateCreationDateTimePrecision;
    public ApproximateCreationDateTimePrecision ApproximateCreationDateTimePrecision { get; public set; }
    public ApproximateCreationDateTimePrecision get_ApproximateCreationDateTimePrecision();
    public void set_ApproximateCreationDateTimePrecision(ApproximateCreationDateTimePrecision value);
    internal bool IsSetApproximateCreationDateTimePrecision();
}
public class Amazon.DynamoDBv2.Model.UpdateKinesisStreamingDestinationRequest : AmazonDynamoDBRequest {
    private string _streamArn;
    private string _tableName;
    private UpdateKinesisStreamingConfiguration _updateKinesisStreamingConfiguration;
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public UpdateKinesisStreamingConfiguration UpdateKinesisStreamingConfiguration { get; public set; }
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public UpdateKinesisStreamingConfiguration get_UpdateKinesisStreamingConfiguration();
    public void set_UpdateKinesisStreamingConfiguration(UpdateKinesisStreamingConfiguration value);
    internal bool IsSetUpdateKinesisStreamingConfiguration();
}
public class Amazon.DynamoDBv2.Model.UpdateKinesisStreamingDestinationResponse : AmazonWebServiceResponse {
    private DestinationStatus _destinationStatus;
    private string _streamArn;
    private string _tableName;
    private UpdateKinesisStreamingConfiguration _updateKinesisStreamingConfiguration;
    public DestinationStatus DestinationStatus { get; public set; }
    [AWSPropertyAttribute]
public string StreamArn { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public UpdateKinesisStreamingConfiguration UpdateKinesisStreamingConfiguration { get; public set; }
    public DestinationStatus get_DestinationStatus();
    public void set_DestinationStatus(DestinationStatus value);
    internal bool IsSetDestinationStatus();
    public string get_StreamArn();
    public void set_StreamArn(string value);
    internal bool IsSetStreamArn();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public UpdateKinesisStreamingConfiguration get_UpdateKinesisStreamingConfiguration();
    public void set_UpdateKinesisStreamingConfiguration(UpdateKinesisStreamingConfiguration value);
    internal bool IsSetUpdateKinesisStreamingConfiguration();
}
public class Amazon.DynamoDBv2.Model.UpdateReplicationGroupMemberAction : object {
    private List`1<ReplicaGlobalSecondaryIndex> _globalSecondaryIndexes;
    private string _kmsMasterKeyId;
    private OnDemandThroughputOverride _onDemandThroughputOverride;
    private ProvisionedThroughputOverride _provisionedThroughputOverride;
    private string _regionName;
    private TableClass _tableClassOverride;
    [AWSPropertyAttribute]
public List`1<ReplicaGlobalSecondaryIndex> GlobalSecondaryIndexes { get; public set; }
    public string KMSMasterKeyId { get; public set; }
    public OnDemandThroughputOverride OnDemandThroughputOverride { get; public set; }
    public ProvisionedThroughputOverride ProvisionedThroughputOverride { get; public set; }
    [AWSPropertyAttribute]
public string RegionName { get; public set; }
    public TableClass TableClassOverride { get; public set; }
    public List`1<ReplicaGlobalSecondaryIndex> get_GlobalSecondaryIndexes();
    public void set_GlobalSecondaryIndexes(List`1<ReplicaGlobalSecondaryIndex> value);
    internal bool IsSetGlobalSecondaryIndexes();
    public string get_KMSMasterKeyId();
    public void set_KMSMasterKeyId(string value);
    internal bool IsSetKMSMasterKeyId();
    public OnDemandThroughputOverride get_OnDemandThroughputOverride();
    public void set_OnDemandThroughputOverride(OnDemandThroughputOverride value);
    internal bool IsSetOnDemandThroughputOverride();
    public ProvisionedThroughputOverride get_ProvisionedThroughputOverride();
    public void set_ProvisionedThroughputOverride(ProvisionedThroughputOverride value);
    internal bool IsSetProvisionedThroughputOverride();
    public string get_RegionName();
    public void set_RegionName(string value);
    internal bool IsSetRegionName();
    public TableClass get_TableClassOverride();
    public void set_TableClassOverride(TableClass value);
    internal bool IsSetTableClassOverride();
}
public class Amazon.DynamoDBv2.Model.UpdateTableReplicaAutoScalingRequest : AmazonDynamoDBRequest {
    private List`1<GlobalSecondaryIndexAutoScalingUpdate> _globalSecondaryIndexUpdates;
    private AutoScalingSettingsUpdate _provisionedWriteCapacityAutoScalingUpdate;
    private List`1<ReplicaAutoScalingUpdate> _replicaUpdates;
    private string _tableName;
    [AWSPropertyAttribute]
public List`1<GlobalSecondaryIndexAutoScalingUpdate> GlobalSecondaryIndexUpdates { get; public set; }
    public AutoScalingSettingsUpdate ProvisionedWriteCapacityAutoScalingUpdate { get; public set; }
    [AWSPropertyAttribute]
public List`1<ReplicaAutoScalingUpdate> ReplicaUpdates { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public List`1<GlobalSecondaryIndexAutoScalingUpdate> get_GlobalSecondaryIndexUpdates();
    public void set_GlobalSecondaryIndexUpdates(List`1<GlobalSecondaryIndexAutoScalingUpdate> value);
    internal bool IsSetGlobalSecondaryIndexUpdates();
    public AutoScalingSettingsUpdate get_ProvisionedWriteCapacityAutoScalingUpdate();
    public void set_ProvisionedWriteCapacityAutoScalingUpdate(AutoScalingSettingsUpdate value);
    internal bool IsSetProvisionedWriteCapacityAutoScalingUpdate();
    public List`1<ReplicaAutoScalingUpdate> get_ReplicaUpdates();
    public void set_ReplicaUpdates(List`1<ReplicaAutoScalingUpdate> value);
    internal bool IsSetReplicaUpdates();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.UpdateTableReplicaAutoScalingResponse : AmazonWebServiceResponse {
    private TableAutoScalingDescription _tableAutoScalingDescription;
    public TableAutoScalingDescription TableAutoScalingDescription { get; public set; }
    public TableAutoScalingDescription get_TableAutoScalingDescription();
    public void set_TableAutoScalingDescription(TableAutoScalingDescription value);
    internal bool IsSetTableAutoScalingDescription();
}
public class Amazon.DynamoDBv2.Model.UpdateTableRequest : AmazonDynamoDBRequest {
    private List`1<AttributeDefinition> _attributeDefinitions;
    private BillingMode _billingMode;
    private Nullable`1<bool> _deletionProtectionEnabled;
    private List`1<GlobalSecondaryIndexUpdate> _globalSecondaryIndexUpdates;
    private OnDemandThroughput _onDemandThroughput;
    private ProvisionedThroughput _provisionedThroughput;
    private List`1<ReplicationGroupUpdate> _replicaUpdates;
    private SSESpecification _sseSpecification;
    private StreamSpecification _streamSpecification;
    private TableClass _tableClass;
    private string _tableName;
    public List`1<AttributeDefinition> AttributeDefinitions { get; public set; }
    public BillingMode BillingMode { get; public set; }
    public Nullable`1<bool> DeletionProtectionEnabled { get; public set; }
    public List`1<GlobalSecondaryIndexUpdate> GlobalSecondaryIndexUpdates { get; public set; }
    public OnDemandThroughput OnDemandThroughput { get; public set; }
    public ProvisionedThroughput ProvisionedThroughput { get; public set; }
    [AWSPropertyAttribute]
public List`1<ReplicationGroupUpdate> ReplicaUpdates { get; public set; }
    public SSESpecification SSESpecification { get; public set; }
    public StreamSpecification StreamSpecification { get; public set; }
    public TableClass TableClass { get; public set; }
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    public UpdateTableRequest(string tableName, ProvisionedThroughput provisionedThroughput);
    public List`1<AttributeDefinition> get_AttributeDefinitions();
    public void set_AttributeDefinitions(List`1<AttributeDefinition> value);
    internal bool IsSetAttributeDefinitions();
    public BillingMode get_BillingMode();
    public void set_BillingMode(BillingMode value);
    internal bool IsSetBillingMode();
    public Nullable`1<bool> get_DeletionProtectionEnabled();
    public void set_DeletionProtectionEnabled(Nullable`1<bool> value);
    internal bool IsSetDeletionProtectionEnabled();
    public List`1<GlobalSecondaryIndexUpdate> get_GlobalSecondaryIndexUpdates();
    public void set_GlobalSecondaryIndexUpdates(List`1<GlobalSecondaryIndexUpdate> value);
    internal bool IsSetGlobalSecondaryIndexUpdates();
    public OnDemandThroughput get_OnDemandThroughput();
    public void set_OnDemandThroughput(OnDemandThroughput value);
    internal bool IsSetOnDemandThroughput();
    public ProvisionedThroughput get_ProvisionedThroughput();
    public void set_ProvisionedThroughput(ProvisionedThroughput value);
    internal bool IsSetProvisionedThroughput();
    public List`1<ReplicationGroupUpdate> get_ReplicaUpdates();
    public void set_ReplicaUpdates(List`1<ReplicationGroupUpdate> value);
    internal bool IsSetReplicaUpdates();
    public SSESpecification get_SSESpecification();
    public void set_SSESpecification(SSESpecification value);
    internal bool IsSetSSESpecification();
    public StreamSpecification get_StreamSpecification();
    public void set_StreamSpecification(StreamSpecification value);
    internal bool IsSetStreamSpecification();
    public TableClass get_TableClass();
    public void set_TableClass(TableClass value);
    internal bool IsSetTableClass();
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
}
public class Amazon.DynamoDBv2.Model.UpdateTableResponse : AmazonWebServiceResponse {
    private TableDescription _tableDescription;
    public TableDescription TableDescription { get; public set; }
    public TableDescription get_TableDescription();
    public void set_TableDescription(TableDescription value);
    internal bool IsSetTableDescription();
}
public class Amazon.DynamoDBv2.Model.UpdateTimeToLiveRequest : AmazonDynamoDBRequest {
    private string _tableName;
    private TimeToLiveSpecification _timeToLiveSpecification;
    [AWSPropertyAttribute]
public string TableName { get; public set; }
    [AWSPropertyAttribute]
public TimeToLiveSpecification TimeToLiveSpecification { get; public set; }
    public string get_TableName();
    public void set_TableName(string value);
    internal bool IsSetTableName();
    public TimeToLiveSpecification get_TimeToLiveSpecification();
    public void set_TimeToLiveSpecification(TimeToLiveSpecification value);
    internal bool IsSetTimeToLiveSpecification();
}
public class Amazon.DynamoDBv2.Model.UpdateTimeToLiveResponse : AmazonWebServiceResponse {
    private TimeToLiveSpecification _timeToLiveSpecification;
    public TimeToLiveSpecification TimeToLiveSpecification { get; public set; }
    public TimeToLiveSpecification get_TimeToLiveSpecification();
    public void set_TimeToLiveSpecification(TimeToLiveSpecification value);
    internal bool IsSetTimeToLiveSpecification();
}
public class Amazon.DynamoDBv2.Model.WriteRequest : object {
    private DeleteRequest _deleteRequest;
    private PutRequest _putRequest;
    public DeleteRequest DeleteRequest { get; public set; }
    public PutRequest PutRequest { get; public set; }
    public WriteRequest(PutRequest putRequest);
    public WriteRequest(DeleteRequest deleteRequest);
    public DeleteRequest get_DeleteRequest();
    public void set_DeleteRequest(DeleteRequest value);
    internal bool IsSetDeleteRequest();
    public PutRequest get_PutRequest();
    public void set_PutRequest(PutRequest value);
    internal bool IsSetPutRequest();
}
public class Amazon.DynamoDBv2.OperationType : ConstantClass {
    public static OperationType INSERT;
    public static OperationType MODIFY;
    public static OperationType REMOVE;
    public OperationType(string value);
    private static OperationType();
    public static OperationType FindValue(string value);
    public static OperationType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.PointInTimeRecoveryStatus : ConstantClass {
    public static PointInTimeRecoveryStatus DISABLED;
    public static PointInTimeRecoveryStatus ENABLED;
    public PointInTimeRecoveryStatus(string value);
    private static PointInTimeRecoveryStatus();
    public static PointInTimeRecoveryStatus FindValue(string value);
    public static PointInTimeRecoveryStatus op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.PrimitiveCollectionConverterV1 : CollectionConverter {
    public virtual bool TryTo(object value, PrimitiveList& pl);
    public virtual bool TryFrom(PrimitiveList pl, Type targetType, Object& result);
    public virtual bool TryFrom(DynamoDBList l, Type targetType, Object& result);
}
public class Amazon.DynamoDBv2.ProjectionType : ConstantClass {
    public static ProjectionType ALL;
    public static ProjectionType INCLUDE;
    public static ProjectionType KEYS_ONLY;
    public ProjectionType(string value);
    private static ProjectionType();
    public static ProjectionType FindValue(string value);
    public static ProjectionType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ReplicaStatus : ConstantClass {
    public static ReplicaStatus ACTIVE;
    public static ReplicaStatus CREATING;
    public static ReplicaStatus CREATION_FAILED;
    public static ReplicaStatus DELETING;
    public static ReplicaStatus INACCESSIBLE_ENCRYPTION_CREDENTIALS;
    public static ReplicaStatus REGION_DISABLED;
    public static ReplicaStatus UPDATING;
    public ReplicaStatus(string value);
    private static ReplicaStatus();
    public static ReplicaStatus FindValue(string value);
    public static ReplicaStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ReturnConsumedCapacity : ConstantClass {
    public static ReturnConsumedCapacity INDEXES;
    public static ReturnConsumedCapacity NONE;
    public static ReturnConsumedCapacity TOTAL;
    public ReturnConsumedCapacity(string value);
    private static ReturnConsumedCapacity();
    public static ReturnConsumedCapacity FindValue(string value);
    public static ReturnConsumedCapacity op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ReturnItemCollectionMetrics : ConstantClass {
    public static ReturnItemCollectionMetrics NONE;
    public static ReturnItemCollectionMetrics SIZE;
    public ReturnItemCollectionMetrics(string value);
    private static ReturnItemCollectionMetrics();
    public static ReturnItemCollectionMetrics FindValue(string value);
    public static ReturnItemCollectionMetrics op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ReturnValue : ConstantClass {
    public static ReturnValue ALL_NEW;
    public static ReturnValue ALL_OLD;
    public static ReturnValue NONE;
    public static ReturnValue UPDATED_NEW;
    public static ReturnValue UPDATED_OLD;
    public ReturnValue(string value);
    private static ReturnValue();
    public static ReturnValue FindValue(string value);
    public static ReturnValue op_Implicit(string value);
}
public class Amazon.DynamoDBv2.ReturnValuesOnConditionCheckFailure : ConstantClass {
    public static ReturnValuesOnConditionCheckFailure ALL_OLD;
    public static ReturnValuesOnConditionCheckFailure NONE;
    public ReturnValuesOnConditionCheckFailure(string value);
    private static ReturnValuesOnConditionCheckFailure();
    public static ReturnValuesOnConditionCheckFailure FindValue(string value);
    public static ReturnValuesOnConditionCheckFailure op_Implicit(string value);
}
public class Amazon.DynamoDBv2.S3SseAlgorithm : ConstantClass {
    public static S3SseAlgorithm AES256;
    public static S3SseAlgorithm KMS;
    public S3SseAlgorithm(string value);
    private static S3SseAlgorithm();
    public static S3SseAlgorithm FindValue(string value);
    public static S3SseAlgorithm op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.SByteConverterV1 : Converter`1<sbyte> {
    protected virtual bool TryTo(sbyte value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, SByte& result);
}
internal class Amazon.DynamoDBv2.SByteConverterV2 : SByteConverterV1 {
}
public class Amazon.DynamoDBv2.ScalarAttributeType : ConstantClass {
    public static ScalarAttributeType B;
    public static ScalarAttributeType N;
    public static ScalarAttributeType S;
    public ScalarAttributeType(string value);
    private static ScalarAttributeType();
    public static ScalarAttributeType FindValue(string value);
    public static ScalarAttributeType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.Select : ConstantClass {
    public static Select ALL_ATTRIBUTES;
    public static Select ALL_PROJECTED_ATTRIBUTES;
    public static Select COUNT;
    public static Select SPECIFIC_ATTRIBUTES;
    public Select(string value);
    private static Select();
    public static Select FindValue(string value);
    public static Select op_Implicit(string value);
}
public class Amazon.DynamoDBv2.SetPropertyConverter`2 : object {
    protected static Type collectionType;
    protected static Type elementType;
    [CompilerGeneratedAttribute]
private DynamoDBEntryConversion <Conversion>k__BackingField;
    public DynamoDBEntryConversion Conversion { get; public set; }
    private static SetPropertyConverter`2();
    [CompilerGeneratedAttribute]
public DynamoDBEntryConversion get_Conversion();
    [CompilerGeneratedAttribute]
public void set_Conversion(DynamoDBEntryConversion value);
    public sealed virtual DynamoDBEntry ToEntry(object value);
    public sealed virtual object FromEntry(DynamoDBEntry entry);
}
public class Amazon.DynamoDBv2.ShardIteratorType : ConstantClass {
    public static ShardIteratorType AFTER_SEQUENCE_NUMBER;
    public static ShardIteratorType AT_SEQUENCE_NUMBER;
    public static ShardIteratorType LATEST;
    public static ShardIteratorType TRIM_HORIZON;
    public ShardIteratorType(string value);
    private static ShardIteratorType();
    public static ShardIteratorType FindValue(string value);
    public static ShardIteratorType op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.SingleConverterV1 : Converter`1<float> {
    protected virtual bool TryTo(float value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, Single& result);
}
internal class Amazon.DynamoDBv2.SingleConverterV2 : SingleConverterV1 {
}
public class Amazon.DynamoDBv2.SSEStatus : ConstantClass {
    public static SSEStatus DISABLED;
    public static SSEStatus DISABLING;
    public static SSEStatus ENABLED;
    public static SSEStatus ENABLING;
    public static SSEStatus UPDATING;
    public SSEStatus(string value);
    private static SSEStatus();
    public static SSEStatus FindValue(string value);
    public static SSEStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.SSEType : ConstantClass {
    public static SSEType AES256;
    public static SSEType KMS;
    public SSEType(string value);
    private static SSEType();
    public static SSEType FindValue(string value);
    public static SSEType op_Implicit(string value);
}
public class Amazon.DynamoDBv2.StreamStatus : ConstantClass {
    public static StreamStatus DISABLED;
    public static StreamStatus DISABLING;
    public static StreamStatus ENABLED;
    public static StreamStatus ENABLING;
    public StreamStatus(string value);
    private static StreamStatus();
    public static StreamStatus FindValue(string value);
    public static StreamStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.StreamViewType : ConstantClass {
    public static StreamViewType KEYS_ONLY;
    public static StreamViewType NEW_AND_OLD_IMAGES;
    public static StreamViewType NEW_IMAGE;
    public static StreamViewType OLD_IMAGE;
    public StreamViewType(string value);
    private static StreamViewType();
    public static StreamViewType FindValue(string value);
    public static StreamViewType op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.StringConverterV1 : Converter`1<string> {
    protected virtual bool TryTo(string value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, String& result);
}
internal class Amazon.DynamoDBv2.StringConverterV2 : StringConverterV1 {
}
public class Amazon.DynamoDBv2.TableClass : ConstantClass {
    public static TableClass STANDARD;
    public static TableClass STANDARD_INFREQUENT_ACCESS;
    public TableClass(string value);
    private static TableClass();
    public static TableClass FindValue(string value);
    public static TableClass op_Implicit(string value);
}
public class Amazon.DynamoDBv2.TableStatus : ConstantClass {
    public static TableStatus ACTIVE;
    public static TableStatus ARCHIVED;
    public static TableStatus ARCHIVING;
    public static TableStatus CREATING;
    public static TableStatus DELETING;
    public static TableStatus INACCESSIBLE_ENCRYPTION_CREDENTIALS;
    public static TableStatus UPDATING;
    public TableStatus(string value);
    private static TableStatus();
    public static TableStatus FindValue(string value);
    public static TableStatus op_Implicit(string value);
}
public class Amazon.DynamoDBv2.TimeToLiveStatus : ConstantClass {
    public static TimeToLiveStatus DISABLED;
    public static TimeToLiveStatus DISABLING;
    public static TimeToLiveStatus ENABLED;
    public static TimeToLiveStatus ENABLING;
    public TimeToLiveStatus(string value);
    private static TimeToLiveStatus();
    public static TimeToLiveStatus FindValue(string value);
    public static TimeToLiveStatus op_Implicit(string value);
}
internal class Amazon.DynamoDBv2.UInt16ConverterV1 : Converter`1<ushort> {
    protected virtual bool TryTo(ushort value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, UInt16& result);
}
internal class Amazon.DynamoDBv2.UInt16ConverterV2 : UInt16ConverterV1 {
}
internal class Amazon.DynamoDBv2.UInt32ConverterV1 : Converter`1<UInt32> {
    protected virtual bool TryTo(UInt32 value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, UInt32& result);
}
internal class Amazon.DynamoDBv2.UInt32ConverterV2 : UInt32ConverterV1 {
}
internal class Amazon.DynamoDBv2.UInt64ConverterV1 : Converter`1<ulong> {
    protected virtual bool TryTo(ulong value, Primitive& p);
    protected virtual bool TryFrom(Primitive p, Type targetType, UInt64& result);
}
internal class Amazon.DynamoDBv2.UInt64ConverterV2 : UInt64ConverterV1 {
}
public class Amazon.Util.DynamoDBContextConfig : object {
    [CompilerGeneratedAttribute]
private string <TableNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <TableAliases>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<Type, TypeMapping> <TypeMappings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MetadataCachingMode> <MetadataCachingMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableFetchingTableMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RetrieveDateTimeInUtc>k__BackingField;
    public string TableNamePrefix { get; public set; }
    public Dictionary`2<string, string> TableAliases { get; private set; }
    public Dictionary`2<Type, TypeMapping> TypeMappings { get; private set; }
    public Nullable`1<MetadataCachingMode> MetadataCachingMode { get; public set; }
    public Nullable`1<bool> DisableFetchingTableMetadata { get; public set; }
    public Nullable`1<bool> RetrieveDateTimeInUtc { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TableNamePrefix();
    [CompilerGeneratedAttribute]
public void set_TableNamePrefix(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_TableAliases();
    [CompilerGeneratedAttribute]
private void set_TableAliases(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<Type, TypeMapping> get_TypeMappings();
    [CompilerGeneratedAttribute]
private void set_TypeMappings(Dictionary`2<Type, TypeMapping> value);
    [CompilerGeneratedAttribute]
public Nullable`1<MetadataCachingMode> get_MetadataCachingMode();
    [CompilerGeneratedAttribute]
public void set_MetadataCachingMode(Nullable`1<MetadataCachingMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableFetchingTableMetadata();
    [CompilerGeneratedAttribute]
public void set_DisableFetchingTableMetadata(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RetrieveDateTimeInUtc();
    [CompilerGeneratedAttribute]
public void set_RetrieveDateTimeInUtc(Nullable`1<bool> value);
    public void AddAlias(TableAlias tableAlias);
    public void AddMapping(TypeMapping typeMapping);
}
public class Amazon.Util.PropertyConfig : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Attribute>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Ignore>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Converter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StoreAsEpoch>k__BackingField;
    public string Name { get; public set; }
    public string Attribute { get; public set; }
    public bool Ignore { get; public set; }
    public bool Version { get; public set; }
    public Type Converter { get; public set; }
    public bool StoreAsEpoch { get; public set; }
    public PropertyConfig(string propertyName);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Attribute();
    [CompilerGeneratedAttribute]
public void set_Attribute(string value);
    [CompilerGeneratedAttribute]
public bool get_Ignore();
    [CompilerGeneratedAttribute]
public void set_Ignore(bool value);
    [CompilerGeneratedAttribute]
public bool get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(bool value);
    [CompilerGeneratedAttribute]
public Type get_Converter();
    [CompilerGeneratedAttribute]
public void set_Converter(Type value);
    [CompilerGeneratedAttribute]
public bool get_StoreAsEpoch();
    [CompilerGeneratedAttribute]
public void set_StoreAsEpoch(bool value);
}
public class Amazon.Util.TableAlias : object {
    [CompilerGeneratedAttribute]
private string <FromTable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToTable>k__BackingField;
    public string FromTable { get; public set; }
    public string ToTable { get; public set; }
    public TableAlias(string fromTable, string toTable);
    [CompilerGeneratedAttribute]
public string get_FromTable();
    [CompilerGeneratedAttribute]
public void set_FromTable(string value);
    [CompilerGeneratedAttribute]
public string get_ToTable();
    [CompilerGeneratedAttribute]
public void set_ToTable(string value);
}
public class Amazon.Util.TypeMapping : object {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetTable>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, PropertyConfig> <PropertyConfigs>k__BackingField;
    public Type Type { get; public set; }
    public string TargetTable { get; public set; }
    public Dictionary`2<string, PropertyConfig> PropertyConfigs { get; private set; }
    public TypeMapping(Type type, string targetTable);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
    [CompilerGeneratedAttribute]
public string get_TargetTable();
    [CompilerGeneratedAttribute]
public void set_TargetTable(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, PropertyConfig> get_PropertyConfigs();
    [CompilerGeneratedAttribute]
private void set_PropertyConfigs(Dictionary`2<string, PropertyConfig> value);
    public void AddProperty(PropertyConfig propertyConfig);
}
